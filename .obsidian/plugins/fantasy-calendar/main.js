/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var Hm=Object.create;var _r=Object.defineProperty;var Wm=Object.getOwnPropertyDescriptor;var Gm=Object.getOwnPropertyNames;var Um=Object.getPrototypeOf,zm=Object.prototype.hasOwnProperty;var Vs=n=>_r(n,"__esModule",{value:!0});var Xe=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),Ym=(n,e)=>{Vs(n);for(var t in e)_r(n,t,{get:e[t],enumerable:!0})},Zm=(n,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of Gm(e))!zm.call(n,a)&&a!=="default"&&_r(n,a,{get:()=>e[a],enumerable:!(t=Wm(e,a))||t.enumerable});return n},Te=n=>Zm(Vs(_r(n!=null?Hm(Um(n)):{},"default",n&&n.__esModule&&"default"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var Er=Xe((Yi,Zi)=>{(function(n,e){typeof Yi=="object"&&typeof Zi!="undefined"?Zi.exports=e():typeof define=="function"&&define.amd?define(e):(n=typeof globalThis!="undefined"?globalThis:n||self,n["fast-copy"]=e())})(Yi,function(){"use strict";var n=Function.prototype.toString,e=Object.create,t=Object.defineProperty,a=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,o=Object.getOwnPropertySymbols,i=Object.getPrototypeOf,l=Object.prototype,s=l.hasOwnProperty,d=l.propertyIsEnumerable,u={SYMBOL_PROPERTIES:typeof o=="function",WEAKMAP:typeof WeakMap=="function"},c=function(){if(u.WEAKMAP)return new WeakMap;var C=e({has:function(B){return!!~C._keys.indexOf(B)},set:function(B,z){C._keys.push(B),C._values.push(z)},get:function(B){return C._values[C._keys.indexOf(B)]}});return C._keys=[],C._values=[],C},h=function(C,B){if(!C.constructor)return e(null);var z=C.constructor,L=C.__proto__||i(C);if(z===B.Object)return L===B.Object.prototype?{}:e(L);if(~n.call(z).indexOf("[native code]"))try{return new z}catch{}return e(L)},m=function(C,B,z,L){var N=h(C,B);L.set(C,N);for(var j in C)s.call(C,j)&&(N[j]=z(C[j],L));if(u.SYMBOL_PROPERTIES){var F=o(C),W=F.length;if(W)for(var I=0,G=void 0;I<W;I++)G=F[I],d.call(C,G)&&(N[G]=z(C[G],L))}return N},p=function(C,B,z,L){var N=h(C,B);L.set(C,N);var j=u.SYMBOL_PROPERTIES?r(C).concat(o(C)):r(C),F=j.length;if(F){for(var W=0,I=void 0,G=void 0;W<F;W++)if(I=j[W],I!=="callee"&&I!=="caller")if(G=a(C,I),G){!G.get&&!G.set&&(G.value=z(C[I],L));try{t(N,I,G)}catch{N[I]=G.value}}else N[I]=z(C[I],L)}return N},D=function(C){var B="";return C.global&&(B+="g"),C.ignoreCase&&(B+="i"),C.multiline&&(B+="m"),C.unicode&&(B+="u"),C.sticky&&(B+="y"),B},y=Array.isArray,A=function(){if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;console&&console.error&&console.error('Unable to locate global object, returning "this".')}();function _(C,B){var z=!!(B&&B.isStrict),L=B&&B.realm||A,N=z?p:m,j=function(F,W){if(!F||typeof F!="object")return F;if(W.has(F))return W.get(F);var I=F.constructor;if(I===L.Object)return N(F,L,j,W);var G;if(y(F)){if(z)return p(F,L,j,W);var ue=F.length;G=new I,W.set(F,G);for(var we=0;we<ue;we++)G[we]=j(F[we],W);return G}if(F instanceof L.Date)return new I(F.getTime());if(F instanceof L.RegExp)return G=new I(F.source,F.flags||D(F)),G.lastIndex=F.lastIndex,G;if(L.Map&&F instanceof L.Map)return G=new I,W.set(F,G),F.forEach(function(ge,Ce){G.set(Ce,j(ge,W))}),G;if(L.Set&&F instanceof L.Set)return G=new I,W.set(F,G),F.forEach(function(ge){G.add(j(ge,W))}),G;if(L.Blob&&F instanceof L.Blob)return F.slice(0,F.size,F.type);if(L.Buffer&&L.Buffer.isBuffer(F))return G=L.Buffer.allocUnsafe?L.Buffer.allocUnsafe(F.length):new I(F.length),W.set(F,G),F.copy(G),G;if(L.ArrayBuffer){if(L.ArrayBuffer.isView(F))return G=new I(F.buffer.slice(0)),W.set(F,G),G;if(F instanceof L.ArrayBuffer)return G=F.slice(0),W.set(F,G),G}return typeof F.then=="function"||F instanceof Error||L.WeakMap&&F instanceof L.WeakMap||L.WeakSet&&F instanceof L.WeakSet?F:N(F,L,j,W)};return j(C,c())}return _.default=_,_.strict=function(B,z){return _(B,{isStrict:!0,realm:z?z.realm:void 0})},_})});var Hs=Xe(Cr=>{"use strict";Object.defineProperty(Cr,"__esModule",{value:!0});Cr.default=void 0;var $m={sum:function(e){return e.reduce(function(t,a){return t+a})}},Km=$m;Cr.default=Km});var Ar=Xe((zb,Ws)=>{function Qm(n){return Object.prototype.toString.call(n).slice(8,-1)}Ws.exports=Qm});var $i=Xe((Yb,Gs)=>{function Xm(n){return!!n&&typeof n=="object"&&n.constructor===Object}Gs.exports=Xm});var kr=Xe((Zb,Us)=>{function Jm(n,e){return Object.prototype.hasOwnProperty.call(n,e)}Us.exports=Jm});var $s=Xe(($b,Zs)=>{var eg=kr(),xr,zs;function tg(){zs=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],xr=!0;for(var n in{toString:null})xr=!1}function ng(n,e,t){var a,r=0;xr==null&&tg();for(a in n)if(Ys(e,n,a,t)===!1)break;if(xr)for(var o=n.constructor,i=!!o&&n===o.prototype;(a=zs[r++])&&!((a!=="constructor"||!i&&eg(n,a))&&n[a]!==Object.prototype[a]&&Ys(e,n,a,t)===!1););}function Ys(n,e,t,a){return n.call(a,e[t],t,e)}Zs.exports=ng});var Ra=Xe((Kb,Ks)=>{var ag=kr(),rg=$s();function ig(n,e,t){rg(n,function(a,r){if(ag(n,r))return e.call(t,n[r],r,n)})}Ks.exports=ig});var Xs=Xe((Qb,Qs)=>{var og=Ra();function sg(n,e){for(var t=0,a=arguments.length,r;++t<a;)r=arguments[t],r!=null&&og(r,lg,n);return n}function lg(n,e){this[e]=n}Qs.exports=sg});var el=Xe((Xb,Js)=>{var ug=Ar(),cg=$i(),dg=Xs();function fg(n){switch(ug(n)){case"Object":return hg(n);case"Array":return gg(n);case"RegExp":return pg(n);case"Date":return mg(n);default:return n}}function hg(n){return cg(n)?dg({},n):n}function pg(n){var e="";return e+=n.multiline?"m":"",e+=n.global?"g":"",e+=n.ignoreCase?"i":"",new RegExp(n.source,e)}function mg(n){return new Date(+n)}function gg(n){return n.slice()}Js.exports=fg});var nl=Xe((Jb,tl)=>{var yg=el(),vg=Ra(),bg=Ar(),wg=$i();function Ki(n,e){switch(bg(n)){case"Object":return Dg(n,e);case"Array":return _g(n,e);default:return yg(n)}}function Dg(n,e){if(wg(n)){var t={};return vg(n,function(a,r){this[r]=Ki(a,e)},t),t}else return e?e(n):n}function _g(n,e){for(var t=[],a=-1,r=n.length,o;++a<r;)t[a]=Ki(n[a],e);return t}tl.exports=Ki});var Fr=Xe((ew,al)=>{function Eg(n,e){return n===e?n!==0||1/n==1/e:n!==n&&e!==e}al.exports=Eg});var Qi=Xe((tw,rl)=>{var Cg=Ar();function Ag(n,e){return Cg(n)===e}rl.exports=Ag});var Xi=Xe((nw,il)=>{var kg=Qi();function xg(n){return kg(n,"Object")}il.exports=xg});var Tr=Xe((aw,ol)=>{var Fg=Qi(),Tg=Array.isArray||function(n){return Fg(n,"Array")};ol.exports=Tg});var ll=Xe((rw,sl)=>{function Sg(n){return n}sl.exports=Sg});var cl=Xe((iw,ul)=>{function Bg(n){return function(e){return e[n]}}ul.exports=Bg});var hl=Xe((ow,fl)=>{var Ng=Ra(),dl=Tr();function Mg(n,e){for(var t=-1,a=n.length;++t<a;)if(Ji(n[t],e))return!0;return!1}function Ig(n,e){for(var t=-1,a=e.length;++t<a;)if(!Mg(n,e[t]))return!1;return!0}function Og(n,e){var t=!0;return Ng(e,function(a,r){if(!Ji(n[r],a))return t=!1}),t}function Ji(n,e){return n&&typeof n=="object"&&e&&typeof e=="object"?dl(n)&&dl(e)?Ig(n,e):Og(n,e):n===e}fl.exports=Ji});var eo=Xe((sw,pl)=>{var qg=ll(),Rg=cl(),Lg=hl();function Pg(n,e){if(n==null)return qg;switch(typeof n){case"function":return typeof e!="undefined"?function(t,a,r){return n.call(e,t,a,r)}:n;case"object":return function(t){return Lg(t,n)};case"string":case"number":return Rg(n)}}pl.exports=Pg});var gl=Xe((lw,ml)=>{var jg=Ra(),Vg=eo();function Hg(n,e,t){e=Vg(e,t);var a=!0;return jg(n,function(r,o){if(!e(r,o,n))return a=!1,!1}),a}ml.exports=Hg});var Dl=Xe((uw,wl)=>{var yl=kr(),vl=gl(),bl=Xi(),Wg=Fr();function Gg(n){return function(e,t){return yl(this,t)&&n(e,this[t])}}function Ug(n,e){return yl(this,e)}function zg(n,e,t){return t=t||Wg,!bl(n)||!bl(e)?t(n,e):vl(n,Gg(t),e)&&vl(e,Ug,n)}wl.exports=zg});var El=Xe((cw,_l)=>{var Yg=eo();function Zg(n,e,t){e=Yg(e,t);var a=!0;if(n==null)return a;for(var r=-1,o=n.length;++r<o;)if(!e(n[r],r,n)){a=!1;break}return a}_l.exports=Zg});var kl=Xe((dw,Al)=>{var $g=Fr(),Cl=Tr(),Kg=El();function Qg(n,e,t){return t=t||$g,!Cl(n)||!Cl(e)?t(n,e):n.length!==e.length?!1:Kg(n,Xg(t),e)}function Xg(n){return function(e,t){return t in this&&n(e,this[t])}}Al.exports=Qg});var Bl=Xe((fw,Sl)=>{var Jg=Fr(),xl=Xi(),Fl=Tr(),e2=Dl(),t2=kl();function Tl(n,e,t){t=t||Jg;var a=xl(n)&&xl(e),r=!a&&Fl(n)&&Fl(e);if(!a&&!r)return t(n,e);function o(l,s){return Tl(l,s,t)}var i=a?e2:t2;return i(n,e,o)}Sl.exports=Tl});var Nl=Xe((to,no)=>{(function(n,e){typeof to=="object"&&typeof no!="undefined"?no.exports=e():typeof define=="function"&&define.amd?define(e):n.chroma=e()})(to,function(){"use strict";for(var n=function(f,g,v){return g===void 0&&(g=0),v===void 0&&(v=1),f<g?g:f>v?v:f},e=function(f){f._clipped=!1,f._unclipped=f.slice(0);for(var g=0;g<=3;g++)g<3?((f[g]<0||f[g]>255)&&(f._clipped=!0),f[g]=n(f[g],0,255)):g===3&&(f[g]=n(f[g],0,1));return f},t={},a=0,r=["Boolean","Number","String","Function","Array","Date","RegExp","Undefined","Null"];a<r.length;a+=1){var o=r[a];t["[object "+o+"]"]=o.toLowerCase()}var i=function(f){return t[Object.prototype.toString.call(f)]||"object"},l=function(f,g){return g===void 0&&(g=null),f.length>=3?Array.prototype.slice.call(f):i(f[0])=="object"&&g?g.split("").filter(function(v){return f[0][v]!==void 0}).map(function(v){return f[0][v]}):f[0]},s=function(f){if(f.length<2)return null;var g=f.length-1;return i(f[g])=="string"?f[g].toLowerCase():null},d=Math.PI,u={clip_rgb:e,limit:n,type:i,unpack:l,last:s,PI:d,TWOPI:d*2,PITHIRD:d/3,DEG2RAD:d/180,RAD2DEG:180/d},c={format:{},autodetect:[]},h=u.last,m=u.clip_rgb,p=u.type,D=function(){for(var g=[],v=arguments.length;v--;)g[v]=arguments[v];var k=this;if(p(g[0])==="object"&&g[0].constructor&&g[0].constructor===this.constructor)return g[0];var S=h(g),M=!1;if(!S){M=!0,c.sorted||(c.autodetect=c.autodetect.sort(function(ne,J){return J.p-ne.p}),c.sorted=!0);for(var x=0,V=c.autodetect;x<V.length;x+=1){var H=V[x];if(S=H.test.apply(H,g),S)break}}if(c.format[S]){var $=c.format[S].apply(null,M?g:g.slice(0,-1));k._rgb=m($)}else throw new Error("unknown format: "+g);k._rgb.length===3&&k._rgb.push(1)};D.prototype.toString=function(){return p(this.hex)=="function"?this.hex():"["+this._rgb.join(",")+"]"};var y=D,A=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(A.Color,[null].concat(f)))};A.Color=y,A.version="2.1.2";var _=A,C=u.unpack,B=Math.max,z=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=C(f,"rgb"),k=v[0],S=v[1],M=v[2];k=k/255,S=S/255,M=M/255;var x=1-B(k,B(S,M)),V=x<1?1/(1-x):0,H=(1-k-x)*V,$=(1-S-x)*V,ne=(1-M-x)*V;return[H,$,ne,x]},L=z,N=u.unpack,j=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];f=N(f,"cmyk");var v=f[0],k=f[1],S=f[2],M=f[3],x=f.length>4?f[4]:1;return M===1?[0,0,0,x]:[v>=1?0:255*(1-v)*(1-M),k>=1?0:255*(1-k)*(1-M),S>=1?0:255*(1-S)*(1-M),x]},F=j,W=u.unpack,I=u.type;y.prototype.cmyk=function(){return L(this._rgb)},_.cmyk=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["cmyk"])))},c.format.cmyk=F,c.autodetect.push({p:2,test:function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];if(f=W(f,"cmyk"),I(f)==="array"&&f.length===4)return"cmyk"}});var G=u.unpack,ue=u.last,we=function(f){return Math.round(f*100)/100},ge=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=G(f,"hsla"),k=ue(f)||"lsa";return v[0]=we(v[0]||0),v[1]=we(v[1]*100)+"%",v[2]=we(v[2]*100)+"%",k==="hsla"||v.length>3&&v[3]<1?(v[3]=v.length>3?v[3]:1,k="hsla"):v.length=3,k+"("+v.join(",")+")"},Ce=ge,K=u.unpack,Z=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];f=K(f,"rgba");var v=f[0],k=f[1],S=f[2];v/=255,k/=255,S/=255;var M=Math.min(v,k,S),x=Math.max(v,k,S),V=(x+M)/2,H,$;return x===M?(H=0,$=Number.NaN):H=V<.5?(x-M)/(x+M):(x-M)/(2-x-M),v==x?$=(k-S)/(x-M):k==x?$=2+(S-v)/(x-M):S==x&&($=4+(v-k)/(x-M)),$*=60,$<0&&($+=360),f.length>3&&f[3]!==void 0?[$,H,V,f[3]]:[$,H,V]},he=Z,Se=u.unpack,ce=u.last,xe=Math.round,ze=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=Se(f,"rgba"),k=ce(f)||"rgb";return k.substr(0,3)=="hsl"?Ce(he(v),k):(v[0]=xe(v[0]),v[1]=xe(v[1]),v[2]=xe(v[2]),(k==="rgba"||v.length>3&&v[3]<1)&&(v[3]=v.length>3?v[3]:1,k="rgba"),k+"("+v.slice(0,k==="rgb"?3:4).join(",")+")")},tt=ze,je=u.unpack,ft=Math.round,Bt=function(){for(var f,g=[],v=arguments.length;v--;)g[v]=arguments[v];g=je(g,"hsl");var k=g[0],S=g[1],M=g[2],x,V,H;if(S===0)x=V=H=M*255;else{var $=[0,0,0],ne=[0,0,0],J=M<.5?M*(1+S):M+S-M*S,pe=2*M-J,fe=k/360;$[0]=fe+1/3,$[1]=fe,$[2]=fe-1/3;for(var Fe=0;Fe<3;Fe++)$[Fe]<0&&($[Fe]+=1),$[Fe]>1&&($[Fe]-=1),6*$[Fe]<1?ne[Fe]=pe+(J-pe)*6*$[Fe]:2*$[Fe]<1?ne[Fe]=J:3*$[Fe]<2?ne[Fe]=pe+(J-pe)*(2/3-$[Fe])*6:ne[Fe]=pe;f=[ft(ne[0]*255),ft(ne[1]*255),ft(ne[2]*255)],x=f[0],V=f[1],H=f[2]}return g.length>3?[x,V,H,g[3]]:[x,V,H,1]},ht=Bt,Et=/^rgb\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*\)$/,kt=/^rgba\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*,\s*([01]|[01]?\.\d+)\)$/,Vt=/^rgb\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/,pn=/^rgba\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/,Ut=/^hsl\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/,on=/^hsla\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/,ra=Math.round,le=function(f){f=f.toLowerCase().trim();var g;if(c.format.named)try{return c.format.named(f)}catch{}if(g=f.match(Et)){for(var v=g.slice(1,4),k=0;k<3;k++)v[k]=+v[k];return v[3]=1,v}if(g=f.match(kt)){for(var S=g.slice(1,5),M=0;M<4;M++)S[M]=+S[M];return S}if(g=f.match(Vt)){for(var x=g.slice(1,4),V=0;V<3;V++)x[V]=ra(x[V]*2.55);return x[3]=1,x}if(g=f.match(pn)){for(var H=g.slice(1,5),$=0;$<3;$++)H[$]=ra(H[$]*2.55);return H[3]=+H[3],H}if(g=f.match(Ut)){var ne=g.slice(1,4);ne[1]*=.01,ne[2]*=.01;var J=ht(ne);return J[3]=1,J}if(g=f.match(on)){var pe=g.slice(1,4);pe[1]*=.01,pe[2]*=.01;var fe=ht(pe);return fe[3]=+g[4],fe}};le.test=function(f){return Et.test(f)||kt.test(f)||Vt.test(f)||pn.test(f)||Ut.test(f)||on.test(f)};var Ma=le,pr=u.type;y.prototype.css=function(f){return tt(this._rgb,f)},_.css=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["css"])))},c.format.css=Ma,c.autodetect.push({p:5,test:function(f){for(var g=[],v=arguments.length-1;v-- >0;)g[v]=arguments[v+1];if(!g.length&&pr(f)==="string"&&Ma.test(f))return"css"}});var mr=u.unpack;c.format.gl=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=mr(f,"rgba");return v[0]*=255,v[1]*=255,v[2]*=255,v},_.gl=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["gl"])))},y.prototype.gl=function(){var f=this._rgb;return[f[0]/255,f[1]/255,f[2]/255,f[3]]};var mh=u.unpack,gh=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=mh(f,"rgb"),k=v[0],S=v[1],M=v[2],x=Math.min(k,S,M),V=Math.max(k,S,M),H=V-x,$=H*100/255,ne=x/(255-H)*100,J;return H===0?J=Number.NaN:(k===V&&(J=(S-M)/H),S===V&&(J=2+(M-k)/H),M===V&&(J=4+(k-S)/H),J*=60,J<0&&(J+=360)),[J,$,ne]},yh=gh,vh=u.unpack,bh=Math.floor,wh=function(){for(var f,g,v,k,S,M,x=[],V=arguments.length;V--;)x[V]=arguments[V];x=vh(x,"hcg");var H=x[0],$=x[1],ne=x[2],J,pe,fe;ne=ne*255;var Fe=$*255;if($===0)J=pe=fe=ne;else{H===360&&(H=0),H>360&&(H-=360),H<0&&(H+=360),H/=60;var Re=bh(H),Be=H-Re,Ge=ne*(1-$),$e=Ge+Fe*(1-Be),vt=Ge+Fe*Be,bt=Ge+Fe;switch(Re){case 0:f=[bt,vt,Ge],J=f[0],pe=f[1],fe=f[2];break;case 1:g=[$e,bt,Ge],J=g[0],pe=g[1],fe=g[2];break;case 2:v=[Ge,bt,vt],J=v[0],pe=v[1],fe=v[2];break;case 3:k=[Ge,$e,bt],J=k[0],pe=k[1],fe=k[2];break;case 4:S=[vt,Ge,bt],J=S[0],pe=S[1],fe=S[2];break;case 5:M=[bt,Ge,$e],J=M[0],pe=M[1],fe=M[2];break}}return[J,pe,fe,x.length>3?x[3]:1]},Dh=wh,_h=u.unpack,Eh=u.type;y.prototype.hcg=function(){return yh(this._rgb)},_.hcg=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["hcg"])))},c.format.hcg=Dh,c.autodetect.push({p:1,test:function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];if(f=_h(f,"hcg"),Eh(f)==="array"&&f.length===3)return"hcg"}});var Ch=u.unpack,Ah=u.last,gr=Math.round,kh=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=Ch(f,"rgba"),k=v[0],S=v[1],M=v[2],x=v[3],V=Ah(f)||"auto";x===void 0&&(x=1),V==="auto"&&(V=x<1?"rgba":"rgb"),k=gr(k),S=gr(S),M=gr(M);var H=k<<16|S<<8|M,$="000000"+H.toString(16);$=$.substr($.length-6);var ne="0"+gr(x*255).toString(16);switch(ne=ne.substr(ne.length-2),V.toLowerCase()){case"rgba":return"#"+$+ne;case"argb":return"#"+ne+$;default:return"#"+$}},ms=kh,xh=/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,Fh=/^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/,Th=function(f){if(f.match(xh)){(f.length===4||f.length===7)&&(f=f.substr(1)),f.length===3&&(f=f.split(""),f=f[0]+f[0]+f[1]+f[1]+f[2]+f[2]);var g=parseInt(f,16),v=g>>16,k=g>>8&255,S=g&255;return[v,k,S,1]}if(f.match(Fh)){(f.length===5||f.length===9)&&(f=f.substr(1)),f.length===4&&(f=f.split(""),f=f[0]+f[0]+f[1]+f[1]+f[2]+f[2]+f[3]+f[3]);var M=parseInt(f,16),x=M>>24&255,V=M>>16&255,H=M>>8&255,$=Math.round((M&255)/255*100)/100;return[x,V,H,$]}throw new Error("unknown hex color: "+f)},gs=Th,Sh=u.type;y.prototype.hex=function(f){return ms(this._rgb,f)},_.hex=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["hex"])))},c.format.hex=gs,c.autodetect.push({p:4,test:function(f){for(var g=[],v=arguments.length-1;v-- >0;)g[v]=arguments[v+1];if(!g.length&&Sh(f)==="string"&&[3,4,5,6,7,8,9].indexOf(f.length)>=0)return"hex"}});var Bh=u.unpack,ys=u.TWOPI,Nh=Math.min,Mh=Math.sqrt,Ih=Math.acos,Oh=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=Bh(f,"rgb"),k=v[0],S=v[1],M=v[2];k/=255,S/=255,M/=255;var x,V=Nh(k,S,M),H=(k+S+M)/3,$=H>0?1-V/H:0;return $===0?x=NaN:(x=(k-S+(k-M))/2,x/=Mh((k-S)*(k-S)+(k-M)*(S-M)),x=Ih(x),M>S&&(x=ys-x),x/=ys),[x*360,$,H]},qh=Oh,Rh=u.unpack,xi=u.limit,ia=u.TWOPI,Fi=u.PITHIRD,oa=Math.cos,Lh=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];f=Rh(f,"hsi");var v=f[0],k=f[1],S=f[2],M,x,V;return isNaN(v)&&(v=0),isNaN(k)&&(k=0),v>360&&(v-=360),v<0&&(v+=360),v/=360,v<1/3?(V=(1-k)/3,M=(1+k*oa(ia*v)/oa(Fi-ia*v))/3,x=1-(V+M)):v<2/3?(v-=1/3,M=(1-k)/3,x=(1+k*oa(ia*v)/oa(Fi-ia*v))/3,V=1-(M+x)):(v-=2/3,x=(1-k)/3,V=(1+k*oa(ia*v)/oa(Fi-ia*v))/3,M=1-(x+V)),M=xi(S*M*3),x=xi(S*x*3),V=xi(S*V*3),[M*255,x*255,V*255,f.length>3?f[3]:1]},Ph=Lh,jh=u.unpack,Vh=u.type;y.prototype.hsi=function(){return qh(this._rgb)},_.hsi=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["hsi"])))},c.format.hsi=Ph,c.autodetect.push({p:2,test:function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];if(f=jh(f,"hsi"),Vh(f)==="array"&&f.length===3)return"hsi"}});var Hh=u.unpack,Wh=u.type;y.prototype.hsl=function(){return he(this._rgb)},_.hsl=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["hsl"])))},c.format.hsl=ht,c.autodetect.push({p:2,test:function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];if(f=Hh(f,"hsl"),Wh(f)==="array"&&f.length===3)return"hsl"}});var Gh=u.unpack,Uh=Math.min,zh=Math.max,Yh=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];f=Gh(f,"rgb");var v=f[0],k=f[1],S=f[2],M=Uh(v,k,S),x=zh(v,k,S),V=x-M,H,$,ne;return ne=x/255,x===0?(H=Number.NaN,$=0):($=V/x,v===x&&(H=(k-S)/V),k===x&&(H=2+(S-v)/V),S===x&&(H=4+(v-k)/V),H*=60,H<0&&(H+=360)),[H,$,ne]},Zh=Yh,$h=u.unpack,Kh=Math.floor,Qh=function(){for(var f,g,v,k,S,M,x=[],V=arguments.length;V--;)x[V]=arguments[V];x=$h(x,"hsv");var H=x[0],$=x[1],ne=x[2],J,pe,fe;if(ne*=255,$===0)J=pe=fe=ne;else{H===360&&(H=0),H>360&&(H-=360),H<0&&(H+=360),H/=60;var Fe=Kh(H),Re=H-Fe,Be=ne*(1-$),Ge=ne*(1-$*Re),$e=ne*(1-$*(1-Re));switch(Fe){case 0:f=[ne,$e,Be],J=f[0],pe=f[1],fe=f[2];break;case 1:g=[Ge,ne,Be],J=g[0],pe=g[1],fe=g[2];break;case 2:v=[Be,ne,$e],J=v[0],pe=v[1],fe=v[2];break;case 3:k=[Be,Ge,ne],J=k[0],pe=k[1],fe=k[2];break;case 4:S=[$e,Be,ne],J=S[0],pe=S[1],fe=S[2];break;case 5:M=[ne,Be,Ge],J=M[0],pe=M[1],fe=M[2];break}}return[J,pe,fe,x.length>3?x[3]:1]},Xh=Qh,Jh=u.unpack,ep=u.type;y.prototype.hsv=function(){return Zh(this._rgb)},_.hsv=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["hsv"])))},c.format.hsv=Xh,c.autodetect.push({p:2,test:function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];if(f=Jh(f,"hsv"),ep(f)==="array"&&f.length===3)return"hsv"}});var Nt={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},tp=u.unpack,vs=Math.pow,np=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=tp(f,"rgb"),k=v[0],S=v[1],M=v[2],x=ap(k,S,M),V=x[0],H=x[1],$=x[2],ne=116*H-16;return[ne<0?0:ne,500*(V-H),200*(H-$)]},Ti=function(f){return(f/=255)<=.04045?f/12.92:vs((f+.055)/1.055,2.4)},Si=function(f){return f>Nt.t3?vs(f,1/3):f/Nt.t2+Nt.t0},ap=function(f,g,v){f=Ti(f),g=Ti(g),v=Ti(v);var k=Si((.4124564*f+.3575761*g+.1804375*v)/Nt.Xn),S=Si((.2126729*f+.7151522*g+.072175*v)/Nt.Yn),M=Si((.0193339*f+.119192*g+.9503041*v)/Nt.Zn);return[k,S,M]},bs=np,rp=u.unpack,ip=Math.pow,op=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];f=rp(f,"lab");var v=f[0],k=f[1],S=f[2],M,x,V,H,$,ne;return x=(v+16)/116,M=isNaN(k)?x:x+k/500,V=isNaN(S)?x:x-S/200,x=Nt.Yn*Ni(x),M=Nt.Xn*Ni(M),V=Nt.Zn*Ni(V),H=Bi(3.2404542*M-1.5371385*x-.4985314*V),$=Bi(-.969266*M+1.8760108*x+.041556*V),ne=Bi(.0556434*M-.2040259*x+1.0572252*V),[H,$,ne,f.length>3?f[3]:1]},Bi=function(f){return 255*(f<=.00304?12.92*f:1.055*ip(f,1/2.4)-.055)},Ni=function(f){return f>Nt.t1?f*f*f:Nt.t2*(f-Nt.t0)},ws=op,sp=u.unpack,lp=u.type;y.prototype.lab=function(){return bs(this._rgb)},_.lab=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["lab"])))},c.format.lab=ws,c.autodetect.push({p:2,test:function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];if(f=sp(f,"lab"),lp(f)==="array"&&f.length===3)return"lab"}});var up=u.unpack,cp=u.RAD2DEG,dp=Math.sqrt,fp=Math.atan2,hp=Math.round,pp=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=up(f,"lab"),k=v[0],S=v[1],M=v[2],x=dp(S*S+M*M),V=(fp(M,S)*cp+360)%360;return hp(x*1e4)===0&&(V=Number.NaN),[k,x,V]},mp=pp,gp=u.unpack,yp=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=gp(f,"rgb"),k=v[0],S=v[1],M=v[2],x=bs(k,S,M),V=x[0],H=x[1],$=x[2];return mp(V,H,$)},Ds=yp,vp=u.unpack,bp=u.DEG2RAD,wp=Math.sin,Dp=Math.cos,_p=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=vp(f,"lch"),k=v[0],S=v[1],M=v[2];return isNaN(M)&&(M=0),M=M*bp,[k,Dp(M)*S,wp(M)*S]},Ep=_p,Cp=u.unpack,Ap=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];f=Cp(f,"lch");var v=f[0],k=f[1],S=f[2],M=Ep(v,k,S),x=M[0],V=M[1],H=M[2],$=ws(x,V,H),ne=$[0],J=$[1],pe=$[2];return[ne,J,pe,f.length>3?f[3]:1]},_s=Ap,kp=u.unpack,xp=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=kp(f,"hcl").reverse();return _s.apply(void 0,v)},Fp=xp,Tp=u.unpack,Sp=u.type;y.prototype.lch=function(){return Ds(this._rgb)},y.prototype.hcl=function(){return Ds(this._rgb).reverse()},_.lch=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["lch"])))},_.hcl=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["hcl"])))},c.format.lch=_s,c.format.hcl=Fp,["lch","hcl"].forEach(function(f){return c.autodetect.push({p:2,test:function(){for(var g=[],v=arguments.length;v--;)g[v]=arguments[v];if(g=Tp(g,f),Sp(g)==="array"&&g.length===3)return f}})});var Bp={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflower:"#6495ed",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",laserlemon:"#ffff54",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrod:"#fafad2",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",maroon2:"#7f0000",maroon3:"#b03060",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",purple2:"#7f007f",purple3:"#a020f0",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},sa=Bp,Np=u.type;y.prototype.name=function(){for(var f=ms(this._rgb,"rgb"),g=0,v=Object.keys(sa);g<v.length;g+=1){var k=v[g];if(sa[k]===f)return k.toLowerCase()}return f},c.format.named=function(f){if(f=f.toLowerCase(),sa[f])return gs(sa[f]);throw new Error("unknown color name: "+f)},c.autodetect.push({p:5,test:function(f){for(var g=[],v=arguments.length-1;v-- >0;)g[v]=arguments[v+1];if(!g.length&&Np(f)==="string"&&sa[f.toLowerCase()])return"named"}});var Mp=u.unpack,Ip=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=Mp(f,"rgb"),k=v[0],S=v[1],M=v[2];return(k<<16)+(S<<8)+M},Op=Ip,qp=u.type,Rp=function(f){if(qp(f)=="number"&&f>=0&&f<=16777215){var g=f>>16,v=f>>8&255,k=f&255;return[g,v,k,1]}throw new Error("unknown num color: "+f)},Lp=Rp,Pp=u.type;y.prototype.num=function(){return Op(this._rgb)},_.num=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["num"])))},c.format.num=Lp,c.autodetect.push({p:5,test:function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];if(f.length===1&&Pp(f[0])==="number"&&f[0]>=0&&f[0]<=16777215)return"num"}});var Es=u.unpack,Cs=u.type,As=Math.round;y.prototype.rgb=function(f){return f===void 0&&(f=!0),f===!1?this._rgb.slice(0,3):this._rgb.slice(0,3).map(As)},y.prototype.rgba=function(f){return f===void 0&&(f=!0),this._rgb.slice(0,4).map(function(g,v){return v<3?f===!1?g:As(g):g})},_.rgb=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["rgb"])))},c.format.rgb=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];var v=Es(f,"rgba");return v[3]===void 0&&(v[3]=1),v},c.autodetect.push({p:3,test:function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];if(f=Es(f,"rgba"),Cs(f)==="array"&&(f.length===3||f.length===4&&Cs(f[3])=="number"&&f[3]>=0&&f[3]<=1))return"rgb"}});var yr=Math.log,jp=function(f){var g=f/100,v,k,S;return g<66?(v=255,k=-155.25485562709179-.44596950469579133*(k=g-2)+104.49216199393888*yr(k),S=g<20?0:-254.76935184120902+.8274096064007395*(S=g-10)+115.67994401066147*yr(S)):(v=351.97690566805693+.114206453784165*(v=g-55)-40.25366309332127*yr(v),k=325.4494125711974+.07943456536662342*(k=g-50)-28.0852963507957*yr(k),S=255),[v,k,S,1]},ks=jp,Vp=u.unpack,Hp=Math.round,Wp=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];for(var v=Vp(f,"rgb"),k=v[0],S=v[2],M=1e3,x=4e4,V=.4,H;x-M>V;){H=(x+M)*.5;var $=ks(H);$[2]/$[0]>=S/k?x=H:M=H}return Hp(H)},Gp=Wp;y.prototype.temp=y.prototype.kelvin=y.prototype.temperature=function(){return Gp(this._rgb)},_.temp=_.kelvin=_.temperature=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];return new(Function.prototype.bind.apply(y,[null].concat(f,["temp"])))},c.format.temp=c.format.kelvin=c.format.temperature=ks;var Up=u.type;y.prototype.alpha=function(f,g){return g===void 0&&(g=!1),f!==void 0&&Up(f)==="number"?g?(this._rgb[3]=f,this):new y([this._rgb[0],this._rgb[1],this._rgb[2],f],"rgb"):this._rgb[3]},y.prototype.clipped=function(){return this._rgb._clipped||!1},y.prototype.darken=function(f){f===void 0&&(f=1);var g=this,v=g.lab();return v[0]-=Nt.Kn*f,new y(v,"lab").alpha(g.alpha(),!0)},y.prototype.brighten=function(f){return f===void 0&&(f=1),this.darken(-f)},y.prototype.darker=y.prototype.darken,y.prototype.brighter=y.prototype.brighten,y.prototype.get=function(f){var g=f.split("."),v=g[0],k=g[1],S=this[v]();if(k){var M=v.indexOf(k);if(M>-1)return S[M];throw new Error("unknown channel "+k+" in mode "+v)}else return S};var zp=u.type,Yp=Math.pow,Zp=1e-7,$p=20;y.prototype.luminance=function(f){if(f!==void 0&&zp(f)==="number"){if(f===0)return new y([0,0,0,this._rgb[3]],"rgb");if(f===1)return new y([255,255,255,this._rgb[3]],"rgb");var g=this.luminance(),v="rgb",k=$p,S=function(x,V){var H=x.interpolate(V,.5,v),$=H.luminance();return Math.abs(f-$)<Zp||!k--?H:$>f?S(x,H):S(H,V)},M=(g>f?S(new y([0,0,0]),this):S(this,new y([255,255,255]))).rgb();return new y(M.concat([this._rgb[3]]))}return Kp.apply(void 0,this._rgb.slice(0,3))};var Kp=function(f,g,v){return f=Mi(f),g=Mi(g),v=Mi(v),.2126*f+.7152*g+.0722*v},Mi=function(f){return f/=255,f<=.03928?f/12.92:Yp((f+.055)/1.055,2.4)},Mt={},xs=u.type,Fs=function(f,g,v){v===void 0&&(v=.5);for(var k=[],S=arguments.length-3;S-- >0;)k[S]=arguments[S+3];var M=k[0]||"lrgb";if(!Mt[M]&&!k.length&&(M=Object.keys(Mt)[0]),!Mt[M])throw new Error("interpolation mode "+M+" is not defined");return xs(f)!=="object"&&(f=new y(f)),xs(g)!=="object"&&(g=new y(g)),Mt[M](f,g,v).alpha(f.alpha()+v*(g.alpha()-f.alpha()))};y.prototype.mix=y.prototype.interpolate=function(f,g){g===void 0&&(g=.5);for(var v=[],k=arguments.length-2;k-- >0;)v[k]=arguments[k+2];return Fs.apply(void 0,[this,f,g].concat(v))},y.prototype.premultiply=function(f){f===void 0&&(f=!1);var g=this._rgb,v=g[3];return f?(this._rgb=[g[0]*v,g[1]*v,g[2]*v,v],this):new y([g[0]*v,g[1]*v,g[2]*v,v],"rgb")},y.prototype.saturate=function(f){f===void 0&&(f=1);var g=this,v=g.lch();return v[1]+=Nt.Kn*f,v[1]<0&&(v[1]=0),new y(v,"lch").alpha(g.alpha(),!0)},y.prototype.desaturate=function(f){return f===void 0&&(f=1),this.saturate(-f)};var Ts=u.type;y.prototype.set=function(f,g,v){v===void 0&&(v=!1);var k=f.split("."),S=k[0],M=k[1],x=this[S]();if(M){var V=S.indexOf(M);if(V>-1){if(Ts(g)=="string")switch(g.charAt(0)){case"+":x[V]+=+g;break;case"-":x[V]+=+g;break;case"*":x[V]*=+g.substr(1);break;case"/":x[V]/=+g.substr(1);break;default:x[V]=+g}else if(Ts(g)==="number")x[V]=g;else throw new Error("unsupported value for Color.set");var H=new y(x,S);return v?(this._rgb=H._rgb,this):H}throw new Error("unknown channel "+M+" in mode "+S)}else return x};var Qp=function(f,g,v){var k=f._rgb,S=g._rgb;return new y(k[0]+v*(S[0]-k[0]),k[1]+v*(S[1]-k[1]),k[2]+v*(S[2]-k[2]),"rgb")};Mt.rgb=Qp;var Ii=Math.sqrt,la=Math.pow,Xp=function(f,g,v){var k=f._rgb,S=k[0],M=k[1],x=k[2],V=g._rgb,H=V[0],$=V[1],ne=V[2];return new y(Ii(la(S,2)*(1-v)+la(H,2)*v),Ii(la(M,2)*(1-v)+la($,2)*v),Ii(la(x,2)*(1-v)+la(ne,2)*v),"rgb")};Mt.lrgb=Xp;var Jp=function(f,g,v){var k=f.lab(),S=g.lab();return new y(k[0]+v*(S[0]-k[0]),k[1]+v*(S[1]-k[1]),k[2]+v*(S[2]-k[2]),"lab")};Mt.lab=Jp;var Ia=function(f,g,v,k){var S,M,x,V;k==="hsl"?(x=f.hsl(),V=g.hsl()):k==="hsv"?(x=f.hsv(),V=g.hsv()):k==="hcg"?(x=f.hcg(),V=g.hcg()):k==="hsi"?(x=f.hsi(),V=g.hsi()):(k==="lch"||k==="hcl")&&(k="hcl",x=f.hcl(),V=g.hcl());var H,$,ne,J,pe,fe;k.substr(0,1)==="h"&&(S=x,H=S[0],ne=S[1],pe=S[2],M=V,$=M[0],J=M[1],fe=M[2]);var Fe,Re,Be,Ge;return!isNaN(H)&&!isNaN($)?($>H&&$-H>180?Ge=$-(H+360):$<H&&H-$>180?Ge=$+360-H:Ge=$-H,Re=H+v*Ge):isNaN(H)?isNaN($)?Re=Number.NaN:(Re=$,(pe==1||pe==0)&&k!="hsv"&&(Fe=J)):(Re=H,(fe==1||fe==0)&&k!="hsv"&&(Fe=ne)),Fe===void 0&&(Fe=ne+v*(J-ne)),Be=pe+v*(fe-pe),new y([Re,Fe,Be],k)},Ss=function(f,g,v){return Ia(f,g,v,"lch")};Mt.lch=Ss,Mt.hcl=Ss;var em=function(f,g,v){var k=f.num(),S=g.num();return new y(k+v*(S-k),"num")};Mt.num=em;var tm=function(f,g,v){return Ia(f,g,v,"hcg")};Mt.hcg=tm;var nm=function(f,g,v){return Ia(f,g,v,"hsi")};Mt.hsi=nm;var am=function(f,g,v){return Ia(f,g,v,"hsl")};Mt.hsl=am;var rm=function(f,g,v){return Ia(f,g,v,"hsv")};Mt.hsv=rm;var im=u.clip_rgb,Oi=Math.pow,qi=Math.sqrt,Ri=Math.PI,Bs=Math.cos,Ns=Math.sin,om=Math.atan2,sm=function(f,g,v){g===void 0&&(g="lrgb"),v===void 0&&(v=null);var k=f.length;v||(v=Array.from(new Array(k)).map(function(){return 1}));var S=k/v.reduce(function(Re,Be){return Re+Be});if(v.forEach(function(Re,Be){v[Be]*=S}),f=f.map(function(Re){return new y(Re)}),g==="lrgb")return lm(f,v);for(var M=f.shift(),x=M.get(g),V=[],H=0,$=0,ne=0;ne<x.length;ne++)if(x[ne]=(x[ne]||0)*v[0],V.push(isNaN(x[ne])?0:v[0]),g.charAt(ne)==="h"&&!isNaN(x[ne])){var J=x[ne]/180*Ri;H+=Bs(J)*v[0],$+=Ns(J)*v[0]}var pe=M.alpha()*v[0];f.forEach(function(Re,Be){var Ge=Re.get(g);pe+=Re.alpha()*v[Be+1];for(var $e=0;$e<x.length;$e++)if(!isNaN(Ge[$e]))if(V[$e]+=v[Be+1],g.charAt($e)==="h"){var vt=Ge[$e]/180*Ri;H+=Bs(vt)*v[Be+1],$+=Ns(vt)*v[Be+1]}else x[$e]+=Ge[$e]*v[Be+1]});for(var fe=0;fe<x.length;fe++)if(g.charAt(fe)==="h"){for(var Fe=om($/V[fe],H/V[fe])/Ri*180;Fe<0;)Fe+=360;for(;Fe>=360;)Fe-=360;x[fe]=Fe}else x[fe]=x[fe]/V[fe];return pe/=k,new y(x,g).alpha(pe>.99999?1:pe,!0)},lm=function(f,g){for(var v=f.length,k=[0,0,0,0],S=0;S<f.length;S++){var M=f[S],x=g[S]/v,V=M._rgb;k[0]+=Oi(V[0],2)*x,k[1]+=Oi(V[1],2)*x,k[2]+=Oi(V[2],2)*x,k[3]+=V[3]*x}return k[0]=qi(k[0]),k[1]=qi(k[1]),k[2]=qi(k[2]),k[3]>.9999999&&(k[3]=1),new y(im(k))},ua=u.type,um=Math.pow,vr=function(f){var g="rgb",v=_("#ccc"),k=0,S=[0,1],M=[],x=[0,0],V=!1,H=[],$=!1,ne=0,J=1,pe=!1,fe={},Fe=!0,Re=1,Be=function(re){if(re=re||["#fff","#000"],re&&ua(re)==="string"&&_.brewer&&_.brewer[re.toLowerCase()]&&(re=_.brewer[re.toLowerCase()]),ua(re)==="array"){re.length===1&&(re=[re[0],re[0]]),re=re.slice(0);for(var ke=0;ke<re.length;ke++)re[ke]=_(re[ke]);M.length=0;for(var Le=0;Le<re.length;Le++)M.push(Le/(re.length-1))}return Ht(),H=re},Ge=function(re){if(V!=null){for(var ke=V.length-1,Le=0;Le<ke&&re>=V[Le];)Le++;return Le-1}return 0},$e=function(re){return re},vt=function(re){return re},bt=function(re,ke){var Le,Oe;if(ke==null&&(ke=!1),isNaN(re)||re===null)return v;if(ke)Oe=re;else if(V&&V.length>2){var It=Ge(re);Oe=It/(V.length-2)}else J!==ne?Oe=(re-ne)/(J-ne):Oe=1;Oe=vt(Oe),ke||(Oe=$e(Oe)),Re!==1&&(Oe=um(Oe,Re)),Oe=x[0]+Oe*(1-x[0]-x[1]),Oe=Math.min(1,Math.max(0,Oe));var Je=Math.floor(Oe*1e4);if(Fe&&fe[Je])Le=fe[Je];else{if(ua(H)==="array")for(var Ye=0;Ye<M.length;Ye++){var Ze=M[Ye];if(Oe<=Ze){Le=H[Ye];break}if(Oe>=Ze&&Ye===M.length-1){Le=H[Ye];break}if(Oe>Ze&&Oe<M[Ye+1]){Oe=(Oe-Ze)/(M[Ye+1]-Ze),Le=_.interpolate(H[Ye],H[Ye+1],Oe,g);break}}else ua(H)==="function"&&(Le=H(Oe));Fe&&(fe[Je]=Le)}return Le},Ht=function(){return fe={}};Be(f);var Pe=function(re){var ke=_(bt(re));return $&&ke[$]?ke[$]():ke};return Pe.classes=function(re){if(re!=null){if(ua(re)==="array")V=re,S=[re[0],re[re.length-1]];else{var ke=_.analyze(S);re===0?V=[ke.min,ke.max]:V=_.limits(ke,"e",re)}return Pe}return V},Pe.domain=function(re){if(!arguments.length)return S;ne=re[0],J=re[re.length-1],M=[];var ke=H.length;if(re.length===ke&&ne!==J)for(var Le=0,Oe=Array.from(re);Le<Oe.length;Le+=1){var It=Oe[Le];M.push((It-ne)/(J-ne))}else{for(var Je=0;Je<ke;Je++)M.push(Je/(ke-1));if(re.length>2){var Ye=re.map(function(it,Ke){return Ke/(re.length-1)}),Ze=re.map(function(it){return(it-ne)/(J-ne)});Ze.every(function(it,Ke){return Ye[Ke]===it})||(vt=function(it){if(it<=0||it>=1)return it;for(var Ke=0;it>=Ze[Ke+1];)Ke++;var kn=(it-Ze[Ke])/(Ze[Ke+1]-Ze[Ke]),ca=Ye[Ke]+kn*(Ye[Ke+1]-Ye[Ke]);return ca})}}return S=[ne,J],Pe},Pe.mode=function(re){return arguments.length?(g=re,Ht(),Pe):g},Pe.range=function(re,ke){return Be(re,ke),Pe},Pe.out=function(re){return $=re,Pe},Pe.spread=function(re){return arguments.length?(k=re,Pe):k},Pe.correctLightness=function(re){return re==null&&(re=!0),pe=re,Ht(),pe?$e=function(ke){for(var Le=bt(0,!0).lab()[0],Oe=bt(1,!0).lab()[0],It=Le>Oe,Je=bt(ke,!0).lab()[0],Ye=Le+(Oe-Le)*ke,Ze=Je-Ye,it=0,Ke=1,kn=20;Math.abs(Ze)>.01&&kn-- >0;)(function(){return It&&(Ze*=-1),Ze<0?(it=ke,ke+=(Ke-ke)*.5):(Ke=ke,ke+=(it-ke)*.5),Je=bt(ke,!0).lab()[0],Ze=Je-Ye})();return ke}:$e=function(ke){return ke},Pe},Pe.padding=function(re){return re!=null?(ua(re)==="number"&&(re=[re,re]),x=re,Pe):x},Pe.colors=function(re,ke){arguments.length<2&&(ke="hex");var Le=[];if(arguments.length===0)Le=H.slice(0);else if(re===1)Le=[Pe(.5)];else if(re>1){var Oe=S[0],It=S[1]-Oe;Le=cm(0,re,!1).map(function(Ke){return Pe(Oe+Ke/(re-1)*It)})}else{f=[];var Je=[];if(V&&V.length>2)for(var Ye=1,Ze=V.length,it=1<=Ze;it?Ye<Ze:Ye>Ze;it?Ye++:Ye--)Je.push((V[Ye-1]+V[Ye])*.5);else Je=S;Le=Je.map(function(Ke){return Pe(Ke)})}return _[ke]&&(Le=Le.map(function(Ke){return Ke[ke]()})),Le},Pe.cache=function(re){return re!=null?(Fe=re,Pe):Fe},Pe.gamma=function(re){return re!=null?(Re=re,Pe):Re},Pe.nodata=function(re){return re!=null?(v=_(re),Pe):v},Pe};function cm(f,g,v){for(var k=[],S=f<g,M=v?S?g+1:g-1:g,x=f;S?x<M:x>M;S?x++:x--)k.push(x);return k}var Li=function(f){var g,v,k,S,M,x,V;if(f=f.map(function(J){return new y(J)}),f.length===2)g=f.map(function(J){return J.lab()}),M=g[0],x=g[1],S=function(J){var pe=[0,1,2].map(function(fe){return M[fe]+J*(x[fe]-M[fe])});return new y(pe,"lab")};else if(f.length===3)v=f.map(function(J){return J.lab()}),M=v[0],x=v[1],V=v[2],S=function(J){var pe=[0,1,2].map(function(fe){return(1-J)*(1-J)*M[fe]+2*(1-J)*J*x[fe]+J*J*V[fe]});return new y(pe,"lab")};else if(f.length===4){var H;k=f.map(function(J){return J.lab()}),M=k[0],x=k[1],V=k[2],H=k[3],S=function(J){var pe=[0,1,2].map(function(fe){return(1-J)*(1-J)*(1-J)*M[fe]+3*(1-J)*(1-J)*J*x[fe]+3*(1-J)*J*J*V[fe]+J*J*J*H[fe]});return new y(pe,"lab")}}else if(f.length===5){var $=Li(f.slice(0,3)),ne=Li(f.slice(2,5));S=function(J){return J<.5?$(J*2):ne((J-.5)*2)}}return S},dm=function(f){var g=Li(f);return g.scale=function(){return vr(g)},g},sn=function(f,g,v){if(!sn[v])throw new Error("unknown blend mode "+v);return sn[v](f,g)},Cn=function(f){return function(g,v){var k=_(v).rgb(),S=_(g).rgb();return _.rgb(f(k,S))}},An=function(f){return function(g,v){var k=[];return k[0]=f(g[0],v[0]),k[1]=f(g[1],v[1]),k[2]=f(g[2],v[2]),k}},fm=function(f){return f},hm=function(f,g){return f*g/255},pm=function(f,g){return f>g?g:f},mm=function(f,g){return f>g?f:g},gm=function(f,g){return 255*(1-(1-f/255)*(1-g/255))},ym=function(f,g){return g<128?2*f*g/255:255*(1-2*(1-f/255)*(1-g/255))},vm=function(f,g){return 255*(1-(1-g/255)/(f/255))},bm=function(f,g){return f===255?255:(f=255*(g/255)/(1-f/255),f>255?255:f)};sn.normal=Cn(An(fm)),sn.multiply=Cn(An(hm)),sn.screen=Cn(An(gm)),sn.overlay=Cn(An(ym)),sn.darken=Cn(An(pm)),sn.lighten=Cn(An(mm)),sn.dodge=Cn(An(bm)),sn.burn=Cn(An(vm));for(var wm=sn,Pi=u.type,Dm=u.clip_rgb,_m=u.TWOPI,Em=Math.pow,Cm=Math.sin,Am=Math.cos,km=function(f,g,v,k,S){f===void 0&&(f=300),g===void 0&&(g=-1.5),v===void 0&&(v=1),k===void 0&&(k=1),S===void 0&&(S=[0,1]);var M=0,x;Pi(S)==="array"?x=S[1]-S[0]:(x=0,S=[S,S]);var V=function(H){var $=_m*((f+120)/360+g*H),ne=Em(S[0]+x*H,k),J=M!==0?v[0]+H*M:v,pe=J*ne*(1-ne)/2,fe=Am($),Fe=Cm($),Re=ne+pe*(-.14861*fe+1.78277*Fe),Be=ne+pe*(-.29227*fe-.90649*Fe),Ge=ne+pe*(1.97294*fe);return _(Dm([Re*255,Be*255,Ge*255,1]))};return V.start=function(H){return H==null?f:(f=H,V)},V.rotations=function(H){return H==null?g:(g=H,V)},V.gamma=function(H){return H==null?k:(k=H,V)},V.hue=function(H){return H==null?v:(v=H,Pi(v)==="array"?(M=v[1]-v[0],M===0&&(v=v[1])):M=0,V)},V.lightness=function(H){return H==null?S:(Pi(H)==="array"?(S=H,x=H[1]-H[0]):(S=[H,H],x=0),V)},V.scale=function(){return _.scale(V)},V.hue(v),V},xm="0123456789abcdef",Fm=Math.floor,Tm=Math.random,Sm=function(){for(var f="#",g=0;g<6;g++)f+=xm.charAt(Fm(Tm()*16));return new y(f,"hex")},Ms=Math.log,Bm=Math.pow,Nm=Math.floor,Mm=Math.abs,Is=function(f,g){g===void 0&&(g=null);var v={min:Number.MAX_VALUE,max:Number.MAX_VALUE*-1,sum:0,values:[],count:0};return i(f)==="object"&&(f=Object.values(f)),f.forEach(function(k){g&&i(k)==="object"&&(k=k[g]),k!=null&&!isNaN(k)&&(v.values.push(k),v.sum+=k,k<v.min&&(v.min=k),k>v.max&&(v.max=k),v.count+=1)}),v.domain=[v.min,v.max],v.limits=function(k,S){return Os(v,k,S)},v},Os=function(f,g,v){g===void 0&&(g="equal"),v===void 0&&(v=7),i(f)=="array"&&(f=Is(f));var k=f.min,S=f.max,M=f.values.sort(function(Ui,zi){return Ui-zi});if(v===1)return[k,S];var x=[];if(g.substr(0,1)==="c"&&(x.push(k),x.push(S)),g.substr(0,1)==="e"){x.push(k);for(var V=1;V<v;V++)x.push(k+V/v*(S-k));x.push(S)}else if(g.substr(0,1)==="l"){if(k<=0)throw new Error("Logarithmic scales are only possible for values > 0");var H=Math.LOG10E*Ms(k),$=Math.LOG10E*Ms(S);x.push(k);for(var ne=1;ne<v;ne++)x.push(Bm(10,H+ne/v*($-H)));x.push(S)}else if(g.substr(0,1)==="q"){x.push(k);for(var J=1;J<v;J++){var pe=(M.length-1)*J/v,fe=Nm(pe);if(fe===pe)x.push(M[fe]);else{var Fe=pe-fe;x.push(M[fe]*(1-Fe)+M[fe+1]*Fe)}}x.push(S)}else if(g.substr(0,1)==="k"){var Re,Be=M.length,Ge=new Array(Be),$e=new Array(v),vt=!0,bt=0,Ht=null;Ht=[],Ht.push(k);for(var Pe=1;Pe<v;Pe++)Ht.push(k+Pe/v*(S-k));for(Ht.push(S);vt;){for(var re=0;re<v;re++)$e[re]=0;for(var ke=0;ke<Be;ke++)for(var Le=M[ke],Oe=Number.MAX_VALUE,It=void 0,Je=0;Je<v;Je++){var Ye=Mm(Ht[Je]-Le);Ye<Oe&&(Oe=Ye,It=Je),$e[It]++,Ge[ke]=It}for(var Ze=new Array(v),it=0;it<v;it++)Ze[it]=null;for(var Ke=0;Ke<Be;Ke++)Re=Ge[Ke],Ze[Re]===null?Ze[Re]=M[Ke]:Ze[Re]+=M[Ke];for(var kn=0;kn<v;kn++)Ze[kn]*=1/$e[kn];vt=!1;for(var ca=0;ca<v;ca++)if(Ze[ca]!==Ht[ca]){vt=!0;break}Ht=Ze,bt++,bt>200&&(vt=!1)}for(var Oa={},Hi=0;Hi<v;Hi++)Oa[Hi]=[];for(var Dr=0;Dr<Be;Dr++)Re=Ge[Dr],Oa[Re].push(M[Dr]);for(var Hn=[],qa=0;qa<v;qa++)Hn.push(Oa[qa][0]),Hn.push(Oa[qa][Oa[qa].length-1]);Hn=Hn.sort(function(Ui,zi){return Ui-zi}),x.push(Hn[0]);for(var Wi=1;Wi<Hn.length;Wi+=2){var Gi=Hn[Wi];!isNaN(Gi)&&x.indexOf(Gi)===-1&&x.push(Gi)}}return x},qs={analyze:Is,limits:Os},Im=function(f,g){f=new y(f),g=new y(g);var v=f.luminance(),k=g.luminance();return v>k?(v+.05)/(k+.05):(k+.05)/(v+.05)},br=Math.sqrt,Om=Math.atan2,Rs=Math.abs,Ls=Math.cos,ji=Math.PI,qm=function(f,g,v,k){v===void 0&&(v=1),k===void 0&&(k=1),f=new y(f),g=new y(g);for(var S=Array.from(f.lab()),M=S[0],x=S[1],V=S[2],H=Array.from(g.lab()),$=H[0],ne=H[1],J=H[2],pe=br(x*x+V*V),fe=br(ne*ne+J*J),Fe=M<16?.511:.040975*M/(1+.01765*M),Re=.0638*pe/(1+.0131*pe)+.638,Be=pe<1e-6?0:Om(V,x)*180/ji;Be<0;)Be+=360;for(;Be>=360;)Be-=360;var Ge=Be>=164&&Be<=345?.56+Rs(.2*Ls(ji*(Be+168)/180)):.36+Rs(.4*Ls(ji*(Be+35)/180)),$e=pe*pe*pe*pe,vt=br($e/($e+1900)),bt=Re*(vt*Ge+1-vt),Ht=M-$,Pe=pe-fe,re=x-ne,ke=V-J,Le=re*re+ke*ke-Pe*Pe,Oe=Ht/(v*Fe),It=Pe/(k*Re),Je=bt;return br(Oe*Oe+It*It+Le/(Je*Je))},Rm=function(f,g,v){v===void 0&&(v="lab"),f=new y(f),g=new y(g);var k=f.get(v),S=g.get(v),M=0;for(var x in k){var V=(k[x]||0)-(S[x]||0);M+=V*V}return Math.sqrt(M)},Lm=function(){for(var f=[],g=arguments.length;g--;)f[g]=arguments[g];try{return new(Function.prototype.bind.apply(y,[null].concat(f))),!0}catch{return!1}},Pm={cool:function(){return vr([_.hsl(180,1,.9),_.hsl(250,.7,.4)])},hot:function(){return vr(["#000","#f00","#ff0","#fff"],[0,.25,.75,1]).mode("rgb")}},wr={OrRd:["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#b30000","#7f0000"],PuBu:["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#045a8d","#023858"],BuPu:["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#810f7c","#4d004b"],Oranges:["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#a63603","#7f2704"],BuGn:["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"],YlOrBr:["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#993404","#662506"],YlGn:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],Reds:["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#a50f15","#67000d"],RdPu:["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177","#49006a"],Greens:["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],YlGnBu:["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"],Purples:["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#54278f","#3f007d"],GnBu:["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#0868ac","#084081"],Greys:["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525","#000000"],YlOrRd:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"],PuRd:["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#980043","#67001f"],Blues:["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"],PuBuGn:["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016c59","#014636"],Viridis:["#440154","#482777","#3f4a8a","#31678e","#26838f","#1f9d8a","#6cce5a","#b6de2b","#fee825"],Spectral:["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"],RdYlGn:["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"],RdBu:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"],PiYG:["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"],PRGn:["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"],RdYlBu:["#a50026","#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"],BrBG:["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"],RdGy:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"],PuOr:["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"],Set2:["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],Accent:["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17","#666666"],Set1:["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"],Set3:["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"],Dark2:["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],Paired:["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"],Pastel2:["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc","#cccccc"],Pastel1:["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec","#f2f2f2"]},Vi=0,Ps=Object.keys(wr);Vi<Ps.length;Vi+=1){var js=Ps[Vi];wr[js.toLowerCase()]=wr[js]}var jm=wr;_.average=sm,_.bezier=dm,_.blend=wm,_.cubehelix=km,_.mix=_.interpolate=Fs,_.random=Sm,_.scale=vr,_.analyze=qs.analyze,_.contrast=Im,_.deltaE=qm,_.distance=Rm,_.limits=qs.limits,_.valid=Lm,_.scales=Pm,_.colors=sa,_.brewer=jm;var Vm=_;return Vm})});var ql=Xe(Nr=>{"use strict";Object.defineProperty(Nr,"__esModule",{value:!0});Nr.default=void 0;var ao=Br(Hs()),ro=Br(nl()),n2=Br(Bl()),Sr=Br(Nl());function Br(n){return n&&n.__esModule?n:{default:n}}function a2(n){if(typeof Symbol=="undefined"||n[Symbol.iterator]==null){if(Array.isArray(n)||(n=r2(n))){var e=0,t=function(){};return{s:t,n:function(){return e>=n.length?{done:!0}:{done:!1,value:n[e++]}},e:function(s){throw s},f:t}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var a,r=!0,o=!1,i;return{s:function(){a=n[Symbol.iterator]()},n:function(){var s=a.next();return r=s.done,s},e:function(s){o=!0,i=s},f:function(){try{!r&&a.return!=null&&a.return()}finally{if(o)throw i}}}}function r2(n,e){if(!!n){if(typeof n=="string")return Ml(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);if(t==="Object"&&n.constructor&&(t=n.constructor.name),t==="Map"||t==="Set")return Array.from(t);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Ml(n,e)}}function Ml(n,e){(e==null||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function Il(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter(function(r){return Object.getOwnPropertyDescriptor(n,r).enumerable})),t.push.apply(t,a)}return t}function i2(n){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?Il(Object(t),!0).forEach(function(a){o2(n,a,t[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Il(Object(t)).forEach(function(a){Object.defineProperty(n,a,Object.getOwnPropertyDescriptor(t,a))})}return n}function o2(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var s2={count:5,hueMin:0,hueMax:360,chromaMin:0,chromaMax:100,lightMin:0,lightMax:100,quality:50,samples:800},Ol=function(e,t){for(var a=Number.MAX_SAFE_INTEGER,r=0,o=0;o<e.length;o+=1){var i=e[o],l=Math.sqrt(Math.pow(Math.abs(i[0]-t[0]),2)+Math.pow(Math.abs(i[1]-t[1]),2)+Math.pow(Math.abs(i[2]-t[2]),2));l<a&&(a=l,r=o)}return r},l2=function(e,t){var a=Sr.default.lab(e),r=a.hcl(),o=a.rgb(),i=Sr.default.rgb(o).lab(),l=2;return r[0]>=t.hueMin&&r[0]<=t.hueMax&&r[1]>=t.chromaMin&&r[1]<=t.chromaMax&&r[2]>=t.lightMin&&r[2]<=t.lightMax&&i[0]>=e[0]-l&&i[0]<=e[0]+l&&i[1]>=e[1]-l&&i[1]<=e[1]+l&&i[2]>=e[2]-l&&i[2]<=e[2]+l},u2=function(e){for(var t=e.slice(0),a=[t.shift()];t.length>0;){for(var r=a[a.length-1],o=0,i=Number.MIN_SAFE_INTEGER,l=0;l<t.length;l+=1){var s=Math.sqrt(Math.pow(Math.abs(r[0]-t[l][0]),2)+Math.pow(Math.abs(r[1]-t[l][1]),2)+Math.pow(Math.abs(r[2]-t[l][2]),2));s>i&&(i=s,o=l)}a.push(t.splice(o,1)[0])}return a},c2=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},t=i2({},s2,{},e);if(t.count<=0)return[];t.samples<t.count*3&&(t.samples=Math.ceil(t.count*3));var a=[],r=[],o=new Set,i=Math.ceil(Math.cbrt(t.samples)),l=(t.hueMax-t.hueMin)/i,s=(t.chromaMax-t.chromaMin)/i,d=(t.lightMax-t.lightMin)/i;if(l<=0)throw new Error("hueMax must be greater than hueMin!");if(s<=0)throw new Error("chromaMax must be greater than chromaMin!");if(d<=0)throw new Error("lightMax must be greater than lightMin!");for(var u=t.hueMin+l/2;u<=t.hueMax;u+=l)for(var c=t.chromaMin+s/2;c<=t.chromaMax;c+=s)for(var h=t.lightMin+d/2;h<=t.lightMax;h+=d){var m=Sr.default.hcl(u,c,h).lab();l2(m,t)&&o.add(m.toString())}if(o=Array.from(o),o=o.map(function(ce){return ce.split(",").map(function(xe){return parseFloat(xe)})}),o.length<t.count)throw new Error("Not enough samples to generate palette, increase sample count.");for(var p=Math.floor(o.length/t.count),D=0;D<o.length&&(a.push(o[D]),r.push([]),!(a.length>=t.count));D+=p);for(var y=1;y<=t.quality;y+=1){for(var A=(0,ro.default)(r),_=(0,ro.default)(o),C=0;C<a.length;C+=1){var B=Ol(_,a[C]);A[C].push(_[B]),_.splice(B,1)}for(var z=0;z<_.length;z+=1){var L=o[z],N=Ol(a,L);A[N].push(o[z])}for(var j=(0,ro.default)(a),F=0;F<A.length;F+=1){var W=A[F],I=W.length,G=[],ue=[],we=[],ge=a2(W),Ce;try{for(ge.s();!(Ce=ge.n()).done;){var K=Ce.value;G.push(K[0]),ue.push(K[1]),we.push(K[2])}}catch(ce){ge.e(ce)}finally{ge.f()}var Z=ao.default.sum(G)/I,he=ao.default.sum(ue)/I,Se=ao.default.sum(we)/I;a[F]=[Z,he,Se]}if((0,n2.default)(j,a))break}return a=u2(a),a.map(function(ce){return Sr.default.lab(ce)})},d2=c2;Nr.default=d2});var Rl=Xe((Mr,La)=>{(function(n){var e=typeof Mr=="object"&&Mr,t=typeof La=="object"&&La&&La.exports==e&&La,a=typeof global=="object"&&global;(a.global===a||a.window===a)&&(n=a);var r=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,o=/[\x01-\x7F]/g,i=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,l=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,s={"\xAD":"shy","\u200C":"zwnj","\u200D":"zwj","\u200E":"lrm","\u2063":"ic","\u2062":"it","\u2061":"af","\u200F":"rlm","\u200B":"ZeroWidthSpace","\u2060":"NoBreak","\u0311":"DownBreve","\u20DB":"tdot","\u20DC":"DotDot","	":"Tab","\n":"NewLine","\u2008":"puncsp","\u205F":"MediumSpace","\u2009":"thinsp","\u200A":"hairsp","\u2004":"emsp13","\u2002":"ensp","\u2005":"emsp14","\u2003":"emsp","\u2007":"numsp","\xA0":"nbsp","\u205F\u200A":"ThickSpace","\u203E":"oline",_:"lowbar","\u2010":"dash","\u2013":"ndash","\u2014":"mdash","\u2015":"horbar",",":"comma",";":"semi","\u204F":"bsemi",":":"colon","\u2A74":"Colone","!":"excl","\xA1":"iexcl","?":"quest","\xBF":"iquest",".":"period","\u2025":"nldr","\u2026":"mldr","\xB7":"middot","'":"apos","\u2018":"lsquo","\u2019":"rsquo","\u201A":"sbquo","\u2039":"lsaquo","\u203A":"rsaquo",'"':"quot","\u201C":"ldquo","\u201D":"rdquo","\u201E":"bdquo","\xAB":"laquo","\xBB":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","\u2308":"lceil","\u2309":"rceil","\u230A":"lfloor","\u230B":"rfloor","\u2985":"lopar","\u2986":"ropar","\u298B":"lbrke","\u298C":"rbrke","\u298D":"lbrkslu","\u298E":"rbrksld","\u298F":"lbrksld","\u2990":"rbrkslu","\u2991":"langd","\u2992":"rangd","\u2993":"lparlt","\u2994":"rpargt","\u2995":"gtlPar","\u2996":"ltrPar","\u27E6":"lobrk","\u27E7":"robrk","\u27E8":"lang","\u27E9":"rang","\u27EA":"Lang","\u27EB":"Rang","\u27EC":"loang","\u27ED":"roang","\u2772":"lbbrk","\u2773":"rbbrk","\u2016":"Vert","\xA7":"sect","\xB6":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","\u2030":"permil","\u2031":"pertenk","\u2020":"dagger","\u2021":"Dagger","\u2022":"bull","\u2043":"hybull","\u2032":"prime","\u2033":"Prime","\u2034":"tprime","\u2057":"qprime","\u2035":"bprime","\u2041":"caret","`":"grave","\xB4":"acute","\u02DC":"tilde","^":"Hat","\xAF":"macr","\u02D8":"breve","\u02D9":"dot","\xA8":"die","\u02DA":"ring","\u02DD":"dblac","\xB8":"cedil","\u02DB":"ogon","\u02C6":"circ","\u02C7":"caron","\xB0":"deg","\xA9":"copy","\xAE":"reg","\u2117":"copysr","\u2118":"wp","\u211E":"rx","\u2127":"mho","\u2129":"iiota","\u2190":"larr","\u219A":"nlarr","\u2192":"rarr","\u219B":"nrarr","\u2191":"uarr","\u2193":"darr","\u2194":"harr","\u21AE":"nharr","\u2195":"varr","\u2196":"nwarr","\u2197":"nearr","\u2198":"searr","\u2199":"swarr","\u219D":"rarrw","\u219D\u0338":"nrarrw","\u219E":"Larr","\u219F":"Uarr","\u21A0":"Rarr","\u21A1":"Darr","\u21A2":"larrtl","\u21A3":"rarrtl","\u21A4":"mapstoleft","\u21A5":"mapstoup","\u21A6":"map","\u21A7":"mapstodown","\u21A9":"larrhk","\u21AA":"rarrhk","\u21AB":"larrlp","\u21AC":"rarrlp","\u21AD":"harrw","\u21B0":"lsh","\u21B1":"rsh","\u21B2":"ldsh","\u21B3":"rdsh","\u21B5":"crarr","\u21B6":"cularr","\u21B7":"curarr","\u21BA":"olarr","\u21BB":"orarr","\u21BC":"lharu","\u21BD":"lhard","\u21BE":"uharr","\u21BF":"uharl","\u21C0":"rharu","\u21C1":"rhard","\u21C2":"dharr","\u21C3":"dharl","\u21C4":"rlarr","\u21C5":"udarr","\u21C6":"lrarr","\u21C7":"llarr","\u21C8":"uuarr","\u21C9":"rrarr","\u21CA":"ddarr","\u21CB":"lrhar","\u21CC":"rlhar","\u21D0":"lArr","\u21CD":"nlArr","\u21D1":"uArr","\u21D2":"rArr","\u21CF":"nrArr","\u21D3":"dArr","\u21D4":"iff","\u21CE":"nhArr","\u21D5":"vArr","\u21D6":"nwArr","\u21D7":"neArr","\u21D8":"seArr","\u21D9":"swArr","\u21DA":"lAarr","\u21DB":"rAarr","\u21DD":"zigrarr","\u21E4":"larrb","\u21E5":"rarrb","\u21F5":"duarr","\u21FD":"loarr","\u21FE":"roarr","\u21FF":"hoarr","\u2200":"forall","\u2201":"comp","\u2202":"part","\u2202\u0338":"npart","\u2203":"exist","\u2204":"nexist","\u2205":"empty","\u2207":"Del","\u2208":"in","\u2209":"notin","\u220B":"ni","\u220C":"notni","\u03F6":"bepsi","\u220F":"prod","\u2210":"coprod","\u2211":"sum","+":"plus","\xB1":"pm","\xF7":"div","\xD7":"times","<":"lt","\u226E":"nlt","<\u20D2":"nvlt","=":"equals","\u2260":"ne","=\u20E5":"bne","\u2A75":"Equal",">":"gt","\u226F":"ngt",">\u20D2":"nvgt","\xAC":"not","|":"vert","\xA6":"brvbar","\u2212":"minus","\u2213":"mp","\u2214":"plusdo","\u2044":"frasl","\u2216":"setmn","\u2217":"lowast","\u2218":"compfn","\u221A":"Sqrt","\u221D":"prop","\u221E":"infin","\u221F":"angrt","\u2220":"ang","\u2220\u20D2":"nang","\u2221":"angmsd","\u2222":"angsph","\u2223":"mid","\u2224":"nmid","\u2225":"par","\u2226":"npar","\u2227":"and","\u2228":"or","\u2229":"cap","\u2229\uFE00":"caps","\u222A":"cup","\u222A\uFE00":"cups","\u222B":"int","\u222C":"Int","\u222D":"tint","\u2A0C":"qint","\u222E":"oint","\u222F":"Conint","\u2230":"Cconint","\u2231":"cwint","\u2232":"cwconint","\u2233":"awconint","\u2234":"there4","\u2235":"becaus","\u2236":"ratio","\u2237":"Colon","\u2238":"minusd","\u223A":"mDDot","\u223B":"homtht","\u223C":"sim","\u2241":"nsim","\u223C\u20D2":"nvsim","\u223D":"bsim","\u223D\u0331":"race","\u223E":"ac","\u223E\u0333":"acE","\u223F":"acd","\u2240":"wr","\u2242":"esim","\u2242\u0338":"nesim","\u2243":"sime","\u2244":"nsime","\u2245":"cong","\u2247":"ncong","\u2246":"simne","\u2248":"ap","\u2249":"nap","\u224A":"ape","\u224B":"apid","\u224B\u0338":"napid","\u224C":"bcong","\u224D":"CupCap","\u226D":"NotCupCap","\u224D\u20D2":"nvap","\u224E":"bump","\u224E\u0338":"nbump","\u224F":"bumpe","\u224F\u0338":"nbumpe","\u2250":"doteq","\u2250\u0338":"nedot","\u2251":"eDot","\u2252":"efDot","\u2253":"erDot","\u2254":"colone","\u2255":"ecolon","\u2256":"ecir","\u2257":"cire","\u2259":"wedgeq","\u225A":"veeeq","\u225C":"trie","\u225F":"equest","\u2261":"equiv","\u2262":"nequiv","\u2261\u20E5":"bnequiv","\u2264":"le","\u2270":"nle","\u2264\u20D2":"nvle","\u2265":"ge","\u2271":"nge","\u2265\u20D2":"nvge","\u2266":"lE","\u2266\u0338":"nlE","\u2267":"gE","\u2267\u0338":"ngE","\u2268\uFE00":"lvnE","\u2268":"lnE","\u2269":"gnE","\u2269\uFE00":"gvnE","\u226A":"ll","\u226A\u0338":"nLtv","\u226A\u20D2":"nLt","\u226B":"gg","\u226B\u0338":"nGtv","\u226B\u20D2":"nGt","\u226C":"twixt","\u2272":"lsim","\u2274":"nlsim","\u2273":"gsim","\u2275":"ngsim","\u2276":"lg","\u2278":"ntlg","\u2277":"gl","\u2279":"ntgl","\u227A":"pr","\u2280":"npr","\u227B":"sc","\u2281":"nsc","\u227C":"prcue","\u22E0":"nprcue","\u227D":"sccue","\u22E1":"nsccue","\u227E":"prsim","\u227F":"scsim","\u227F\u0338":"NotSucceedsTilde","\u2282":"sub","\u2284":"nsub","\u2282\u20D2":"vnsub","\u2283":"sup","\u2285":"nsup","\u2283\u20D2":"vnsup","\u2286":"sube","\u2288":"nsube","\u2287":"supe","\u2289":"nsupe","\u228A\uFE00":"vsubne","\u228A":"subne","\u228B\uFE00":"vsupne","\u228B":"supne","\u228D":"cupdot","\u228E":"uplus","\u228F":"sqsub","\u228F\u0338":"NotSquareSubset","\u2290":"sqsup","\u2290\u0338":"NotSquareSuperset","\u2291":"sqsube","\u22E2":"nsqsube","\u2292":"sqsupe","\u22E3":"nsqsupe","\u2293":"sqcap","\u2293\uFE00":"sqcaps","\u2294":"sqcup","\u2294\uFE00":"sqcups","\u2295":"oplus","\u2296":"ominus","\u2297":"otimes","\u2298":"osol","\u2299":"odot","\u229A":"ocir","\u229B":"oast","\u229D":"odash","\u229E":"plusb","\u229F":"minusb","\u22A0":"timesb","\u22A1":"sdotb","\u22A2":"vdash","\u22AC":"nvdash","\u22A3":"dashv","\u22A4":"top","\u22A5":"bot","\u22A7":"models","\u22A8":"vDash","\u22AD":"nvDash","\u22A9":"Vdash","\u22AE":"nVdash","\u22AA":"Vvdash","\u22AB":"VDash","\u22AF":"nVDash","\u22B0":"prurel","\u22B2":"vltri","\u22EA":"nltri","\u22B3":"vrtri","\u22EB":"nrtri","\u22B4":"ltrie","\u22EC":"nltrie","\u22B4\u20D2":"nvltrie","\u22B5":"rtrie","\u22ED":"nrtrie","\u22B5\u20D2":"nvrtrie","\u22B6":"origof","\u22B7":"imof","\u22B8":"mumap","\u22B9":"hercon","\u22BA":"intcal","\u22BB":"veebar","\u22BD":"barvee","\u22BE":"angrtvb","\u22BF":"lrtri","\u22C0":"Wedge","\u22C1":"Vee","\u22C2":"xcap","\u22C3":"xcup","\u22C4":"diam","\u22C5":"sdot","\u22C6":"Star","\u22C7":"divonx","\u22C8":"bowtie","\u22C9":"ltimes","\u22CA":"rtimes","\u22CB":"lthree","\u22CC":"rthree","\u22CD":"bsime","\u22CE":"cuvee","\u22CF":"cuwed","\u22D0":"Sub","\u22D1":"Sup","\u22D2":"Cap","\u22D3":"Cup","\u22D4":"fork","\u22D5":"epar","\u22D6":"ltdot","\u22D7":"gtdot","\u22D8":"Ll","\u22D8\u0338":"nLl","\u22D9":"Gg","\u22D9\u0338":"nGg","\u22DA\uFE00":"lesg","\u22DA":"leg","\u22DB":"gel","\u22DB\uFE00":"gesl","\u22DE":"cuepr","\u22DF":"cuesc","\u22E6":"lnsim","\u22E7":"gnsim","\u22E8":"prnsim","\u22E9":"scnsim","\u22EE":"vellip","\u22EF":"ctdot","\u22F0":"utdot","\u22F1":"dtdot","\u22F2":"disin","\u22F3":"isinsv","\u22F4":"isins","\u22F5":"isindot","\u22F5\u0338":"notindot","\u22F6":"notinvc","\u22F7":"notinvb","\u22F9":"isinE","\u22F9\u0338":"notinE","\u22FA":"nisd","\u22FB":"xnis","\u22FC":"nis","\u22FD":"notnivc","\u22FE":"notnivb","\u2305":"barwed","\u2306":"Barwed","\u230C":"drcrop","\u230D":"dlcrop","\u230E":"urcrop","\u230F":"ulcrop","\u2310":"bnot","\u2312":"profline","\u2313":"profsurf","\u2315":"telrec","\u2316":"target","\u231C":"ulcorn","\u231D":"urcorn","\u231E":"dlcorn","\u231F":"drcorn","\u2322":"frown","\u2323":"smile","\u232D":"cylcty","\u232E":"profalar","\u2336":"topbot","\u233D":"ovbar","\u233F":"solbar","\u237C":"angzarr","\u23B0":"lmoust","\u23B1":"rmoust","\u23B4":"tbrk","\u23B5":"bbrk","\u23B6":"bbrktbrk","\u23DC":"OverParenthesis","\u23DD":"UnderParenthesis","\u23DE":"OverBrace","\u23DF":"UnderBrace","\u23E2":"trpezium","\u23E7":"elinters","\u2423":"blank","\u2500":"boxh","\u2502":"boxv","\u250C":"boxdr","\u2510":"boxdl","\u2514":"boxur","\u2518":"boxul","\u251C":"boxvr","\u2524":"boxvl","\u252C":"boxhd","\u2534":"boxhu","\u253C":"boxvh","\u2550":"boxH","\u2551":"boxV","\u2552":"boxdR","\u2553":"boxDr","\u2554":"boxDR","\u2555":"boxdL","\u2556":"boxDl","\u2557":"boxDL","\u2558":"boxuR","\u2559":"boxUr","\u255A":"boxUR","\u255B":"boxuL","\u255C":"boxUl","\u255D":"boxUL","\u255E":"boxvR","\u255F":"boxVr","\u2560":"boxVR","\u2561":"boxvL","\u2562":"boxVl","\u2563":"boxVL","\u2564":"boxHd","\u2565":"boxhD","\u2566":"boxHD","\u2567":"boxHu","\u2568":"boxhU","\u2569":"boxHU","\u256A":"boxvH","\u256B":"boxVh","\u256C":"boxVH","\u2580":"uhblk","\u2584":"lhblk","\u2588":"block","\u2591":"blk14","\u2592":"blk12","\u2593":"blk34","\u25A1":"squ","\u25AA":"squf","\u25AB":"EmptyVerySmallSquare","\u25AD":"rect","\u25AE":"marker","\u25B1":"fltns","\u25B3":"xutri","\u25B4":"utrif","\u25B5":"utri","\u25B8":"rtrif","\u25B9":"rtri","\u25BD":"xdtri","\u25BE":"dtrif","\u25BF":"dtri","\u25C2":"ltrif","\u25C3":"ltri","\u25CA":"loz","\u25CB":"cir","\u25EC":"tridot","\u25EF":"xcirc","\u25F8":"ultri","\u25F9":"urtri","\u25FA":"lltri","\u25FB":"EmptySmallSquare","\u25FC":"FilledSmallSquare","\u2605":"starf","\u2606":"star","\u260E":"phone","\u2640":"female","\u2642":"male","\u2660":"spades","\u2663":"clubs","\u2665":"hearts","\u2666":"diams","\u266A":"sung","\u2713":"check","\u2717":"cross","\u2720":"malt","\u2736":"sext","\u2758":"VerticalSeparator","\u27C8":"bsolhsub","\u27C9":"suphsol","\u27F5":"xlarr","\u27F6":"xrarr","\u27F7":"xharr","\u27F8":"xlArr","\u27F9":"xrArr","\u27FA":"xhArr","\u27FC":"xmap","\u27FF":"dzigrarr","\u2902":"nvlArr","\u2903":"nvrArr","\u2904":"nvHarr","\u2905":"Map","\u290C":"lbarr","\u290D":"rbarr","\u290E":"lBarr","\u290F":"rBarr","\u2910":"RBarr","\u2911":"DDotrahd","\u2912":"UpArrowBar","\u2913":"DownArrowBar","\u2916":"Rarrtl","\u2919":"latail","\u291A":"ratail","\u291B":"lAtail","\u291C":"rAtail","\u291D":"larrfs","\u291E":"rarrfs","\u291F":"larrbfs","\u2920":"rarrbfs","\u2923":"nwarhk","\u2924":"nearhk","\u2925":"searhk","\u2926":"swarhk","\u2927":"nwnear","\u2928":"toea","\u2929":"tosa","\u292A":"swnwar","\u2933":"rarrc","\u2933\u0338":"nrarrc","\u2935":"cudarrr","\u2936":"ldca","\u2937":"rdca","\u2938":"cudarrl","\u2939":"larrpl","\u293C":"curarrm","\u293D":"cularrp","\u2945":"rarrpl","\u2948":"harrcir","\u2949":"Uarrocir","\u294A":"lurdshar","\u294B":"ldrushar","\u294E":"LeftRightVector","\u294F":"RightUpDownVector","\u2950":"DownLeftRightVector","\u2951":"LeftUpDownVector","\u2952":"LeftVectorBar","\u2953":"RightVectorBar","\u2954":"RightUpVectorBar","\u2955":"RightDownVectorBar","\u2956":"DownLeftVectorBar","\u2957":"DownRightVectorBar","\u2958":"LeftUpVectorBar","\u2959":"LeftDownVectorBar","\u295A":"LeftTeeVector","\u295B":"RightTeeVector","\u295C":"RightUpTeeVector","\u295D":"RightDownTeeVector","\u295E":"DownLeftTeeVector","\u295F":"DownRightTeeVector","\u2960":"LeftUpTeeVector","\u2961":"LeftDownTeeVector","\u2962":"lHar","\u2963":"uHar","\u2964":"rHar","\u2965":"dHar","\u2966":"luruhar","\u2967":"ldrdhar","\u2968":"ruluhar","\u2969":"rdldhar","\u296A":"lharul","\u296B":"llhard","\u296C":"rharul","\u296D":"lrhard","\u296E":"udhar","\u296F":"duhar","\u2970":"RoundImplies","\u2971":"erarr","\u2972":"simrarr","\u2973":"larrsim","\u2974":"rarrsim","\u2975":"rarrap","\u2976":"ltlarr","\u2978":"gtrarr","\u2979":"subrarr","\u297B":"suplarr","\u297C":"lfisht","\u297D":"rfisht","\u297E":"ufisht","\u297F":"dfisht","\u299A":"vzigzag","\u299C":"vangrt","\u299D":"angrtvbd","\u29A4":"ange","\u29A5":"range","\u29A6":"dwangle","\u29A7":"uwangle","\u29A8":"angmsdaa","\u29A9":"angmsdab","\u29AA":"angmsdac","\u29AB":"angmsdad","\u29AC":"angmsdae","\u29AD":"angmsdaf","\u29AE":"angmsdag","\u29AF":"angmsdah","\u29B0":"bemptyv","\u29B1":"demptyv","\u29B2":"cemptyv","\u29B3":"raemptyv","\u29B4":"laemptyv","\u29B5":"ohbar","\u29B6":"omid","\u29B7":"opar","\u29B9":"operp","\u29BB":"olcross","\u29BC":"odsold","\u29BE":"olcir","\u29BF":"ofcir","\u29C0":"olt","\u29C1":"ogt","\u29C2":"cirscir","\u29C3":"cirE","\u29C4":"solb","\u29C5":"bsolb","\u29C9":"boxbox","\u29CD":"trisb","\u29CE":"rtriltri","\u29CF":"LeftTriangleBar","\u29CF\u0338":"NotLeftTriangleBar","\u29D0":"RightTriangleBar","\u29D0\u0338":"NotRightTriangleBar","\u29DC":"iinfin","\u29DD":"infintie","\u29DE":"nvinfin","\u29E3":"eparsl","\u29E4":"smeparsl","\u29E5":"eqvparsl","\u29EB":"lozf","\u29F4":"RuleDelayed","\u29F6":"dsol","\u2A00":"xodot","\u2A01":"xoplus","\u2A02":"xotime","\u2A04":"xuplus","\u2A06":"xsqcup","\u2A0D":"fpartint","\u2A10":"cirfnint","\u2A11":"awint","\u2A12":"rppolint","\u2A13":"scpolint","\u2A14":"npolint","\u2A15":"pointint","\u2A16":"quatint","\u2A17":"intlarhk","\u2A22":"pluscir","\u2A23":"plusacir","\u2A24":"simplus","\u2A25":"plusdu","\u2A26":"plussim","\u2A27":"plustwo","\u2A29":"mcomma","\u2A2A":"minusdu","\u2A2D":"loplus","\u2A2E":"roplus","\u2A2F":"Cross","\u2A30":"timesd","\u2A31":"timesbar","\u2A33":"smashp","\u2A34":"lotimes","\u2A35":"rotimes","\u2A36":"otimesas","\u2A37":"Otimes","\u2A38":"odiv","\u2A39":"triplus","\u2A3A":"triminus","\u2A3B":"tritime","\u2A3C":"iprod","\u2A3F":"amalg","\u2A40":"capdot","\u2A42":"ncup","\u2A43":"ncap","\u2A44":"capand","\u2A45":"cupor","\u2A46":"cupcap","\u2A47":"capcup","\u2A48":"cupbrcap","\u2A49":"capbrcup","\u2A4A":"cupcup","\u2A4B":"capcap","\u2A4C":"ccups","\u2A4D":"ccaps","\u2A50":"ccupssm","\u2A53":"And","\u2A54":"Or","\u2A55":"andand","\u2A56":"oror","\u2A57":"orslope","\u2A58":"andslope","\u2A5A":"andv","\u2A5B":"orv","\u2A5C":"andd","\u2A5D":"ord","\u2A5F":"wedbar","\u2A66":"sdote","\u2A6A":"simdot","\u2A6D":"congdot","\u2A6D\u0338":"ncongdot","\u2A6E":"easter","\u2A6F":"apacir","\u2A70":"apE","\u2A70\u0338":"napE","\u2A71":"eplus","\u2A72":"pluse","\u2A73":"Esim","\u2A77":"eDDot","\u2A78":"equivDD","\u2A79":"ltcir","\u2A7A":"gtcir","\u2A7B":"ltquest","\u2A7C":"gtquest","\u2A7D":"les","\u2A7D\u0338":"nles","\u2A7E":"ges","\u2A7E\u0338":"nges","\u2A7F":"lesdot","\u2A80":"gesdot","\u2A81":"lesdoto","\u2A82":"gesdoto","\u2A83":"lesdotor","\u2A84":"gesdotol","\u2A85":"lap","\u2A86":"gap","\u2A87":"lne","\u2A88":"gne","\u2A89":"lnap","\u2A8A":"gnap","\u2A8B":"lEg","\u2A8C":"gEl","\u2A8D":"lsime","\u2A8E":"gsime","\u2A8F":"lsimg","\u2A90":"gsiml","\u2A91":"lgE","\u2A92":"glE","\u2A93":"lesges","\u2A94":"gesles","\u2A95":"els","\u2A96":"egs","\u2A97":"elsdot","\u2A98":"egsdot","\u2A99":"el","\u2A9A":"eg","\u2A9D":"siml","\u2A9E":"simg","\u2A9F":"simlE","\u2AA0":"simgE","\u2AA1":"LessLess","\u2AA1\u0338":"NotNestedLessLess","\u2AA2":"GreaterGreater","\u2AA2\u0338":"NotNestedGreaterGreater","\u2AA4":"glj","\u2AA5":"gla","\u2AA6":"ltcc","\u2AA7":"gtcc","\u2AA8":"lescc","\u2AA9":"gescc","\u2AAA":"smt","\u2AAB":"lat","\u2AAC":"smte","\u2AAC\uFE00":"smtes","\u2AAD":"late","\u2AAD\uFE00":"lates","\u2AAE":"bumpE","\u2AAF":"pre","\u2AAF\u0338":"npre","\u2AB0":"sce","\u2AB0\u0338":"nsce","\u2AB3":"prE","\u2AB4":"scE","\u2AB5":"prnE","\u2AB6":"scnE","\u2AB7":"prap","\u2AB8":"scap","\u2AB9":"prnap","\u2ABA":"scnap","\u2ABB":"Pr","\u2ABC":"Sc","\u2ABD":"subdot","\u2ABE":"supdot","\u2ABF":"subplus","\u2AC0":"supplus","\u2AC1":"submult","\u2AC2":"supmult","\u2AC3":"subedot","\u2AC4":"supedot","\u2AC5":"subE","\u2AC5\u0338":"nsubE","\u2AC6":"supE","\u2AC6\u0338":"nsupE","\u2AC7":"subsim","\u2AC8":"supsim","\u2ACB\uFE00":"vsubnE","\u2ACB":"subnE","\u2ACC\uFE00":"vsupnE","\u2ACC":"supnE","\u2ACF":"csub","\u2AD0":"csup","\u2AD1":"csube","\u2AD2":"csupe","\u2AD3":"subsup","\u2AD4":"supsub","\u2AD5":"subsub","\u2AD6":"supsup","\u2AD7":"suphsub","\u2AD8":"supdsub","\u2AD9":"forkv","\u2ADA":"topfork","\u2ADB":"mlcp","\u2AE4":"Dashv","\u2AE6":"Vdashl","\u2AE7":"Barv","\u2AE8":"vBar","\u2AE9":"vBarv","\u2AEB":"Vbar","\u2AEC":"Not","\u2AED":"bNot","\u2AEE":"rnmid","\u2AEF":"cirmid","\u2AF0":"midcir","\u2AF1":"topcir","\u2AF2":"nhpar","\u2AF3":"parsim","\u2AFD":"parsl","\u2AFD\u20E5":"nparsl","\u266D":"flat","\u266E":"natur","\u266F":"sharp","\xA4":"curren","\xA2":"cent",$:"dollar","\xA3":"pound","\xA5":"yen","\u20AC":"euro","\xB9":"sup1","\xBD":"half","\u2153":"frac13","\xBC":"frac14","\u2155":"frac15","\u2159":"frac16","\u215B":"frac18","\xB2":"sup2","\u2154":"frac23","\u2156":"frac25","\xB3":"sup3","\xBE":"frac34","\u2157":"frac35","\u215C":"frac38","\u2158":"frac45","\u215A":"frac56","\u215D":"frac58","\u215E":"frac78","\u{1D4B6}":"ascr","\u{1D552}":"aopf","\u{1D51E}":"afr","\u{1D538}":"Aopf","\u{1D504}":"Afr","\u{1D49C}":"Ascr",\u00AA:"ordf",\u00E1:"aacute",\u00C1:"Aacute",\u00E0:"agrave",\u00C0:"Agrave",\u0103:"abreve",\u0102:"Abreve",\u00E2:"acirc",\u00C2:"Acirc",\u00E5:"aring",\u00C5:"angst",\u00E4:"auml",\u00C4:"Auml",\u00E3:"atilde",\u00C3:"Atilde",\u0105:"aogon",\u0104:"Aogon",\u0101:"amacr",\u0100:"Amacr",\u00E6:"aelig",\u00C6:"AElig","\u{1D4B7}":"bscr","\u{1D553}":"bopf","\u{1D51F}":"bfr","\u{1D539}":"Bopf",\u212C:"Bscr","\u{1D505}":"Bfr","\u{1D520}":"cfr","\u{1D4B8}":"cscr","\u{1D554}":"copf",\u212D:"Cfr","\u{1D49E}":"Cscr",\u2102:"Copf",\u0107:"cacute",\u0106:"Cacute",\u0109:"ccirc",\u0108:"Ccirc",\u010D:"ccaron",\u010C:"Ccaron",\u010B:"cdot",\u010A:"Cdot",\u00E7:"ccedil",\u00C7:"Ccedil","\u2105":"incare","\u{1D521}":"dfr","\u2146":"dd","\u{1D555}":"dopf","\u{1D4B9}":"dscr","\u{1D49F}":"Dscr","\u{1D507}":"Dfr","\u2145":"DD","\u{1D53B}":"Dopf",\u010F:"dcaron",\u010E:"Dcaron",\u0111:"dstrok",\u0110:"Dstrok",\u00F0:"eth",\u00D0:"ETH","\u2147":"ee",\u212F:"escr","\u{1D522}":"efr","\u{1D556}":"eopf",\u2130:"Escr","\u{1D508}":"Efr","\u{1D53C}":"Eopf",\u00E9:"eacute",\u00C9:"Eacute",\u00E8:"egrave",\u00C8:"Egrave",\u00EA:"ecirc",\u00CA:"Ecirc",\u011B:"ecaron",\u011A:"Ecaron",\u00EB:"euml",\u00CB:"Euml",\u0117:"edot",\u0116:"Edot",\u0119:"eogon",\u0118:"Eogon",\u0113:"emacr",\u0112:"Emacr","\u{1D523}":"ffr","\u{1D557}":"fopf","\u{1D4BB}":"fscr","\u{1D509}":"Ffr","\u{1D53D}":"Fopf",\u2131:"Fscr",\uFB00:"fflig",\uFB03:"ffilig",\uFB04:"ffllig",\uFB01:"filig",fj:"fjlig",\uFB02:"fllig",\u0192:"fnof",\u210A:"gscr","\u{1D558}":"gopf","\u{1D524}":"gfr","\u{1D4A2}":"Gscr","\u{1D53E}":"Gopf","\u{1D50A}":"Gfr",\u01F5:"gacute",\u011F:"gbreve",\u011E:"Gbreve",\u011D:"gcirc",\u011C:"Gcirc",\u0121:"gdot",\u0120:"Gdot",\u0122:"Gcedil","\u{1D525}":"hfr",\u210E:"planckh","\u{1D4BD}":"hscr","\u{1D559}":"hopf",\u210B:"Hscr",\u210C:"Hfr",\u210D:"Hopf",\u0125:"hcirc",\u0124:"Hcirc",\u210F:"hbar",\u0127:"hstrok",\u0126:"Hstrok","\u{1D55A}":"iopf","\u{1D526}":"ifr","\u{1D4BE}":"iscr","\u2148":"ii","\u{1D540}":"Iopf",\u2110:"Iscr",\u2111:"Im",\u00ED:"iacute",\u00CD:"Iacute",\u00EC:"igrave",\u00CC:"Igrave",\u00EE:"icirc",\u00CE:"Icirc",\u00EF:"iuml",\u00CF:"Iuml",\u0129:"itilde",\u0128:"Itilde",\u0130:"Idot",\u012F:"iogon",\u012E:"Iogon",\u012B:"imacr",\u012A:"Imacr",\u0133:"ijlig",\u0132:"IJlig",\u0131:"imath","\u{1D4BF}":"jscr","\u{1D55B}":"jopf","\u{1D527}":"jfr","\u{1D4A5}":"Jscr","\u{1D50D}":"Jfr","\u{1D541}":"Jopf",\u0135:"jcirc",\u0134:"Jcirc","\u0237":"jmath","\u{1D55C}":"kopf","\u{1D4C0}":"kscr","\u{1D528}":"kfr","\u{1D4A6}":"Kscr","\u{1D542}":"Kopf","\u{1D50E}":"Kfr",\u0137:"kcedil",\u0136:"Kcedil","\u{1D529}":"lfr","\u{1D4C1}":"lscr",\u2113:"ell","\u{1D55D}":"lopf",\u2112:"Lscr","\u{1D50F}":"Lfr","\u{1D543}":"Lopf",\u013A:"lacute",\u0139:"Lacute",\u013E:"lcaron",\u013D:"Lcaron",\u013C:"lcedil",\u013B:"Lcedil",\u0142:"lstrok",\u0141:"Lstrok",\u0140:"lmidot",\u013F:"Lmidot","\u{1D52A}":"mfr","\u{1D55E}":"mopf","\u{1D4C2}":"mscr","\u{1D510}":"Mfr","\u{1D544}":"Mopf",\u2133:"Mscr","\u{1D52B}":"nfr","\u{1D55F}":"nopf","\u{1D4C3}":"nscr",\u2115:"Nopf","\u{1D4A9}":"Nscr","\u{1D511}":"Nfr",\u0144:"nacute",\u0143:"Nacute",\u0148:"ncaron",\u0147:"Ncaron",\u00F1:"ntilde",\u00D1:"Ntilde",\u0146:"ncedil",\u0145:"Ncedil","\u2116":"numero",\u014B:"eng",\u014A:"ENG","\u{1D560}":"oopf","\u{1D52C}":"ofr",\u2134:"oscr","\u{1D4AA}":"Oscr","\u{1D512}":"Ofr","\u{1D546}":"Oopf",\u00BA:"ordm",\u00F3:"oacute",\u00D3:"Oacute",\u00F2:"ograve",\u00D2:"Ograve",\u00F4:"ocirc",\u00D4:"Ocirc",\u00F6:"ouml",\u00D6:"Ouml",\u0151:"odblac",\u0150:"Odblac",\u00F5:"otilde",\u00D5:"Otilde",\u00F8:"oslash",\u00D8:"Oslash",\u014D:"omacr",\u014C:"Omacr",\u0153:"oelig",\u0152:"OElig","\u{1D52D}":"pfr","\u{1D4C5}":"pscr","\u{1D561}":"popf",\u2119:"Popf","\u{1D513}":"Pfr","\u{1D4AB}":"Pscr","\u{1D562}":"qopf","\u{1D52E}":"qfr","\u{1D4C6}":"qscr","\u{1D4AC}":"Qscr","\u{1D514}":"Qfr",\u211A:"Qopf",\u0138:"kgreen","\u{1D52F}":"rfr","\u{1D563}":"ropf","\u{1D4C7}":"rscr",\u211B:"Rscr",\u211C:"Re",\u211D:"Ropf",\u0155:"racute",\u0154:"Racute",\u0159:"rcaron",\u0158:"Rcaron",\u0157:"rcedil",\u0156:"Rcedil","\u{1D564}":"sopf","\u{1D4C8}":"sscr","\u{1D530}":"sfr","\u{1D54A}":"Sopf","\u{1D516}":"Sfr","\u{1D4AE}":"Sscr","\u24C8":"oS",\u015B:"sacute",\u015A:"Sacute",\u015D:"scirc",\u015C:"Scirc",\u0161:"scaron",\u0160:"Scaron",\u015F:"scedil",\u015E:"Scedil",\u00DF:"szlig","\u{1D531}":"tfr","\u{1D4C9}":"tscr","\u{1D565}":"topf","\u{1D4AF}":"Tscr","\u{1D517}":"Tfr","\u{1D54B}":"Topf",\u0165:"tcaron",\u0164:"Tcaron",\u0163:"tcedil",\u0162:"Tcedil","\u2122":"trade",\u0167:"tstrok",\u0166:"Tstrok","\u{1D4CA}":"uscr","\u{1D566}":"uopf","\u{1D532}":"ufr","\u{1D54C}":"Uopf","\u{1D518}":"Ufr","\u{1D4B0}":"Uscr",\u00FA:"uacute",\u00DA:"Uacute",\u00F9:"ugrave",\u00D9:"Ugrave",\u016D:"ubreve",\u016C:"Ubreve",\u00FB:"ucirc",\u00DB:"Ucirc",\u016F:"uring",\u016E:"Uring",\u00FC:"uuml",\u00DC:"Uuml",\u0171:"udblac",\u0170:"Udblac",\u0169:"utilde",\u0168:"Utilde",\u0173:"uogon",\u0172:"Uogon",\u016B:"umacr",\u016A:"Umacr","\u{1D533}":"vfr","\u{1D567}":"vopf","\u{1D4CB}":"vscr","\u{1D519}":"Vfr","\u{1D54D}":"Vopf","\u{1D4B1}":"Vscr","\u{1D568}":"wopf","\u{1D4CC}":"wscr","\u{1D534}":"wfr","\u{1D4B2}":"Wscr","\u{1D54E}":"Wopf","\u{1D51A}":"Wfr",\u0175:"wcirc",\u0174:"Wcirc","\u{1D535}":"xfr","\u{1D4CD}":"xscr","\u{1D569}":"xopf","\u{1D54F}":"Xopf","\u{1D51B}":"Xfr","\u{1D4B3}":"Xscr","\u{1D536}":"yfr","\u{1D4CE}":"yscr","\u{1D56A}":"yopf","\u{1D4B4}":"Yscr","\u{1D51C}":"Yfr","\u{1D550}":"Yopf",\u00FD:"yacute",\u00DD:"Yacute",\u0177:"ycirc",\u0176:"Ycirc",\u00FF:"yuml",\u0178:"Yuml","\u{1D4CF}":"zscr","\u{1D537}":"zfr","\u{1D56B}":"zopf",\u2128:"Zfr",\u2124:"Zopf","\u{1D4B5}":"Zscr",\u017A:"zacute",\u0179:"Zacute",\u017E:"zcaron",\u017D:"Zcaron",\u017C:"zdot",\u017B:"Zdot",\u01B5:"imped",\u00FE:"thorn",\u00DE:"THORN",\u0149:"napos",\u03B1:"alpha",\u0391:"Alpha",\u03B2:"beta",\u0392:"Beta",\u03B3:"gamma",\u0393:"Gamma",\u03B4:"delta",\u0394:"Delta",\u03B5:"epsi","\u03F5":"epsiv",\u0395:"Epsilon",\u03DD:"gammad",\u03DC:"Gammad",\u03B6:"zeta",\u0396:"Zeta",\u03B7:"eta",\u0397:"Eta",\u03B8:"theta",\u03D1:"thetav",\u0398:"Theta",\u03B9:"iota",\u0399:"Iota",\u03BA:"kappa",\u03F0:"kappav",\u039A:"Kappa",\u03BB:"lambda",\u039B:"Lambda",\u03BC:"mu",\u00B5:"micro",\u039C:"Mu",\u03BD:"nu",\u039D:"Nu",\u03BE:"xi",\u039E:"Xi",\u03BF:"omicron",\u039F:"Omicron",\u03C0:"pi",\u03D6:"piv",\u03A0:"Pi",\u03C1:"rho",\u03F1:"rhov",\u03A1:"Rho",\u03C3:"sigma",\u03A3:"Sigma",\u03C2:"sigmaf",\u03C4:"tau",\u03A4:"Tau",\u03C5:"upsi",\u03A5:"Upsilon",\u03D2:"Upsi",\u03C6:"phi",\u03D5:"phiv",\u03A6:"Phi",\u03C7:"chi",\u03A7:"Chi",\u03C8:"psi",\u03A8:"Psi",\u03C9:"omega",\u03A9:"ohm",\u0430:"acy",\u0410:"Acy",\u0431:"bcy",\u0411:"Bcy",\u0432:"vcy",\u0412:"Vcy",\u0433:"gcy",\u0413:"Gcy",\u0453:"gjcy",\u0403:"GJcy",\u0434:"dcy",\u0414:"Dcy",\u0452:"djcy",\u0402:"DJcy",\u0435:"iecy",\u0415:"IEcy",\u0451:"iocy",\u0401:"IOcy",\u0454:"jukcy",\u0404:"Jukcy",\u0436:"zhcy",\u0416:"ZHcy",\u0437:"zcy",\u0417:"Zcy",\u0455:"dscy",\u0405:"DScy",\u0438:"icy",\u0418:"Icy",\u0456:"iukcy",\u0406:"Iukcy",\u0457:"yicy",\u0407:"YIcy",\u0439:"jcy",\u0419:"Jcy",\u0458:"jsercy",\u0408:"Jsercy",\u043A:"kcy",\u041A:"Kcy",\u045C:"kjcy",\u040C:"KJcy",\u043B:"lcy",\u041B:"Lcy",\u0459:"ljcy",\u0409:"LJcy",\u043C:"mcy",\u041C:"Mcy",\u043D:"ncy",\u041D:"Ncy",\u045A:"njcy",\u040A:"NJcy",\u043E:"ocy",\u041E:"Ocy",\u043F:"pcy",\u041F:"Pcy",\u0440:"rcy",\u0420:"Rcy",\u0441:"scy",\u0421:"Scy",\u0442:"tcy",\u0422:"Tcy",\u045B:"tshcy",\u040B:"TSHcy",\u0443:"ucy",\u0423:"Ucy",\u045E:"ubrcy",\u040E:"Ubrcy",\u0444:"fcy",\u0424:"Fcy",\u0445:"khcy",\u0425:"KHcy",\u0446:"tscy",\u0426:"TScy",\u0447:"chcy",\u0427:"CHcy",\u045F:"dzcy",\u040F:"DZcy",\u0448:"shcy",\u0428:"SHcy",\u0449:"shchcy",\u0429:"SHCHcy",\u044A:"hardcy",\u042A:"HARDcy",\u044B:"ycy",\u042B:"Ycy",\u044C:"softcy",\u042C:"SOFTcy",\u044D:"ecy",\u042D:"Ecy",\u044E:"yucy",\u042E:"YUcy",\u044F:"yacy",\u042F:"YAcy",\u2135:"aleph",\u2136:"beth",\u2137:"gimel",\u2138:"daleth"},d=/["&'<>`]/g,u={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},c=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,h=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,m=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,p={aacute:"\xE1",Aacute:"\xC1",abreve:"\u0103",Abreve:"\u0102",ac:"\u223E",acd:"\u223F",acE:"\u223E\u0333",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",acy:"\u0430",Acy:"\u0410",aelig:"\xE6",AElig:"\xC6",af:"\u2061",afr:"\u{1D51E}",Afr:"\u{1D504}",agrave:"\xE0",Agrave:"\xC0",alefsym:"\u2135",aleph:"\u2135",alpha:"\u03B1",Alpha:"\u0391",amacr:"\u0101",Amacr:"\u0100",amalg:"\u2A3F",amp:"&",AMP:"&",and:"\u2227",And:"\u2A53",andand:"\u2A55",andd:"\u2A5C",andslope:"\u2A58",andv:"\u2A5A",ang:"\u2220",ange:"\u29A4",angle:"\u2220",angmsd:"\u2221",angmsdaa:"\u29A8",angmsdab:"\u29A9",angmsdac:"\u29AA",angmsdad:"\u29AB",angmsdae:"\u29AC",angmsdaf:"\u29AD",angmsdag:"\u29AE",angmsdah:"\u29AF",angrt:"\u221F",angrtvb:"\u22BE",angrtvbd:"\u299D",angsph:"\u2222",angst:"\xC5",angzarr:"\u237C",aogon:"\u0105",Aogon:"\u0104",aopf:"\u{1D552}",Aopf:"\u{1D538}",ap:"\u2248",apacir:"\u2A6F",ape:"\u224A",apE:"\u2A70",apid:"\u224B",apos:"'",ApplyFunction:"\u2061",approx:"\u2248",approxeq:"\u224A",aring:"\xE5",Aring:"\xC5",ascr:"\u{1D4B6}",Ascr:"\u{1D49C}",Assign:"\u2254",ast:"*",asymp:"\u2248",asympeq:"\u224D",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",awconint:"\u2233",awint:"\u2A11",backcong:"\u224C",backepsilon:"\u03F6",backprime:"\u2035",backsim:"\u223D",backsimeq:"\u22CD",Backslash:"\u2216",Barv:"\u2AE7",barvee:"\u22BD",barwed:"\u2305",Barwed:"\u2306",barwedge:"\u2305",bbrk:"\u23B5",bbrktbrk:"\u23B6",bcong:"\u224C",bcy:"\u0431",Bcy:"\u0411",bdquo:"\u201E",becaus:"\u2235",because:"\u2235",Because:"\u2235",bemptyv:"\u29B0",bepsi:"\u03F6",bernou:"\u212C",Bernoullis:"\u212C",beta:"\u03B2",Beta:"\u0392",beth:"\u2136",between:"\u226C",bfr:"\u{1D51F}",Bfr:"\u{1D505}",bigcap:"\u22C2",bigcirc:"\u25EF",bigcup:"\u22C3",bigodot:"\u2A00",bigoplus:"\u2A01",bigotimes:"\u2A02",bigsqcup:"\u2A06",bigstar:"\u2605",bigtriangledown:"\u25BD",bigtriangleup:"\u25B3",biguplus:"\u2A04",bigvee:"\u22C1",bigwedge:"\u22C0",bkarow:"\u290D",blacklozenge:"\u29EB",blacksquare:"\u25AA",blacktriangle:"\u25B4",blacktriangledown:"\u25BE",blacktriangleleft:"\u25C2",blacktriangleright:"\u25B8",blank:"\u2423",blk12:"\u2592",blk14:"\u2591",blk34:"\u2593",block:"\u2588",bne:"=\u20E5",bnequiv:"\u2261\u20E5",bnot:"\u2310",bNot:"\u2AED",bopf:"\u{1D553}",Bopf:"\u{1D539}",bot:"\u22A5",bottom:"\u22A5",bowtie:"\u22C8",boxbox:"\u29C9",boxdl:"\u2510",boxdL:"\u2555",boxDl:"\u2556",boxDL:"\u2557",boxdr:"\u250C",boxdR:"\u2552",boxDr:"\u2553",boxDR:"\u2554",boxh:"\u2500",boxH:"\u2550",boxhd:"\u252C",boxhD:"\u2565",boxHd:"\u2564",boxHD:"\u2566",boxhu:"\u2534",boxhU:"\u2568",boxHu:"\u2567",boxHU:"\u2569",boxminus:"\u229F",boxplus:"\u229E",boxtimes:"\u22A0",boxul:"\u2518",boxuL:"\u255B",boxUl:"\u255C",boxUL:"\u255D",boxur:"\u2514",boxuR:"\u2558",boxUr:"\u2559",boxUR:"\u255A",boxv:"\u2502",boxV:"\u2551",boxvh:"\u253C",boxvH:"\u256A",boxVh:"\u256B",boxVH:"\u256C",boxvl:"\u2524",boxvL:"\u2561",boxVl:"\u2562",boxVL:"\u2563",boxvr:"\u251C",boxvR:"\u255E",boxVr:"\u255F",boxVR:"\u2560",bprime:"\u2035",breve:"\u02D8",Breve:"\u02D8",brvbar:"\xA6",bscr:"\u{1D4B7}",Bscr:"\u212C",bsemi:"\u204F",bsim:"\u223D",bsime:"\u22CD",bsol:"\\",bsolb:"\u29C5",bsolhsub:"\u27C8",bull:"\u2022",bullet:"\u2022",bump:"\u224E",bumpe:"\u224F",bumpE:"\u2AAE",bumpeq:"\u224F",Bumpeq:"\u224E",cacute:"\u0107",Cacute:"\u0106",cap:"\u2229",Cap:"\u22D2",capand:"\u2A44",capbrcup:"\u2A49",capcap:"\u2A4B",capcup:"\u2A47",capdot:"\u2A40",CapitalDifferentialD:"\u2145",caps:"\u2229\uFE00",caret:"\u2041",caron:"\u02C7",Cayleys:"\u212D",ccaps:"\u2A4D",ccaron:"\u010D",Ccaron:"\u010C",ccedil:"\xE7",Ccedil:"\xC7",ccirc:"\u0109",Ccirc:"\u0108",Cconint:"\u2230",ccups:"\u2A4C",ccupssm:"\u2A50",cdot:"\u010B",Cdot:"\u010A",cedil:"\xB8",Cedilla:"\xB8",cemptyv:"\u29B2",cent:"\xA2",centerdot:"\xB7",CenterDot:"\xB7",cfr:"\u{1D520}",Cfr:"\u212D",chcy:"\u0447",CHcy:"\u0427",check:"\u2713",checkmark:"\u2713",chi:"\u03C7",Chi:"\u03A7",cir:"\u25CB",circ:"\u02C6",circeq:"\u2257",circlearrowleft:"\u21BA",circlearrowright:"\u21BB",circledast:"\u229B",circledcirc:"\u229A",circleddash:"\u229D",CircleDot:"\u2299",circledR:"\xAE",circledS:"\u24C8",CircleMinus:"\u2296",CirclePlus:"\u2295",CircleTimes:"\u2297",cire:"\u2257",cirE:"\u29C3",cirfnint:"\u2A10",cirmid:"\u2AEF",cirscir:"\u29C2",ClockwiseContourIntegral:"\u2232",CloseCurlyDoubleQuote:"\u201D",CloseCurlyQuote:"\u2019",clubs:"\u2663",clubsuit:"\u2663",colon:":",Colon:"\u2237",colone:"\u2254",Colone:"\u2A74",coloneq:"\u2254",comma:",",commat:"@",comp:"\u2201",compfn:"\u2218",complement:"\u2201",complexes:"\u2102",cong:"\u2245",congdot:"\u2A6D",Congruent:"\u2261",conint:"\u222E",Conint:"\u222F",ContourIntegral:"\u222E",copf:"\u{1D554}",Copf:"\u2102",coprod:"\u2210",Coproduct:"\u2210",copy:"\xA9",COPY:"\xA9",copysr:"\u2117",CounterClockwiseContourIntegral:"\u2233",crarr:"\u21B5",cross:"\u2717",Cross:"\u2A2F",cscr:"\u{1D4B8}",Cscr:"\u{1D49E}",csub:"\u2ACF",csube:"\u2AD1",csup:"\u2AD0",csupe:"\u2AD2",ctdot:"\u22EF",cudarrl:"\u2938",cudarrr:"\u2935",cuepr:"\u22DE",cuesc:"\u22DF",cularr:"\u21B6",cularrp:"\u293D",cup:"\u222A",Cup:"\u22D3",cupbrcap:"\u2A48",cupcap:"\u2A46",CupCap:"\u224D",cupcup:"\u2A4A",cupdot:"\u228D",cupor:"\u2A45",cups:"\u222A\uFE00",curarr:"\u21B7",curarrm:"\u293C",curlyeqprec:"\u22DE",curlyeqsucc:"\u22DF",curlyvee:"\u22CE",curlywedge:"\u22CF",curren:"\xA4",curvearrowleft:"\u21B6",curvearrowright:"\u21B7",cuvee:"\u22CE",cuwed:"\u22CF",cwconint:"\u2232",cwint:"\u2231",cylcty:"\u232D",dagger:"\u2020",Dagger:"\u2021",daleth:"\u2138",darr:"\u2193",dArr:"\u21D3",Darr:"\u21A1",dash:"\u2010",dashv:"\u22A3",Dashv:"\u2AE4",dbkarow:"\u290F",dblac:"\u02DD",dcaron:"\u010F",Dcaron:"\u010E",dcy:"\u0434",Dcy:"\u0414",dd:"\u2146",DD:"\u2145",ddagger:"\u2021",ddarr:"\u21CA",DDotrahd:"\u2911",ddotseq:"\u2A77",deg:"\xB0",Del:"\u2207",delta:"\u03B4",Delta:"\u0394",demptyv:"\u29B1",dfisht:"\u297F",dfr:"\u{1D521}",Dfr:"\u{1D507}",dHar:"\u2965",dharl:"\u21C3",dharr:"\u21C2",DiacriticalAcute:"\xB4",DiacriticalDot:"\u02D9",DiacriticalDoubleAcute:"\u02DD",DiacriticalGrave:"`",DiacriticalTilde:"\u02DC",diam:"\u22C4",diamond:"\u22C4",Diamond:"\u22C4",diamondsuit:"\u2666",diams:"\u2666",die:"\xA8",DifferentialD:"\u2146",digamma:"\u03DD",disin:"\u22F2",div:"\xF7",divide:"\xF7",divideontimes:"\u22C7",divonx:"\u22C7",djcy:"\u0452",DJcy:"\u0402",dlcorn:"\u231E",dlcrop:"\u230D",dollar:"$",dopf:"\u{1D555}",Dopf:"\u{1D53B}",dot:"\u02D9",Dot:"\xA8",DotDot:"\u20DC",doteq:"\u2250",doteqdot:"\u2251",DotEqual:"\u2250",dotminus:"\u2238",dotplus:"\u2214",dotsquare:"\u22A1",doublebarwedge:"\u2306",DoubleContourIntegral:"\u222F",DoubleDot:"\xA8",DoubleDownArrow:"\u21D3",DoubleLeftArrow:"\u21D0",DoubleLeftRightArrow:"\u21D4",DoubleLeftTee:"\u2AE4",DoubleLongLeftArrow:"\u27F8",DoubleLongLeftRightArrow:"\u27FA",DoubleLongRightArrow:"\u27F9",DoubleRightArrow:"\u21D2",DoubleRightTee:"\u22A8",DoubleUpArrow:"\u21D1",DoubleUpDownArrow:"\u21D5",DoubleVerticalBar:"\u2225",downarrow:"\u2193",Downarrow:"\u21D3",DownArrow:"\u2193",DownArrowBar:"\u2913",DownArrowUpArrow:"\u21F5",DownBreve:"\u0311",downdownarrows:"\u21CA",downharpoonleft:"\u21C3",downharpoonright:"\u21C2",DownLeftRightVector:"\u2950",DownLeftTeeVector:"\u295E",DownLeftVector:"\u21BD",DownLeftVectorBar:"\u2956",DownRightTeeVector:"\u295F",DownRightVector:"\u21C1",DownRightVectorBar:"\u2957",DownTee:"\u22A4",DownTeeArrow:"\u21A7",drbkarow:"\u2910",drcorn:"\u231F",drcrop:"\u230C",dscr:"\u{1D4B9}",Dscr:"\u{1D49F}",dscy:"\u0455",DScy:"\u0405",dsol:"\u29F6",dstrok:"\u0111",Dstrok:"\u0110",dtdot:"\u22F1",dtri:"\u25BF",dtrif:"\u25BE",duarr:"\u21F5",duhar:"\u296F",dwangle:"\u29A6",dzcy:"\u045F",DZcy:"\u040F",dzigrarr:"\u27FF",eacute:"\xE9",Eacute:"\xC9",easter:"\u2A6E",ecaron:"\u011B",Ecaron:"\u011A",ecir:"\u2256",ecirc:"\xEA",Ecirc:"\xCA",ecolon:"\u2255",ecy:"\u044D",Ecy:"\u042D",eDDot:"\u2A77",edot:"\u0117",eDot:"\u2251",Edot:"\u0116",ee:"\u2147",efDot:"\u2252",efr:"\u{1D522}",Efr:"\u{1D508}",eg:"\u2A9A",egrave:"\xE8",Egrave:"\xC8",egs:"\u2A96",egsdot:"\u2A98",el:"\u2A99",Element:"\u2208",elinters:"\u23E7",ell:"\u2113",els:"\u2A95",elsdot:"\u2A97",emacr:"\u0113",Emacr:"\u0112",empty:"\u2205",emptyset:"\u2205",EmptySmallSquare:"\u25FB",emptyv:"\u2205",EmptyVerySmallSquare:"\u25AB",emsp:"\u2003",emsp13:"\u2004",emsp14:"\u2005",eng:"\u014B",ENG:"\u014A",ensp:"\u2002",eogon:"\u0119",Eogon:"\u0118",eopf:"\u{1D556}",Eopf:"\u{1D53C}",epar:"\u22D5",eparsl:"\u29E3",eplus:"\u2A71",epsi:"\u03B5",epsilon:"\u03B5",Epsilon:"\u0395",epsiv:"\u03F5",eqcirc:"\u2256",eqcolon:"\u2255",eqsim:"\u2242",eqslantgtr:"\u2A96",eqslantless:"\u2A95",Equal:"\u2A75",equals:"=",EqualTilde:"\u2242",equest:"\u225F",Equilibrium:"\u21CC",equiv:"\u2261",equivDD:"\u2A78",eqvparsl:"\u29E5",erarr:"\u2971",erDot:"\u2253",escr:"\u212F",Escr:"\u2130",esdot:"\u2250",esim:"\u2242",Esim:"\u2A73",eta:"\u03B7",Eta:"\u0397",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",euro:"\u20AC",excl:"!",exist:"\u2203",Exists:"\u2203",expectation:"\u2130",exponentiale:"\u2147",ExponentialE:"\u2147",fallingdotseq:"\u2252",fcy:"\u0444",Fcy:"\u0424",female:"\u2640",ffilig:"\uFB03",fflig:"\uFB00",ffllig:"\uFB04",ffr:"\u{1D523}",Ffr:"\u{1D509}",filig:"\uFB01",FilledSmallSquare:"\u25FC",FilledVerySmallSquare:"\u25AA",fjlig:"fj",flat:"\u266D",fllig:"\uFB02",fltns:"\u25B1",fnof:"\u0192",fopf:"\u{1D557}",Fopf:"\u{1D53D}",forall:"\u2200",ForAll:"\u2200",fork:"\u22D4",forkv:"\u2AD9",Fouriertrf:"\u2131",fpartint:"\u2A0D",frac12:"\xBD",frac13:"\u2153",frac14:"\xBC",frac15:"\u2155",frac16:"\u2159",frac18:"\u215B",frac23:"\u2154",frac25:"\u2156",frac34:"\xBE",frac35:"\u2157",frac38:"\u215C",frac45:"\u2158",frac56:"\u215A",frac58:"\u215D",frac78:"\u215E",frasl:"\u2044",frown:"\u2322",fscr:"\u{1D4BB}",Fscr:"\u2131",gacute:"\u01F5",gamma:"\u03B3",Gamma:"\u0393",gammad:"\u03DD",Gammad:"\u03DC",gap:"\u2A86",gbreve:"\u011F",Gbreve:"\u011E",Gcedil:"\u0122",gcirc:"\u011D",Gcirc:"\u011C",gcy:"\u0433",Gcy:"\u0413",gdot:"\u0121",Gdot:"\u0120",ge:"\u2265",gE:"\u2267",gel:"\u22DB",gEl:"\u2A8C",geq:"\u2265",geqq:"\u2267",geqslant:"\u2A7E",ges:"\u2A7E",gescc:"\u2AA9",gesdot:"\u2A80",gesdoto:"\u2A82",gesdotol:"\u2A84",gesl:"\u22DB\uFE00",gesles:"\u2A94",gfr:"\u{1D524}",Gfr:"\u{1D50A}",gg:"\u226B",Gg:"\u22D9",ggg:"\u22D9",gimel:"\u2137",gjcy:"\u0453",GJcy:"\u0403",gl:"\u2277",gla:"\u2AA5",glE:"\u2A92",glj:"\u2AA4",gnap:"\u2A8A",gnapprox:"\u2A8A",gne:"\u2A88",gnE:"\u2269",gneq:"\u2A88",gneqq:"\u2269",gnsim:"\u22E7",gopf:"\u{1D558}",Gopf:"\u{1D53E}",grave:"`",GreaterEqual:"\u2265",GreaterEqualLess:"\u22DB",GreaterFullEqual:"\u2267",GreaterGreater:"\u2AA2",GreaterLess:"\u2277",GreaterSlantEqual:"\u2A7E",GreaterTilde:"\u2273",gscr:"\u210A",Gscr:"\u{1D4A2}",gsim:"\u2273",gsime:"\u2A8E",gsiml:"\u2A90",gt:">",Gt:"\u226B",GT:">",gtcc:"\u2AA7",gtcir:"\u2A7A",gtdot:"\u22D7",gtlPar:"\u2995",gtquest:"\u2A7C",gtrapprox:"\u2A86",gtrarr:"\u2978",gtrdot:"\u22D7",gtreqless:"\u22DB",gtreqqless:"\u2A8C",gtrless:"\u2277",gtrsim:"\u2273",gvertneqq:"\u2269\uFE00",gvnE:"\u2269\uFE00",Hacek:"\u02C7",hairsp:"\u200A",half:"\xBD",hamilt:"\u210B",hardcy:"\u044A",HARDcy:"\u042A",harr:"\u2194",hArr:"\u21D4",harrcir:"\u2948",harrw:"\u21AD",Hat:"^",hbar:"\u210F",hcirc:"\u0125",Hcirc:"\u0124",hearts:"\u2665",heartsuit:"\u2665",hellip:"\u2026",hercon:"\u22B9",hfr:"\u{1D525}",Hfr:"\u210C",HilbertSpace:"\u210B",hksearow:"\u2925",hkswarow:"\u2926",hoarr:"\u21FF",homtht:"\u223B",hookleftarrow:"\u21A9",hookrightarrow:"\u21AA",hopf:"\u{1D559}",Hopf:"\u210D",horbar:"\u2015",HorizontalLine:"\u2500",hscr:"\u{1D4BD}",Hscr:"\u210B",hslash:"\u210F",hstrok:"\u0127",Hstrok:"\u0126",HumpDownHump:"\u224E",HumpEqual:"\u224F",hybull:"\u2043",hyphen:"\u2010",iacute:"\xED",Iacute:"\xCD",ic:"\u2063",icirc:"\xEE",Icirc:"\xCE",icy:"\u0438",Icy:"\u0418",Idot:"\u0130",iecy:"\u0435",IEcy:"\u0415",iexcl:"\xA1",iff:"\u21D4",ifr:"\u{1D526}",Ifr:"\u2111",igrave:"\xEC",Igrave:"\xCC",ii:"\u2148",iiiint:"\u2A0C",iiint:"\u222D",iinfin:"\u29DC",iiota:"\u2129",ijlig:"\u0133",IJlig:"\u0132",Im:"\u2111",imacr:"\u012B",Imacr:"\u012A",image:"\u2111",ImaginaryI:"\u2148",imagline:"\u2110",imagpart:"\u2111",imath:"\u0131",imof:"\u22B7",imped:"\u01B5",Implies:"\u21D2",in:"\u2208",incare:"\u2105",infin:"\u221E",infintie:"\u29DD",inodot:"\u0131",int:"\u222B",Int:"\u222C",intcal:"\u22BA",integers:"\u2124",Integral:"\u222B",intercal:"\u22BA",Intersection:"\u22C2",intlarhk:"\u2A17",intprod:"\u2A3C",InvisibleComma:"\u2063",InvisibleTimes:"\u2062",iocy:"\u0451",IOcy:"\u0401",iogon:"\u012F",Iogon:"\u012E",iopf:"\u{1D55A}",Iopf:"\u{1D540}",iota:"\u03B9",Iota:"\u0399",iprod:"\u2A3C",iquest:"\xBF",iscr:"\u{1D4BE}",Iscr:"\u2110",isin:"\u2208",isindot:"\u22F5",isinE:"\u22F9",isins:"\u22F4",isinsv:"\u22F3",isinv:"\u2208",it:"\u2062",itilde:"\u0129",Itilde:"\u0128",iukcy:"\u0456",Iukcy:"\u0406",iuml:"\xEF",Iuml:"\xCF",jcirc:"\u0135",Jcirc:"\u0134",jcy:"\u0439",Jcy:"\u0419",jfr:"\u{1D527}",Jfr:"\u{1D50D}",jmath:"\u0237",jopf:"\u{1D55B}",Jopf:"\u{1D541}",jscr:"\u{1D4BF}",Jscr:"\u{1D4A5}",jsercy:"\u0458",Jsercy:"\u0408",jukcy:"\u0454",Jukcy:"\u0404",kappa:"\u03BA",Kappa:"\u039A",kappav:"\u03F0",kcedil:"\u0137",Kcedil:"\u0136",kcy:"\u043A",Kcy:"\u041A",kfr:"\u{1D528}",Kfr:"\u{1D50E}",kgreen:"\u0138",khcy:"\u0445",KHcy:"\u0425",kjcy:"\u045C",KJcy:"\u040C",kopf:"\u{1D55C}",Kopf:"\u{1D542}",kscr:"\u{1D4C0}",Kscr:"\u{1D4A6}",lAarr:"\u21DA",lacute:"\u013A",Lacute:"\u0139",laemptyv:"\u29B4",lagran:"\u2112",lambda:"\u03BB",Lambda:"\u039B",lang:"\u27E8",Lang:"\u27EA",langd:"\u2991",langle:"\u27E8",lap:"\u2A85",Laplacetrf:"\u2112",laquo:"\xAB",larr:"\u2190",lArr:"\u21D0",Larr:"\u219E",larrb:"\u21E4",larrbfs:"\u291F",larrfs:"\u291D",larrhk:"\u21A9",larrlp:"\u21AB",larrpl:"\u2939",larrsim:"\u2973",larrtl:"\u21A2",lat:"\u2AAB",latail:"\u2919",lAtail:"\u291B",late:"\u2AAD",lates:"\u2AAD\uFE00",lbarr:"\u290C",lBarr:"\u290E",lbbrk:"\u2772",lbrace:"{",lbrack:"[",lbrke:"\u298B",lbrksld:"\u298F",lbrkslu:"\u298D",lcaron:"\u013E",Lcaron:"\u013D",lcedil:"\u013C",Lcedil:"\u013B",lceil:"\u2308",lcub:"{",lcy:"\u043B",Lcy:"\u041B",ldca:"\u2936",ldquo:"\u201C",ldquor:"\u201E",ldrdhar:"\u2967",ldrushar:"\u294B",ldsh:"\u21B2",le:"\u2264",lE:"\u2266",LeftAngleBracket:"\u27E8",leftarrow:"\u2190",Leftarrow:"\u21D0",LeftArrow:"\u2190",LeftArrowBar:"\u21E4",LeftArrowRightArrow:"\u21C6",leftarrowtail:"\u21A2",LeftCeiling:"\u2308",LeftDoubleBracket:"\u27E6",LeftDownTeeVector:"\u2961",LeftDownVector:"\u21C3",LeftDownVectorBar:"\u2959",LeftFloor:"\u230A",leftharpoondown:"\u21BD",leftharpoonup:"\u21BC",leftleftarrows:"\u21C7",leftrightarrow:"\u2194",Leftrightarrow:"\u21D4",LeftRightArrow:"\u2194",leftrightarrows:"\u21C6",leftrightharpoons:"\u21CB",leftrightsquigarrow:"\u21AD",LeftRightVector:"\u294E",LeftTee:"\u22A3",LeftTeeArrow:"\u21A4",LeftTeeVector:"\u295A",leftthreetimes:"\u22CB",LeftTriangle:"\u22B2",LeftTriangleBar:"\u29CF",LeftTriangleEqual:"\u22B4",LeftUpDownVector:"\u2951",LeftUpTeeVector:"\u2960",LeftUpVector:"\u21BF",LeftUpVectorBar:"\u2958",LeftVector:"\u21BC",LeftVectorBar:"\u2952",leg:"\u22DA",lEg:"\u2A8B",leq:"\u2264",leqq:"\u2266",leqslant:"\u2A7D",les:"\u2A7D",lescc:"\u2AA8",lesdot:"\u2A7F",lesdoto:"\u2A81",lesdotor:"\u2A83",lesg:"\u22DA\uFE00",lesges:"\u2A93",lessapprox:"\u2A85",lessdot:"\u22D6",lesseqgtr:"\u22DA",lesseqqgtr:"\u2A8B",LessEqualGreater:"\u22DA",LessFullEqual:"\u2266",LessGreater:"\u2276",lessgtr:"\u2276",LessLess:"\u2AA1",lesssim:"\u2272",LessSlantEqual:"\u2A7D",LessTilde:"\u2272",lfisht:"\u297C",lfloor:"\u230A",lfr:"\u{1D529}",Lfr:"\u{1D50F}",lg:"\u2276",lgE:"\u2A91",lHar:"\u2962",lhard:"\u21BD",lharu:"\u21BC",lharul:"\u296A",lhblk:"\u2584",ljcy:"\u0459",LJcy:"\u0409",ll:"\u226A",Ll:"\u22D8",llarr:"\u21C7",llcorner:"\u231E",Lleftarrow:"\u21DA",llhard:"\u296B",lltri:"\u25FA",lmidot:"\u0140",Lmidot:"\u013F",lmoust:"\u23B0",lmoustache:"\u23B0",lnap:"\u2A89",lnapprox:"\u2A89",lne:"\u2A87",lnE:"\u2268",lneq:"\u2A87",lneqq:"\u2268",lnsim:"\u22E6",loang:"\u27EC",loarr:"\u21FD",lobrk:"\u27E6",longleftarrow:"\u27F5",Longleftarrow:"\u27F8",LongLeftArrow:"\u27F5",longleftrightarrow:"\u27F7",Longleftrightarrow:"\u27FA",LongLeftRightArrow:"\u27F7",longmapsto:"\u27FC",longrightarrow:"\u27F6",Longrightarrow:"\u27F9",LongRightArrow:"\u27F6",looparrowleft:"\u21AB",looparrowright:"\u21AC",lopar:"\u2985",lopf:"\u{1D55D}",Lopf:"\u{1D543}",loplus:"\u2A2D",lotimes:"\u2A34",lowast:"\u2217",lowbar:"_",LowerLeftArrow:"\u2199",LowerRightArrow:"\u2198",loz:"\u25CA",lozenge:"\u25CA",lozf:"\u29EB",lpar:"(",lparlt:"\u2993",lrarr:"\u21C6",lrcorner:"\u231F",lrhar:"\u21CB",lrhard:"\u296D",lrm:"\u200E",lrtri:"\u22BF",lsaquo:"\u2039",lscr:"\u{1D4C1}",Lscr:"\u2112",lsh:"\u21B0",Lsh:"\u21B0",lsim:"\u2272",lsime:"\u2A8D",lsimg:"\u2A8F",lsqb:"[",lsquo:"\u2018",lsquor:"\u201A",lstrok:"\u0142",Lstrok:"\u0141",lt:"<",Lt:"\u226A",LT:"<",ltcc:"\u2AA6",ltcir:"\u2A79",ltdot:"\u22D6",lthree:"\u22CB",ltimes:"\u22C9",ltlarr:"\u2976",ltquest:"\u2A7B",ltri:"\u25C3",ltrie:"\u22B4",ltrif:"\u25C2",ltrPar:"\u2996",lurdshar:"\u294A",luruhar:"\u2966",lvertneqq:"\u2268\uFE00",lvnE:"\u2268\uFE00",macr:"\xAF",male:"\u2642",malt:"\u2720",maltese:"\u2720",map:"\u21A6",Map:"\u2905",mapsto:"\u21A6",mapstodown:"\u21A7",mapstoleft:"\u21A4",mapstoup:"\u21A5",marker:"\u25AE",mcomma:"\u2A29",mcy:"\u043C",Mcy:"\u041C",mdash:"\u2014",mDDot:"\u223A",measuredangle:"\u2221",MediumSpace:"\u205F",Mellintrf:"\u2133",mfr:"\u{1D52A}",Mfr:"\u{1D510}",mho:"\u2127",micro:"\xB5",mid:"\u2223",midast:"*",midcir:"\u2AF0",middot:"\xB7",minus:"\u2212",minusb:"\u229F",minusd:"\u2238",minusdu:"\u2A2A",MinusPlus:"\u2213",mlcp:"\u2ADB",mldr:"\u2026",mnplus:"\u2213",models:"\u22A7",mopf:"\u{1D55E}",Mopf:"\u{1D544}",mp:"\u2213",mscr:"\u{1D4C2}",Mscr:"\u2133",mstpos:"\u223E",mu:"\u03BC",Mu:"\u039C",multimap:"\u22B8",mumap:"\u22B8",nabla:"\u2207",nacute:"\u0144",Nacute:"\u0143",nang:"\u2220\u20D2",nap:"\u2249",napE:"\u2A70\u0338",napid:"\u224B\u0338",napos:"\u0149",napprox:"\u2249",natur:"\u266E",natural:"\u266E",naturals:"\u2115",nbsp:"\xA0",nbump:"\u224E\u0338",nbumpe:"\u224F\u0338",ncap:"\u2A43",ncaron:"\u0148",Ncaron:"\u0147",ncedil:"\u0146",Ncedil:"\u0145",ncong:"\u2247",ncongdot:"\u2A6D\u0338",ncup:"\u2A42",ncy:"\u043D",Ncy:"\u041D",ndash:"\u2013",ne:"\u2260",nearhk:"\u2924",nearr:"\u2197",neArr:"\u21D7",nearrow:"\u2197",nedot:"\u2250\u0338",NegativeMediumSpace:"\u200B",NegativeThickSpace:"\u200B",NegativeThinSpace:"\u200B",NegativeVeryThinSpace:"\u200B",nequiv:"\u2262",nesear:"\u2928",nesim:"\u2242\u0338",NestedGreaterGreater:"\u226B",NestedLessLess:"\u226A",NewLine:`
`,nexist:"\u2204",nexists:"\u2204",nfr:"\u{1D52B}",Nfr:"\u{1D511}",nge:"\u2271",ngE:"\u2267\u0338",ngeq:"\u2271",ngeqq:"\u2267\u0338",ngeqslant:"\u2A7E\u0338",nges:"\u2A7E\u0338",nGg:"\u22D9\u0338",ngsim:"\u2275",ngt:"\u226F",nGt:"\u226B\u20D2",ngtr:"\u226F",nGtv:"\u226B\u0338",nharr:"\u21AE",nhArr:"\u21CE",nhpar:"\u2AF2",ni:"\u220B",nis:"\u22FC",nisd:"\u22FA",niv:"\u220B",njcy:"\u045A",NJcy:"\u040A",nlarr:"\u219A",nlArr:"\u21CD",nldr:"\u2025",nle:"\u2270",nlE:"\u2266\u0338",nleftarrow:"\u219A",nLeftarrow:"\u21CD",nleftrightarrow:"\u21AE",nLeftrightarrow:"\u21CE",nleq:"\u2270",nleqq:"\u2266\u0338",nleqslant:"\u2A7D\u0338",nles:"\u2A7D\u0338",nless:"\u226E",nLl:"\u22D8\u0338",nlsim:"\u2274",nlt:"\u226E",nLt:"\u226A\u20D2",nltri:"\u22EA",nltrie:"\u22EC",nLtv:"\u226A\u0338",nmid:"\u2224",NoBreak:"\u2060",NonBreakingSpace:"\xA0",nopf:"\u{1D55F}",Nopf:"\u2115",not:"\xAC",Not:"\u2AEC",NotCongruent:"\u2262",NotCupCap:"\u226D",NotDoubleVerticalBar:"\u2226",NotElement:"\u2209",NotEqual:"\u2260",NotEqualTilde:"\u2242\u0338",NotExists:"\u2204",NotGreater:"\u226F",NotGreaterEqual:"\u2271",NotGreaterFullEqual:"\u2267\u0338",NotGreaterGreater:"\u226B\u0338",NotGreaterLess:"\u2279",NotGreaterSlantEqual:"\u2A7E\u0338",NotGreaterTilde:"\u2275",NotHumpDownHump:"\u224E\u0338",NotHumpEqual:"\u224F\u0338",notin:"\u2209",notindot:"\u22F5\u0338",notinE:"\u22F9\u0338",notinva:"\u2209",notinvb:"\u22F7",notinvc:"\u22F6",NotLeftTriangle:"\u22EA",NotLeftTriangleBar:"\u29CF\u0338",NotLeftTriangleEqual:"\u22EC",NotLess:"\u226E",NotLessEqual:"\u2270",NotLessGreater:"\u2278",NotLessLess:"\u226A\u0338",NotLessSlantEqual:"\u2A7D\u0338",NotLessTilde:"\u2274",NotNestedGreaterGreater:"\u2AA2\u0338",NotNestedLessLess:"\u2AA1\u0338",notni:"\u220C",notniva:"\u220C",notnivb:"\u22FE",notnivc:"\u22FD",NotPrecedes:"\u2280",NotPrecedesEqual:"\u2AAF\u0338",NotPrecedesSlantEqual:"\u22E0",NotReverseElement:"\u220C",NotRightTriangle:"\u22EB",NotRightTriangleBar:"\u29D0\u0338",NotRightTriangleEqual:"\u22ED",NotSquareSubset:"\u228F\u0338",NotSquareSubsetEqual:"\u22E2",NotSquareSuperset:"\u2290\u0338",NotSquareSupersetEqual:"\u22E3",NotSubset:"\u2282\u20D2",NotSubsetEqual:"\u2288",NotSucceeds:"\u2281",NotSucceedsEqual:"\u2AB0\u0338",NotSucceedsSlantEqual:"\u22E1",NotSucceedsTilde:"\u227F\u0338",NotSuperset:"\u2283\u20D2",NotSupersetEqual:"\u2289",NotTilde:"\u2241",NotTildeEqual:"\u2244",NotTildeFullEqual:"\u2247",NotTildeTilde:"\u2249",NotVerticalBar:"\u2224",npar:"\u2226",nparallel:"\u2226",nparsl:"\u2AFD\u20E5",npart:"\u2202\u0338",npolint:"\u2A14",npr:"\u2280",nprcue:"\u22E0",npre:"\u2AAF\u0338",nprec:"\u2280",npreceq:"\u2AAF\u0338",nrarr:"\u219B",nrArr:"\u21CF",nrarrc:"\u2933\u0338",nrarrw:"\u219D\u0338",nrightarrow:"\u219B",nRightarrow:"\u21CF",nrtri:"\u22EB",nrtrie:"\u22ED",nsc:"\u2281",nsccue:"\u22E1",nsce:"\u2AB0\u0338",nscr:"\u{1D4C3}",Nscr:"\u{1D4A9}",nshortmid:"\u2224",nshortparallel:"\u2226",nsim:"\u2241",nsime:"\u2244",nsimeq:"\u2244",nsmid:"\u2224",nspar:"\u2226",nsqsube:"\u22E2",nsqsupe:"\u22E3",nsub:"\u2284",nsube:"\u2288",nsubE:"\u2AC5\u0338",nsubset:"\u2282\u20D2",nsubseteq:"\u2288",nsubseteqq:"\u2AC5\u0338",nsucc:"\u2281",nsucceq:"\u2AB0\u0338",nsup:"\u2285",nsupe:"\u2289",nsupE:"\u2AC6\u0338",nsupset:"\u2283\u20D2",nsupseteq:"\u2289",nsupseteqq:"\u2AC6\u0338",ntgl:"\u2279",ntilde:"\xF1",Ntilde:"\xD1",ntlg:"\u2278",ntriangleleft:"\u22EA",ntrianglelefteq:"\u22EC",ntriangleright:"\u22EB",ntrianglerighteq:"\u22ED",nu:"\u03BD",Nu:"\u039D",num:"#",numero:"\u2116",numsp:"\u2007",nvap:"\u224D\u20D2",nvdash:"\u22AC",nvDash:"\u22AD",nVdash:"\u22AE",nVDash:"\u22AF",nvge:"\u2265\u20D2",nvgt:">\u20D2",nvHarr:"\u2904",nvinfin:"\u29DE",nvlArr:"\u2902",nvle:"\u2264\u20D2",nvlt:"<\u20D2",nvltrie:"\u22B4\u20D2",nvrArr:"\u2903",nvrtrie:"\u22B5\u20D2",nvsim:"\u223C\u20D2",nwarhk:"\u2923",nwarr:"\u2196",nwArr:"\u21D6",nwarrow:"\u2196",nwnear:"\u2927",oacute:"\xF3",Oacute:"\xD3",oast:"\u229B",ocir:"\u229A",ocirc:"\xF4",Ocirc:"\xD4",ocy:"\u043E",Ocy:"\u041E",odash:"\u229D",odblac:"\u0151",Odblac:"\u0150",odiv:"\u2A38",odot:"\u2299",odsold:"\u29BC",oelig:"\u0153",OElig:"\u0152",ofcir:"\u29BF",ofr:"\u{1D52C}",Ofr:"\u{1D512}",ogon:"\u02DB",ograve:"\xF2",Ograve:"\xD2",ogt:"\u29C1",ohbar:"\u29B5",ohm:"\u03A9",oint:"\u222E",olarr:"\u21BA",olcir:"\u29BE",olcross:"\u29BB",oline:"\u203E",olt:"\u29C0",omacr:"\u014D",Omacr:"\u014C",omega:"\u03C9",Omega:"\u03A9",omicron:"\u03BF",Omicron:"\u039F",omid:"\u29B6",ominus:"\u2296",oopf:"\u{1D560}",Oopf:"\u{1D546}",opar:"\u29B7",OpenCurlyDoubleQuote:"\u201C",OpenCurlyQuote:"\u2018",operp:"\u29B9",oplus:"\u2295",or:"\u2228",Or:"\u2A54",orarr:"\u21BB",ord:"\u2A5D",order:"\u2134",orderof:"\u2134",ordf:"\xAA",ordm:"\xBA",origof:"\u22B6",oror:"\u2A56",orslope:"\u2A57",orv:"\u2A5B",oS:"\u24C8",oscr:"\u2134",Oscr:"\u{1D4AA}",oslash:"\xF8",Oslash:"\xD8",osol:"\u2298",otilde:"\xF5",Otilde:"\xD5",otimes:"\u2297",Otimes:"\u2A37",otimesas:"\u2A36",ouml:"\xF6",Ouml:"\xD6",ovbar:"\u233D",OverBar:"\u203E",OverBrace:"\u23DE",OverBracket:"\u23B4",OverParenthesis:"\u23DC",par:"\u2225",para:"\xB6",parallel:"\u2225",parsim:"\u2AF3",parsl:"\u2AFD",part:"\u2202",PartialD:"\u2202",pcy:"\u043F",Pcy:"\u041F",percnt:"%",period:".",permil:"\u2030",perp:"\u22A5",pertenk:"\u2031",pfr:"\u{1D52D}",Pfr:"\u{1D513}",phi:"\u03C6",Phi:"\u03A6",phiv:"\u03D5",phmmat:"\u2133",phone:"\u260E",pi:"\u03C0",Pi:"\u03A0",pitchfork:"\u22D4",piv:"\u03D6",planck:"\u210F",planckh:"\u210E",plankv:"\u210F",plus:"+",plusacir:"\u2A23",plusb:"\u229E",pluscir:"\u2A22",plusdo:"\u2214",plusdu:"\u2A25",pluse:"\u2A72",PlusMinus:"\xB1",plusmn:"\xB1",plussim:"\u2A26",plustwo:"\u2A27",pm:"\xB1",Poincareplane:"\u210C",pointint:"\u2A15",popf:"\u{1D561}",Popf:"\u2119",pound:"\xA3",pr:"\u227A",Pr:"\u2ABB",prap:"\u2AB7",prcue:"\u227C",pre:"\u2AAF",prE:"\u2AB3",prec:"\u227A",precapprox:"\u2AB7",preccurlyeq:"\u227C",Precedes:"\u227A",PrecedesEqual:"\u2AAF",PrecedesSlantEqual:"\u227C",PrecedesTilde:"\u227E",preceq:"\u2AAF",precnapprox:"\u2AB9",precneqq:"\u2AB5",precnsim:"\u22E8",precsim:"\u227E",prime:"\u2032",Prime:"\u2033",primes:"\u2119",prnap:"\u2AB9",prnE:"\u2AB5",prnsim:"\u22E8",prod:"\u220F",Product:"\u220F",profalar:"\u232E",profline:"\u2312",profsurf:"\u2313",prop:"\u221D",Proportion:"\u2237",Proportional:"\u221D",propto:"\u221D",prsim:"\u227E",prurel:"\u22B0",pscr:"\u{1D4C5}",Pscr:"\u{1D4AB}",psi:"\u03C8",Psi:"\u03A8",puncsp:"\u2008",qfr:"\u{1D52E}",Qfr:"\u{1D514}",qint:"\u2A0C",qopf:"\u{1D562}",Qopf:"\u211A",qprime:"\u2057",qscr:"\u{1D4C6}",Qscr:"\u{1D4AC}",quaternions:"\u210D",quatint:"\u2A16",quest:"?",questeq:"\u225F",quot:'"',QUOT:'"',rAarr:"\u21DB",race:"\u223D\u0331",racute:"\u0155",Racute:"\u0154",radic:"\u221A",raemptyv:"\u29B3",rang:"\u27E9",Rang:"\u27EB",rangd:"\u2992",range:"\u29A5",rangle:"\u27E9",raquo:"\xBB",rarr:"\u2192",rArr:"\u21D2",Rarr:"\u21A0",rarrap:"\u2975",rarrb:"\u21E5",rarrbfs:"\u2920",rarrc:"\u2933",rarrfs:"\u291E",rarrhk:"\u21AA",rarrlp:"\u21AC",rarrpl:"\u2945",rarrsim:"\u2974",rarrtl:"\u21A3",Rarrtl:"\u2916",rarrw:"\u219D",ratail:"\u291A",rAtail:"\u291C",ratio:"\u2236",rationals:"\u211A",rbarr:"\u290D",rBarr:"\u290F",RBarr:"\u2910",rbbrk:"\u2773",rbrace:"}",rbrack:"]",rbrke:"\u298C",rbrksld:"\u298E",rbrkslu:"\u2990",rcaron:"\u0159",Rcaron:"\u0158",rcedil:"\u0157",Rcedil:"\u0156",rceil:"\u2309",rcub:"}",rcy:"\u0440",Rcy:"\u0420",rdca:"\u2937",rdldhar:"\u2969",rdquo:"\u201D",rdquor:"\u201D",rdsh:"\u21B3",Re:"\u211C",real:"\u211C",realine:"\u211B",realpart:"\u211C",reals:"\u211D",rect:"\u25AD",reg:"\xAE",REG:"\xAE",ReverseElement:"\u220B",ReverseEquilibrium:"\u21CB",ReverseUpEquilibrium:"\u296F",rfisht:"\u297D",rfloor:"\u230B",rfr:"\u{1D52F}",Rfr:"\u211C",rHar:"\u2964",rhard:"\u21C1",rharu:"\u21C0",rharul:"\u296C",rho:"\u03C1",Rho:"\u03A1",rhov:"\u03F1",RightAngleBracket:"\u27E9",rightarrow:"\u2192",Rightarrow:"\u21D2",RightArrow:"\u2192",RightArrowBar:"\u21E5",RightArrowLeftArrow:"\u21C4",rightarrowtail:"\u21A3",RightCeiling:"\u2309",RightDoubleBracket:"\u27E7",RightDownTeeVector:"\u295D",RightDownVector:"\u21C2",RightDownVectorBar:"\u2955",RightFloor:"\u230B",rightharpoondown:"\u21C1",rightharpoonup:"\u21C0",rightleftarrows:"\u21C4",rightleftharpoons:"\u21CC",rightrightarrows:"\u21C9",rightsquigarrow:"\u219D",RightTee:"\u22A2",RightTeeArrow:"\u21A6",RightTeeVector:"\u295B",rightthreetimes:"\u22CC",RightTriangle:"\u22B3",RightTriangleBar:"\u29D0",RightTriangleEqual:"\u22B5",RightUpDownVector:"\u294F",RightUpTeeVector:"\u295C",RightUpVector:"\u21BE",RightUpVectorBar:"\u2954",RightVector:"\u21C0",RightVectorBar:"\u2953",ring:"\u02DA",risingdotseq:"\u2253",rlarr:"\u21C4",rlhar:"\u21CC",rlm:"\u200F",rmoust:"\u23B1",rmoustache:"\u23B1",rnmid:"\u2AEE",roang:"\u27ED",roarr:"\u21FE",robrk:"\u27E7",ropar:"\u2986",ropf:"\u{1D563}",Ropf:"\u211D",roplus:"\u2A2E",rotimes:"\u2A35",RoundImplies:"\u2970",rpar:")",rpargt:"\u2994",rppolint:"\u2A12",rrarr:"\u21C9",Rrightarrow:"\u21DB",rsaquo:"\u203A",rscr:"\u{1D4C7}",Rscr:"\u211B",rsh:"\u21B1",Rsh:"\u21B1",rsqb:"]",rsquo:"\u2019",rsquor:"\u2019",rthree:"\u22CC",rtimes:"\u22CA",rtri:"\u25B9",rtrie:"\u22B5",rtrif:"\u25B8",rtriltri:"\u29CE",RuleDelayed:"\u29F4",ruluhar:"\u2968",rx:"\u211E",sacute:"\u015B",Sacute:"\u015A",sbquo:"\u201A",sc:"\u227B",Sc:"\u2ABC",scap:"\u2AB8",scaron:"\u0161",Scaron:"\u0160",sccue:"\u227D",sce:"\u2AB0",scE:"\u2AB4",scedil:"\u015F",Scedil:"\u015E",scirc:"\u015D",Scirc:"\u015C",scnap:"\u2ABA",scnE:"\u2AB6",scnsim:"\u22E9",scpolint:"\u2A13",scsim:"\u227F",scy:"\u0441",Scy:"\u0421",sdot:"\u22C5",sdotb:"\u22A1",sdote:"\u2A66",searhk:"\u2925",searr:"\u2198",seArr:"\u21D8",searrow:"\u2198",sect:"\xA7",semi:";",seswar:"\u2929",setminus:"\u2216",setmn:"\u2216",sext:"\u2736",sfr:"\u{1D530}",Sfr:"\u{1D516}",sfrown:"\u2322",sharp:"\u266F",shchcy:"\u0449",SHCHcy:"\u0429",shcy:"\u0448",SHcy:"\u0428",ShortDownArrow:"\u2193",ShortLeftArrow:"\u2190",shortmid:"\u2223",shortparallel:"\u2225",ShortRightArrow:"\u2192",ShortUpArrow:"\u2191",shy:"\xAD",sigma:"\u03C3",Sigma:"\u03A3",sigmaf:"\u03C2",sigmav:"\u03C2",sim:"\u223C",simdot:"\u2A6A",sime:"\u2243",simeq:"\u2243",simg:"\u2A9E",simgE:"\u2AA0",siml:"\u2A9D",simlE:"\u2A9F",simne:"\u2246",simplus:"\u2A24",simrarr:"\u2972",slarr:"\u2190",SmallCircle:"\u2218",smallsetminus:"\u2216",smashp:"\u2A33",smeparsl:"\u29E4",smid:"\u2223",smile:"\u2323",smt:"\u2AAA",smte:"\u2AAC",smtes:"\u2AAC\uFE00",softcy:"\u044C",SOFTcy:"\u042C",sol:"/",solb:"\u29C4",solbar:"\u233F",sopf:"\u{1D564}",Sopf:"\u{1D54A}",spades:"\u2660",spadesuit:"\u2660",spar:"\u2225",sqcap:"\u2293",sqcaps:"\u2293\uFE00",sqcup:"\u2294",sqcups:"\u2294\uFE00",Sqrt:"\u221A",sqsub:"\u228F",sqsube:"\u2291",sqsubset:"\u228F",sqsubseteq:"\u2291",sqsup:"\u2290",sqsupe:"\u2292",sqsupset:"\u2290",sqsupseteq:"\u2292",squ:"\u25A1",square:"\u25A1",Square:"\u25A1",SquareIntersection:"\u2293",SquareSubset:"\u228F",SquareSubsetEqual:"\u2291",SquareSuperset:"\u2290",SquareSupersetEqual:"\u2292",SquareUnion:"\u2294",squarf:"\u25AA",squf:"\u25AA",srarr:"\u2192",sscr:"\u{1D4C8}",Sscr:"\u{1D4AE}",ssetmn:"\u2216",ssmile:"\u2323",sstarf:"\u22C6",star:"\u2606",Star:"\u22C6",starf:"\u2605",straightepsilon:"\u03F5",straightphi:"\u03D5",strns:"\xAF",sub:"\u2282",Sub:"\u22D0",subdot:"\u2ABD",sube:"\u2286",subE:"\u2AC5",subedot:"\u2AC3",submult:"\u2AC1",subne:"\u228A",subnE:"\u2ACB",subplus:"\u2ABF",subrarr:"\u2979",subset:"\u2282",Subset:"\u22D0",subseteq:"\u2286",subseteqq:"\u2AC5",SubsetEqual:"\u2286",subsetneq:"\u228A",subsetneqq:"\u2ACB",subsim:"\u2AC7",subsub:"\u2AD5",subsup:"\u2AD3",succ:"\u227B",succapprox:"\u2AB8",succcurlyeq:"\u227D",Succeeds:"\u227B",SucceedsEqual:"\u2AB0",SucceedsSlantEqual:"\u227D",SucceedsTilde:"\u227F",succeq:"\u2AB0",succnapprox:"\u2ABA",succneqq:"\u2AB6",succnsim:"\u22E9",succsim:"\u227F",SuchThat:"\u220B",sum:"\u2211",Sum:"\u2211",sung:"\u266A",sup:"\u2283",Sup:"\u22D1",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",supdot:"\u2ABE",supdsub:"\u2AD8",supe:"\u2287",supE:"\u2AC6",supedot:"\u2AC4",Superset:"\u2283",SupersetEqual:"\u2287",suphsol:"\u27C9",suphsub:"\u2AD7",suplarr:"\u297B",supmult:"\u2AC2",supne:"\u228B",supnE:"\u2ACC",supplus:"\u2AC0",supset:"\u2283",Supset:"\u22D1",supseteq:"\u2287",supseteqq:"\u2AC6",supsetneq:"\u228B",supsetneqq:"\u2ACC",supsim:"\u2AC8",supsub:"\u2AD4",supsup:"\u2AD6",swarhk:"\u2926",swarr:"\u2199",swArr:"\u21D9",swarrow:"\u2199",swnwar:"\u292A",szlig:"\xDF",Tab:"	",target:"\u2316",tau:"\u03C4",Tau:"\u03A4",tbrk:"\u23B4",tcaron:"\u0165",Tcaron:"\u0164",tcedil:"\u0163",Tcedil:"\u0162",tcy:"\u0442",Tcy:"\u0422",tdot:"\u20DB",telrec:"\u2315",tfr:"\u{1D531}",Tfr:"\u{1D517}",there4:"\u2234",therefore:"\u2234",Therefore:"\u2234",theta:"\u03B8",Theta:"\u0398",thetasym:"\u03D1",thetav:"\u03D1",thickapprox:"\u2248",thicksim:"\u223C",ThickSpace:"\u205F\u200A",thinsp:"\u2009",ThinSpace:"\u2009",thkap:"\u2248",thksim:"\u223C",thorn:"\xFE",THORN:"\xDE",tilde:"\u02DC",Tilde:"\u223C",TildeEqual:"\u2243",TildeFullEqual:"\u2245",TildeTilde:"\u2248",times:"\xD7",timesb:"\u22A0",timesbar:"\u2A31",timesd:"\u2A30",tint:"\u222D",toea:"\u2928",top:"\u22A4",topbot:"\u2336",topcir:"\u2AF1",topf:"\u{1D565}",Topf:"\u{1D54B}",topfork:"\u2ADA",tosa:"\u2929",tprime:"\u2034",trade:"\u2122",TRADE:"\u2122",triangle:"\u25B5",triangledown:"\u25BF",triangleleft:"\u25C3",trianglelefteq:"\u22B4",triangleq:"\u225C",triangleright:"\u25B9",trianglerighteq:"\u22B5",tridot:"\u25EC",trie:"\u225C",triminus:"\u2A3A",TripleDot:"\u20DB",triplus:"\u2A39",trisb:"\u29CD",tritime:"\u2A3B",trpezium:"\u23E2",tscr:"\u{1D4C9}",Tscr:"\u{1D4AF}",tscy:"\u0446",TScy:"\u0426",tshcy:"\u045B",TSHcy:"\u040B",tstrok:"\u0167",Tstrok:"\u0166",twixt:"\u226C",twoheadleftarrow:"\u219E",twoheadrightarrow:"\u21A0",uacute:"\xFA",Uacute:"\xDA",uarr:"\u2191",uArr:"\u21D1",Uarr:"\u219F",Uarrocir:"\u2949",ubrcy:"\u045E",Ubrcy:"\u040E",ubreve:"\u016D",Ubreve:"\u016C",ucirc:"\xFB",Ucirc:"\xDB",ucy:"\u0443",Ucy:"\u0423",udarr:"\u21C5",udblac:"\u0171",Udblac:"\u0170",udhar:"\u296E",ufisht:"\u297E",ufr:"\u{1D532}",Ufr:"\u{1D518}",ugrave:"\xF9",Ugrave:"\xD9",uHar:"\u2963",uharl:"\u21BF",uharr:"\u21BE",uhblk:"\u2580",ulcorn:"\u231C",ulcorner:"\u231C",ulcrop:"\u230F",ultri:"\u25F8",umacr:"\u016B",Umacr:"\u016A",uml:"\xA8",UnderBar:"_",UnderBrace:"\u23DF",UnderBracket:"\u23B5",UnderParenthesis:"\u23DD",Union:"\u22C3",UnionPlus:"\u228E",uogon:"\u0173",Uogon:"\u0172",uopf:"\u{1D566}",Uopf:"\u{1D54C}",uparrow:"\u2191",Uparrow:"\u21D1",UpArrow:"\u2191",UpArrowBar:"\u2912",UpArrowDownArrow:"\u21C5",updownarrow:"\u2195",Updownarrow:"\u21D5",UpDownArrow:"\u2195",UpEquilibrium:"\u296E",upharpoonleft:"\u21BF",upharpoonright:"\u21BE",uplus:"\u228E",UpperLeftArrow:"\u2196",UpperRightArrow:"\u2197",upsi:"\u03C5",Upsi:"\u03D2",upsih:"\u03D2",upsilon:"\u03C5",Upsilon:"\u03A5",UpTee:"\u22A5",UpTeeArrow:"\u21A5",upuparrows:"\u21C8",urcorn:"\u231D",urcorner:"\u231D",urcrop:"\u230E",uring:"\u016F",Uring:"\u016E",urtri:"\u25F9",uscr:"\u{1D4CA}",Uscr:"\u{1D4B0}",utdot:"\u22F0",utilde:"\u0169",Utilde:"\u0168",utri:"\u25B5",utrif:"\u25B4",uuarr:"\u21C8",uuml:"\xFC",Uuml:"\xDC",uwangle:"\u29A7",vangrt:"\u299C",varepsilon:"\u03F5",varkappa:"\u03F0",varnothing:"\u2205",varphi:"\u03D5",varpi:"\u03D6",varpropto:"\u221D",varr:"\u2195",vArr:"\u21D5",varrho:"\u03F1",varsigma:"\u03C2",varsubsetneq:"\u228A\uFE00",varsubsetneqq:"\u2ACB\uFE00",varsupsetneq:"\u228B\uFE00",varsupsetneqq:"\u2ACC\uFE00",vartheta:"\u03D1",vartriangleleft:"\u22B2",vartriangleright:"\u22B3",vBar:"\u2AE8",Vbar:"\u2AEB",vBarv:"\u2AE9",vcy:"\u0432",Vcy:"\u0412",vdash:"\u22A2",vDash:"\u22A8",Vdash:"\u22A9",VDash:"\u22AB",Vdashl:"\u2AE6",vee:"\u2228",Vee:"\u22C1",veebar:"\u22BB",veeeq:"\u225A",vellip:"\u22EE",verbar:"|",Verbar:"\u2016",vert:"|",Vert:"\u2016",VerticalBar:"\u2223",VerticalLine:"|",VerticalSeparator:"\u2758",VerticalTilde:"\u2240",VeryThinSpace:"\u200A",vfr:"\u{1D533}",Vfr:"\u{1D519}",vltri:"\u22B2",vnsub:"\u2282\u20D2",vnsup:"\u2283\u20D2",vopf:"\u{1D567}",Vopf:"\u{1D54D}",vprop:"\u221D",vrtri:"\u22B3",vscr:"\u{1D4CB}",Vscr:"\u{1D4B1}",vsubne:"\u228A\uFE00",vsubnE:"\u2ACB\uFE00",vsupne:"\u228B\uFE00",vsupnE:"\u2ACC\uFE00",Vvdash:"\u22AA",vzigzag:"\u299A",wcirc:"\u0175",Wcirc:"\u0174",wedbar:"\u2A5F",wedge:"\u2227",Wedge:"\u22C0",wedgeq:"\u2259",weierp:"\u2118",wfr:"\u{1D534}",Wfr:"\u{1D51A}",wopf:"\u{1D568}",Wopf:"\u{1D54E}",wp:"\u2118",wr:"\u2240",wreath:"\u2240",wscr:"\u{1D4CC}",Wscr:"\u{1D4B2}",xcap:"\u22C2",xcirc:"\u25EF",xcup:"\u22C3",xdtri:"\u25BD",xfr:"\u{1D535}",Xfr:"\u{1D51B}",xharr:"\u27F7",xhArr:"\u27FA",xi:"\u03BE",Xi:"\u039E",xlarr:"\u27F5",xlArr:"\u27F8",xmap:"\u27FC",xnis:"\u22FB",xodot:"\u2A00",xopf:"\u{1D569}",Xopf:"\u{1D54F}",xoplus:"\u2A01",xotime:"\u2A02",xrarr:"\u27F6",xrArr:"\u27F9",xscr:"\u{1D4CD}",Xscr:"\u{1D4B3}",xsqcup:"\u2A06",xuplus:"\u2A04",xutri:"\u25B3",xvee:"\u22C1",xwedge:"\u22C0",yacute:"\xFD",Yacute:"\xDD",yacy:"\u044F",YAcy:"\u042F",ycirc:"\u0177",Ycirc:"\u0176",ycy:"\u044B",Ycy:"\u042B",yen:"\xA5",yfr:"\u{1D536}",Yfr:"\u{1D51C}",yicy:"\u0457",YIcy:"\u0407",yopf:"\u{1D56A}",Yopf:"\u{1D550}",yscr:"\u{1D4CE}",Yscr:"\u{1D4B4}",yucy:"\u044E",YUcy:"\u042E",yuml:"\xFF",Yuml:"\u0178",zacute:"\u017A",Zacute:"\u0179",zcaron:"\u017E",Zcaron:"\u017D",zcy:"\u0437",Zcy:"\u0417",zdot:"\u017C",Zdot:"\u017B",zeetrf:"\u2128",ZeroWidthSpace:"\u200B",zeta:"\u03B6",Zeta:"\u0396",zfr:"\u{1D537}",Zfr:"\u2128",zhcy:"\u0436",ZHcy:"\u0416",zigrarr:"\u21DD",zopf:"\u{1D56B}",Zopf:"\u2124",zscr:"\u{1D4CF}",Zscr:"\u{1D4B5}",zwj:"\u200D",zwnj:"\u200C"},D={aacute:"\xE1",Aacute:"\xC1",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",aelig:"\xE6",AElig:"\xC6",agrave:"\xE0",Agrave:"\xC0",amp:"&",AMP:"&",aring:"\xE5",Aring:"\xC5",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",brvbar:"\xA6",ccedil:"\xE7",Ccedil:"\xC7",cedil:"\xB8",cent:"\xA2",copy:"\xA9",COPY:"\xA9",curren:"\xA4",deg:"\xB0",divide:"\xF7",eacute:"\xE9",Eacute:"\xC9",ecirc:"\xEA",Ecirc:"\xCA",egrave:"\xE8",Egrave:"\xC8",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",frac12:"\xBD",frac14:"\xBC",frac34:"\xBE",gt:">",GT:">",iacute:"\xED",Iacute:"\xCD",icirc:"\xEE",Icirc:"\xCE",iexcl:"\xA1",igrave:"\xEC",Igrave:"\xCC",iquest:"\xBF",iuml:"\xEF",Iuml:"\xCF",laquo:"\xAB",lt:"<",LT:"<",macr:"\xAF",micro:"\xB5",middot:"\xB7",nbsp:"\xA0",not:"\xAC",ntilde:"\xF1",Ntilde:"\xD1",oacute:"\xF3",Oacute:"\xD3",ocirc:"\xF4",Ocirc:"\xD4",ograve:"\xF2",Ograve:"\xD2",ordf:"\xAA",ordm:"\xBA",oslash:"\xF8",Oslash:"\xD8",otilde:"\xF5",Otilde:"\xD5",ouml:"\xF6",Ouml:"\xD6",para:"\xB6",plusmn:"\xB1",pound:"\xA3",quot:'"',QUOT:'"',raquo:"\xBB",reg:"\xAE",REG:"\xAE",sect:"\xA7",shy:"\xAD",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",szlig:"\xDF",thorn:"\xFE",THORN:"\xDE",times:"\xD7",uacute:"\xFA",Uacute:"\xDA",ucirc:"\xFB",Ucirc:"\xDB",ugrave:"\xF9",Ugrave:"\xD9",uml:"\xA8",uuml:"\xFC",Uuml:"\xDC",yacute:"\xFD",Yacute:"\xDD",yen:"\xA5",yuml:"\xFF"},y={"0":"\uFFFD","128":"\u20AC","130":"\u201A","131":"\u0192","132":"\u201E","133":"\u2026","134":"\u2020","135":"\u2021","136":"\u02C6","137":"\u2030","138":"\u0160","139":"\u2039","140":"\u0152","142":"\u017D","145":"\u2018","146":"\u2019","147":"\u201C","148":"\u201D","149":"\u2022","150":"\u2013","151":"\u2014","152":"\u02DC","153":"\u2122","154":"\u0161","155":"\u203A","156":"\u0153","158":"\u017E","159":"\u0178"},A=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],_=String.fromCharCode,C={},B=C.hasOwnProperty,z=function(K,Z){return B.call(K,Z)},L=function(K,Z){for(var he=-1,Se=K.length;++he<Se;)if(K[he]==Z)return!0;return!1},N=function(K,Z){if(!K)return Z;var he={},Se;for(Se in Z)he[Se]=z(K,Se)?K[Se]:Z[Se];return he},j=function(K,Z){var he="";return K>=55296&&K<=57343||K>1114111?(Z&&I("character reference outside the permissible Unicode range"),"\uFFFD"):z(y,K)?(Z&&I("disallowed character reference"),y[K]):(Z&&L(A,K)&&I("disallowed character reference"),K>65535&&(K-=65536,he+=_(K>>>10&1023|55296),K=56320|K&1023),he+=_(K),he)},F=function(K){return"&#x"+K.toString(16).toUpperCase()+";"},W=function(K){return"&#"+K+";"},I=function(K){throw Error("Parse error: "+K)},G=function(K,Z){Z=N(Z,G.options);var he=Z.strict;he&&h.test(K)&&I("forbidden code point");var Se=Z.encodeEverything,ce=Z.useNamedReferences,xe=Z.allowUnsafeSymbols,ze=Z.decimal?W:F,tt=function(je){return ze(je.charCodeAt(0))};return Se?(K=K.replace(o,function(je){return ce&&z(s,je)?"&"+s[je]+";":tt(je)}),ce&&(K=K.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),ce&&(K=K.replace(l,function(je){return"&"+s[je]+";"}))):ce?(xe||(K=K.replace(d,function(je){return"&"+s[je]+";"})),K=K.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;"),K=K.replace(l,function(je){return"&"+s[je]+";"})):xe||(K=K.replace(d,tt)),K.replace(r,function(je){var ft=je.charCodeAt(0),Bt=je.charCodeAt(1),ht=(ft-55296)*1024+Bt-56320+65536;return ze(ht)}).replace(i,tt)};G.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var ue=function(K,Z){Z=N(Z,ue.options);var he=Z.strict;return he&&c.test(K)&&I("malformed character reference"),K.replace(m,function(Se,ce,xe,ze,tt,je,ft,Bt,ht){var Et,kt,Vt,pn,Ut,on;return ce?(Ut=ce,p[Ut]):xe?(Ut=xe,on=ze,on&&Z.isAttributeValue?(he&&on=="="&&I("`&` did not start a character reference"),Se):(he&&I("named character reference was not terminated by a semicolon"),D[Ut]+(on||""))):tt?(Vt=tt,kt=je,he&&!kt&&I("character reference was not terminated by a semicolon"),Et=parseInt(Vt,10),j(Et,he)):ft?(pn=ft,kt=Bt,he&&!kt&&I("character reference was not terminated by a semicolon"),Et=parseInt(pn,16),j(Et,he)):(he&&I("named character reference was not terminated by a semicolon"),Se)})};ue.options={isAttributeValue:!1,strict:!1};var we=function(K){return K.replace(d,function(Z){return u[Z]})},ge={version:"1.2.0",encode:G,decode:ue,escape:we,unescape:ue};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd)define(function(){return ge});else if(e&&!e.nodeType)if(t)t.exports=ge;else for(var Ce in ge)z(ge,Ce)&&(e[Ce]=ge[Ce]);else n.he=ge})(Mr)});Ym(exports,{DEFAULT_CALENDAR:()=>bi,DEFAULT_DATA:()=>ph,MODIFIER_KEY:()=>hh,default:()=>ps});var Na=Te(require("obsidian"));var be=Te(require("obsidian")),xa=Te(Er());var Ll=Te(ql());function io(n,e){let t=window.moment(n),a=window.moment(e),r=a.diff(t,"days");return(t.year()<a.year()||t.dayOfYear()<a.dayOfYear())&&(t.hour()>a.hour()||t.minute()>a.minute()||t.second()>a.second()||t.millisecond()>a.millisecond())&&(r+=1),r}function Wn(n,e){return(n%e+e)%e}function He(n){return"ID_xyxyxyxyxyxy".replace(/[xy]/g,function(e){var t=Math.random()*16|0,a=e=="x"?t:t&3|8;return a.toString(16)})}function da(n){if(!n.interval?.length)return"";let e=n.interval.sort((r,o)=>r.interval-o.interval),t=[];for(let r of e){let o=r.interval+(r.ignore?0:n.offset);if(r.exclusive)t.push(`not every ${xt(o)} year`);else{let i=e.indexOf(r),l=i>0&&e[i-1].exclusive;t.push(`${l?"also ":""}every ${xt(o)} year`)}}let a=t.join(", but ");return a[0].toUpperCase()+a.slice(1).toLowerCase()}function xt(n){let e=n%10,t=n%100;return e==1&&t!=11?n+"st":e==2&&t!=12?n+"nd":e==3&&t!=13?n+"rd":n+"th"}function zt(n,e,t){if(!n||n.day==null)return"";let{day:a,month:r,year:o}=n;if(r!=null&&!e[r])return"Invalid Date";if(t&&t.day){let i=t.day,l=t.month,s=t.year;if(l!=null&&s!=null&&r!=null&&o!=null)return o!=s?`${e[r].name} ${xt(a)}, ${o} - ${e[l].name} ${xt(i)}, ${s}`:l==r?`${e[r].name} ${xt(a)}-${xt(i)}, ${o}`:r!=null&&o!=null?`${e[r].name} ${xt(a)}-${e[l].name} ${xt(i)}, ${o}`:r!=null?`${e[r].name} ${xt(a)}-${e[l].name} ${xt(i)} of every year`:`${xt(a)}-${xt(i)} of every month`}return r!=null&&o!=null?`${e[r].name} ${xt(a)}, ${o}`:r!=null?`${e[r].name} ${xt(a)} of every year`:`${xt(a)} of every month`}var Pl=Te(Rl()),Ir=class{static import(e){let t=[];for(let a of e){let r=a.name??"Imported Calendar",o=a.static_data;if(!o)continue;let i=o.year_data;if(!i)continue;let l=i.first_day-1,s=i.overflow??!0,d=i.global_week;if(!d)continue;let u=d.map(N=>({type:"day",name:N,id:He(6)})),c=i.timespans;if(!c)continue;let h=c.map(N=>({name:(0,Pl.decode)(N.name),type:N.type,length:N.length,id:He(6)})),m=h.reduce((N,j)=>j.type=="month"?N+j.length:N,0),p=[];if("leap_days"in i)for(let N of i.leap_days){let F=(N.interval.split(",")??["1"]).map(W=>{let I=/\+/.test(W),G=/\!/.test(W),ue=W.match(/(\d+)/).first();return{ignore:I,exclusive:G,interval:Number(ue)}});p.push({name:N.name??`Leap Day ${p.length+1}`,type:"leapday",interval:F,timespan:N.timespan??0,intercalary:N.intercalary??!1,offset:N.offset??0,id:He(6)})}let D=[];if("moons"in o)for(let N of o.moons)D.push({name:N.name??`Moon ${D.length+1}`,cycle:Number(N.cycle)??m,offset:N.shift??0,faceColor:N.color??"#ffffff",shadowColor:N.shadow_color??"#000000",id:He(6)});let y=[];if("eras"in o)for(let N of o.eras)y.push({name:N.name??`Era ${y.length+1}`,description:N.description,format:N.formatting??"Year {{year}} - {{era_name}}",start:{year:N.date?.year??1,month:N.date?.timespan??0,day:N.date?.day??0}});let A={firstWeekDay:l,overflow:s,weekdays:u,months:h,moons:D,leapDays:p,eras:y,displayMoons:!0,incrementDay:!1,displayDayNumber:!1},_={year:1,day:1,month:0};a.dynamic_data&&(_.year=a.dynamic_data.year??_.year,_.day=a.dynamic_data.day??_.day,_.month=a.dynamic_data.month??_.month);let C=[],B=new Map;if("categories"in a)for(let N of a.categories){let j=N.name,F=j?.split(" ").join("-").toLowerCase()??He(6),W=N.event_settings.color;if(W in jl)W=jl[W];else{W=W.split("-").join("");let I=createEl("canvas"),G=I.getContext("2d");G.fillStyle=W,W=G.fillStyle,I.detach()}B.set(F,{name:j,id:F,color:W})}if(a.events&&Array.isArray(a.events)&&a.events.length)for(let N of a.events){let j={day:null,year:null,month:null};if(N.data&&N.data.date&&Array.isArray(N.data?.date)&&N.data.date.length)j.day=N.data.date[2],j.month=N.data.date[1],j.year=N.data.date[0];else if(N.data&&N.data.conditions&&Array.isArray(N.data.conditions)){let W=N.data.conditions;try{let I=W.find(we=>we[0]==="Year"),G=W.find(we=>we[0]==="Month"),ue=W.find(we=>we[0]==="Day");I&&(j.year=Number(I[2][0])),G&&(j.month=Number(G[2][0])),ue&&(j.day=Number(ue[2][0]))}catch{}}let F;if(N.description){let W=createDiv();W.innerHTML=N.description,F=W.textContent}C.push({name:N.name,description:F,id:N.id,note:null,date:j,category:B.get(N.event_category_id)?.id??null})}let z=(0,Ll.default)({count:B.size});for(let N of B.keys()){let j=B.get(N);j.color||(j.color=z.shift().hex(),B.set(N,j))}let L={name:r,description:null,static:A,current:_,events:C,id:He(6),categories:Array.from(B.values())};t.push(L)}return t}},jl={"Dark-Solid":"#000000",Red:"#9b2c2c",Pink:"#880E4F",Purple:"#4A148C","Deep-Purple":"#311B92",Blue:"#0D47A1","Light-Blue":"#0288D1",Cyan:"#006064",Teal:"#004D40",Green:"#2E7D32","Light-Green":"#7CB342",Lime:"#9e9d24",Yellow:"#FFEB3B",Orange:"#FF9100","Blue-Grey":"#455A64"};var Vl=[{name:"Gregorian Calendar",description:"A calendar for the real world.",static:{displayDayNumber:!1,incrementDay:!0,displayMoons:!0,firstWeekDay:6,overflow:!0,weekdays:[{type:"day",name:"Sunday",id:"ID_19ea684b4a08"},{type:"day",name:"Monday",id:"ID_2928b90ab949"},{type:"day",name:"Tuesday",id:"ID_0ad9a8f9e95b"},{type:"day",name:"Wednesday",id:"ID_195a4b290bc9"},{type:"day",name:"Thursday",id:"ID_abe8c89b0999"},{type:"day",name:"Friday",id:"ID_2b5b8a79fa4a"},{type:"day",name:"Saturday",id:"ID_1a78cb79c8cb"}],months:[{name:"January",type:"month",length:31,id:"ID_e9997a780b3a"},{name:"February",type:"month",length:28,id:"ID_b8c9ebeb0b89"},{name:"March",type:"month",length:31,id:"ID_b83bda2b9be8"},{name:"April",type:"month",length:30,id:"ID_29baea7b28ab"},{name:"May",type:"month",length:31,id:"ID_6a3899fad909"},{name:"June",type:"month",length:30,id:"ID_384aeb1afa8a"},{name:"July",type:"month",length:31,id:"ID_48b8cba87b8a"},{name:"August",type:"month",length:31,id:"ID_fa0b1a6bab8a"},{name:"September",type:"month",length:30,id:"ID_da880b8af849"},{name:"October",type:"month",length:31,id:"ID_babba8186968"},{name:"November",type:"month",length:30,id:"ID_da582bfaf9b9"},{name:"December",type:"month",length:31,id:"ID_ba1bab4a3a28"}],moons:[{name:"Moon",cycle:29.530588853,offset:9.24953,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_a9ab186b1819"}],leapDays:[{name:"Leap Day",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:400},{ignore:!1,exclusive:!0,interval:100},{ignore:!1,exclusive:!1,interval:4}],offset:0,timespan:1,intercalary:!1,id:"ID_b91ad86a887a"}],eras:[{name:"Before Christ",description:"",format:"Year {{abs_year}} - {{era_name}}",start:{year:-1,month:0,day:31}},{name:"Anno Domini",description:"",format:"Year {{year}} - {{era_name}}",start:{year:1,month:0,day:1}}],offset:2},current:{year:null,day:null,month:null},events:[{name:"Summer Solstice",description:"At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824599",note:null,date:{day:null,year:null,month:null},category:null},{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824600",note:null,date:{day:null,year:null,month:null},category:null},{name:"Spring Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824601",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824602",note:null,date:{day:null,year:null,month:null},category:null},{name:"Christmas",description:"Christmas is a Christian holiday celebrating the birth of Christ. Due to a combination of marketability and long lasting traditions it is popular even among many non-Christians, especially in countries that have a strong Christian tradition.",id:"824603",note:null,date:{day:25,year:null,month:11},category:"christian-holidays"},{name:"Paschal Full Moon",description:"The first full moon after march 21st, which is considered the fixed date for the spring equinox.",id:"824604",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Easter",description:"Easter is considered the most important feast for Christians, celebrating the resurrection of Christ. It is classed as a moveable feast occurring on the first full moon after the spring equinox, which is considered to be fixed at March 21st for the sake of computing the date.",id:"824605",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Easter Monday",description:"The Monday following the Easter Sunday is often considered part of the Easter Celebration and is a day off in many countries with a strong Christian tradition.",id:"824606",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Good Friday",description:"Good Friday is the Friday preceding Easter. It comemmorates the crucifixion of Christ according to the Bible.",id:"824607",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Pentecost",description:"Celebrated exactly 50 days after Easter, Pentecost is the celebration of the Holy Spirit appearing before the Apostles as described in the Bible.",id:"824608",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"New Year's Day",description:"New Year's Day marks the start of a new year on the Gregorian Calendar. It starts when the clock strikes midnight and is often celebrated with fireworks, champagne and kissing.",id:"824609",note:null,date:{day:1,year:null,month:0},category:"secular-holidays"},{name:"Valentine's Day",description:"Valentine's day is a celebration of love and romance that is popular across the world. Many more cynically minded people mostly consider it an attempt to monetize the expectation of romantic gestures on the holiday through gift cards, flowers, chocolate and dates.",id:"824610",note:null,date:{day:14,year:null,month:1},category:"secular-holidays"},{name:"Halloween",description:'Halloween is holiday popular in the US, Canada and Ireland that has gradually been adopted by more and more countries. It is often celebrated by people dressing up, usually as something scary. Children will often go from door to door shouting "trick or treat" in the hopes of receiving candy, while adults tend to go to parties.',id:"824611",note:null,date:{day:31,year:null,month:9},category:"secular-holidays"},{name:"Work on the first version of this calendar started.",description:"Aecius started work on the first version Gregorian Calendar for Fantasy Calendar on this day.",id:"824612",note:null,date:{day:23,year:2019,month:5},category:"miscellaneous-events"},{name:"Work on this version of the Gregorian Calendar started.",description:"On this day, Aecius started to rework the Gregorian Calendar from scratch to make it work with the updates Wasp and Alex implemented since the summer of 2019.",id:"824613",note:null,date:{day:21,year:2020,month:0},category:"miscellaneous-events"},{name:"Introduction of the Gregorian Calendar",description:"On this day in 1582 the Gregorian calendar was officially introduced, following Thursday October 4th on the Julian Calendar",id:"824614",note:null,date:{day:15,year:1582,month:9},category:"historical-events"}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Christian Holidays",id:"christian-holidays",color:"#9b2c2c"},{name:"Secular Holidays",id:"secular-holidays",color:"#0D47A1"},{name:"Historical Events",id:"historical-events",color:"#455A64"},{name:"Miscellaneous Events",id:"miscellaneous-events",color:"#0288D1"}]},{name:"Calendar of Greyhawk",description:"Calendar of the world of Greyhawk.",static:{displayDayNumber:!1,incrementDay:!1,displayMoons:!0,firstWeekDay:0,overflow:!1,weekdays:[{type:"day",name:"Starday",id:"ID_a8e979984938"},{type:"day",name:"Sunday",id:"ID_1b68bb78ca1b"},{type:"day",name:"Moonday",id:"ID_c8b86aea0998"},{type:"day",name:"Godsday",id:"ID_b8097a18e95b"},{type:"day",name:"Waterday",id:"ID_1918c99949ca"},{type:"day",name:"Earthday",id:"ID_fa295a1bab89"},{type:"day",name:"Freeday",id:"ID_6a485ada3ae8"}],months:[{name:"Needfest",type:"month",length:7,id:"ID_b8a9e9da8a48"},{name:"Fireseek",type:"month",length:28,id:"ID_39b90bd8189a"},{name:"Readying",type:"month",length:28,id:"ID_48a9081ad839"},{name:"Coldeven",type:"month",length:28,id:"ID_5a7b6beadb68"},{name:"Growfest",type:"month",length:7,id:"ID_48c8d82b1908"},{name:"Planting",type:"month",length:28,id:"ID_081a793a49da"},{name:"Flocktime",type:"month",length:28,id:"ID_eb68a89a0a2a"},{name:"Wealsun",type:"month",length:28,id:"ID_9b3a098ae908"},{name:"Richfest",type:"month",length:7,id:"ID_f99b4b3a08b8"},{name:"Reaping",type:"month",length:28,id:"ID_ebe9eb68ea39"},{name:"Goodmonth",type:"month",length:28,id:"ID_fb3b6af9895b"},{name:"Harvester",type:"month",length:28,id:"ID_395bcb399b8a"},{name:"Brewfest",type:"month",length:7,id:"ID_e8b908181afa"},{name:"Patchwall",type:"month",length:28,id:"ID_cbda3b399969"},{name:"Ready'reat",type:"month",length:28,id:"ID_592a2a690bf8"},{name:"Sunsebb",type:"month",length:28,id:"ID_39e8faf8e9b8"}],moons:[{name:"Luna",cycle:28,offset:3,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_f8997b39b8b8"},{name:"Celene",cycle:91,offset:46,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_7afbb9b88be8"}],leapDays:[],eras:[{name:"Common Year",description:"",format:"Year {{year}} CY",start:{year:1,month:0,day:1}}]},current:{year:591,day:1,month:0},events:[{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824573",note:null,date:{day:null,year:null,month:null},category:null},{name:"Spring Equinox",description:`The 4th of Growfest is the first day of Low Summer in Oerth's Calendar. This is the point where the sun crosses Oerth's equator. Holidays celebrated on this date include Saint Cuthbert's Day, the Feast of Edoira, the Spring Feast, and Raxivort's Orgy. This is also the day on which the priests of Tlaloc ritually sacrifice and eat the flesh of human children or babies in their patron's honor. Worshippers of Rillifane Rallathil celebrate the Budding on this day, a joyful celebration of new life celebrated through dance and song in oak groves in the heart of the forest. A ritual hunt of a noble heart is held on this day, after which the venison is eaten in celebration of Rillifane's bounty.

Also celebrated on this date is the Sanctification of Renewal, a sacred holiday to the followers of Garyx.`,id:"824574",note:null,date:{day:null,year:null,month:null},category:null},{name:"Summer Solstice",description:"	At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824575",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The 4th of Brewfest is the Autumnal Equinox, when the sun crosses the equator from north to south. This date is the official end of high summer and the beginning of autumn on the Greyhawk Calendar. This date is holy to Wenta and is sometimes regarded as an unofficial holy day of Velnius. Among the xvarts, it also marks the celebration of Raxivort's Orgy. The worshippers of Rillifane Rallathil celebrate the Transformation on this day, a time of dancing and spiritual rebirth marking the beginning of autumn and the promise that spring will come again.",id:"824576",note:null,date:{day:null,year:null,month:null},category:null},{name:"Great Moons Glory",description:"The night of Great Moon's Glory on Readying 11th, when Luna is full but Celene is new. It is holy to Celestian, and a time when offerings are left to Atroa to beg her to come early and to Telchur to request that he peacefully leave. Druids of the Old Faith are known to also hold this night as auspicious, but few outside their circles know the details.",id:"824577",note:null,date:{day:null,year:null,month:null},category:null},{name:"Dark Night",description:`Dark Night, also called Black Night, Star Night, and the Night of Hopeful Dawn, is observed on Goodmonth 11. It is a holy night for the church of Celestian because the stars are so easy to observe without the light of one of the moons getting in the way.

It is also a holy night for the church of Rao, who refer to it as the Night of Hopeful Judgment. They believe that Rao chooses this time to separate the sinful from the righteous in the afterworld. There is also a prophecy in the Raoan holy text, the Book of Incarum, that claims that Rao will cleanse the world of evil on this night, sometime in the future.

The priesthood of Kurell consider it holy, too, calling it Kurell's Night, requiring the faithful to undertake special missions on this night to prove their cleverness and skill. Kurell smiles particularly on acts of theft or vengeance performed on his holy night, blessing those who do so successfully. Donations to Kurell's church are encouraged afterwards, for Kurell may take vengeance against those who do not properly thank him for his aid.

Most other people regard Dark Night as a time of ill omen, fearing it as much as the night of the Blood Moon Festival. Bonfires are burned from dusk till dawn, particularly in small villages and in Elmshire and Narwell. Orc and goblin religions view it as an excellent night for raiding settlements. Certain evil cults perform kidnappings, murders, and vile rites during this period. On the other hand, lycanthropic activity is at its lowest.

Iggwilv and Tuerny attempted to summon a demonic army to Luna on this night in 585 CY.`,id:"824578",note:null,date:{day:null,year:null,month:null},category:null},{name:"Agelong",description:`Agelong, observed on the 4th of Richfest (the Summer Solstice), is the celebration of the legendary creation of the elves. According to myth, after Corellon Larethian spilled his blood during the battle with Gruumsh, the rest of the Seldarine gathered this sacred blood and mingled it with the tears shed during the same battle by Sehanine Moonbow. The Seldarine then infused these divine fluids into vessels they had created to be the bodies of the elven race.

This day is, among the elves, mostly an excuse to go orc-hunting. Elven warriors cut themselves with daggers carved from volcanic glass to remind themselves of Corellon's own wound from Gruumsh's spear, then strive to slaughter as many orcs as possible during the night.`,id:"824579",note:null,date:{day:4,year:null,month:8},category:null},{name:"Blood Moon Festival",description:`The Blood Moon Festival is celebrated on Coldeven 11, the night when Luna is full just before the Spring Equinox. On this night, curses are said to be twice as powerful and the forces of evil are at their strongest. Fiends roam the lands, and human sacrifice is common. This night is held especially sacred by cultists of Nerull, but worshipers of Kurell also mark this night as especially auspicious for acts of vengeance. Goodly folk superstitiously guard their homes with horseshoes, holy water, bottles of milk, and iron filings.

Demonic forces sent by Iuz destroyed the leadership of the Horned Society during the Blood Moon Festival of 583 CY.

It's possible that this is also the night the elves celebrate as Faerieluck.`,id:"824580",note:null,date:{day:11,year:null,month:3},category:null},{name:"Breadgiving Day",description:`Celebrated on on the Winter Solstice (Needfest 4), Breadgiving Day, is a day of charity observed in the Free City of Greyhawk by the faiths of Pelor, Rao, and Saint Cuthbert.

This was not originally a religious holiday as such. It is a new practice that began after the Greyhawk Wars to feed the refugees that flooded the city during that time. Since of Old City who line up by the hundreds along the Processional from the Black Gate. The booths are worked by low-ranking priests from all three religions, with armed priests of St. Cuthbert providing security. A smaller event is held simultaneously below Wharfgate in Greyhawk City's Shacktown.

The clergies of Heironeous, Pholtus, and Trithereon do not participate, but they compete with one another to perform good deeds the whole week of Needfest. The rivalries between Trithereon and Pholtus, Trithereon and Heironeous, and Pholtus and St. Cuthbert are such that the faiths sometimes fall into arguments and even blows if their "good deeds" conflict with each other. Greyhawk's rowdy citizens often cheer and place bets on the outcomes of these quarrels.

The priests of Pelor hold a morning ceremony on this day with a sermon, singing, and music.`,id:"824581",note:null,date:{day:4,year:null,month:0},category:null},{name:"Brewfest",description:`Also called Drunken Days or the Feast of Brewers, Brewfest, the fourth festival week of Oerth's calendar, is a rowdy period unsurprisingly claimed as a holy time by the churches of Olidammara and Wenta. The Free City of Greyhawk does not celebrate the entire week, but Brewfest 1 and Brewfest 7 are both set aside as public holidays. In Elmshire, the week is spent in restful, carefree music, drinking, and dancing. In Hardby it is spent with fistfights, riots, and ensuing hangovers. In Narwell it is celebrated with ale-brewing contests, horse races, beatings, and robbery. In Safeton it is celebrated with nervous violence and nightly orc hunts. The week is also sacred to the Old Faith.

The elves call this week Fallrite, and use it to contemplate the spirits of their ancestors, the passage to the afterworld, and the fragility of life. They believe other races make merry during Brewfest because they are "hiding" to avoid facing death's reality. In contrast, the olvenfolk strive to fulfill the most important of their duties and reach the most crucial of their decisions during this time of year. The elven kings and queens traditionally judge capital cases during Fallrite.`,id:"824582",note:null,date:{day:4,year:null,month:12},category:null},{name:"Faerieluck",description:"Faerieluck is a holiday celebrated by the elves in early spring, when the power of Faerie runs high and they celebrate with their fey cousins: the sprites, buckawns, pixies, nymphs and so forth. The point of the festival is to remind the elves of their ancient kinship with these creatures. The day is spent playing practical jokes, engaging in battles of wit, and general merriment.",id:"824583",note:null,date:{day:11,year:null,month:2},category:null},{name:"Feast of Edoira",description:`The Feast of Edoira is a holiday celebrated in the Domain of Greyhawk on Growfest 4, during the Spring Equinox. It is named after Edoira, a priest of Rao who centuries ago established the Edoiran Compact, a pact by which many of the lawful good-aligned faiths and people of the Domain could agree to cooperate. The Compact was later extended to non-lawful good and neutral faiths.

Edoira was never deified but was revered by many good faiths in the Domain. The holiday was marked by religious services on Godsday of Growfest led by the clerics of the good faiths who partook of the Compact, and secular festivals by the ordinary citizenry. Observance of the holiday has declined over the years, though the clergies of Rao and Pelor still hold their traditional interfaith services, with occasional participation by the priesthoods of Heironeous and Mayaheine. Since the end of the Greyhawk Wars most of the Domain's outlying communities no longer observe the holiday. Only one church in Safeton still does so.`,id:"824584",note:null,date:{day:4,year:null,month:4},category:null},{name:"Desportium of Magic",description:`The highlight of Growfest is the Desportium of Magic. During this day torchlight only, no magic illumination is supposed to be used. Wizards and Sorcerers then perform feats of illusion and magic trying to outdo one another with their displays. Usually there is a panel of judges to decide, in the larger cities there is usually a limit of 5-person teams competing. Each performance during the Desportium of Magic uses a long established theme, that of an attack on the town by various monsters and Dark Elves, repelled by brave warriors and spellcasters. The displays, made up of any number of spells cast without the use of magic devices, cannot actually cause any harm to property or people, but must be as wonderful, striking, detailed, and lifelike as possible.

This motif is based on actual attacks through the years from the Uttermost War to the most recent Great Slave Raids. The idea is to make the attackers as dreadful as possible and the defenders as heroic as possible, secondary is to make sure that people will always remember the terror of the Uttermost War. In large cities like the CSIO and CSWE and Tarantis, these performances last all night and are amazing to watch. In smaller villages without spellcasters, puppet plays are often done in its stead.`,id:"824585",note:null,date:{day:7,year:null,month:4},category:null},{name:"Holy Day of Pelor",description:`The Holy Day of Pelor, also known as Giving Day and Midsummer's Day, is celebrated on the Summer Solstice.

Because Pelor is widely loved by the commoners, this day is set aside as a day of rest in the Free City of Greyhawk. Only essential work is done on this day. Many merchants close their shops on Giving Day as well out of respect for the Sun Father and his teachings. Gambling houses are closed, but not hostelries, for Giving Day is a day of feasting and goodwill, a time for enjoying the fruits of the Oerth.

Public services are held from dawn until noon by Pelor's priests, outdoors if the weather permits (which if almost always does, as the clerics use weather-controlling magic for maximum sunlight). Even Greyhawk City's large temple of Pelor is not big enough to hold the throngs who come to celebrate on this day, so throngs of the faithful fill the temple grounds in the Garden Quarter, spilling out from the Millstream to the Nobles' Wall, and to the road leading toward Greyhawk's Grand Theater. Many come, of course, for the free meal the priests provide after the service. The Pelorian priests are well aware of this, but believe that for the needy, a full stomach must come before wisdom and learning. Members of Greyhawk's Guild of Thieves and Beggar's Union, many of whom remember Midsummer's Day fondly from their orphaned childhoods, both protect priests of Pelor on this day, and woe onto those who attempt to test them on this matter.

Priests of Pelor, bedecked in yellow and gold, parade about the streets, demanding donations for their charitable works, freely using guilt to squeeze more from stingy purses. Free healings are given out, particularly to children. Most Greyhawkers wear at least one item of yellow cloth on this day out of respect.

Some crusading Pelorians crusade against evil lycanthropes on this night, since both Celene and Luna are full.`,id:"824586",note:null,date:{day:4,year:null,month:8},category:null},{name:"Holy Day of Serenity",description:"The Holy Day of Serenity, on Reaping 10, is celebrated in Veluna as a holy day of Rao, though it's actually the anniversary of Veluna's secession from Furyondy in 476 CY. It is celebrated with religious singing and worship.",id:"824587",note:null,date:{day:10,year:null,month:9},category:null}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Religious Holidays",id:"religious-holidays",color:"#FFEB3B"},{name:"Secular Holidays",id:"secular-holidays",color:"#0D47A1"},{name:"Magical Events",id:"magical-events",color:"#311B92"},{name:"Miscellaneous Events",id:"miscellaneous-events",color:"#0288D1"}]},{name:"Calendar of Golarion",description:"Calendar for the world of Pathfinder.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!0,weekdays:[{type:"day",name:"Moonday",id:"ID_db8af8f85b8a"},{type:"day",name:"Toilday",id:"ID_f87a094b2849"},{type:"day",name:"Wealday",id:"ID_2a5bb88b3ae8"},{type:"day",name:"Oathday",id:"ID_c93a0be8981b"},{type:"day",name:"Fireday",id:"ID_2b7b59794a0b"},{type:"day",name:"Starday",id:"ID_baaa6a89ca1b"},{type:"day",name:"Sunday",id:"ID_f9baca088b28"}],months:[{name:"Abadius",type:"month",length:31,id:"ID_dad9da89f818"},{name:"Calistril",type:"month",length:28,id:"ID_980a88cb9b68"},{name:"Pharast",type:"month",length:31,id:"ID_a9c96ac80908"},{name:"Gozran",type:"month",length:30,id:"ID_a99a697b9abb"},{name:"Desnus",type:"month",length:31,id:"ID_8bcad9a8f84a"},{name:"Sarenith",type:"month",length:30,id:"ID_484a49a998db"},{name:"Erastus",type:"month",length:31,id:"ID_9a48e9b96938"},{name:"Arodus",type:"month",length:31,id:"ID_bbe99b2afaea"},{name:"Rova",type:"month",length:30,id:"ID_ba39fbe8c8b8"},{name:"Lamashan",type:"month",length:31,id:"ID_69d93ba9dba8"},{name:"Neth",type:"month",length:30,id:"ID_4ad8fb79eb6a"},{name:"Kuthona",type:"month",length:31,id:"ID_9a3a8b388939"}],moons:[{name:"Somal",cycle:29.5,offset:9.5,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_b87ab959cac9"}],leapDays:[{name:"Leap Day",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:8}],offset:0,timespan:1,intercalary:!1,id:"ID_88c8da3b8b2b"}],eras:[{name:"Age of Serpents",description:"",format:"Year {{year}} - {{era_name}}",start:{year:4720,month:8,day:15}},{name:"Age of Darkness",description:"",format:"Year {{abs_year}} - {{era_name}}",start:{year:-5300,month:0,day:1}},{name:"Age of Anguish",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-4500,month:8,day:1}},{name:"Age of Destiny",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-3500,month:8,day:1}},{name:"Age of Enthronement",description:"",format:"Year {{year}} AR - {{era_name}}",start:{year:1,month:8,day:1}},{name:"Age of Lost Omens",description:"",format:"Year {{year}} AR - {{era_name}}",start:{year:4606,month:8,day:1}}]},current:{year:4720,day:15,month:0},events:[{name:"Summer Solstice",description:"At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824492",note:null,date:{day:null,year:null,month:null},category:null},{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824493",note:null,date:{day:null,year:null,month:null},category:null},{name:"Spring Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824494",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824495",note:null,date:{day:null,year:null,month:null},category:null},{name:"Eternal Kiss",description:`Zon-Kuthon

Culminating on the first new moon of the new year, the Eternal Kiss is an 11 day ceremony honoring Zon-Kuthon. On the final day, a living sacrifice is made to the Dark Prince, after the victim is pampered and pleasured for the ten days prior. The sacrifice can either be an enemy or a great devotee of the church, and is kept alive for as long as possible during the torture using magic. This holiday often involves fortune-telling as a part of the torture, using the victim's entrails or their cries of pain to determine the Midnight Lord's will. Occasionally it is believed that the sacrifice will prophesy with the voice of Zon-Kuthon himself.`,id:"824496",note:null,date:{day:null,year:null,month:null},category:null},{name:"Longnight",description:"Longnight is a holiday celebrated on the full moon in the winter month of Abadius. During the festival, revelers stay up all night to greet the dawn to defy the long winter months. It is even celebrated in Irrisen, where there are no natural seasons.",id:"824497",note:null,date:{day:null,year:null,month:0},category:null},{name:"Foundation Day",description:`Absalom, Milani

Foundation Day is a civil holiday celebrated on the New Year (1 Abadius) in Absalom to commemorate the city's founding by the god Aroden in 1 AR.`,id:"824498",note:null,date:{day:1,year:null,month:0},category:null},{name:"Pjallarane Day",description:`Irrisen

Pjallarane Day is an ancient holiday in Irrisen celebrated on 1 Abadius (New Year's Day). Every 100 years, Baba Yaga returns to Golarion to remove her daughter from the throne of Irrisen, and put another daughter on the throne instead. In 3713 AR the third Queen of Irrisen, Pjallarane, and her children chose to resist. Baba Yaga ruthlessly crushed the rebellion in a single day, which is now celebrated as a holiday. The festival includes feasting and the burning of effigies of tar and straw. This is a reminder of the fate of Pjallarane's followers, who were burned alive as a warning to all those who would oppose Baba Yaga.`,id:"824499",note:null,date:{day:1,year:null,month:0},category:null},{name:"Vault Day",description:`Abadar

Vault Day is a holiday held on 6 Abadius in honor of Abadar, Master of the First Vault.`,id:"824500",note:null,date:{day:6,year:null,month:0},category:null},{name:"Ruby Prince's Birthday",description:`Osirion

The Ruby Prince's Birthday is a national holiday in Osirion in honor of the birthday of Khemet III, the Ruby Prince. It is celebrated annually on the 20 Abadius.`,id:"824501",note:null,date:{day:20,year:null,month:0},category:null},{name:"Merrymead",description:`Druma, Cayden Cailean

A holiday occurring on 2 Calistril, Merrymead was started in Druma and is supposed to be a time to share of the last of the previous year's mead with the rest of the community.

In current times, most people just use it as an excuse to drink excessively. The poor travel from bar to bar drinking whatever alcohol they can afford, while the wealthy will set aside specific vintages for this day. A known consequence of this day are 'mead riots' that happen when there are more celebrants than there is alcohol to serve them. This leads to a violent, destructive group of people in a crowded bar. If this is a common occurrence for particular cities, they may reinforce their guard force for the inevitably eventful night.`,id:"824502",note:null,date:{day:2,year:null,month:1},category:null},{name:"King Eodred II's Birthday",description:`Korvosa

King Eodred II's Birthday was a local holiday in the Varisian city-state of Korvosa and was celebrated on 16 Calistril. It commemorated the birthday of its former ruler, King Eodred Arabasti II, who decreed that on the day, scantily clad women would dance and serve free wine to celebrants.`,id:"824503",note:null,date:{day:16,year:null,month:1},category:null},{name:"Loyalty Day",description:`Cheliax, Asmodeus

Loyalty Day is a holiday in the nation of Cheliax commemorating the date on Calistril 19, 4640 AR when House Thrune signed the Treaty of Egorian, declaring it the victor in the Chelish Civil War and ruler of the empire. Because of House Thrune's well-known ties to the infernal, this holiday is also observed by the Church of Asmodeus who consider it a feast day. The church along with local governments provide a free meal to all citizens to remind them of the benefits House Thrune provides them with.`,id:"824504",note:null,date:{day:19,year:null,month:1},category:null},{name:"Fateless Day",description:`Mahathallah

Followers of Mahathallah mark each leap day as Fateless Day, when the River of Souls temporarily stops and souls can escape Pharasma's judgment. They perform many sacrificial and suicidal rituals on Fateless Day.`,id:"824505",note:null,date:{day:29,year:null,month:1},category:null},{name:"Golemwalk Parade",description:`Magnimar, Varisia

The Golemwalk Parade is a parade of golems created by amateurs hoping to win a monetary grant, or even a job, from the Golemworks in Magnimar. At the end of the parade along the Avenue of Honors, the constructs are judged.`,id:"824506",note:null,date:{day:null,year:null,month:2},category:null},{name:"Day of Bones",description:`Pharasma

Priests and worshipers of the Lady of Graves parade the bodies of the recently dead on this holiday, holding free burials afterwards.`,id:"824507",note:null,date:{day:5,year:null,month:2},category:null},{name:"Sable Company Founding Day",description:`Korvosa

Sable Company Founding Day is a holiday marking the founding of the Sable Company of the Varisian city-state of Korvosa. Celebrated on 6 Pharast, the day is marked by somber military parades that generally preclude the consumption of alcohol, a staple on most other holidays.`,id:"824508",note:null,date:{day:6,year:null,month:2},category:null},{name:"Night of Tears",description:`Solku

The Night of Tears held annually on 7 Pharast in the Katapeshi town of Solku. It is a solemn vigil commemorating those lost in the Battle of Red Hail in 4701 AR.`,id:"824509",note:null,date:{day:7,year:null,month:2},category:null},{name:"Kaliashahrim",description:`Qadira

Kaliashahrim is a national holiday celebrated on Pharast 13 in Qadira that celebrates the Padishah Emperor of distant Katheer, and Qadira's loyalty to him.`,id:"824510",note:null,date:{day:13,year:null,month:2},category:null},{name:"Conquest Day",description:`Nex

Every year, on the 26th of Pharast, Elder Architect Oblosk \u2014 oldest member of Nex's Council of Three and Nine \u2014 ascends to the highest balconies of the Bandeshar in Quantium. In a voice made thunderous by the platform's magic, the wizened pech councilman spends the hours from dusk to just past noon enumerating the atrocities committed by the necromancers of Geb upon the people of Nex, culminating with the disappearance of the archwizard Nex himself. At the conclusion of this record of national wounds, the country's eleven other council members join Oblosk in renewing their yearly vow to neither forget nor forgive the Gebbites' atrocities and to again swear in their lost ruler's name to endlessly wage war against their ancient enemies.

On this day, known as Conquest Day, all the people of Nex are expected to share in their leaders' oaths, to celebrate the shared patriotism of their wondrous nation, and to remember the sacrifices of heroes past. This also makes it a day for many Nexian wizards to reveal deadly new spells, gigantic constructs, and audacious arcane masterworks\u2014which many creators promise to be the doom of their foes. Even throughout the rest of the Inner Sea region, many crusaders, rebels, and zealots observe Conquest Day as a day to renew blood oaths, launch long-planned battles, and finally take revenge. It is a day for words of honor, a day for battle cries, and a day where glory most favors the bold.`,id:"824511",note:null,date:{day:26,year:null,month:2},category:null},{name:"Days of Wrath",description:`Asmodeus, Cheliax

The Days of Wrath, or Dies Irae, are a holiday celebrated on both solstices and equinoxes in the nation of Cheliax and wherever Asmodeus is worshiped. They are primarily a national holiday and not truly a religious one, but the two are often confused due to Cheliax's current political climate. Various contests and blood sports are held on these days, promoting those elites who can clearly demonstrate their superiority over others. Some believe that these competitions are watched and judged by devils themselves. In the parts of the world where the Prince of Darkness is not openly venerated, these holidays take on a different tone: they are used to settle old grievances and also to end contracts.

In these days, bloodsports are organized into cities' stadiums. Slaves and servants of any master may choose to enter the arena for one-on-one bloody battles to the death. Free men and women of all classes are free to enter the arena as well. The entrants fight in rounds until at last one stands alone. The winner is granted freedom from slavery or servitude, erasure of all debts, and a purse of gold.

The winter solstice sees the culmination of the Dies Irae, with all the winners of the three previous bouts summoned to Egorian to fight to the death for the amusement of the nobles. The winner is given a title of baronet and a plot of land.`,id:"824512",note:null,date:{day:null,year:null,month:null},category:null},{name:"Firstbloom",description:`Gozreh

Firstbloom is a holiday celebrating the first planting of the agricultural season, and generally associated with the weather god Gozreh. It falls on the vernal equinox. Many farming communities see it as the beginning of the year, even though conventional calendars begin two months earlier. Despite weariness after a full day planting, many farming communities hold celebrations come the night: feasting, dancing and courtship feature showing the cycle of nature.`,id:"824513",note:null,date:{day:null,year:null,month:null},category:null},{name:"First Cut",description:`Falcon's Hollow

The First Cut celebration in Falcon's Hollow used to mark the start of the work in the woods each spring. Now, however, it is a meaningless ramshackle ceremony as Thuldrin Kreed forces the lumber crews to work through even during the coldest months in the winter. Still, First Cut brings people out to celebrate the start of the spring.`,id:"824514",note:null,date:{day:null,year:null,month:null},category:null},{name:"Currentseve",description:`Gozreh

On this religious holiday, all who travel on the water make offerings to Gozreh in the hopes of safe passage for the coming year.`,id:"824515",note:null,date:{day:7,year:null,month:3},category:null},{name:"Taxfest",description:`Abadar

No one enjoys paying taxes but the collection of fair taxes is considered an integral part of the maintenance of society, and is therefore holy to the god Abadar. Every year on the 15th of Gozran, priests of the church of Abadar spend the day walking city streets, doing what they can to make the bitter pill of annual taxes a bit easier to swallow.

The Business of the Day

From dawn to dusk, clerics of Abadar attend the tax collectors of sizeable communities as the tax wagons roll from door to door. The church officials monitor these activities to make sure that the process is conducted respectfully and justly, and that citizens know that the process is monitored. More than just aiding in the yearly errand, the faithful personally thank every citizen for contributing to the improvement of their city, extol the public works funded by their contributions, and foretell the grandeur of civic projects to come. The disenfranchised and destitute they attempt to comfort as best they can, quoting from their god's dogma on work and worthiness, but this is not a day for discounts or deferrals. The citizens are able to voice their concerns and ideas as to where the monies levied should best be applied. Citizens are free to speak their mind on any issue here without fear of repercussion.

The Celebrations of the Day

At dusk, the Abadarans host several celebrations in parks, plazas, and other communal areas about the city, organizing donations and contributions from local vendors to feed and entertain all-comers. Having already preached to most of the city over the course of the day, the clerics perform only a brief opening ceremony, dedicating the feast to Abadar, the city, and its great people. These celebrations are often quite distinct from neighbourhood to neighbourhood and are almost always divided along economic boundaries.

The festivities involving the wealthiest citizens usually happen on the steps of city hall or other grand civic buildings and feature the best music and food, but often little more than polite card and guessing games. These galas usually wrap up by midnight.

For the common folk, the parks and marketplaces take on a carnival atmosphere, with simple but good food, local ales, performances by talented citizens, and games of chance going on well into the night. A prevailing superstition through these festivals is that, during the celebration, it is lucky to kiss\u2014or in some regions, pinch\u2014a cleric of Abadar, leading to many a rosy-cheeked cleric.

Even the city's poor are given reason to celebrate, as the local temple of Abadar hosts a cheery but unabashedly religious gathering on its steps, feeding all comers, doling out a hearty ration of wine, singing hymns of the faith, and providing tokens for a second wine ration for any who return to attend a service within the month.

For a holiday that revolves around paying taxes, this Abadaran festival is not as reviled as one might expect.`,id:"824516",note:null,date:{day:15,year:null,month:3},category:null},{name:"Wrights of Augustana",description:`Andoran, Brigh

This local festival in the Andoran port city of Augustana is held to honor and celebrate the local shipbuilding industry as well as the navy. The mathematics and engineering required for the building of the ships is praised by Brigh's faithful.`,id:"824517",note:null,date:{day:16,year:null,month:3},category:null},{name:"Gala of Sails",description:`Absalom

One of two local festivals where kite-battlers compete.`,id:"824518",note:null,date:{day:27,year:null,month:3},category:null},{name:"Remembrance Moon",description:`Iomedae, Lastwall, Ustalav

A national holiday to commemorate those who died in the Shining Crusade against the Whispering Tyrant. Although not strictly a religious holiday, Iomedae's name is heavily invoked, due to her many military accomplishments during the war.`,id:"824519",note:null,date:{day:null,year:null,month:4},category:null},{name:"Angel Day",description:`Magnimar, Varisia

Angel Day is a local Magnimarian holiday celebrated on 31 Desnus. The annual celebration marks the founding of the city, and its founders' flight from Korvosa. It also honors the presence and popular worship of the empyreal lords, which predates the city by centuries. During the festival, nearly all local businesses shut their doors and the citizens take part in countless feasts, masquerade balls dressed as angels, and the burning of devil effigies meant to symbolize infernally-influenced Korvosa.`,id:"824520",note:null,date:{day:31,year:null,month:4},category:null},{name:"Old-Mage Day",description:"Holiday celebrating Old-Mage Jatembe, the father of Garundi magic.",id:"824521",note:null,date:{day:13,year:null,month:4},category:null},{name:"Multiple Events",description:`Festival of the Ruling Sun

Shizuru

Celebrates the longest day.

Founder's FollyUlar Kel

Adventurers and children follow a hallucinatory red stripe along zigzagging paths, amusing residents.

Harvest Bounty Festival

Segada

Marking the beginning of the harvest season, this festival involves sporting tournaments, dancing, storytelling, and feasts. Celebrants give thanks and eliminate grudges.

Longwalk

Grandmother Spider, Nurvatchta; southern hemisphere winter solstice

Celebrates the escape of Nurvatchta's anadi people from bondage, in part thanks to Grandmother Spider lengthening their cover of darkness in their escape.

Ritual of Stardust

Desna

Festival held in the evening and through the night, where Desna's faithful sing songs and throw sand and powdered gems into bonfires.

Runefeast

Magrim

Day marking the day dwarves learnt the first runes and the proper way to pray.

Sunwrought FestivalSarenrae, Brigh

Day commemorating the defeat of Rovagug by Sarenrae, celebrated with the flying of kites, fireworks, and gift giving.`,id:"824522",note:null,date:{day:null,year:null,month:null},category:null},{name:"Burning Blades",description:`Sarenrae

The holy, month-long festival ends on this day, featuring dances with flaming blades.`,id:"824523",note:null,date:{day:10,year:null,month:5},category:null},{name:"Liberty Day",description:`Andoran, Milani

Holiday celebrating Andoran's independence. Milanites celebrate that very little violence occurred.`,id:"824524",note:null,date:{day:3,year:null,month:5},category:null},{name:"Talon Tag",description:`Andoran

The Eagle Knights perform aerial displays in Almas on this day.`,id:"824525",note:null,date:{day:21,year:null,month:5},category:null},{name:"Riverwind Festival",description:`Korvosa

An early summer holiday that honors a cooling shift in the winds, celebrated with much drinking.`,id:"824526",note:null,date:{day:22,year:null,month:5},category:null},{name:"Inheritor's Ascendance ",description:`Iomedae

Inheritor's Ascendance, originally called 'Herald's Day', honours the day that Iomedae was chosen by the god Aroden to become his herald (thus replacing Arazni), thus boosting her power beyond that of a fledgling goddess. This holiday was renamed after the demise of Aroden.`,id:"824527",note:null,date:{day:1,year:null,month:7},category:null},{name:"First Crusader Day",description:`Mendev

Holiday in celebration of the continuing crusade against the demons of the Worldwound.`,id:"824528",note:null,date:{day:6,year:null,month:7},category:null},{name:"Day of Silenced Whispers",description:`Ustalav

The Day of Silenced Whispers is an Ustalavic holiday celebrated every 9 Arodus marking the defeat of the Whispering Tyrant in 3827 AR by the coalition forces of the Shining Crusade and the liberation of the country after centuries of undead domination.`,id:"824529",note:null,date:{day:9,year:null,month:7},category:null},{name:"Founding Day",description:`Ilsurian, Varisia

Festival celebrating the founding by Ilsur of the town of Ilsurian in 4631 AR.`,id:"824530",note:null,date:{day:10,year:null,month:7},category:null},{name:"Armasse",description:`Aroden, Iomedae, Milani

The raucous, week-long festival known as Armasse is held each year beginning on 16 Arodus. The celebration \u2014 once dedicated to the god Aroden \u2014 is still important to the faithful of Iomedae, who use it to train commoners in combat, ordain apprentice clergy, pick squires for knights, and teach military history, hoping to prevent the mistakes of the past from being repeated. Among those not dedicated to the Inheritor the holiday has lost most of its religious significance since Aroden's death, tending now only toward wild partying, a fact that has precluded the diabolist authorities of Cheliax from prohibiting Armasse outright. Nevertheless, in places where the church of Asmodeus is openly allowed, it hosts special activities for its parishioners during the same week in an effort to counter the influence of the holiday. The city of Corentyn is especially known for its extravagant Armasse festivities.`,id:"824531",note:null,date:{day:16,year:null,month:7},category:null},{name:"Saint Alika's Birthday",description:`Korvosa

Quiet holiday honoring the birth of Saint Alika the Martyr.`,id:"824532",note:null,date:{day:31,year:null,month:7},category:null},{name:"Archerfeast",description:`Erastil

Archer's Day or Archerfeast is a holiday of the god Erastil held annually on the 3rd of Erastus. Despite the holiday's origins in the worship of Erastil, common country folk from the Lands of the Linnorm Kings to Taldor celebrate the height of summer with a day set aside for establishing new relationships, enjoying current camaraderie, and celebrating the gifts of the gods. Archery competitions are held frequently in which the men test their skill with the bow through progressively harder trials. The exact form of competition is different from place to place, and the winner is awarded a rack of elk horns and a quiver of blessed arrows. He is also given the title of "Protector", which he holds until the next year.

While the festival's traditions emphasize contests of marksmanship, most have expanded to exhibit talents of all types, from baking and storytelling to racing and mock combat. Aside from encouraging a fair-like atmosphere, many of the displays and competitions serve one of two secondary purposes: either as a way for merchants to show off their superior livestock and wares, or (more popularly) as a way for eligible men and women to show off to each other.

While the day's events at most Archerfeast fairs are filled with games, food, and crafts, the night brings dancing, drinking, pranks, and the crowning of the princes and princesses of spring and summer for the two single youths and two single adults who fared best in the day's events. The festivities continue late into the evening, but end promptly at midnight, so that in true Erastilian fashion the next day's responsibilities are not overly impeded. For those not of Erastil's flock, however, private parties, drinking, and trysting carry on long into the next morning.`,id:"824533",note:null,date:{day:3,year:null,month:6},category:null},{name:"Founding Festival",description:`Korvosa

Founding Festival is a local Korvosan celebration marking the establishment of the city in 4407 AR. Held annually on 14 Erastus, the festival is a chance for the citizens to let off some steam, drink copiously, and watch magical light shows late into the night.`,id:"824534",note:null,date:{day:14,year:null,month:6},category:null},{name:"Burning Night",description:`Razmiran

Items or people who have transgressed against the god-king of Razmiran are burned on this day.`,id:"824535",note:null,date:{day:17,year:null,month:6},category:null},{name:"Kianidi Festival",description:`Garundi

The Kianidi Festival is a week long event held annually between 15 and 21 Erastus by Garundi people everywhere. The Garundi have a powerful belief in belonging to a specific location in this world, with clans or tribes sometimes traveling for years in search of their true home. In these travels each individual will collect small mementos of the places she or he has visited in order to remember them and maintain a spiritual connection. During the Kianidi, a tribe will gather and display these mementos to the group. The best ones are chosen and made part of the clan or tribal history, something which Garundi feel is a great honor.`,id:"824536",note:null,date:{day:15,year:null,month:6},category:null},{name:"Harvest Moon",description:null,id:"824537",note:null,date:{day:null,year:null,month:8},category:null},{name:"Multiple Events",description:`Festival of Night's Return

Nidal

Celebrated throughout Nidal, this holiday involves the burning of effigies and self-flagellation.

Swallowtail Festival

Desna

Holiday celebrated with storytelling, feasting, and the release of butterflies.

Waning Light Festival

Segada

Also called Blessing of the Sun and Night of Spirits, participants bid farewell to the long days of sunshine with feasting, dancing, and music.`,id:"824538",note:null,date:{day:null,year:null,month:null},category:null},{name:"Signing Day",description:`Andoran, Cheliax, Galt, Isger

Signing Day is a Chelish holiday, dating back to the height of the empire. Observed on the second Oathday of Rova, this is the day on which new laws in the empire took effect. The significance of this day expanded over many years until imperial marriages, significant business arrangements and oaths of fealty were all conducted on this day.

Originally, the holiday began as a celebration of the mutual-defense pact between Cheliax, Isger, Galt and Andoran when the united nations threw off the shackles of Taldor, declaring themselves independent from the empire. Observances of the holiday vary, but often include firework displays, feats of strength, and public debates to showcase speaking and rhetorical skills.

As Cheliax degenerated to civil war and diabolism after 4606 AR, blood pacts and infernal contracts also began to be signed on this day. As a result of Cheliax's new affiliation, Andoran and Galt began to distance themselves from Cheliax and the original interpretation of the holiday. In Andoran it continues to be the day that most national laws take effect as well as being a traditional day of marriage, and the date on which new Steel Falcons are inducted.`,id:"824539",note:null,date:{day:null,year:null,month:8},category:null},{name:"Crabfest",description:`Korvosa

Crabfest is a Korvosan holiday held on the first Wealday of Rova. It celebrates the return of the crabs from the cooler waters of the Jeggare River to their winter habitat in Conqueror's Bay, and is marked by crab boil feasts held throughout the city and its surrounding communities.`,id:"824540",note:null,date:{day:null,year:null,month:8},category:null},{name:"Feast of Szurpade",description:`Irrisen

This "celebration of plenty" festival mocks the traditional harvest festivals celebrated in the region before Baba Yaga and her eternal winter descended upon the land.`,id:"824541",note:null,date:{day:26,year:null,month:8},category:null},{name:"Day of Sundering",description:`Ydersius

Once many holidays were celebrated by the faith of Ydersius, but today only this date has much significance.`,id:"824542",note:null,date:{day:29,year:null,month:8},category:null},{name:"Admani Upastuti",description:`Jalmeri

Admani Upastuti is a Jalmeri holiday celebrated on the first full moon of Lamashan that marks the founding of Jalmeray as a Vudran colony.`,id:"824543",note:null,date:{day:null,year:null,month:9},category:null},{name:"Ascendance Day",description:`Iomedae

Ascendance Day is an Iomedaean holiday, held on the 6th of Lamashan. The day marks the anniversary of the day Iomedae took the Test of the Starstone in the autumn of 3832 AR and ascended to godhood.

Celebration

The day is a joyous celebration for the faithful, with singing, pledging of friendships, and forgiving of old grudges.

To many, the Test of the Starstone represents the greatest of all challenges, yet for Iomedae it was one of three storied promotions in her rise from Aroden's herald to a goddess in her own right. On the 6th of Lamashan, the Inheritor's faithful observe the heroism of Iomedae's life before her moment of ascension and celebrate the anniversary of the apotheosis itself.

The celebration takes place in several stages. Early in the day, troupes of performers\u2014as often passionate amateurs as professionals\u2014stage morality plays featuring the Eleven Acts of Iomedae, the heroic near-miracles and sacrifices she made leading up to her trials in the Starstone Cathedral. Scripts vary by region, city, and even neighborhood, but despite differences in setting, performance medium, and word choice, the themes and morals are all the same.

As the day continues, the priests organize jousts and mock battles, allowing anyone to participate so long as she can demonstrate enough skill to not be a risk to herself or others. The winners of these contests then face tests of mental acuity such as solving riddles, deciphering philosophical quandaries, and answering questions of honor and justice. Those who prove themselves in both contests are awarded a white cloak\u2014representing the Inheritor at peace\u2014styled after Iomedae's own red garment to wear for the rest of the celebration. Feasting and singing follow the competitions, mirroring the jubilation that followed Iomedae's ascension. This is occasion for making pledges of friendship and forgiving enemies, and priests circulate about the crowd offering the Inheritor's blessing to those who do and providing a moment's counsel or mediation for those who need an extra nudge.

The celebration typically ends before midnight, and the following day the priests and previous day's champions gather up the blunted swords from the mock battles, sharpen them, and distribute them among the church's armory and those of like-minded organizations so that all may remain vigilant against evil and prepared to strike it down.`,id:"824544",note:null,date:{day:6,year:null,month:9},category:null},{name:"Bastion Day",description:`Solku

Bastion Day is a two-day festival held annually on 19 and 20 Lamashan in the Katapeshi town of Solku honoring the founding of the town, when it is traditional to host a stranger from one noon until the next.`,id:"824545",note:null,date:{day:19,year:4712,month:9},category:null},{name:"Jestercap",description:`Andoran, Druma, Taldor

Jestercap occurs at the end of the month of Lamashan, traditionally on the 27th (although a few regions have taken to moving the exact day around slightly so it always falls on the last Starday of the month, allowing people who wish to celebrate in excess to have the following day of rest to recover).

History

While Jestercap has been embraced with excited open arms by the gnome communities of the Inner Sea region, its original genesis is said to have been in one of Taldor's coastal cities not long after King Aspex the Even-Tongued broke from the nation, significantly weakening Taldor's power and beginning that nation's long decline. The holiday was originally intended to distract the distraught Taldan populace with a night of revelry and comedic entertainment, but the antics of jesters were simply not enough.

Over the course of the first few years, Jestercap evolved from a holiday of observation to a holiday of participation. Today, the holiday is a time where anyone can pull pranks or jokes or japes on companions, on neighbors, and (most typically) on rivals, with the understanding that provided no lasting harm is done, any humiliations inflicted before midnight are to be taken in stride. Of course, come morning the day after, there are inevitably jokes that went too far, and grudges and feuds borne from Jestercap antics have a way of lingering for months to follow.

In Religion

Followers of Chaldira Zuzaristan, a halfling deity of mischief, treat Jestercap as a holy day and their pranks \u2014 often elaborate and extravagant in nature and plotted for months in advance \u2014 as displays of their faith.`,id:"824546",note:null,date:{day:27,year:null,month:9},category:null},{name:"Feast of the Survivors",description:`Zon-Kuthon, Nidal

A harvest festival signifying the centuries of Nidalese ancestors protected by Zon-Kuthon. The ceremonial tables are made of human bones of community members from past generations.`,id:"824547",note:null,date:{day:null,year:null,month:9},category:null},{name:"Kraken Carnival",description:`Absalom

The second of two local festivals where kite-battlers compete.`,id:"824548",note:null,date:{day:15,year:null,month:9},category:null},{name:"Independence Day",description:`Galt

Marks the beginning of the Red Revolution.`,id:"824549",note:null,date:{day:5,year:null,month:10},category:null},{name:"Seven Veils",description:`Sivanah

The holiday known as Seven Veils, which takes place on the 23rd of Neth in most realms of the Inner Sea region, is a celebration of the region's diversity \u2014 a time when social boundaries break down even further in a day-long event filled with dancing, feasting, and courting. The evening traditionally closes out with the Seven Veil masquerade, a ball wherein the participants wear disguises that hide their race or gender (often using minor magical trinkets and spells) or disguise these features as entirely new characteristics. At the end of the ball, the participants remove their disguises to their partners, often with unpredictable and sometimes delightfully awkward results. Traditionalists and conservative minds often find the Seven Veils masquerades to be scandalous or off-putting, yet they remain particularly popular in most of the larger cities of the land.

Historians note that the original "Dance of the Seven Veils" has a much different genesis than one promoting diversity \u2014 the mysterious cult of Sivanah, goddess of illusions, mystery, and reflections, is generally cited as the source of this festival, and indeed, worshippers of the goddess (herself known as the Seventh Veil) count the 23rd of Neth as one of their most sacred of days. What rituals the church of Sivanah performs on this date, however, are unknown to outsiders, for the cult enjoys its secrets. This secrecy has, unsurprisingly, given rise to all manner of sinister rumour, yet when Seven Veils rolls around each year, its eager participants are quick to set aside rumour in preference for the night's fun and games.`,id:"824550",note:null,date:{day:23,year:null,month:10},category:null},{name:"Abjurant Day",description:`Nethys

Abjurant Day occurs on 8 Neth and is known as a day of cooperation between neighbors to shore up mutual defenses and train allies in magic. Potential apprentices are often tested on the day.`,id:"824551",note:null,date:{day:8,year:null,month:10},category:null},{name:"Great Fire Remembrance",description:`Korvosa

Great Fire Remembrance is a holiday celebrated on each 13 Neth in the Varisian city of Korvosa. It commemorates the Great Fire of 4429 AR, which devastated the then still fledgling Chelish colony of Fort Korvosa. On this somber day, most of the city shuts down and people generally remain at home. It has become tradition not to light any fires (not even cooking fires) on Great Fire Remembrance.`,id:"824552",note:null,date:{day:13,year:null,month:10},category:null},{name:"Even-Tongued Day",description:`Cheliax, Asmodeus, Milani

Observed on 14 of Neth, Even-Tongued Day was once a day of joy and celebration in Cheliax, but has become instead one of mourning.

Originally, the date marked the conquest of Aspex the Even-Tongued, who brought the nations of Galt, Andoran and Isger under Chelish control. Since the death of Aroden and the loss of these nations, the holiday instead marks the loss of territory and glory once held by Cheliax. Oaths are sometimes made, typically to Asmodeus, and rarely of a pleasant nature (such as the reclaiming of the lost empire and vengeance against treacherous former allies).

Citizens wear black on this day, public speaking is forbidden, and old feuds and vendettas are rekindled.`,id:"824553",note:null,date:{day:14,year:null,month:10},category:null},{name:"Evoking Day",description:`Nethys

A holy day to followers of Nethys, Evoking Day is full of vibrant explosions, skillful wielding of spells, and much dancing. Evoking Day is observed on the 18th of Neth, and while this holiday is mostly celebrated in Garund, temples dedicated to Nethys host celebrations throughout the Inner Sea region. Traditional celebrations of Evoking Day have changed over the thousands of years since its first incarnation, but to this day every occurrence of Evoking Day still features a grand meal shared by celebrants during the afternoon and a wondrous exhibition of brilliant and explosive magic once the sun sets. These days, such colorful magical displays are augmented with fireworks of a dozen different colors and patterns.

In temples of Nethys dedicated to revering evocation magic, priests and prominent arcanists participate in spell duels where each contestant stands on a raised platform and takes turns trying to incapacitate her opponent. The magic wielded in theses duels favors the flashy over the dangerous, but clerics of Nethys are on hand to treat any injuries. These duels gather large crowds eager to lend their applause to their favorite contestant.

It is also during this festival when wizards who worship Nethys open their spellbooks to others who share their craft. Wizards normally guard their spellbooks with their lives and covet the eldritch information therein, but on Evoking Day these wizards meet with one another prior to the afternoon feast to share their spells just as they prepare to share a grand meal.

Though Evoking Day is primarily a day of grand magic, those with no spellcasting talent still flock to local temples of Nethys to partake in the shared feast and flashy evening displays of magic and fireworks. Between the meal and into the night, celebrants wear black-and-white robes and perform joyous dances meant to give thanks to the wonders Nethys brought to humankind. These dances are grand affairs involving dozens of dancers all spinning and clapping to the accompanying music as their black-and-white robes fan out around them with each spin. As night descends and the fireworks and magical displays begin, the dancing rises to a climax erupting in shouts and calls to Nethys with each thunderous boom.`,id:"824554",note:null,date:{day:18,year:null,month:10},category:null},{name:"Baptism of Ice",description:`Irrisen

In the Irriseni Baptism of Ice, an annual fertility festival held from the 24th to the 30th of Neth, locals parade all children born during the year through the town in fine clothes. In most towns, the festival ends with a symbolic sacrifice of a child to the cold. However, in Whitethrone and Irrisen's provincial capitals, a peasant child is killed through exposure.`,id:"824555",note:null,date:{day:24,year:null,month:10},category:null},{name:"Transmutatum",description:`Nethys

Transmutatum is one of the three major holidays of the church of Nethys, on 28th of Neth. It is a day of reflection and self-improvement. Many followers of Nethys begin research and crafting projects on this day.`,id:"824556",note:null,date:{day:28,year:null,month:10},category:null},{name:"Winter Week",description:"Traditional feast; time for courting and spending time with friends.",id:"824557",note:null,date:{day:null,year:null,month:11},category:null},{name:"The Shadowchaining",description:`Zon-Kuthon, Nidal

Commemorating the Midnight Lord's gift of shadow animals.`,id:"824558",note:null,date:{day:1,year:null,month:11},category:null},{name:"Pseudodragon Festival",description:`Korvosa

Korvosa's Pseudodragon Festival, a holiday celebrated annually on 7 Kuthona, marks the winter migration of wild pseudodragons from the Mindspin Mountains to Conqueror's Bay, which inspires the creatures already in the city\u2014even those domesticated\u2014to play with their wild kin in the skies over the city. Locals mark the day with a joyous inebriation.`,id:"824559",note:null,date:{day:7,year:null,month:11},category:null},{name:"Ascension Day",description:`Cayden Cailean

Much like the god to whom it is dedicated, the Caydenite holiday of Ascension Day is generally celebrated in a very informal style. Occurring annually on 11 Kuthona, it commemorates the day Cayden Cailean passed the Test of the Starstone and ascended to godhood in 2765 AR. In all likelihood, the 11th of Kuthona is not the exact date on which it actually happened, but since the god was dead drunk when it happened, it will probably be never known.`,id:"824560",note:null,date:{day:11,year:null,month:11},category:null},{name:"Winterbloom",description:`Naderi

Holiday celebrating Naderi's ascension. Celebrations are typically understated but include readings of The Lay of Arden and Lysena.`,id:"824561",note:null,date:{day:15,year:null,month:11},category:null},{name:"Final Day",description:`Groetus

Cultists of Groetus perform an hour's silence at dusk on the last day of the year and seek guidance from their god about the End Time.`,id:"824562",note:null,date:{day:31,year:null,month:11},category:null},{name:"Night of the Pale",description:`Not all of Golarion's holidays and festivals are times of rejoicing and delight. Holidays worshiped by dark and sinister cults and religions tend to be hidden affairs, their rituals and ceremonies involving cruelties and vile practices that send shivers of fear through gentler society. Scholars suspect that the Night of the Pale\u2014a holiday that traditionally takes place on the last day of the year, the 31st of Kuthona\u2014has links to several sinister religions, but today no one church has specific association with the event. Nonetheless, the Night of the Pale is an event that many look forward to all year, whether in fear or excitement.

On the Night of the Pale, it is said that the ghosts of those who died during the previous year manifest upon the world and come to visit the homes they lived in during life. Although some might think that the chance of seeing even the shade of a dearly departed one might be a blessing, the Night of the Pale is not a time for tearful reunions, for these ghosts, tradition says, do not return out of love for those they left behind but out of darker compulsions. Lingering jealousy, unfinished arguments, or the simmering need for revenge are said to be what compels the dead to return to torment the living on the Night of the Pale.

The evening of this night in many communities is celebrated by a morbid feast, the food prepared with themes revolving around graveyards, the dead, and other spooky traditions. This feast, on one level, helps the celebrants to make light of their fears while sharing good company with similarly nervous neighbors, but at another level is believed to placate vengeful spirits as toasts are raised to the memories of the recently departed. These feasts include retellings of favorite memories of the departed, in hopes of reminding the approaching ghosts of brighter and kinder memories than those that compel them to return. The feast always ends at least an hour before midnight in order to give participants time to return home, decorate doors and windows with salt and other trinkets taken from the feasting table (salted bread baked into crook-like shapes are a favorite, as these can be hung from doorknobs and eaves) to ward off evil spirits, and hide in their bedrooms until dawn. Brave youths and adventurers often deliberately stay out after midnight, either to dare the ghosts to challenge them or simply for the thrill of bucking tradition. Every Night of the Pale, it seems, there are disappearances among those who stay out after midnight, although whether these vanishings are the result of dissatisfied locals taking the opportunity to run away from home, murderers or wild animals or other mundane dangers, or the vengeful spirits carrying off their victims depends upon the circumstances.

The morning after a Night of the Pale is also the first day of the new year\u2014a time that many celebrate more as a relief for surviving the night before than in anticipation of what the new year might bring, although regional preferences for how this day is celebrated vary enough that no single tradition holds over the other. Save, of course, the lingering fears of what dread spirits might come knocking upon warded doors one year away...`,id:"824563",note:null,date:{day:31,year:null,month:11},category:null},{name:"Turning Day",description:`Alseta

The changing of the year is celebrated with the forgiveness of old debts and grudges, and embracing new opportunities.`,id:"824564",note:null,date:{day:31,year:null,month:11},category:null},{name:"Ritual of Stardust",description:`Desna

The Ritual of Stardust is one of the few formal religious holidays in honor of the goddess Desna. It is held on both the summer and winter solstices.

Followers of the Song of Spheres gather at dusk and light enormous bonfires and hold feasts, watching the sparks and embers float out into the darkening sky. After it is fully dark, the celebrants chant and sing songs as they watch the fires burn low. When only embers remain, sand mixed with ground star gems (either star rubies, star sapphires, or rose quartz) is thrown on them or into the air downwind. At this point it is common to make proclamations of love and friendship and of promised journeys to come. The twinkling of the sand is thought to mirror the night sky and demonstrate Desna's witnessing of these pronouncements.`,id:"824565",note:null,date:{day:null,year:null,month:null},category:null},{name:"Planting Week",description:`Erastil

This holy week to the god Erastil is a time of heavy work in the fields for farmers.`,id:"824566",note:null,date:{day:null,year:null,month:null},category:null},{name:"Ascendance Night",description:`Norgorber

Day marking the apotheosis of the Reaper of Reputation.`,id:"824567",note:null,date:{day:2,year:null,month:4},category:null},{name:"Azvadeva Dejal",description:`Gruhastha

Celebration of the revelation of the Azvadeva Pujila, with gifts of books, celebrations of knowledge, blessing of animals, and a vegetarian feast.`,id:"824568",note:null,date:{day:3,year:null,month:4},category:null},{name:"Goblin Flea Market",description:`Andoran

A market day that focuses on unusual crafts and offers games to children who dress up for the occasion.`,id:"824569",note:null,date:{day:null,year:null,month:null},category:null},{name:"Breaching Festival",description:`Korvosa

Yearly festival in which contestants try to break through the magical wards protecting the Academae.`,id:"824570",note:null,date:{day:null,year:null,month:4},category:null},{name:"Silverglazer Sunday",description:`Andoran

Silverglazer Sunday is a two-part Andoren national festival that is held on the last Sunday of Arodus and the first Sunday of Rova every year. Celebrants spend the two Sundays fishing, holding swimming competitions, and making enormous puppets.`,id:"824571",note:null,date:{day:null,year:null,month:null},category:null},{name:"Batul al-Alim",description:`Qadira

Batul al-Alim is a holiday celebrated on the last Oathday of Calistril in Qadira. It commemorates the birthday of the popular romantic poet of the same name.`,id:"824572",note:null,date:{day:null,year:null,month:1},category:null}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Religious Holidays",id:"religious-holidays",color:"#9b2c2c"},{name:"Secular Holidays",id:"secular-holidays",color:"#0D47A1"},{name:"Historical Events",id:"historical-events",color:"#455A64"},{name:"Miscellaneous Events",id:"miscellaneous-events",color:"#0288D1"}]},{name:"Calendar of Galifar",description:"Calendar of the world of Eberron.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!1,weekdays:[{type:"day",name:"Sul",id:"ID_598a7bd9b8b9"},{type:"day",name:"Mol",id:"ID_69088ac8f818"},{type:"day",name:"Zol",id:"ID_a8c85a98f8fa"},{type:"day",name:"Wir",id:"ID_fa4b687aaba9"},{type:"day",name:"Zor",id:"ID_58e9a82a6bc8"},{type:"day",name:"Far",id:"ID_9a18cb889ada"},{type:"day",name:"Sar",id:"ID_3b9bfa38c979"}],months:[{name:"Zarantyr",type:"month",length:28,id:"ID_7a8afb09aa6a"},{name:"Olarune",type:"month",length:28,id:"ID_386b188b2a89"},{name:"Therendor",type:"month",length:28,id:"ID_599a0ad859c8"},{name:"Eyre",type:"month",length:28,id:"ID_98a95869e90b"},{name:"Dravago",type:"month",length:28,id:"ID_eb5a194bcbf8"},{name:"Nymm",type:"month",length:28,id:"ID_bb596aa9ca5b"},{name:"Lharvion",type:"month",length:28,id:"ID_fb1bb9dabb88"},{name:"Barrakas",type:"month",length:28,id:"ID_8bcb19c8f90a"},{name:"Rhaan",type:"month",length:28,id:"ID_0a09eb5b7b9b"},{name:"Sypheros",type:"month",length:28,id:"ID_3b98ab1a29e8"},{name:"Aryth",type:"month",length:28,id:"ID_899b59faaba9"},{name:"Vult",type:"month",length:28,id:"ID_8a286b78aac9"}],moons:[{name:"Nymm",cycle:28,offset:-14,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_a8b88988a94a"},{name:"Sypheros",cycle:35,offset:-11,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_5ba80b4b096a"},{name:"Therendor",cycle:42,offset:21,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_c999085a499b"},{name:"Rhaan",cycle:49,offset:9,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_39f91ab8a85a"},{name:"Olarune",cycle:56,offset:27,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_2ada8b99788b"},{name:"Eyre",cycle:63,offset:10,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_49285b79d988"},{name:"Vult",cycle:70,offset:6,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_eaebb94a9acb"},{name:"Zarantyr",cycle:77,offset:31,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_98d86aabcbb9"},{name:"Aryth",cycle:84,offset:41,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_d989b809d97b"},{name:"Dravago",cycle:91,offset:31,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_1a293959eaab"},{name:"Lharvion",cycle:98,offset:34,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_cbf919491a5b"},{name:"Barrakas",cycle:105,offset:-11,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_4a1a2a6b589b"}],leapDays:[],eras:[]},current:{year:998,day:1,month:0},events:[{name:"The Tain Gala - Sharn",description:"The Tain Gala is a notable event held on the first Far of each month in Sharn.",id:"824461",note:null,date:{day:null,year:null,month:null},category:null},{name:"Revelation Day - Blood of Vol",description:"Meditation ceremony for Seekers (also called Ascension Day).",id:"824462",note:null,date:{day:13,year:null,month:0},category:null},{name:"Winter Solstice",description:"The longest night of the year.",id:"824463",note:null,date:{day:14,year:null,month:0},category:null},{name:"Rebirth Eve - The Silver Flame",description:"The Purified new year; a night for spiritual vigil and guarding against evil. ",id:"824464",note:null,date:{day:14,year:null,month:0},category:null},{name:"Crystalfall - Sharn",description:"A day of remembrance; Ice sculptures are created (and destroyed) to commemorate the destruction of the Glass Tower on 9 Olarune in 918 by abjurers. ",id:"824465",note:null,date:{day:9,year:998,month:1},category:null},{name:"Bright Souls' Day - The Silver Flame",description:"On this day each year, the Purified celebrate the lives and sacrifice of all followers of the Flame who died while fighting evil and protecting the faithful. ",id:"824466",note:null,date:{day:18,year:null,month:1},category:null},{name:"The Day of Mourning - Sharn",description:"In commemoration of the destruction of the nation of Cyre, those who survived gather to remember the loss of their kingdom on this date in the year 994. ",id:"824467",note:null,date:{day:20,year:995,month:1},category:null},{name:"Tirasday - The Silver Flame",description:"On this day, the Silver Flame work, give gifts, and partake in joyous celebration out of thankfulness for the new planting season and the birth of Tira Miron - the Voice of the Silver Flame.",id:"824468",note:null,date:{day:5,year:null,month:2},category:null},{name:"Sun's Blessing - The Sovereign Host",description:"The Sovereign Host enjoys this festival of peace, and of setting aside differences, in the name of Dol Arrah.",id:"824469",note:null,date:{day:15,year:null,month:2},category:null},{name:"Initiation Day - The Silver Flame",description:"Seminary graduations and breaking grounds for new churches are common on this day as the Silver Flame recalls their declarations of independent faith and the construction of their first cathedral on this special day each year. ",id:"824470",note:null,date:{day:11,year:null,month:3},category:null},{name:"Baker's Night - The Silver Flame",description:"An old and misunderstood, yet immensely popular, holiday wherein followers of the Silver Flame gather to share pastries and treats created by bakers within their fold. ",id:"824471",note:null,date:{day:6,year:null,month:4},category:null},{name:"Aureon's Crown - Sharn and The Sovereign Host",description:`The Sovereign Host celebrate knowledge on this day with lectures and sermons.Secular institutions hold graduation and commencement ceremonies on this date, as do the monastic schools of the Silver Flame.In Sharn this has become a common secular holiday, wherein even non-devout members of the Five Nations attend lectures and sermons held by the priests of Aureon on philosophical, historical, and a range of other topics - including discussions on the nature of the gods.

`,id:"824472",note:null,date:{day:26,year:null,month:4},category:null},{name:"Promisetide - The Silver Flame",description:"A controversial holiday outside of the Silver Flame faith, on this day the Purified honor the Silver Flame for the promise of paradise. They also honor (without worship) the Sovereign Host for having created the world, before stepping aside to allow the Flame its rightful place as the last god of Eberron.\xA0 ",id:"824473",note:null,date:{day:28,year:null,month:4},category:null},{name:"Brightblade - Sharn and The Sovereign Host",description:`This Sovereign Host festival, dedicated to Dol Dorn, is marked by gladiatorial and athletic contests. 

In Sharn, festival celebrations occur throughout the temple districts with events culminating in a combined contest of champions at the Cornerstone Arena. `,id:"824474",note:null,date:{day:12,year:null,month:5},category:null},{name:"First Dawn - The Silver Flame",description:"On this day in 914, the Church of the Silver Flame officially assumed control of the government of Thrane. On each anniversary, the Purified give thanks for their just rule, while also honoring the memory of King Thalin, whose death paved the way for their governance.",id:"824475",note:null,date:{day:21,year:915,month:5},category:null},{name:"Silvertide - The Silver Flame",description:"Commemoration of both the couatl sacrifice and the entry, thousands of years ago, of the Silver Flame into Eberron mark this highest of holy days. The vast majority of Purified spend this day in prayer and observance.\xA0 ",id:"824476",note:null,date:{day:14,year:null,month:6},category:null},{name:"The Race of Eight Winds - Sharn",description:`Legend tells of King Galifar II's fascination with aerial scouts and cavalry. The evolution of this annual contest took centuries, but has given Sharn an exotic and well anticipated event involving beasts and their riders in a symbiotic quest for glory* over a course that finds them weaving through the spires of the city. 



*the winner also receives 500gp and a land grant located elsewhere in Breland.`,id:"824477",note:null,date:{day:21,year:201,month:6},category:null},{name:"The Hunt - Sharn and The Sovereign Host",description:`The Sovereign Host celebrate Balinor with communal hunts of dangerous creatures. 

In Sharn, a dangerous beast*, whose transport to the city was arranged by the priests of Balinor, is released into the Depths of the Lower-City. Open to any who would participate (and pay an entry fee in the form of a 5gp donation), the victor must return with the beast's head to receive a 500gp purse, local fame, and the blessing of Balinor. 



*often a singular beast, it can be several - which then requires the victor to return with the most skins. `,id:"824478",note:null,date:{day:4,year:null,month:7},category:null},{name:"Victory Day - The Silver Flame",description:"Commemorating the conclusion of the lycanthropic purge (832 YK - 880 YK), on Victory Day the adult faithful of the Silver Flame attend sermons on triumph, defeat, and the somewhat questionable methods utilized by the templars during the purge - while the children of the faithful act out great battles with toy swords. ",id:"824479",note:null,date:{day:9,year:881,month:7},category:null},{name:"Fathen's Fall - Sharn",description:"Honoring the memory of Fathen, a great hero of the Silver Crusade (832 YK - 880 YK), who, in the last days of the purge, was torn apart by wererats on the streets of North Market. Faithful gather on this day at the Shrine of Fathen the Martyr to listen to a sermon from the priest of High Hope. This holiday is often uncomfortable and tense for shifter communities in Sharn. ",id:"824480",note:null,date:{day:25,year:881,month:7},category:null},{name:"Boldrei's Feast - Sharn and The Sovereign Host",description:`A feast of community in the name of Boldrei, extravagant parties are often held on this holiday and it has also become the traditional day for elections. 

In Sharn, a great feast is held at the Pavilion of the Host with goods and services donated\xA0 from local merchants, as well as House Ghallanda. Many grand parties, some quite astonishing in their opulence, are hosted by the wealthiest members of varying districts - often in competition with one another for social standing. `,id:"824481",note:null,date:{day:9,year:null,month:8},category:null},{name:"The Ascension - Sharn",description:"Each year on The Ascension, followers reaffirm their faith and give thanks as well as attend blessing ceremonies at temples throughout the city - the grandest of which occurs at the Cathedral of the Cleansing Flame. All of this is to honor the sacrifice of Tira Miron, the Voice of the Flame, without which there would be no Church of the Silver Flame. Contributions to their community on this day are a high priority for the faithful.",id:"824482",note:null,date:{day:1,year:null,month:9},category:null},{name:"Wildnight - Sharn",description:"With the The Fury (the Sovereign of Passion and Madness) reaching the height of her power on this night, people find it difficult to control or restrain their impulses - once the sun sets, public revelry in the streets climbs to joyous or, all too often, dangerous levels, calming only as the sun rises on the following morning. ",id:"824483",note:null,date:{day:18,year:null,month:9},category:null},{name:"Saint Voltros's Day - The Silver Flame",description:"Though one of the least high holy days, it is marked by brief prayers and church services in the honor of the birth of Saint Voltros - the first paladin called to only serve the Silver Flame.",id:"824484",note:null,date:{day:25,year:null,month:9},category:null},{name:"Thronehold - Sharn",description:"On this day in 996, the Treaty of Thronehold was signed, formally ending the Last War. Annual celebratory feasts are held throughout the Five Nations to mark this auspicious and long-awaited event. ",id:"824485",note:null,date:{day:11,year:997,month:10},category:null},{name:"Rampartide - The Silver Flame",description:"In accordance with scripture, on this day the Purified steel themselves against wickedness, both without and within, through repentance and fasting. Children, elderly, and the sick are required only to give up their favorite foods for the day. ",id:"824486",note:null,date:{day:24,year:null,month:10},category:null},{name:"Long Shadows - Sharn",description:"As dark magic dominates over these three days of the Long Shadows, the myth of Sovereign Lord Aureon's stolen shadow is forefront in the minds of the people. Most will spend these days indoors huddled around the warmth of a fire, but those few who worship the dark deity use this time to prey upon the weak and the foolish. ",id:"824487",note:null,date:{day:26,year:null,month:11},category:null},{name:"Khybersef - The Silver Flame",description:`Originally called Khyber's Eve, the Purified spend the night in intense prayer and spiritual vigilance against the, according to scripture, "thinning of the bonds that hold the demon lords in Khyber" between now (the beginning of winter) and the solstice. Quests and crusades often begin on Khybersef. `,id:"824488",note:null,date:{day:27,year:null,month:11},category:null},{name:"Spring Equinox",description:"The spring equinox is when the day and the night are equally as long, and are getting longer.",id:"824489",note:null,date:{day:null,year:null,month:null},category:null},{name:"Summer Solstice",description:"	At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824490",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The autumn equinox is when the day and the night are equally as long, and are getting shorter.",id:"824491",note:null,date:{day:null,year:null,month:null},category:null}],id:null,categories:[]},{name:"Barovian Calendar",description:"Calendar of the realm of Barovia, home of Strahd.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!0,weekdays:[{type:"day",name:"Monday",id:"ID_6a183b08c8eb"},{type:"day",name:"Tuesday",id:"ID_892b7b7a5ae9"},{type:"day",name:"Wednesday",id:"ID_6bb98899ba68"},{type:"day",name:"Thursday",id:"ID_4a7b683aea19"},{type:"day",name:"Friday",id:"ID_78690a099b89"},{type:"day",name:"Saturday",id:"ID_ba5b09ba5a89"},{type:"day",name:"Sunday",id:"ID_29b90acaead9"}],months:[{name:"1st Moon",type:"month",length:31,id:"ID_7b4978ab581a"},{name:"2nd Moon",type:"month",length:28,id:"ID_cb99fbb9395b"},{name:"3rd Moon",type:"month",length:31,id:"ID_79881a89cb18"},{name:"4th Moon",type:"month",length:30,id:"ID_5b9a8a397908"},{name:"5th Moon",type:"month",length:31,id:"ID_f8399ab80818"},{name:"6th Moon",type:"month",length:30,id:"ID_3ac84a7bc869"},{name:"7th Moon",type:"month",length:31,id:"ID_e98bc86bc809"},{name:"8th Moon",type:"month",length:31,id:"ID_89ea78ca5988"},{name:"9th Moon",type:"month",length:30,id:"ID_798a3b990a4b"},{name:"10th Moon",type:"month",length:31,id:"ID_3a9999e8eb59"},{name:"11th Moon",type:"month",length:30,id:"ID_db39383b990a"},{name:"12th Moon",type:"month",length:31,id:"ID_1bfa3b180a48"}],moons:[{name:"Moon",cycle:29.530588853,offset:10.24953,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_e98b3a8ab8da"}],leapDays:[{name:"Leap Day",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:400},{ignore:!1,exclusive:!0,interval:100},{ignore:!1,exclusive:!1,interval:4}],offset:0,timespan:1,intercalary:!1,id:"ID_6a28dbb81a48"}],eras:[{name:"Before Christ",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-9e3,month:0,day:0}},{name:"Anno Domini",description:"",format:"Year {{year}} - {{era_name}}",start:{year:1,month:0,day:1}}]},current:{year:735,day:1,month:0},events:[{name:"Winter Solstice",description:"The Winter Solstice is the day of the year with the least time between sunrise and sunset. Many western cultures consider it the official start of winter.",id:"824455",note:null,date:{day:null,year:null,month:null},category:"natural-event"},{name:"Summer Solstice",description:`The Summer Solstice is the day of the year with the most time between 
sunrise and sunset. Many western cultures consider it the official start
 of summer.`,id:"824456",note:null,date:{day:null,year:null,month:null},category:"natural-event"},{name:"Spring Equinox",description:`The Spring Equinox,
also called the Vernal Equinox, is the day between the winter and
summer solstices where the day is the exact same length as the night.
Many western cultures consider it the official start of Spring.
`,id:"824457",note:null,date:{day:null,year:null,month:null},category:"natural-event"},{name:"Autumnal Equinox",description:`The Autumnal Equinox,
also called the Fall Equinox, is the midpoint between the summer and
winter solstices, where the day is the exact same length as the night.
Many western cultures consider it the official start of Autumn.
`,id:"824458",note:null,date:{day:null,year:null,month:null},category:null},{name:"New Year's Day",description:"New Year's day marks the start of a new year.",id:"824459",note:null,date:{day:1,year:null,month:null},category:null},{name:"Paschal Full Moon",description:"The first full moon after march 21st, which is considered the fixed date for the spring equinox.",id:"824460",note:null,date:{day:null,year:null,month:null},category:"natural-event"}],id:null,categories:[{name:"Natural Event",id:"natural-event",color:"#9e9d24"}]},{name:"Exandrian Calendar",description:"Calendar of the world of Wildemount.",static:{displayDayNumber:!1,firstWeekDay:2,incrementDay:!1,displayMoons:!0,overflow:!0,weekdays:[{type:"day",name:"Miresen",id:"ID_3b38aaa81bca"},{type:"day",name:"Grissen",id:"ID_da6b19882baa"},{type:"day",name:"Whelsen",id:"ID_a9cae8f88b98"},{type:"day",name:"Conthsen",id:"ID_e87859eb5aaa"},{type:"day",name:"Folsen",id:"ID_59180abbea8a"},{type:"day",name:"Yulisen",id:"ID_98082bd8d8ca"},{type:"day",name:"Da'leysen",id:"ID_da4ba92b299a"}],months:[{name:"Horisal",type:"month",length:29,id:"ID_e89a4ab9995b"},{name:"Misuthar",type:"month",length:30,id:"ID_18b8894bab7b"},{name:"Dualahei",type:"month",length:30,id:"ID_0a9b29f8f8db"},{name:"Thunsheer",type:"month",length:31,id:"ID_6a8a8a5bea5b"},{name:"Unndilar",type:"month",length:28,id:"ID_b8295bdbcafa"},{name:"Brussendar",type:"month",length:31,id:"ID_c92a489bb909"},{name:"Sydenstar",type:"month",length:32,id:"ID_7b48bb1b0a4a"},{name:"Fessuran",type:"month",length:29,id:"ID_289858c97849"},{name:"Quen'pillar",type:"month",length:27,id:"ID_f8abd9a86aa9"},{name:"Cuersaar",type:"month",length:29,id:"ID_7aba59fa2b69"},{name:"Duscar",type:"month",length:32,id:"ID_5819f86b99cb"}],moons:[{name:"Catha",cycle:33,offset:7,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_0ab929092b5b"},{name:"Ruidus",cycle:328,offset:80,faceColor:"#ff6161",shadowColor:"#1f1f1f",id:"ID_b9783ac818e9"}],leapDays:[],eras:[{name:"The Founding",description:"",format:"Year {{year}} - {{era_name}}",start:{year:1,month:0,day:1}},{name:"Age of Arcanum",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-1500,month:0,day:1}},{name:"The Calamity",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-665,month:0,day:1}},{name:"Post-Divergence",description:"",format:"Year {{year}} P.D.",start:{year:1,month:0,day:1}}]},current:{day:1,month:0,year:836},events:[{name:"Spring Equinox",description:"The spring equinox is when the day and the night are equally as long, and are getting longer.",id:"824430",note:null,date:{day:null,year:null,month:null},category:null},{name:"Summer Solstice",description:"	At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824431",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The autumn equinox is when the day and the night are equally as long, and are getting shorter.",id:"824432",note:null,date:{day:null,year:null,month:null},category:null},{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824433",note:null,date:{day:null,year:null,month:null},category:null},{name:"New Dawn",description:`The first day of the new year is also the holy day of the Changebringer, as the old year gives way to a new path.

In Tal'Dorei, Emon celebrates New Dawn with a grand midnight feast, which commonly features a short play celebrating the changes witnessed in the past year.

On the Menagerie Coast, people celebrate by having a feast on the shore at dusk to watch the sunset. They feast and discuss their hopes for the new year until the sun rises.`,id:"824434",note:null,date:{day:1,year:null,month:0},category:"religious-holidays"},{name:"Hillsgold",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824435",note:null,date:{day:27,year:null,month:0},category:"secular-holidays"},{name:"Day of Challenging",description:`The holy day of the Stormlord is one of the most raucous holidays in Emon. Thousands of spectators attend the annual Godsbrawl, which is held in the fighting ring within the Temple of the Stormlord. The people root for their deity's favored champion, and there is a fierce (yet friendly) rivalry between the Champion of the Stormlord and the Champion of the Platinum Dragon. The winner earns the title of "Supreme Champion" for an entire year.

The Day of Challenging is one of the most raucous holidays in Port Damali, and thousands of spectators attend the annual Godsbrawl held in the Temple of\xA0Kord to root for their favored deity's champion, particularly the chosen champions of the Storm Lord and the\xA0All-Hammer.\xA0`,id:"824436",note:null,date:{day:7,year:null,month:1},category:"religious-holidays"},{name:"Renewal Festival",description:"Spring begins early in the month of Dualahei, officially starting on the 13th with the Renewal Festival.",id:"824437",note:null,date:{day:13,year:null,month:2},category:"secular-holidays"},{name:"Wild's Grandeur",description:`Though the Archeart is the god of spring, the peak of the spring season is the holy day of the Wildmother.

The people in the southern wilds of Tal'Dorei celebrate the Wildmother's strength by journeying to a place of great natural beauty. This could be the top of a mountainous waterfall, the center of a desert, or even an old and peaceful city park (such as Azalea Street Park in Emon). Though Emon rarely celebrates Wild's Grandeur, the few who do will plant trees in observance of the holiday.

The people of the Menagerie Coast set aside this day to sail for no reason other than the pleasure of observing the natural beauty of their surroundings. Those who still partake in elements of Ki'Nau culture take this day to appreciate the fruits and foods granted by the sea, leaving offerings of delicacies and small handmade crafts at temporary altars of twisted roots and grasses.`,id:"824438",note:null,date:{day:20,year:null,month:2},category:"religious-holidays"},{name:"Harvest's Rise",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824439",note:null,date:{day:11,year:null,month:3},category:"secular-holidays"},{name:"Merryfrond's Day",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824440",note:null,date:{day:31,year:null,month:3},category:"secular-holidays"},{name:"Deep Solace",description:`Moradin's holy day is Deep Solace, which is celebrated on the eighteenth day of the fifth month. Especially devout followers of the All-Hammer spend the day in isolation, meditating on the meaning of family and how they may be better mothers, fathers, siblings, and children.

The dwarven communities across Exandria, such as the ones in Grimgolir and Kraghammer, celebrate with a full day of feasting and drinking.\xA0`,id:"824441",note:null,date:{day:18,year:null,month:4},category:"religious-holidays"},{name:"Zenith",description:"Summer begins in the middle of Unndilar, officially starting at noon on the 26th day known as the Zenith.",id:"824442",note:null,date:{day:26,year:null,month:4},category:"secular-holidays"},{name:"Artisan's Faire",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824443",note:null,date:{day:15,year:null,month:5},category:"secular-holidays"},{name:"Elvendawn",description:`Corellon's holy day is called Elvendawn,
or Midsummer. It is celebrated on the twentieth day
of the sixth month, and commemorates the elves' first
emergence from the Feywild.

In Syngorn, the Elves open small doorways into the Feywild and celebrate alongside the wild fey with uncharacteristic vigor.

Though the Dwendalian
Empire doesn't promote the worship of the Arch Heart,
the elves of Bysaes Tyl quietly celebrate in private by
opening small doors to the Feywild and having a little
more wine than usual.\xA0`,id:"824444",note:null,date:{day:20,year:null,month:5},category:"religious-holidays"},{name:"Highsummer",description:`The holy day of the Dawnfather is the peak of the summer season.

Emon celebrates with an entire week of gift-giving and feasting, ending at midnight on the 21st of Sydenstar (the anniversary of the Battle of the Umbra Hills, where Zan Tal'Dorei dethroned Trist Drassig).

Whitestone (where the Dawnfather is the city's patron god) celebrates with gift-giving and a festival of lights around the Sun Tree. Due to the Briarwood occupation, money is thin, so most Whitestone folk choose to recount the small things they are thankful for, rather than buy gifts.

While other parts of Exandria feast, the Dwendalian
Empire uses this day as an opportunity to enlist more
soldiers in its army. The military holds great feasts and
hands out toy soldiers and other propaganda, encouraging people to enlist and help fight against the evil that
threatens the king.\xA0`,id:"824445",note:null,date:{day:7,year:null,month:6},category:"religious-holidays"},{name:"Morn of Largesse",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824446",note:null,date:{day:14,year:null,month:6},category:"secular-holidays"},{name:"Harvest's Close",description:"Autumn begins on the 3rd of Fessuran\xA0and is typically celebrated with feasting in rural regions and with carnivals in the cities.\xA0",id:"824447",note:null,date:{day:3,year:null,month:7},category:"secular-holidays"},{name:"The Hazel Festival",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824448",note:null,date:{day:12,year:null,month:8},category:"secular-holidays"},{name:"Civilization's Dawn",description:`The Law Bearer's holy day is Civilization's
Dawn, which is celebrated on the autumnal equinox,
usually the twenty-second day of the ninth month.

Emon celebrates with a great bonfire in the square of each neighborhood, around which each community dances and gives gifts.

In the
Dwendalian Empire, people celebrate by having feasts 
in honor of the laws of the Dwendal bloodline. One seat
at every table is left open for the king, who eats in spirit
with the people he rules.\xA0`,id:"824449",note:null,date:{day:22,year:null,month:8},category:"religious-holidays"},{name:"Night of Ascension",description:`The Raven Queen's holy day is called the Night of Ascension, celebrating her apotheosis. The actual date of the her rise to divinity is unclear, but the Night of Ascension is celebrated on the thirteenth day of the tenth month.

Though most in Emon see this celebration of the dead as unnerving and macabre, the followers of the Matron of Ravens believe that the honored dead would prefer to be venerated with cheer, not misery.

What was once a night of cheery celebration of the dead in the Dwendalian Empire has recently become an occasion to burn effigies and decry the Kryn Dynasty for their unnatural relationship with death.`,id:"824450",note:null,date:{day:13,year:null,month:9},category:"religious-holidays"},{name:"Zan's Cup",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824451",note:null,date:{day:21,year:null,month:9},category:"secular-holidays"},{name:"Barren Eve",description:"Winter begins on the 2nd day of Duscar, the Barren Eve, which is a nighttime celebration and remembrance of those who fell in battle.",id:"824452",note:null,date:{day:2,year:null,month:10},category:"secular-holidays"},{name:"Embertide",description:"Bahamut's holy day is called Embertide,\xA0and is celebrated on the fifth day of Duscar. This is a day\xA0of remembrance, solemnity, and respect for those who\xA0have fallen in the defense of others.",id:"824453",note:null,date:{day:5,year:null,month:10},category:"religious-holidays"},{name:"Winter's Crest",description:`This day celebrates the freedom of Tal'Dorei from Errevon the Rimelord. It is the peak of the winter season, so devout followers of the Matron of Ravens (as the goddess of winter) consider it to be one of her holy days.

However, in most of the land, people see Winter's Crest as a secular holiday, often celebrated with omnipresent music in public areas, lavish gift-giving to relatives and loved ones, and the cutting and decorating of trees placed indoors. The Sun Tree in Whitestone is often decorated with lights and other baubles for Winter's Crest.`,id:"824454",note:null,date:{day:20,year:null,month:10},category:"secular-holidays"}],id:null,categories:[{name:"Religious Holidays",id:"religious-holidays",color:"#0D47A1"},{name:"Secular Holidays",id:"secular-holidays",color:"#4A148C"}]},{name:"Calendar of Harptos",description:"Calendar of Faer\xFBn of the Forgotten Realms.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!1,weekdays:[{type:"day",name:"I",id:"ID_9999882bb94a"},{type:"day",name:"II",id:"ID_8a0b4b79d888"},{type:"day",name:"III",id:"ID_da483aca8bf9"},{type:"day",name:"IV",id:"ID_a8fbea39cac8"},{type:"day",name:"V",id:"ID_9b19d9787b0b"},{type:"day",name:"VI",id:"ID_382a590a8a28"},{type:"day",name:"VII",id:"ID_fbca0ab80afb"},{type:"day",name:"VIII",id:"ID_ca093bca5ad9"},{type:"day",name:"IX",id:"ID_d95b39098bf8"},{type:"day",name:"X",id:"ID_389bfb5858db"}],months:[{name:"Hammer (Deepwinter)",type:"month",length:30,id:"ID_cbeb4b190b6a"},{name:"Midwinter",type:"intercalary",length:1,id:"ID_89bad9089b7b"},{name:"Alturiak (The Claw of Winter)",type:"month",length:30,id:"ID_6a08a8aacb7b"},{name:"Ches (The Claw of the Sunsets)",type:"month",length:30,id:"ID_db2a7bf97afa"},{name:"Tarsakh (The Claw of Storms)",type:"month",length:30,id:"ID_6b48982b0bda"},{name:"Greengrass",type:"intercalary",length:1,id:"ID_08790af92809"},{name:"Mirtul (The Melting)",type:"month",length:30,id:"ID_b91b39f95a28"},{name:"Kythorn (The Time of Flowers)",type:"month",length:30,id:"ID_f8e9585a2bf8"},{name:"Flamerule (Summertide)",type:"month",length:30,id:"ID_fa895bdb38e9"},{name:"Midsummer",type:"intercalary",length:1,id:"ID_a9181b5a683a"},{name:"Eleasis (Highsun)",type:"month",length:30,id:"ID_1b1b1b287b0a"},{name:"Eleint (The Fading)",type:"month",length:30,id:"ID_1aca5918993a"},{name:"Highharvestide",type:"intercalary",length:1,id:"ID_a94a183b4b88"},{name:"Marpenoth (Leaffall)",type:"month",length:30,id:"ID_58d97969eb79"},{name:"Uktar (The Rotting)",type:"month",length:30,id:"ID_4b090b787b18"},{name:"The Feast of the Moon",type:"intercalary",length:1,id:"ID_1b0ae8dbdb4a"},{name:"Nightal (The Drawing Down)",type:"month",length:30,id:"ID_abb82afab80a"}],moons:[{name:"Sel\xFAne",cycle:30.4375,offset:13.9,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_48ea2a69a888"}],leapDays:[{name:"Shieldsmeet",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:4}],offset:0,timespan:9,intercalary:!1,id:"ID_5b08faa88ada"}],eras:[]},current:{year:1491,day:1,month:0},events:[{name:"Winter Solstice",description:null,id:"824588",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Vernal Equinox",description:null,id:"824589",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Summer Solstice",description:null,id:"824590",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Autumnal Equinox",description:null,id:"824591",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Shieldmeet",description:`Shieldmeet was the equivalent of a leap year day in the Calendar of Harptos, occurring once every four years, adding a day after the festival of Midsummer and before Eleasis 1. Traditionally the day was used for fairs, bazaars, musical and theatrical performances, and tournaments of skill and magical ability. Nobles usually held court to hear the petitions of their people and to make or renew trade pacts, alliances, and agreements. Shieldmeet was known as Cinnaelos'Cor (also seen as Cinnaeloscor), "the Day of Corellon's Peace" in elvish and marked the end of an aeloulaev and the beginning of a new one in the elven Aryselmalyn calendar.`,id:"824592",note:null,date:{day:2,year:null,month:9},category:"festivals"},{name:"Feast of the Moon",description:`The Feast of the Moon, or Moonfest, was an annual festival in the Calendar of Harptos, occurring between the final night of Uktar and the first day of Nightal. It was the last great festival of the calendar year.

The day traditionally marked the onset of winter. It was also a time to celebrate and honor the ancestors and the respected dead. On this day, folk blessed their ancestors' graves and performed the Ritual of Remembrance. People also gathered to tell stories of the deeds of their ancestors and of the gods until deep into the night, until they merged and became legend. This was a time to hear of past heroes, great treasures, and lost cities.

In Faer\xC3\u0192\xC2\xBBn, battles were typically fought between harvest-time and the coming of winter. This meant that most of the fighting usually occurred in the month of Uktar. The timing of the Feast of the Moon\xC3\xA2\xE2\u201A\xAC\xE2\u20ACafter recently slain soldiers had joined the ranks of the dead\xC3\xA2\xE2\u201A\xAC\xE2\u20ACwas thus practical, if sadly ironic.

The Heralds of Faer\xC3\u0192\xC2\xBBn had a number of special duties on the Feast of the Moon. Prime among these was to perform the Bloodsong ceremony, at which a Herald publicly recited the genealogies of each noble family in the area. In this way, the Heralds reaffirmed a noble family's traditional authority and status, as well as the respect accorded to them.

Priests of a number of deities of various pantheons held rites, ceremonies, and festivals on the Feast of the Moon. Many, though not all, focused on remembering the dead in one way or another.`,id:"824593",note:null,date:{day:1,year:null,month:15},category:"festivals"},{name:"Highharvesttide",description:`Highharvestide was an annual festival in the Calendar of Harptos, taking place between 30 Eleint and 1 Marpenoth. It was traditionally a feast to celebrate the harvest and the abundance of food, but also the time when those wishing to travel left on their journeys before winter set in.

Preparations for the feast started as early as a tenday before, while preparing, cooking, and preserving the harvest for the cold winter months. Traditions varied from community to community, but examples of festive activity included food-related contests; races and challenges of skill and strength; receiving homemade sweets from the local clergy; and priests blessing larders, wine cellars, grain bins, and food preserves.

This day was often an important anniversary to various governments. Often, taxes and tithes came due, rulers held "open courts" to hear the concerns of their citizens, oaths were publicly renewed, troops received marching orders to new duty stations, and guilds met to confer on prices and rate changes for goods and services.

According to tradition, dwarves only drank water and elves drank only dew on this day. However, these traditions began to fade in the 14th and 15th century DR.

It was said that children born on this day were favored by Tymora to have lifelong good luck but be smitten with wanderlust. Another legend was that human females born on this day had control over their reproductive system (i.e., got pregnant only when they wanted to) by force of will alone, and that they could instantly sense when they had been poisoned, either by ingestion or being bitten by a venomous creature for example.`,id:"824594",note:null,date:{day:1,year:null,month:12},category:"festivals"},{name:"Greengrass",description:"Greengrass was a festival to welcome in the first day of spring in the Calendar of Harptos. It occured annually on a special day between Tarsakh 30 and Mirtul 1. Traditionally, the wealthier people brought out flowers to give to the less wealthy, who either wore them or spread them on the ground to encourage the deities to usher in the summer.",id:"824595",note:null,date:{day:1,year:null,month:5},category:"festivals"},{name:"Midwinter",description:`Midwinter (also known as Deadwinter Day) was a festival to mark the midpoint of winter in the Calendar of Harptos. It occured on a special day between Hammer 30 and Alturiak 1. Amongst nobles and monarchs it was known as Midwinter and was traditionally used to make or renew alliances, although the common people called it Deadwinter Day, a reference to the cold and hard times that remained before the spring.

On Midwinter Day the Red Fellowship of the Deity known as the Red Knight observes the Retreat. This solemn ceremony consists of an assembly wherein the clergy discuss the previous year's campaigns. Strategies are discussed, battles analyzed, and the accumulated lore integrated into the church's teachings.

The holiest day of the year for the Church of Shevarash is Midwinter Night, during which the Dark Court Slaughter is remembered. Inductions into the ranks of the clergy occur at this time. Each new cleric screams vows of vengeance into the night air and swears neither to laugh nor smile until the Spider Queen and her followers are no more.`,id:"824596",note:null,date:{day:1,year:null,month:1},category:"festivals"},{name:"Midsummer",description:"Midsummer was a festival that celebrated love and music through feast. It occurred between Flamerule 30 and Eleasis 1 on the Calendar of Harptos. It was a time when love advanced, and it was said the deities themselves took a hand to ensure good weather. If bad weather was experienced on this night it was considered an extremely bad omen. Shieldmeet occurred the day after Midsummer on leap years.",id:"824597",note:null,date:{day:1,year:null,month:9},category:"festivals"}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Festivals",id:"festivals",color:"#9b2c2c"}]}];function U(){}var Or=n=>n;function Hl(n,e){for(let t in e)n[t]=e[t];return n}function oo(n){return n()}function Wl(){return Object.create(null)}function de(n){n.forEach(oo)}function Ve(n){return typeof n=="function"}function ee(n,e){return n!=n?e==e:n!==e||n&&typeof n=="object"||typeof n=="function"}function Gl(n){return Object.keys(n).length===0}function Pa(n,e,t,a){if(n){let r=Ul(n,e,t,a);return n[0](r)}}function Ul(n,e,t,a){return n[1]&&a?Hl(t.ctx.slice(),n[1](a(e))):t.ctx}function ja(n,e,t,a){if(n[2]&&a){let r=n[2](a(t));if(e.dirty===void 0)return r;if(typeof r=="object"){let o=[],i=Math.max(e.dirty.length,r.length);for(let l=0;l<i;l+=1)o[l]=e.dirty[l]|r[l];return o}return e.dirty|r}return e.dirty}function Va(n,e,t,a,r,o){if(r){let i=Ul(e,t,a,o);n.p(i,r)}}function Ha(n){if(n.ctx.length>32){let e=[],t=n.ctx.length/32;for(let a=0;a<t;a++)e[a]=-1;return e}return-1}function so(n){return n??""}function ae(n){return n&&Ve(n.destroy)?n.destroy:U}var zl=typeof window!="undefined",Yl=zl?()=>window.performance.now():()=>Date.now(),lo=zl?n=>requestAnimationFrame(n):U;var fa=new Set;function Zl(n){fa.forEach(e=>{e.c(n)||(fa.delete(e),e.f())}),fa.size!==0&&lo(Zl)}function $l(n){let e;return fa.size===0&&lo(Zl),{promise:new Promise(t=>{fa.add(e={c:n,f:t})}),abort(){fa.delete(e)}}}var Kl=!1;function f2(){Kl=!0}function h2(){Kl=!1}function w(n,e){n.appendChild(e)}function se(n,e,t){let a=uo(n);if(!a.getElementById(e)){let r=E("style");r.id=e,r.textContent=t,Ql(a,r)}}function uo(n){if(!n)return document;let e=n.getRootNode?n.getRootNode():n.ownerDocument;return e&&e.host?e:n.ownerDocument}function p2(n){let e=E("style");return Ql(uo(n),e),e.sheet}function Ql(n,e){w(n.head||n,e)}function q(n,e,t){n.insertBefore(e,t||null)}function O(n){n.parentNode.removeChild(n)}function We(n,e){for(let t=0;t<n.length;t+=1)n[t]&&n[t].d(e)}function E(n){return document.createElement(n)}function Ot(n){return document.createElementNS("http://www.w3.org/2000/svg",n)}function me(n){return document.createTextNode(n)}function P(){return me(" ")}function qe(){return me("")}function Y(n,e,t,a){return n.addEventListener(e,t,a),()=>n.removeEventListener(e,t,a)}function b(n,e,t){t==null?n.removeAttribute(e):n.getAttribute(e)!==t&&n.setAttribute(e,t)}function ha(n){return n===""?null:+n}function m2(n){return Array.from(n.childNodes)}function De(n,e){e=""+e,n.wholeText!==e&&(n.data=e)}function Ct(n,e){n.value=e??""}function et(n,e,t,a){t===null?n.style.removeProperty(e):n.style.setProperty(e,t,a?"important":"")}function Yt(n,e){for(let t=0;t<n.options.length;t+=1){let a=n.options[t];if(a.__value===e){a.selected=!0;return}}n.selectedIndex=-1}function xn(n){let e=n.querySelector(":checked")||n.options[0];return e&&e.__value}function Ae(n,e,t){n.classList[t?"add":"remove"](e)}function Xl(n,e,t=!1){let a=document.createEvent("CustomEvent");return a.initCustomEvent(n,t,!1,e),a}var qr=new Map,Rr=0;function g2(n){let e=5381,t=n.length;for(;t--;)e=(e<<5)-e^n.charCodeAt(t);return e>>>0}function y2(n,e){let t={stylesheet:p2(e),rules:{}};return qr.set(n,t),t}function co(n,e,t,a,r,o,i,l=0){let s=16.666/a,d=`{
`;for(let y=0;y<=1;y+=s){let A=e+(t-e)*o(y);d+=y*100+`%{${i(A,1-A)}}
`}let u=d+`100% {${i(t,1-t)}}
}`,c=`__svelte_${g2(u)}_${l}`,h=uo(n),{stylesheet:m,rules:p}=qr.get(h)||y2(h,n);p[c]||(p[c]=!0,m.insertRule(`@keyframes ${c} ${u}`,m.cssRules.length));let D=n.style.animation||"";return n.style.animation=`${D?`${D}, `:""}${c} ${a}ms linear ${r}ms 1 both`,Rr+=1,c}function Jl(n,e){let t=(n.style.animation||"").split(", "),a=t.filter(e?o=>o.indexOf(e)<0:o=>o.indexOf("__svelte")===-1),r=t.length-a.length;r&&(n.style.animation=a.join(", "),Rr-=r,Rr||v2())}function v2(){lo(()=>{Rr||(qr.forEach(n=>{let{stylesheet:e}=n,t=e.cssRules.length;for(;t--;)e.deleteRule(t);n.rules={}}),qr.clear())})}function Zt(n,e,t,a){if(!e)return U;let r=n.getBoundingClientRect();if(e.left===r.left&&e.right===r.right&&e.top===r.top&&e.bottom===r.bottom)return U;let{delay:o=0,duration:i=300,easing:l=Or,start:s=Yl()+o,end:d=s+i,tick:u=U,css:c}=t(n,{from:e,to:r},a),h=!0,m=!1,p;function D(){c&&(p=co(n,0,1,i,o,l,c)),o||(m=!0)}function y(){c&&Jl(n,p),h=!1}return $l(A=>{if(!m&&A>=s&&(m=!0),m&&A>=d&&(u(1,0),y()),!h)return!1;if(m){let _=A-s,C=0+1*l(_/i);u(C,1-C)}return!0}),D(),u(0,1),y}function $t(n){let e=getComputedStyle(n);if(e.position!=="absolute"&&e.position!=="fixed"){let{width:t,height:a}=e,r=n.getBoundingClientRect();n.style.position="absolute",n.style.width=t,n.style.height=a,b2(n,r)}}function b2(n,e){let t=n.getBoundingClientRect();if(e.left!==t.left||e.top!==t.top){let a=getComputedStyle(n),r=a.transform==="none"?"":a.transform;n.style.transform=`${r} translate(${e.left-t.left}px, ${e.top-t.top}px)`}}var Wa;function Ga(n){Wa=n}function Ua(){if(!Wa)throw new Error("Function called outside component initialization");return Wa}function Gn(n){Ua().$$.on_mount.push(n)}function fo(n){Ua().$$.on_destroy.push(n)}function ye(){let n=Ua();return(e,t)=>{let a=n.$$.callbacks[e];if(a){let r=Xl(e,t);a.slice().forEach(o=>{o.call(n,r)})}}}function za(n,e){Ua().$$.context.set(n,e)}function Ft(n){return Ua().$$.context.get(n)}function ve(n,e){let t=n.$$.callbacks[e.type];t&&t.slice().forEach(a=>a.call(this,e))}var Ya=[];var Fn=[],Lr=[],eu=[],tu=Promise.resolve(),ho=!1;function nu(){ho||(ho=!0,tu.then(au))}function Un(){return nu(),tu}function qt(n){Lr.push(n)}var po=new Set,Pr=0;function au(){let n=Wa;do{for(;Pr<Ya.length;){let e=Ya[Pr];Pr++,Ga(e),w2(e.$$)}for(Ga(null),Ya.length=0,Pr=0;Fn.length;)Fn.pop()();for(let e=0;e<Lr.length;e+=1){let t=Lr[e];po.has(t)||(po.add(t),t())}Lr.length=0}while(Ya.length);for(;eu.length;)eu.pop()();ho=!1,po.clear(),Ga(n)}function w2(n){if(n.fragment!==null){n.update(),de(n.before_update);let e=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,e),n.after_update.forEach(qt)}}var Za;function D2(){return Za||(Za=Promise.resolve(),Za.then(()=>{Za=null})),Za}function mo(n,e,t){n.dispatchEvent(Xl(`${e?"intro":"outro"}${t}`))}var jr=new Set,vn;function _e(){vn={r:0,c:[],p:vn}}function Ee(){vn.r||de(vn.c),vn=vn.p}function T(n,e){n&&n.i&&(jr.delete(n),n.i(e))}function R(n,e,t,a){if(n&&n.o){if(jr.has(n))return;jr.add(n),vn.c.push(()=>{jr.delete(n),a&&(t&&n.d(1),a())}),n.o(e)}}var _2={duration:0};function go(n,e,t,a){let r=e(n,t),o=a?0:1,i=null,l=null,s=null;function d(){s&&Jl(n,s)}function u(h,m){let p=h.b-o;return m*=Math.abs(p),{a:o,b:h.b,d:p,duration:m,start:h.start,end:h.start+m,group:h.group}}function c(h){let{delay:m=0,duration:p=300,easing:D=Or,tick:y=U,css:A}=r||_2,_={start:Yl()+m,b:h};h||(_.group=vn,vn.r+=1),i||l?l=_:(A&&(d(),s=co(n,o,h,p,m,D,A)),h&&y(0,1),i=u(_,p),qt(()=>mo(n,h,"start")),$l(C=>{if(l&&C>l.start&&(i=u(l,p),l=null,mo(n,i.b,"start"),A&&(d(),s=co(n,o,i.b,i.duration,0,D,r.css))),i){if(C>=i.end)y(o=i.b,1-o),mo(n,i.b,"end"),l||(i.b?d():--i.group.r||de(i.group.c)),i=null;else if(C>=i.start){let B=C-i.start;o=i.a+i.d*D(B/i.duration),y(o,1-o)}}return!!(i||l)}))}return{run(h){Ve(r)?D2().then(()=>{r=r(),c(h)}):c(h)},end(){d(),i=l=null}}}var vw=typeof window!="undefined"?window:typeof globalThis!="undefined"?globalThis:global;function E2(n,e){n.d(1),e.delete(n.key)}function C2(n,e){R(n,1,1,()=>{e.delete(n.key)})}function Tn(n,e){n.f(),E2(n,e)}function Vr(n,e){n.f(),C2(n,e)}function Kt(n,e,t,a,r,o,i,l,s,d,u,c){let h=n.length,m=o.length,p=h,D={};for(;p--;)D[n[p].key]=p;let y=[],A=new Map,_=new Map;for(p=m;p--;){let L=c(r,o,p),N=t(L),j=i.get(N);j?a&&j.p(L,e):(j=d(N,L),j.c()),A.set(N,y[p]=j),N in D&&_.set(N,Math.abs(p-D[N]))}let C=new Set,B=new Set;function z(L){T(L,1),L.m(l,u),i.set(L.key,L),u=L.first,m--}for(;h&&m;){let L=y[m-1],N=n[h-1],j=L.key,F=N.key;L===N?(u=L.first,h--,m--):A.has(F)?!i.has(j)||C.has(j)?z(L):B.has(F)?h--:_.get(j)>_.get(F)?(B.add(j),z(L)):(C.add(F),h--):(s(N,i),h--)}for(;h--;){let L=n[h];A.has(L.key)||s(L,i)}for(;m;)z(y[m-1]);return y}var bw=new Set(["allowfullscreen","allowpaymentrequest","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","hidden","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected"]);function te(n){n&&n.c()}function X(n,e,t,a){let{fragment:r,on_mount:o,on_destroy:i,after_update:l}=n.$$;r&&r.m(e,t),a||qt(()=>{let s=o.map(oo).filter(Ve);i?i.push(...s):de(s),n.$$.on_mount=[]}),l.forEach(qt)}function Q(n,e){let t=n.$$;t.fragment!==null&&(de(t.on_destroy),t.fragment&&t.fragment.d(e),t.on_destroy=t.fragment=null,t.ctx=[])}function A2(n,e){n.$$.dirty[0]===-1&&(Ya.push(n),nu(),n.$$.dirty.fill(0)),n.$$.dirty[e/31|0]|=1<<e%31}function oe(n,e,t,a,r,o,i,l=[-1]){let s=Wa;Ga(n);let d=n.$$={fragment:null,ctx:null,props:o,update:U,not_equal:r,bound:Wl(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(s?s.$$.context:[])),callbacks:Wl(),dirty:l,skip_bound:!1,root:e.target||s.$$.root};i&&i(d.root);let u=!1;if(d.ctx=t?t(n,e.props||{},(c,h,...m)=>{let p=m.length?m[0]:h;return d.ctx&&r(d.ctx[c],d.ctx[c]=p)&&(!d.skip_bound&&d.bound[c]&&d.bound[c](p),u&&A2(n,c)),h}):[],d.update(),u=!0,de(d.before_update),d.fragment=a?a(d.ctx):!1,e.target){if(e.hydrate){f2();let c=m2(e.target);d.fragment&&d.fragment.l(c),c.forEach(O)}else d.fragment&&d.fragment.c();e.intro&&T(n.$$.fragment),X(n,e.target,e.anchor,e.customElement),h2(),au()}Ga(s)}var k2;typeof HTMLElement=="function"&&(k2=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}connectedCallback(){let{on_mount:n}=this.$$;this.$$.on_disconnect=n.map(oo).filter(Ve);for(let e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(n,e,t){this[n]=t}disconnectedCallback(){de(this.$$.on_disconnect)}$destroy(){Q(this,1),this.$destroy=U}$on(n,e){let t=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return t.push(e),()=>{let a=t.indexOf(e);a!==-1&&t.splice(a,1)}}$set(n){this.$$set&&!Gl(n)&&(this.$$.skip_bound=!0,this.$$set(n),this.$$.skip_bound=!1)}});var ie=class{$destroy(){Q(this,1),this.$destroy=U}$on(e,t){let a=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return a.push(t),()=>{let r=a.indexOf(t);r!==-1&&a.splice(r,1)}}$set(e){this.$$set&&!Gl(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}};var Uc=Te(Er()),On=Te(require("obsidian"));function Hr(n){let e=n-1;return e*e*e+1}function yo(n,{delay:e=0,duration:t=400,easing:a=Hr,x:r=0,y:o=0,opacity:i=0}={}){let l=getComputedStyle(n),s=+l.opacity,d=l.transform==="none"?"":l.transform,u=s*(1-i);return{delay:e,duration:t,easing:a,css:(c,h)=>`
			transform: ${d} translate(${(1-c)*r}px, ${(1-c)*o}px);
			opacity: ${s-u*h}`}}var ru=Te(require("obsidian"));function x2(n){se(n,"svelte-1x6uecm",'summary.svelte-1x6uecm.svelte-1x6uecm{outline:none;display:block !important;list-style:none !important;list-style-type:none !important;min-height:1rem;border-top-left-radius:0.1rem;border-top-right-radius:0.1rem;cursor:pointer;position:relative}summary.svelte-1x6uecm.svelte-1x6uecm::-webkit-details-marker,summary.svelte-1x6uecm.svelte-1x6uecm::marker{display:none !important}.collapser.svelte-1x6uecm.svelte-1x6uecm{position:absolute;top:50%;right:8px;transform:translateY(-50%);content:""}.handle.svelte-1x6uecm.svelte-1x6uecm{transform:rotate(0deg);transition:transform 0.25s;background-color:currentColor;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;-webkit-mask-image:var(--admonition-details-icon);mask-image:var(--admonition-details-icon);width:20px;height:20px}details[open].svelte-1x6uecm .handle.svelte-1x6uecm{transform:rotate(90deg)}')}function F2(n){let e,t,a,r,o,i,l,s,d,u,c,h=n[5].default,m=Pa(h,n,n[4],null);return{c(){e=E("details"),t=E("summary"),a=E("div"),o=P(),i=E("div"),i.innerHTML='<div class="handle svelte-1x6uecm"></div>',l=P(),m&&m.c(),b(i,"class","collapser svelte-1x6uecm"),b(t,"class","svelte-1x6uecm"),b(e,"class","fantasy-calendar-nested-settings svelte-1x6uecm")},m(p,D){q(p,e,D),w(e,t),w(t,a),w(t,o),w(t,i),w(e,l),m&&m.m(e,null),d=!0,u||(c=[ae(r=n[1].call(null,a)),ae(s=n[0].call(null,e))],u=!0)},p(p,[D]){m&&m.p&&(!d||D&16)&&Va(m,h,p,p[4],d?ja(h,p[4],D,null):Ha(p[4]),null)},i(p){d||(T(m,p),d=!0)},o(p){R(m,p),d=!1},d(p){p&&O(e),m&&m.d(p),u=!1,de(c)}}}function T2(n,e,t){let{$$slots:a={},$$scope:r}=e,{open:o=!0}=e,{name:i}=e,l=d=>{o&&d.setAttr("open","open")},s=d=>{new ru.Setting(d).setHeading().setName(i)};return n.$$set=d=>{"open"in d&&t(2,o=d.open),"name"in d&&t(3,i=d.name),"$$scope"in d&&t(4,r=d.$$scope)},[l,s,o,i,r,a]}var iu=class extends ie{constructor(e){super();oe(this,e,T2,F2,ee,{open:2,name:3},x2)}},mn=iu;var $a=Te(require("obsidian"));function S2(n){se(n,"svelte-qonio8",".fantasy-calendar-date-field-container.svelte-qonio8{display:flex;gap:1rem;border:0}.fantasy-calendar-date-field.svelte-qonio8{display:flex;flex-flow:column nowrap;flex:1 1 0}")}function B2(n){let e,t,a,r,o,i,l,s,d,u,c;return{c(){e=E("div"),t=E("div"),r=P(),o=E("div"),l=P(),s=E("div"),b(t,"class","fantasy-calendar-date-field svelte-qonio8"),b(o,"class","fantasy-calendar-date-field svelte-qonio8"),b(s,"class","fantasy-calendar-date-field svelte-qonio8"),b(e,"class","fantasy-calendar-date-field-container setting-item svelte-qonio8")},m(h,m){q(h,e,m),w(e,t),w(e,r),w(e,o),w(e,l),w(e,s),u||(c=[ae(a=n[0].call(null,t)),ae(i=n[1].call(null,o)),ae(d=n[2].call(null,s))],u=!0)},p:U,i:U,o:U,d(h){h&&O(e),u=!1,de(c)}}}function N2(n,e,t){let a,{calendar:r}=e,o=s=>{let d=s.createEl("label",{text:"Day"});new $a.TextComponent(s).setPlaceholder("Day")},i=s=>{let d=s.createEl("label",{text:"Month"});new $a.DropdownComponent(s)},l=s=>{let d=s.createEl("label",{text:"Year"});new $a.TextComponent(s).setPlaceholder("Year")};return n.$$set=s=>{"calendar"in s&&t(3,r=s.calendar)},n.$$.update=()=>{if(n.$$.dirty&8){e:a=r.current}},[o,i,l,r]}var ou=class extends ie{constructor(e){super();oe(this,e,N2,B2,ee,{calendar:3},S2)}},su=ou;function M2(n){se(n,"svelte-1ezzfh1",".text-area-component.svelte-1ezzfh1{display:flex;flex-flow:column nowrap;align-items:flex-start;width:100%}textarea.svelte-1ezzfh1{width:100%}")}function I2(n){let e,t,a,r,o,i,l;return{c(){e=E("div"),t=E("label"),a=me(n[1]),r=P(),o=E("textarea"),b(o,"spellcheck","false"),b(o,"placeholder",n[2]),b(o,"class","svelte-1ezzfh1"),b(e,"class","text-area-component setting-item svelte-1ezzfh1"),Ae(e,"cls",n[3])},m(s,d){q(s,e,d),w(e,t),w(t,a),w(e,r),w(e,o),Ct(o,n[0]),i||(l=[Y(o,"input",n[5]),Y(o,"blur",n[6])],i=!0)},p(s,[d]){d&2&&De(a,s[1]),d&4&&b(o,"placeholder",s[2]),d&1&&Ct(o,s[0]),d&8&&Ae(e,"cls",s[3])},i:U,o:U,d(s){s&&O(e),i=!1,de(l)}}}function O2(n,e,t){let a=ye(),{value:r}=e,{name:o}=e,{placeholder:i=o}=e,{cls:l=""}=e;function s(){r=this.value,t(0,r)}let d=()=>a("blur",r);return n.$$set=u=>{"value"in u&&t(0,r=u.value),"name"in u&&t(1,o=u.name),"placeholder"in u&&t(2,i=u.placeholder),"cls"in u&&t(3,l=u.cls)},[r,o,i,l,a,s,d]}var lu=class extends ie{constructor(e){super();oe(this,e,O2,I2,ee,{value:0,name:1,placeholder:2,cls:3},M2)}},uu=lu;function q2(n){let e,t,a,r,o,i,l,s,d,u,c,h;return{c(){e=E("div"),t=E("div"),a=E("div"),r=me(n[1]),o=P(),i=E("div"),l=me(n[2]),s=P(),d=E("div"),u=E("input"),b(a,"class","setting-item-name"),b(i,"class","setting-item-description"),b(t,"class","setting-item-info"),b(u,"type","text"),b(u,"spellcheck","false"),b(u,"placeholder",n[3]),b(d,"class","setting-item-control"),b(e,"class","setting-item")},m(m,p){q(m,e,p),w(e,t),w(t,a),w(a,r),w(t,o),w(t,i),w(i,l),w(e,s),w(e,d),w(d,u),Ct(u,n[0]),c||(h=[Y(u,"input",n[5]),Y(u,"blur",n[6])],c=!0)},p(m,[p]){p&2&&De(r,m[1]),p&4&&De(l,m[2]),p&8&&b(u,"placeholder",m[3]),p&1&&u.value!==m[0]&&Ct(u,m[0])},i:U,o:U,d(m){m&&O(e),c=!1,de(h)}}}function R2(n,e,t){let a=ye(),{value:r}=e,{name:o}=e,{desc:i=""}=e,{placeholder:l=o}=e;function s(){r=this.value,t(0,r)}let d=()=>{a("blur",r)};return n.$$set=u=>{"value"in u&&t(0,r=u.value),"name"in u&&t(1,o=u.name),"desc"in u&&t(2,i=u.desc),"placeholder"in u&&t(3,l=u.placeholder)},[r,o,i,l,a,s,d]}var cu=class extends ie{constructor(e){super();oe(this,e,R2,q2,ee,{value:0,name:1,desc:2,placeholder:3})}},du=cu;function fu(n){let e;function t(o,i){return typeof o[1]=="string"?P2:L2}let a=t(n,-1),r=a(n);return{c(){r.c(),e=qe()},m(o,i){r.m(o,i),q(o,e,i)},p(o,i){a===(a=t(o,i))&&r?r.p(o,i):(r.d(1),r=a(o),r&&(r.c(),r.m(e.parentNode,e)))},d(o){r.d(o),o&&O(e)}}}function L2(n){let e,t,a,r;return{c(){e=E("div"),b(e,"class","setting-item-description")},m(o,i){q(o,e,i),a||(r=ae(t=n[3].call(null,e)),a=!0)},p:U,d(o){o&&O(e),a=!1,r()}}}function P2(n){let e,t;return{c(){e=E("div"),t=me(n[1]),b(e,"class","setting-item-description")},m(a,r){q(a,e,r),w(e,t)},p(a,r){r&2&&De(t,a[1])},d(a){a&&O(e)}}}function j2(n){let e,t,a,r,o,i,l,s,d,u,c=n[1]&&fu(n);return{c(){e=E("div"),t=E("div"),a=E("div"),r=me(n[0]),o=P(),c&&c.c(),i=P(),l=E("div"),s=E("div"),b(a,"class","setting-item-name"),b(t,"class","setting-item-info"),b(s,"class","checkbox-container"),Ae(s,"is-enabled",n[2]),b(l,"class","setting-item-control"),b(e,"class","setting-item mod-toggle")},m(h,m){q(h,e,m),w(e,t),w(t,a),w(a,r),w(t,o),c&&c.m(t,null),w(e,i),w(e,l),w(l,s),d||(u=Y(s,"click",n[4]),d=!0)},p(h,[m]){m&1&&De(r,h[0]),h[1]?c?c.p(h,m):(c=fu(h),c.c(),c.m(t,null)):c&&(c.d(1),c=null),m&4&&Ae(s,"is-enabled",h[2])},i:U,o:U,d(h){h&&O(e),c&&c.d(),d=!1,u()}}}function V2(n,e,t){let{name:a}=e,{desc:r}=e,{value:o}=e,i=s=>{s.append(r)};function l(s){ve.call(this,n,s)}return n.$$set=s=>{"name"in s&&t(0,a=s.name),"desc"in s&&t(1,r=s.desc),"value"in s&&t(2,o=s.value)},[a,r,o,i,l]}var hu=class extends ie{constructor(e){super();oe(this,e,V2,j2,ee,{name:0,desc:1,value:2})}},bn=hu;function H2(n){se(n,"svelte-1uda69j",".fantasy-calendar-info.svelte-1uda69j .setting-item{padding-top:18px}.fantasy-calendar-info.svelte-1uda69j .fantasy-calendar-description{display:flex;flex-flow:column;align-items:flex-start}.fantasy-calendar-info.svelte-1uda69j .fantasy-calendar-description textarea{width:100%}")}function W2(n){let e,t,a,r,o,i,l,s,d;return t=new du({props:{name:"Calendar Name",value:n[0].name}}),t.$on("blur",n[3]),r=new uu({props:{name:"Calendar Description",value:n[0].description}}),r.$on("blur",n[4]),i=new bn({props:{name:"Display Day Number",desc:"Display day of year in Day View",value:n[2]}}),i.$on("click",n[5]),s=new bn({props:{name:"Auto Increment Day",desc:"Automatically increment the current day every real-world day.",value:n[1]}}),s.$on("click",n[6]),{c(){e=E("div"),te(t.$$.fragment),a=P(),te(r.$$.fragment),o=P(),te(i.$$.fragment),l=P(),te(s.$$.fragment),b(e,"class","fantasy-calendar-info svelte-1uda69j")},m(u,c){q(u,e,c),X(t,e,null),w(e,a),X(r,e,null),w(e,o),X(i,e,null),w(e,l),X(s,e,null),d=!0},p(u,[c]){let h={};c&1&&(h.value=u[0].name),t.$set(h);let m={};c&1&&(m.value=u[0].description),r.$set(m);let p={};c&4&&(p.value=u[2]),i.$set(p);let D={};c&2&&(D.value=u[1]),s.$set(D)},i(u){d||(T(t.$$.fragment,u),T(r.$$.fragment,u),T(i.$$.fragment,u),T(s.$$.fragment,u),d=!0)},o(u){R(t.$$.fragment,u),R(r.$$.fragment,u),R(i.$$.fragment,u),R(s.$$.fragment,u),d=!1},d(u){u&&O(e),Q(t),Q(r),Q(i),Q(s)}}}function G2(n,e,t){let a,r,{calendar:o}=e,i=u=>t(0,o.name=u.detail,o),l=u=>t(0,o.description=u.detail,o),s=()=>{t(0,o.static.displayDayNumber=!o.static.displayDayNumber,o)},d=()=>{t(0,o.static.incrementDay=!o.static.incrementDay,o)};return n.$$set=u=>{"calendar"in u&&t(0,o=u.calendar)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(2,a=o.static.displayDayNumber)}if(n.$$.dirty&1){e:t(1,r=o.static.incrementDay)}},[o,r,a,i,l,s,d]}var pu=class extends ie{constructor(e){super();oe(this,e,G2,W2,ee,{calendar:0},H2)}},mu=pu;function Qt(n,{from:e,to:t},a={}){let r=getComputedStyle(n),o=r.transform==="none"?"":r.transform,[i,l]=r.transformOrigin.split(" ").map(parseFloat),s=e.left+e.width*i/t.width-(t.left+i),d=e.top+e.height*l/t.height-(t.top+l),{delay:u=0,duration:c=m=>Math.sqrt(m)*120,easing:h=Hr}=a;return{delay:u,duration:Ve(c)?c(Math.sqrt(s*s+d*d)):c,easing:h,css:(m,p)=>{let D=p*s,y=p*d,A=m+p*e.width/t.width,_=m+p*e.height/t.height;return`transform: ${o} translate(${D}px, ${y}px) scale(${A}, ${_});`}}}function Ka(n){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Ka=function(e){return typeof e}:Ka=function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ka(n)}function Qa(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function gu(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter(function(r){return Object.getOwnPropertyDescriptor(n,r).enumerable})),t.push.apply(t,a)}return t}function zn(n){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?gu(Object(t),!0).forEach(function(a){Qa(n,a,t[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):gu(Object(t)).forEach(function(a){Object.defineProperty(n,a,Object.getOwnPropertyDescriptor(t,a))})}return n}function U2(n,e){if(n==null)return{};var t={},a=Object.keys(n),r,o;for(o=0;o<a.length;o++)r=a[o],!(e.indexOf(r)>=0)&&(t[r]=n[r]);return t}function z2(n,e){if(n==null)return{};var t=U2(n,e),a,r;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)a=o[r],!(e.indexOf(a)>=0)&&(!Object.prototype.propertyIsEnumerable.call(n,a)||(t[a]=n[a]))}return t}function Y2(n,e){return $2(n)||Q2(n,e)||vo(n,e)||J2()}function Wr(n){return Z2(n)||K2(n)||vo(n)||X2()}function Z2(n){if(Array.isArray(n))return bo(n)}function $2(n){if(Array.isArray(n))return n}function K2(n){if(typeof Symbol!="undefined"&&Symbol.iterator in Object(n))return Array.from(n)}function Q2(n,e){if(!(typeof Symbol=="undefined"||!(Symbol.iterator in Object(n)))){var t=[],a=!0,r=!1,o=void 0;try{for(var i=n[Symbol.iterator](),l;!(a=(l=i.next()).done)&&(t.push(l.value),!(e&&t.length===e));a=!0);}catch(s){r=!0,o=s}finally{try{!a&&i.return!=null&&i.return()}finally{if(r)throw o}}return t}}function vo(n,e){if(!!n){if(typeof n=="string")return bo(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);if(t==="Object"&&n.constructor&&(t=n.constructor.name),t==="Map"||t==="Set")return Array.from(n);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return bo(n,e)}}function bo(n,e){(e==null||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function X2(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function J2(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function wo(n,e){var t;if(typeof Symbol=="undefined"||n[Symbol.iterator]==null){if(Array.isArray(n)||(t=vo(n))||e&&n&&typeof n.length=="number"){t&&(n=t);var a=0,r=function(){};return{s:r,n:function(){return a>=n.length?{done:!0}:{done:!1,value:n[a++]}},e:function(s){throw s},f:r}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var o=!0,i=!1,l;return{s:function(){t=n[Symbol.iterator]()},n:function(){var s=t.next();return o=s.done,s},e:function(s){i=!0,l=s},f:function(){try{!o&&t.return!=null&&t.return()}finally{if(i)throw l}}}}var ey="finalize",ty="consider";function pa(n,e,t){n.dispatchEvent(new CustomEvent(ey,{detail:{items:e,info:t}}))}function Sn(n,e,t){n.dispatchEvent(new CustomEvent(ty,{detail:{items:e,info:t}}))}var Gr="draggedEntered",Xa="draggedLeft",Ur="draggedOverIndex",Do="draggedLeftDocument",zr={LEFT_FOR_ANOTHER:"leftForAnother",OUTSIDE_OF_ANY:"outsideOfAny"};function ny(n,e,t){n.dispatchEvent(new CustomEvent(Gr,{detail:{indexObj:e,draggedEl:t}}))}function ay(n,e,t){n.dispatchEvent(new CustomEvent(Xa,{detail:{draggedEl:e,type:zr.LEFT_FOR_ANOTHER,theOtherDz:t}}))}function ry(n,e){n.dispatchEvent(new CustomEvent(Xa,{detail:{draggedEl:e,type:zr.OUTSIDE_OF_ANY}}))}function iy(n,e,t){n.dispatchEvent(new CustomEvent(Ur,{detail:{indexObj:e,draggedEl:t}}))}function oy(n){window.dispatchEvent(new CustomEvent(Do,{detail:{draggedEl:n}}))}var Qe={DRAG_STARTED:"dragStarted",DRAGGED_ENTERED:Gr,DRAGGED_ENTERED_ANOTHER:"dragEnteredAnother",DRAGGED_OVER_INDEX:Ur,DRAGGED_LEFT:Xa,DRAGGED_LEFT_ALL:"draggedLeftAll",DROPPED_INTO_ZONE:"droppedIntoZone",DROPPED_INTO_ANOTHER:"droppedIntoAnother",DROPPED_OUTSIDE_OF_ANY:"droppedOutsideOfAny",DRAG_STOPPED:"dragStopped"},Ue={POINTER:"pointer",KEYBOARD:"keyboard"},Yr="isDndShadowItem",_o="data-is-dnd-shadow-item",Eo="id:dnd-shadow-placeholder-0000",sy="dnd-action-dragged-el",pt="id",Co=0;function yu(){Co++}function vu(){if(Co===0)throw new Error("Bug! trying to decrement when there are no dropzones");Co--}var ly=typeof window=="undefined",Ne=function(){};function bu(n){var e,t=n.getBoundingClientRect(),a=getComputedStyle(n),r=a.transform;if(r){var o,i,l,s;if(r.startsWith("matrix3d("))e=r.slice(9,-1).split(/, /),o=+e[0],i=+e[5],l=+e[12],s=+e[13];else if(r.startsWith("matrix("))e=r.slice(7,-1).split(/, /),o=+e[0],i=+e[3],l=+e[4],s=+e[5];else return t;var d=a.transformOrigin,u=t.x-l-(1-o)*parseFloat(d),c=t.y-s-(1-i)*parseFloat(d.slice(d.indexOf(" ")+1)),h=o?t.width/o:n.offsetWidth,m=i?t.height/i:n.offsetHeight;return{x:u,y:c,width:h,height:m,top:c,right:u+h,bottom:c+m,left:u}}else return t}function wu(n){var e=bu(n);return{top:e.top+window.scrollY,bottom:e.bottom+window.scrollY,left:e.left+window.scrollX,right:e.right+window.scrollX}}function Ao(n){var e=n.getBoundingClientRect();return{top:e.top+window.scrollY,bottom:e.bottom+window.scrollY,left:e.left+window.scrollX,right:e.right+window.scrollX}}function Du(n){return{x:(n.left+n.right)/2,y:(n.top+n.bottom)/2}}function uy(n,e){return Math.sqrt(Math.pow(n.x-e.x,2)+Math.pow(n.y-e.y,2))}function ko(n,e){return n.y<=e.bottom&&n.y>=e.top&&n.x>=e.left&&n.x<=e.right}function Ja(n){return Du(Ao(n))}function _u(n,e){var t=Ja(n),a=wu(e);return ko(t,a)}function cy(n,e){var t=Ja(n),a=Ja(e);return uy(t,a)}function dy(n){var e=Ao(n);return e.right<0||e.left>document.documentElement.scrollWidth||e.bottom<0||e.top>document.documentElement.scrollHeight}function fy(n,e){var t=Ao(e);return ko(n,t)?{top:n.y-t.top,bottom:t.bottom-n.y,left:n.x-t.left,right:Math.min(t.right,document.documentElement.clientWidth)-n.x}:null}var ma;function Eu(){Ne(function(){return"resetting indexes cache"}),ma=new Map}Eu();function hy(n){var e=Array.from(n.children).findIndex(function(t){return t.getAttribute(_o)});if(e>=0)return ma.has(n)||ma.set(n,new Map),ma.get(n).set(e,wu(n.children[e])),e}function py(n,e){if(!_u(n,e))return null;var t=e.children;if(t.length===0)return{index:0,isProximityBased:!0};for(var a=hy(e),r=0;r<t.length;r++)if(_u(n,t[r])){var o=ma.has(e)&&ma.get(e).get(r);return o&&!ko(Ja(n),o)?{index:a,isProximityBased:!1}:{index:r,isProximityBased:!1}}for(var i=Number.MAX_VALUE,l=void 0,s=0;s<t.length;s++){var d=cy(n,t[s]);d<i&&(i=d,l=s)}return{index:l,isProximityBased:!0}}var er=25;function Cu(){var n;function e(){n={directionObj:void 0,stepPx:0}}e();function t(o){var i=n,l=i.directionObj,s=i.stepPx;l&&(o.scrollBy(l.x*s,l.y*s),window.requestAnimationFrame(function(){return t(o)}))}function a(o){return er-o}function r(o,i){if(!i)return!1;var l=fy(o,i);if(l===null)return e(),!1;var s=!!n.directionObj,d=!1,u=!1;return i.scrollHeight>i.clientHeight&&(l.bottom<er?(d=!0,n.directionObj={x:0,y:1},n.stepPx=a(l.bottom)):l.top<er&&(d=!0,n.directionObj={x:0,y:-1},n.stepPx=a(l.top)),!s&&d)||i.scrollWidth>i.clientWidth&&(l.right<er?(u=!0,n.directionObj={x:1,y:0},n.stepPx=a(l.right)):l.left<er&&(u=!0,n.directionObj={x:-1,y:0},n.stepPx=a(l.left)),!s&&u)?(t(i),!0):(e(),!1)}return{scrollIfNeeded:r,resetScrolling:e}}function wn(n){return JSON.stringify(n,null,2)}function Au(n){if(!n)throw new Error("cannot get depth of a falsy node");return ku(n,0)}function ku(n){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return n.parentElement?ku(n.parentElement,e+1):e-1}function my(n,e){if(Object.keys(n).length!==Object.keys(e).length)return!1;for(var t in n)if(!{}.hasOwnProperty.call(e,t)||e[t]!==n[t])return!1;return!0}function gy(n,e){if(n.length!==e.length)return!1;for(var t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}var yy=200,xu=10,Fu=Cu(),vy=Fu.scrollIfNeeded,by=Fu.resetScrolling,xo;function wy(n,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:yy,a,r,o=!1,i,l=Array.from(e).sort(function(d,u){return Au(u)-Au(d)});function s(){var d=Ja(n),u=vy(d,a);if(!u&&i&&Math.abs(i.x-d.x)<xu&&Math.abs(i.y-d.y)<xu){xo=window.setTimeout(s,t);return}if(dy(n)){Ne(function(){return"off document"}),oy(n);return}i=d;var c=!1,h=wo(l),m;try{for(h.s();!(m=h.n()).done;){var p=m.value,D=py(n,p);if(D!==null){var y=D.index;c=!0,p!==a?(a&&ay(a,n,p),ny(p,D,n),a=p):y!==r&&(iy(p,D,n),r=y);break}}}catch(A){h.e(A)}finally{h.f()}!c&&o&&a?(ry(a,n),a=void 0,r=void 0,o=!1):o=!0,xo=window.setTimeout(s,t)}s()}function Dy(){Ne(function(){return"unobserving"}),clearTimeout(xo),by(),Eu()}var _y=300,Zr;function $r(n){var e=n.touches?n.touches[0]:n;Zr={x:e.clientX,y:e.clientY}}var Tu=Cu(),Ey=Tu.scrollIfNeeded,Cy=Tu.resetScrolling,Su;function Bu(){Zr&&Ey(Zr,document.documentElement),Su=window.setTimeout(Bu,_y)}function Ay(){Ne(function(){return"arming window scroller"}),window.addEventListener("mousemove",$r),window.addEventListener("touchmove",$r),Bu()}function ky(){Ne(function(){return"disarming window scroller"}),window.removeEventListener("mousemove",$r),window.removeEventListener("touchmove",$r),Zr=void 0,window.clearTimeout(Su),Cy()}var xy=.2;function Yn(n){return"".concat(n," ").concat(xy,"s ease")}function Fy(n,e){var t=n.getBoundingClientRect(),a=n.cloneNode(!0);Nu(n,a),a.id=sy,a.style.position="fixed";var r=t.top,o=t.left;if(a.style.top="".concat(r,"px"),a.style.left="".concat(o,"px"),e){var i=Du(t);r-=i.y-e.y,o-=i.x-e.x,window.setTimeout(function(){a.style.top="".concat(r,"px"),a.style.left="".concat(o,"px")},0)}return a.style.margin="0",a.style.boxSizing="border-box",a.style.height="".concat(t.height,"px"),a.style.width="".concat(t.width,"px"),a.style.transition="".concat(Yn("top"),", ").concat(Yn("left"),", ").concat(Yn("background-color"),", ").concat(Yn("opacity"),", ").concat(Yn("color")," "),window.setTimeout(function(){return a.style.transition+=", ".concat(Yn("width"),", ").concat(Yn("height"))},0),a.style.zIndex="9999",a.style.cursor="grabbing",a}function Ty(n){n.style.cursor="grab"}function Sy(n,e,t,a,r){var o=e.getBoundingClientRect(),i=n.getBoundingClientRect(),l=o.width-i.width,s=o.height-i.height;if(l||s){var d={left:(t-i.left)/i.width,top:(a-i.top)/i.height};n.style.height="".concat(o.height,"px"),n.style.width="".concat(o.width,"px"),n.style.left="".concat(parseFloat(n.style.left)-d.left*l,"px"),n.style.top="".concat(parseFloat(n.style.top)-d.top*s,"px")}Nu(e,n),r()}function Nu(n,e){var t=window.getComputedStyle(n);Array.from(t).filter(function(a){return a.startsWith("background")||a.startsWith("padding")||a.startsWith("font")||a.startsWith("text")||a.startsWith("align")||a.startsWith("justify")||a.startsWith("display")||a.startsWith("flex")||a.startsWith("border")||a==="opacity"||a==="color"||a==="list-style-type"}).forEach(function(a){return e.style.setProperty(a,t.getPropertyValue(a),t.getPropertyPriority(a))})}function By(n,e){n.draggable=!1,n.ondragstart=function(){return!1},e?(n.style.userSelect="",n.style.WebkitUserSelect="",n.style.cursor=""):(n.style.userSelect="none",n.style.WebkitUserSelect="none",n.style.cursor="grab")}function Ny(n){n.style.display="none",n.style.position="fixed",n.style.zIndex="-5"}function My(n){n.style.visibility="hidden",n.setAttribute(_o,"true")}function Iy(n){n.style.visibility="",n.removeAttribute(_o)}function Kr(n){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){},t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:function(){return[]};n.forEach(function(a){var r=e(a);Object.keys(r).forEach(function(o){a.style[o]=r[o]}),t(a).forEach(function(o){return a.classList.add(o)})})}function Qr(n){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){},t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:function(){return[]};n.forEach(function(a){var r=e(a);Object.keys(r).forEach(function(o){a.style[o]=""}),t(a).forEach(function(o){return a.classList.contains(o)&&a.classList.remove(o)})})}function Oy(n){var e=n.style.minHeight;n.style.minHeight=window.getComputedStyle(n).getPropertyValue("height");var t=n.style.minWidth;return n.style.minWidth=window.getComputedStyle(n).getPropertyValue("width"),function(){n.style.minHeight=e,n.style.minWidth=t}}var qy="--any--",Ry=100,Mu=3,Iu={outline:"rgba(255, 255, 102, 0.7) solid 2px"},gn,wt,Wt,Xr,ot,Jr,ga,Rt,Bn,Xt,ya=!1,Fo=!1,To,tr=!1,ln=new Map,ut=new Map,So=new WeakMap;function Ly(n,e){Ne(function(){return"registering drop-zone if absent"}),ln.has(e)||ln.set(e,new Set),ln.get(e).has(n)||(ln.get(e).add(n),yu())}function Ou(n,e){ln.get(e).delete(n),vu(),ln.get(e).size===0&&ln.delete(e)}function Py(){Ne(function(){return"watching dragged element"}),Ay();var n=ln.get(Xr),e=wo(n),t;try{for(e.s();!(t=e.n()).done;){var a=t.value;a.addEventListener(Gr,qu),a.addEventListener(Xa,Ru),a.addEventListener(Ur,Lu)}}catch(o){e.e(o)}finally{e.f()}window.addEventListener(Do,va);var r=Math.max.apply(Math,[Ry].concat(Wr(Array.from(n.keys()).map(function(o){return ut.get(o).dropAnimationDurationMs}))));wy(wt,n,r*1.07)}function jy(){Ne(function(){return"unwatching dragged element"}),ky();var n=ln.get(Xr),e=wo(n),t;try{for(e.s();!(t=e.n()).done;){var a=t.value;a.removeEventListener(Gr,qu),a.removeEventListener(Xa,Ru),a.removeEventListener(Ur,Lu)}}catch(r){e.e(r)}finally{e.f()}window.removeEventListener(Do,va),Dy()}function Vy(n){return n.findIndex(function(e){return e[pt]===Eo})}function ei(n){return n.findIndex(function(e){return!!e[Yr]&&e[pt]!==Eo})}function qu(n){Ne(function(){return["dragged entered",n.currentTarget,n.detail]});var e=ut.get(n.currentTarget),t=e.items,a=e.dropFromOthersDisabled;if(a&&n.currentTarget!==ot){Ne(function(){return"ignoring dragged entered because drop is currently disabled"});return}if(tr=!1,t=t.filter(function(c){return c[pt]!==ga[pt]}),Ne(function(){return"dragged entered items ".concat(wn(t))}),ot!==n.currentTarget){var r=ut.get(ot).items,o=r.filter(function(c){return!c[Yr]});Sn(ot,o,{trigger:Qe.DRAGGED_ENTERED_ANOTHER,id:Wt[pt],source:Ue.POINTER})}else{var i=Vy(t);i!==-1&&(Ne(function(){return"removing placeholder item from origin dz"}),t.splice(i,1))}var l=n.detail.indexObj,s=l.index,d=l.isProximityBased,u=d&&s===n.currentTarget.children.length-1?s+1:s;Rt=n.currentTarget,t.splice(u,0,ga),Sn(n.currentTarget,t,{trigger:Qe.DRAGGED_ENTERED,id:Wt[pt],source:Ue.POINTER})}function Ru(n){if(!!ya){Ne(function(){return["dragged left",n.currentTarget,n.detail]});var e=ut.get(n.currentTarget),t=e.items,a=e.dropFromOthersDisabled;if(a&&n.currentTarget!==ot&&n.currentTarget!==Rt){Ne(function(){return"drop is currently disabled"});return}var r=ei(t),o=t.splice(r,1)[0];Rt=void 0;var i=n.detail,l=i.type,s=i.theOtherDz;if(l===zr.OUTSIDE_OF_ANY||l===zr.LEFT_FOR_ANOTHER&&s!==ot&&ut.get(s).dropFromOthersDisabled){Ne(function(){return"dragged left all, putting shadow element back in the origin dz"}),tr=!0,Rt=ot;var d=ut.get(ot).items;d.splice(Jr,0,o),Sn(ot,d,{trigger:Qe.DRAGGED_LEFT_ALL,id:Wt[pt],source:Ue.POINTER})}Sn(n.currentTarget,t,{trigger:Qe.DRAGGED_LEFT,id:Wt[pt],source:Ue.POINTER})}}function Lu(n){Ne(function(){return["dragged is over index",n.currentTarget,n.detail]});var e=ut.get(n.currentTarget),t=e.items,a=e.dropFromOthersDisabled;if(a&&n.currentTarget!==ot){Ne(function(){return"drop is currently disabled"});return}tr=!1;var r=n.detail.indexObj.index,o=ei(t);t.splice(o,1),t.splice(r,0,ga),Sn(n.currentTarget,t,{trigger:Qe.DRAGGED_OVER_INDEX,id:Wt[pt],source:Ue.POINTER})}function ti(n){n.preventDefault();var e=n.touches?n.touches[0]:n;Xt={x:e.clientX,y:e.clientY},wt.style.transform="translate3d(".concat(Xt.x-Bn.x,"px, ").concat(Xt.y-Bn.y,"px, 0)")}function va(){Ne(function(){return"dropped"}),Fo=!0,window.removeEventListener("mousemove",ti),window.removeEventListener("touchmove",ti),window.removeEventListener("mouseup",va),window.removeEventListener("touchend",va),jy(),Ty(wt),Rt||(Ne(function(){return"element was dropped right after it left origin but before entering somewhere else"}),Rt=ot),Ne(function(){return["dropped in dz",Rt]});var n=ut.get(Rt),e=n.items,t=n.type;Qr(ln.get(t),function(o){return ut.get(o).dropTargetStyle},function(o){return ut.get(o).dropTargetClasses});var a=ei(e);a===-1&&(a=Jr),e=e.map(function(o){return o[Yr]?Wt:o});function r(){To(),pa(Rt,e,{trigger:tr?Qe.DROPPED_OUTSIDE_OF_ANY:Qe.DROPPED_INTO_ZONE,id:Wt[pt],source:Ue.POINTER}),Rt!==ot&&pa(ot,ut.get(ot).items,{trigger:Qe.DROPPED_INTO_ANOTHER,id:Wt[pt],source:Ue.POINTER}),Iy(Rt.children[a]),Wy()}Hy(a,r)}function Hy(n,e){var t=bu(Rt.children[n]),a={x:t.left-parseFloat(wt.style.left),y:t.top-parseFloat(wt.style.top)},r=ut.get(Rt),o=r.dropAnimationDurationMs,i="transform ".concat(o,"ms ease");wt.style.transition=wt.style.transition?wt.style.transition+","+i:i,wt.style.transform="translate3d(".concat(a.x,"px, ").concat(a.y,"px, 0)"),window.setTimeout(e,o)}function Wy(){wt.remove(),gn.remove(),wt=void 0,gn=void 0,Wt=void 0,Xr=void 0,ot=void 0,Jr=void 0,ga=void 0,Rt=void 0,Bn=void 0,Xt=void 0,ya=!1,Fo=!1,To=void 0,tr=!1}function Gy(n,e){var t={items:void 0,type:void 0,flipDurationMs:0,dragDisabled:!1,morphDisabled:!1,dropFromOthersDisabled:!1,dropTargetStyle:Iu,dropTargetClasses:[],transformDraggedElement:function(){},centreDraggedOnCursor:!1};Ne(function(){return["dndzone good to go options: ".concat(wn(e),", config: ").concat(wn(t)),{node:n}]});var a=new Map;function r(){window.addEventListener("mousemove",l,{passive:!1}),window.addEventListener("touchmove",l,{passive:!1,capture:!1}),window.addEventListener("mouseup",i,{passive:!1}),window.addEventListener("touchend",i,{passive:!1})}function o(){window.removeEventListener("mousemove",l),window.removeEventListener("touchmove",l),window.removeEventListener("mouseup",i),window.removeEventListener("touchend",i)}function i(){o(),gn=void 0,Bn=void 0,Xt=void 0}function l(c){c.preventDefault();var h=c.touches?c.touches[0]:c;Xt={x:h.clientX,y:h.clientY},(Math.abs(Xt.x-Bn.x)>=Mu||Math.abs(Xt.y-Bn.y)>=Mu)&&(o(),d())}function s(c){if(c.target!==c.currentTarget&&(c.target.value!==void 0||c.target.isContentEditable)){Ne(function(){return"won't initiate drag on a nested input element"});return}if(c.button){Ne(function(){return"ignoring none left click button: ".concat(c.button)});return}if(ya){Ne(function(){return"cannot start a new drag before finalizing previous one"});return}c.stopPropagation();var h=c.touches?c.touches[0]:c;Bn={x:h.clientX,y:h.clientY},Xt=zn({},Bn),gn=c.currentTarget,r()}function d(){Ne(function(){return["drag start config: ".concat(wn(t)),gn]}),ya=!0;var c=a.get(gn);Jr=c,ot=gn.parentElement;var h=ot.getRootNode(),m=h.body||h,p=t.items,D=t.type,y=t.centreDraggedOnCursor;Wt=zn({},p[c]),Xr=D,ga=zn(zn({},Wt),{},Qa({},Yr,!0));var A=zn(zn({},ga),{},Qa({},pt,Eo));wt=Fy(gn,y&&Xt);function _(){wt.parentElement?window.requestAnimationFrame(_):(m.appendChild(wt),wt.focus(),Py(),Ny(gn),m.appendChild(gn))}window.requestAnimationFrame(_),Kr(Array.from(ln.get(t.type)).filter(function(C){return C===ot||!ut.get(C).dropFromOthersDisabled}),function(C){return ut.get(C).dropTargetStyle},function(C){return ut.get(C).dropTargetClasses}),p.splice(c,1,A),To=Oy(ot),Sn(ot,p,{trigger:Qe.DRAG_STARTED,id:Wt[pt],source:Ue.POINTER}),window.addEventListener("mousemove",ti,{passive:!1}),window.addEventListener("touchmove",ti,{passive:!1,capture:!1}),window.addEventListener("mouseup",va,{passive:!1}),window.addEventListener("touchend",va,{passive:!1})}function u(c){var h=c.items,m=h===void 0?void 0:h,p=c.flipDurationMs,D=p===void 0?0:p,y=c.type,A=y===void 0?qy:y,_=c.dragDisabled,C=_===void 0?!1:_,B=c.morphDisabled,z=B===void 0?!1:B,L=c.dropFromOthersDisabled,N=L===void 0?!1:L,j=c.dropTargetStyle,F=j===void 0?Iu:j,W=c.dropTargetClasses,I=W===void 0?[]:W,G=c.transformDraggedElement,ue=G===void 0?function(){}:G,we=c.centreDraggedOnCursor,ge=we===void 0?!1:we;t.dropAnimationDurationMs=D,t.type&&A!==t.type&&Ou(n,t.type),t.type=A,Ly(n,A),t.items=Wr(m),t.dragDisabled=C,t.morphDisabled=z,t.transformDraggedElement=ue,t.centreDraggedOnCursor=ge,ya&&!Fo&&(!my(F,t.dropTargetStyle)||!gy(I,t.dropTargetClasses))&&(Qr([n],function(){return t.dropTargetStyle},function(){return I}),Kr([n],function(){return F},function(){return I})),t.dropTargetStyle=F,t.dropTargetClasses=Wr(I);function Ce(ce,xe){return ut.get(ce)?ut.get(ce)[xe]:t[xe]}ya&&t.dropFromOthersDisabled!==N&&(N?Qr([n],function(ce){return Ce(ce,"dropTargetStyle")},function(ce){return Ce(ce,"dropTargetClasses")}):Kr([n],function(ce){return Ce(ce,"dropTargetStyle")},function(ce){return Ce(ce,"dropTargetClasses")})),t.dropFromOthersDisabled=N,ut.set(n,t);for(var K=ei(t.items),Z=function(xe){var ze=n.children[xe];if(By(ze,C),xe===K)return z||Sy(wt,ze,Xt.x,Xt.y,function(){return t.transformDraggedElement(wt,Wt,xe)}),My(ze),"continue";ze.removeEventListener("mousedown",So.get(ze)),ze.removeEventListener("touchstart",So.get(ze)),C||(ze.addEventListener("mousedown",s),ze.addEventListener("touchstart",s),So.set(ze,s)),a.set(ze,xe)},he=0;he<n.children.length;he++)var Se=Z(he)}return u(e),{update:function(h){Ne(function(){return"pointer dndzone will update newOptions: ".concat(wn(h))}),u(h)},destroy:function(){Ne(function(){return"pointer dndzone will destroy"}),Ou(n,t.type),ut.delete(n)}}}var ni,Bo={DND_ZONE_ACTIVE:"dnd-zone-active",DND_ZONE_DRAG_DISABLED:"dnd-zone-drag-disabled"},Uy=(ni={},Qa(ni,Bo.DND_ZONE_ACTIVE,"Tab to one the items and press space-bar or enter to start dragging it"),Qa(ni,Bo.DND_ZONE_DRAG_DISABLED,"This is a disabled drag and drop list"),ni),zy="dnd-action-aria-alert",Tt;function Pu(){Tt=document.createElement("div"),function(){Tt.id=zy,Tt.style.position="fixed",Tt.style.bottom="0",Tt.style.left="0",Tt.style.zIndex="-5",Tt.style.opacity="0",Tt.style.height="0",Tt.style.width="0",Tt.setAttribute("role","alert")}(),document.body.prepend(Tt),Object.entries(Uy).forEach(function(n){var e=Y2(n,2),t=e[0],a=e[1];return document.body.prepend(Zy(t,a))})}function Yy(){return ly?null:(document.readyState==="complete"?Pu():window.addEventListener("DOMContentLoaded",Pu),zn({},Bo))}function Zy(n,e){var t=document.createElement("div");return t.id=n,t.innerHTML="<p>".concat(e,"</p>"),t.style.display="none",t.style.position="fixed",t.style.zIndex="-5",t}function ba(n){Tt.innerHTML="";var e=document.createTextNode(n);Tt.appendChild(e),Tt.style.display="none",Tt.style.display="inline"}var $y="--any--",ju={outline:"rgba(255, 255, 102, 0.7) solid 2px"},Jt=!1,No,At,Zn="",$n,un,Nn="",ai=new WeakSet,Vu=new WeakMap,Hu=new WeakMap,Mo=new Map,Dt=new Map,cn=new Map,Wu=Yy();function Ky(n,e){Ne(function(){return"registering drop-zone if absent"}),cn.size===0&&(Ne(function(){return"adding global keydown and click handlers"}),window.addEventListener("keydown",Uu),window.addEventListener("click",zu)),cn.has(e)||cn.set(e,new Set),cn.get(e).has(n)||(cn.get(e).add(n),yu())}function Gu(n,e){Ne(function(){return"unregistering drop-zone"}),At===n&&nr(),cn.get(e).delete(n),vu(),cn.get(e).size===0&&cn.delete(e),cn.size===0&&(Ne(function(){return"removing global keydown and click handlers"}),window.removeEventListener("keydown",Uu),window.removeEventListener("click",zu))}function Uu(n){if(!!Jt)switch(n.key){case"Escape":{nr();break}}}function zu(){!Jt||ai.has(document.activeElement)||(Ne(function(){return"clicked outside of any draggable"}),nr())}function Qy(n){if(Ne(function(){return"zone focus"}),!!Jt){var e=n.currentTarget;if(e!==At){Zn=e.getAttribute("aria-label")||"";var t=Dt.get(At),a=t.items,r=a.find(function(c){return c[pt]===un}),o=a.indexOf(r),i=a.splice(o,1)[0],l=Dt.get(e),s=l.items,d=l.autoAriaDisabled;e.getBoundingClientRect().top<At.getBoundingClientRect().top||e.getBoundingClientRect().left<At.getBoundingClientRect().left?(s.push(i),d||ba("Moved item ".concat(Nn," to the end of the list ").concat(Zn))):(s.unshift(i),d||ba("Moved item ".concat(Nn," to the beginning of the list ").concat(Zn)));var u=At;pa(u,a,{trigger:Qe.DROPPED_INTO_ANOTHER,id:un,source:Ue.KEYBOARD}),pa(e,s,{trigger:Qe.DROPPED_INTO_ZONE,id:un,source:Ue.KEYBOARD}),At=e}}}function Yu(){Mo.forEach(function(n,e){var t=n.update;return t(Dt.get(e))})}function nr(){var n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!0;Ne(function(){return"drop"}),Dt.get(At).autoAriaDisabled||ba("Stopped dragging item ".concat(Nn)),ai.has(document.activeElement)&&document.activeElement.blur(),n&&Sn(At,Dt.get(At).items,{trigger:Qe.DRAG_STOPPED,id:un,source:Ue.KEYBOARD}),Qr(cn.get(No),function(e){return Dt.get(e).dropTargetStyle},function(e){return Dt.get(e).dropTargetClasses}),$n=null,un=null,Nn="",No=null,At=null,Zn="",Jt=!1,Yu()}function Xy(n,e){var t={items:void 0,type:void 0,dragDisabled:!1,zoneTabIndex:0,dropFromOthersDisabled:!1,dropTargetStyle:ju,dropTargetClasses:[],autoAriaDisabled:!1};function a(u,c,h){u.length<=1||u.splice(h,1,u.splice(c,1,u[h])[0])}function r(u){switch(Ne(function(){return["handling key down",u.key]}),u.key){case"Enter":case" ":{if((u.target.disabled!==void 0||u.target.href||u.target.isContentEditable)&&!ai.has(u.target))return;u.preventDefault(),u.stopPropagation(),Jt?nr():o(u);break}case"ArrowDown":case"ArrowRight":{if(!Jt)return;u.preventDefault(),u.stopPropagation();var c=Dt.get(n),h=c.items,m=Array.from(n.children),p=m.indexOf(u.currentTarget);Ne(function(){return["arrow down",p]}),p<m.length-1&&(t.autoAriaDisabled||ba("Moved item ".concat(Nn," to position ").concat(p+2," in the list ").concat(Zn)),a(h,p,p+1),pa(n,h,{trigger:Qe.DROPPED_INTO_ZONE,id:un,source:Ue.KEYBOARD}));break}case"ArrowUp":case"ArrowLeft":{if(!Jt)return;u.preventDefault(),u.stopPropagation();var D=Dt.get(n),y=D.items,A=Array.from(n.children),_=A.indexOf(u.currentTarget);Ne(function(){return["arrow up",_]}),_>0&&(t.autoAriaDisabled||ba("Moved item ".concat(Nn," to position ").concat(_," in the list ").concat(Zn)),a(y,_,_-1),pa(n,y,{trigger:Qe.DROPPED_INTO_ZONE,id:un,source:Ue.KEYBOARD}));break}}}function o(u){Ne(function(){return"drag start"}),l(u.currentTarget),At=n,No=t.type,Jt=!0;var c=Array.from(cn.get(t.type)).filter(function(m){return m===At||!Dt.get(m).dropFromOthersDisabled});if(Kr(c,function(m){return Dt.get(m).dropTargetStyle},function(m){return Dt.get(m).dropTargetClasses}),!t.autoAriaDisabled){var h="Started dragging item ".concat(Nn,". Use the arrow keys to move it within its list ").concat(Zn);c.length>1&&(h+=", or tab to another list in order to move the item into it"),ba(h)}Sn(n,Dt.get(n).items,{trigger:Qe.DRAG_STARTED,id:un,source:Ue.KEYBOARD}),Yu()}function i(u){!Jt||u.currentTarget!==$n&&(u.stopPropagation(),nr(!1),o(u))}function l(u){var c=Dt.get(n),h=c.items,m=Array.from(n.children),p=m.indexOf(u);$n=u,$n.tabIndex=0,un=h[p][pt],Nn=m[p].getAttribute("aria-label")||""}function s(u){var c=u.items,h=c===void 0?[]:c,m=u.type,p=m===void 0?$y:m,D=u.dragDisabled,y=D===void 0?!1:D,A=u.zoneTabIndex,_=A===void 0?0:A,C=u.dropFromOthersDisabled,B=C===void 0?!1:C,z=u.dropTargetStyle,L=z===void 0?ju:z,N=u.dropTargetClasses,j=N===void 0?[]:N,F=u.autoAriaDisabled,W=F===void 0?!1:F;t.items=Wr(h),t.dragDisabled=y,t.dropFromOthersDisabled=B,t.zoneTabIndex=_,t.dropTargetStyle=L,t.dropTargetClasses=j,t.autoAriaDisabled=W,W||(n.setAttribute("aria-disabled",y),n.setAttribute("role","list"),n.setAttribute("aria-describedby",y?Wu.DND_ZONE_DRAG_DISABLED:Wu.DND_ZONE_ACTIVE)),t.type&&p!==t.type&&Gu(n,t.type),t.type=p,Ky(n,p),Dt.set(n,t),Jt?n.tabIndex=n===At||$n.contains(n)||t.dropFromOthersDisabled||At&&t.type!==Dt.get(At).type?-1:0:n.tabIndex=t.zoneTabIndex,n.addEventListener("focus",Qy);for(var I=function(we){var ge=n.children[we];ai.add(ge),ge.tabIndex=Jt?-1:0,W||ge.setAttribute("role","listitem"),ge.removeEventListener("keydown",Vu.get(ge)),ge.removeEventListener("click",Hu.get(ge)),y||(ge.addEventListener("keydown",r),Vu.set(ge,r),ge.addEventListener("click",i),Hu.set(ge,i)),Jt&&t.items[we][pt]===un&&(Ne(function(){return["focusing on",{i:we,focusedItemId:un}]}),$n=ge,$n.tabIndex=0,ge.focus())},G=0;G<n.children.length;G++)I(G)}s(e);var d={update:function(c){Ne(function(){return"keyboard dndzone will update newOptions: ".concat(wn(c))}),s(c)},destroy:function(){Ne(function(){return"keyboard dndzone will destroy"}),Gu(n,t.type),Dt.delete(n),Mo.delete(n)}};return Mo.set(n,d),d}function en(n,e){Zu(e);var t=Gy(n,e),a=Xy(n,e);return{update:function(o){Zu(o),t.update(o),a.update(o)},destroy:function(){t.destroy(),a.destroy()}}}function Zu(n){var e=n.items,t=n.flipDurationMs,a=n.type,r=n.dragDisabled,o=n.morphDisabled,i=n.dropFromOthersDisabled,l=n.zoneTabIndex,s=n.dropTargetStyle,d=n.dropTargetClasses,u=n.transformDraggedElement,c=n.autoAriaDisabled,h=n.centreDraggedOnCursor,m=z2(n,["items","flipDurationMs","type","dragDisabled","morphDisabled","dropFromOthersDisabled","zoneTabIndex","dropTargetStyle","dropTargetClasses","transformDraggedElement","autoAriaDisabled","centreDraggedOnCursor"]);if(Object.keys(m).length>0&&console.warn("dndzone will ignore unknown options",m),!e)throw new Error("no 'items' key provided to dndzone");var p=e.find(function(D){return!{}.hasOwnProperty.call(D,pt)});if(p)throw new Error("missing '".concat(pt,"' property for item ").concat(wn(p)));if(d&&!Array.isArray(d))throw new Error("dropTargetClasses should be an array but instead it is a ".concat(Ka(d),", ").concat(wn(d)));if(l&&!Jy(l))throw new Error("zoneTabIndex should be a number but instead it is a ".concat(Ka(l),", ").concat(wn(l)))}function Jy(n){return!isNaN(n)&&function(e){return(e|0)===e}(parseFloat(n))}var wa=Te(require("obsidian"));var $u=Te(require("obsidian"));function ev(n){se(n,"svelte-ig4czu",".add-new.svelte-ig4czu,.add-new.svelte-ig4czu button{width:100%}")}function tv(n){let e,t,a,r;return{c(){e=E("div"),b(e,"class","add-new setting-item svelte-ig4czu")},m(o,i){q(o,e,i),a||(r=[ae(t=n[0].call(null,e)),Y(e,"click",n[1])],a=!0)},p:U,i:U,o:U,d(o){o&&O(e),a=!1,de(r)}}}function nv(n){let e=a=>{new $u.ButtonComponent(a).setTooltip("Add New").setButtonText("+")};function t(a){ve.call(this,n,a)}return[e,t]}var Ku=class extends ie{constructor(e){super();oe(this,e,nv,tv,ee,{},ev)}},Lt=Ku;function av(n){se(n,"svelte-u7oux9",".no-existing-items.svelte-u7oux9 span.svelte-u7oux9{width:100%;text-align:center;color:var(--text-faint)}")}function rv(n){let e,t,a;return{c(){e=E("div"),t=E("span"),a=me(n[0]),b(t,"class","svelte-u7oux9"),b(e,"class","no-existing-items setting-item svelte-u7oux9")},m(r,o){q(r,e,o),w(e,t),w(t,a)},p(r,[o]){o&1&&De(a,r[0])},i:U,o:U,d(r){r&&O(e)}}}function iv(n,e,t){let{message:a}=e;return n.$$set=r=>{"message"in r&&t(0,a=r.message)},[a]}var Qu=class extends ie{constructor(e){super();oe(this,e,iv,rv,ee,{message:0},av)}},Pt=Qu;function ov(n){se(n,"svelte-1ddbnom",".existing-items.svelte-1ddbnom.svelte-1ddbnom{width:100%}.weekday.svelte-1ddbnom.svelte-1ddbnom{display:grid;grid-template-columns:auto 1fr auto;align-items:center;justify-content:space-between;gap:1rem;width:100%}.weekday.svelte-1ddbnom .icon.svelte-1ddbnom{align-items:center}.weekday.svelte-1ddbnom.svelte-1ddbnom{margin-top:0.5rem}")}function Xu(n,e,t){let a=n.slice();return a[15]=e[t],a}function Ju(n,e,t){let a=n.slice();return a[18]=e[t],a[20]=t,a}function ec(n){let e,t=(n[18].name??"")+"",a,r,o,i;return{c(){e=E("option"),a=me(t),r=P(),e.disabled=o=!n[2],e.__value=i=n[20],e.value=e.__value},m(l,s){q(l,e,s),w(e,a),w(e,r)},p(l,s){s&2&&t!==(t=(l[18].name??"")+"")&&De(a,t),s&4&&o!==(o=!l[2])&&(e.disabled=o)},d(l){l&&O(e)}}}function sv(n){let e,t=[],a=new Map,r,o,i,l=n[1],s=d=>d[15].id;for(let d=0;d<l.length;d+=1){let u=Xu(n,l,d),c=s(u);a.set(c,t[d]=tc(c,u))}return{c(){e=E("div");for(let d=0;d<t.length;d+=1)t[d].c();b(e,"class","existing-items svelte-1ddbnom")},m(d,u){q(d,e,u);for(let c=0;c<t.length;c+=1)t[c].m(e,null);o||(i=[ae(r=en.call(null,e,{items:n[1],flipDurationMs:Io,dragDisabled:n[3]})),Y(e,"consider",n[7]),Y(e,"finalize",n[8])],o=!0)},p(d,u){if(u&66){l=d[1];for(let c=0;c<t.length;c+=1)t[c].r();t=Kt(t,u,s,1,d,l,a,e,Tn,tc,null,Xu);for(let c=0;c<t.length;c+=1)t[c].a()}r&&Ve(r.update)&&u&10&&r.update.call(null,{items:d[1],flipDurationMs:Io,dragDisabled:d[3]})},i:U,o:U,d(d){d&&O(e);for(let u=0;u<t.length;u+=1)t[u].d();o=!1,de(i)}}}function lv(n){let e,t;return e=new Pt({props:{message:"Create a new weekday to see it here."}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p:U,i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function tc(n,e){let t,a,r,o,i,l,s,d,u,c,h,m=U,p,D;return{key:n,first:null,c(){t=E("div"),a=E("div"),o=P(),i=E("div"),s=P(),d=E("div"),c=P(),b(a,"class","icon svelte-1ddbnom"),b(d,"class","icon svelte-1ddbnom"),b(t,"class","weekday svelte-1ddbnom"),this.first=t},m(y,A){q(y,t,A),w(t,a),w(t,o),w(t,i),w(t,s),w(t,d),w(t,c),p||(D=[ae(r=e[4].call(null,a)),Y(a,"mousedown",e[6]),Y(a,"touchstart",e[6]),ae(l=e[9].call(null,i,e[15])),ae(u=e[5].call(null,d,e[15]))],p=!0)},p(y,A){e=y,l&&Ve(l.update)&&A&2&&l.update.call(null,e[15]),u&&Ve(u.update)&&A&2&&u.update.call(null,e[15])},r(){h=t.getBoundingClientRect()},f(){$t(t),m()},a(){m(),m=Zt(t,h,Qt,{duration:Io})},d(y){y&&O(t),p=!1,de(D)}}}function uv(n){let e,t,a,r,o,i,l,s,d,u,c,h,m,p,D,y,A,_;e=new bn({props:{name:"Overflow Weeks",desc:"Turn this off to make each month start on the first of the week.",value:n[0].static.overflow}}),e.$on("click",n[11]);let C=n[1].filter(nc),B=[];for(let j=0;j<C.length;j+=1)B[j]=ec(Ju(n,C,j));c=new Lt({}),c.$on("click",n[13]);let z=[lv,sv],L=[];function N(j,F){return j[1].length?1:0}return m=N(n,-1),p=L[m]=z[m](n),{c(){te(e.$$.fragment),t=P(),a=E("div"),r=E("div"),r.innerHTML=`<div class="setting-item-name">First Day</div> 
        <div class="setting-item-description">The day of the week the first year starts on.</div>`,o=P(),i=E("div"),l=E("select"),s=E("option"),s.textContent="Select a Weekday";for(let j=0;j<B.length;j+=1)B[j].c();u=P(),te(c.$$.fragment),h=P(),p.c(),D=qe(),b(r,"class","setting-item-info"),s.selected=!0,s.hidden=!0,s.disabled=!0,s.__value="Select a Weekday",s.value=s.__value,b(l,"class","dropdown"),b(l,"aria-label",d=n[1].filter(ac).length?null:"Named Weekday Required"),n[0].static.firstWeekDay===void 0&&qt(()=>n[12].call(l)),b(i,"class","setting-item-control"),b(a,"class","setting-item")},m(j,F){X(e,j,F),q(j,t,F),q(j,a,F),w(a,r),w(a,o),w(a,i),w(i,l),w(l,s);for(let W=0;W<B.length;W+=1)B[W].m(l,null);Yt(l,n[0].static.firstWeekDay),q(j,u,F),X(c,j,F),q(j,h,F),L[m].m(j,F),q(j,D,F),y=!0,A||(_=Y(l,"change",n[12]),A=!0)},p(j,[F]){let W={};if(F&1&&(W.value=j[0].static.overflow),e.$set(W),F&6){C=j[1].filter(nc);let G;for(G=0;G<C.length;G+=1){let ue=Ju(j,C,G);B[G]?B[G].p(ue,F):(B[G]=ec(ue),B[G].c(),B[G].m(l,null))}for(;G<B.length;G+=1)B[G].d(1);B.length=C.length}(!y||F&2&&d!==(d=j[1].filter(ac).length?null:"Named Weekday Required"))&&b(l,"aria-label",d),F&1&&Yt(l,j[0].static.firstWeekDay);let I=m;m=N(j,F),m===I?L[m].p(j,F):(_e(),R(L[I],1,1,()=>{L[I]=null}),Ee(),p=L[m],p?p.p(j,F):(p=L[m]=z[m](j),p.c()),T(p,1),p.m(D.parentNode,D))},i(j){y||(T(e.$$.fragment,j),T(c.$$.fragment,j),T(p),y=!0)},o(j){R(e.$$.fragment,j),R(c.$$.fragment,j),R(p),y=!1},d(j){Q(e,j),j&&O(t),j&&O(a),We(B,j),j&&O(u),Q(c,j),j&&O(h),L[m].d(j),j&&O(D),A=!1,_()}}}var Io=300,nc=n=>n.name?.length,ac=n=>n.name?.length;function cv(n,e,t){let a,r,o=ye(),{calendar:i}=e,l=i.static.firstWeekDay,s=_=>{(0,wa.setIcon)(_,"fantasy-calendar-grip")},d=(_,C)=>{new wa.ExtraButtonComponent(_).setIcon("trash").onClick(()=>t(1,a=a.filter(B=>B.id!==C.id)))};function u(_){_.preventDefault(),t(3,c=!1)}let c=!1;function h(_){let{items:C,info:{source:B,trigger:z}}=_.detail;t(1,a=C),B===Ue.KEYBOARD&&z===Qe.DRAG_STOPPED&&t(3,c=!0)}function m(_){let{items:C,info:{source:B}}=_.detail;t(1,a=C),B===Ue.POINTER&&t(3,c=!0)}let p=(_,C)=>{new wa.TextComponent(_).setValue(C.name).setPlaceholder("Name").onChange(B=>{C.name=B,o("weekday-update",a),t(1,a),t(0,i)}).inputEl.setAttr("style","width: 100%;")},D=()=>t(0,i.static.overflow=!i.static.overflow,i);function y(){i.static.firstWeekDay=xn(this),t(0,i)}let A=()=>t(0,i.static.weekdays=[...a,{type:"day",name:null,id:He(6)}],i);return n.$$set=_=>{"calendar"in _&&t(0,i=_.calendar)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(1,a=i.static.weekdays)}if(n.$$.dirty&1025){e:t(10,l=i.static.firstWeekDay),console.log(l,i.static.firstWeekDay)}if(n.$$.dirty&1){e:t(2,r=i.static.overflow)}if(n.$$.dirty&2){e:o("weekday-update",a)}if(n.$$.dirty&1024){e:o("first-weekday-update",l)}if(n.$$.dirty&4){e:o("overflow-update",r)}},[i,a,r,c,s,d,u,h,m,p,l,D,y,A]}var rc=class extends ie{constructor(e){super();oe(this,e,cv,uv,ee,{calendar:0},ov)}},ic=rc;var lc=Te(require("obsidian"));var ri=Te(require("obsidian"));function dv(n){se(n,"svelte-1nt6wkb",".month.svelte-1nt6wkb.svelte-1nt6wkb{display:grid;grid-template-columns:1fr 1fr auto auto;align-items:center;justify-content:space-between;gap:1rem}.month.svelte-1nt6wkb .icon.svelte-1nt6wkb{align-items:center}")}function fv(n){let e,t,a,r,o,i,l,s,d,u,c,h,m;return{c(){e=E("div"),t=E("input"),a=P(),r=E("input"),o=P(),i=E("select"),l=E("option"),l.textContent="Month",s=E("option"),s.textContent="Intercalary",d=P(),u=E("div"),b(t,"type","text"),b(t,"spellcheck","false"),b(t,"placeholder","Name"),et(t,"width","100%"),b(r,"type","number"),b(r,"spellcheck","false"),b(r,"placeholder","Length"),et(r,"width","100%"),b(r,"min","0"),l.__value="month",l.value=l.__value,s.__value="intercalary",s.value=s.__value,b(i,"class","dropdown"),n[0]===void 0&&qt(()=>n[8].call(i)),b(u,"class","icon svelte-1nt6wkb"),b(e,"class","month svelte-1nt6wkb")},m(p,D){q(p,e,D),w(e,t),Ct(t,n[1]),w(e,a),w(e,r),Ct(r,n[2]),w(e,o),w(e,i),w(i,l),w(i,s),Yt(i,n[0]),w(e,d),w(e,u),h||(m=[Y(t,"input",n[6]),Y(t,"input",n[4]),Y(r,"input",n[7]),Y(r,"input",n[4]),Y(i,"change",n[8]),Y(i,"input",n[4]),ae(c=n[3].call(null,u))],h=!0)},p(p,[D]){D&2&&t.value!==p[1]&&Ct(t,p[1]),D&4&&ha(r.value)!==p[2]&&Ct(r,p[2]),D&1&&Yt(i,p[0])},i:U,o:U,d(p){p&&O(e),h=!1,de(m)}}}function hv(n,e,t){let a=ye(),{month:r}=e,o=r.name,i=r.type,l=r.length,s=m=>{new ri.ExtraButtonComponent(m).setIcon("trash").onClick(()=>{a("month-delete")})},d=(0,ri.debounce)(()=>{t(5,r.name=o,r),t(5,r.type=i,r),t(5,r.length=l,r),a("month-update")},300,!0);function u(){o=this.value,t(1,o)}function c(){l=ha(this.value),t(2,l)}function h(){i=xn(this),t(0,i)}return n.$$set=m=>{"month"in m&&t(5,r=m.month)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(5,r.type=i,r)}},[i,o,l,s,d,r,u,c,h]}var oc=class extends ie{constructor(e){super();oe(this,e,hv,fv,ee,{month:5},dv)}},sc=oc;function pv(n){se(n,"svelte-xv4vbj",".month.svelte-xv4vbj{display:flex;align-items:center;margin-top:0.5rem;gap:1rem}")}function uc(n,e,t){let a=n.slice();return a[12]=e[t],a}function mv(n){let e,t=[],a=new Map,r,o,i,l,s=n[2],d=u=>u[12].id;for(let u=0;u<s.length;u+=1){let c=uc(n,s,u),h=d(c);a.set(h,t[u]=cc(h,c))}return{c(){e=E("div");for(let u=0;u<t.length;u+=1)t[u].c();b(e,"class","existing-items")},m(u,c){q(u,e,c);for(let h=0;h<t.length;h+=1)t[h].m(e,null);o=!0,i||(l=[ae(r=en.call(null,e,{items:n[2],flipDurationMs:Oo,dragDisabled:n[1]})),Y(e,"consider",n[6]),Y(e,"finalize",n[7])],i=!0)},p(u,c){if(c&300){s=u[2],_e();for(let h=0;h<t.length;h+=1)t[h].r();t=Kt(t,c,d,1,u,s,a,e,Vr,cc,null,uc);for(let h=0;h<t.length;h+=1)t[h].a();Ee()}r&&Ve(r.update)&&c&6&&r.update.call(null,{items:u[2],flipDurationMs:Oo,dragDisabled:u[1]})},i(u){if(!o){for(let c=0;c<s.length;c+=1)T(t[c]);o=!0}},o(u){for(let c=0;c<t.length;c+=1)R(t[c]);o=!1},d(u){u&&O(e);for(let c=0;c<t.length;c+=1)t[c].d();i=!1,de(l)}}}function gv(n){let e,t;return e=new Pt({props:{message:"Create a new month to see it here."}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p:U,i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function cc(n,e){let t,a,r,o,i,l,s,d=U,u,c,h;function m(){return e[10](e[12])}return i=new sc({props:{month:e[12]}}),i.$on("mousedown",e[5]),i.$on("month-delete",m),i.$on("month-update",e[11]),{key:n,first:null,c(){t=E("div"),a=E("div"),o=P(),te(i.$$.fragment),l=P(),b(a,"class","icon"),b(t,"class","month svelte-xv4vbj"),this.first=t},m(p,D){q(p,t,D),w(t,a),w(t,o),X(i,t,null),w(t,l),u=!0,c||(h=[ae(r=e[4].call(null,a)),Y(a,"mousedown",e[5]),Y(a,"touchstart",e[5])],c=!0)},p(p,D){e=p;let y={};D&4&&(y.month=e[12]),i.$set(y)},r(){s=t.getBoundingClientRect()},f(){$t(t),d()},a(){d(),d=Zt(t,s,Qt,{duration:Oo})},i(p){u||(T(i.$$.fragment,p),u=!0)},o(p){R(i.$$.fragment,p),u=!1},d(p){p&&O(t),Q(i),c=!1,de(h)}}}function yv(n){let e,t,a,r,o,i;e=new Lt({}),e.$on("click",n[9]);let l=[gv,mv],s=[];function d(u,c){return u[2].length?1:0}return a=d(n,-1),r=s[a]=l[a](n),{c(){te(e.$$.fragment),t=P(),r.c(),o=qe()},m(u,c){X(e,u,c),q(u,t,c),s[a].m(u,c),q(u,o,c),i=!0},p(u,[c]){let h=a;a=d(u,c),a===h?s[a].p(u,c):(_e(),R(s[h],1,1,()=>{s[h]=null}),Ee(),r=s[a],r?r.p(u,c):(r=s[a]=l[a](u),r.c()),T(r,1),r.m(o.parentNode,o))},i(u){i||(T(e.$$.fragment,u),T(r),i=!0)},o(u){R(e.$$.fragment,u),R(r),i=!1},d(u){Q(e,u),u&&O(t),s[a].d(u),u&&O(o)}}}var Oo=300;function vv(n,e,t){let a,{calendar:r}=e,o=D=>{t(2,a=a.filter(y=>y.id!=D.id)),c("month-update",a)},i=D=>{(0,lc.setIcon)(D,"fantasy-calendar-grip")};function l(D){D.preventDefault(),t(1,s=!1)}let s=!1;function d(D){let{items:y,info:{source:A,trigger:_}}=D.detail;t(2,a=y),A===Ue.KEYBOARD&&_===Qe.DRAG_STOPPED&&t(1,s=!0)}function u(D){let{items:y,info:{source:A}}=D.detail;t(2,a=y),c("month-update",a),A===Ue.POINTER&&t(1,s=!0)}let c=ye(),h=()=>t(0,r.static.months=[...a,{type:"month",name:null,length:null,id:He(6)}],r),m=D=>o(D),p=()=>c("month-update",a);return n.$$set=D=>{"calendar"in D&&t(0,r=D.calendar)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(2,a=r.static.months)}},[r,s,a,o,i,l,d,u,c,h,m,p]}var dc=class extends ie{constructor(e){super();oe(this,e,vv,yv,ee,{calendar:0},pv)}},fc=dc;var Da=Te(require("obsidian"));var ar=Te(require("obsidian"));async function Mn(n,e,t={cta:"Yes",secondary:"No"}){return new Promise((a,r)=>{let o=new hc(n,e,t);o.onClose=()=>{a(o.confirmed)},o.open()})}var hc=class extends ar.Modal{constructor(e,t,a){super(e);this.text=t;this.buttons=a;this.confirmed=!1}async display(){new Promise(e=>{this.contentEl.empty(),this.contentEl.addClass("confirm-modal"),this.contentEl.createEl("p",{text:this.text});let t=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new ar.ButtonComponent(t).setButtonText(this.buttons.cta).setCta().onClick(()=>{this.confirmed=!0,this.close()}),new ar.ButtonComponent(t).setButtonText(this.buttons.secondary).onClick(()=>{this.close()})})}onOpen(){this.display()}};function bv(n){se(n,"svelte-1f06yhl",".weekday.svelte-1f06yhl.svelte-1f06yhl{display:grid;grid-template-columns:auto 1fr auto;align-items:center;justify-content:space-between;gap:1rem}.weekday.svelte-1f06yhl .icon.svelte-1f06yhl{align-items:center}.weekday.svelte-1f06yhl.svelte-1f06yhl{margin-top:0.5rem}")}function pc(n,e,t){let a=n.slice();return a[16]=e[t],a}function mc(n){let e,t,a,r,o,i;e=new Lt({}),e.$on("click",n[14]);let l=[Dv,wv],s=[];function d(u,c){return!u[2]||!u[2].length?0:1}return a=d(n,-1),r=s[a]=l[a](n),{c(){te(e.$$.fragment),t=P(),r.c(),o=qe()},m(u,c){X(e,u,c),q(u,t,c),s[a].m(u,c),q(u,o,c),i=!0},p(u,c){let h=a;a=d(u,c),a===h?s[a].p(u,c):(_e(),R(s[h],1,1,()=>{s[h]=null}),Ee(),r=s[a],r?r.p(u,c):(r=s[a]=l[a](u),r.c()),T(r,1),r.m(o.parentNode,o))},i(u){i||(T(e.$$.fragment,u),T(r),i=!0)},o(u){R(e.$$.fragment,u),R(r),i=!1},d(u){Q(e,u),u&&O(t),s[a].d(u),u&&O(o)}}}function wv(n){let e,t=[],a=new Map,r,o,i,l=n[2],s=d=>d[16].id;for(let d=0;d<l.length;d+=1){let u=pc(n,l,d),c=s(u);a.set(c,t[d]=gc(c,u))}return{c(){e=E("div");for(let d=0;d<t.length;d+=1)t[d].c();b(e,"class","existing-items")},m(d,u){q(d,e,u);for(let c=0;c<t.length;c+=1)t[c].m(e,null);o||(i=[ae(r=en.call(null,e,{items:n[2],flipDurationMs:qo,dragDisabled:n[3]})),Y(e,"consider",n[10]),Y(e,"finalize",n[11])],o=!0)},p(d,u){if(u&516){l=d[2];for(let c=0;c<t.length;c+=1)t[c].r();t=Kt(t,u,s,1,d,l,a,e,Tn,gc,null,pc);for(let c=0;c<t.length;c+=1)t[c].a()}r&&Ve(r.update)&&u&12&&r.update.call(null,{items:d[2],flipDurationMs:qo,dragDisabled:d[3]})},i:U,o:U,d(d){d&&O(e);for(let u=0;u<t.length;u+=1)t[u].d();o=!1,de(i)}}}function Dv(n){let e,t;return e=new Pt({props:{message:"Create a new year to see it here."}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p:U,i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function gc(n,e){let t,a,r,o,i,l,s,d,u,c,h,m=U,p,D;return{key:n,first:null,c(){t=E("div"),a=E("div"),o=P(),i=E("div"),s=P(),d=E("div"),c=P(),b(a,"class","icon svelte-1f06yhl"),b(d,"class","icon svelte-1f06yhl"),b(t,"class","weekday svelte-1f06yhl"),this.first=t},m(y,A){q(y,t,A),w(t,a),w(t,o),w(t,i),w(t,s),w(t,d),w(t,c),p||(D=[ae(r=e[4].call(null,a)),Y(a,"mousedown",e[9]),Y(a,"touchstart",e[9]),ae(l=e[6].call(null,i,e[16])),ae(u=e[5].call(null,d,e[16]))],p=!0)},p(y,A){e=y,l&&Ve(l.update)&&A&4&&l.update.call(null,e[16]),u&&Ve(u.update)&&A&4&&u.update.call(null,e[16])},r(){h=t.getBoundingClientRect()},f(){$t(t),m()},a(){m(),m=Zt(t,h,Qt,{duration:qo})},d(y){y&&O(t),p=!1,de(D)}}}function _v(n){let e,t,a,r;e=new bn({props:{name:"Use Custom Years",desc:n[7],value:n[1]}}),e.$on("click",n[13]);let o=n[1]&&mc(n);return{c(){te(e.$$.fragment),t=P(),o&&o.c(),a=qe()},m(i,l){X(e,i,l),q(i,t,l),o&&o.m(i,l),q(i,a,l),r=!0},p(i,[l]){let s={};l&2&&(s.value=i[1]),e.$set(s),i[1]?o?(o.p(i,l),l&2&&T(o,1)):(o=mc(i),o.c(),T(o,1),o.m(a.parentNode,a)):o&&(_e(),R(o,1,1,()=>{o=null}),Ee())},i(i){r||(T(e.$$.fragment,i),T(o),r=!0)},o(i){R(e.$$.fragment,i),R(o),r=!1},d(i){Q(e,i),i&&O(t),o&&o.d(i),i&&O(a)}}}var qo=300;function Ev(n,e,t){let a,r,{calendar:o}=e,i=C=>{(0,Da.setIcon)(C,"fantasy-calendar-grip")},l=(C,B)=>{new Da.ExtraButtonComponent(C).setIcon("trash").onClick(()=>t(2,a=a.filter(z=>z.id!==B.id)))},s=(C,B)=>{new Da.TextComponent(C).setValue(B.name).setPlaceholder("Name").onChange(L=>{B.name=L,y("years-update",a),t(2,a),t(0,o)}).inputEl.setAttr("style","width: 100%;")},{app:d}=e,u=createFragment(C=>(C.createSpan({text:"Create custom years to display instead of incrementing from 1."}),C.createEl("br"),C.createSpan({text:"If on, "}),C.createEl("strong",{text:"only the years added below will be displayed."}),C)),c=async()=>{o.static.useCustomYears&&a.length&&await Mn(d,"The custom years you have created will be removed. Proceed?")&&t(0,o.static.years=[],o),t(0,o.static.useCustomYears=!o.static.useCustomYears,o)};function h(C){C.preventDefault(),t(3,m=!1)}let m=!1;function p(C){let{items:B,info:{source:z,trigger:L}}=C.detail;t(2,a=B),z===Ue.KEYBOARD&&L===Qe.DRAG_STOPPED&&t(3,m=!0)}function D(C){let{items:B,info:{source:z}}=C.detail;t(2,a=B),z===Ue.POINTER&&t(3,m=!0)}let y=ye(),A=()=>c(),_=()=>t(0,o.static.years=[...a??[],{name:null,id:He(6),type:"year"}],o);return n.$$set=C=>{"calendar"in C&&t(0,o=C.calendar),"app"in C&&t(12,d=C.app)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(2,a=o.static.years)}if(n.$$.dirty&1){e:t(1,r=o.static.useCustomYears)}if(n.$$.dirty&4){e:y("years-update",a)}if(n.$$.dirty&2){e:y("use-custom-update",r)}},[o,r,a,m,i,l,s,u,c,h,p,D,d,A,_]}var yc=class extends ie{constructor(e){super();oe(this,e,Ev,_v,ee,{calendar:0,app:12},bv)}},vc=yc;var Ro=Te(require("obsidian"));function Cv(n){se(n,"svelte-1ldxqlp",".dot.svelte-1ldxqlp{display:inline-block;height:0.875em;width:0.875em;margin:0 1px}")}function Av(n){let e,t;return{c(){e=Ot("svg"),t=Ot("circle"),b(t,"stroke",n[0]),b(t,"fill",n[0]),b(t,"cx","3"),b(t,"cy","3"),b(t,"r","2"),b(e,"class","dot svelte-1ldxqlp"),b(e,"viewBox","0 0 6 6"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"aria-label",n[1])},m(a,r){q(a,e,r),w(e,t)},p(a,[r]){r&1&&b(t,"stroke",a[0]),r&1&&b(t,"fill",a[0]),r&2&&b(e,"aria-label",a[1])},i:U,o:U,d(a){a&&O(e)}}}function kv(n,e,t){let{color:a}=e,{label:r}=e;return n.$$set=o=>{"color"in o&&t(0,a=o.color),"label"in o&&t(1,r=o.label)},[a,r]}var bc=class extends ie{constructor(e){super();oe(this,e,kv,Av,ee,{color:0,label:1},Cv)}},wc=bc;function xv(n){se(n,"svelte-3snb0d",".event.svelte-3snb0d.svelte-3snb0d{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.event-info.svelte-3snb0d.svelte-3snb0d{width:100%}.icons.svelte-3snb0d.svelte-3snb0d{display:flex;align-self:flex-start;justify-self:flex-end;align-items:center}.event.svelte-3snb0d .icon.svelte-3snb0d{align-items:center}.date.svelte-3snb0d.svelte-3snb0d{display:flex;justify-content:flex-start;gap:0.25rem}.clamp.svelte-3snb0d.svelte-3snb0d{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;word-break:keep-all;overflow:hidden;width:calc(var(--event-max-width) * 0.75)}")}function Dc(n){let e,t;return e=new wc({props:{color:n[1].color,label:n[1].name}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&2&&(o.color=a[1].color),r&2&&(o.label=a[1].name),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Fv(n){let e,t,a,r,o=n[0].name+"",i,l,s,d,u,c,h,m=(n[0].description??"")+"",p,D,y,A,_,C,B,z,L,N,j,F=n[1]!=null&&Dc(n);return{c(){e=E("div"),t=E("div"),a=E("span"),F&&F.c(),r=P(),i=me(o),l=P(),s=E("div"),d=E("div"),u=me(n[2]),c=P(),h=E("span"),p=me(m),D=P(),y=E("div"),A=E("div"),C=P(),B=E("div"),b(a,"class","setting-item-name"),b(d,"class","date svelte-3snb0d"),b(h,"class","clamp svelte-3snb0d"),b(s,"class","setting-item-description"),b(t,"class","event-info svelte-3snb0d"),b(A,"class","icon svelte-3snb0d"),b(B,"class","icon svelte-3snb0d"),b(y,"class","icons svelte-3snb0d"),b(e,"class","event svelte-3snb0d")},m(W,I){q(W,e,I),w(e,t),w(t,a),F&&F.m(a,null),w(a,r),w(a,i),w(t,l),w(t,s),w(s,d),w(d,u),w(s,c),w(s,h),w(h,p),w(e,D),w(e,y),w(y,A),w(y,C),w(y,B),L=!0,N||(j=[ae(_=n[5].call(null,A)),Y(A,"click",n[6]),ae(z=n[4].call(null,B)),Y(B,"click",n[7])],N=!0)},p(W,[I]){W[1]!=null?F?(F.p(W,I),I&2&&T(F,1)):(F=Dc(W),F.c(),T(F,1),F.m(a,r)):F&&(_e(),R(F,1,1,()=>{F=null}),Ee()),(!L||I&1)&&o!==(o=W[0].name+"")&&De(i,o),(!L||I&4)&&De(u,W[2]),(!L||I&1)&&m!==(m=(W[0].description??"")+"")&&De(p,m)},i(W){L||(T(F),L=!0)},o(W){R(F),L=!1},d(W){W&&O(e),F&&F.d(),N=!1,de(j)}}}function Tv(n,e,t){let a=ye(),r=c=>{new Ro.ExtraButtonComponent(c).setIcon("trash").setTooltip("Delete").extraSettingsEl.setAttr("style","margin-left: 0;")},o=c=>{new Ro.ExtraButtonComponent(c).setIcon("pencil").setTooltip("Edit")},{event:i}=e,{category:l}=e,{date:s}=e,d=()=>a("edit"),u=()=>a("delete");return n.$$set=c=>{"event"in c&&t(0,i=c.event),"category"in c&&t(1,l=c.category),"date"in c&&t(2,s=c.date)},[i,l,s,a,r,o,d,u]}var _c=class extends ie{constructor(e){super();oe(this,e,Tv,Fv,ee,{event:0,category:1,date:2},xv)}},Ec=_c;var $D=Te(require("obsidian"));function Cc(n,e,t){let a=n.slice();return a[10]=e[t],a}function Sv(n){let e,t,a=n[0],r=[];for(let i=0;i<a.length;i+=1)r[i]=Ac(Cc(n,a,i));let o=i=>R(r[i],1,1,()=>{r[i]=null});return{c(){e=E("div");for(let i=0;i<r.length;i+=1)r[i].c();b(e,"class","existing-items")},m(i,l){q(i,e,l);for(let s=0;s<r.length;s+=1)r[s].m(e,null);t=!0},p(i,l){if(l&31){a=i[0];let s;for(s=0;s<a.length;s+=1){let d=Cc(i,a,s);r[s]?(r[s].p(d,l),T(r[s],1)):(r[s]=Ac(d),r[s].c(),T(r[s],1),r[s].m(e,null))}for(_e(),s=a.length;s<r.length;s+=1)o(s);Ee()}},i(i){if(!t){for(let l=0;l<a.length;l+=1)T(r[l]);t=!0}},o(i){r=r.filter(Boolean);for(let l=0;l<r.length;l+=1)R(r[l]);t=!1},d(i){i&&O(e),We(r,i)}}}function Bv(n){let e,t;return e=new Pt({props:{message:"Create a new event to see it here."}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p:U,i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Ac(n){let e,t;function a(){return n[6](n[10])}function r(){return n[7](n[10])}return e=new Ec({props:{event:n[10],category:n[4](n[10].category),date:zt(n[10].date,n[1],n[10].end)}}),e.$on("edit",a),e.$on("delete",r),{c(){te(e.$$.fragment)},m(o,i){X(e,o,i),t=!0},p(o,i){n=o;let l={};i&1&&(l.event=n[10]),i&1&&(l.category=n[4](n[10].category)),i&3&&(l.date=zt(n[10].date,n[1],n[10].end)),e.$set(l)},i(o){t||(T(e.$$.fragment,o),t=!0)},o(o){R(e.$$.fragment,o),t=!1},d(o){Q(e,o)}}}function Nv(n){let e,t,a,r,o,i;e=new Lt({});let l=[Bv,Sv],s=[];function d(u,c){return u[0].length?1:0}return a=d(n,-1),r=s[a]=l[a](n),{c(){te(e.$$.fragment),t=P(),r.c(),o=qe()},m(u,c){X(e,u,c),q(u,t,c),s[a].m(u,c),q(u,o,c),i=!0},p(u,[c]){let h=a;a=d(u,c),a===h?s[a].p(u,c):(_e(),R(s[h],1,1,()=>{s[h]=null}),Ee(),r=s[a],r?r.p(u,c):(r=s[a]=l[a](u),r.c()),T(r,1),r.m(o.parentNode,o))},i(u){i||(T(e.$$.fragment,u),T(r),i=!0)},o(u){R(e.$$.fragment,u),R(r),i=!1},d(u){Q(e,u),u&&O(t),s[a].d(u),u&&O(o)}}}function Mv(n,e,t){let a,r,o,{calendar:i}=e,l=ye(),s=m=>{l("new-item",m)},d=m=>{t(0,r=r.filter(p=>p.id!==m.id)),l("edit-events",r)},u=m=>a.find(({id:p})=>p==m),c=m=>s(m),h=m=>d(m);return n.$$set=m=>{"calendar"in m&&t(5,i=m.calendar)},n.$$.update=()=>{if(n.$$.dirty&32){e:a=i.categories}if(n.$$.dirty&32){e:t(0,r=i.events)}if(n.$$.dirty&32){e:t(1,o=i.static.months)}if(n.$$.dirty&1){e:r.sort((m,p)=>m.date.year!=p.date.year?m.date.year-p.date.year:m.date.month!=p.date.month?m.date.month-p.date.month:m.date.day-p.date.day)}},[r,o,s,d,u,i,c,h]}var kc=class extends ie{constructor(e){super();oe(this,e,Mv,Nv,ee,{calendar:5})}},xc=kc;var _a=Te(require("obsidian"));var In="#808080",Ie=["M6.5,16a9.5,9.5 0 1,0 19,0a9.5,9.5 0 1,0 -19,0","M19.79,6C22.25,7.2,25,9.92,25,16s-2.75,8.8-5.21,10a10.59,10.59,0,0,1-3.79.71A10.72,10.72,0,0,1,16,5.28,10.59,10.59,0,0,1,19.79,6Z","M19.43,5.86C21.79,7,24.5,9.7,24.5,16s-2.71,9-5.07,10.14a10.55,10.55,0,0,1-3.43.58A10.72,10.72,0,0,1,16,5.28,10.55,10.55,0,0,1,19.43,5.86Z","M17.87,5.46C20.23,6.34,24,8.88,24,16.17c0,6.85-3.33,9.36-5.69,10.29a11,11,0,0,1-2.31.26A10.72,10.72,0,0,1,16,5.28,10.49,10.49,0,0,1,17.87,5.46Z","M17.79,5.45C20,6.3,23.5,8.77,23.5,15.88c0,7.37-3.75,9.87-5.95,10.71a9.92,9.92,0,0,1-1.55.13A10.72,10.72,0,0,1,16,5.28,10.54,10.54,0,0,1,17.79,5.45Z","M17.35,5.38c1.9.79,5.15,3.25,5.15,10.72,0,7.25-3.06,9.68-5,10.5a10.87,10.87,0,0,1-1.52.12A10.72,10.72,0,0,1,16,5.28,10.1,10.1,0,0,1,17.35,5.38Z","M17.05,5.34c1.6.75,4.45,3.17,4.45,10.79,0,7.39-2.68,9.76-4.3,10.52a11.9,11.9,0,0,1-1.2.07A10.72,10.72,0,0,1,16,5.28,9,9,0,0,1,17.05,5.34Z","M16.85,5.33c1.3.74,3.65,3.12,3.65,10.67s-2.35,9.93-3.65,10.67c-.28,0-.56,0-.85,0A10.72,10.72,0,0,1,16,5.28,7.92,7.92,0,0,1,16.85,5.33Z","M16.46,5.31c.95.78,3,3.34,3,10.69s-2.09,9.91-3,10.69l-.46,0A10.72,10.72,0,0,1,16,5.28Z","M16.29,5.3c.65.8,2.21,3.48,2.21,10.78S17,25.91,16.3,26.7l-.3,0A10.72,10.72,0,0,1,16,5.28Z","M16.13,5.29c.37.89,1.37,3.92,1.37,10.79s-1,9.76-1.36,10.63H16A10.72,10.72,0,0,1,16,5.28Z","M16,5.29A85.5,85.5,0,0,1,16.5,16,85.5,85.5,0,0,1,16,26.71h0A10.72,10.72,0,0,1,16,5.28Z","M16,26.72A10.72,10.72,0,0,1,16,5.28Z","M15.5,16A85.59,85.59,0,0,0,16,26.72,10.72,10.72,0,0,1,16,5.28,85.59,85.59,0,0,0,15.5,16Z","M14.5,16.08c0,6.84,1,9.77,1.36,10.63a10.71,10.71,0,0,1,0-21.42C15.5,6.17,14.5,9.2,14.5,16.08Z","M15.7,26.7a10.7,10.7,0,0,1,0-21.4c-.65.8-2.21,3.47-2.21,10.78S15,25.92,15.7,26.7Z","M15.55,26.7a10.71,10.71,0,0,1,0-21.4c-1,.78-3.05,3.34-3.05,10.7S14.6,25.92,15.55,26.7Z","M15.16,26.68a10.71,10.71,0,0,1,0-21.36C13.85,6.06,11.5,8.43,11.5,16S13.85,25.94,15.16,26.68Z","M14.81,26.65A10.72,10.72,0,0,1,15,5.33c-1.59.76-4.45,3.17-4.45,10.8C10.5,23.53,13.19,25.9,14.81,26.65Z","M14.49,26.6a10.71,10.71,0,0,1,.17-21.23c-1.9.8-5.16,3.24-5.16,10.73C9.5,23.37,12.57,25.79,14.49,26.6Z","M14.46,26.6a10.71,10.71,0,0,1-.24-21.16C12,6.29,8.5,8.76,8.5,15.88,8.5,23.26,12.27,25.76,14.46,26.6Z","M13.72,26.47a10.71,10.71,0,0,1,.43-21C11.78,6.33,8,8.87,8,16.17,8,23,11.35,25.55,13.72,26.47Z","M12.6,26.19a10.73,10.73,0,0,1,0-20.35C10.23,7,7.5,9.67,7.5,16s2.73,9,5.1,10.16Z","M12.23,26a10.7,10.7,0,0,1,0-20C9.77,7.19,7,9.9,7,16S9.77,24.81,12.23,26Z",null,"M19.77,26C22.23,24.81,25,22.1,25,16S22.23,7.19,19.77,6a10.7,10.7,0,0,1,0,20Z","M19.4,26.16C21.77,25,24.5,22.33,24.5,16S21.77,7,19.4,5.84a10.71,10.71,0,0,1,0,20.32Z","M18.28,26.47C20.65,25.55,24,23,24,16.17c0-7.3-3.78-9.84-6.15-10.72a10.71,10.71,0,0,1,.43,21Z","M17.54,26.6c2.19-.84,6-3.34,6-10.72,0-7.12-3.5-9.59-5.72-10.44a10.71,10.71,0,0,1-.24,21.16Z","M17.51,26.6c1.92-.81,5-3.23,5-10.5,0-7.49-3.26-9.93-5.16-10.73a10.71,10.71,0,0,1,.17,21.23Z","M17.19,26.65c1.62-.75,4.31-3.12,4.31-10.52,0-7.63-2.86-10-4.45-10.8a10.72,10.72,0,0,1,.14,21.32Z","M16.84,26.68c1.31-.74,3.66-3.11,3.66-10.68S18.15,6.06,16.84,5.32a10.71,10.71,0,0,1,0,21.36Z","M16.45,26.7c.95-.78,3.05-3.34,3.05-10.7S17.4,6.08,16.45,5.3a10.71,10.71,0,0,1,0,21.4Z","M16.3,26.7c.67-.78,2.2-3.37,2.2-10.62S16.94,6.1,16.29,5.3a10.7,10.7,0,0,1,0,21.4Z","M16.14,26.71c.37-.86,1.36-3.79,1.36-10.63s-1-9.91-1.37-10.79a10.71,10.71,0,0,1,0,21.42Z","M16,26.72A85.59,85.59,0,0,0,16.5,16,85.59,85.59,0,0,0,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72V5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72h0A85.59,85.59,0,0,1,15.5,16,85.59,85.59,0,0,1,16,5.28h0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72h-.14c-.37-.86-1.36-3.79-1.36-10.63s1-9.91,1.37-10.79H16a10.72,10.72,0,0,1,0,21.44Z","M16,26.72l-.3,0c-.67-.78-2.2-3.37-2.2-10.62s1.56-10,2.21-10.78l.29,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72l-.45,0c-1-.78-3.05-3.34-3.05-10.7s2.1-9.92,3.05-10.7l.45,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72c-.28,0-.56,0-.84,0C13.85,25.94,11.5,23.57,11.5,16s2.35-9.94,3.66-10.68c.28,0,.56,0,.84,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a11.7,11.7,0,0,1-1.19-.07c-1.62-.75-4.31-3.12-4.31-10.52,0-7.63,2.86-10,4.45-10.8.35,0,.7,0,1.05,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a10.85,10.85,0,0,1-1.51-.12c-1.92-.81-5-3.23-5-10.5,0-7.49,3.26-9.93,5.16-10.73A11.9,11.9,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a11.16,11.16,0,0,1-1.54-.12c-2.19-.84-6-3.34-6-10.72,0-7.12,3.5-9.59,5.72-10.44A10.43,10.43,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a10.69,10.69,0,0,1-2.28-.25C11.35,25.55,8,23,8,16.17c0-7.3,3.78-9.84,6.15-10.72A11.26,11.26,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a10.63,10.63,0,0,1-3.4-.56C10.23,25,7.5,22.33,7.5,16s2.73-9,5.1-10.16A10.72,10.72,0,1,1,16,26.72Z","M16,26.72a10.52,10.52,0,0,1-3.77-.7C9.77,24.81,7,22.1,7,16S9.77,7.19,12.23,6A10.52,10.52,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z"],Fc={"New Moon":Ie[0],"New Moon Fading":Ie[1],"New Moon Faded":Ie[2],"Waxing Crescent Rising":Ie[3],"Waxing Crescent Risen":Ie[4],"Waxing Crescent":Ie[6],"Waxing Crescent Fading":Ie[7],"Waxing Crescent Faded":Ie[8],"First Quarter Rising":Ie[9],"First Quarter Risen":Ie[10],"First Quarter":Ie[12],"First Quarter Fading":Ie[13],"First Quarter Faded":Ie[14],"Waxing Gibbous Rising":Ie[15],"Waxing Gibbous Risen":Ie[16],"Waxing Gibbous":Ie[18],"Waxing Gibbous Fading":Ie[19],"Waxing Gibbous Faded":Ie[20],"Full Moon Rising":Ie[21],"Full Moon Risen":Ie[22],"Full Moon":Ie[24],"Full Moon Fading":Ie[25],"Full Moon Faded":Ie[26],"Waning Gibbous Rising":Ie[27],"Waning Gibbous Risen":Ie[28],"Waning Gibbous":Ie[30],"Waning Gibbous Fading":Ie[31],"Waning Gibbous Faded":Ie[32],"Last Quarter Rising":Ie[33],"Last Quarter Risen":Ie[34],"Last Quarter":Ie[36],"Last Quarter Fading":Ie[37],"Last Quarter Faded":Ie[38],"Waning Crescent Rising":Ie[39],"Waning Crescent Risen":Ie[40],"Waning Crescent":Ie[42],"Waning Crescent Fading":Ie[43],"Waning Crescent Faded":Ie[44],"New Moon Rising":Ie[45],"New Moon Risen":Ie[46]},Tc={4:["New Moon","First Quarter","Full Moon","Last Quarter"],8:["New Moon","Waxing Crescent","First Quarter","Waxing Gibbous","Full Moon","Waning Gibbous","Last Quarter","Waning Crescent"],16:["New Moon","New Moon Fading","Waxing Crescent","Waxing Crescent Fading","First Quarter","First Quarter Fading","Waxing Gibbous","Waxing Gibbous Fading","Full Moon","Full Moon Fading","Waning Gibbous","Waning Gibbous Fading","Last Quarter","Last Quarter Fading","Waning Crescent","Waning Crescent Fading"],24:["New Moon","New Moon Fading","Waxing Crescent Rising","Waxing Crescent","Waxing Crescent Fading","First Quarter Rising","First Quarter","First Quarter Fading","Waxing Gibbous Rising","Waxing Gibbous","Waxing Gibbous Fading","Full Moon Rising","Full Moon","Full Moon Fading","Waning Gibbous Rising","Waning Gibbous","Waning Gibbous Fading","Last Quarter Rising","Last Quarter","Last Quarter Fading","Waning Crescent Rising","Waning Crescent","Waning Crescent Fading","New Moon Rising"],40:["New Moon","New Moon Fading","New Moon Faded","Waxing Crescent Rising","Waxing Crescent Risen","Waxing Crescent","Waxing Crescent Fading","Waxing Crescent Faded","First Quarter Rising","First Quarter Risen","First Quarter","First Quarter Fading","First Quarter Faded","Waxing Gibbous Rising","Waxing Gibbous Risen","Waxing Gibbous","Waxing Gibbous Fading","Waxing Gibbous Faded","Full Moon Rising","Full Moon Risen","Full Moon","Full Moon Fading","Full Moon Faded","Waning Gibbous Rising","Waning Gibbous Risen","Waning Gibbous","Waning Gibbous Fading","Waning Gibbous Faded","Last Quarter Rising","Last Quarter Risen","Last Quarter","Last Quarter Fading","Last Quarter Faded","Waning Crescent Rising","Waning Crescent Risen","Waning Crescent","Waning Crescent Fading","Waning Crescent Faded","New Moon Rising","New Moon Risen"]};function Iv(n){se(n,"svelte-1ok7o99",".category.svelte-1ok7o99{display:grid;grid-template-columns:1fr auto auto;align-items:center;gap:0.5rem;padding-top:0.75rem}")}function Sc(n,e,t){let a=n.slice();return a[9]=e[t],a}function Ov(n){let e,t=n[1],a=[];for(let r=0;r<t.length;r+=1)a[r]=Bc(Sc(n,t,r));return{c(){e=E("div");for(let r=0;r<a.length;r+=1)a[r].c();b(e,"class","existing-items")},m(r,o){q(r,e,o);for(let i=0;i<a.length;i+=1)a[i].m(e,null)},p(r,o){if(o&18){t=r[1];let i;for(i=0;i<t.length;i+=1){let l=Sc(r,t,i);a[i]?a[i].p(l,o):(a[i]=Bc(l),a[i].c(),a[i].m(e,null))}for(;i<a.length;i+=1)a[i].d(1);a.length=t.length}},i:U,o:U,d(r){r&&O(e),We(a,r)}}}function qv(n){let e,t;return e=new Pt({props:{message:"Create a new event category to see it here."}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p:U,i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Bc(n){let e,t,a,r,o,i,l,s,d,u,c,h,m;function p(...D){return n[6](n[9],...D)}return{c(){e=E("div"),t=E("div"),r=P(),o=E("div"),i=E("input"),s=P(),d=E("div"),c=P(),b(i,"type","color"),i.value=l=n[9].color,b(o,"class","color"),b(e,"class","category svelte-1ok7o99")},m(D,y){q(D,e,y),w(e,t),w(e,r),w(e,o),w(o,i),w(e,s),w(e,d),w(e,c),h||(m=[ae(a=n[2].call(null,t,n[9])),Y(i,"change",p),ae(u=n[3].call(null,d,n[9]))],h=!0)},p(D,y){n=D,a&&Ve(a.update)&&y&2&&a.update.call(null,n[9]),y&2&&l!==(l=n[9].color)&&(i.value=l),u&&Ve(u.update)&&y&2&&u.update.call(null,n[9])},d(D){D&&O(e),h=!1,de(m)}}}function Rv(n){let e,t,a,r,o,i;e=new Lt({}),e.$on("click",n[5]);let l=[qv,Ov],s=[];function d(u,c){return u[1].length?1:0}return a=d(n,-1),r=s[a]=l[a](n),{c(){te(e.$$.fragment),t=P(),r.c(),o=qe()},m(u,c){X(e,u,c),q(u,t,c),s[a].m(u,c),q(u,o,c),i=!0},p(u,[c]){let h=a;a=d(u,c),a===h?s[a].p(u,c):(_e(),R(s[h],1,1,()=>{s[h]=null}),Ee(),r=s[a],r?r.p(u,c):(r=s[a]=l[a](u),r.c()),T(r,1),r.m(o.parentNode,o))},i(u){i||(T(e.$$.fragment,u),T(r),i=!0)},o(u){R(e.$$.fragment,u),R(r),i=!1},d(u){Q(e,u),u&&O(t),s[a].d(u),u&&O(o)}}}function Lv(n,e,t){let a,r=ye(),{calendar:o}=e,i=(h,m)=>{new _a.TextComponent(h).setValue(m.name).setPlaceholder("Name").onChange(D=>{m.name=D,r("update",m)}).inputEl.setAttr("style","width: 100%;")},l=(h,m)=>{new _a.ExtraButtonComponent(h).setIcon("trash").onClick(()=>{t(1,a=a.filter(p=>p.id!==m.id)),r("delete",m)})},s=(h,m)=>{let{target:p}=h;p instanceof HTMLInputElement&&(m.color=p.value,r("update",m))},d=h=>{new _a.ButtonComponent(h).setTooltip("Add New").setButtonText("+").onClick(async()=>{t(0,o.categories=[...a,{id:He(6),color:In,name:"Category"}],o)}).buttonEl.style.width="100%"},u=()=>t(0,o.categories=[...a,{id:He(6),color:In,name:"Category"}],o),c=(h,m)=>s(m,h);return n.$$set=h=>{"calendar"in h&&t(0,o=h.calendar)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(1,a=o.categories)}},[o,a,i,l,s,u,c]}var Nc=class extends ie{constructor(e){super();oe(this,e,Lv,Rv,ee,{calendar:0},Iv)}},Mc=Nc;var Lo=Te(require("obsidian"));function Pv(n){let e,t,a,r,o,i,l,s;return{c(){e=Ot("svg"),t=Ot("circle"),r=Ot("path"),i=Ot("circle"),b(t,"cx","16"),b(t,"cy","16"),b(t,"r","10"),b(t,"fill",a=n[0].faceColor),b(r,"class","shadow"),b(r,"fill",o=n[0].shadowColor),b(r,"d",n[4]),b(i,"cx","16"),b(i,"cy","16"),b(i,"r","10"),b(i,"fill","none"),b(i,"stroke","#000"),b(i,"stroke-width","2px"),b(e,"class","moon"),b(e,"id",l=n[0].id),b(e,"preserveAspectRatio","xMidYMid"),b(e,"aria-label",s=n[1]?`${n[0].name}
${n[3]}`:null),b(e,"width",n[2]),b(e,"height",n[2]),b(e,"viewBox","0 0 32 32")},m(d,u){q(d,e,u),w(e,t),w(e,r),w(e,i)},p(d,[u]){u&1&&a!==(a=d[0].faceColor)&&b(t,"fill",a),u&1&&o!==(o=d[0].shadowColor)&&b(r,"fill",o),u&16&&b(r,"d",d[4]),u&1&&l!==(l=d[0].id)&&b(e,"id",l),u&11&&s!==(s=d[1]?`${d[0].name}
${d[3]}`:null)&&b(e,"aria-label",s),u&4&&b(e,"width",d[2]),u&4&&b(e,"height",d[2])},i:U,o:U,d(d){d&&O(e)}}}function jv(n,e,t){let a,{moon:r}=e,{label:o=!0}=e,{size:i=28}=e,{phase:l}=e;return n.$$set=s=>{"moon"in s&&t(0,r=s.moon),"label"in s&&t(1,o=s.label),"size"in s&&t(2,i=s.size),"phase"in s&&t(3,l=s.phase)},n.$$.update=()=>{if(n.$$.dirty&8){e:t(4,a=Fc[l])}},[r,o,i,l,a]}var Ic=class extends ie{constructor(e){super();oe(this,e,jv,Pv,ee,{moon:0,label:1,size:2,phase:3})}},yn=Ic;function Vv(n){se(n,"svelte-v24qmo",".moon.svelte-v24qmo{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.setting-item-name.svelte-v24qmo{display:flex;align-items:center}.icons.svelte-v24qmo{display:flex;align-self:flex-start;justify-self:flex-end;align-items:center}.icon.svelte-v24qmo{align-items:center}")}function Oc(n,e,t){let a=n.slice();return a[10]=e[t],a}function Hv(n){let e,t,a=n[2],r=[];for(let i=0;i<a.length;i+=1)r[i]=qc(Oc(n,a,i));let o=i=>R(r[i],1,1,()=>{r[i]=null});return{c(){e=E("div");for(let i=0;i<r.length;i+=1)r[i].c();b(e,"class","existing-items")},m(i,l){q(i,e,l);for(let s=0;s<r.length;s+=1)r[s].m(e,null);t=!0},p(i,l){if(l&76){a=i[2];let s;for(s=0;s<a.length;s+=1){let d=Oc(i,a,s);r[s]?(r[s].p(d,l),T(r[s],1)):(r[s]=qc(d),r[s].c(),T(r[s],1),r[s].m(e,null))}for(_e(),s=a.length;s<r.length;s+=1)o(s);Ee()}},i(i){if(!t){for(let l=0;l<a.length;l+=1)T(r[l]);t=!0}},o(i){r=r.filter(Boolean);for(let l=0;l<r.length;l+=1)R(r[l]);t=!1},d(i){i&&O(e),We(r,i)}}}function Wv(n){let e,t;return e=new Pt({props:{message:"Create a new moon to see it here."}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p:U,i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function qc(n){let e,t,a,r,o,i=n[10].name+"",l,s,d,u,c,h=n[10].cycle+"",m,p,D,y,A,_,C,B,z,L,N,j,F;r=new yn({props:{moon:n[10],phase:"First Quarter",label:!1,size:20}});function W(){return n[8](n[10])}function I(){return n[9](n[10])}return{c(){e=E("div"),t=E("div"),a=E("span"),te(r.$$.fragment),o=P(),l=me(i),s=P(),d=E("div"),u=E("div"),c=me("Cycle: "),m=me(h),p=me(" days"),D=P(),y=E("div"),A=E("div"),C=P(),B=E("div"),L=P(),b(a,"class","setting-item-name svelte-v24qmo"),b(u,"class","date"),b(d,"class","setting-item-description"),b(t,"class","moon-info"),b(A,"class","icon svelte-v24qmo"),b(B,"class","icon svelte-v24qmo"),b(y,"class","icons svelte-v24qmo"),b(e,"class","moon svelte-v24qmo")},m(G,ue){q(G,e,ue),w(e,t),w(t,a),X(r,a,null),w(a,o),w(a,l),w(t,s),w(t,d),w(d,u),w(u,c),w(u,m),w(u,p),w(e,D),w(e,y),w(y,A),w(y,C),w(y,B),w(e,L),N=!0,j||(F=[ae(_=n[5].call(null,A)),Y(A,"click",W),ae(z=n[4].call(null,B)),Y(B,"click",I)],j=!0)},p(G,ue){n=G;let we={};ue&4&&(we.moon=n[10]),r.$set(we),(!N||ue&4)&&i!==(i=n[10].name+"")&&De(l,i),(!N||ue&4)&&h!==(h=n[10].cycle+"")&&De(m,h)},i(G){N||(T(r.$$.fragment,G),N=!0)},o(G){R(r.$$.fragment,G),N=!1},d(G){G&&O(e),Q(r),j=!1,de(F)}}}function Gv(n){let e,t,a,r,o,i,l,s;e=new bn({props:{name:"Display Moons",desc:"Display moons by default when viewing this calendar.",value:n[1]}}),e.$on("click",n[7]),a=new Lt({});let d=[Wv,Hv],u=[];function c(h,m){return h[2].length?1:0}return o=c(n,-1),i=u[o]=d[o](n),{c(){te(e.$$.fragment),t=P(),te(a.$$.fragment),r=P(),i.c(),l=qe()},m(h,m){X(e,h,m),q(h,t,m),X(a,h,m),q(h,r,m),u[o].m(h,m),q(h,l,m),s=!0},p(h,[m]){let p={};m&2&&(p.value=h[1]),e.$set(p);let D=o;o=c(h,m),o===D?u[o].p(h,m):(_e(),R(u[D],1,1,()=>{u[D]=null}),Ee(),i=u[o],i?i.p(h,m):(i=u[o]=d[o](h),i.c()),T(i,1),i.m(l.parentNode,l))},i(h){s||(T(e.$$.fragment,h),T(a.$$.fragment,h),T(i),s=!0)},o(h){R(e.$$.fragment,h),R(a.$$.fragment,h),R(i),s=!1},d(h){Q(e,h),h&&O(t),Q(a,h),h&&O(r),u[o].d(h),h&&O(l)}}}function Uv(n,e,t){let a,r,{calendar:o}=e,i=ye(),l=m=>{let p=new Lo.ExtraButtonComponent(m).setIcon("trash").setTooltip("Delete")},s=m=>{new Lo.ExtraButtonComponent(m).setIcon("pencil").setTooltip("Edit")},d=m=>{t(0,o.static.moons=o.static.moons.filter(p=>p.id!==m.id),o)},u=()=>t(0,o.static.displayMoons=!o.static.displayMoons,o),c=m=>i("new-item",m),h=m=>d(m);return n.$$set=m=>{"calendar"in m&&t(0,o=m.calendar)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(2,a=o.static.moons)}if(n.$$.dirty&1){e:t(1,r=o.static.displayMoons)}},[o,r,a,i,l,s,d,u,c,h]}var Rc=class extends ie{constructor(e){super();oe(this,e,Uv,Gv,ee,{calendar:0},Vv)}},Lc=Rc;var Po=Te(require("obsidian"));function zv(n){se(n,"svelte-1rh93fc",".leapday.svelte-1rh93fc.svelte-1rh93fc{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.leapday-info.svelte-1rh93fc.svelte-1rh93fc{width:100%}.icons.svelte-1rh93fc.svelte-1rh93fc{display:flex;align-self:center;justify-self:flex-end;align-items:center}.leapday.svelte-1rh93fc .icon.svelte-1rh93fc{align-items:center}")}function Yv(n){let e,t,a,r=n[0].name+"",o,i,l,s,d,u,c,h,m,p,D,y,A;return{c(){e=E("div"),t=E("div"),a=E("span"),o=me(r),i=P(),l=E("div"),s=me(n[1]),d=P(),u=E("div"),c=E("div"),m=P(),p=E("div"),b(a,"class","setting-item-name"),b(l,"class","setting-item-description"),b(t,"class","leapday-info svelte-1rh93fc"),b(c,"class","icon svelte-1rh93fc"),b(p,"class","icon svelte-1rh93fc"),b(u,"class","icons svelte-1rh93fc"),b(e,"class","leapday svelte-1rh93fc")},m(_,C){q(_,e,C),w(e,t),w(t,a),w(a,o),w(t,i),w(t,l),w(l,s),w(e,d),w(e,u),w(u,c),w(u,m),w(u,p),y||(A=[ae(h=n[4].call(null,c)),Y(c,"click",n[5]),ae(D=n[3].call(null,p)),Y(p,"click",n[6])],y=!0)},p(_,[C]){C&1&&r!==(r=_[0].name+"")&&De(o,r),C&2&&De(s,_[1])},i:U,o:U,d(_){_&&O(e),y=!1,de(A)}}}function Zv(n,e,t){let a,r=ye(),o=u=>{new Po.ExtraButtonComponent(u).setIcon("trash").setTooltip("Delete").extraSettingsEl.setAttr("style","margin-left: 0;")},i=u=>{new Po.ExtraButtonComponent(u).setIcon("pencil").setTooltip("Edit")},{leapday:l}=e,s=()=>r("edit"),d=()=>r("delete");return n.$$set=u=>{"leapday"in u&&t(0,l=u.leapday)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(1,a=da(l))}},[l,a,r,o,i,s,d]}var Pc=class extends ie{constructor(e){super();oe(this,e,Zv,Yv,ee,{leapday:0},zv)}},jc=Pc;function Vc(n,e,t){let a=n.slice();return a[7]=e[t],a}function $v(n){let e,t,a=n[0],r=[];for(let i=0;i<a.length;i+=1)r[i]=Hc(Vc(n,a,i));let o=i=>R(r[i],1,1,()=>{r[i]=null});return{c(){e=E("div");for(let i=0;i<r.length;i+=1)r[i].c();b(e,"class","existing-items")},m(i,l){q(i,e,l);for(let s=0;s<r.length;s+=1)r[s].m(e,null);t=!0},p(i,l){if(l&7){a=i[0];let s;for(s=0;s<a.length;s+=1){let d=Vc(i,a,s);r[s]?(r[s].p(d,l),T(r[s],1)):(r[s]=Hc(d),r[s].c(),T(r[s],1),r[s].m(e,null))}for(_e(),s=a.length;s<r.length;s+=1)o(s);Ee()}},i(i){if(!t){for(let l=0;l<a.length;l+=1)T(r[l]);t=!0}},o(i){r=r.filter(Boolean);for(let l=0;l<r.length;l+=1)R(r[l]);t=!1},d(i){i&&O(e),We(r,i)}}}function Kv(n){let e,t;return e=new Pt({props:{message:"Create a new leap day to see it here."}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p:U,i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Hc(n){let e,t;function a(){return n[4](n[7])}function r(){return n[5](n[7])}return e=new jc({props:{leapday:n[7]}}),e.$on("edit",a),e.$on("delete",r),{c(){te(e.$$.fragment)},m(o,i){X(e,o,i),t=!0},p(o,i){n=o;let l={};i&1&&(l.leapday=n[7]),e.$set(l)},i(o){t||(T(e.$$.fragment,o),t=!0)},o(o){R(e.$$.fragment,o),t=!1},d(o){Q(e,o)}}}function Qv(n){let e,t,a,r,o,i;e=new Lt({});let l=[Kv,$v],s=[];function d(u,c){return u[0].length?1:0}return a=d(n,-1),r=s[a]=l[a](n),{c(){te(e.$$.fragment),t=P(),r.c(),o=qe()},m(u,c){X(e,u,c),q(u,t,c),s[a].m(u,c),q(u,o,c),i=!0},p(u,[c]){let h=a;a=d(u,c),a===h?s[a].p(u,c):(_e(),R(s[h],1,1,()=>{s[h]=null}),Ee(),r=s[a],r?r.p(u,c):(r=s[a]=l[a](u),r.c()),T(r,1),r.m(o.parentNode,o))},i(u){i||(T(e.$$.fragment,u),T(r),i=!0)},o(u){R(e.$$.fragment,u),R(r),i=!1},d(u){Q(e,u),u&&O(t),s[a].d(u),u&&O(o)}}}function Xv(n,e,t){let a,{calendar:r}=e,o=ye(),i=u=>{o("new-item",u)},l=u=>{t(0,a=a.filter(c=>c.id!==u.id)),o("edit-leapdays",a)},s=u=>i(u),d=u=>l(u);return n.$$set=u=>{"calendar"in u&&t(3,r=u.calendar)},n.$$.update=()=>{if(n.$$.dirty&8){e:t(0,a=r.static.leapDays)}},[a,i,l,r,s,d]}var Wc=class extends ie{constructor(e){super();oe(this,e,Xv,Qv,ee,{calendar:3})}},Gc=Wc;function Jv(n){se(n,"svelte-1o9isn5",".fantasy-calendar-creator.svelte-1o9isn5,.inherit.svelte-1o9isn5{background-color:inherit}.fantasy-calendar-creator-header.svelte-1o9isn5{margin:0}.top-nav.svelte-1o9isn5{position:sticky;top:0px;padding:10px 0px;background-color:inherit;z-index:1}.icons.svelte-1o9isn5{display:flex;justify-content:space-between}.back.svelte-1o9isn5{width:min-content}.back.svelte-1o9isn5 .clickable-icon{margin-left:0}")}function zc(n){let e,t,a,r,o,i,l,s,d,u,c,h,m,p,D,y,A,_,C,B,z,L,N,j,F,W,I,G,ue,we,ge,Ce,K,Z,he,Se;return y=new mn({props:{name:"Basic Info",$$slots:{default:[e0]},$$scope:{ctx:n}}}),_=new mn({props:{name:"Weekdays",$$slots:{default:[t0]},$$scope:{ctx:n}}}),B=new mn({props:{name:"Months",$$slots:{default:[n0]},$$scope:{ctx:n}}}),L=new mn({props:{name:"Years",$$slots:{default:[a0]},$$scope:{ctx:n}}}),j=new mn({props:{name:"Current Date",$$slots:{default:[r0]},$$scope:{ctx:n}}}),W=new mn({props:{name:"Events",$$slots:{default:[i0]},$$scope:{ctx:n}}}),G=new mn({props:{name:"Categories",$$slots:{default:[o0]},$$scope:{ctx:n}}}),we=new mn({props:{name:"Moons",$$slots:{default:[s0]},$$scope:{ctx:n}}}),Ce=new mn({props:{name:"Leap Days",$$slots:{default:[l0]},$$scope:{ctx:n}}}),{c(){e=E("div"),t=E("div"),a=E("div"),r=E("div"),i=P(),l=E("div"),d=P(),u=E("h3"),u.textContent="Calendar Creator",c=P(),h=E("div"),p=P(),D=E("div"),te(y.$$.fragment),A=P(),te(_.$$.fragment),C=P(),te(B.$$.fragment),z=P(),te(L.$$.fragment),N=P(),te(j.$$.fragment),F=P(),te(W.$$.fragment),I=P(),te(G.$$.fragment),ue=P(),te(we.$$.fragment),ge=P(),te(Ce.$$.fragment),b(r,"class","back svelte-1o9isn5"),b(l,"class","cancel"),b(a,"class","icons svelte-1o9isn5"),b(u,"class","fantasy-calendar-creator-header svelte-1o9isn5"),b(t,"class","top-nav svelte-1o9isn5"),b(D,"class","fantasy-creator-app"),b(e,"class","inherit svelte-1o9isn5")},m(ce,xe){q(ce,e,xe),w(e,t),w(t,a),w(a,r),w(a,i),w(a,l),w(t,d),w(t,u),w(e,c),w(e,h),w(e,p),w(e,D),X(y,D,null),w(D,A),X(_,D,null),w(D,C),X(B,D,null),w(D,z),X(L,D,null),w(D,N),X(j,D,null),w(D,F),X(W,D,null),w(D,I),X(G,D,null),w(D,ue),X(we,D,null),w(D,ge),X(Ce,D,null),Z=!0,he||(Se=[ae(o=n[6].call(null,r)),Y(r,"click",n[9]),ae(s=n[7].call(null,l)),Y(l,"click",n[10]),ae(m=n[8].call(null,h)),Y(D,"scroll",n[11]),Y(e,"introend",n[12]),Y(e,"outroend",n[13])],he=!0)},p(ce,xe){n=ce;let ze={};xe&16777217&&(ze.$$scope={dirty:xe,ctx:n}),y.$set(ze);let tt={};xe&16777217&&(tt.$$scope={dirty:xe,ctx:n}),_.$set(tt);let je={};xe&16777217&&(je.$$scope={dirty:xe,ctx:n}),B.$set(je);let ft={};xe&16777219&&(ft.$$scope={dirty:xe,ctx:n}),L.$set(ft);let Bt={};xe&16777217&&(Bt.$$scope={dirty:xe,ctx:n}),j.$set(Bt);let ht={};xe&16777217&&(ht.$$scope={dirty:xe,ctx:n}),W.$set(ht);let Et={};xe&16777217&&(Et.$$scope={dirty:xe,ctx:n}),G.$set(Et);let kt={};xe&16777217&&(kt.$$scope={dirty:xe,ctx:n}),we.$set(kt);let Vt={};xe&16777217&&(Vt.$$scope={dirty:xe,ctx:n}),Ce.$set(Vt)},i(ce){Z||(T(y.$$.fragment,ce),T(_.$$.fragment,ce),T(B.$$.fragment,ce),T(L.$$.fragment,ce),T(j.$$.fragment,ce),T(W.$$.fragment,ce),T(G.$$.fragment,ce),T(we.$$.fragment,ce),T(Ce.$$.fragment,ce),qt(()=>{K||(K=go(e,yo,{x:n[3]},!0)),K.run(1)}),Z=!0)},o(ce){R(y.$$.fragment,ce),R(_.$$.fragment,ce),R(B.$$.fragment,ce),R(L.$$.fragment,ce),R(j.$$.fragment,ce),R(W.$$.fragment,ce),R(G.$$.fragment,ce),R(we.$$.fragment,ce),R(Ce.$$.fragment,ce),K||(K=go(e,yo,{x:n[3]},!1)),K.run(0),Z=!1},d(ce){ce&&O(e),Q(y),Q(_),Q(B),Q(L),Q(j),Q(W),Q(G),Q(we),Q(Ce),ce&&K&&K.end(),he=!1,de(Se)}}}function e0(n){let e,t;return e=new mu({props:{calendar:n[0]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1&&(o.calendar=a[0]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function t0(n){let e,t;return e=new ic({props:{calendar:n[0]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1&&(o.calendar=a[0]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function n0(n){let e,t;return e=new fc({props:{calendar:n[0]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1&&(o.calendar=a[0]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function a0(n){let e,t;return e=new vc({props:{calendar:n[0],app:n[1].app}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1&&(o.calendar=a[0]),r&2&&(o.app=a[1].app),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function r0(n){let e,t;return e=new su({props:{calendar:n[0]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1&&(o.calendar=a[0]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function i0(n){let e,t;return e=new xc({props:{calendar:n[0]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1&&(o.calendar=a[0]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function o0(n){let e,t;return e=new Mc({props:{calendar:n[0]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1&&(o.calendar=a[0]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function s0(n){let e,t;return e=new Lc({props:{calendar:n[0]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1&&(o.calendar=a[0]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function l0(n){let e,t;return e=new Gc({props:{calendar:n[0]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1&&(o.calendar=a[0]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function u0(n){let e,t,a=n[2]&&zc(n);return{c(){e=E("div"),a&&a.c(),b(e,"class","fantasy-calendar-creator svelte-1o9isn5")},m(r,o){q(r,e,o),a&&a.m(e,null),n[14](e),t=!0},p(r,[o]){r[2]?a?(a.p(r,o),o&4&&T(a,1)):(a=zc(r),a.c(),T(a,1),a.m(e,null)):a&&(_e(),R(a,1,1,()=>{a=null}),Ee())},i(r){t||(T(a),t=!0)},o(r){R(a),t=!1},d(r){r&&O(e),a&&a.d(),n[14](null)}}}function c0(n,e,t){let a=!1,r,o;Gn(()=>{t(3,r=o.clientWidth),t(2,a=!0)});let i=ye(),{calendar:l}=e,{plugin:s}=e,d=I=>{new On.ExtraButtonComponent(I).setIcon("left-arrow-with-tail").setTooltip("Save and exit")},u=I=>{new On.ExtraButtonComponent(I).setIcon("cross").setTooltip("Exit without saving")},c=I=>{let G=I.createDiv("fantasy-calendar-apply-preset");new On.Setting(G).setName("Apply Preset").setDesc("Apply a common fantasy calendar as a preset.").addButton(ue=>{ue.setCta().setButtonText("Choose Preset").onClick(()=>{let we=new ii(s.app);we.onClose=()=>{if(!!we.saved&&(t(0,l={...(0,Uc.default)(we.preset),id:l.id}),l?.name=="Gregorian Calendar")){let ge=new Date;t(0,l.current={year:ge.getFullYear(),month:ge.getMonth(),day:ge.getDate()},l)}},we.open()})})},h=I=>{new On.ExtraButtonComponent(I).setIcon("info")},m=I=>{new On.ExtraButtonComponent(I).setIcon("info")},p=I=>{},D=I=>{},y=I=>{},A=I=>{},_=I=>{},C=I=>{new On.ExtraButtonComponent(I).setIcon("fc-moon")},B,z=()=>t(2,a=!1),L=()=>t(2,a=!1),N=I=>console.log(I),j=()=>i("flown"),F=()=>i("exit");function W(I){Fn[I?"unshift":"push"](()=>{o=I,t(4,o)})}return n.$$set=I=>{"calendar"in I&&t(0,l=I.calendar),"plugin"in I&&t(1,s=I.plugin)},n.$$.update=()=>{if(n.$$.dirty&1){e:window.calendar=l}},[l,s,a,r,o,i,d,u,c,z,L,N,j,F,W]}var Yc=class extends ie{constructor(e){super();oe(this,e,c0,u0,ee,{calendar:0,plugin:1},Jv)}},Zc=Yc;var qn=Te(require("obsidian"));var $c=Te(require("obsidian"));function d0(n){se(n,"svelte-lbt0gy",".add-new.svelte-lbt0gy{padding-top:0.75rem;padding-bottom:0.75rem;display:flex;width:100%}")}var f0=n=>({}),Kc=n=>({});function h0(n){let e,t,a,r,o,i,l,s,d,u,c,h,m,p=n[6]["pre-add"],D=Pa(p,n,n[5],Kc),y=n[6].default,A=Pa(y,n,n[5],null);return{c(){e=E("details"),t=E("summary"),a=E("h4"),r=me(n[0]),o=P(),D&&D.c(),i=P(),l=E("div"),d=P(),u=E("div"),A&&A.c(),b(l,"class","add-new svelte-lbt0gy"),b(u,"class","fantasy-calendar-container"),e.open=n[1]},m(_,C){q(_,e,C),w(e,t),w(t,a),w(a,r),w(e,o),D&&D.m(e,null),w(e,i),w(e,l),w(e,d),w(e,u),A&&A.m(u,null),c=!0,h||(m=ae(s=n[2].call(null,l)),h=!0)},p(_,[C]){(!c||C&1)&&De(r,_[0]),D&&D.p&&(!c||C&32)&&Va(D,p,_,_[5],c?ja(p,_[5],C,f0):Ha(_[5]),Kc),A&&A.p&&(!c||C&32)&&Va(A,y,_,_[5],c?ja(y,_[5],C,null):Ha(_[5]),null),(!c||C&2)&&(e.open=_[1])},i(_){c||(T(D,_),T(A,_),c=!0)},o(_){R(D,_),R(A,_),c=!1},d(_){_&&O(e),D&&D.d(_),A&&A.d(_),h=!1,m()}}}function p0(n,e,t){let{$$slots:a={},$$scope:r}=e,o=ye(),{label:i}=e,{open:l=!1}=e,{disabled:s=!1}=e,d,u=c=>{t(4,d=new $c.ButtonComponent(c).setTooltip("Add New").setButtonText("+").setDisabled(s).onClick(async()=>{o("new-item")})),t(4,d.buttonEl.style.width="100%",d)};return n.$$set=c=>{"label"in c&&t(0,i=c.label),"open"in c&&t(1,l=c.open),"disabled"in c&&t(3,s=c.disabled),"$$scope"in c&&t(5,r=c.$$scope)},n.$$.update=()=>{if(n.$$.dirty&24){e:d&&d.setDisabled(s)}},[i,l,u,s,d,r,a]}var Qc=class extends ie{constructor(e){super();oe(this,e,p0,h0,ee,{label:0,open:1,disabled:3},d0)}},jt=Qc;function m0(n){se(n,"svelte-1xaj2n2",".overflow.svelte-1xaj2n2.svelte-1xaj2n2{padding-top:0.75rem}.weekday.svelte-1xaj2n2.svelte-1xaj2n2{display:grid;grid-template-columns:auto 1fr auto;align-items:center;justify-content:space-between;gap:1rem}.weekday.svelte-1xaj2n2 .icon.svelte-1xaj2n2{align-items:center}.weekday.svelte-1xaj2n2.svelte-1xaj2n2{margin-top:0.5rem}")}function Xc(n,e,t){let a=n.slice();return a[17]=e[t],a}function Jc(n,e,t){let a=n.slice();return a[14]=e[t],a[16]=t,a}function g0(n){let e,t=[],a=new Map,r,o,i,l=n[2],s=d=>d[17].id;for(let d=0;d<l.length;d+=1){let u=Xc(n,l,d),c=s(u);a.set(c,t[d]=ed(c,u))}return{c(){e=E("div");for(let d=0;d<t.length;d+=1)t[d].c();b(e,"class","existing-items")},m(d,u){q(d,e,u);for(let c=0;c<t.length;c+=1)t[c].m(e,null);o||(i=[ae(r=en.call(null,e,{items:n[2],flipDurationMs:jo,dragDisabled:n[3]})),Y(e,"consider",n[10]),Y(e,"finalize",n[11])],o=!0)},p(d,u){if(u&516){l=d[2];for(let c=0;c<t.length;c+=1)t[c].r();t=Kt(t,u,s,1,d,l,a,e,Tn,ed,null,Xc);for(let c=0;c<t.length;c+=1)t[c].a()}r&&Ve(r.update)&&u&12&&r.update.call(null,{items:d[2],flipDurationMs:jo,dragDisabled:d[3]})},d(d){d&&O(e);for(let u=0;u<t.length;u+=1)t[u].d();o=!1,de(i)}}}function y0(n){let e;return{c(){e=E("div"),e.innerHTML="<span>Create a new weekday to see it here.</span>",b(e,"class","existing-items")},m(t,a){q(t,e,a)},p:U,d(t){t&&O(e)}}}function ed(n,e){let t,a,r,o,i,l,s,d,u,c,h,m=U,p,D;return{key:n,first:null,c(){t=E("div"),a=E("div"),o=P(),i=E("div"),s=P(),d=E("div"),c=P(),b(a,"class","icon svelte-1xaj2n2"),b(d,"class","icon svelte-1xaj2n2"),b(t,"class","weekday svelte-1xaj2n2"),this.first=t},m(y,A){q(y,t,A),w(t,a),w(t,o),w(t,i),w(t,s),w(t,d),w(t,c),p||(D=[ae(r=e[5].call(null,a)),Y(a,"mousedown",e[9]),Y(a,"touchstart",e[9]),ae(l=e[7].call(null,i,e[17])),ae(u=e[6].call(null,d,e[17]))],p=!0)},p(y,A){e=y,l&&Ve(l.update)&&A&4&&l.update.call(null,e[17]),u&&Ve(u.update)&&A&4&&u.update.call(null,e[17])},r(){h=t.getBoundingClientRect()},f(){$t(t),m()},a(){m(),m=Zt(t,h,Qt,{duration:jo})},d(y){y&&O(t),p=!1,de(D)}}}function v0(n){let e;function t(o,i){return o[2].length?g0:y0}let a=t(n,-1),r=a(n);return{c(){r.c(),e=qe()},m(o,i){r.m(o,i),q(o,e,i)},p(o,i){a===(a=t(o,i))&&r?r.p(o,i):(r.d(1),r=a(o),r&&(r.c(),r.m(e.parentNode,e)))},d(o){r.d(o),o&&O(e)}}}function td(n){let e,t,a,r,o,i,l,s,d,u=n[2],c=[];for(let h=0;h<u.length;h+=1)c[h]=nd(Jc(n,u,h));return{c(){e=E("div"),t=E("div"),a=E("div"),a.innerHTML=`<div class="setting-item-name">First Day</div> 
                        <div class="setting-item-description">This only effects which day of the week the first
                            year starts on.</div>`,r=P(),o=E("div"),i=E("select");for(let h=0;h<c.length;h+=1)c[h].c();b(a,"class","setting-item-info"),b(i,"class","dropdown"),b(i,"aria-label",l=n[1]?void 0:"Cannot be modified without overflow."),n[0]===void 0&&qt(()=>n[12].call(i)),b(o,"class","setting-item-control"),b(t,"class","setting-item"),b(e,"class","first-weekday")},m(h,m){q(h,e,m),w(e,t),w(t,a),w(t,r),w(t,o),w(o,i);for(let p=0;p<c.length;p+=1)c[p].m(i,null);Yt(i,n[0]),s||(d=Y(i,"change",n[12]),s=!0)},p(h,m){if(m&7){u=h[2];let p;for(p=0;p<u.length;p+=1){let D=Jc(h,u,p);c[p]?c[p].p(D,m):(c[p]=nd(D),c[p].c(),c[p].m(i,null))}for(;p<c.length;p+=1)c[p].d(1);c.length=u.length}m&2&&l!==(l=h[1]?void 0:"Cannot be modified without overflow.")&&b(i,"aria-label",l),m&1&&Yt(i,h[0])},d(h){h&&O(e),We(c,h),s=!1,d()}}}function nd(n){let e,t=(n[14].name??"")+"",a,r,o,i;return{c(){e=E("option"),a=me(t),e.disabled=r=!n[1],e.__value=o=n[16],e.value=e.__value,e.selected=i=n[16]==n[0]},m(l,s){q(l,e,s),w(e,a)},p(l,s){s&4&&t!==(t=(l[14].name??"")+"")&&De(a,t),s&2&&r!==(r=!l[1])&&(e.disabled=r),s&1&&i!==(i=l[16]==l[0])&&(e.selected=i)},d(l){l&&O(e)}}}function b0(n){let e,t,a,r,o,i,l=n[2].length&&td(n);return{c(){e=E("div"),a=P(),l&&l.c(),r=qe(),b(e,"class","overflow svelte-1xaj2n2")},m(s,d){q(s,e,d),q(s,a,d),l&&l.m(s,d),q(s,r,d),o||(i=ae(t=n[8].call(null,e)),o=!0)},p(s,d){s[2].length?l?l.p(s,d):(l=td(s),l.c(),l.m(r.parentNode,r)):l&&(l.d(1),l=null)},d(s){s&&O(e),s&&O(a),l&&l.d(s),s&&O(r),o=!1,i()}}}function w0(n){let e,t;return e=new jt({props:{label:"Weekdays",$$slots:{"pre-add":[b0],default:[v0]},$$scope:{ctx:n}}}),e.$on("new-item",n[4]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,[r]){let o={};r&1048591&&(o.$$scope={dirty:r,ctx:a}),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}var jo=300;function D0(n,e,t){let{firstWeekday:a=0}=e,{overflow:r=!0}=e,o=()=>{t(2,D=[...D,{type:"day",name:null,id:He(6)}])},i=A=>{(0,qn.setIcon)(A,"fantasy-calendar-grip")},l=(A,_)=>{new qn.ExtraButtonComponent(A).setIcon("trash").onClick(()=>t(2,D=D.filter(C=>C.id!==_.id)))},s=(A,_)=>{new qn.TextComponent(A).setValue(_.name).setPlaceholder("Name").onChange(B=>{_.name=B,p("weekday-update",D),t(2,D)}).inputEl.setAttr("style","width: 100%;")},d=A=>{new qn.Setting(A).setName("Overflow Weeks").setDesc("Turn this off to make each month start on the first of the week.").addToggle(_=>{_.setValue(r).onChange(C=>{t(1,r=C)})})};function u(A){A.preventDefault(),t(3,c=!1)}let c=!1;function h(A){let{items:_,info:{source:C,trigger:B}}=A.detail;t(2,D=_),C===Ue.KEYBOARD&&B===Qe.DRAG_STOPPED&&t(3,c=!0)}function m(A){let{items:_,info:{source:C}}=A.detail;t(2,D=_),C===Ue.POINTER&&t(3,c=!0)}let p=ye(),{weekdays:D=[]}=e;function y(){a=xn(this),t(0,a)}return n.$$set=A=>{"firstWeekday"in A&&t(0,a=A.firstWeekday),"overflow"in A&&t(1,r=A.overflow),"weekdays"in A&&t(2,D=A.weekdays)},n.$$.update=()=>{if(n.$$.dirty&4){e:p("weekday-update",D)}if(n.$$.dirty&1){e:p("first-weekday-update",a)}if(n.$$.dirty&2){e:p("overflow-update",r)}},[a,r,D,c,o,i,l,s,d,u,h,m,y]}var ad=class extends ie{constructor(e){super();oe(this,e,D0,w0,ee,{firstWeekday:0,overflow:1,weekdays:2},m0)}},rd=ad;var sd=Te(require("obsidian"));var oi=Te(require("obsidian"));function _0(n){se(n,"svelte-1nt6wkb",".month.svelte-1nt6wkb.svelte-1nt6wkb{display:grid;grid-template-columns:1fr 1fr auto auto;align-items:center;justify-content:space-between;gap:1rem}.month.svelte-1nt6wkb .icon.svelte-1nt6wkb{align-items:center}")}function E0(n){let e,t,a,r,o,i,l,s,d,u,c,h,m;return{c(){e=E("div"),t=E("input"),a=P(),r=E("input"),o=P(),i=E("select"),l=E("option"),l.textContent="Month",s=E("option"),s.textContent="Intercalary",d=P(),u=E("div"),b(t,"type","text"),b(t,"spellcheck","false"),b(t,"placeholder","Name"),et(t,"width","100%"),b(r,"type","number"),b(r,"spellcheck","false"),b(r,"placeholder","Length"),et(r,"width","100%"),b(r,"min","0"),l.__value="month",l.value=l.__value,s.__value="intercalary",s.value=s.__value,b(i,"class","dropdown"),n[0]===void 0&&qt(()=>n[8].call(i)),b(u,"class","icon svelte-1nt6wkb"),b(e,"class","month svelte-1nt6wkb")},m(p,D){q(p,e,D),w(e,t),Ct(t,n[1]),w(e,a),w(e,r),Ct(r,n[2]),w(e,o),w(e,i),w(i,l),w(i,s),Yt(i,n[0]),w(e,d),w(e,u),h||(m=[Y(t,"input",n[6]),Y(t,"input",n[4]),Y(r,"input",n[7]),Y(r,"input",n[4]),Y(i,"change",n[8]),Y(i,"input",n[4]),ae(c=n[3].call(null,u))],h=!0)},p(p,[D]){D&2&&t.value!==p[1]&&Ct(t,p[1]),D&4&&ha(r.value)!==p[2]&&Ct(r,p[2]),D&1&&Yt(i,p[0])},i:U,o:U,d(p){p&&O(e),h=!1,de(m)}}}function C0(n,e,t){let a=ye(),{month:r}=e,o=r.name,i=r.type,l=r.length,s=m=>{new oi.ExtraButtonComponent(m).setIcon("trash").onClick(()=>{a("month-delete")})},d=(0,oi.debounce)(()=>{t(5,r.name=o,r),t(5,r.type=i,r),t(5,r.length=l,r),a("month-update")},300,!0);function u(){o=this.value,t(1,o)}function c(){l=ha(this.value),t(2,l)}function h(){i=xn(this),t(0,i)}return n.$$set=m=>{"month"in m&&t(5,r=m.month)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(5,r.type=i,r)}},[i,o,l,s,d,r,u,c,h]}var id=class extends ie{constructor(e){super();oe(this,e,C0,E0,ee,{month:5},_0)}},od=id;function A0(n){se(n,"svelte-xv4vbj",".month.svelte-xv4vbj{display:flex;align-items:center;margin-top:0.5rem;gap:1rem}")}function ld(n,e,t){let a=n.slice();return a[12]=e[t],a}function k0(n){let e,t=[],a=new Map,r,o,i,l,s=n[0],d=u=>u[12].id;for(let u=0;u<s.length;u+=1){let c=ld(n,s,u),h=d(c);a.set(h,t[u]=ud(h,c))}return{c(){e=E("div");for(let u=0;u<t.length;u+=1)t[u].c();b(e,"class","existing-items")},m(u,c){q(u,e,c);for(let h=0;h<t.length;h+=1)t[h].m(e,null);o=!0,i||(l=[ae(r=en.call(null,e,{items:n[0],flipDurationMs:Vo,dragDisabled:n[1]})),Y(e,"consider",n[6]),Y(e,"finalize",n[7])],i=!0)},p(u,c){if(c&297){s=u[0],_e();for(let h=0;h<t.length;h+=1)t[h].r();t=Kt(t,c,d,1,u,s,a,e,Vr,ud,null,ld);for(let h=0;h<t.length;h+=1)t[h].a();Ee()}r&&Ve(r.update)&&c&3&&r.update.call(null,{items:u[0],flipDurationMs:Vo,dragDisabled:u[1]})},i(u){if(!o){for(let c=0;c<s.length;c+=1)T(t[c]);o=!0}},o(u){for(let c=0;c<t.length;c+=1)R(t[c]);o=!1},d(u){u&&O(e);for(let c=0;c<t.length;c+=1)t[c].d();i=!1,de(l)}}}function x0(n){let e;return{c(){e=E("div"),e.innerHTML="<span>Create a new month to see it here.</span>",b(e,"class","existing-items")},m(t,a){q(t,e,a)},p:U,i:U,o:U,d(t){t&&O(e)}}}function ud(n,e){let t,a,r,o,i,l,s,d=U,u,c,h;function m(){return e[9](e[12])}return i=new od({props:{month:e[12]}}),i.$on("mousedown",e[5]),i.$on("month-delete",m),i.$on("month-update",e[10]),{key:n,first:null,c(){t=E("div"),a=E("div"),o=P(),te(i.$$.fragment),l=P(),b(a,"class","icon"),b(t,"class","month svelte-xv4vbj"),this.first=t},m(p,D){q(p,t,D),w(t,a),w(t,o),X(i,t,null),w(t,l),u=!0,c||(h=[ae(r=e[4].call(null,a)),Y(a,"mousedown",e[5]),Y(a,"touchstart",e[5])],c=!0)},p(p,D){e=p;let y={};D&1&&(y.month=e[12]),i.$set(y)},r(){s=t.getBoundingClientRect()},f(){$t(t),d()},a(){d(),d=Zt(t,s,Qt,{duration:Vo})},i(p){u||(T(i.$$.fragment,p),u=!0)},o(p){R(i.$$.fragment,p),u=!1},d(p){p&&O(t),Q(i),c=!1,de(h)}}}function F0(n){let e,t,a,r,o=[x0,k0],i=[];function l(s,d){return s[0].length?1:0}return e=l(n,-1),t=i[e]=o[e](n),{c(){t.c(),a=qe()},m(s,d){i[e].m(s,d),q(s,a,d),r=!0},p(s,d){let u=e;e=l(s,d),e===u?i[e].p(s,d):(_e(),R(i[u],1,1,()=>{i[u]=null}),Ee(),t=i[e],t?t.p(s,d):(t=i[e]=o[e](s),t.c()),T(t,1),t.m(a.parentNode,a))},i(s){r||(T(t),r=!0)},o(s){R(t),r=!1},d(s){i[e].d(s),s&&O(a)}}}function T0(n){let e,t;return e=new jt({props:{label:"Months",$$slots:{default:[F0]},$$scope:{ctx:n}}}),e.$on("new-item",n[2]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,[r]){let o={};r&32771&&(o.$$scope={dirty:r,ctx:a}),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}var Vo=300;function S0(n,e,t){let a=()=>{t(0,h=[...h,{type:"month",name:null,length:null,id:He(6)}]),c("month-update",h)},r=D=>{t(0,h=h.filter(y=>y.id!=D.id)),c("month-update",h)},o=D=>{},i=D=>{(0,sd.setIcon)(D,"fantasy-calendar-grip")};function l(D){D.preventDefault(),t(1,s=!1)}let s=!1;function d(D){let{items:y,info:{source:A,trigger:_}}=D.detail;t(0,h=y),A===Ue.KEYBOARD&&_===Qe.DRAG_STOPPED&&t(1,s=!0)}function u(D){let{items:y,info:{source:A}}=D.detail;t(0,h=y),c("month-update",h),A===Ue.POINTER&&t(1,s=!0)}let c=ye(),{months:h=[]}=e,m=D=>r(D),p=()=>c("month-update",h);return n.$$set=D=>{"months"in D&&t(0,h=D.months)},[h,s,a,r,i,l,d,u,c,m,p]}var cd=class extends ie{constructor(e){super();oe(this,e,S0,T0,ee,{months:0},A0)}},dd=cd;var Ho=Te(require("obsidian"));function B0(n){se(n,"svelte-1ldxqlp",".dot.svelte-1ldxqlp{display:inline-block;height:0.875em;width:0.875em;margin:0 1px}")}function N0(n){let e,t;return{c(){e=Ot("svg"),t=Ot("circle"),b(t,"stroke",n[0]),b(t,"fill",n[0]),b(t,"cx","3"),b(t,"cy","3"),b(t,"r","2"),b(e,"class","dot svelte-1ldxqlp"),b(e,"viewBox","0 0 6 6"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"aria-label",n[1])},m(a,r){q(a,e,r),w(e,t)},p(a,[r]){r&1&&b(t,"stroke",a[0]),r&1&&b(t,"fill",a[0]),r&2&&b(e,"aria-label",a[1])},i:U,o:U,d(a){a&&O(e)}}}function M0(n,e,t){let{color:a}=e,{label:r}=e;return n.$$set=o=>{"color"in o&&t(0,a=o.color),"label"in o&&t(1,r=o.label)},[a,r]}var fd=class extends ie{constructor(e){super();oe(this,e,M0,N0,ee,{color:0,label:1},B0)}},hd=fd;function I0(n){se(n,"svelte-3snb0d",".event.svelte-3snb0d.svelte-3snb0d{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.event-info.svelte-3snb0d.svelte-3snb0d{width:100%}.icons.svelte-3snb0d.svelte-3snb0d{display:flex;align-self:flex-start;justify-self:flex-end;align-items:center}.event.svelte-3snb0d .icon.svelte-3snb0d{align-items:center}.date.svelte-3snb0d.svelte-3snb0d{display:flex;justify-content:flex-start;gap:0.25rem}.clamp.svelte-3snb0d.svelte-3snb0d{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;word-break:keep-all;overflow:hidden;width:calc(var(--event-max-width) * 0.75)}")}function pd(n){let e,t;return e=new hd({props:{color:n[1].color,label:n[1].name}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&2&&(o.color=a[1].color),r&2&&(o.label=a[1].name),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function O0(n){let e,t,a,r,o=n[0].name+"",i,l,s,d,u,c,h,m=(n[0].description??"")+"",p,D,y,A,_,C,B,z,L,N,j,F=n[1]!=null&&pd(n);return{c(){e=E("div"),t=E("div"),a=E("span"),F&&F.c(),r=P(),i=me(o),l=P(),s=E("div"),d=E("div"),u=me(n[2]),c=P(),h=E("span"),p=me(m),D=P(),y=E("div"),A=E("div"),C=P(),B=E("div"),b(a,"class","setting-item-name"),b(d,"class","date svelte-3snb0d"),b(h,"class","clamp svelte-3snb0d"),b(s,"class","setting-item-description"),b(t,"class","event-info svelte-3snb0d"),b(A,"class","icon svelte-3snb0d"),b(B,"class","icon svelte-3snb0d"),b(y,"class","icons svelte-3snb0d"),b(e,"class","event svelte-3snb0d")},m(W,I){q(W,e,I),w(e,t),w(t,a),F&&F.m(a,null),w(a,r),w(a,i),w(t,l),w(t,s),w(s,d),w(d,u),w(s,c),w(s,h),w(h,p),w(e,D),w(e,y),w(y,A),w(y,C),w(y,B),L=!0,N||(j=[ae(_=n[5].call(null,A)),Y(A,"click",n[6]),ae(z=n[4].call(null,B)),Y(B,"click",n[7])],N=!0)},p(W,[I]){W[1]!=null?F?(F.p(W,I),I&2&&T(F,1)):(F=pd(W),F.c(),T(F,1),F.m(a,r)):F&&(_e(),R(F,1,1,()=>{F=null}),Ee()),(!L||I&1)&&o!==(o=W[0].name+"")&&De(i,o),(!L||I&4)&&De(u,W[2]),(!L||I&1)&&m!==(m=(W[0].description??"")+"")&&De(p,m)},i(W){L||(T(F),L=!0)},o(W){R(F),L=!1},d(W){W&&O(e),F&&F.d(),N=!1,de(j)}}}function q0(n,e,t){let a=ye(),r=c=>{new Ho.ExtraButtonComponent(c).setIcon("trash").setTooltip("Delete").extraSettingsEl.setAttr("style","margin-left: 0;")},o=c=>{new Ho.ExtraButtonComponent(c).setIcon("pencil").setTooltip("Edit")},{event:i}=e,{category:l}=e,{date:s}=e,d=()=>a("edit"),u=()=>a("delete");return n.$$set=c=>{"event"in c&&t(0,i=c.event),"category"in c&&t(1,l=c.category),"date"in c&&t(2,s=c.date)},[i,l,s,a,r,o,d,u]}var md=class extends ie{constructor(e){super();oe(this,e,q0,O0,ee,{event:0,category:1,date:2},I0)}},gd=md;function yd(n,e,t){let a=n.slice();return a[10]=e[t],a}function R0(n){let e,t,a=n[0],r=[];for(let i=0;i<a.length;i+=1)r[i]=vd(yd(n,a,i));let o=i=>R(r[i],1,1,()=>{r[i]=null});return{c(){e=E("div");for(let i=0;i<r.length;i+=1)r[i].c();b(e,"class","existing-items")},m(i,l){q(i,e,l);for(let s=0;s<r.length;s+=1)r[s].m(e,null);t=!0},p(i,l){if(l&31){a=i[0];let s;for(s=0;s<a.length;s+=1){let d=yd(i,a,s);r[s]?(r[s].p(d,l),T(r[s],1)):(r[s]=vd(d),r[s].c(),T(r[s],1),r[s].m(e,null))}for(_e(),s=a.length;s<r.length;s+=1)o(s);Ee()}},i(i){if(!t){for(let l=0;l<a.length;l+=1)T(r[l]);t=!0}},o(i){r=r.filter(Boolean);for(let l=0;l<r.length;l+=1)R(r[l]);t=!1},d(i){i&&O(e),We(r,i)}}}function L0(n){let e;return{c(){e=E("div"),e.innerHTML="<span>Create a new event to see it here.</span>",b(e,"class","existing-items")},m(t,a){q(t,e,a)},p:U,i:U,o:U,d(t){t&&O(e)}}}function vd(n){let e,t;function a(){return n[6](n[10])}function r(){return n[7](n[10])}return e=new gd({props:{event:n[10],category:n[4](n[10].category),date:zt(n[10].date,n[1],n[10].end)}}),e.$on("edit",a),e.$on("delete",r),{c(){te(e.$$.fragment)},m(o,i){X(e,o,i),t=!0},p(o,i){n=o;let l={};i&1&&(l.event=n[10]),i&1&&(l.category=n[4](n[10].category)),i&3&&(l.date=zt(n[10].date,n[1],n[10].end)),e.$set(l)},i(o){t||(T(e.$$.fragment,o),t=!0)},o(o){R(e.$$.fragment,o),t=!1},d(o){Q(e,o)}}}function P0(n){let e,t,a,r,o=[L0,R0],i=[];function l(s,d){return s[0].length?1:0}return e=l(n,-1),t=i[e]=o[e](n),{c(){t.c(),a=qe()},m(s,d){i[e].m(s,d),q(s,a,d),r=!0},p(s,d){let u=e;e=l(s,d),e===u?i[e].p(s,d):(_e(),R(i[u],1,1,()=>{i[u]=null}),Ee(),t=i[e],t?t.p(s,d):(t=i[e]=o[e](s),t.c()),T(t,1),t.m(a.parentNode,a))},i(s){r||(T(t),r=!0)},o(s){R(t),r=!1},d(s){i[e].d(s),s&&O(a)}}}function j0(n){let e,t;return e=new jt({props:{label:"Event",$$slots:{default:[P0]},$$scope:{ctx:n}}}),e.$on("new-item",n[8]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,[r]){let o={};r&8195&&(o.$$scope={dirty:r,ctx:a}),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function V0(n,e,t){let{categories:a=[]}=e,{events:r=[]}=e,{months:o=[]}=e,i=ye(),l=m=>{i("new-item",m)},s=m=>{t(0,r=r.filter(p=>p.id!==m.id)),i("edit-events",r)},d=m=>a.find(({id:p})=>p==m),u=m=>l(m),c=m=>s(m);function h(m){ve.call(this,n,m)}return n.$$set=m=>{"categories"in m&&t(5,a=m.categories),"events"in m&&t(0,r=m.events),"months"in m&&t(1,o=m.months)},n.$$.update=()=>{if(n.$$.dirty&1){e:r.sort((m,p)=>m.date.year!=p.date.year?m.date.year-p.date.year:m.date.month!=p.date.month?m.date.month-p.date.month:m.date.day-p.date.day)}},[r,o,l,s,d,a,u,c,h]}var bd=class extends ie{constructor(e){super();oe(this,e,V0,j0,ee,{categories:5,events:0,months:1})}},wd=bd;var si=Te(require("obsidian"));function H0(n){se(n,"svelte-1ok7o99",".category.svelte-1ok7o99{display:grid;grid-template-columns:1fr auto auto;align-items:center;gap:0.5rem;padding-top:0.75rem}")}function Dd(n,e,t){let a=n.slice();return a[7]=e[t],a}function W0(n){let e,t=n[0],a=[];for(let r=0;r<t.length;r+=1)a[r]=_d(Dd(n,t,r));return{c(){e=E("div");for(let r=0;r<a.length;r+=1)a[r].c();b(e,"class","existing-items")},m(r,o){q(r,e,o);for(let i=0;i<a.length;i+=1)a[i].m(e,null)},p(r,o){if(o&9){t=r[0];let i;for(i=0;i<t.length;i+=1){let l=Dd(r,t,i);a[i]?a[i].p(l,o):(a[i]=_d(l),a[i].c(),a[i].m(e,null))}for(;i<a.length;i+=1)a[i].d(1);a.length=t.length}},d(r){r&&O(e),We(a,r)}}}function G0(n){let e;return{c(){e=E("div"),e.innerHTML="<span>Create a new category to see it here.</span>",b(e,"class","existing-items")},m(t,a){q(t,e,a)},p:U,d(t){t&&O(e)}}}function _d(n){let e,t,a,r,o,i,l,s,d,u,c,h,m;function p(...D){return n[5](n[7],...D)}return{c(){e=E("div"),t=E("div"),r=P(),o=E("div"),i=E("input"),s=P(),d=E("div"),c=P(),b(i,"type","color"),i.value=l=n[7].color,b(o,"class","color"),b(e,"class","category svelte-1ok7o99")},m(D,y){q(D,e,y),w(e,t),w(e,r),w(e,o),w(o,i),w(e,s),w(e,d),w(e,c),h||(m=[ae(a=n[1].call(null,t,n[7])),Y(i,"change",p),ae(u=n[2].call(null,d,n[7]))],h=!0)},p(D,y){n=D,a&&Ve(a.update)&&y&1&&a.update.call(null,n[7]),y&1&&l!==(l=n[7].color)&&(i.value=l),u&&Ve(u.update)&&y&1&&u.update.call(null,n[7])},d(D){D&&O(e),h=!1,de(m)}}}function U0(n){let e;function t(o,i){return o[0].length?W0:G0}let a=t(n,-1),r=a(n);return{c(){r.c(),e=qe()},m(o,i){r.m(o,i),q(o,e,i)},p(o,i){a===(a=t(o,i))&&r?r.p(o,i):(r.d(1),r=a(o),r&&(r.c(),r.m(e.parentNode,e)))},d(o){r.d(o),o&&O(e)}}}function z0(n){let e,t;return e=new jt({props:{label:"Event Categories",$$slots:{default:[U0]},$$scope:{ctx:n}}}),e.$on("new-item",n[4]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,[r]){let o={};r&1025&&(o.$$scope={dirty:r,ctx:a}),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Y0(n,e,t){let a=ye(),{categories:r=[]}=e,o=(u,c)=>{new si.TextComponent(u).setValue(c.name).setPlaceholder("Name").onChange(m=>{c.name=m,a("update",c)}).inputEl.setAttr("style","width: 100%;")},i=(u,c)=>{new si.ExtraButtonComponent(u).setIcon("trash").onClick(()=>{t(0,r=r.filter(h=>h.id!==c.id)),a("delete",c)})},l=(u,c)=>{let{target:h}=u;h instanceof HTMLInputElement&&(c.color=h.value,a("update",c))},s=()=>{let u={id:He(6),color:In,name:"Category"};t(0,r),a("new",u)},d=(u,c)=>l(c,u);return n.$$set=u=>{"categories"in u&&t(0,r=u.categories)},[r,o,i,l,s,d]}var Ed=class extends ie{constructor(e){super();oe(this,e,Y0,z0,ee,{categories:0},H0)}},Cd=Ed;var Rn=Te(require("obsidian"));function Z0(n){se(n,"svelte-1f06yhl",".use-custom.svelte-1f06yhl.svelte-1f06yhl{padding-top:0.75rem}.weekday.svelte-1f06yhl.svelte-1f06yhl{display:grid;grid-template-columns:auto 1fr auto;align-items:center;justify-content:space-between;gap:1rem}.weekday.svelte-1f06yhl .icon.svelte-1f06yhl{align-items:center}.weekday.svelte-1f06yhl.svelte-1f06yhl{margin-top:0.5rem}")}function Ad(n,e,t){let a=n.slice();return a[13]=e[t],a}function $0(n){let e,t=[],a=new Map,r,o,i,l=n[1],s=d=>d[13].id;for(let d=0;d<l.length;d+=1){let u=Ad(n,l,d),c=s(u);a.set(c,t[d]=kd(c,u))}return{c(){e=E("div");for(let d=0;d<t.length;d+=1)t[d].c();b(e,"class","existing-items")},m(d,u){q(d,e,u);for(let c=0;c<t.length;c+=1)t[c].m(e,null);o||(i=[ae(r=en.call(null,e,{items:n[1],flipDurationMs:Wo,dragDisabled:n[2]})),Y(e,"consider",n[9]),Y(e,"finalize",n[10])],o=!0)},p(d,u){if(u&258){l=d[1];for(let c=0;c<t.length;c+=1)t[c].r();t=Kt(t,u,s,1,d,l,a,e,Tn,kd,null,Ad);for(let c=0;c<t.length;c+=1)t[c].a()}r&&Ve(r.update)&&u&6&&r.update.call(null,{items:d[1],flipDurationMs:Wo,dragDisabled:d[2]})},d(d){d&&O(e);for(let u=0;u<t.length;u+=1)t[u].d();o=!1,de(i)}}}function K0(n){let e;return{c(){e=E("div"),e.innerHTML="<span>Create a new year to see it here.</span>",b(e,"class","existing-items")},m(t,a){q(t,e,a)},p:U,d(t){t&&O(e)}}}function kd(n,e){let t,a,r,o,i,l,s,d,u,c,h,m=U,p,D;return{key:n,first:null,c(){t=E("div"),a=E("div"),o=P(),i=E("div"),s=P(),d=E("div"),c=P(),b(a,"class","icon svelte-1f06yhl"),b(d,"class","icon svelte-1f06yhl"),b(t,"class","weekday svelte-1f06yhl"),this.first=t},m(y,A){q(y,t,A),w(t,a),w(t,o),w(t,i),w(t,s),w(t,d),w(t,c),p||(D=[ae(r=e[4].call(null,a)),Y(a,"mousedown",e[8]),Y(a,"touchstart",e[8]),ae(l=e[6].call(null,i,e[13])),ae(u=e[5].call(null,d,e[13]))],p=!0)},p(y,A){e=y,l&&Ve(l.update)&&A&2&&l.update.call(null,e[13]),u&&Ve(u.update)&&A&2&&u.update.call(null,e[13])},r(){h=t.getBoundingClientRect()},f(){$t(t),m()},a(){m(),m=Zt(t,h,Qt,{duration:Wo})},d(y){y&&O(t),p=!1,de(D)}}}function Q0(n){let e;function t(o,i){return!o[1]||!o[1].length?K0:$0}let a=t(n,-1),r=a(n);return{c(){r.c(),e=qe()},m(o,i){r.m(o,i),q(o,e,i)},p(o,i){a===(a=t(o,i))&&r?r.p(o,i):(r.d(1),r=a(o),r&&(r.c(),r.m(e.parentNode,e)))},d(o){r.d(o),o&&O(e)}}}function X0(n){let e,t,a,r;return{c(){e=E("div"),b(e,"class","use-custom svelte-1f06yhl")},m(o,i){q(o,e,i),a||(r=ae(t=n[7].call(null,e)),a=!0)},d(o){o&&O(e),a=!1,r()}}}function J0(n){let e,t;return e=new jt({props:{label:"Years",disabled:!n[0],$$slots:{"pre-add":[X0],default:[Q0]},$$scope:{ctx:n}}}),e.$on("new-item",n[3]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,[r]){let o={};r&1&&(o.disabled=!a[0]),r&65542&&(o.$$scope={dirty:r,ctx:a}),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}var Wo=300;function e1(n,e,t){let{useCustomYears:a}=e,{years:r}=e,o=()=>{r||t(1,r=[]),t(1,r=[...r,{name:null,id:He(6),type:"year"}])},i=y=>{(0,Rn.setIcon)(y,"fantasy-calendar-grip")},l=(y,A)=>{new Rn.ExtraButtonComponent(y).setIcon("trash").onClick(()=>t(1,r=r.filter(_=>_.id!==A.id)))},s=(y,A)=>{new Rn.TextComponent(y).setValue(A.name).setPlaceholder("Name").onChange(C=>{A.name=C,D("years-update",r),t(1,r)}).inputEl.setAttr("style","width: 100%;")},{app:d}=e,u=y=>{new Rn.Setting(y).setName("Use Custom Years").setDesc(createFragment(A=>(A.createSpan({text:"Create custom years to display instead of incrementing from 1."}),A.createEl("br"),A.createSpan({text:"If on, "}),A.createEl("strong",{text:"only the years added below will be displayed."}),A))).addToggle(A=>{let _=!1;A.setValue(a).onChange(async C=>{!_&&a&&r?.length?(await Mn(d,"The custom years you have created will be removed. Proceed?")&&(t(1,r=[]),t(0,a=C),_=!1),_=!0,A.setValue(a)):(_=!1,t(0,a=C))})})};function c(y){y.preventDefault(),t(2,h=!1)}let h=!1;function m(y){let{items:A,info:{source:_,trigger:C}}=y.detail;t(1,r=A),_===Ue.KEYBOARD&&C===Qe.DRAG_STOPPED&&t(2,h=!0)}function p(y){let{items:A,info:{source:_}}=y.detail;t(1,r=A),_===Ue.POINTER&&t(2,h=!0)}let D=ye();return n.$$set=y=>{"useCustomYears"in y&&t(0,a=y.useCustomYears),"years"in y&&t(1,r=y.years),"app"in y&&t(11,d=y.app)},n.$$.update=()=>{if(n.$$.dirty&2){e:D("years-update",r)}if(n.$$.dirty&1){e:D("use-custom-update",a)}},[a,r,h,o,i,l,s,u,c,m,p,d]}var xd=class extends ie{constructor(e){super();oe(this,e,e1,J0,ee,{useCustomYears:0,years:1,app:11},Z0)}},Fd=xd;var dt=Te(require("obsidian"));var mi=Te(require("obsidian"));var nt="top",ct="bottom",st="right",lt="left",li="auto",Ln=[nt,ct,st,lt],Dn="start",Kn="end",Td="clippingParents",ui="viewport",Ea="popper",Sd="reference",Go=Ln.reduce(function(n,e){return n.concat([e+"-"+Dn,e+"-"+Kn])},[]),ci=[].concat(Ln,[li]).reduce(function(n,e){return n.concat([e,e+"-"+Dn,e+"-"+Kn])},[]),t1="beforeRead",n1="read",a1="afterRead",r1="beforeMain",i1="main",o1="afterMain",s1="beforeWrite",l1="write",u1="afterWrite",Bd=[t1,n1,a1,r1,i1,o1,s1,l1,u1];function mt(n){return n?(n.nodeName||"").toLowerCase():null}function at(n){if(n==null)return window;if(n.toString()!=="[object Window]"){var e=n.ownerDocument;return e&&e.defaultView||window}return n}function _n(n){var e=at(n).Element;return n instanceof e||n instanceof Element}function gt(n){var e=at(n).HTMLElement;return n instanceof e||n instanceof HTMLElement}function di(n){if(typeof ShadowRoot=="undefined")return!1;var e=at(n).ShadowRoot;return n instanceof e||n instanceof ShadowRoot}function c1(n){var e=n.state;Object.keys(e.elements).forEach(function(t){var a=e.styles[t]||{},r=e.attributes[t]||{},o=e.elements[t];!gt(o)||!mt(o)||(Object.assign(o.style,a),Object.keys(r).forEach(function(i){var l=r[i];l===!1?o.removeAttribute(i):o.setAttribute(i,l===!0?"":l)}))})}function d1(n){var e=n.state,t={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,t.popper),e.styles=t,e.elements.arrow&&Object.assign(e.elements.arrow.style,t.arrow),function(){Object.keys(e.elements).forEach(function(a){var r=e.elements[a],o=e.attributes[a]||{},i=Object.keys(e.styles.hasOwnProperty(a)?e.styles[a]:t[a]),l=i.reduce(function(s,d){return s[d]="",s},{});!gt(r)||!mt(r)||(Object.assign(r.style,l),Object.keys(o).forEach(function(s){r.removeAttribute(s)}))})}}var Nd={name:"applyStyles",enabled:!0,phase:"write",fn:c1,effect:d1,requires:["computeStyles"]};function yt(n){return n.split("-")[0]}function tn(n,e){e===void 0&&(e=!1);var t=n.getBoundingClientRect(),a=1,r=1;return{width:t.width/a,height:t.height/r,top:t.top/r,right:t.right/a,bottom:t.bottom/r,left:t.left/a,x:t.left/a,y:t.top/r}}function Qn(n){var e=tn(n),t=n.offsetWidth,a=n.offsetHeight;return Math.abs(e.width-t)<=1&&(t=e.width),Math.abs(e.height-a)<=1&&(a=e.height),{x:n.offsetLeft,y:n.offsetTop,width:t,height:a}}function rr(n,e){var t=e.getRootNode&&e.getRootNode();if(n.contains(e))return!0;if(t&&di(t)){var a=e;do{if(a&&n.isSameNode(a))return!0;a=a.parentNode||a.host}while(a)}return!1}function St(n){return at(n).getComputedStyle(n)}function Uo(n){return["table","td","th"].indexOf(mt(n))>=0}function _t(n){return((_n(n)?n.ownerDocument:n.document)||window.document).documentElement}function En(n){return mt(n)==="html"?n:n.assignedSlot||n.parentNode||(di(n)?n.host:null)||_t(n)}function Md(n){return!gt(n)||St(n).position==="fixed"?null:n.offsetParent}function f1(n){var e=navigator.userAgent.toLowerCase().indexOf("firefox")!==-1,t=navigator.userAgent.indexOf("Trident")!==-1;if(t&&gt(n)){var a=St(n);if(a.position==="fixed")return null}for(var r=En(n);gt(r)&&["html","body"].indexOf(mt(r))<0;){var o=St(r);if(o.transform!=="none"||o.perspective!=="none"||o.contain==="paint"||["transform","perspective"].indexOf(o.willChange)!==-1||e&&o.willChange==="filter"||e&&o.filter&&o.filter!=="none")return r;r=r.parentNode}return null}function dn(n){for(var e=at(n),t=Md(n);t&&Uo(t)&&St(t).position==="static";)t=Md(t);return t&&(mt(t)==="html"||mt(t)==="body"&&St(t).position==="static")?e:t||f1(n)||e}function Xn(n){return["top","bottom"].indexOf(n)>=0?"x":"y"}var nn=Math.max,Pn=Math.min,ir=Math.round;function Jn(n,e,t){return nn(n,Pn(e,t))}function or(){return{top:0,right:0,bottom:0,left:0}}function sr(n){return Object.assign({},or(),n)}function lr(n,e){return e.reduce(function(t,a){return t[a]=n,t},{})}var h1=function(e,t){return e=typeof e=="function"?e(Object.assign({},t.rects,{placement:t.placement})):e,sr(typeof e!="number"?e:lr(e,Ln))};function p1(n){var e,t=n.state,a=n.name,r=n.options,o=t.elements.arrow,i=t.modifiersData.popperOffsets,l=yt(t.placement),s=Xn(l),d=[lt,st].indexOf(l)>=0,u=d?"height":"width";if(!(!o||!i)){var c=h1(r.padding,t),h=Qn(o),m=s==="y"?nt:lt,p=s==="y"?ct:st,D=t.rects.reference[u]+t.rects.reference[s]-i[s]-t.rects.popper[u],y=i[s]-t.rects.reference[s],A=dn(o),_=A?s==="y"?A.clientHeight||0:A.clientWidth||0:0,C=D/2-y/2,B=c[m],z=_-h[u]-c[p],L=_/2-h[u]/2+C,N=Jn(B,L,z),j=s;t.modifiersData[a]=(e={},e[j]=N,e.centerOffset=N-L,e)}}function m1(n){var e=n.state,t=n.options,a=t.element,r=a===void 0?"[data-popper-arrow]":a;r!=null&&(typeof r=="string"&&(r=e.elements.popper.querySelector(r),!r)||!rr(e.elements.popper,r)||(e.elements.arrow=r))}var Id={name:"arrow",enabled:!0,phase:"main",fn:p1,effect:m1,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function an(n){return n.split("-")[1]}var g1={top:"auto",right:"auto",bottom:"auto",left:"auto"};function y1(n){var e=n.x,t=n.y,a=window,r=a.devicePixelRatio||1;return{x:ir(ir(e*r)/r)||0,y:ir(ir(t*r)/r)||0}}function Od(n){var e,t=n.popper,a=n.popperRect,r=n.placement,o=n.variation,i=n.offsets,l=n.position,s=n.gpuAcceleration,d=n.adaptive,u=n.roundOffsets,c=u===!0?y1(i):typeof u=="function"?u(i):i,h=c.x,m=h===void 0?0:h,p=c.y,D=p===void 0?0:p,y=i.hasOwnProperty("x"),A=i.hasOwnProperty("y"),_=lt,C=nt,B=window;if(d){var z=dn(t),L="clientHeight",N="clientWidth";z===at(t)&&(z=_t(t),St(z).position!=="static"&&l==="absolute"&&(L="scrollHeight",N="scrollWidth")),z=z,(r===nt||(r===lt||r===st)&&o===Kn)&&(C=ct,D-=z[L]-a.height,D*=s?1:-1),(r===lt||(r===nt||r===ct)&&o===Kn)&&(_=st,m-=z[N]-a.width,m*=s?1:-1)}var j=Object.assign({position:l},d&&g1);if(s){var F;return Object.assign({},j,(F={},F[C]=A?"0":"",F[_]=y?"0":"",F.transform=(B.devicePixelRatio||1)<=1?"translate("+m+"px, "+D+"px)":"translate3d("+m+"px, "+D+"px, 0)",F))}return Object.assign({},j,(e={},e[C]=A?D+"px":"",e[_]=y?m+"px":"",e.transform="",e))}function v1(n){var e=n.state,t=n.options,a=t.gpuAcceleration,r=a===void 0?!0:a,o=t.adaptive,i=o===void 0?!0:o,l=t.roundOffsets,s=l===void 0?!0:l;if(!1)var d;var u={placement:yt(e.placement),variation:an(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:r};e.modifiersData.popperOffsets!=null&&(e.styles.popper=Object.assign({},e.styles.popper,Od(Object.assign({},u,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:i,roundOffsets:s})))),e.modifiersData.arrow!=null&&(e.styles.arrow=Object.assign({},e.styles.arrow,Od(Object.assign({},u,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:s})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})}var qd={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:v1,data:{}};var fi={passive:!0};function b1(n){var e=n.state,t=n.instance,a=n.options,r=a.scroll,o=r===void 0?!0:r,i=a.resize,l=i===void 0?!0:i,s=at(e.elements.popper),d=[].concat(e.scrollParents.reference,e.scrollParents.popper);return o&&d.forEach(function(u){u.addEventListener("scroll",t.update,fi)}),l&&s.addEventListener("resize",t.update,fi),function(){o&&d.forEach(function(u){u.removeEventListener("scroll",t.update,fi)}),l&&s.removeEventListener("resize",t.update,fi)}}var Rd={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:b1,data:{}};var w1={left:"right",right:"left",bottom:"top",top:"bottom"};function Ca(n){return n.replace(/left|right|bottom|top/g,function(e){return w1[e]})}var D1={start:"end",end:"start"};function hi(n){return n.replace(/start|end/g,function(e){return D1[e]})}function ea(n){var e=at(n),t=e.pageXOffset,a=e.pageYOffset;return{scrollLeft:t,scrollTop:a}}function ta(n){return tn(_t(n)).left+ea(n).scrollLeft}function zo(n){var e=at(n),t=_t(n),a=e.visualViewport,r=t.clientWidth,o=t.clientHeight,i=0,l=0;return a&&(r=a.width,o=a.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(i=a.offsetLeft,l=a.offsetTop)),{width:r,height:o,x:i+ta(n),y:l}}function Yo(n){var e,t=_t(n),a=ea(n),r=(e=n.ownerDocument)==null?void 0:e.body,o=nn(t.scrollWidth,t.clientWidth,r?r.scrollWidth:0,r?r.clientWidth:0),i=nn(t.scrollHeight,t.clientHeight,r?r.scrollHeight:0,r?r.clientHeight:0),l=-a.scrollLeft+ta(n),s=-a.scrollTop;return St(r||t).direction==="rtl"&&(l+=nn(t.clientWidth,r?r.clientWidth:0)-o),{width:o,height:i,x:l,y:s}}function na(n){var e=St(n),t=e.overflow,a=e.overflowX,r=e.overflowY;return/auto|scroll|overlay|hidden/.test(t+r+a)}function pi(n){return["html","body","#document"].indexOf(mt(n))>=0?n.ownerDocument.body:gt(n)&&na(n)?n:pi(En(n))}function jn(n,e){var t;e===void 0&&(e=[]);var a=pi(n),r=a===((t=n.ownerDocument)==null?void 0:t.body),o=at(a),i=r?[o].concat(o.visualViewport||[],na(a)?a:[]):a,l=e.concat(i);return r?l:l.concat(jn(En(i)))}function Aa(n){return Object.assign({},n,{left:n.x,top:n.y,right:n.x+n.width,bottom:n.y+n.height})}function _1(n){var e=tn(n);return e.top=e.top+n.clientTop,e.left=e.left+n.clientLeft,e.bottom=e.top+n.clientHeight,e.right=e.left+n.clientWidth,e.width=n.clientWidth,e.height=n.clientHeight,e.x=e.left,e.y=e.top,e}function Ld(n,e){return e===ui?Aa(zo(n)):gt(e)?_1(e):Aa(Yo(_t(n)))}function E1(n){var e=jn(En(n)),t=["absolute","fixed"].indexOf(St(n).position)>=0,a=t&&gt(n)?dn(n):n;return _n(a)?e.filter(function(r){return _n(r)&&rr(r,a)&&mt(r)!=="body"}):[]}function Zo(n,e,t){var a=e==="clippingParents"?E1(n):[].concat(e),r=[].concat(a,[t]),o=r[0],i=r.reduce(function(l,s){var d=Ld(n,s);return l.top=nn(d.top,l.top),l.right=Pn(d.right,l.right),l.bottom=Pn(d.bottom,l.bottom),l.left=nn(d.left,l.left),l},Ld(n,o));return i.width=i.right-i.left,i.height=i.bottom-i.top,i.x=i.left,i.y=i.top,i}function ur(n){var e=n.reference,t=n.element,a=n.placement,r=a?yt(a):null,o=a?an(a):null,i=e.x+e.width/2-t.width/2,l=e.y+e.height/2-t.height/2,s;switch(r){case nt:s={x:i,y:e.y-t.height};break;case ct:s={x:i,y:e.y+e.height};break;case st:s={x:e.x+e.width,y:l};break;case lt:s={x:e.x-t.width,y:l};break;default:s={x:e.x,y:e.y}}var d=r?Xn(r):null;if(d!=null){var u=d==="y"?"height":"width";switch(o){case Dn:s[d]=s[d]-(e[u]/2-t[u]/2);break;case Kn:s[d]=s[d]+(e[u]/2-t[u]/2);break;default:}}return s}function fn(n,e){e===void 0&&(e={});var t=e,a=t.placement,r=a===void 0?n.placement:a,o=t.boundary,i=o===void 0?Td:o,l=t.rootBoundary,s=l===void 0?ui:l,d=t.elementContext,u=d===void 0?Ea:d,c=t.altBoundary,h=c===void 0?!1:c,m=t.padding,p=m===void 0?0:m,D=sr(typeof p!="number"?p:lr(p,Ln)),y=u===Ea?Sd:Ea,A=n.rects.popper,_=n.elements[h?y:u],C=Zo(_n(_)?_:_.contextElement||_t(n.elements.popper),i,s),B=tn(n.elements.reference),z=ur({reference:B,element:A,strategy:"absolute",placement:r}),L=Aa(Object.assign({},A,z)),N=u===Ea?L:B,j={top:C.top-N.top+D.top,bottom:N.bottom-C.bottom+D.bottom,left:C.left-N.left+D.left,right:N.right-C.right+D.right},F=n.modifiersData.offset;if(u===Ea&&F){var W=F[r];Object.keys(j).forEach(function(I){var G=[st,ct].indexOf(I)>=0?1:-1,ue=[nt,ct].indexOf(I)>=0?"y":"x";j[I]+=W[ue]*G})}return j}function $o(n,e){e===void 0&&(e={});var t=e,a=t.placement,r=t.boundary,o=t.rootBoundary,i=t.padding,l=t.flipVariations,s=t.allowedAutoPlacements,d=s===void 0?ci:s,u=an(a),c=u?l?Go:Go.filter(function(p){return an(p)===u}):Ln,h=c.filter(function(p){return d.indexOf(p)>=0});h.length===0&&(h=c);var m=h.reduce(function(p,D){return p[D]=fn(n,{placement:D,boundary:r,rootBoundary:o,padding:i})[yt(D)],p},{});return Object.keys(m).sort(function(p,D){return m[p]-m[D]})}function C1(n){if(yt(n)===li)return[];var e=Ca(n);return[hi(n),e,hi(e)]}function A1(n){var e=n.state,t=n.options,a=n.name;if(!e.modifiersData[a]._skip){for(var r=t.mainAxis,o=r===void 0?!0:r,i=t.altAxis,l=i===void 0?!0:i,s=t.fallbackPlacements,d=t.padding,u=t.boundary,c=t.rootBoundary,h=t.altBoundary,m=t.flipVariations,p=m===void 0?!0:m,D=t.allowedAutoPlacements,y=e.options.placement,A=yt(y),_=A===y,C=s||(_||!p?[Ca(y)]:C1(y)),B=[y].concat(C).reduce(function(tt,je){return tt.concat(yt(je)===li?$o(e,{placement:je,boundary:u,rootBoundary:c,padding:d,flipVariations:p,allowedAutoPlacements:D}):je)},[]),z=e.rects.reference,L=e.rects.popper,N=new Map,j=!0,F=B[0],W=0;W<B.length;W++){var I=B[W],G=yt(I),ue=an(I)===Dn,we=[nt,ct].indexOf(G)>=0,ge=we?"width":"height",Ce=fn(e,{placement:I,boundary:u,rootBoundary:c,altBoundary:h,padding:d}),K=we?ue?st:lt:ue?ct:nt;z[ge]>L[ge]&&(K=Ca(K));var Z=Ca(K),he=[];if(o&&he.push(Ce[G]<=0),l&&he.push(Ce[K]<=0,Ce[Z]<=0),he.every(function(tt){return tt})){F=I,j=!1;break}N.set(I,he)}if(j)for(var Se=p?3:1,ce=function(je){var ft=B.find(function(Bt){var ht=N.get(Bt);if(ht)return ht.slice(0,je).every(function(Et){return Et})});if(ft)return F=ft,"break"},xe=Se;xe>0;xe--){var ze=ce(xe);if(ze==="break")break}e.placement!==F&&(e.modifiersData[a]._skip=!0,e.placement=F,e.reset=!0)}}var Pd={name:"flip",enabled:!0,phase:"main",fn:A1,requiresIfExists:["offset"],data:{_skip:!1}};function jd(n,e,t){return t===void 0&&(t={x:0,y:0}),{top:n.top-e.height-t.y,right:n.right-e.width+t.x,bottom:n.bottom-e.height+t.y,left:n.left-e.width-t.x}}function Vd(n){return[nt,st,ct,lt].some(function(e){return n[e]>=0})}function k1(n){var e=n.state,t=n.name,a=e.rects.reference,r=e.rects.popper,o=e.modifiersData.preventOverflow,i=fn(e,{elementContext:"reference"}),l=fn(e,{altBoundary:!0}),s=jd(i,a),d=jd(l,r,o),u=Vd(s),c=Vd(d);e.modifiersData[t]={referenceClippingOffsets:s,popperEscapeOffsets:d,isReferenceHidden:u,hasPopperEscaped:c},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":c})}var Hd={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:k1};function x1(n,e,t){var a=yt(n),r=[lt,nt].indexOf(a)>=0?-1:1,o=typeof t=="function"?t(Object.assign({},e,{placement:n})):t,i=o[0],l=o[1];return i=i||0,l=(l||0)*r,[lt,st].indexOf(a)>=0?{x:l,y:i}:{x:i,y:l}}function F1(n){var e=n.state,t=n.options,a=n.name,r=t.offset,o=r===void 0?[0,0]:r,i=ci.reduce(function(u,c){return u[c]=x1(c,e.rects,o),u},{}),l=i[e.placement],s=l.x,d=l.y;e.modifiersData.popperOffsets!=null&&(e.modifiersData.popperOffsets.x+=s,e.modifiersData.popperOffsets.y+=d),e.modifiersData[a]=i}var Wd={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:F1};function T1(n){var e=n.state,t=n.name;e.modifiersData[t]=ur({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})}var Gd={name:"popperOffsets",enabled:!0,phase:"read",fn:T1,data:{}};function Ko(n){return n==="x"?"y":"x"}function S1(n){var e=n.state,t=n.options,a=n.name,r=t.mainAxis,o=r===void 0?!0:r,i=t.altAxis,l=i===void 0?!1:i,s=t.boundary,d=t.rootBoundary,u=t.altBoundary,c=t.padding,h=t.tether,m=h===void 0?!0:h,p=t.tetherOffset,D=p===void 0?0:p,y=fn(e,{boundary:s,rootBoundary:d,padding:c,altBoundary:u}),A=yt(e.placement),_=an(e.placement),C=!_,B=Xn(A),z=Ko(B),L=e.modifiersData.popperOffsets,N=e.rects.reference,j=e.rects.popper,F=typeof D=="function"?D(Object.assign({},e.rects,{placement:e.placement})):D,W={x:0,y:0};if(!!L){if(o||l){var I=B==="y"?nt:lt,G=B==="y"?ct:st,ue=B==="y"?"height":"width",we=L[B],ge=L[B]+y[I],Ce=L[B]-y[G],K=m?-j[ue]/2:0,Z=_===Dn?N[ue]:j[ue],he=_===Dn?-j[ue]:-N[ue],Se=e.elements.arrow,ce=m&&Se?Qn(Se):{width:0,height:0},xe=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:or(),ze=xe[I],tt=xe[G],je=Jn(0,N[ue],ce[ue]),ft=C?N[ue]/2-K-je-ze-F:Z-je-ze-F,Bt=C?-N[ue]/2+K+je+tt+F:he+je+tt+F,ht=e.elements.arrow&&dn(e.elements.arrow),Et=ht?B==="y"?ht.clientTop||0:ht.clientLeft||0:0,kt=e.modifiersData.offset?e.modifiersData.offset[e.placement][B]:0,Vt=L[B]+ft-kt-Et,pn=L[B]+Bt-kt;if(o){var Ut=Jn(m?Pn(ge,Vt):ge,we,m?nn(Ce,pn):Ce);L[B]=Ut,W[B]=Ut-we}if(l){var on=B==="x"?nt:lt,ra=B==="x"?ct:st,le=L[z],Ma=le+y[on],pr=le-y[ra],mr=Jn(m?Pn(Ma,Vt):Ma,le,m?nn(pr,pn):pr);L[z]=mr,W[z]=mr-le}}e.modifiersData[a]=W}}var Ud={name:"preventOverflow",enabled:!0,phase:"main",fn:S1,requiresIfExists:["offset"]};function Qo(n){return{scrollLeft:n.scrollLeft,scrollTop:n.scrollTop}}function Xo(n){return n===at(n)||!gt(n)?ea(n):Qo(n)}function B1(n){var e=n.getBoundingClientRect(),t=e.width/n.offsetWidth||1,a=e.height/n.offsetHeight||1;return t!==1||a!==1}function Jo(n,e,t){t===void 0&&(t=!1);var a=gt(e),r=gt(e)&&B1(e),o=_t(e),i=tn(n,r),l={scrollLeft:0,scrollTop:0},s={x:0,y:0};return(a||!a&&!t)&&((mt(e)!=="body"||na(o))&&(l=Xo(e)),gt(e)?(s=tn(e,!0),s.x+=e.clientLeft,s.y+=e.clientTop):o&&(s.x=ta(o))),{x:i.left+l.scrollLeft-s.x,y:i.top+l.scrollTop-s.y,width:i.width,height:i.height}}function N1(n){var e=new Map,t=new Set,a=[];n.forEach(function(o){e.set(o.name,o)});function r(o){t.add(o.name);var i=[].concat(o.requires||[],o.requiresIfExists||[]);i.forEach(function(l){if(!t.has(l)){var s=e.get(l);s&&r(s)}}),a.push(o)}return n.forEach(function(o){t.has(o.name)||r(o)}),a}function es(n){var e=N1(n);return Bd.reduce(function(t,a){return t.concat(e.filter(function(r){return r.phase===a}))},[])}function ts(n){var e;return function(){return e||(e=new Promise(function(t){Promise.resolve().then(function(){e=void 0,t(n())})})),e}}function ns(n){var e=n.reduce(function(t,a){var r=t[a.name];return t[a.name]=r?Object.assign({},r,a,{options:Object.assign({},r.options,a.options),data:Object.assign({},r.data,a.data)}):a,t},{});return Object.keys(e).map(function(t){return e[t]})}var zd={placement:"bottom",modifiers:[],strategy:"absolute"};function Yd(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return!e.some(function(a){return!(a&&typeof a.getBoundingClientRect=="function")})}function Zd(n){n===void 0&&(n={});var e=n,t=e.defaultModifiers,a=t===void 0?[]:t,r=e.defaultOptions,o=r===void 0?zd:r;return function(l,s,d){d===void 0&&(d=o);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},zd,o),modifiersData:{},elements:{reference:l,popper:s},attributes:{},styles:{}},c=[],h=!1,m={state:u,setOptions:function(A){var _=typeof A=="function"?A(u.options):A;D(),u.options=Object.assign({},o,u.options,_),u.scrollParents={reference:_n(l)?jn(l):l.contextElement?jn(l.contextElement):[],popper:jn(s)};var C=es(ns([].concat(a,u.options.modifiers)));if(u.orderedModifiers=C.filter(function(I){return I.enabled}),!1){var B;if(getBasePlacement(u.options.placement)===auto)var z;var L,N,j,F,W}return p(),m.update()},forceUpdate:function(){if(!h){var A=u.elements,_=A.reference,C=A.popper;if(!!Yd(_,C)){u.rects={reference:Jo(_,dn(C),u.options.strategy==="fixed"),popper:Qn(C)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(I){return u.modifiersData[I.name]=Object.assign({},I.data)});for(var B=0,z=0;z<u.orderedModifiers.length;z++){if(u.reset===!0){u.reset=!1,z=-1;continue}var L=u.orderedModifiers[z],N=L.fn,j=L.options,F=j===void 0?{}:j,W=L.name;typeof N=="function"&&(u=N({state:u,options:F,name:W,instance:m})||u)}}}},update:ts(function(){return new Promise(function(y){m.forceUpdate(),y(u)})}),destroy:function(){D(),h=!0}};if(!Yd(l,s))return m;m.setOptions(d).then(function(y){!h&&d.onFirstUpdate&&d.onFirstUpdate(y)});function p(){u.orderedModifiers.forEach(function(y){var A=y.name,_=y.options,C=_===void 0?{}:_,B=y.effect;if(typeof B=="function"){var z=B({state:u,name:A,instance:m,options:C}),L=function(){};c.push(z||L)}})}function D(){c.forEach(function(y){return y()}),c=[]}return m}}var M1=[Rd,Gd,qd,Nd,Wd,Pd,Ud,Id,Hd],as=Zd({defaultModifiers:M1});var $d=class{constructor(e,t,a){this.containerEl=t,this.owner=e,t.on("click",".suggestion-item",this.onSuggestionClick.bind(this)),t.on("mousemove",".suggestion-item",this.onSuggestionMouseover.bind(this)),a.register([],"ArrowUp",()=>(this.setSelectedItem(this.selectedItem-1,!0),!1)),a.register([],"ArrowDown",()=>(this.setSelectedItem(this.selectedItem+1,!0),!1)),a.register([],"Enter",r=>(this.useSelectedItem(r),!1)),a.register([],"Tab",r=>(this.chooseSuggestion(r),!1))}chooseSuggestion(e){if(!this.items||!this.items.length)return;let t=this.items[this.selectedItem];t&&this.owner.onChooseSuggestion(t,e)}onSuggestionClick(e,t){if(e.preventDefault(),!this.suggestions||!this.suggestions.length)return;let a=this.suggestions.indexOf(t);this.setSelectedItem(a,!1),this.useSelectedItem(e)}onSuggestionMouseover(e,t){if(!this.suggestions||!this.suggestions.length)return;let a=this.suggestions.indexOf(t);this.setSelectedItem(a,!1)}empty(){this.containerEl.empty()}setSuggestions(e){this.containerEl.empty();let t=[];e.forEach(a=>{let r=this.containerEl.createDiv("suggestion-item");this.owner.renderSuggestion(a,r),t.push(r)}),this.items=e,this.suggestions=t,this.setSelectedItem(0,!1)}useSelectedItem(e){if(!this.items||!this.items.length)return;let t=this.items[this.selectedItem];t&&this.owner.selectSuggestion(t,e)}wrap(e,t){return(e%t+t)%t}setSelectedItem(e,t){let a=this.wrap(e,this.suggestions.length),r=this.suggestions[this.selectedItem],o=this.suggestions[a];r&&r.removeClass("is-selected"),o&&o.addClass("is-selected"),this.selectedItem=a,t&&o.scrollIntoView(!1)}},cr=class extends mi.FuzzySuggestModal{constructor(e,t,a){super(e);this.items=[];this.scope=new mi.Scope;this.emptyStateText="No match found";this.limit=100;this.inputEl=t,this.items=a,this.suggestEl=createDiv("suggestion-container"),this.contentEl=this.suggestEl.createDiv("suggestion"),this.suggester=new $d(this,this.contentEl,this.scope),this.scope.register([],"Escape",this.onEscape.bind(this)),this.inputEl.addEventListener("input",this.onInputChanged.bind(this)),this.inputEl.addEventListener("focus",this.onFocus.bind(this)),this.inputEl.addEventListener("blur",this.close.bind(this)),this.suggestEl.on("mousedown",".suggestion-container",r=>{r.preventDefault()})}empty(){this.suggester.empty()}onInputChanged(){if(this.shouldNotOpen)return;let e=this.modifyInput(this.inputEl.value),t=this.getSuggestions(e);t.length>0?this.suggester.setSuggestions(t.slice(0,this.limit)):this.onNoSuggestion(),this.open()}onFocus(){this.shouldNotOpen=!1,this.onInputChanged()}modifyInput(e){return e}onNoSuggestion(){this.empty(),this.renderSuggestion(null,this.contentEl.createDiv("suggestion-item"))}open(){this.app.keymap.pushScope(this.scope),document.body.appendChild(this.suggestEl),this.popper=as(this.inputEl,this.suggestEl,{placement:"bottom-start",modifiers:[{name:"offset",options:{offset:[0,10]}},{name:"flip",options:{fallbackPlacements:["top"]}}]})}onEscape(){this.close(),this.shouldNotOpen=!0}close(){this.app.keymap.popScope(this.scope),this.suggester.setSuggestions([]),this.popper&&this.popper.destroy(),this.suggestEl.detach()}createPrompt(e){this.promptEl||(this.promptEl=this.suggestEl.createDiv("prompt-instructions"));let t=this.promptEl.createDiv("prompt-instruction");for(let a of e)t.appendChild(a)}};var dr=Te(require("obsidian")),gi=class extends cr{constructor(e,t,a){super(e,t.inputEl,a);this.files=[...a],this.text=t,this.createPrompts(),this.inputEl.addEventListener("input",this.getFile.bind(this))}createPrompts(){this.createPrompt([createSpan({cls:"prompt-instruction-command",text:"Type #"}),createSpan({text:"to link heading"})]),this.createPrompt([createSpan({cls:"prompt-instruction-command",text:"Type ^"}),createSpan({text:"to link blocks"})]),this.createPrompt([createSpan({cls:"prompt-instruction-command",text:"Note: "}),createSpan({text:"Blocks must have been created already"})])}getFile(){let e=this.inputEl.value,t=this.app.metadataCache.getFirstLinkpathDest(e.split(/[\^#]/).shift()||"","");t!=this.file&&(this.file=t,this.file&&(this.cache=this.app.metadataCache.getFileCache(this.file)),this.onInputChanged())}getItemText(e){if(e instanceof dr.TFile)return e.path;if(Object.prototype.hasOwnProperty.call(e,"heading"))return e.heading;if(Object.prototype.hasOwnProperty.call(e,"id"))return e.id}onChooseItem(e){e instanceof dr.TFile?(this.text.setValue(e.basename),this.file=e,this.cache=this.app.metadataCache.getFileCache(this.file)):Object.prototype.hasOwnProperty.call(e,"heading")?this.text.setValue(this.file.basename+"#"+e.heading):Object.prototype.hasOwnProperty.call(e,"id")&&this.text.setValue(this.file.basename+"^"+e.id)}selectSuggestion({item:e}){let t;e instanceof dr.TFile?(this.file=e,t=e.basename):Object.prototype.hasOwnProperty.call(e,"heading")?t=this.file.basename+"#"+e.heading:Object.prototype.hasOwnProperty.call(e,"id")&&(t=this.file.basename+"^"+e.id),this.text.setValue(t),this.close(),this.onClose()}renderSuggestion(e,t){let{item:a,match:r}=e||{},o=t.createDiv({cls:"suggestion-content"});if(!a){o.setText(this.emptyStateText),o.parentElement.addClass("is-selected");return}if(a instanceof dr.TFile){let i=a.path.length-a.name.length,l=r.matches.map(s=>createSpan("suggestion-highlight"));for(let s=i;s<a.path.length-a.extension.length-1;s++){let d=r.matches.find(u=>u[0]===s);if(d){let u=l[r.matches.indexOf(d)];o.appendChild(u),u.appendText(a.path.substring(d[0],d[1])),s+=d[1]-d[0]-1;continue}o.appendText(a.path[s])}t.createDiv({cls:"suggestion-note",text:a.path})}else Object.prototype.hasOwnProperty.call(a,"heading")?(o.setText(a.heading),o.prepend(createSpan({cls:"suggestion-flair",text:`H${a.level}`}))):Object.prototype.hasOwnProperty.call(a,"id")&&o.setText(a.id)}get headings(){return this.file?(this.cache||(this.cache=this.app.metadataCache.getFileCache(this.file)),this.cache.headings||[]):[]}get blocks(){return this.file?(this.cache||(this.cache=this.app.metadataCache.getFileCache(this.file)),Object.values(this.cache.blocks||{})||[]):[]}getItems(){let e=this.inputEl.value;return/#/.test(e)?(this.modifyInput=t=>t.split(/#/).pop(),this.headings):/\^/.test(e)?(this.modifyInput=t=>t.split(/\^/).pop(),this.blocks):this.files}};var ka=class extends dt.Modal{constructor(e,t,a,r){super(e);this.calendar=t;this.saved=!1;this.event={name:null,description:null,date:{month:null,day:null,year:null},id:He(6),note:null,category:null};a&&(this.event={...a},this.editing=!0),r&&(this.event.date={...r}),this.containerEl.addClass("fantasy-calendar-create-event")}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Event":"New Event"}),this.infoEl=this.contentEl.createDiv("event-info"),this.buildInfo(),this.dateEl=this.contentEl.createDiv("event-date"),this.buildDate(),new dt.Setting(this.contentEl).addButton(e=>{e.setButtonText("Save").setCta().onClick(()=>{if(!this.event.name?.length){new dt.Notice("The event must have a name.");return}if(this.event.end){this.event.end={year:this.event.end.year??this.event.date.year,month:this.event.end.month??this.event.date.month,day:this.event.end.day??this.event.date.day};let t=this.event.date,a=this.event.end,r=Math.max(...this.calendar.static.months.map(s=>s.length)),o=r*this.calendar.static.months.length,i=(t.year-1)*o+(t.month??-1)*r+t.day,l=(a.year-1)*o+(a.month??-1)*r+a.day;if(i>l){let s={...this.event.end};this.event.end={...this.event.date},this.event.date={...s}}}this.saved=!0,this.close()})}).addExtraButton(e=>{e.setIcon("cross").setTooltip("Cancel").onClick(()=>this.close())})}buildDate(){this.dateEl.empty(),this.buildStartDate(),this.endEl=this.dateEl.createDiv(),this.event.end?this.buildEndDate():new dt.Setting(this.endEl).setName("Add End Date").addToggle(e=>{e.setValue(!1).onChange(t=>this.buildEndDate())}),this.stringEl=this.dateEl.createDiv("event-date-string setting-item-description"),this.buildDateString()}buildStartDate(){this.startEl=this.dateEl.createDiv("fantasy-calendar-event-date"),this.startEl.createSpan({text:"Start:"}),this.startDateEl=this.startEl.createDiv("fantasy-calendar-date-fields"),this.buildDateFields(this.startDateEl,this.event.date)}buildEndDate(){this.event.end=this.event.end??{...this.event.date},this.endEl.empty(),this.endEl.addClass("fantasy-calendar-event-date"),this.endEl.createSpan({text:"End:"}),this.endDateEl=this.endEl.createDiv("fantasy-calendar-date-fields"),this.buildDateFields(this.endDateEl,this.event.end)}buildDateString(){this.stringEl.empty(),this.stringEl.createSpan({text:zt(this.event.date,this.calendar.static.months,this.event.end)})}buildDateFields(e,t=this.event.date){e.empty();let a=e.createDiv("fantasy-calendar-date-field");a.createEl("label",{text:"Day"}),new dt.TextComponent(a).setPlaceholder("Day").setValue(`${t.day}`).onChange(s=>{t.day=Number(s),this.buildDateString()}).inputEl.setAttr("type","number");let o=e.createDiv("fantasy-calendar-date-field");o.createEl("label",{text:"Month"}),new dt.DropdownComponent(o).addOptions(Object.fromEntries([["select","Select Month"],...this.calendar.static.months.map(s=>[s.name,s.name])])).setValue(t.month!=null?this.calendar.static.months[t.month].name:"select").onChange(s=>{s==="select"&&(t.month=null);let d=this.calendar.static.months.find(u=>u.name==s);t.month=this.calendar.static.months.indexOf(d),this.buildDateString()});let i=e.createDiv("fantasy-calendar-date-field");i.createEl("label",{text:"Year"}),new dt.TextComponent(i).setPlaceholder("Year").setValue(`${t.year}`).onChange(s=>{!s||s==null?t.year=void 0:t.year=Number(s),this.buildDateString()}).inputEl.setAttr("type","number")}buildInfo(){this.infoEl.empty(),new dt.Setting(this.infoEl).setName("Note").setDesc("Link the event to a note.").addText(t=>{let a=this.app.vault.getFiles();if(t.setPlaceholder("Path"),this.event.note){let o=this.app.vault.getAbstractFileByPath(this.event.note);o&&o instanceof dt.TFile&&t.setValue(o.basename)}let r=new gi(this.app,t,[...a]);r.onClose=async()=>{t.inputEl.blur(),this.event.note=r.file.path,this.tryParse(r.file)}}),new dt.Setting(this.infoEl).setName("Event Name").addText(t=>t.setPlaceholder("Event Name").setValue(this.event.name).onChange(a=>{this.event.name=a}));let e=this.infoEl.createDiv("event-description");e.createEl("label",{text:"Event Description"}),new dt.TextAreaComponent(e).setPlaceholder("Event Description").setValue(this.event.description).onChange(t=>{this.event.description=t}),new dt.Setting(this.infoEl).setName("Event Category").addDropdown(t=>{let a=Object.fromEntries(this.calendar.categories.map(r=>[r.id,r.name]));t.addOptions(a).setValue(this.event.category).onChange(r=>this.event.category=r)})}async tryParse(e){this.event.name=e.basename;let t=this.app.metadataCache.getFileCache(e),{frontmatter:a}=t;if(a){if("fc-date"in a){let{day:r,month:o,year:i}=a["fc-date"];if(r&&(this.event.date.day=r),o){if(typeof o=="string"){let l=this.calendar.static.months?.find(s=>s.name==o)??this.calendar.static.months?.[0];this.event.date.month=this.calendar.static.months?.indexOf(l)}typeof o=="number"&&(this.event.date.month=o-1)}i&&(this.event.date.year=i)}"fc-category"in a&&(this.calendar.categories.find(r=>r.name===a["fc-category"])||this.calendar.categories.push({name:a["fantasy-category"],color:"#808080",id:He(6)}),this.event.category=this.calendar.categories.find(r=>r.name===a["fc-category"])?.id)}await this.display()}async onOpen(){await this.display()}};var fr=Te(require("obsidian"));function I1(n){se(n,"svelte-v24qmo",".moon.svelte-v24qmo{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.setting-item-name.svelte-v24qmo{display:flex;align-items:center}.icons.svelte-v24qmo{display:flex;align-self:flex-start;justify-self:flex-end;align-items:center}.icon.svelte-v24qmo{align-items:center}")}function Kd(n,e,t){let a=n.slice();return a[10]=e[t],a}function O1(n){let e,t,a=n[0],r=[];for(let i=0;i<a.length;i+=1)r[i]=Qd(Kd(n,a,i));let o=i=>R(r[i],1,1,()=>{r[i]=null});return{c(){e=E("div");for(let i=0;i<r.length;i+=1)r[i].c();b(e,"class","existing-items")},m(i,l){q(i,e,l);for(let s=0;s<r.length;s+=1)r[s].m(e,null);t=!0},p(i,l){if(l&35){a=i[0];let s;for(s=0;s<a.length;s+=1){let d=Kd(i,a,s);r[s]?(r[s].p(d,l),T(r[s],1)):(r[s]=Qd(d),r[s].c(),T(r[s],1),r[s].m(e,null))}for(_e(),s=a.length;s<r.length;s+=1)o(s);Ee()}},i(i){if(!t){for(let l=0;l<a.length;l+=1)T(r[l]);t=!0}},o(i){r=r.filter(Boolean);for(let l=0;l<r.length;l+=1)R(r[l]);t=!1},d(i){i&&O(e),We(r,i)}}}function q1(n){let e;return{c(){e=E("div"),e.innerHTML="<span>Create a new moon to see it here.</span>",b(e,"class","existing-items")},m(t,a){q(t,e,a)},p:U,i:U,o:U,d(t){t&&O(e)}}}function Qd(n){let e,t,a,r,o,i=n[10].name+"",l,s,d,u,c,h=n[10].cycle+"",m,p,D,y,A,_,C,B,z,L,N,j,F;r=new yn({props:{moon:n[10],phase:"First Quarter",label:!1,size:20}});function W(){return n[7](n[10])}function I(){return n[8](n[10])}return{c(){e=E("div"),t=E("div"),a=E("span"),te(r.$$.fragment),o=P(),l=me(i),s=P(),d=E("div"),u=E("div"),c=me("Cycle: "),m=me(h),p=me(" days"),D=P(),y=E("div"),A=E("div"),C=P(),B=E("div"),L=P(),b(a,"class","setting-item-name svelte-v24qmo"),b(u,"class","date"),b(d,"class","setting-item-description"),b(t,"class","moon-info"),b(A,"class","icon svelte-v24qmo"),b(B,"class","icon svelte-v24qmo"),b(y,"class","icons svelte-v24qmo"),b(e,"class","moon svelte-v24qmo")},m(G,ue){q(G,e,ue),w(e,t),w(t,a),X(r,a,null),w(a,o),w(a,l),w(t,s),w(t,d),w(d,u),w(u,c),w(u,m),w(u,p),w(e,D),w(e,y),w(y,A),w(y,C),w(y,B),w(e,L),N=!0,j||(F=[ae(_=n[4].call(null,A)),Y(A,"click",W),ae(z=n[3].call(null,B)),Y(B,"click",I)],j=!0)},p(G,ue){n=G;let we={};ue&1&&(we.moon=n[10]),r.$set(we),(!N||ue&1)&&i!==(i=n[10].name+"")&&De(l,i),(!N||ue&1)&&h!==(h=n[10].cycle+"")&&De(m,h)},i(G){N||(T(r.$$.fragment,G),N=!0)},o(G){R(r.$$.fragment,G),N=!1},d(G){G&&O(e),Q(r),j=!1,de(F)}}}function R1(n){let e,t,a,r,o=[q1,O1],i=[];function l(s,d){return s[0].length?1:0}return e=l(n,-1),t=i[e]=o[e](n),{c(){t.c(),a=qe()},m(s,d){i[e].m(s,d),q(s,a,d),r=!0},p(s,d){let u=e;e=l(s,d),e===u?i[e].p(s,d):(_e(),R(i[u],1,1,()=>{i[u]=null}),Ee(),t=i[e],t?t.p(s,d):(t=i[e]=o[e](s),t.c()),T(t,1),t.m(a.parentNode,a))},i(s){r||(T(t),r=!0)},o(s){R(t),r=!1},d(s){i[e].d(s),s&&O(a)}}}function L1(n){let e,t,a,r;return{c(){e=E("div")},m(o,i){q(o,e,i),a||(r=ae(t=n[2].call(null,e)),a=!0)},d(o){o&&O(e),a=!1,r()}}}function P1(n){let e,t;return e=new jt({props:{label:"Moons",$$slots:{"pre-add":[L1],default:[R1]},$$scope:{ctx:n}}}),e.$on("new-item",n[9]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,[r]){let o={};r&8193&&(o.$$scope={dirty:r,ctx:a}),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function j1(n,e,t){let{moons:a=[]}=e,{displayMoons:r=!0}=e,o=ye(),i=m=>{new fr.Setting(m).setName("Display Moons").setDesc("Display moons by default when viewing this calendar.").addToggle(p=>{p.setValue(r).onChange(D=>o("display-toggle",D))})},l=m=>{new fr.ExtraButtonComponent(m).setIcon("trash").setTooltip("Delete").extraSettingsEl.setAttr("style","margin-left: 0;")},s=m=>{new fr.ExtraButtonComponent(m).setIcon("pencil").setTooltip("Edit")},d=m=>{t(0,a=a.filter(p=>p.id!==m.id)),o("edit-moons",a)},u=m=>o("new-item",m),c=m=>d(m);function h(m){ve.call(this,n,m)}return n.$$set=m=>{"moons"in m&&t(0,a=m.moons),"displayMoons"in m&&t(6,r=m.displayMoons)},[a,o,i,l,s,d,r,u,c,h]}var Xd=class extends ie{constructor(e){super();oe(this,e,j1,P1,ee,{moons:0,displayMoons:6},I1)}},Jd=Xd;var rs=Te(require("obsidian"));function V1(n){se(n,"svelte-1rh93fc",".leapday.svelte-1rh93fc.svelte-1rh93fc{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.leapday-info.svelte-1rh93fc.svelte-1rh93fc{width:100%}.icons.svelte-1rh93fc.svelte-1rh93fc{display:flex;align-self:center;justify-self:flex-end;align-items:center}.leapday.svelte-1rh93fc .icon.svelte-1rh93fc{align-items:center}")}function H1(n){let e,t,a,r=n[0].name+"",o,i,l,s,d,u,c,h,m,p,D,y,A;return{c(){e=E("div"),t=E("div"),a=E("span"),o=me(r),i=P(),l=E("div"),s=me(n[1]),d=P(),u=E("div"),c=E("div"),m=P(),p=E("div"),b(a,"class","setting-item-name"),b(l,"class","setting-item-description"),b(t,"class","leapday-info svelte-1rh93fc"),b(c,"class","icon svelte-1rh93fc"),b(p,"class","icon svelte-1rh93fc"),b(u,"class","icons svelte-1rh93fc"),b(e,"class","leapday svelte-1rh93fc")},m(_,C){q(_,e,C),w(e,t),w(t,a),w(a,o),w(t,i),w(t,l),w(l,s),w(e,d),w(e,u),w(u,c),w(u,m),w(u,p),y||(A=[ae(h=n[4].call(null,c)),Y(c,"click",n[5]),ae(D=n[3].call(null,p)),Y(p,"click",n[6])],y=!0)},p(_,[C]){C&1&&r!==(r=_[0].name+"")&&De(o,r),C&2&&De(s,_[1])},i:U,o:U,d(_){_&&O(e),y=!1,de(A)}}}function W1(n,e,t){let a,r=ye(),o=u=>{new rs.ExtraButtonComponent(u).setIcon("trash").setTooltip("Delete").extraSettingsEl.setAttr("style","margin-left: 0;")},i=u=>{new rs.ExtraButtonComponent(u).setIcon("pencil").setTooltip("Edit")},{leapday:l}=e,s=()=>r("edit"),d=()=>r("delete");return n.$$set=u=>{"leapday"in u&&t(0,l=u.leapday)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(1,a=da(l))}},[l,a,r,o,i,s,d]}var ef=class extends ie{constructor(e){super();oe(this,e,W1,H1,ee,{leapday:0},V1)}},tf=ef;function nf(n,e,t){let a=n.slice();return a[7]=e[t],a}function G1(n){let e,t,a=n[0],r=[];for(let i=0;i<a.length;i+=1)r[i]=af(nf(n,a,i));let o=i=>R(r[i],1,1,()=>{r[i]=null});return{c(){e=E("div");for(let i=0;i<r.length;i+=1)r[i].c();b(e,"class","existing-items")},m(i,l){q(i,e,l);for(let s=0;s<r.length;s+=1)r[s].m(e,null);t=!0},p(i,l){if(l&7){a=i[0];let s;for(s=0;s<a.length;s+=1){let d=nf(i,a,s);r[s]?(r[s].p(d,l),T(r[s],1)):(r[s]=af(d),r[s].c(),T(r[s],1),r[s].m(e,null))}for(_e(),s=a.length;s<r.length;s+=1)o(s);Ee()}},i(i){if(!t){for(let l=0;l<a.length;l+=1)T(r[l]);t=!0}},o(i){r=r.filter(Boolean);for(let l=0;l<r.length;l+=1)R(r[l]);t=!1},d(i){i&&O(e),We(r,i)}}}function U1(n){let e;return{c(){e=E("div"),e.innerHTML="<span>Create a new leap day to see it here.</span>",b(e,"class","existing-items")},m(t,a){q(t,e,a)},p:U,i:U,o:U,d(t){t&&O(e)}}}function af(n){let e,t;function a(){return n[3](n[7])}function r(){return n[4](n[7])}return e=new tf({props:{leapday:n[7]}}),e.$on("edit",a),e.$on("delete",r),{c(){te(e.$$.fragment)},m(o,i){X(e,o,i),t=!0},p(o,i){n=o;let l={};i&1&&(l.leapday=n[7]),e.$set(l)},i(o){t||(T(e.$$.fragment,o),t=!0)},o(o){R(e.$$.fragment,o),t=!1},d(o){Q(e,o)}}}function z1(n){let e,t,a,r,o=[U1,G1],i=[];function l(s,d){return s[0].length?1:0}return e=l(n,-1),t=i[e]=o[e](n),{c(){t.c(),a=qe()},m(s,d){i[e].m(s,d),q(s,a,d),r=!0},p(s,d){let u=e;e=l(s,d),e===u?i[e].p(s,d):(_e(),R(i[u],1,1,()=>{i[u]=null}),Ee(),t=i[e],t?t.p(s,d):(t=i[e]=o[e](s),t.c()),T(t,1),t.m(a.parentNode,a))},i(s){r||(T(t),r=!0)},o(s){R(t),r=!1},d(s){i[e].d(s),s&&O(a)}}}function Y1(n){let e,t;return e=new jt({props:{label:"Leap Days",$$slots:{default:[z1]},$$scope:{ctx:n}}}),e.$on("new-item",n[5]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,[r]){let o={};r&1025&&(o.$$scope={dirty:r,ctx:a}),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Z1(n,e,t){let{leapdays:a=[]}=e,r=ye(),o=u=>{r("new-item",u)},i=u=>{t(0,a=a.filter(c=>c.id!==u.id)),r("edit-leapdays",a)},l=u=>o(u),s=u=>i(u);function d(u){ve.call(this,n,u)}return n.$$set=u=>{"leapdays"in u&&t(0,a=u.leapdays)},[a,o,i,l,s,d]}var rf=class extends ie{constructor(e){super();oe(this,e,Z1,Y1,ee,{leapdays:0})}},of=rf;var rn=Te(require("obsidian"));var is=class extends rn.Modal{constructor(e,t,a){super(e);this.calendar=t;this.saved=!1;this.moon={name:null,cycle:null,offset:null,faceColor:"#fff",shadowColor:"#000",id:He(6)};a&&(this.moon={...a},this.editing=!0),this.containerEl.addClass("fantasy-calendar-create-moon")}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Moon":"New Moon"}),this.infoEl=this.contentEl.createDiv("moon-info"),this.buildInfo(),new rn.Setting(this.contentEl).addButton(e=>{e.setButtonText("Save").setCta().onClick(()=>{if(!this.moon.name?.length){new rn.Notice("The moon must have a name.");return}if(!this.moon.cycle){new rn.Notice("The moon must have a positive cycle.");return}this.saved=!0,this.close()})}).addExtraButton(e=>{e.setIcon("cross").setTooltip("Cancel").onClick(()=>this.close())})}buildInfo(){this.infoEl.empty(),new rn.Setting(this.infoEl).setName("Name").addText(e=>{e.setValue(this.moon.name).onChange(t=>{this.moon.name=t})}),new rn.Setting(this.infoEl).setName("Cycle").setDesc("How many days it takes for the moon to complete a full cycle.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.moon.cycle}`).onChange(t=>{isNaN(Number(t))||(this.moon.cycle=Number(t))})}),new rn.Setting(this.infoEl).setName("Offset").setDesc("Shift the starting moon phase by a number of days.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.moon.offset}`).onChange(t=>{isNaN(Number(t))||(this.moon.offset=Number(t))})}),new rn.Setting(this.infoEl).setName("Face Color").addText(e=>{e.inputEl.setAttr("type","color"),e.setValue(this.moon.faceColor).onChange(t=>{this.moon.faceColor=t})}),new rn.Setting(this.infoEl).setName("Shadow Color").addText(e=>{e.inputEl.setAttr("type","color"),e.setValue(this.moon.shadowColor).onChange(t=>{this.moon.shadowColor=t})})}async onOpen(){await this.display()}};var rt=Te(require("obsidian"));var os=class extends rt.Modal{constructor(e,t,a){super(e);this.calendar=t;this.saved=!1;this.leapday={id:He(6),name:"Leap Day",interval:[],intercalary:!1,timespan:null,offset:0,type:"leapday"};a&&(this.leapday={...a},this.editing=!0),this.containerEl.addClass("fantasy-calendar-create-leapday")}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Leap Day":"New Leap Day"}),this.infoEl=this.contentEl.createDiv("leapday-info"),this.buildInfo(),new rt.Setting(this.contentEl).addButton(e=>{e.setButtonText("Save").setCta().onClick(()=>{if(!this.leapday.interval.length){new rt.Notice("The leap day must have an interval.");return}if(this.leapday.timespan==null){new rt.Notice("The leap day must be attached to a Month.");return}this.saved=!0,this.close()})}).addExtraButton(e=>{e.setIcon("cross").setTooltip("Cancel").onClick(()=>this.close())})}buildInfo(){this.infoEl.empty(),new rt.Setting(this.infoEl).setName("Name").addText(e=>{e.setValue(this.leapday.name).onChange(t=>{this.leapday.name=t})}),new rt.Setting(this.infoEl).setName("Month").setDesc("The leap day will be added to this month.").addDropdown(e=>{for(let t of this.calendar.static.months){let a=this.calendar.static.months.indexOf(t);e.addOption(`${a}`,t.name)}e.setValue(`${this.leapday.timespan}`).onChange(t=>this.leapday.timespan=Number(t))}),new rt.Setting(this.infoEl).setName("Offset").setDesc("Shift the years the leap day is applied to.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.leapday.offset}`).onChange(t=>{isNaN(Number(t))||(this.leapday.offset=Number(t))})}),this.conditionsEl=this.infoEl.createDiv(),this.buildConditions()}buildConditions(){this.conditionsEl.empty();let e=new rt.ButtonComponent(this.conditionsEl).setTooltip("Add New").setButtonText("+").onClick(async()=>{let t=new ss(this.app,this.intervals.length>0);t.onClose=()=>{!t.saved||(this.leapday.interval.push(t.condition),this.buildConditions())},t.open()});e.buttonEl.style.width="100%",this.conditionsEl.createSpan({text:da(this.leapday),cls:"fantasy-leap-day-interval-description setting-item"});for(let t of this.intervals)new rt.Setting(this.conditionsEl).setName(this.getIntervalName(t)).addExtraButton(a=>{a.setIcon("pencil").setTooltip("Edit").onClick(()=>{let r=new ss(this.app,this.intervals.indexOf(t)!=0,t);r.onClose=()=>{!r.saved||(this.leapday.interval.splice(this.leapday.interval.indexOf(t),1,r.condition),this.buildConditions())},r.open()})}).addExtraButton(a=>{a.setIcon("trash").setTooltip("Delete").onClick(()=>{this.leapday.interval.splice(this.leapday.interval.indexOf(t),1),this.intervals.length&&this.intervals[0].exclusive&&(this.intervals[0].exclusive=!1),this.buildConditions()})})}get intervals(){return this.leapday.interval.sort((e,t)=>e.interval-t.interval)}getIntervalName(e){let t=[`${e.interval}`];return e.exclusive&&t.push("(Exclusive)"),e.ignore&&t.push(" - Ignoring Offset"),t.join(" ")}async onOpen(){await this.display()}},ss=class extends rt.Modal{constructor(e,t,a){super(e);this.app=e;this.canBeExclusive=t;this.saved=!1;this.editing=!1;this.condition={interval:null,exclusive:!1,ignore:!1};a&&(this.condition={...a},this.editing=!0)}onOpen(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:"Leap Day Condition"}),new rt.Setting(this.contentEl).setName("Interval").setDesc("How often the condition applies.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.condition.interval}`).onChange(t=>{isNaN(Number(t))||(this.condition.interval=Number(t))})}),new rt.Setting(this.contentEl).setName("Exclusive").setDesc(`If true, the leap day will not apply when the year meets the condition.

Requires the leap day to have at least one non-exclusive condition.`).addToggle(e=>e.setDisabled(!this.canBeExclusive).setValue(this.condition.exclusive).onChange(t=>this.condition.exclusive=t)),new rt.Setting(this.contentEl).setName("Ignore Offset").setDesc("The condition will ignore the leap day's offset when checking to apply.").addToggle(e=>e.setValue(this.condition.ignore).onChange(t=>this.condition.ignore=t)),this.buttonsEl=this.contentEl.createDiv("fantasy-context-buttons"),new rt.ButtonComponent(this.buttonsEl).setCta().setButtonText(this.editing?"Save":"Create").onClick(()=>{if(!this.condition.interval){new rt.Notice("The condition requires an interval.");return}this.saved=!0,this.close()}),new rt.ExtraButtonComponent(this.buttonsEl).setTooltip("Cancel").setIcon("cross").onClick(()=>this.close())}};var sf=Te(require("obsidian"));var yi=class extends cr{constructor(e,t,a){super(e,t.inputEl,a);this.folders=[...a],this.text=t,this.inputEl.addEventListener("input",()=>this.getFolder())}getFolder(){let e=this.inputEl.value,t=this.app.vault.getAbstractFileByPath(e);t!=this.folder&&t instanceof sf.TFolder&&(this.folder=t,this.onInputChanged())}getItemText(e){return e.path}onChooseItem(e){this.text.setValue(e.path),this.folder=e}selectSuggestion({item:e}){let t=e.path;this.text.setValue(t),this.onClose(),this.close()}renderSuggestion(e,t){let{item:a,match:r}=e||{},o=t.createDiv({cls:"suggestion-content"});if(!a){o.setText(this.emptyStateText),o.parentElement.addClass("is-selected");return}let i=a.path.length-a.name.length,l=r.matches.map(s=>createSpan("suggestion-highlight"));for(let s=i;s<a.path.length;s++){let d=r.matches.find(u=>u[0]===s);if(d){let u=l[r.matches.indexOf(d)];o.appendChild(u),u.appendText(a.path.substring(d[0],d[1])),s+=d[1]-d[0]-1;continue}o.appendText(a.path[s])}t.createDiv({cls:"suggestion-note",text:a.path})}getItems(){return this.folders}};var lf;(function(a){a.none="None",a.monthly="Monthly",a.yearly="Yearly"})(lf||(lf={}));(0,be.addIcon)("fantasy-calendar-grip",'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="grip-lines" class="svg-inline--fa fa-grip-lines fa-w-16" role="img" viewBox="0 0 512 512"><path fill="currentColor" d="M496 288H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-128H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z"/></svg>');(0,be.addIcon)("fantasy-calendar-warning",'<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="exclamation-triangle" class="svg-inline--fa fa-exclamation-triangle fa-w-18" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"></path></svg>');var vi=class extends be.PluginSettingTab{constructor(e){super(e.app,e);this.plugin=e}get data(){return this.plugin.data}async display(){this.containerEl.empty(),console.log("display"),this.containerEl.createEl("h2",{text:"Fantasy Calendars"}),this.containerEl.addClass("fantasy-calendar-settings"),this.buildInfo(this.containerEl.createDiv("fantasy-calendar-nested-settings")),this.buildCalendars(this.containerEl.createEl("details",{cls:"fantasy-calendar-nested-settings",attr:{...this.data.settingsToggleState.calendars?{open:"open"}:{}}})),this.buildEvents(this.containerEl.createEl("details",{cls:"fantasy-calendar-nested-settings",attr:{...this.data.settingsToggleState.events?{open:"open"}:{}}}))}buildInfo(e){e.empty(),new be.Setting(e).setName(createFragment(t=>{let a=t.createSpan("fantasy-calendar-warning");(0,be.setIcon)(a.createSpan("fantasy-calendar-warning"),"fantasy-calendar-warning"),a.createSpan({text:"Default Config Directory"})})).setDesc(createFragment(t=>{t.createSpan({text:"Please back up your data before changing this setting. Hidden directories must be manually entered."}),t.createEl("br"),t.createSpan({text:"Current directory: "});let a=this.data.configDirectory??this.app.vault.configDir;t.createEl("code",{text:a})})).addText(async t=>{let a=this.app.vault.getAllLoadedFiles().filter(o=>o instanceof be.TFolder);t.setPlaceholder(this.data.configDirectory??this.app.vault.configDir);let r=new yi(this.app,t,[...a]);r.onClose=async()=>{t.inputEl.value?await this.app.vault.adapter.exists(t.inputEl.value)||(this.data.configDirectory=t.inputEl.value,await this.plugin.saveSettings()):this.data.configDirectory=null},t.inputEl.onblur=async()=>{if(!t.inputEl.value)return;let o=await this.app.vault.adapter.exists(t.inputEl.value);this.data.configDirectory=t.inputEl.value,await this.plugin.saveSettings(),this.display()}}).addExtraButton(t=>{t.setTooltip("Reset to Default").setIcon("reset").onClick(async()=>{this.data.configDirectory=null,await this.plugin.saveSettings(),this.display()})})}buildCalendars(e){e.empty(),e.ontoggle=()=>{this.data.settingsToggleState.calendars=e.open};let t=e.createEl("summary");new be.Setting(t).setHeading().setName("Calendar Management"),t.createDiv("collapser").createDiv("handle"),new be.Setting(e).setName("Default Calendar").setDesc("Views will open to this calendar by default.").addDropdown(r=>{r.addOption("none","None");for(let o of this.data.calendars)r.addOption(o.id,o.name);r.setValue(this.plugin.data.defaultCalendar),r.onChange(o=>{if(o==="none"){this.plugin.data.defaultCalendar=null,this.plugin.saveSettings();return}this.plugin.data.defaultCalendar=o,this.plugin.saveSettings()})}),new be.Setting(e).setName("Import Calendar").setDesc(createFragment(r=>{r.createSpan({text:"Import calendar from "}),r.createEl("a",{href:"https://app.fantasy-calendar.com",text:"Fantasy Calendar",cls:"external-link"})})).addButton(r=>{let o=createEl("input",{attr:{type:"file",name:"merge",accept:".json",multiple:!0,style:"display: none;"}});o.onchange=async()=>{let{files:i}=o;if(!!i.length){try{let l=[];for(let d of Array.from(i))l.push(JSON.parse(await d.text()));let s=Ir.import(l);this.plugin.data.calendars.push(...s),await this.plugin.saveCalendar(),this.showCalendars(a)}catch(l){new be.Notice(`There was an error while importing the calendar${i.length==1?"":"s"}.`),console.error(l)}o.value=null}},r.setButtonText("Choose Files"),r.buttonEl.addClass("calendar-file-upload"),r.buttonEl.appendChild(o),r.onClick(()=>o.click())}),new be.Setting(e).setName("Create New Calendar").addButton(r=>r.setTooltip("Launch Calendar Creator").setIcon("plus-with-circle").onClick(async()=>{try{await this.launchCalendarCreator()}catch{}finally{this.display()}}));let a=e.createDiv("existing-calendars");this.showCalendars(a)}showCalendars(e){if(e.empty(),!this.data.calendars.length){e.createSpan({text:"No calendars created! Create a calendar to see it here."});return}for(let t of this.data.calendars)new be.Setting(e).setName(t.name).setDesc(t.description??"").addExtraButton(a=>{a.setIcon("pencil").onClick(()=>{let r=new uf(this.plugin,t);r.onClose=async()=>{if(!r.saved){this.showCalendars(e);return}this.data.calendars.splice(this.data.calendars.indexOf(t),1,(0,xa.default)(r.calendar)),await this.plugin.saveCalendar(),this.showCalendars(e)},r.open()})}).addExtraButton(a=>{a.setIcon("trash").onClick(async()=>{!await Mn(this.app,"Are you sure you want to delete this calendar?",{cta:"Delete",secondary:"Cancel"})||(this.plugin.data.calendars=this.plugin.data.calendars.filter(r=>r.id!=t.id),await this.plugin.saveCalendar(),t.name==this.plugin.data.defaultCalendar?this.display():this.showCalendars(e))})})}buildEvents(e){e.empty(),e.ontoggle=()=>{this.data.settingsToggleState.events=e.open};let t=e.createEl("summary");new be.Setting(t).setHeading().setName("Events"),t.createDiv("collapser").createDiv("handle"),new be.Setting(e).setName("Display Event Previews").setDesc("Use the core Note Preview plugin to display event notes when hovered.").addToggle(a=>{a.setValue(this.data.eventPreview).onChange(r=>{this.data.eventPreview=r,this.plugin.saveSettings()})}),new be.Setting(e).setName("Automatically Parse for Events").setDesc("The plugin will automatically parse files in the vault for events.").addToggle(a=>{a.setValue(this.data.autoParse).onChange(r=>{this.data.autoParse=r,this.plugin.saveSettings()})}),new be.Setting(e).setName("Events Folder").setDesc("The plugin will only watch for changes in this folder.").addText(a=>{let r=this.app.vault.getAllLoadedFiles().filter(i=>i instanceof be.TFolder);a.setPlaceholder(this.plugin.data.path??"/");let o=new yi(this.app,a,[...r]);o.onClose=async()=>{let i=a.inputEl.value?.trim()?a.inputEl.value.trim():"/";this.plugin.data.path=(0,be.normalizePath)(i)},a.inputEl.onblur=async()=>{let i=a.inputEl.value?.trim()?a.inputEl.value.trim():"/";this.plugin.data.path=(0,be.normalizePath)(i)}}),new be.Setting(e).setName("Parse Note Titles for Event Dates").setDesc("The plugin will parse note titles for event dates.").addToggle(a=>{a.setValue(this.data.parseDates).onChange(r=>{this.data.parseDates=r,this.plugin.saveSettings()})}),new be.Setting(e).setName("Date Format").setClass(this.data.dailyNotes?"daily-notes":"no-daily-notes").setDesc(createFragment(a=>{if(a.createSpan({text:"Event dates will be parsed using this format."}),a.createSpan({text:"Only the "}),a.createEl("code",{text:"Y"}),a.createSpan({text:", "}),a.createEl("code",{text:"M"}),a.createSpan({text:", and "}),a.createEl("code",{text:"D"}),a.createEl("a",{text:"tokens",href:"https://momentjs.com/docs/#/displaying/format/",cls:"external-link"}),a.createSpan({text:" are supported."}),["Y","M","D"].some(r=>!this.data.dateFormat.includes(r))){a.createEl("br");let r=a.createSpan({cls:"fantasy-calendar-warning date-format"});(0,be.setIcon)(r.createSpan("fantasy-calendar-warning"),"fantasy-calendar-warning");let o=["Y","M","D"].filter(i=>!this.data.dateFormat.includes(i));r.createSpan({text:` Date format is missing: ${o.join(", ").replace(/, ([^,]*)$/," and $1")}`})}})).addText(a=>{a.setDisabled(this.data.dailyNotes).setValue(this.plugin.format).onChange(r=>{this.data.dateFormat=r,this.plugin.saveSettings()}),a.inputEl.onblur=()=>this.buildEvents(e)}).addExtraButton(a=>{if(!this.plugin.canUseDailyNotes){a.extraSettingsEl.detach();return}this.data.dailyNotes?a.setIcon("checkmark").setTooltip("Unlink from Daily Notes").onClick(()=>{this.data.dailyNotes=!1,this.buildEvents(e)}):a.setIcon("sync").setTooltip("Link with Daily Notes").onClick(()=>{this.data.dailyNotes=!0,this.buildEvents(e)})}),new be.Setting(e).setName("Support Timelines Events").setDesc(createFragment(a=>{a.createSpan({text:"Support <span> elements used by the "}),a.createEl("a",{text:"Obsidian Timelines",href:"obsidian://show-plugin?id=obsidian-timelines"}),a.createSpan({text:" plugin (by Darakah)."})})).addToggle(a=>{a.setValue(this.data.supportTimelines).onChange(r=>{this.data.supportTimelines=r,this.plugin.saveSettings()})}),new be.Setting(e).setName("Default tag marking pages containing Timelines data").setDesc("Tag to specify which notes to include in created timelines e.g. timeline to use the #timeline tag").addText(a=>a.setPlaceholder(this.data.timelineTag).setValue(this.data.timelineTag.replace("#","")).setDisabled(this.plugin.syncTimelines).onChange(r=>{this.data.timelineTag=r.startsWith("#")?r:`#${r}`,this.plugin.saveSettings()})).addExtraButton(a=>{if(!this.plugin.canUseTimelines){this.data.syncTimelines=!1,a.extraSettingsEl.detach();return}this.data.syncTimelines?a.setIcon("checkmark").setTooltip("Unsync from Timelines Plugin").onClick(async()=>{this.data.syncTimelines=!1,await this.plugin.saveSettings(),this.buildEvents(e)}):a.setIcon("sync").setTooltip("Sync with Timelines Plugin").onClick(async()=>{this.data.syncTimelines=!0,this.data.timelineTag=this.plugin.app.plugins.getPlugin("obsidian-timelines").settings.timelineTag,await this.plugin.saveSettings(),this.buildEvents(e)})})}launchCalendarCreator(e=bi){return new Promise((t,a)=>{try{this.containerEl.empty(),this.containerEl.addClass("fantasy-calendar-creator-open");let r=(0,xa.default)(e),o=new Zc({target:this.containerEl,props:{calendar:e,plugin:this.plugin}});o.$on("flown",()=>{}),o.$on("cancel",()=>{this.containerEl.removeClass("fantasy-calendar-creator-open"),console.log("cancel"),t(r)}),o.$on("save",()=>{this.containerEl.removeClass("fantasy-calendar-creator-open"),console.log("save"),t(e)})}catch(r){a(r)}})}},uf=class extends be.Modal{constructor(e,t){super(e.app);this.plugin=e;this.calendar=(0,xa.default)(bi);this.saved=!1;this.editing=!1;this.canSave=!1;this.tempCurrentDays=this.calendar.current.day;this.calendar.id=He(6),t&&(this.editing=!0,this.calendar=(0,xa.default)(t)),this.containerEl.addClass("fantasy-calendar-create-calendar")}get static(){return this.calendar.static}get week(){return this.static.weekdays}get months(){return this.static.months}get events(){return this.calendar.events}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Calendar":"New Calendar"});let e=this.contentEl.createDiv("fantasy-calendar-apply-preset");new be.Setting(e).setName("Apply Preset").setDesc("Apply a common fantasy calendar as a preset.").addButton(t=>{t.setCta().setButtonText("Choose Preset").onClick(()=>{let a=new ii(this.app);a.onClose=()=>{if(!!a.saved){if(a.preset?.name=="Gregorian Calendar"){let r=new Date;a.preset.current={year:r.getFullYear(),month:r.getMonth(),day:r.getDate()}}this.calendar={...a.preset,id:this.calendar.id},this.display()}},a.open()})}),this.uiEl=this.contentEl.createDiv("fantasy-calendar-ui"),this.buttonsEl=this.contentEl.createDiv("fantasy-context-buttons"),this.buildButtons(),this.infoEl=this.uiEl.createDiv("calendar-info"),this.buildInfo(),this.weekdayEl=this.uiEl.createDiv(),this.buildWeekdays(),this.monthEl=this.uiEl.createDiv("fantasy-calendar-element"),this.buildMonths(),this.yearEl=this.uiEl.createDiv("fantasy-calendar-element"),this.buildYear(),this.leapdayEl=this.uiEl.createDiv("fantasy-calendar-element"),this.buildLeapDays(),this.eventEl=this.uiEl.createDiv("fantasy-calendar-element"),this.buildEvents(),this.categoryEl=this.uiEl.createDiv("fantasy-calendar-element"),this.buildCategories(),this.moonEl=this.uiEl.createDiv("fantasy-calendar-element"),this.buildMoons()}buildInfo(){this.infoEl.empty(),this.infoDetailEl=this.infoEl.createEl("details",{attr:{open:!0}}),this.infoDetailEl.createEl("summary").createEl("h4",{text:"Basic Info"}),new be.Setting(this.infoDetailEl).setName("Calendar Name").addText(t=>{t.setValue(this.calendar.name).onChange(a=>this.calendar.name=a)});let e=this.infoDetailEl.createDiv("calendar-description");e.createEl("label",{text:"Calendar Description"}),new be.TextAreaComponent(e).setPlaceholder("Calendar Description").setValue(this.calendar.description).onChange(t=>{this.calendar.description=t}),new be.Setting(this.infoDetailEl).setName("Display Day Number").setDesc("Display the day of the year.").addToggle(t=>{t.setValue(this.static.displayDayNumber).onChange(a=>{this.static.displayDayNumber=a,this.buildInfo()})}),new be.Setting(this.infoDetailEl).setName("Auto Increment Day").setDesc("Automatically increment the calendar day every real day.").addToggle(t=>{t.setValue(this.static.incrementDay).onChange(a=>{this.static.incrementDay=a})}),this.dateFieldEl=this.infoDetailEl.createDiv(),this.buildDateFields()}buildDateFields(){this.dateFieldEl.empty(),new be.Setting(this.dateFieldEl).setClass("fantasy-calendar-date-fields-heading").setHeading().setName("Current Date");let e=this.dateFieldEl.createDiv("fantasy-calendar-date-fields");this.tempCurrentDays==null&&this.calendar.current.day&&(this.tempCurrentDays=this.calendar.current.day),this.tempCurrentDays!=null&&this.calendar.current.month!=null&&this.tempCurrentDays>this.calendar.static.months[this.calendar.current.month]?.length&&(this.tempCurrentDays=this.calendar.static.months[this.calendar.current.month]?.length);let t=e.createDiv("fantasy-calendar-date-field");t.createEl("label",{text:"Day"}),new be.TextComponent(t).setPlaceholder("Day").setValue(`${this.tempCurrentDays}`).setDisabled(this.calendar.current.month==null).onChange(i=>{if(Number(i)<1||Number(i)>this.calendar.static.months[this.calendar.current.month]?.length){new be.Notice(`The current day must be between 1 and ${this.calendar.static.months[this.calendar.current.month].length}`),this.tempCurrentDays=this.calendar.current.day,this.buildDateFields();return}this.tempCurrentDays=Number(i)}).inputEl.setAttr("type","number");let r=e.createDiv("fantasy-calendar-date-field");r.createEl("label",{text:"Month"}),new be.DropdownComponent(r).addOptions(Object.fromEntries([["select","Select Month"],...this.calendar.static.months.map(i=>[i.name,i.name])])).setValue(this.calendar.current.month!=null?this.calendar.static.months[this.calendar.current.month].name:"select").onChange(i=>{i==="select"&&(this.calendar.current.month=null);let l=this.calendar.static.months.find(s=>s.name==i);this.calendar.current.month=this.calendar.static.months.indexOf(l),this.buildDateFields()});let o=e.createDiv("fantasy-calendar-date-field");if(o.createEl("label",{text:"Year"}),this.calendar.static.useCustomYears){let i=new be.DropdownComponent(o);(this.calendar.static.years??[]).forEach(l=>{i.addOption(l.id,l.name)}),this.calendar.current.year>this.calendar.static.years?.length&&(this.calendar.current.year=this.calendar.static.years?this.calendar.static.years.length:null),i.setValue(this.calendar.static.years?.[this.calendar.current.year-1]?.id).onChange(l=>{this.calendar.current.year=this.calendar.static.years.findIndex(s=>s.id==l)+1})}else new be.TextComponent(o).setPlaceholder("Year").setValue(`${this.calendar.current.year}`).onChange(l=>{this.calendar.current.year=Number(l)}).inputEl.setAttr("type","number")}buildWeekdays(){this.weekdayEl.empty();let e=new rd({target:this.weekdayEl,props:{weekdays:this.week,firstWeekday:this.calendar.static.firstWeekDay,overflow:this.calendar.static.overflow}});e.$on("weekday-update",t=>{this.calendar.static.weekdays=t.detail,!this.calendar.static.firstWeekDay&&this.calendar.static.weekdays.length&&(this.calendar.static.firstWeekDay=0,e.$set({firstWeekday:this.calendar.static.firstWeekDay})),this.checkCanSave()}),e.$on("first-weekday-update",t=>{this.calendar.static.firstWeekDay=t.detail}),e.$on("overflow-update",t=>{this.calendar.static.overflow=t.detail,this.calendar.static.overflow||(this.calendar.static.firstWeekDay=0),e.$set({firstWeekday:this.calendar.static.firstWeekDay})})}buildMonths(){this.monthEl.empty(),new dd({target:this.monthEl,props:{months:this.months}}).$on("month-update",t=>{this.calendar.static.months=t.detail,this.buildDateFields(),this.checkCanSave()})}buildYear(){this.yearEl.empty();let e=new Fd({target:this.yearEl,props:{useCustomYears:this.static.useCustomYears,years:this.static.years,app:this.app}});e.$on("years-update",t=>{this.calendar.static.years=t.detail,this.buildDateFields(),this.buildEvents()}),e.$on("use-custom-update",t=>{this.calendar.static.useCustomYears=t.detail,this.buildDateFields(),this.buildEvents()})}buildLeapDays(){this.leapdayEl.empty();let e=new of({target:this.leapdayEl,props:{leapdays:this.static.leapDays}});e.$on("new-item",async t=>{let a=new os(this.app,this.calendar,t.detail);a.onClose=()=>{if(!!a.saved){if(a.editing){let r=this.calendar.static.moons.indexOf(this.calendar.static.moons.find(o=>o.id===a.leapday.id));this.calendar.static.leapDays.splice(r,1,{...a.leapday})}else this.calendar.static.leapDays.push({...a.leapday});e.$set({leapdays:this.calendar.static.leapDays}),this.plugin.saveCalendar()}},a.open()}),e.$on("edit-leapdays",t=>{this.calendar.static.leapDays=t.detail})}buildEvents(){this.eventEl.empty(),this.eventsUI=new wd({target:this.eventEl,props:{events:this.events,months:this.calendar.static.months,categories:this.calendar.categories}}),this.eventsUI.$on("new-item",async e=>{let t=new ka(this.app,this.calendar,e.detail);t.onClose=()=>{if(!!t.saved){if(t.editing){let a=this.calendar.events.indexOf(this.calendar.events.find(r=>r.id===t.event.id));this.calendar.events.splice(a,1,{...t.event})}else this.calendar.events.push({...t.event});this.eventsUI.$set({events:this.events}),this.plugin.saveCalendar()}},t.open()}),this.eventsUI.$on("edit-events",e=>{this.calendar.events=e.detail}),this.eventEl.setAttr("style",`--event-max-width: ${this.eventEl.getBoundingClientRect().width}px;`)}buildCategories(){this.categoryEl.empty();let e=new Cd({target:this.categoryEl,props:{categories:this.calendar.categories}});e.$on("new",t=>{this.calendar.categories.push(t.detail),this.eventsUI.$set({categories:this.calendar.categories})}),e.$on("update",t=>{let a=this.calendar.categories.find(r=>r.id==t.detail.id);this.calendar.categories.splice(this.calendar.categories.indexOf(a),1,t.detail),this.eventsUI.$set({categories:this.calendar.categories,events:this.events})}),e.$on("delete",t=>{this.calendar.categories.splice(this.calendar.categories.indexOf(t.detail),1),this.eventsUI.$set({categories:this.calendar.categories,events:this.events})})}buildMoons(){this.moonEl.empty(),this.static.displayMoons=this.static.displayMoons??!0;let e=new Jd({target:this.moonEl,props:{moons:this.static.moons,displayMoons:this.static.displayMoons}});e.$on("display-toggle",t=>{this.static.displayMoons=t.detail,e.$set({displayMoons:this.static.displayMoons})}),e.$on("new-item",async t=>{let a=new is(this.app,this.calendar,t.detail);a.onClose=()=>{if(!!a.saved){if(a.editing){let r=this.calendar.static.moons.indexOf(this.calendar.static.moons.find(o=>o.id===a.moon.id));this.calendar.static.moons.splice(r,1,{...a.moon})}else this.calendar.static.moons.push({...a.moon});e.$set({moons:this.calendar.static.moons}),this.plugin.saveCalendar()}},a.open()}),e.$on("edit-moons",t=>{this.calendar.static.moons=t.detail})}checkCanSave(){this.months?.length&&this.months?.every(e=>e.name?.length)&&this.months?.every(e=>e.length>0)&&this.week?.length&&this.week?.every(e=>e.name?.length)&&this.calendar.name?.length&&this.calendar.static.firstWeekDay<(this.week?.length??1/0)&&(!this.calendar.static.useCustomYears||this.calendar.static.useCustomYears&&this.calendar.static.years?.length&&this.calendar.static.years.every(e=>e.name?.length))&&(this.canSave=!0)}buildButtons(){this.buttonsEl.empty(),new be.ButtonComponent(this.buttonsEl).setCta().setButtonText(this.editing?"Save":"Create").onClick(()=>{if(this.canSave||this.checkCanSave(),!this.canSave){this.calendar.name?.length?this.week.length?this.week.every(e=>e.name?.length)?this.months.length?this.months.every(e=>e.name?.length)?this.months.every(e=>e.length)?this.calendar.static.useCustomYears&&!this.calendar.static.years?.length?new be.Notice("Custom years must be defined."):this.calendar.static.useCustomYears&&!this.calendar.static.years.every(e=>e.name?.length)?new be.Notice("Each custom year must be named."):this.calendar.static.firstWeekDay>=this.week.length&&new be.Notice("The first day of the week must be a valid weekday."):new be.Notice("Every month must have a length."):new be.Notice("Every month must have a name."):new be.Notice("At least one month is required."):new be.Notice("Every weekday must have a name."):new be.Notice("At least one weekday is required."):new be.Notice("The calendar name is required!");return}this.calendar.current.day=this.tempCurrentDays,this.saved=!0,this.close()}),new be.ExtraButtonComponent(this.buttonsEl).setTooltip("Cancel").setIcon("cross").onClick(()=>this.close())}onOpen(){this.display()}},ii=class extends be.Modal{async onOpen(){await this.display()}async display(){this.containerEl.addClass("fantasy-calendar-choose-preset"),this.contentEl.empty(),this.contentEl.createEl("h3",{text:"Choose a Preset Calendar"});let e=this.contentEl.createDiv("fantasy-calendar-preset-container");for(let a of Vl){let r=new be.ButtonComponent(e).onClick(()=>{this.preset=a,this.display()});this.preset==a&&r.setCta(),r.buttonEl.createDiv({cls:"setting-item-name",text:a.name}),r.buttonEl.createDiv({cls:"setting-item-description",text:a.description})}let t=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new be.ButtonComponent(t).setButtonText("Apply").onClick(()=>{this.saved=!0,this.preset=(0,xa.default)(this.preset),this.close()}).setCta(),new be.ExtraButtonComponent(t).setIcon("cross").onClick(()=>{this.close()})}};var Me=Te(require("obsidian"));var hr=Te(require("obsidian"));var ls=class{constructor(e,t,a,r){this.data=e;this.number=t;this.year=a;this.calendar=r;this.days=[];this.leapDays=[];this.shouldUpdateEvents=!1;this.shouldUpdateMoons=!1;this.leapDays=this.calendar.leapDaysForMonth(this.number,a),this.daysBefore=this.calendar.daysBeforeMonth(this.number,this.year),this.days=[...new Array(e.length+this.leapDays.length).keys()].map(o=>new cf(this,o+1))}get id(){return this.data.id}get index(){return this.calendar.data.months.indexOf(this.data)}get name(){return this.data.name}get length(){return this.days.length}get firstWeekday(){return this.calendar.data.overflow?this.days[0].weekday:0}get lastWeekday(){return this.days[this.days.length-1].weekday}get type(){return this.data.type}getEventsOnDay(e){return(!this.events||!this.events.length||this.shouldUpdateEvents)&&(this.events=this.calendar.eventsForMonth(this)),this.events.filter(t=>{if(t.date.day==e.day)return!0;if(!t.end)return!1;let a={...t.date},r={...t.end};a.year||(a.year=r.year=this.year),a.month||(a.month=r.month=this.number);let o=Number(this.calendar.hash(e));if(Number(this.calendar.hash(a))<=o&&o<=Number(this.calendar.hash(r)))return!0})}getMoonsForDay(e){return(!this.moons||!this.moons.length||this.shouldUpdateMoons)&&(this.moons=this.calendar.getMoonsForMonth(this)),this.moons[e.day-1]}},cf=class{constructor(e,t){this.month=e;this.number=t}get calendar(){return this.month.calendar}get date(){return{day:this.number,month:this.month.number,year:this.year}}get events(){return(!this._events||!this._events.length||this.month.shouldUpdateEvents)&&(this._events=this.month.getEventsOnDay(this.date)),this._events}get longDate(){return{day:this.number,month:this.month.name,year:this.year}}get daysBefore(){return this.month.daysBefore+this.number-1}get year(){return this.month.year}get weekday(){let e=this.calendar.firstDayOfYear(this.year);return Wn(this.daysBefore%this.calendar.weekdays.length+e,this.calendar.weekdays.length)}get isCurrentDay(){return this.number==this.calendar.current.day&&this.month.number==this.calendar.current.month&&this.month.year==this.calendar.current.year}get isDisplaying(){return this.number==this.calendar.viewing.day&&this.calendar.displayed.year==this.calendar.viewing.year&&this.calendar.displayed.month==this.calendar.viewing.month}get moons(){return(!this._moons||!this._moons.length)&&(this._moons=this.month.getMoonsForDay(this.date)),this._moons}},Fa=class extends hr.Events{constructor(e,t){super();this.calendar=e;this.plugin=t;this._cache=new Map;this.displayed={year:null,month:null,day:null};this.viewing={year:null,month:null,day:null};this.displayed={...this.current},this.update(this.calendar),this.plugin.registerEvent(this.plugin.app.workspace.on("fantasy-calendars-event-update",a=>{if(!a.has(this.calendar.id))return;let r=a.get(this.calendar.id);for(let[o,i]of r)if(!!this._cache.has(o))for(let l of i)!this._cache.get(o).has(l)||(this._cache.get(o).get(l).shouldUpdateEvents=!0,(o==this.displayed.year&&l==this.displayed.month||o==this.viewing.year&&l==this.viewing.month)&&this.trigger("month-update"))}))}getDayForDate(e){return this.getMonth(e.month,e.year).days[e.day-1]}eventsForMonth(e){let{year:t,number:a}=e;return this.calendar.events.filter(o=>{let i={...o.date},l={...o.end};return i.month==null||(i.year==t||i.year==null)&&i.month==a?!0:i.year>t||i.year==t&&i.month>a||!l&&(i.month!=a||i.year<t)?!1:(i.year==null&&(l.year=i.year=t),(i.year<=t||i.month<=a)&&l.year>=t&&l.month>=a)})}getNameForYear(e){if(!this.data.useCustomYears)return`${e}`;if(this.data.useCustomYears&&e-1>=0&&e<=this.data.years?.length)return this.data.years[e-1].name}get displayWeeks(){return this.calendar.displayWeeks}getMonthsForYear(e){return this._cache.has(e)||this._cache.set(e,new Map(this.data.months.map((t,a)=>[a,new ls(t,a,e,this)]))),Array.from(this._cache.get(e).values())}hash(e){if(e.year==null||e.month==null||e.day==null)return null;let t=`${this.data.months.length}`.length,a=`${e.month}`.padStart(t,"0"),r=`${this.maxDays}`.length,o=`${e.day}`.padStart(r,"0");return`${e.year}${a}${o}`}update(e){this.calendar=e??this.calendar,this.maxDays=Math.max(...this.data.months.map(t=>t.length)),this.trigger("month-update"),this.trigger("day-update")}get categories(){return this.calendar.categories}get data(){return this.calendar.static}get current(){return this.calendar.current}get leapdays(){return this.data.leapDays}get currentDate(){return zt(this.current,this.data.months)}get displayedDate(){return zt(this.displayed,this.data.months)}get viewedDate(){return zt(this.viewing,this.data.months)}reset(){this.displayed={...this.current},this.viewing={...this.current},this.trigger("month-update"),this.trigger("day-update")}setCurrentMonth(e){this.displayed.month=e,this.trigger("month-update")}goToNextDay(){this.viewing.day+=1;let e=this.getMonth(this.displayed.month,this.displayed.year);this.viewing.day>e.days.length&&(this.goToNext(),this.viewing.month=this.displayed.month,this.viewing.year=this.displayed.year,this.viewing.day=1),this.trigger("day-update")}goToNextCurrentDay(){this.current.day+=1;let e=this.getMonth(this.current.month,this.current.year);this.current.day>=e.days.length&&(this.current.day=1,this.current.month+=1,this.current.month>=this.data.months.length&&(this.current.month=0,this.current.year+=1)),this.trigger("day-update")}get nextMonthIndex(){return Wn(this.displayed.month+1,this.data.months.length)}get nextMonth(){return this.getMonth(this.displayed.month+1,this.displayed.year)}canGoToNextYear(e=this.displayed.year){return!this.data.useCustomYears||e<this.data.years.length}goToNext(){if(this.nextMonthIndex<this.displayed.month){if(!this.canGoToNextYear()){new hr.Notice("This is the last year. Additional years can be created in settings.");return}this.goToNextYear()}this.setCurrentMonth(this.nextMonthIndex)}goToNextYear(){this.displayed.year+=1,this.trigger("year-update")}get prevMonthIndex(){return Wn(this.displayed.month-1,this.data.months.length)}get previousMonth(){return this.getMonth(this.displayed.month-1,this.displayed.year)}goToPrevious(){if(this.prevMonthIndex>this.displayed.month){if(this.displayed.year==1){new hr.Notice("This is the earliest year.");return}this.goToPreviousYear()}this.setCurrentMonth(this.prevMonthIndex)}goToPreviousDay(){this.viewing.day-=1,this.viewing.day<1&&(this.goToPrevious(),this.viewing.month=this.displayed.month,this.viewing.year=this.displayed.year,this.viewing.day=this.currentMonth.days.length),this.trigger("day-update")}goToPreviousYear(){this.displayed.year-=1,this.trigger("year-update")}get weekdays(){return this.data.weekdays}get currentMonth(){return this.getMonth(this.displayed.month,this.displayed.year)}testLeapDay(e,t){return e.interval.sort((a,r)=>a.interval-r.interval).some(({interval:a,exclusive:r},o,i)=>{if(r&&o==0)return(t-e.offset)%a!=0;if(!r)return i[o+1]&&i[o+1].exclusive?(t-e.offset)%a==0&&(t-e.offset)%i[o+1].interval!=0:(t-e.offset)%a==0})}leapDaysForYear(e){return this.leapdays.filter(t=>this.testLeapDay(t,e))}leapDaysForMonth(e,t=this.displayed.year){return this.leapdays.filter(a=>a.timespan!=e?!1:this.testLeapDay(a,t))}getMonth(e,t,a=0){let r=this.data.months,o=Wn(e,r.length);if(e<0&&(t-=1),t==0)return null;if(e>=r.length&&(t+=1),this._cache.has(t)){if(this._cache.get(t).has(o))return this._cache.get(t).get(o)}else this._cache.set(t,new Map);if(r[o].type=="intercalary"&&a!=0)return this.getMonth(e+a,t,a);let i=new ls(r[o],o,t,this);return this._cache.set(t,this._cache.get(t).set(o,i)),i}getPaddedDaysForMonth(e){let t=e.days,a=[],r=this.getMonth(e.index-1,this.displayed.year,-1);e.firstWeekday>0&&e.type=="month"&&(a=r!=null?r.days.slice(-e.firstWeekday):Array(e.firstWeekday).fill(null));let o=[],i=this.getMonth(e.index+1,this.displayed.year,1);return e.lastWeekday<this.weekdays.length-1&&e.type=="month"&&(o=i.days.slice(0,this.weekdays.length-e.lastWeekday-1)),{previous:a,current:t,next:o}}get weeksPerCurrentMonth(){return Math.ceil(this.getMonth(this.displayed.month,this.displayed.year).length/this.data.weekdays.length)}weeksOfMonth(e){return Math.ceil((e.length+e.firstWeekday)/this.data.weekdays.length)}weekNumbersOfMonth(e){let t=e.daysBefore+this.firstDayOfYear(e.year);return Math.floor(t/this.data.weekdays.length)}get daysPerYear(){return this.data.months.filter(e=>e.type==="month").reduce((e,t)=>e+t.length,0)}daysBeforeMonth(e,t,a=!1){return!e||e==0?0:this.data.months.slice(0,e).filter(r=>a?!0:r.type=="month").map((r,o)=>r.length+this.leapDaysForMonth(o,t).length).reduce((r,o)=>r+o,0)}areDatesEqual(e,t){return!(e.day!=t.day||e.month!=t.month&&e.month!=null&&t.month!=null||e.year!=t.year&&e.year!=null&&t.year!=null)}dayNumberForDate(e){return this.daysBeforeMonth(e.month,e.year,!0)+e.day}get firstWeekday(){return this.data.firstWeekDay}get leapDaysBefore(){return this.displayed.year==1?0:this.leapDaysBeforeYear(this.displayed.year-1)}leapDaysBeforeYear(e){if(e==1)return 0;let t=e-1,a=0;for(let{interval:r,offset:o}of this.leapdays){let i=0;for(let l=0;l<r.length;l++){let s=r[l],d=r.slice(l+1).filter(c=>!c.exclusive).map(c=>Math.floor((t+(c.ignore?0:o))/c.interval)).reduce((c,h)=>c+h,0),u=Math.floor((t+(s.ignore?0:o))/s.interval);s.exclusive?(i-=u,i+=d):(i+=u,i-=d)}a+=i}return a}get totalDaysBefore(){return this.totalDaysBeforeYear(this.displayed.year)}totalDaysBeforeYear(e,t=!1){return e<1?0:Math.abs(e-1)*this.data.months.filter(a=>t||a.type=="month").reduce((a,r)=>a+r.length,0)+this.leapDaysBeforeYear(e)}firstDayOfYear(e=this.displayed.year){return this.data.overflow?e==1?this.firstWeekday:Wn(this.totalDaysBeforeYear(e)%this.data.weekdays.length+this.firstWeekday+(this.data.offset??0),this.data.weekdays.length):0}get moons(){return this.data.moons}getMoonsForMonth(e){let t=[];for(let a of e.days){let r=this.totalDaysBeforeYear(e.year,!0)+this.daysBeforeMonth(e.number,e.year,!0)+a.number-1,o=[];for(let i of this.moons){let{offset:l,cycle:s}=i,d=24,u=(r-l)/s,h=(u-Math.floor(u))*d%d,m=Tc[d];o.push([i,m[Wn(Math.round(h),m.length)]])}t.push(o)}return t}};var Ta=[];function wi(n,e=U){let t,a=new Set;function r(l){if(ee(n,l)&&(n=l,t)){let s=!Ta.length;for(let d of a)d[1](),Ta.push(d,n);if(s){for(let d=0;d<Ta.length;d+=2)Ta[d][0](Ta[d+1]);Ta.length=0}}}function o(l){r(l(n))}function i(l,s=U){let d=[l,s];return a.add(d),a.size===1&&(t=e(r)||U),l(n),()=>{a.delete(d),a.size===0&&(t(),t=null)}}return{set:r,update:o,subscribe:i}}var Sa=Te(require("obsidian"));var Di=Te(require("obsidian"));function $1(n){se(n,"svelte-1e1nyi2",".flag.svelte-1e1nyi2.svelte-1e1nyi2{cursor:pointer;position:relative;padding-left:0.125rem;text-align:left;width:100%;background-color:var(--hex-alpha);border-left:2px solid var(--color)}.flag-content.svelte-1e1nyi2.svelte-1e1nyi2{display:flex;gap:0.25rem;align-items:flex-start;justify-content:space-between}.day-view.svelte-1e1nyi2 .flag-content.svelte-1e1nyi2{justify-content:space-between}.clamp.svelte-1e1nyi2.svelte-1e1nyi2{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;word-break:keep-all;overflow:hidden;text-overflow:ellipsis}.note.svelte-1e1nyi2.svelte-1e1nyi2{display:flex;align-self:center}.multi.svelte-1e1nyi2.svelte-1e1nyi2{flex-shrink:0;overflow:visible;width:unset}.multi.svelte-1e1nyi2 .clamp.svelte-1e1nyi2{-webkit-line-clamp:1;overflow:visible}.multi.start.svelte-1e1nyi2.svelte-1e1nyi2{margin-left:0}.multi.end.svelte-1e1nyi2.svelte-1e1nyi2{margin-right:0}.multi.first.svelte-1e1nyi2.svelte-1e1nyi2{overflow:visible;white-space:nowrap}.multi.svelte-1e1nyi2.svelte-1e1nyi2:not(.first){color:transparent;overflow:hidden}.multi.svelte-1e1nyi2.svelte-1e1nyi2:not(.start){border:0;margin-left:-6px}.multi.svelte-1e1nyi2.svelte-1e1nyi2:not(.end){margin-right:-6px}.start.svelte-1e1nyi2>.flag-content.svelte-1e1nyi2{justify-content:flex-start;gap:1em}")}function df(n){let e,t,a,r;return{c(){e=E("div"),b(e,"class","note svelte-1e1nyi2")},m(o,i){q(o,e,i),a||(r=ae(t=n[9].call(null,e)),a=!0)},d(o){o&&O(e),a=!1,r()}}}function K1(n){let e,t,a,r=n[0].name+"",o,i,l,s,d,u=n[0].note&&df(n);return{c(){e=E("div"),t=E("div"),a=E("span"),o=me(r),i=P(),u&&u.c(),b(a,"class","svelte-1e1nyi2"),Ae(a,"clamp",!n[1]),Ae(a,"day-view",n[1]),b(t,"class","flag-content svelte-1e1nyi2"),b(e,"class","flag svelte-1e1nyi2"),b(e,"aria-label",l=n[1]?null:n[0].name),et(e,"--hex-alpha",n[6]+"40"),et(e,"--color",n[6]),Ae(e,"multi",n[4]),Ae(e,"start",n[2]),Ae(e,"end",n[3]),Ae(e,"first",n[5]),Ae(e,"day-view",n[1])},m(c,h){q(c,e,h),w(e,t),w(t,a),w(a,o),w(t,i),u&&u.m(t,null),s||(d=[Y(e,"click",n[12]),Y(e,"mouseover",n[13]),Y(e,"focus",Q1),Y(e,"contextmenu",n[14])],s=!0)},p(c,[h]){h&1&&r!==(r=c[0].name+"")&&De(o,r),h&2&&Ae(a,"clamp",!c[1]),h&2&&Ae(a,"day-view",c[1]),c[0].note?u||(u=df(c),u.c(),u.m(t,null)):u&&(u.d(1),u=null),h&3&&l!==(l=c[1]?null:c[0].name)&&b(e,"aria-label",l),h&64&&et(e,"--hex-alpha",c[6]+"40"),h&64&&et(e,"--color",c[6]),h&16&&Ae(e,"multi",c[4]),h&4&&Ae(e,"start",c[2]),h&8&&Ae(e,"end",c[3]),h&32&&Ae(e,"first",c[5]),h&2&&Ae(e,"day-view",c[1])},i:U,o:U,d(c){c&&O(e),u&&u.d(),s=!1,de(d)}}}var Q1=()=>{};function X1(n,e,t){let a=ye(),{event:r}=e,{date:o}=e,{dayView:i=!1}=e,l=!1,s=!1,d=!1,u=!1,{categories:c}=e,h=c.find(_=>_.id==r.category)?.color??In,m=Di.Platform.isMacOS?"Meta":"Control",p=_=>{(0,Di.setIcon)(_,"note-glyph")},D=_=>{_.stopPropagation(),a("event-click",{event:r,modifier:_.getModifierState(m)})},y=_=>a("event-mouseover",{target:_.target,event:r}),A=_=>{_.stopPropagation(),a("event-context",{evt:_,event:r})};return n.$$set=_=>{"event"in _&&t(0,r=_.event),"date"in _&&t(10,o=_.date),"dayView"in _&&t(1,i=_.dayView),"categories"in _&&t(11,c=_.categories)},n.$$.update=()=>{if(n.$$.dirty&1039){e:r.end!=null&&!i&&(t(4,l=!0),t(2,s=o.day===r.date.day&&(r.date.month==null||o.month==r.date.month)&&(r.date.year==null||o.year===r.date.year)),t(5,u=s||o.day==1),t(3,d=o.day===r.end.day&&(r.end.month==null||o.month==r.end.month)&&(r.end.year==null||o.year===r.end.year)),s&&d&&(t(4,l=!1),t(2,s=!1),t(3,d=!1)))}if(n.$$.dirty&2049){e:t(6,h=c.find(_=>_.id==r.category)?.color??In)}},[r,i,s,d,l,u,h,a,m,p,o,c,D,y,A]}var ff=class extends ie{constructor(e){super();oe(this,e,X1,K1,ee,{event:0,date:10,dayView:1,categories:11},$1)}},hf=ff;function J1(n){se(n,"svelte-qnut28",".flags-container.svelte-qnut28{height:100%}.flag-container.svelte-qnut28{display:flex;flex-flow:column nowrap;gap:0.25rem}.overflow.svelte-qnut28{color:var(--text-muted);display:flex;justify-content:flex-end;width:100%}")}function pf(n){let e,t,a,r;return{c(){e=E("div"),b(e,"class","flag-container svelte-qnut28")},m(o,i){q(o,e,i),a||(r=ae(t=n[2].call(null,e)),a=!0)},d(o){o&&O(e),a=!1,r()}}}function mf(n){let e,t,a;return{c(){e=E("span"),t=me("+"),a=me(n[1])},m(r,o){q(r,e,o),w(e,t),w(e,a)},p(r,o){o&2&&De(a,r[1])},d(r){r&&O(e)}}}function eb(n){let e,t=n[0],a,r,o=pf(n),i=n[1]>0&&mf(n);return{c(){e=E("div"),o.c(),a=P(),r=E("div"),i&&i.c(),b(r,"class","overflow svelte-qnut28"),b(e,"class","flags-container svelte-qnut28")},m(l,s){q(l,e,s),o.m(e,null),w(e,a),w(e,r),i&&i.m(r,null)},p(l,[s]){s&1&&ee(t,t=l[0])&&(o.d(1),o=pf(l),o.c(),o.m(e,a)),l[1]>0?i?i.p(l,s):(i=mf(l),i.c(),i.m(r,null)):i&&(i.d(1),i=null)},i:U,o:U,d(l){l&&O(e),o.d(l),i&&i.d()}}}function tb(n,e,t){let{events:a=[]}=e,{categories:r}=e,{dayView:o=!1}=e,{date:i}=e,{calendar:l}=e,s=0,d=ye(),u,c=0,h=m=>{if(a.length){let p=m?.parentElement?.getBoundingClientRect()?.height;if(!o&&(p==null||Math.floor(p)==Math.floor(c)))return;c=p,u=m,m.empty(),t(1,s=0);let D=p;for(let y of a){let A=new hf({target:m,props:{event:y,categories:r,dayView:o,date:i}});if(A.$on("event-click",_=>d("event-click",_.detail)),A.$on("event-mouseover",_=>d("event-mouseover",_.detail)),A.$on("event-context",_=>d("event-context",_.detail)),!o){if(D=p-m.getBoundingClientRect().height,D<0){m.lastElementChild.detach(),t(1,s=a.length-a.indexOf(y));break}else if(D==0){t(1,s=a.length-a.indexOf(y)-1);break}}}}};return l.on("view-resized",()=>{o||h(u)}),n.$$set=m=>{"events"in m&&t(0,a=m.events),"categories"in m&&t(3,r=m.categories),"dayView"in m&&t(4,o=m.dayView),"date"in m&&t(5,i=m.date),"calendar"in m&&t(6,l=m.calendar)},n.$$.update=()=>{if(n.$$.dirty&1){e:t(0,a=[...a])}},[a,s,h,r,o,i,l]}var gf=class extends ie{constructor(e){super();oe(this,e,tb,eb,ee,{events:0,categories:3,dayView:4,date:5,calendar:6},J1)}},_i=gf;function nb(n){se(n,"svelte-1uhffao",".day-view.svelte-1uhffao{padding:5px 15px;display:flex;flex-flow:column nowrap;gap:0.5rem}.nav.svelte-1uhffao,.date.svelte-1uhffao{display:flex;justify-content:space-between;align-items:center}.left-nav.svelte-1uhffao{display:flex}.left-nav.svelte-1uhffao .clickable-icon{margin-right:0}.calendar-clickable.svelte-1uhffao{align-items:center;cursor:pointer;display:flex;justify-content:center}h3.svelte-1uhffao{margin:0}.day-view.svelte-1uhffao .flag-container > .flag{padding-left:0.5rem}.title-container.svelte-1uhffao{display:flex;flex-flow:column nowrap;align-items:center;justify-content:center}.day-number.svelte-1uhffao{font-size:small}")}function yf(n,e,t){let a=n.slice();return a[24]=e[t][0],a[25]=e[t][1],a}function vf(n){let e,t,a,r;return{c(){e=E("div"),t=E("em"),a=me("Day "),r=me(n[8]),b(e,"class","day-number svelte-1uhffao")},m(o,i){q(o,e,i),w(e,t),w(t,a),w(t,r)},p(o,i){i&256&&De(r,o[8])},d(o){o&&O(e)}}}function bf(n){let e,t,a=n[5],r=[];for(let i=0;i<a.length;i+=1)r[i]=wf(yf(n,a,i));let o=i=>R(r[i],1,1,()=>{r[i]=null});return{c(){e=E("div");for(let i=0;i<r.length;i+=1)r[i].c();b(e,"class","moon-container")},m(i,l){q(i,e,l);for(let s=0;s<r.length;s+=1)r[s].m(e,null);t=!0},p(i,l){if(l&32){a=i[5];let s;for(s=0;s<a.length;s+=1){let d=yf(i,a,s);r[s]?(r[s].p(d,l),T(r[s],1)):(r[s]=wf(d),r[s].c(),T(r[s],1),r[s].m(e,null))}for(_e(),s=a.length;s<r.length;s+=1)o(s);Ee()}},i(i){if(!t){for(let l=0;l<a.length;l+=1)T(r[l]);t=!0}},o(i){r=r.filter(Boolean);for(let l=0;l<r.length;l+=1)R(r[l]);t=!1},d(i){i&&O(e),We(r,i)}}}function wf(n){let e,t;return e=new yn({props:{moon:n[24],phase:n[25]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&32&&(o.moon=a[24]),r&32&&(o.phase=a[25]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function ab(n){let e,t,a,r,o,i,l,s,d,u,c,h,m,p,D,y,A,_,C,B,z,L,N,j,F,W,I,G,ue,we,ge=n[0]&&vf(n),Ce=n[4]&&n[5]&&n[5].length&&bf(n);return I=new _i({props:{events:n[3].events,categories:n[7],date:n[2],dayView:!0,calendar:n[1]}}),I.$on("event-click",n[19]),I.$on("event-mouseover",n[20]),I.$on("event-context",n[21]),{c(){e=E("div"),t=E("div"),a=E("div"),r=E("div"),i=P(),l=E("div"),d=P(),u=E("div"),h=P(),m=E("div"),p=E("div"),y=P(),A=E("div"),_=E("h3"),C=E("span"),B=me(n[6]),z=P(),ge&&ge.c(),L=P(),N=E("div"),F=P(),Ce&&Ce.c(),W=P(),te(I.$$.fragment),b(a,"class","left-nav svelte-1uhffao"),b(t,"class","nav svelte-1uhffao"),b(p,"class","arrow calendar-clickable svelte-1uhffao"),b(p,"aria-label","Previous"),b(C,"class","current"),b(_,"class","fantasy-title title svelte-1uhffao"),b(A,"class","title-container svelte-1uhffao"),b(N,"class","arrow right calendar-clickable svelte-1uhffao"),b(N,"aria-label","Next"),b(m,"class","date svelte-1uhffao"),b(e,"class","day-view svelte-1uhffao")},m(K,Z){q(K,e,Z),w(e,t),w(t,a),w(a,r),w(a,i),w(a,l),w(t,d),w(t,u),w(e,h),w(e,m),w(m,p),w(m,y),w(m,A),w(A,_),w(_,C),w(C,B),w(A,z),ge&&ge.m(A,null),w(m,L),w(m,N),w(e,F),Ce&&Ce.m(e,null),w(e,W),X(I,e,null),G=!0,ue||(we=[ae(o=n[11].call(null,r)),Y(r,"click",n[15]),ae(s=n[12].call(null,l)),ae(c=n[10].call(null,u)),Y(u,"click",n[16]),ae(D=n[13].call(null,p)),Y(p,"click",n[17]),ae(j=n[14].call(null,N)),Y(N,"click",n[18])],ue=!0)},p(K,[Z]){(!G||Z&64)&&De(B,K[6]),K[0]?ge?ge.p(K,Z):(ge=vf(K),ge.c(),ge.m(A,null)):ge&&(ge.d(1),ge=null),K[4]&&K[5]&&K[5].length?Ce?(Ce.p(K,Z),Z&48&&T(Ce,1)):(Ce=bf(K),Ce.c(),T(Ce,1),Ce.m(e,W)):Ce&&(_e(),R(Ce,1,1,()=>{Ce=null}),Ee());let he={};Z&8&&(he.events=K[3].events),Z&128&&(he.categories=K[7]),Z&4&&(he.date=K[2]),Z&2&&(he.calendar=K[1]),I.$set(he)},i(K){G||(T(Ce),T(I.$$.fragment,K),G=!0)},o(K){R(Ce),R(I.$$.fragment,K),G=!1},d(K){K&&O(e),ge&&ge.d(),Ce&&Ce.d(),Q(I),ue=!1,de(we)}}}function rb(n,e,t){let a,r,o,i,l,s,{displayDayNumber:d}=e,u=Ft("calendar"),c;u.subscribe(I=>{t(1,c=I)});let h;Ft("displayMoons").subscribe(I=>t(4,h=I)),c.on("day-update",()=>{t(2,r=c.viewing),t(6,a=c.viewedDate),t(3,o=c.getDayForDate(r)),t(5,l=o.moons)});let p=ye(),D=I=>{new Sa.ExtraButtonComponent(I).setIcon("cross").setTooltip("Close")},y=I=>{new Sa.ExtraButtonComponent(I).setIcon("fantasy-calendar-reveal").setTooltip("Show on Calendar").onClick(()=>{t(1,c.displayed.year=c.viewing.year,c),c.setCurrentMonth(c.viewing.month)})},A=I=>{new Sa.ExtraButtonComponent(I).setIcon("plus-with-circle").setTooltip("New Event").onClick(()=>p("event",r))},_=I=>{new Sa.ExtraButtonComponent(I).setIcon("left-arrow")},C=I=>{new Sa.ExtraButtonComponent(I).setIcon("right-arrow")},B=()=>p("reveal"),z=()=>p("close"),L=()=>c.goToPreviousDay(),N=()=>c.goToNextDay();function j(I){ve.call(this,n,I)}function F(I){ve.call(this,n,I)}function W(I){ve.call(this,n,I)}return n.$$set=I=>{"displayDayNumber"in I&&t(0,d=I.displayDayNumber)},n.$$.update=()=>{if(n.$$.dirty&2){e:t(6,a=c.viewedDate)}if(n.$$.dirty&2){e:t(2,r=c.viewing)}if(n.$$.dirty&6){e:t(3,o=c.getDayForDate(r))}if(n.$$.dirty&6){e:t(8,i=c.dayNumberForDate(r))}if(n.$$.dirty&8){e:t(5,l=o.moons)}if(n.$$.dirty&2){e:t(7,s=c.categories)}},[d,c,r,o,h,l,a,s,i,p,D,y,A,_,C,B,z,L,N,j,F,W]}var Df=class extends ie{constructor(e){super();oe(this,e,rb,ab,ee,{displayDayNumber:0},nb)}},_f=Df;function ib(n){se(n,"svelte-1gou5hh",".dot.svelte-1gou5hh{display:inline-block;min-height:6px;min-width:6px;height:6px;width:6px;margin:0 2px}.active.svelte-1gou5hh{color:var(--text-on-accent)}")}function ob(n){let e,t,a,r;return{c(){e=Ot("svg"),t=Ot("circle"),b(t,"stroke",a=n[2]??"currentColor"),b(t,"fill",r=n[2]??"currentColor"),b(t,"cx","3"),b(t,"cy","3"),b(t,"r","2"),b(e,"class","dot svelte-1gou5hh"),b(e,"viewBox","0 0 6 6"),b(e,"xmlns","http://www.w3.org/2000/svg"),Ae(e,"filled",n[0]),Ae(e,"active",n[1])},m(o,i){q(o,e,i),w(e,t)},p(o,[i]){i&4&&a!==(a=o[2]??"currentColor")&&b(t,"stroke",a),i&4&&r!==(r=o[2]??"currentColor")&&b(t,"fill",r),i&1&&Ae(e,"filled",o[0]),i&2&&Ae(e,"active",o[1])},i:U,o:U,d(o){o&&O(e)}}}function sb(n,e,t){let{isFilled:a=!0}=e,{isActive:r=!1}=e,{color:o}=e;return n.$$set=i=>{"isFilled"in i&&t(0,a=i.isFilled),"isActive"in i&&t(1,r=i.isActive),"color"in i&&t(2,o=i.color)},[a,r,o]}var Ef=class extends ie{constructor(e){super();oe(this,e,sb,ob,ee,{isFilled:0,isActive:1,color:2},ib)}},Cf=Ef;function lb(n){se(n,"svelte-1w3ytba",".dots-container.svelte-1w3ytba{width:100%}.dot-container.svelte-1w3ytba{display:flex;flex-flow:row nowrap;width:fit-content;margin:auto;line-height:6px;min-height:6px}.centered.svelte-1w3ytba{justify-content:center;align-items:center}.overflow.svelte-1w3ytba{color:var(--text-muted);font-size:xx-small;display:flex;justify-content:flex-end;width:100%;line-height:1.25}")}function Af(n){let e,t,a,r;return{c(){e=E("div"),b(e,"class","dot-container centered svelte-1w3ytba")},m(o,i){q(o,e,i),a||(r=ae(t=n[2].call(null,e)),a=!0)},d(o){o&&O(e),a=!1,r()}}}function kf(n){let e,t,a;return{c(){e=E("span"),t=me("+"),a=me(n[1])},m(r,o){q(r,e,o),w(e,t),w(e,a)},p(r,o){o&2&&De(a,r[1])},d(r){r&&O(e)}}}function ub(n){let e,t=n[0],a,r,o=Af(n),i=n[1]>0&&kf(n);return{c(){e=E("div"),o.c(),a=P(),r=E("div"),i&&i.c(),b(r,"class","overflow svelte-1w3ytba"),b(e,"class","dots-container svelte-1w3ytba")},m(l,s){q(l,e,s),o.m(e,null),w(e,a),w(e,r),i&&i.m(r,null)},p(l,[s]){s&1&&ee(t,t=l[0])&&(o.d(1),o=Af(l),o.c(),o.m(e,a)),l[1]>0?i?i.p(l,s):(i=kf(l),i.c(),i.m(r,null)):i&&(i.d(1),i=null)},i:U,o:U,d(l){l&&O(e),o.d(l),i&&i.d()}}}function cb(n,e,t){let{events:a=[]}=e,{categories:r}=e,{calendar:o}=e,i=0,l,s=0,d=c=>{if(l=c,a.length){let h=c.parentElement?.getBoundingClientRect()?.width;if(!h||Math.floor(h)==Math.floor(s))return;s=h;let m=h;c.empty(),t(1,i=0);for(let p of a)if(new Cf({target:c,props:{color:u(p)}}),m=h-c.getBoundingClientRect().width,m<0){c.lastElementChild.detach(),t(1,i=a.length-a.indexOf(p));break}else if(m==0){t(1,i=a.length-a.indexOf(p)-1);break}}};o.on("view-resized",()=>{!l||d(l)});let u=c=>r.find(h=>h.id==c.category)?.color;return n.$$set=c=>{"events"in c&&t(0,a=c.events),"categories"in c&&t(3,r=c.categories),"calendar"in c&&t(4,o=c.calendar)},[a,i,d,r,o]}var xf=class extends ie{constructor(e){super();oe(this,e,cb,ub,ee,{events:0,categories:3,calendar:4},lb)}},Ff=xf;function db(n){se(n,"svelte-3pptg2",".day.svelte-3pptg2{background-color:transparent;border:2px solid transparent;border-radius:4px;color:var(--color-text-day);cursor:pointer;font-size:0.8em;height:100%;padding:2px;position:relative;text-align:center;vertical-align:baseline;overflow:visible;display:flex;flex-flow:column nowrap}.active.svelte-3pptg2{background-color:var(--background-secondary)}.viewing.svelte-3pptg2{border:2px solid var(--background-modifier-border)}.adjacent-month.svelte-3pptg2{opacity:0.25}")}function Tf(n,e,t){let a=n.slice();return a[20]=e[t][0],a[21]=e[t][1],a}function fb(n){let e,t;return e=new Ff({props:{events:n[4],categories:n[9],calendar:n[0].calendar}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&16&&(o.events=a[4]),r&512&&(o.categories=a[9]),r&1&&(o.calendar=a[0].calendar),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function hb(n){let e,t,a,r=n[5]&&n[10]&&n[10].length&&Sf(n);return t=new _i({props:{events:n[4],categories:n[9],date:n[8],calendar:n[0].calendar}}),t.$on("event-click",n[12]),t.$on("event-mouseover",n[13]),t.$on("event-context",n[14]),{c(){r&&r.c(),e=P(),te(t.$$.fragment)},m(o,i){r&&r.m(o,i),q(o,e,i),X(t,o,i),a=!0},p(o,i){o[5]&&o[10]&&o[10].length?r?(r.p(o,i),i&1056&&T(r,1)):(r=Sf(o),r.c(),T(r,1),r.m(e.parentNode,e)):r&&(_e(),R(r,1,1,()=>{r=null}),Ee());let l={};i&16&&(l.events=o[4]),i&512&&(l.categories=o[9]),i&256&&(l.date=o[8]),i&1&&(l.calendar=o[0].calendar),t.$set(l)},i(o){a||(T(r),T(t.$$.fragment,o),a=!0)},o(o){R(r),R(t.$$.fragment,o),a=!1},d(o){r&&r.d(o),o&&O(e),Q(t,o)}}}function Sf(n){let e,t,a=n[10],r=[];for(let i=0;i<a.length;i+=1)r[i]=Bf(Tf(n,a,i));let o=i=>R(r[i],1,1,()=>{r[i]=null});return{c(){e=E("div");for(let i=0;i<r.length;i+=1)r[i].c();b(e,"class","moon-container")},m(i,l){q(i,e,l);for(let s=0;s<r.length;s+=1)r[s].m(e,null);t=!0},p(i,l){if(l&1024){a=i[10];let s;for(s=0;s<a.length;s+=1){let d=Tf(i,a,s);r[s]?(r[s].p(d,l),T(r[s],1)):(r[s]=Bf(d),r[s].c(),T(r[s],1),r[s].m(e,null))}for(_e(),s=a.length;s<r.length;s+=1)o(s);Ee()}},i(i){if(!t){for(let l=0;l<a.length;l+=1)T(r[l]);t=!0}},o(i){r=r.filter(Boolean);for(let l=0;l<r.length;l+=1)R(r[l]);t=!1},d(i){i&&O(e),We(r,i)}}}function Bf(n){let e,t;return e=new yn({props:{moon:n[20],phase:n[21]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&1024&&(o.moon=a[20]),r&1024&&(o.phase=a[21]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function pb(n){let e,t,a=n[0].number+"",r,o,i,l,s,d,u,c,h,m=[hb,fb],p=[];function D(y,A){return y[2]?0:1}return i=D(n,-1),l=p[i]=m[i](n),{c(){e=E("div"),t=E("span"),r=me(a),o=P(),l.c(),b(e,"class",s=""+(so(n[1]?"adjacent-month fantasy-adjacent-month":"")+" svelte-3pptg2")),b(e,"aria-label",d=!n[2]&&n[4].length?`${n[4].length} event${n[4].length==1?"":"s"}`:void 0),Ae(e,"day",!0),Ae(e,"fantasy-day",!0),Ae(e,"active",n[7]&&!n[1]),Ae(e,"viewing",n[3]&&n[6]&&!n[1])},m(y,A){q(y,e,A),w(e,t),w(t,r),w(e,o),p[i].m(e,null),u=!0,c||(h=[Y(e,"click",n[15]),Y(e,"dblclick",n[16]),Y(e,"contextmenu",n[17])],c=!0)},p(y,[A]){(!u||A&1)&&a!==(a=y[0].number+"")&&De(r,a);let _=i;i=D(y,A),i===_?p[i].p(y,A):(_e(),R(p[_],1,1,()=>{p[_]=null}),Ee(),l=p[i],l?l.p(y,A):(l=p[i]=m[i](y),l.c()),T(l,1),l.m(e,null)),(!u||A&2&&s!==(s=""+(so(y[1]?"adjacent-month fantasy-adjacent-month":"")+" svelte-3pptg2")))&&b(e,"class",s),(!u||A&20&&d!==(d=!y[2]&&y[4].length?`${y[4].length} event${y[4].length==1?"":"s"}`:void 0))&&b(e,"aria-label",d),A&2&&Ae(e,"day",!0),A&2&&Ae(e,"fantasy-day",!0),A&130&&Ae(e,"active",y[7]&&!y[1]),A&74&&Ae(e,"viewing",y[3]&&y[6]&&!y[1])},i(y){u||(T(l),u=!0)},o(y){R(l),u=!1},d(y){y&&O(e),p[i].d(),c=!1,de(h)}}}function mb(n,e,t){let a,r,o,i,l,s=ye(),{day:d}=e,{adjacent:u}=e,{fullView:c}=e,h=[],m;Ft("dayView").subscribe(N=>t(3,m=N));let D;Ft("displayMoons").subscribe(N=>t(5,D=N)),d.calendar.on("month-update",()=>{t(7,i=d.isCurrentDay),t(6,l=d.isDisplaying),t(4,h=d.events)}),d.calendar.on("day-update",()=>{t(7,i=d.isCurrentDay),t(6,l=d.isDisplaying)});function A(N){ve.call(this,n,N)}function _(N){ve.call(this,n,N)}function C(N){ve.call(this,n,N)}let B=()=>s("day-click",d),z=()=>s("day-doubleclick",d),L=N=>s("day-context-menu",{day:d,evt:N});return n.$$set=N=>{"day"in N&&t(0,d=N.day),"adjacent"in N&&t(1,u=N.adjacent),"fullView"in N&&t(2,c=N.fullView)},n.$$.update=()=>{if(n.$$.dirty&3){e:u||t(4,h=d.events)}if(n.$$.dirty&1){e:t(10,a=d.moons)}if(n.$$.dirty&1){e:t(9,r=d.calendar.categories)}if(n.$$.dirty&1){e:t(8,o=d.date)}if(n.$$.dirty&1){e:t(7,i=d.isCurrentDay)}if(n.$$.dirty&1){e:t(6,l=d.isDisplaying)}if(n.$$.dirty&8){e:t(3,m)}},[d,u,c,m,h,D,l,i,o,r,a,s,A,_,C,B,z,L]}var Nf=class extends ie{constructor(e){super();oe(this,e,mb,pb,ee,{day:0,adjacent:1,fullView:2},db)}},Ei=Nf;function gb(n){se(n,"svelte-1xujcmn",`.fantasy-month.svelte-1xujcmn{display:grid;grid-template-columns:repeat(
            var(--calendar-columns),
            var(--column-widths)
        );grid-auto-rows:var(--calendar-rows)}.full-view.svelte-1xujcmn{height:100%;margin-bottom:0.5rem}.month.svelte-1xujcmn{border-radius:1rem;padding:0.25rem}.month-name.svelte-1xujcmn{margin:0}.month.svelte-1xujcmn .fantasy-day.day{padding:0px}`)}function Mf(n,e,t){let a=n.slice();return a[16]=e[t],a}function If(n,e,t){let a=n.slice();return a[16]=e[t],a}function Of(n,e,t){let a=n.slice();return a[16]=e[t],a}function qf(n){let e,t=n[1].name+"",a;return{c(){e=E("h3"),a=me(t),b(e,"class","month-name svelte-1xujcmn")},m(r,o){q(r,e,o),w(e,a)},p(r,o){o&2&&t!==(t=r[1].name+"")&&De(a,t)},d(r){r&&O(e)}}}function yb(n){let e;return{c(){e=E("div")},m(t,a){q(t,e,a)},p:U,i:U,o:U,d(t){t&&O(e)}}}function vb(n){let e,t;return e=new Ei({props:{day:n[16],adjacent:!0,fullView:n[3]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&256&&(o.day=a[16]),r&8&&(o.fullView=a[3]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Rf(n){let e,t,a,r,o=[vb,yb],i=[];function l(s,d){return s[5]&&s[16]!=null?0:1}return e=l(n,-1),t=i[e]=o[e](n),{c(){t.c(),a=qe()},m(s,d){i[e].m(s,d),q(s,a,d),r=!0},p(s,d){let u=e;e=l(s,d),e===u?i[e].p(s,d):(_e(),R(i[u],1,1,()=>{i[u]=null}),Ee(),t=i[e],t?t.p(s,d):(t=i[e]=o[e](s),t.c()),T(t,1),t.m(a.parentNode,a))},i(s){r||(T(t),r=!0)},o(s){R(t),r=!1},d(s){i[e].d(s),s&&O(a)}}}function Lf(n){let e,t;return e=new Ei({props:{day:n[16],adjacent:!1,fullView:n[3]}}),e.$on("day-click",n[10]),e.$on("day-doubleclick",n[11]),e.$on("day-context-menu",n[12]),e.$on("event-click",n[13]),e.$on("event-mouseover",n[14]),e.$on("event-context",n[15]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&128&&(o.day=a[16]),r&8&&(o.fullView=a[3]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function bb(n){let e;return{c(){e=E("div")},m(t,a){q(t,e,a)},p:U,i:U,o:U,d(t){t&&O(e)}}}function wb(n){let e,t;return e=new Ei({props:{day:n[16],adjacent:!0,fullView:n[3]}}),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&64&&(o.day=a[16]),r&8&&(o.fullView=a[3]),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Pf(n){let e,t,a,r,o=[wb,bb],i=[];function l(s,d){return s[5]?0:1}return e=l(n,-1),t=i[e]=o[e](n),{c(){t.c(),a=qe()},m(s,d){i[e].m(s,d),q(s,a,d),r=!0},p(s,d){let u=e;e=l(s,d),e===u?i[e].p(s,d):(_e(),R(i[u],1,1,()=>{i[u]=null}),Ee(),t=i[e],t?t.p(s,d):(t=i[e]=o[e](s),t.c()),T(t,1),t.m(a.parentNode,a))},i(s){r||(T(t),r=!0)},o(s){R(t),r=!1},d(s){i[e].d(s),s&&O(a)}}}function jf(n){let e,t,a,r,o=n[8],i=[];for(let p=0;p<o.length;p+=1)i[p]=Rf(Of(n,o,p));let l=p=>R(i[p],1,1,()=>{i[p]=null}),s=n[7],d=[];for(let p=0;p<s.length;p+=1)d[p]=Lf(If(n,s,p));let u=p=>R(d[p],1,1,()=>{d[p]=null}),c=n[6],h=[];for(let p=0;p<c.length;p+=1)h[p]=Pf(Mf(n,c,p));let m=p=>R(h[p],1,1,()=>{h[p]=null});return{c(){e=E("div");for(let p=0;p<i.length;p+=1)i[p].c();t=P();for(let p=0;p<d.length;p+=1)d[p].c();a=P();for(let p=0;p<h.length;p+=1)h[p].c();b(e,"class","fantasy-month svelte-1xujcmn"),et(e,"--calendar-columns",n[2]),et(e,"--calendar-rows",n[3]?`${1/n[4]*100}%`:"1fr"),Ae(e,"full-view",n[3]),Ae(e,"year-view",n[0])},m(p,D){q(p,e,D);for(let y=0;y<i.length;y+=1)i[y].m(e,null);w(e,t);for(let y=0;y<d.length;y+=1)d[y].m(e,null);w(e,a);for(let y=0;y<h.length;y+=1)h[y].m(e,null);r=!0},p(p,D){if(D&296){o=p[8];let y;for(y=0;y<o.length;y+=1){let A=Of(p,o,y);i[y]?(i[y].p(A,D),T(i[y],1)):(i[y]=Rf(A),i[y].c(),T(i[y],1),i[y].m(e,t))}for(_e(),y=o.length;y<i.length;y+=1)l(y);Ee()}if(D&136){s=p[7];let y;for(y=0;y<s.length;y+=1){let A=If(p,s,y);d[y]?(d[y].p(A,D),T(d[y],1)):(d[y]=Lf(A),d[y].c(),T(d[y],1),d[y].m(e,a))}for(_e(),y=s.length;y<d.length;y+=1)u(y);Ee()}if(D&104){c=p[6];let y;for(y=0;y<c.length;y+=1){let A=Mf(p,c,y);h[y]?(h[y].p(A,D),T(h[y],1)):(h[y]=Pf(A),h[y].c(),T(h[y],1),h[y].m(e,null))}for(_e(),y=c.length;y<h.length;y+=1)m(y);Ee()}(!r||D&4)&&et(e,"--calendar-columns",p[2]),(!r||D&24)&&et(e,"--calendar-rows",p[3]?`${1/p[4]*100}%`:"1fr"),D&8&&Ae(e,"full-view",p[3]),D&1&&Ae(e,"year-view",p[0])},i(p){if(!r){for(let D=0;D<o.length;D+=1)T(i[D]);for(let D=0;D<s.length;D+=1)T(d[D]);for(let D=0;D<c.length;D+=1)T(h[D]);r=!0}},o(p){i=i.filter(Boolean);for(let D=0;D<i.length;D+=1)R(i[D]);d=d.filter(Boolean);for(let D=0;D<d.length;D+=1)R(d[D]);h=h.filter(Boolean);for(let D=0;D<h.length;D+=1)R(h[D]);r=!1},d(p){p&&O(e),We(i,p),We(d,p),We(h,p)}}}function Db(n){let e,t,a=n[7],r,o,i,l=n[0]&&qf(n),s=jf(n);return{c(){e=E("div"),l&&l.c(),t=P(),s.c(),b(e,"class","month svelte-1xujcmn"),b(e,"data-id",r=n[1].id),b(e,"id",o=`MONTH-${n[1].id}-${n[1].year}`),Ae(e,"full-view",n[3])},m(d,u){q(d,e,u),l&&l.m(e,null),w(e,t),s.m(e,null),i=!0},p(d,[u]){d[0]?l?l.p(d,u):(l=qf(d),l.c(),l.m(e,t)):l&&(l.d(1),l=null),u&128&&ee(a,a=d[7])?(_e(),R(s,1,1,U),Ee(),s=jf(d),s.c(),T(s),s.m(e,null)):s.p(d,u),(!i||u&2&&r!==(r=d[1].id))&&b(e,"data-id",r),(!i||u&2&&o!==(o=`MONTH-${d[1].id}-${d[1].year}`))&&b(e,"id",o),u&8&&Ae(e,"full-view",d[3])},i(d){i||(T(s),i=!0)},o(d){R(s),i=!1},d(d){d&&O(e),l&&l.d(),s.d(d)}}}function _b(n,e,t){let a,r,o,i,{yearView:l=!1}=e,{month:s}=e,{columns:d}=e,{fullView:u=!1}=e,{weeks:c}=e,{showPad:h=!0}=e;function m(C){ve.call(this,n,C)}function p(C){ve.call(this,n,C)}function D(C){ve.call(this,n,C)}function y(C){ve.call(this,n,C)}function A(C){ve.call(this,n,C)}function _(C){ve.call(this,n,C)}return n.$$set=C=>{"yearView"in C&&t(0,l=C.yearView),"month"in C&&t(1,s=C.month),"columns"in C&&t(2,d=C.columns),"fullView"in C&&t(3,u=C.fullView),"weeks"in C&&t(4,c=C.weeks),"showPad"in C&&t(5,h=C.showPad)},n.$$.update=()=>{if(n.$$.dirty&2){e:t(9,a=s.calendar.getPaddedDaysForMonth(s))}if(n.$$.dirty&512){e:t(8,r=a.previous)}if(n.$$.dirty&2){e:t(7,o=s.days)}if(n.$$.dirty&512){e:t(6,i=a.next)}},[l,s,d,u,c,h,i,o,r,a,m,p,D,y,A,_]}var Vf=class extends ie{constructor(e){super();oe(this,e,_b,Db,ee,{yearView:0,month:1,columns:2,fullView:3,weeks:4,showPad:5},gb)}},Ba=Vf;var Ci=Te(require("obsidian"));function Eb(n){se(n,"svelte-131055d",".fantasy-nav.nav.nav.svelte-131055d{padding:10px 0px;margin:0;display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:stretch}.container.svelte-131055d{display:flex;align-items:center}.fantasy-title.svelte-131055d{margin:0;line-height:1.25}.fantasy-right-nav.svelte-131055d{display:flex;justify-content:center;align-items:flex-start}.calendar-clickable.svelte-131055d{align-items:center;cursor:pointer;display:flex;justify-content:center}.title-container.svelte-131055d{display:flex;flex-flow:column nowrap;align-items:flex-start}")}function Cb(n){let e,t,a,r,o,i,l,s,d,u,c,h,m,p,D,y,A,_,C,B,z,L,N,j,F;return{c(){e=E("div"),t=E("div"),a=E("h3"),r=E("span"),o=me(n[0]),i=P(),l=E("span"),s=me(n[1]),d=P(),u=E("div"),c=E("div"),h=E("div"),p=P(),D=E("div"),y=E("span"),y.textContent="Today",_=P(),C=E("div"),z=P(),L=E("div"),b(r,"class","fantasy-month month"),b(l,"class","fantasy-year year"),b(a,"class","fantasy-title title svelte-131055d"),b(t,"class","title-container svelte-131055d"),b(h,"class","arrow calendar-clickable svelte-131055d"),b(h,"aria-label","Previous Month"),b(D,"class","reset-button calendar-clickable svelte-131055d"),b(D,"aria-label",A="Today is "+n[2]),b(C,"class","arrow right calendar-clickable svelte-131055d"),b(C,"aria-label","Next Month"),b(L,"class","calendar-clickable svelte-131055d"),b(L,"aria-label","Calendar Settings"),b(c,"class","container svelte-131055d"),b(u,"class","right-nav fantasy-right-nav svelte-131055d"),b(e,"class","fantasy-nav nav svelte-131055d")},m(W,I){q(W,e,I),w(e,t),w(t,a),w(a,r),w(r,o),w(a,i),w(a,l),w(l,s),w(e,d),w(e,u),w(u,c),w(c,h),w(c,p),w(c,D),w(D,y),w(c,_),w(c,C),w(c,z),w(c,L),j||(F=[ae(m=n[4].call(null,h)),Y(h,"click",n[7]),Y(D,"click",n[8]),ae(B=n[5].call(null,C)),Y(C,"click",n[9]),ae(N=n[6].call(null,L)),Y(L,"click",n[10])],j=!0)},p(W,[I]){I&1&&De(o,W[0]),I&2&&De(s,W[1]),I&4&&A!==(A="Today is "+W[2])&&b(D,"aria-label",A)},i:U,o:U,d(W){W&&O(e),j=!1,de(F)}}}function Ab(n,e,t){let a=ye(),{month:r}=e,{year:o}=e,{current:i}=e,l=p=>{new Ci.ExtraButtonComponent(p).setIcon("left-arrow")},s=p=>{new Ci.ExtraButtonComponent(p).setIcon("right-arrow")},d=p=>{new Ci.ExtraButtonComponent(p).setIcon("gear")},u=()=>a("previous"),c=()=>a("reset"),h=p=>a("next"),m=p=>a("settings",p);return n.$$set=p=>{"month"in p&&t(0,r=p.month),"year"in p&&t(1,o=p.year),"current"in p&&t(2,i=p.current)},[r,o,i,a,l,s,d,u,c,h,m]}var Hf=class extends ie{constructor(e){super();oe(this,e,Ab,Cb,ee,{month:0,year:1,current:2},Eb)}},Wf=Hf;var Ai=Te(require("obsidian"));function kb(n){se(n,"svelte-i3pajt","#calendar-container .fantasy-nav.nav.nav.svelte-i3pajt{padding:0;margin:0;display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center;position:sticky;top:0;z-index:2}.fantasy-year-nav.svelte-i3pajt{display:flex;align-items:center;margin-right:auto}.container.svelte-i3pajt{display:flex;align-items:center}.fantasy-title.svelte-i3pajt{margin:0}.fantasy-right-nav.svelte-i3pajt{display:flex;justify-content:center;align-items:flex-start}.calendar-clickable.svelte-i3pajt{align-items:center;cursor:pointer;display:flex;justify-content:center}")}function Gf(n){let e,t,a,r;return{c(){e=E("div"),b(e,"class","arrow calendar-clickable svelte-i3pajt"),b(e,"aria-label","Previous Year")},m(o,i){q(o,e,i),a||(r=[ae(t=n[4].call(null,e)),Y(e,"click",n[7])],a=!0)},p:U,d(o){o&&O(e),a=!1,de(r)}}}function Uf(n){let e,t,a,r;return{c(){e=E("div"),b(e,"class","arrow right calendar-clickable svelte-i3pajt"),b(e,"aria-label","Next Year")},m(o,i){q(o,e,i),a||(r=[ae(t=n[5].call(null,e)),Y(e,"click",n[9])],a=!0)},p:U,d(o){o&&O(e),a=!1,de(r)}}}function xb(n){let e,t,a,r,o,i,l,s,d,u,c,h,m,p,D,y,A,_,C=n[1]&&Gf(n),B=n[1]&&Uf(n);return{c(){e=E("div"),t=E("div"),a=E("h2"),r=E("span"),o=me(n[0]),i=P(),l=E("div"),s=E("div"),C&&C.c(),d=P(),u=E("div"),c=E("span"),c.textContent="Today",m=P(),B&&B.c(),p=P(),D=E("div"),b(r,"class","fantasy-year"),b(a,"class","fantasy-title svelte-i3pajt"),b(t,"class","fantasy-year-nav svelte-i3pajt"),b(u,"class","reset-button calendar-clickable svelte-i3pajt"),b(u,"aria-label",h="Today is "+n[2]),b(D,"class","calendar-clickable svelte-i3pajt"),b(D,"aria-label","Calendar Settings"),b(s,"class","container svelte-i3pajt"),b(l,"class","right-nav fantasy-right-nav svelte-i3pajt"),b(e,"class","fantasy-nav nav svelte-i3pajt")},m(z,L){q(z,e,L),w(e,t),w(t,a),w(a,r),w(r,o),w(e,i),w(e,l),w(l,s),C&&C.m(s,null),w(s,d),w(s,u),w(u,c),w(s,m),B&&B.m(s,null),w(s,p),w(s,D),A||(_=[Y(u,"click",n[8]),ae(y=n[6].call(null,D)),Y(D,"click",n[10])],A=!0)},p(z,[L]){L&1&&De(o,z[0]),z[1]?C?C.p(z,L):(C=Gf(z),C.c(),C.m(s,d)):C&&(C.d(1),C=null),L&4&&h!==(h="Today is "+z[2])&&b(u,"aria-label",h),z[1]?B?B.p(z,L):(B=Uf(z),B.c(),B.m(s,p)):B&&(B.d(1),B=null)},i:U,o:U,d(z){z&&O(e),C&&C.d(),B&&B.d(),A=!1,de(_)}}}function Fb(n,e,t){let a=ye(),{year:r}=e,{arrows:o=!1}=e,{current:i}=e,l=p=>{new Ai.ExtraButtonComponent(p).setIcon("left-arrow")},s=p=>{new Ai.ExtraButtonComponent(p).setIcon("right-arrow")},d=p=>{new Ai.ExtraButtonComponent(p).setIcon("gear")},u=()=>a("previous"),c=()=>a("reset"),h=p=>a("next"),m=p=>a("settings",p);return n.$$set=p=>{"year"in p&&t(0,r=p.year),"arrows"in p&&t(1,o=p.arrows),"current"in p&&t(2,i=p.current)},[r,o,i,a,l,s,d,u,c,h,m]}var zf=class extends ie{constructor(e){super();oe(this,e,Fb,xb,ee,{year:0,arrows:1,current:2},kb)}},ki=zf;function Tb(n){se(n,"svelte-15hvixf",".year-view.svelte-15hvixf{height:100%;position:relative;display:flex;flex-direction:column}.year.svelte-15hvixf{display:grid;grid-template-columns:1fr 1fr 1fr;gap:1rem;overflow:auto;flex:1}.year.svelte-15hvixf:not(.full-view){grid-template-columns:1fr}")}function Sb(n){let e,t,a,r,o,i,l;return t=new ki({props:{year:n[3],current:n[0]}}),t.$on("next",n[9]),t.$on("previous",n[10]),t.$on("reset",n[11]),t.$on("settings",n[12]),{c(){e=E("div"),te(t.$$.fragment),a=P(),r=E("div"),b(r,"class","year svelte-15hvixf"),Ae(r,"full-view",n[1]),b(e,"class","year-view svelte-15hvixf")},m(s,d){q(s,e,d),X(t,e,null),w(e,a),w(e,r),n[13](r),o=!0,i||(l=Y(r,"scroll",n[5],{once:!0}),i=!0)},p(s,[d]){let u={};d&8&&(u.year=s[3]),d&1&&(u.current=s[0]),t.$set(u),d&2&&Ae(r,"full-view",s[1])},i(s){o||(T(t.$$.fragment,s),o=!0)},o(s){R(t.$$.fragment,s),o=!1},d(s){s&&O(e),Q(t),n[13](null),i=!1,l()}}}function Bb(n,e,t){let a,r=ye(),{current:o}=e,{year:i}=e,{columns:l}=e,{fullView:s}=e,d,u,c,h=Ft("calendar"),m;h.subscribe(Z=>{t(8,m=Z)});let p=[],D=Ft("dayView"),y=Ft("displayMoons"),A=new IntersectionObserver((Z,he)=>{he===A&&(!Z.length||!Z[0].isIntersecting||(A.disconnect(),!(!m.canGoToNextYear(c.year)&&c.number===m.data.months.length-1)&&(B(),W(p.shift()),_())))},{root:d,rootMargin:"0px",threshold:.25}),_=()=>{let Z=d.children[d.children.length-2];!Z||A.observe(Z)},C=new IntersectionObserver((Z,he)=>{if(he!==C||!Z&&!Z.length||Z[0].isIntersecting)return;let Se=d.getBoundingClientRect();Z[0].boundingClientRect.top<Se.top&&(t(6,i+=1),N.observe(Z[0].target),C.disconnect())},{root:d,rootMargin:"0px",threshold:0}),B=(Z=!0)=>{if(!(!m.canGoToNextYear(c.year)&&c.number===m.data.months.length-1)){if(c=m.getMonth(c.number+1,c.year),c.number===0&&!(d.lastElementChild instanceof HTMLHeadingElement)){let he=d.createEl("h2",{text:m.getNameForYear(c.year),cls:"fantasy-title"});p.push(he),C.disconnect(),C.observe(he)}p.push(F(c,!1)),Z&&(u=m.getMonth((u?.number??0)+1,u?.year??1)),L()}},z=new IntersectionObserver((Z,he)=>{he===z&&(!Z.length||!Z[0].isIntersecting||(z.disconnect(),!!u&&(j(),W(p.pop()),L())))},{root:d,rootMargin:"0px",threshold:.25}),L=()=>{let Z=d.children[1];!Z||z.observe(Z)},N=new IntersectionObserver((Z,he)=>{he===N&&(!Z&&!Z.length||Z[0].isIntersecting&&(t(6,i-=1),C.observe(Z[0].target),N.disconnect()))},{root:d,rootMargin:"0px",threshold:0}),j=(Z=!0)=>{if(u=m.getMonth(u.number-1,u.year),!!u){if(p.unshift(F(u,!0)),u.number===0&&!(d.firstElementChild instanceof HTMLHeadingElement)){let he=createEl("h2",{text:m.getNameForYear(u.year),cls:"fantasy-title"});d.prepend(he),p.unshift(he),N.disconnect(),N.observe(he)}Z&&(c=m.getMonth(c.number-1,c.year)),_()}},F=(Z,he)=>{let Se=new Ba({target:d,anchor:he?d.children[0]:null,props:{month:Z,fullView:!1,yearView:!0,columns:l,weeks:m.weekdays.length,showPad:!1},context:new Map([["dayView",D],["displayMoons",y]])});return Se.$on("day-click",ce=>r("day-click",ce.detail)),Se.$on("day-doubleclick",ce=>r("day-doubleclick",ce.detail)),Se.$on("day-context-menu",ce=>r("day-context-menu",ce.detail)),Se.$on("event-mouseover",ce=>r("event-mouseover",ce.detail)),Se.$on("event-mouseover",ce=>r("event-mouseover",ce.detail)),Se},W=Z=>{Z instanceof HTMLHeadingElement?Z.detach():Z.$destroy()},I=async(Z=!1)=>{for(let Se of p)W(Se);p.splice(0,p.length),d.empty(),await Un(),t(6,i=m.current.year),u=m.getMonth(m.displayed.month-1,m.displayed.year),c=u;for(let Se=0;Se<m.data.months.length;Se++)B(!1);j(!1),await Un(),d.querySelector(`#MONTH-${m.currentMonth.id}-${i}`).scrollIntoView(!0),Z&&G()};fo(()=>{z.disconnect(),A.disconnect(),N.disconnect(),C.disconnect()}),Gn(I);let G=async()=>{await Un(),z.observe(d.children[1]),A.observe(d.children[d.children.length-2])};function ue(Z){ve.call(this,n,Z)}function we(Z){ve.call(this,n,Z)}let ge=()=>I(!0);function Ce(Z){ve.call(this,n,Z)}function K(Z){Fn[Z?"unshift":"push"](()=>{d=Z,t(2,d)})}return n.$$set=Z=>{"current"in Z&&t(0,o=Z.current),"year"in Z&&t(6,i=Z.year),"columns"in Z&&t(7,l=Z.columns),"fullView"in Z&&t(1,s=Z.fullView)},n.$$.update=()=>{if(n.$$.dirty&320){e:t(3,a=m.getNameForYear(i))}},[o,s,d,a,I,G,i,l,m,ue,we,ge,Ce,K]}var Yf=class extends ie{constructor(e){super();oe(this,e,Bb,Sb,ee,{current:0,year:6,columns:7,fullView:1},Tb)}},Zf=Yf;var us=Te(require("obsidian"));function Nb(n){se(n,"svelte-ztrrn8",".year.svelte-ztrrn8{display:grid;grid-template-columns:1fr 1fr 1fr;gap:1rem;overflow:auto;flex:1}.year.svelte-ztrrn8:not(.full-view){grid-template-columns:1fr}")}function $f(n,e,t){let a=n.slice();return a[8]=e[t],a}function Kf(n){let e,t;return e=new Ba({props:{month:n[8],fullView:!1,yearView:!0,columns:n[2],weeks:n[8].calendar.weekdays.length,showPad:!1}}),e.$on("day-click",n[3]),e.$on("day-doubleclick",n[4]),e.$on("day-context-menu",n[5]),e.$on("event-click",n[6]),e.$on("event-mouseover",n[7]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r&2&&(o.month=a[8]),r&4&&(o.columns=a[2]),r&2&&(o.weeks=a[8].calendar.weekdays.length),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Mb(n){let e,t,a=n[1],r=[];for(let i=0;i<a.length;i+=1)r[i]=Kf($f(n,a,i));let o=i=>R(r[i],1,1,()=>{r[i]=null});return{c(){e=E("div");for(let i=0;i<r.length;i+=1)r[i].c();b(e,"class","year svelte-ztrrn8"),Ae(e,"full-view",n[0])},m(i,l){q(i,e,l);for(let s=0;s<r.length;s+=1)r[s].m(e,null);t=!0},p(i,[l]){if(l&6){a=i[1];let s;for(s=0;s<a.length;s+=1){let d=$f(i,a,s);r[s]?(r[s].p(d,l),T(r[s],1)):(r[s]=Kf(d),r[s].c(),T(r[s],1),r[s].m(e,null))}for(_e(),s=a.length;s<r.length;s+=1)o(s);Ee()}l&1&&Ae(e,"full-view",i[0])},i(i){if(!t){for(let l=0;l<a.length;l+=1)T(r[l]);t=!0}},o(i){r=r.filter(Boolean);for(let l=0;l<r.length;l+=1)R(r[l]);t=!1},d(i){i&&O(e),We(r,i)}}}function Ib(n,e,t){let{fullView:a}=e,{months:r}=e,{columns:o}=e;function i(c){ve.call(this,n,c)}function l(c){ve.call(this,n,c)}function s(c){ve.call(this,n,c)}function d(c){ve.call(this,n,c)}function u(c){ve.call(this,n,c)}return n.$$set=c=>{"fullView"in c&&t(0,a=c.fullView),"months"in c&&t(1,r=c.months),"columns"in c&&t(2,o=c.columns)},[a,r,o,i,l,s,d,u]}var Qf=class extends ie{constructor(e){super();oe(this,e,Ib,Mb,ee,{fullView:0,months:1,columns:2},Nb)}},Xf=Qf;function Ob(n){se(n,"svelte-1xpvbi",".year-view.svelte-1xpvbi{height:100%;position:relative;display:flex;flex-direction:column}.year-container.svelte-1xpvbi{flex:1;overflow:auto}")}function qb(n){let e,t,a,r,o;return t=new ki({props:{year:n[2],current:n[0],arrows:!0}}),t.$on("next",n[9]),t.$on("previous",n[10]),t.$on("reset",n[11]),t.$on("settings",n[12]),{c(){e=E("div"),te(t.$$.fragment),a=P(),r=E("div"),b(r,"class","year-container svelte-1xpvbi"),b(e,"class","year-view svelte-1xpvbi")},m(i,l){q(i,e,l),X(t,e,null),w(e,a),w(e,r),n[13](r),o=!0},p(i,[l]){let s={};l&4&&(s.year=i[2]),l&1&&(s.current=i[0]),t.$set(s)},i(i){o||(T(t.$$.fragment,i),o=!0)},o(i){R(t.$$.fragment,i),o=!1},d(i){i&&O(e),Q(t),n[13](null)}}}function Rb(n,e,t){let a,r=ye(),o=Ft("calendar"),i=Ft("dayView"),l=Ft("displayMoons"),s;o.subscribe(F=>{t(8,s=F)});let{year:d}=e,{current:u}=e,{columns:c}=e,h,m=(F,W=!1)=>{let I=s.getMonthsForYear(F),G=new Xf({target:h,anchor:W?h.children[0]:null,props:{months:I,fullView:!0,columns:c},context:new Map([["dayView",i],["displayMoons",l]])});return G.$on("day-click",ue=>r("day-click",ue.detail)),G.$on("day-doubleclick",ue=>r("day-doubleclick",ue.detail)),G.$on("day-context-menu",ue=>r("day-context-menu",ue.detail)),G.$on("event-mouseover",ue=>r("event-mouseover",ue.detail)),G.$on("event-mouseover",ue=>r("event-mouseover",ue.detail)),G},p=F=>{F instanceof HTMLHeadingElement?F.detach():F.$destroy()},D=[],y=()=>{if(!s.canGoToNextYear(d)){new us.Notice("This is the last year. Additional years can be created in settings.");return}t(6,d=d+1),C(d)},A=()=>{if(d===1){new us.Notice("This is the earliest year.");return}t(6,d=d-1),C(d)},_=()=>{t(6,d=s.current.year),C(d)},C=async F=>{D.forEach(W=>p(W)),h.empty(),await Un(),F=F,D.push(m(F))};Gn(()=>D.push(m(d)));let B=()=>y(),z=()=>A(),L=()=>_();function N(F){ve.call(this,n,F)}function j(F){Fn[F?"unshift":"push"](()=>{h=F,t(1,h)})}return n.$$set=F=>{"year"in F&&t(6,d=F.year),"current"in F&&t(0,u=F.current),"columns"in F&&t(7,c=F.columns)},n.$$.update=()=>{if(n.$$.dirty&320){e:t(2,a=s.getNameForYear(d))}},[u,h,a,y,A,_,d,c,s,B,z,L,N,j]}var Jf=class extends ie{constructor(e){super();oe(this,e,Rb,qb,ee,{year:6,current:0,columns:7},Ob)}},eh=Jf;function Lb(n){se(n,"svelte-1kty1w6","#calendar-container.year-view.svelte-1kty1w6.svelte-1kty1w6{height:100%}#calendar-container.fantasy-calendar.full-view.svelte-1kty1w6.svelte-1kty1w6{width:100%;padding:0 0.5rem 0.5rem;height:100%;display:flex;flex-flow:column}.fantasy-calendar.full-view.svelte-1kty1w6 .month-container.svelte-1kty1w6{height:100%}.month-container.svelte-1kty1w6.svelte-1kty1w6{display:flex}.month-view.svelte-1kty1w6.svelte-1kty1w6{flex-grow:2}.weeks.svelte-1kty1w6.svelte-1kty1w6{display:grid;grid-template-rows:auto 1fr}.week-num-container.svelte-1kty1w6.svelte-1kty1w6{display:grid;grid-template-rows:repeat(var(--calendar-rows), auto);padding:0.25rem 0}.week-num.svelte-1kty1w6.svelte-1kty1w6{background-color:transparent;border:2px solid transparent;border-radius:4px;color:var(--color-text-day);cursor:pointer;font-size:0.8em;height:100%;padding:2px;position:relative;text-align:center;vertical-align:baseline;overflow:visible}.weekdays.svelte-1kty1w6.svelte-1kty1w6{display:grid;grid-template-columns:repeat(var(--calendar-columns), 1fr);grid-template-rows:auto;padding:0 0.25rem;gap:2px}.weekday.svelte-1kty1w6.svelte-1kty1w6{background-color:var(--color-background-heading);color:var(--color-text-heading);font-size:0.6em;letter-spacing:1px;padding:4px;text-transform:uppercase;text-align:center;border:2px solid transparent}hr.svelte-1kty1w6.svelte-1kty1w6{margin:1rem 0}.moon-container{display:flex;flex-flow:row wrap;align-items:center;justify-content:center}")}function th(n,e,t){let a=n.slice();return a[49]=e[t],a}function nh(n,e,t){let a=n.slice();return a[52]=e[t],a}function Pb(n){let e,t,a,r,o,i,l,s,d,u;e=new Wf({props:{month:n[6].name,year:n[9],current:n[3].displayedDate}}),e.$on("next",n[31]),e.$on("previous",n[32]),e.$on("reset",n[33]),e.$on("settings",n[34]);let c=n[5]&&ah(n),h=n[11],m=[];for(let p=0;p<h.length;p+=1)m[p]=ih(th(n,h,p));return d=new Ba({props:{columns:n[11].length,weeks:n[7],month:n[6],fullView:n[1]}}),d.$on("day-click",n[35]),d.$on("day-doubleclick",n[36]),d.$on("day-context-menu",n[37]),d.$on("event-click",n[38]),d.$on("event-mouseover",n[39]),d.$on("event-context",n[40]),{c(){te(e.$$.fragment),t=P(),a=E("div"),r=E("div"),c&&c.c(),o=P(),i=E("div"),l=E("div");for(let p=0;p<m.length;p+=1)m[p].c();s=P(),te(d.$$.fragment),b(r,"class","weeks svelte-1kty1w6"),b(l,"class","weekdays svelte-1kty1w6"),b(i,"class","month-view svelte-1kty1w6"),b(a,"class","month-container svelte-1kty1w6")},m(p,D){X(e,p,D),q(p,t,D),q(p,a,D),w(a,r),c&&c.m(r,null),w(a,o),w(a,i),w(i,l);for(let y=0;y<m.length;y+=1)m[y].m(l,null);w(i,s),X(d,i,null),u=!0},p(p,D){let y={};if(D[0]&64&&(y.month=p[6].name),D[0]&512&&(y.year=p[9]),D[0]&8&&(y.current=p[3].displayedDate),e.$set(y),p[5]?c?c.p(p,D):(c=ah(p),c.c(),c.m(r,null)):c&&(c.d(1),c=null),D[0]&2048){h=p[11];let _;for(_=0;_<h.length;_+=1){let C=th(p,h,_);m[_]?m[_].p(C,D):(m[_]=ih(C),m[_].c(),m[_].m(l,null))}for(;_<m.length;_+=1)m[_].d(1);m.length=h.length}let A={};D[0]&2048&&(A.columns=p[11].length),D[0]&128&&(A.weeks=p[7]),D[0]&64&&(A.month=p[6]),D[0]&2&&(A.fullView=p[1]),d.$set(A)},i(p){u||(T(e.$$.fragment,p),T(d.$$.fragment,p),u=!0)},o(p){R(e.$$.fragment,p),R(d.$$.fragment,p),u=!1},d(p){Q(e,p),p&&O(t),p&&O(a),c&&c.d(),We(m,p),Q(d)}}}function jb(n){let e,t;return e=new eh({props:{year:n[10],columns:n[11].length,current:n[3].displayedDate}}),e.$on("next",n[22]),e.$on("previous",n[23]),e.$on("reset",n[24]),e.$on("settings",n[25]),e.$on("day-click",n[26]),e.$on("day-doubleclick",n[27]),e.$on("day-context-menu",n[28]),e.$on("event-click",n[29]),e.$on("event-mouseover",n[30]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r[0]&1024&&(o.year=a[10]),r[0]&2048&&(o.columns=a[11].length),r[0]&8&&(o.current=a[3].displayedDate),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function Vb(n){let e,t;return e=new Zf({props:{year:n[10],fullView:n[1],columns:n[11].length,current:n[3].displayedDate}}),e.$on("next",n[13]),e.$on("previous",n[14]),e.$on("reset",n[15]),e.$on("settings",n[16]),e.$on("day-click",n[17]),e.$on("day-doubleclick",n[18]),e.$on("day-context-menu",n[19]),e.$on("event-click",n[20]),e.$on("event-mouseover",n[21]),{c(){te(e.$$.fragment)},m(a,r){X(e,a,r),t=!0},p(a,r){let o={};r[0]&1024&&(o.year=a[10]),r[0]&2&&(o.fullView=a[1]),r[0]&2048&&(o.columns=a[11].length),r[0]&8&&(o.current=a[3].displayedDate),e.$set(o)},i(a){t||(T(e.$$.fragment,a),t=!0)},o(a){R(e.$$.fragment,a),t=!1},d(a){Q(e,a)}}}function ah(n){let e,t,a,r=[...Array(n[7]).keys()],o=[];for(let i=0;i<r.length;i+=1)o[i]=rh(nh(n,r,i));return{c(){e=E("span"),e.textContent="W",t=P(),a=E("div");for(let i=0;i<o.length;i+=1)o[i].c();b(e,"class","week-num weekday fantasy-weekday svelte-1kty1w6"),b(a,"class","week-num-container svelte-1kty1w6")},m(i,l){q(i,e,l),q(i,t,l),q(i,a,l);for(let s=0;s<o.length;s+=1)o[s].m(a,null)},p(i,l){if(l[0]&384){r=[...Array(i[7]).keys()];let s;for(s=0;s<r.length;s+=1){let d=nh(i,r,s);o[s]?o[s].p(d,l):(o[s]=rh(d),o[s].c(),o[s].m(a,null))}for(;s<o.length;s+=1)o[s].d(1);o.length=r.length}},d(i){i&&O(e),i&&O(t),i&&O(a),We(o,i)}}}function rh(n){let e,t=n[8]+1+n[52]+"",a;return{c(){e=E("span"),a=me(t),b(e,"class","week-num svelte-1kty1w6")},m(r,o){q(r,e,o),w(e,a)},p(r,o){o[0]&384&&t!==(t=r[8]+1+r[52]+"")&&De(a,t)},d(r){r&&O(e)}}}function ih(n){let e,t=n[49].name.slice(0,3)+"",a;return{c(){e=E("span"),a=me(t),b(e,"class","weekday fantasy-weekday svelte-1kty1w6")},m(r,o){q(r,e,o),w(e,a)},p(r,o){o[0]&2048&&t!==(t=r[49].name.slice(0,3)+"")&&De(a,t)},d(r){r&&O(e)}}}function oh(n){let e,t,a,r;return a=new _f({props:{displayDayNumber:n[4]}}),a.$on("close",n[41]),a.$on("event-click",n[42]),a.$on("event-mouseover",n[43]),a.$on("event-context",n[44]),a.$on("event",n[45]),{c(){e=E("hr"),t=P(),te(a.$$.fragment),b(e,"class","svelte-1kty1w6")},m(o,i){q(o,e,i),q(o,t,i),X(a,o,i),r=!0},p(o,i){let l={};i[0]&16&&(l.displayDayNumber=o[4]),a.$set(l)},i(o){r||(T(a.$$.fragment,o),r=!0)},o(o){R(a.$$.fragment,o),r=!1},d(o){o&&O(e),o&&O(t),Q(a,o)}}}function Hb(n){let e,t,a,r,o,i,l=[Vb,jb,Pb],s=[];function d(c,h){return c[2]&&!c[1]?0:c[2]?1:2}t=d(n,[-1,-1]),a=s[t]=l[t](n);let u=n[0]&&!n[1]&&oh(n);return{c(){e=E("div"),a.c(),r=P(),u&&u.c(),o=qe(),b(e,"id","calendar-container"),b(e,"class","fantasy-calendar svelte-1kty1w6"),et(e,"--calendar-columns",n[3].weekdays.length),et(e,"--column-widths",1/n[3].weekdays.length*100+"%"),et(e,"--calendar-rows",n[3].weeksPerCurrentMonth),Ae(e,"full-view",n[1]),Ae(e,"year-view",n[2])},m(c,h){q(c,e,h),s[t].m(e,null),q(c,r,h),u&&u.m(c,h),q(c,o,h),i=!0},p(c,h){let m=t;t=d(c,h),t===m?s[t].p(c,h):(_e(),R(s[m],1,1,()=>{s[m]=null}),Ee(),a=s[t],a?a.p(c,h):(a=s[t]=l[t](c),a.c()),T(a,1),a.m(e,null)),(!i||h[0]&8)&&et(e,"--calendar-columns",c[3].weekdays.length),(!i||h[0]&8)&&et(e,"--column-widths",1/c[3].weekdays.length*100+"%"),(!i||h[0]&8)&&et(e,"--calendar-rows",c[3].weeksPerCurrentMonth),h[0]&2&&Ae(e,"full-view",c[1]),h[0]&4&&Ae(e,"year-view",c[2]),c[0]&&!c[1]?u?(u.p(c,h),h[0]&3&&T(u,1)):(u=oh(c),u.c(),T(u,1),u.m(o.parentNode,o)):u&&(_e(),R(u,1,1,()=>{u=null}),Ee())},i(c){i||(T(a),T(u),i=!0)},o(c){R(a),R(u),i=!1},d(c){c&&O(e),s[t].d(),c&&O(r),u&&u.d(c),c&&O(o)}}}function Wb(n,e,t){let a,r,o,i,l,s,{fullView:d=!1}=e,{dayView:u=!1}=e,{yearView:c=!1}=e,{calendar:h}=e,{moons:m}=e,{displayDayNumber:p}=e,{displayWeeks:D}=e,y=wi(u),A=wi(m),_=wi(h);za("dayView",y),za("displayMoons",A),za("calendar",_),h.on("month-update",()=>{t(10,r=h.displayed.year),t(9,o=h.getNameForYear(h.displayed.year)),t(6,i=h.currentMonth),t(7,s=h.weeksOfMonth(i)),t(8,l=h.weekNumbersOfMonth(i))});let C=()=>h.goToNextYear(),B=()=>h.goToPreviousYear();function z(le){ve.call(this,n,le)}function L(le){ve.call(this,n,le)}function N(le){ve.call(this,n,le)}function j(le){ve.call(this,n,le)}function F(le){ve.call(this,n,le)}function W(le){ve.call(this,n,le)}function I(le){ve.call(this,n,le)}let G=()=>h.goToNextYear(),ue=()=>h.goToPreviousYear();function we(le){ve.call(this,n,le)}function ge(le){ve.call(this,n,le)}function Ce(le){ve.call(this,n,le)}function K(le){ve.call(this,n,le)}function Z(le){ve.call(this,n,le)}function he(le){ve.call(this,n,le)}function Se(le){ve.call(this,n,le)}let ce=()=>h.goToNext(),xe=()=>h.goToPrevious();function ze(le){ve.call(this,n,le)}function tt(le){ve.call(this,n,le)}function je(le){ve.call(this,n,le)}function ft(le){ve.call(this,n,le)}function Bt(le){ve.call(this,n,le)}function ht(le){ve.call(this,n,le)}function Et(le){ve.call(this,n,le)}function kt(le){ve.call(this,n,le)}let Vt=()=>t(0,u=!1);function pn(le){ve.call(this,n,le)}function Ut(le){ve.call(this,n,le)}function on(le){ve.call(this,n,le)}function ra(le){ve.call(this,n,le)}return n.$$set=le=>{"fullView"in le&&t(1,d=le.fullView),"dayView"in le&&t(0,u=le.dayView),"yearView"in le&&t(2,c=le.yearView),"calendar"in le&&t(3,h=le.calendar),"moons"in le&&t(12,m=le.moons),"displayDayNumber"in le&&t(4,p=le.displayDayNumber),"displayWeeks"in le&&t(5,D=le.displayWeeks)},n.$$.update=()=>{if(n.$$.dirty[0]&4){e:c&&t(0,u=!1)}if(n.$$.dirty[0]&1){e:y.set(u)}if(n.$$.dirty[0]&4096){e:A.set(m)}if(n.$$.dirty[0]&8){e:_.set(h)}if(n.$$.dirty[0]&8){e:t(11,a=h.weekdays)}if(n.$$.dirty[0]&8){e:t(10,r=h.displayed.year)}if(n.$$.dirty[0]&8){e:t(9,o=h.getNameForYear(h.displayed.year))}if(n.$$.dirty[0]&8){e:t(6,i=h.currentMonth)}if(n.$$.dirty[0]&72){e:t(8,l=h.weekNumbersOfMonth(i))}if(n.$$.dirty[0]&72){e:t(7,s=h.weeksOfMonth(i))}},[u,d,c,h,p,D,i,s,l,o,r,a,m,C,B,z,L,N,j,F,W,I,G,ue,we,ge,Ce,K,Z,he,Se,ce,xe,ze,tt,je,ft,Bt,ht,Et,kt,Vt,pn,Ut,on,ra]}var sh=class extends ie{constructor(e){super();oe(this,e,Wb,Hb,ee,{fullView:1,dayView:0,yearView:2,calendar:3,moons:12,displayDayNumber:4,displayWeeks:5},Lb,[-1,-1])}},lh=sh;var Gt="FANTASY_CALENDAR",aa="FANTASY_CALENDAR_FULL_VIEW";(0,Me.addIcon)(Gt,'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="far" data-icon="calendar" class="svg-inline--fa fa-calendar fa-w-14" role="img" viewBox="0 0 448 512"><path xmlns="http://www.w3.org/2000/svg" fill="currentColor" d="M400 64h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V160h352v298c0 3.3-2.7 6-6 6z"/><path fill="currentColor" d="M18.32 255.78L192 223.96l-91.28 68.69c-10.08 10.08-2.94 27.31 11.31 27.31h222.7c-9.44-26.4-14.73-54.47-14.73-83.38v-42.27l-119.73-87.6c-23.82-15.88-55.29-14.01-77.06 4.59L5.81 227.64c-12.38 10.33-3.45 30.42 12.51 28.14zm556.87 34.1l-100.66-50.31A47.992 47.992 0 0 1 448 196.65v-36.69h64l28.09 22.63c6 6 14.14 9.37 22.63 9.37h30.97a32 32 0 0 0 28.62-17.69l14.31-28.62a32.005 32.005 0 0 0-3.02-33.51l-74.53-99.38C553.02 4.7 543.54 0 533.47 0H296.02c-7.13 0-10.7 8.57-5.66 13.61L352 63.96 292.42 88.8c-5.9 2.95-5.9 11.36 0 14.31L352 127.96v108.62c0 72.08 36.03 139.39 96 179.38-195.59 6.81-344.56 41.01-434.1 60.91C5.78 478.67 0 485.88 0 494.2 0 504 7.95 512 17.76 512h499.08c63.29.01 119.61-47.56 122.99-110.76 2.52-47.28-22.73-90.4-64.64-111.36zM489.18 66.25l45.65 11.41c-2.75 10.91-12.47 18.89-24.13 18.26-12.96-.71-25.85-12.53-21.52-29.67z" style="&#10;    transform: scale(0.4125) translate(50%, 95%);&#10;"/></svg>');(0,Me.addIcon)("fantasy-calendar-reveal",'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="calendar-day" class="svg-inline--fa fa-calendar-day fa-w-14" role="img" viewBox="0 0 448 512"><path fill="currentColor" d="M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h96c8.8 0 16 7.2 16 16v96c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-96zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z"/></svg>');var Vn=class extends Me.ItemView{constructor(e,t,a={}){super(t);this.plugin=e;this.leaf=t;this.options=a;this.updateMe=!0;this.yearView=!1;this.moons=!0;this.containerEl.addClass("fantasy-calendar-view"),this.contentEl.addClass("fantasy-calendar-view-content"),this.registerEvent(this.plugin.app.workspace.on("fantasy-calendars-updated",()=>{this.updateCalendars()})),this.registerEvent(this.plugin.app.workspace.on("layout-change",()=>{!this._app||this._app.$set({fullView:this.full,...this.full?{dayView:!1}:{}})}))}get root(){return this.leaf.getRoot()}get full(){return!("collapse"in this.root)}updateCalendars(){if(!this.updateMe){this.updateMe=!0;return}if(!this.plugin.data.calendars.length){this._app?.$destroy(),this.contentEl.empty(),this.noCalendarEl=this.contentEl.createDiv("fantasy-no-calendar"),this.noCalendarEl.createSpan({text:"No calendars created! Create a calendar to see it here."});return}let e=this.plugin.data.calendars.find(t=>t.id==this.calendar?.id)??this.plugin.defaultCalendar??this.plugin.data.calendars[0];this.helper&&this.helper.calendar.id==e.id?this.update(e):this.setCurrentCalendar(e)}update(e){this.calendar=e,this.helper.update(this.calendar),this.registerCalendarInterval(),this._app?this._app.$set({calendar:this.helper}):this.build()}registerCalendarInterval(){if(this.interval&&(clearInterval(this.interval),this.interval=null),this.calendar.static.incrementDay){let e=new Date;this.calendar.date||(this.calendar.date=e.valueOf());let t=io(new Date(this.calendar.date),e);if(t>=1){for(let a=0;a<t;a++)this.helper.goToNextCurrentDay();this.calendar.date=e.valueOf(),this.plugin.saveSettings()}this.interval=window.setInterval(()=>{io(new Date,e)>=1&&(this.helper.goToNextCurrentDay(),this.helper.current,e=new Date,this.calendar.date=e.valueOf(),this.plugin.saveSettings())},60*1e3),this.registerInterval(this.interval)}}setCurrentCalendar(e){this.noCalendarEl?.detach(),this.calendar=e,this.moons=this.calendar.static.displayMoons,this.dayNumber=this.calendar.static.displayDayNumber,this.helper=new Fa(this.calendar,this.plugin),this.registerCalendarInterval(),this.build()}createEventForDay(e){let t=new ka(this.app,this.calendar,null,e);t.onClose=()=>{!t.saved||(this.calendar.events.push(t.event),this.plugin.saveSettings(),this._app.$set({calendar:this.helper}),this.triggerHelperEvent("day-update"))},t.open()}async onOpen(){this.updateCalendars()}build(){this.contentEl.empty(),this._app=new lh({target:this.contentEl,props:{calendar:this.helper,fullView:this.full,yearView:this.yearView,moons:this.moons,displayWeeks:this.helper.displayWeeks,displayDayNumber:this.dayNumber}}),this._app.$on("day-click",e=>{let t=e.detail;t.events.length||this.createEventForDay(t.date)}),this._app.$on("day-doubleclick",e=>{let t=e.detail;!t.events.length||(this.helper.viewing.day=t.number,this.helper.viewing.month=this.helper.displayed.month,this.helper.viewing.year=this.helper.displayed.year,this.yearView=!1,this._app.$set({yearView:!1}),this._app.$set({dayView:!0}),this.triggerHelperEvent("day-update",!1))}),this._app.$on("day-context-menu",e=>{let{day:t,evt:a}=e.detail,r=new Me.Menu(this.app);r.setNoIcon(),this.full||r.addItem(o=>{o.setTitle("Open Day").onClick(()=>{this.openDay({day:t.number,month:this.helper.displayed.month,year:this.helper.displayed.year})})}),r.addItem(o=>{o.setTitle("Set as Today").onClick(()=>{this.calendar.current=t.date,this.helper.current.day=t.number,this.triggerHelperEvent("day-update"),this.plugin.saveSettings()})}),r.addItem(o=>o.setTitle("New Event").onClick(()=>{this.createEventForDay(t.date)})),r.showAtMouseEvent(a)}),this._app.$on("settings",e=>{let t=e.detail,a=new Me.Menu(this.app);a.setNoIcon(),a.addItem(r=>{r.setTitle(`${this.calendar.displayWeeks?"Hide":"Show"} Weeks`).onClick(()=>{this.calendar.displayWeeks=!this.calendar.displayWeeks,this.helper.update(this.calendar),this._app.$set({displayWeeks:this.calendar.displayWeeks}),this.plugin.saveSettings()})}),a.addItem(r=>{r.setTitle(`Open ${this.yearView?"Month":"Year"}`).onClick(()=>{this.yearView=!this.yearView,this._app.$set({yearView:this.yearView})})}),a.addItem(r=>{r.setTitle(this.moons?"Hide Moons":"Display Moons").onClick(()=>{this.toggleMoons()})}),a.addItem(r=>{r.setTitle(this.dayNumber?"Hide Day Number":"Display Day Number").onClick(()=>{this.dayNumber=!this.dayNumber,this.calendar.static.displayDayNumber=this.dayNumber,this._app.$set({displayDayNumber:this.dayNumber}),this.plugin.saveSettings()})}),a.addItem(r=>{r.setTitle("View Day"),r.onClick(()=>{this.openDate()})}),a.addItem(r=>{r.setTitle("Switch Calendars"),r.setDisabled(this.plugin.data.calendars.length<=1),r.onClick(()=>{let o=new uh(this.plugin,this.calendar);o.onClose=()=>{!o.confirmed||this.setCurrentCalendar(o.calendar)},o.open()})}),a.showAtMouseEvent(t)}),this._app.$on("event-click",e=>{let{event:t,modifier:a}=e.detail;if(t.note){let r=[];this.app.workspace.iterateAllLeaves(o=>{o.view instanceof Me.MarkdownView&&o.view.file.basename===t.note&&r.push(o)}),r.length?this.app.workspace.setActiveLeaf(r[0]):this.app.workspace.openLinkText(t.note,"",this.full||a)}else new dh(t,this.plugin).open()}),this._app.$on("event-mouseover",e=>{if(!this.plugin.data.eventPreview)return;let{target:t,event:a}=e.detail;a.note&&this.app.workspace.trigger("link-hover",this,t,a.note,"")}),this._app.$on("event-context",e=>{let{evt:t,event:a}=e.detail,r=new Me.Menu(this.app);r.setNoIcon(),a.note||r.addItem(o=>{o.setTitle("Create Note").onClick(async()=>{let i=this.app.workspace.getActiveFile()?.path,l=i?this.app.fileManager.getNewFileParent(i)?.parent??"/":"/",s=`${a.date.year}-${a.date.month+1}-${a.date.day}`,d;a.end&&(d=`${a.end.year}-${a.end.month+1}-${a.end.day}`);let u={"fc-calendar":this.calendar.name,"fc-date":s,...a.end?{"fc-end":d}:{},...a.category?{"fc-category":this.calendar.categories.find(h=>h.id==a.category)?.name}:{}};a.note=(0,Me.normalizePath)(`${l}/${a.name}.md`);let c=this.app.vault.getAbstractFileByPath(a.note);if(c||(c=await this.app.vault.create(a.note,`---
${(0,Me.stringifyYaml)(u)}
---`)),this.plugin.saveCalendar(),c instanceof Me.TFile){let m=this.app.workspace.getLeavesOfType("markdown").find(p=>{p.view instanceof Me.FileView&&p.view.file.path==a.note});m?this.app.workspace.setActiveLeaf(m):await this.app.workspace.getUnpinnedLeaf().openFile(c,{active:!0})}})}),r.addItem(o=>{o.setTitle("Edit Event").onClick(()=>{let i=new ka(this.app,this.calendar,a);i.onClose=()=>{if(!i.saved)return;let l=this.calendar.events.find(s=>s.id==a.id);this.calendar.events.splice(this.calendar.events.indexOf(l),1,i.event),this.plugin.saveSettings(),this._app.$set({calendar:this.helper}),this.triggerHelperEvent("day-update")},i.open()})}),r.addItem(o=>{o.setTitle("Delete Event").onClick(async()=>{if(await Mn(this.app,"Are you sure you wish to delete this event?",{cta:"Delete",secondary:"Cancel"})){let i=this.calendar.events.find(l=>l.id==a.id);this.calendar.events.splice(this.calendar.events.indexOf(i),1),this.plugin.saveSettings(),this._app.$set({calendar:this.helper}),this.triggerHelperEvent("day-update")}})}),r.showAtMouseEvent(t)}),this._app.$on("event",e=>{let t=e.detail;this.createEventForDay(t)}),this._app.$on("reset",()=>{this.helper.reset(),this.yearView=!1,this._app.$set({yearView:!1}),this._app.$set({dayView:!0}),this.triggerHelperEvent("day-update",!1)})}openDay(e){this.helper.viewing.day=e.day,this.helper.viewing.month=e.month,this.helper.viewing.year=e.year,this.yearView=!1,this._app.$set({yearView:!1}),this._app.$set({dayView:!0}),this.triggerHelperEvent("day-update",!1)}openDate(){if(!this.helper||!this.calendar)return;let e=new ch(this.plugin,this.calendar);e.onClose=()=>{!e.confirmed||(e.setCurrent?(this.calendar.current={...e.date},this.setCurrentCalendar(this.calendar)):(this.helper.displayed={...e.date},this.helper.update(),this._app.$set({calendar:this.helper})),this.plugin.saveSettings())},e.open()}toggleMoons(){this.moons=!this.moons,this._app.$set({moons:this.moons})}async onClose(){}onResize(){this.triggerHelperEvent("view-resized",!1)}getViewType(){return Gt}getDisplayText(){return"Fantasy Calendar"}getIcon(){return Gt}triggerHelperEvent(e,t=!0){!this.helper||(this.helper.trigger(e),t&&(this.updateMe=!1,this.plugin.app.workspace.trigger("fantasy-calendars-updated")))}async onunload(){}},uh=class extends Me.Modal{constructor(e,t){super(e.app);this.plugin=e;this.calendar=t;this.confirmed=!1}async display(){this.contentEl.empty(),this.contentEl.createEl("h4",{text:"Switch Calendars"});let e=this.contentEl.createDiv("fantasy-calendar-dropdown");e.createEl("label",{text:"Choose a Calendar"}),new Me.DropdownComponent(e).onChange(r=>{this.calendar=this.plugin.data.calendars.find(o=>o.id==r)}).addOptions(Object.fromEntries(this.plugin.data.calendars.map(r=>[r.id,r.name]))).setValue(this.calendar?this.calendar.id:null);let a=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new Me.ButtonComponent(a).setButtonText("Switch").setCta().onClick(()=>{this.confirmed=!0,this.close()}),new Me.ButtonComponent(a).setButtonText("Cancel").onClick(()=>{this.close()})}onOpen(){this.display()}},ch=class extends Me.Modal{constructor(e,t){super(e.app);this.plugin=e;this.calendar=t;this.confirmed=!1;this.setCurrent=!1;this.date={...this.calendar.current},this.tempCurrentDays=this.date.day}async display(){this.contentEl.empty(),this.contentEl.createEl("h4",{text:"View Day"}),this.dateFieldEl=this.contentEl.createDiv("fantasy-calendar-date-fields"),this.buildDateFields(),new Me.Setting(this.contentEl).setName("Set as Current Date").setDesc("Also set this date to today's date.").addToggle(t=>t.setValue(this.setCurrent).onChange(a=>{this.setCurrent=a}));let e=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new Me.ButtonComponent(e).setButtonText("Switch").setCta().onClick(()=>{this.confirmed=!0,this.date.day=this.tempCurrentDays,this.close()}),new Me.ButtonComponent(e).setButtonText("Cancel").onClick(()=>{this.close()})}buildDateFields(){this.dateFieldEl.empty(),this.tempCurrentDays!=null&&this.date.month!=null&&this.tempCurrentDays>this.calendar.static.months[this.date.month]?.length&&(this.tempCurrentDays=this.calendar.static.months[this.date.month]?.length);let e=this.dateFieldEl.createDiv("fantasy-calendar-date-field");e.createEl("label",{text:"Day"}),new Me.TextComponent(e).setPlaceholder("Day").setValue(`${this.tempCurrentDays}`).setDisabled(this.date.month==null).onChange(o=>{if(Number(o)<1||Number(o)>this.calendar.static.months[this.date.month]?.length){new Me.Notice(`The current day must be between 1 and ${this.calendar.static.months[this.date.month].length}`),this.tempCurrentDays=this.date.day,this.buildDateFields();return}this.tempCurrentDays=Number(o)}).inputEl.setAttr("type","number");let a=this.dateFieldEl.createDiv("fantasy-calendar-date-field");a.createEl("label",{text:"Month"}),new Me.DropdownComponent(a).addOptions(Object.fromEntries([["select","Select Month"],...this.calendar.static.months.map(o=>[o.name,o.name])])).setValue(this.date.month!=null?this.calendar.static.months[this.date.month].name:"select").onChange(o=>{o==="select"&&(this.date.month=null);let i=this.calendar.static.months.find(l=>l.name==o);this.date.month=this.calendar.static.months.indexOf(i),this.buildDateFields()});let r=this.dateFieldEl.createDiv("fantasy-calendar-date-field");if(r.createEl("label",{text:"Year"}),this.calendar.static.useCustomYears){let o=new Me.DropdownComponent(r);(this.calendar.static.years??[]).forEach(i=>{o.addOption(i.id,i.name)}),this.date.year>this.calendar.static.years?.length&&(this.date.year=this.calendar.static.years?this.calendar.static.years.length:null),o.setValue(this.calendar.static.years?.[this.date.year-1]?.id).onChange(i=>{this.date.year=this.calendar.static.years.findIndex(l=>l.id==i)+1})}else new Me.TextComponent(r).setPlaceholder("Year").setValue(`${this.date.year}`).onChange(i=>{this.date.year=Number(i)}).inputEl.setAttr("type","number")}onOpen(){this.display()}},dh=class extends Me.Modal{constructor(e,t){super(t.app);this.event=e;this.plugin=t;this.containerEl.addClass("fantasy-calendar-view-event")}async display(){this.contentEl.empty(),this.contentEl.createEl("h4",{text:this.event.name}),await Me.MarkdownRenderer.renderMarkdown(this.event.description,this.contentEl,this.event.note,null)}async onOpen(){await this.display()}};var ck=Te(require("fs")),hn=Te(require("obsidian"));function cs(n){let e=new Blob([n],{type:"text/javascript"}),t=URL.createObjectURL(e),a=new Worker(t);return URL.revokeObjectURL(t),a}function ds(){return cs(`var ee=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var Re=ee(Ie=>{Ie.entityMap={lt:"<",gt:">",amp:"&",quot:'"',apos:"'",Agrave:"\\xC0",Aacute:"\\xC1",Acirc:"\\xC2",Atilde:"\\xC3",Auml:"\\xC4",Aring:"\\xC5",AElig:"\\xC6",Ccedil:"\\xC7",Egrave:"\\xC8",Eacute:"\\xC9",Ecirc:"\\xCA",Euml:"\\xCB",Igrave:"\\xCC",Iacute:"\\xCD",Icirc:"\\xCE",Iuml:"\\xCF",ETH:"\\xD0",Ntilde:"\\xD1",Ograve:"\\xD2",Oacute:"\\xD3",Ocirc:"\\xD4",Otilde:"\\xD5",Ouml:"\\xD6",Oslash:"\\xD8",Ugrave:"\\xD9",Uacute:"\\xDA",Ucirc:"\\xDB",Uuml:"\\xDC",Yacute:"\\xDD",THORN:"\\xDE",szlig:"\\xDF",agrave:"\\xE0",aacute:"\\xE1",acirc:"\\xE2",atilde:"\\xE3",auml:"\\xE4",aring:"\\xE5",aelig:"\\xE6",ccedil:"\\xE7",egrave:"\\xE8",eacute:"\\xE9",ecirc:"\\xEA",euml:"\\xEB",igrave:"\\xEC",iacute:"\\xED",icirc:"\\xEE",iuml:"\\xEF",eth:"\\xF0",ntilde:"\\xF1",ograve:"\\xF2",oacute:"\\xF3",ocirc:"\\xF4",otilde:"\\xF5",ouml:"\\xF6",oslash:"\\xF8",ugrave:"\\xF9",uacute:"\\xFA",ucirc:"\\xFB",uuml:"\\xFC",yacute:"\\xFD",thorn:"\\xFE",yuml:"\\xFF",nbsp:"\\xA0",iexcl:"\\xA1",cent:"\\xA2",pound:"\\xA3",curren:"\\xA4",yen:"\\xA5",brvbar:"\\xA6",sect:"\\xA7",uml:"\\xA8",copy:"\\xA9",ordf:"\\xAA",laquo:"\\xAB",not:"\\xAC",shy:"\\xAD\\xAD",reg:"\\xAE",macr:"\\xAF",deg:"\\xB0",plusmn:"\\xB1",sup2:"\\xB2",sup3:"\\xB3",acute:"\\xB4",micro:"\\xB5",para:"\\xB6",middot:"\\xB7",cedil:"\\xB8",sup1:"\\xB9",ordm:"\\xBA",raquo:"\\xBB",frac14:"\\xBC",frac12:"\\xBD",frac34:"\\xBE",iquest:"\\xBF",times:"\\xD7",divide:"\\xF7",forall:"\\u2200",part:"\\u2202",exist:"\\u2203",empty:"\\u2205",nabla:"\\u2207",isin:"\\u2208",notin:"\\u2209",ni:"\\u220B",prod:"\\u220F",sum:"\\u2211",minus:"\\u2212",lowast:"\\u2217",radic:"\\u221A",prop:"\\u221D",infin:"\\u221E",ang:"\\u2220",and:"\\u2227",or:"\\u2228",cap:"\\u2229",cup:"\\u222A",int:"\\u222B",there4:"\\u2234",sim:"\\u223C",cong:"\\u2245",asymp:"\\u2248",ne:"\\u2260",equiv:"\\u2261",le:"\\u2264",ge:"\\u2265",sub:"\\u2282",sup:"\\u2283",nsub:"\\u2284",sube:"\\u2286",supe:"\\u2287",oplus:"\\u2295",otimes:"\\u2297",perp:"\\u22A5",sdot:"\\u22C5",Alpha:"\\u0391",Beta:"\\u0392",Gamma:"\\u0393",Delta:"\\u0394",Epsilon:"\\u0395",Zeta:"\\u0396",Eta:"\\u0397",Theta:"\\u0398",Iota:"\\u0399",Kappa:"\\u039A",Lambda:"\\u039B",Mu:"\\u039C",Nu:"\\u039D",Xi:"\\u039E",Omicron:"\\u039F",Pi:"\\u03A0",Rho:"\\u03A1",Sigma:"\\u03A3",Tau:"\\u03A4",Upsilon:"\\u03A5",Phi:"\\u03A6",Chi:"\\u03A7",Psi:"\\u03A8",Omega:"\\u03A9",alpha:"\\u03B1",beta:"\\u03B2",gamma:"\\u03B3",delta:"\\u03B4",epsilon:"\\u03B5",zeta:"\\u03B6",eta:"\\u03B7",theta:"\\u03B8",iota:"\\u03B9",kappa:"\\u03BA",lambda:"\\u03BB",mu:"\\u03BC",nu:"\\u03BD",xi:"\\u03BE",omicron:"\\u03BF",pi:"\\u03C0",rho:"\\u03C1",sigmaf:"\\u03C2",sigma:"\\u03C3",tau:"\\u03C4",upsilon:"\\u03C5",phi:"\\u03C6",chi:"\\u03C7",psi:"\\u03C8",omega:"\\u03C9",thetasym:"\\u03D1",upsih:"\\u03D2",piv:"\\u03D6",OElig:"\\u0152",oelig:"\\u0153",Scaron:"\\u0160",scaron:"\\u0161",Yuml:"\\u0178",fnof:"\\u0192",circ:"\\u02C6",tilde:"\\u02DC",ensp:"\\u2002",emsp:"\\u2003",thinsp:"\\u2009",zwnj:"\\u200C",zwj:"\\u200D",lrm:"\\u200E",rlm:"\\u200F",ndash:"\\u2013",mdash:"\\u2014",lsquo:"\\u2018",rsquo:"\\u2019",sbquo:"\\u201A",ldquo:"\\u201C",rdquo:"\\u201D",bdquo:"\\u201E",dagger:"\\u2020",Dagger:"\\u2021",bull:"\\u2022",hellip:"\\u2026",permil:"\\u2030",prime:"\\u2032",Prime:"\\u2033",lsaquo:"\\u2039",rsaquo:"\\u203A",oline:"\\u203E",euro:"\\u20AC",trade:"\\u2122",larr:"\\u2190",uarr:"\\u2191",rarr:"\\u2192",darr:"\\u2193",harr:"\\u2194",crarr:"\\u21B5",lceil:"\\u2308",rceil:"\\u2309",lfloor:"\\u230A",rfloor:"\\u230B",loz:"\\u25CA",spades:"\\u2660",clubs:"\\u2663",hearts:"\\u2665",diams:"\\u2666"}});var Pe=ee(pe=>{var fe=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/,Oe=new RegExp("[\\\\-\\\\.0-9"+fe.source.slice(1,-1)+"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]"),Se=new RegExp("^"+fe.source+Oe.source+"*(?::"+fe.source+Oe.source+"*)?$"),z=0,O=1,$=2,j=3,F=4,L=5,G=6,te=7;function P(e,t){this.message=e,this.locator=t,Error.captureStackTrace&&Error.captureStackTrace(this,P)}P.prototype=new Error;P.prototype.name=P.name;function Me(){}Me.prototype={parse:function(e,t,n){var r=this.domBuilder;r.startDocument(),Fe(t,t={}),vt(e,t,n,r,this.errorHandler),r.endDocument()}};function vt(e,t,n,r,a){function i(v){if(v>65535){v-=65536;var C=55296+(v>>10),dt=56320+(v&1023);return String.fromCharCode(C,dt)}else return String.fromCharCode(v)}function o(v){var C=v.slice(1,-1);return C in n?n[C]:C.charAt(0)==="#"?i(parseInt(C.substr(1).replace("x","0x"))):(a.error("entity not found:"+v),v)}function c(v){if(v>m){var C=e.substring(m,v).replace(/&#?\\w+;/g,o);p&&l(m),r.characters(C,0,v-m),m=v}}function l(v,C){for(;v>=u&&(C=h.exec(e));)s=C.index,u=s+C[0].length,p.lineNumber++;p.columnNumber=v-s+1}for(var s=0,u=0,h=/.*(?:\\r\\n?|\\n)|.*$/g,p=r.locator,d=[{currentNSMap:t}],T={},m=0;;){try{var f=e.indexOf("<",m);if(f<0){if(!e.substr(m).match(/^\\s*$/)){var A=r.doc,be=A.createTextNode(e.substr(m));A.appendChild(be),r.currentElement=be}return}switch(f>m&&c(f),e.charAt(f+1)){case"/":var y=e.indexOf(">",f+3),_=e.substring(f+2,y),I=d.pop();y<0?(_=e.substring(f+2).replace(/[\\s<].*/,""),a.error("end tag name: "+_+" is not complete:"+I.tagName),y=f+1+_.length):_.match(/\\s</)&&(_=_.replace(/[\\s<].*/,""),a.error("end tag name: "+_+" maybe not complete"),y=f+1+_.length);var _e=I.localNSMap,Ce=I.tagName==_,pt=Ce||I.tagName&&I.tagName.toLowerCase()==_.toLowerCase();if(pt){if(r.endElement(I.uri,I.localName,_),_e)for(var mt in _e)r.endPrefixMapping(mt);Ce||a.fatalError("end tag name: "+_+" is not match the current start tagName:"+I.tagName)}else d.push(I);y++;break;case"?":p&&l(f),y=Dt(e,f,r);break;case"!":p&&l(f),y=yt(e,f,r,a);break;default:p&&l(f);var b=new Le,se=d[d.length-1].currentNSMap,y=gt(e,f,b,se,o,a),xe=b.length;if(!b.closed&&Nt(e,y,b.tagName,T)&&(b.closed=!0,n.nbsp||a.warning("unclosed xml attribute")),p&&xe){for(var ht=Ue(p,{}),ue=0;ue<xe;ue++){var Ae=b[ue];l(Ae.offset),Ae.locator=Ue(p,{})}r.locator=ht,$e(b,r,se)&&d.push(b),r.locator=p}else $e(b,r,se)&&d.push(b);b.uri==="http://www.w3.org/1999/xhtml"&&!b.closed?y=Et(e,y,b.tagName,o,r):y++}}catch(v){if(v instanceof P)throw v;a.error("element parse error: "+v),y=-1}y>m?m=y:c(Math.max(f,m)+1)}}function Ue(e,t){return t.lineNumber=e.lineNumber,t.columnNumber=e.columnNumber,t}function gt(e,t,n,r,a,i){function o(d,T,m){d in n.attributeNames&&i.fatalError("Attribute "+d+" redefined"),n.addValue(d,T,m)}for(var c,l,s=++t,u=z;;){var h=e.charAt(s);switch(h){case"=":if(u===O)c=e.slice(t,s),u=j;else if(u===$)u=j;else throw new Error("attribute equal must after attrName");break;case"'":case'"':if(u===j||u===O)if(u===O&&(i.warning('attribute value must after "="'),c=e.slice(t,s)),t=s+1,s=e.indexOf(h,t),s>0)l=e.slice(t,s).replace(/&#?\\w+;/g,a),o(c,l,t-1),u=L;else throw new Error("attribute value no end '"+h+"' match");else if(u==F)l=e.slice(t,s).replace(/&#?\\w+;/g,a),o(c,l,t),i.warning('attribute "'+c+'" missed start quot('+h+")!!"),t=s+1,u=L;else throw new Error('attribute value must after "="');break;case"/":switch(u){case z:n.setTagName(e.slice(t,s));case L:case G:case te:u=te,n.closed=!0;case F:case O:case $:break;default:throw new Error("attribute invalid close char('/')")}break;case"":return i.error("unexpected end of input"),u==z&&n.setTagName(e.slice(t,s)),s;case">":switch(u){case z:n.setTagName(e.slice(t,s));case L:case G:case te:break;case F:case O:l=e.slice(t,s),l.slice(-1)==="/"&&(n.closed=!0,l=l.slice(0,-1));case $:u===$&&(l=c),u==F?(i.warning('attribute "'+l+'" missed quot(")!'),o(c,l.replace(/&#?\\w+;/g,a),t)):((r[""]!=="http://www.w3.org/1999/xhtml"||!l.match(/^(?:disabled|checked|selected)$/i))&&i.warning('attribute "'+l+'" missed value!! "'+l+'" instead!!'),o(l,l,t));break;case j:throw new Error("attribute value missed!!")}return s;case"\\x80":h=" ";default:if(h<=" ")switch(u){case z:n.setTagName(e.slice(t,s)),u=G;break;case O:c=e.slice(t,s),u=$;break;case F:var l=e.slice(t,s).replace(/&#?\\w+;/g,a);i.warning('attribute "'+l+'" missed quot(")!!'),o(c,l,t);case L:u=G;break}else switch(u){case $:var p=n.tagName;(r[""]!=="http://www.w3.org/1999/xhtml"||!c.match(/^(?:disabled|checked|selected)$/i))&&i.warning('attribute "'+c+'" missed value!! "'+c+'" instead2!!'),o(c,c,t),t=s,u=O;break;case L:i.warning('attribute space is required"'+c+'"!!');case G:u=O,t=s;break;case j:u=F,t=s;break;case te:throw new Error("elements closed character '/' and '>' must be connected to")}}s++}}function $e(e,t,n){for(var r=e.tagName,a=null,i=e.length;i--;){var o=e[i],c=o.qName,l=o.value,p=c.indexOf(":");if(p>0)var s=o.prefix=c.slice(0,p),u=c.slice(p+1),h=s==="xmlns"&&u;else u=c,s=null,h=c==="xmlns"&&"";o.localName=u,h!==!1&&(a==null&&(a={},Fe(n,n={})),n[h]=a[h]=l,o.uri="http://www.w3.org/2000/xmlns/",t.startPrefixMapping(h,l))}for(var i=e.length;i--;){o=e[i];var s=o.prefix;s&&(s==="xml"&&(o.uri="http://www.w3.org/XML/1998/namespace"),s!=="xmlns"&&(o.uri=n[s||""]))}var p=r.indexOf(":");p>0?(s=e.prefix=r.slice(0,p),u=e.localName=r.slice(p+1)):(s=null,u=e.localName=r);var d=e.uri=n[s||""];if(t.startElement(d,u,r,e),e.closed){if(t.endElement(d,u,r),a)for(s in a)t.endPrefixMapping(s)}else return e.currentNSMap=n,e.localNSMap=a,!0}function Et(e,t,n,r,a){if(/^(?:script|textarea)$/i.test(n)){var i=e.indexOf("</"+n+">",t),o=e.substring(t+1,i);if(/[&<]/.test(o))return/^script$/i.test(n)?(a.characters(o,0,o.length),i):(o=o.replace(/&#?\\w+;/g,r),a.characters(o,0,o.length),i)}return t+1}function Nt(e,t,n,r){var a=r[n];return a==null&&(a=e.lastIndexOf("</"+n+">"),a<t&&(a=e.lastIndexOf("</"+n)),r[n]=a),a<t}function Fe(e,t){for(var n in e)t[n]=e[n]}function yt(e,t,n,r){var a=e.charAt(t+2);switch(a){case"-":if(e.charAt(t+3)==="-"){var i=e.indexOf("-->",t+4);return i>t?(n.comment(e,t+4,i-t-4),i+3):(r.error("Unclosed comment"),-1)}else return-1;default:if(e.substr(t+3,6)=="CDATA["){var i=e.indexOf("]]>",t+9);return n.startCDATA(),n.characters(e,t+9,i-t-9),n.endCDATA(),i+3}var o=wt(e,t),c=o.length;if(c>1&&/!doctype/i.test(o[0][0])){var l=o[1][0],s=!1,u=!1;c>3&&(/^public$/i.test(o[2][0])?(s=o[3][0],u=c>4&&o[4][0]):/^system$/i.test(o[2][0])&&(u=o[3][0]));var h=o[c-1];return n.startDTD(l,s,u),n.endDTD(),h.index+h[0].length}}return-1}function Dt(e,t,n){var r=e.indexOf("?>",t);if(r){var a=e.substring(t,r).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(a){var i=a[0].length;return n.processingInstruction(a[1],a[2]),r+2}else return-1}return-1}function Le(){this.attributeNames={}}Le.prototype={setTagName:function(e){if(!Se.test(e))throw new Error("invalid tagName:"+e);this.tagName=e},addValue:function(e,t,n){if(!Se.test(e))throw new Error("invalid attribute:"+e);this.attributeNames[e]=this.length,this[this.length++]={qName:e,value:t,offset:n}},length:0,getLocalName:function(e){return this[e].localName},getLocator:function(e){return this[e].locator},getQName:function(e){return this[e].qName},getURI:function(e){return this[e].uri},getValue:function(e){return this[e].value}};function wt(e,t){var n,r=[],a=/'[^']+'|"[^"]+"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;for(a.lastIndex=t,a.exec(e);n=a.exec(e);)if(r.push(n),n[1])return r}pe.XMLReader=Me;pe.ParseError=P});var we=ee(K=>{function W(e,t){for(var n in e)t[n]=e[n]}function D(e,t){var n=e.prototype;if(!(n instanceof t)){let a=function(){};var r=a;a.prototype=t.prototype,a=new a,W(n,a),e.prototype=n=a}n.constructor!=e&&(typeof e!="function"&&console.error("unknow Class:"+e),n.constructor=e)}var Tt="http://www.w3.org/1999/xhtml",w={},x=w.ELEMENT_NODE=1,k=w.ATTRIBUTE_NODE=2,ne=w.TEXT_NODE=3,ke=w.CDATA_SECTION_NODE=4,Ve=w.ENTITY_REFERENCE_NODE=5,bt=w.ENTITY_NODE=6,qe=w.PROCESSING_INSTRUCTION_NODE=7,Xe=w.COMMENT_NODE=8,Ye=w.DOCUMENT_NODE=9,ze=w.DOCUMENT_TYPE_NODE=10,R=w.DOCUMENT_FRAGMENT_NODE=11,_t=w.NOTATION_NODE=12,E={},g={},qt=E.INDEX_SIZE_ERR=(g[1]="Index size error",1),Xt=E.DOMSTRING_SIZE_ERR=(g[2]="DOMString size error",2),Ct=E.HIERARCHY_REQUEST_ERR=(g[3]="Hierarchy request error",3),Yt=E.WRONG_DOCUMENT_ERR=(g[4]="Wrong document",4),zt=E.INVALID_CHARACTER_ERR=(g[5]="Invalid character",5),jt=E.NO_DATA_ALLOWED_ERR=(g[6]="No data allowed",6),Gt=E.NO_MODIFICATION_ALLOWED_ERR=(g[7]="No modification allowed",7),xt=E.NOT_FOUND_ERR=(g[8]="Not found",8),Wt=E.NOT_SUPPORTED_ERR=(g[9]="Not supported",9),je=E.INUSE_ATTRIBUTE_ERR=(g[10]="Attribute in use",10),Qt=E.INVALID_STATE_ERR=(g[11]="Invalid state",11),Bt=E.SYNTAX_ERR=(g[12]="Syntax error",12),Zt=E.INVALID_MODIFICATION_ERR=(g[13]="Invalid modification",13),Kt=E.NAMESPACE_ERR=(g[14]="Invalid namespace",14),Jt=E.INVALID_ACCESS_ERR=(g[15]="Invalid access",15);function U(e,t){if(t instanceof Error)var n=t;else n=this,Error.call(this,g[e]),this.message=g[e],Error.captureStackTrace&&Error.captureStackTrace(this,U);return n.code=e,t&&(this.message=this.message+": "+t),n}U.prototype=Error.prototype;W(E,U);function S(){}S.prototype={length:0,item:function(e){return this[e]||null},toString:function(e,t){for(var n=[],r=0;r<this.length;r++)X(this[r],n,e,t);return n.join("")}};function V(e,t){this._node=e,this._refresh=t,me(this)}function me(e){var t=e._node._inc||e._node.ownerDocument._inc;if(e._inc!=t){var n=e._refresh(e._node);ot(e,"length",n.length),W(n,e),e._inc=t}}V.prototype.item=function(e){return me(this),this[e]};D(V,S);function re(){}function Ge(e,t){for(var n=e.length;n--;)if(e[n]===t)return n}function We(e,t,n,r){if(r?t[Ge(t,r)]=n:t[t.length++]=n,e){n.ownerElement=e;var a=e.ownerDocument;a&&(r&&Ke(a,e,r),At(a,e,n))}}function Qe(e,t,n){var r=Ge(t,n);if(r>=0){for(var a=t.length-1;r<a;)t[r]=t[++r];if(t.length=a,e){var i=e.ownerDocument;i&&(Ke(i,e,n),n.ownerElement=null)}}else throw U(xt,new Error(e.tagName+"@"+n))}re.prototype={length:0,item:S.prototype.item,getNamedItem:function(e){for(var t=this.length;t--;){var n=this[t];if(n.nodeName==e)return n}},setNamedItem:function(e){var t=e.ownerElement;if(t&&t!=this._ownerElement)throw new U(je);var n=this.getNamedItem(e.nodeName);return We(this._ownerElement,this,e,n),n},setNamedItemNS:function(e){var t=e.ownerElement,n;if(t&&t!=this._ownerElement)throw new U(je);return n=this.getNamedItemNS(e.namespaceURI,e.localName),We(this._ownerElement,this,e,n),n},removeNamedItem:function(e){var t=this.getNamedItem(e);return Qe(this._ownerElement,this,t),t},removeNamedItemNS:function(e,t){var n=this.getNamedItemNS(e,t);return Qe(this._ownerElement,this,n),n},getNamedItemNS:function(e,t){for(var n=this.length;n--;){var r=this[n];if(r.localName==t&&r.namespaceURI==e)return r}return null}};function Be(e){if(this._features={},e)for(var t in e)this._features=e[t]}Be.prototype={hasFeature:function(e,t){var n=this._features[e.toLowerCase()];return!!(n&&(!t||t in n))},createDocument:function(e,t,n){var r=new B;if(r.implementation=this,r.childNodes=new S,r.doctype=n,n&&r.appendChild(n),t){var a=r.createElementNS(e,t);r.appendChild(a)}return r},createDocumentType:function(e,t,n){var r=new Ee;return r.name=e,r.nodeName=e,r.publicId=t,r.systemId=n,r}};function N(){}N.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(e,t){return He(this,e,t)},replaceChild:function(e,t){this.insertBefore(e,t),t&&this.removeChild(t)},removeChild:function(e){return Je(this,e)},appendChild:function(e){return this.insertBefore(e,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(e){return De(this.ownerDocument||this,this,e)},normalize:function(){for(var e=this.firstChild;e;){var t=e.nextSibling;t&&t.nodeType==ne&&e.nodeType==ne?(this.removeChild(t),e.appendData(t.data)):(e.normalize(),e=t)}},isSupported:function(e,t){return this.ownerDocument.implementation.hasFeature(e,t)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(e){for(var t=this;t;){var n=t._nsMap;if(n){for(var r in n)if(n[r]==e)return r}t=t.nodeType==k?t.ownerDocument:t.parentNode}return null},lookupNamespaceURI:function(e){for(var t=this;t;){var n=t._nsMap;if(n&&e in n)return n[e];t=t.nodeType==k?t.ownerDocument:t.parentNode}return null},isDefaultNamespace:function(e){var t=this.lookupPrefix(e);return t==null}};function Ze(e){return e=="<"&&"&lt;"||e==">"&&"&gt;"||e=="&"&&"&amp;"||e=='"'&&"&quot;"||"&#"+e.charCodeAt()+";"}W(w,N);W(w,N.prototype);function Q(e,t){if(t(e))return!0;if(e=e.firstChild)do if(Q(e,t))return!0;while(e=e.nextSibling)}function B(){}function At(e,t,n){e&&e._inc++;var r=n.namespaceURI;r=="http://www.w3.org/2000/xmlns/"&&(t._nsMap[n.prefix?n.localName:""]=n.value)}function Ke(e,t,n,r){e&&e._inc++;var a=n.namespaceURI;a=="http://www.w3.org/2000/xmlns/"&&delete t._nsMap[n.prefix?n.localName:""]}function he(e,t,n){if(e&&e._inc){e._inc++;var r=t.childNodes;if(n)r[r.length++]=n;else{for(var a=t.firstChild,i=0;a;)r[i++]=a,a=a.nextSibling;r.length=i}}}function Je(e,t){var n=t.previousSibling,r=t.nextSibling;return n?n.nextSibling=r:e.firstChild=r,r?r.previousSibling=n:e.lastChild=n,he(e.ownerDocument,e),t}function He(e,t,n){var r=t.parentNode;if(r&&r.removeChild(t),t.nodeType===R){var a=t.firstChild;if(a==null)return t;var i=t.lastChild}else a=i=t;var o=n?n.previousSibling:e.lastChild;a.previousSibling=o,i.nextSibling=n,o?o.nextSibling=a:e.firstChild=a,n==null?e.lastChild=i:n.previousSibling=i;do a.parentNode=e;while(a!==i&&(a=a.nextSibling));return he(e.ownerDocument||e,e),t.nodeType==R&&(t.firstChild=t.lastChild=null),t}function It(e,t){var n=t.parentNode;if(n){var r=e.lastChild;n.removeChild(t);var r=e.lastChild}var r=e.lastChild;return t.parentNode=e,t.previousSibling=r,t.nextSibling=null,r?r.nextSibling=t:e.firstChild=t,e.lastChild=t,he(e.ownerDocument,e,t),t}B.prototype={nodeName:"#document",nodeType:Ye,doctype:null,documentElement:null,_inc:1,insertBefore:function(e,t){if(e.nodeType==R){for(var n=e.firstChild;n;){var r=n.nextSibling;this.insertBefore(n,t),n=r}return e}return this.documentElement==null&&e.nodeType==x&&(this.documentElement=e),He(this,e,t),e.ownerDocument=this,e},removeChild:function(e){return this.documentElement==e&&(this.documentElement=null),Je(this,e)},importNode:function(e,t){return it(this,e,t)},getElementById:function(e){var t=null;return Q(this.documentElement,function(n){if(n.nodeType==x&&n.getAttribute("id")==e)return t=n,!0}),t},getElementsByClassName:function(e){var t=new RegExp("(^|\\\\s)"+e+"(\\\\s|$)");return new V(this,function(n){var r=[];return Q(n.documentElement,function(a){a!==n&&a.nodeType==x&&t.test(a.getAttribute("class"))&&r.push(a)}),r})},createElement:function(e){var t=new q;t.ownerDocument=this,t.nodeName=e,t.tagName=e,t.childNodes=new S;var n=t.attributes=new re;return n._ownerElement=t,t},createDocumentFragment:function(){var e=new ie;return e.ownerDocument=this,e.childNodes=new S,e},createTextNode:function(e){var t=new de;return t.ownerDocument=this,t.appendData(e),t},createComment:function(e){var t=new ve;return t.ownerDocument=this,t.appendData(e),t},createCDATASection:function(e){var t=new ge;return t.ownerDocument=this,t.appendData(e),t},createProcessingInstruction:function(e,t){var n=new ye;return n.ownerDocument=this,n.tagName=n.target=e,n.nodeValue=n.data=t,n},createAttribute:function(e){var t=new ae;return t.ownerDocument=this,t.name=e,t.nodeName=e,t.localName=e,t.specified=!0,t},createEntityReference:function(e){var t=new Ne;return t.ownerDocument=this,t.nodeName=e,t},createElementNS:function(e,t){var n=new q,r=t.split(":"),a=n.attributes=new re;return n.childNodes=new S,n.ownerDocument=this,n.nodeName=t,n.tagName=t,n.namespaceURI=e,r.length==2?(n.prefix=r[0],n.localName=r[1]):n.localName=t,a._ownerElement=n,n},createAttributeNS:function(e,t){var n=new ae,r=t.split(":");return n.ownerDocument=this,n.nodeName=t,n.name=t,n.namespaceURI=e,n.specified=!0,r.length==2?(n.prefix=r[0],n.localName=r[1]):n.localName=t,n}};D(B,N);function q(){this._nsMap={}}q.prototype={nodeType:x,hasAttribute:function(e){return this.getAttributeNode(e)!=null},getAttribute:function(e){var t=this.getAttributeNode(e);return t&&t.value||""},getAttributeNode:function(e){return this.attributes.getNamedItem(e)},setAttribute:function(e,t){var n=this.ownerDocument.createAttribute(e);n.value=n.nodeValue=""+t,this.setAttributeNode(n)},removeAttribute:function(e){var t=this.getAttributeNode(e);t&&this.removeAttributeNode(t)},appendChild:function(e){return e.nodeType===R?this.insertBefore(e,null):It(this,e)},setAttributeNode:function(e){return this.attributes.setNamedItem(e)},setAttributeNodeNS:function(e){return this.attributes.setNamedItemNS(e)},removeAttributeNode:function(e){return this.attributes.removeNamedItem(e.nodeName)},removeAttributeNS:function(e,t){var n=this.getAttributeNodeNS(e,t);n&&this.removeAttributeNode(n)},hasAttributeNS:function(e,t){return this.getAttributeNodeNS(e,t)!=null},getAttributeNS:function(e,t){var n=this.getAttributeNodeNS(e,t);return n&&n.value||""},setAttributeNS:function(e,t,n){var r=this.ownerDocument.createAttributeNS(e,t);r.value=r.nodeValue=""+n,this.setAttributeNode(r)},getAttributeNodeNS:function(e,t){return this.attributes.getNamedItemNS(e,t)},getElementsByTagName:function(e){return new V(this,function(t){var n=[];return Q(t,function(r){r!==t&&r.nodeType==x&&(e==="*"||r.tagName==e)&&n.push(r)}),n})},getElementsByTagNameNS:function(e,t){return new V(this,function(n){var r=[];return Q(n,function(a){a!==n&&a.nodeType===x&&(e==="*"||a.namespaceURI===e)&&(t==="*"||a.localName==t)&&r.push(a)}),r})}};B.prototype.getElementsByTagName=q.prototype.getElementsByTagName;B.prototype.getElementsByTagNameNS=q.prototype.getElementsByTagNameNS;D(q,N);function ae(){}ae.prototype.nodeType=k;D(ae,N);function Z(){}Z.prototype={data:"",substringData:function(e,t){return this.data.substring(e,e+t)},appendData:function(e){e=this.data+e,this.nodeValue=this.data=e,this.length=e.length},insertData:function(e,t){this.replaceData(e,0,t)},appendChild:function(e){throw new Error(g[Ct])},deleteData:function(e,t){this.replaceData(e,t,"")},replaceData:function(e,t,n){var r=this.data.substring(0,e),a=this.data.substring(e+t);n=r+n+a,this.nodeValue=this.data=n,this.length=n.length}};D(Z,N);function de(){}de.prototype={nodeName:"#text",nodeType:ne,splitText:function(e){var t=this.data,n=t.substring(e);t=t.substring(0,e),this.data=this.nodeValue=t,this.length=t.length;var r=this.ownerDocument.createTextNode(n);return this.parentNode&&this.parentNode.insertBefore(r,this.nextSibling),r}};D(de,Z);function ve(){}ve.prototype={nodeName:"#comment",nodeType:Xe};D(ve,Z);function ge(){}ge.prototype={nodeName:"#cdata-section",nodeType:ke};D(ge,Z);function Ee(){}Ee.prototype.nodeType=ze;D(Ee,N);function et(){}et.prototype.nodeType=_t;D(et,N);function tt(){}tt.prototype.nodeType=bt;D(tt,N);function Ne(){}Ne.prototype.nodeType=Ve;D(Ne,N);function ie(){}ie.prototype.nodeName="#document-fragment";ie.prototype.nodeType=R;D(ie,N);function ye(){}ye.prototype.nodeType=qe;D(ye,N);function nt(){}nt.prototype.serializeToString=function(e,t,n){return rt.call(e,t,n)};N.prototype.toString=rt;function rt(e,t){var n=[],r=this.nodeType==9&&this.documentElement||this,a=r.prefix,i=r.namespaceURI;if(i&&a==null){var a=r.lookupPrefix(i);if(a==null)var o=[{namespace:i,prefix:null}]}return X(this,n,e,t,o),n.join("")}function at(e,t,n){var r=e.prefix||"",a=e.namespaceURI;if(!r&&!a||r==="xml"&&a==="http://www.w3.org/XML/1998/namespace"||a=="http://www.w3.org/2000/xmlns/")return!1;for(var i=n.length;i--;){var o=n[i];if(o.prefix==r)return o.namespace!=a}return!0}function X(e,t,n,r,a){if(r)if(e=r(e),e){if(typeof e=="string"){t.push(e);return}}else return;switch(e.nodeType){case x:a||(a=[]);var i=a.length,o=e.attributes,c=o.length,l=e.firstChild,s=e.tagName;n=Tt===e.namespaceURI||n,t.push("<",s);for(var u=0;u<c;u++){var h=o.item(u);h.prefix=="xmlns"?a.push({prefix:h.localName,namespace:h.value}):h.nodeName=="xmlns"&&a.push({prefix:"",namespace:h.value})}for(var u=0;u<c;u++){var h=o.item(u);if(at(h,n,a)){var p=h.prefix||"",d=h.namespaceURI,T=p?" xmlns:"+p:" xmlns";t.push(T,'="',d,'"'),a.push({prefix:p,namespace:d})}X(h,t,n,r,a)}if(at(e,n,a)){var p=e.prefix||"",d=e.namespaceURI;if(d){var T=p?" xmlns:"+p:" xmlns";t.push(T,'="',d,'"'),a.push({prefix:p,namespace:d})}}if(l||n&&!/^(?:meta|link|img|br|hr|input)$/i.test(s)){if(t.push(">"),n&&/^script$/i.test(s))for(;l;)l.data?t.push(l.data):X(l,t,n,r,a),l=l.nextSibling;else for(;l;)X(l,t,n,r,a),l=l.nextSibling;t.push("</",s,">")}else t.push("/>");return;case Ye:case R:for(var l=e.firstChild;l;)X(l,t,n,r,a),l=l.nextSibling;return;case k:return t.push(" ",e.name,'="',e.value.replace(/[<&"]/g,Ze),'"');case ne:return t.push(e.data.replace(/[<&]/g,Ze).replace(/]]>/g,"]]&gt;"));case ke:return t.push("<![CDATA[",e.data,"]]>");case Xe:return t.push("<!--",e.data,"-->");case ze:var m=e.publicId,f=e.systemId;if(t.push("<!DOCTYPE ",e.name),m)t.push(" PUBLIC ",m),f&&f!="."&&t.push(" ",f),t.push(">");else if(f&&f!=".")t.push(" SYSTEM ",f,">");else{var A=e.internalSubset;A&&t.push(" [",A,"]"),t.push(">")}return;case qe:return t.push("<?",e.target," ",e.data,"?>");case Ve:return t.push("&",e.nodeName,";");default:t.push("??",e.nodeName)}}function it(e,t,n){var r;switch(t.nodeType){case x:r=t.cloneNode(!1),r.ownerDocument=e;case R:break;case k:n=!0;break}if(r||(r=t.cloneNode(!1)),r.ownerDocument=e,r.parentNode=null,n)for(var a=t.firstChild;a;)r.appendChild(it(e,a,n)),a=a.nextSibling;return r}function De(e,t,n){var r=new t.constructor;for(var a in t){var i=t[a];typeof i!="object"&&i!=r[a]&&(r[a]=i)}switch(t.childNodes&&(r.childNodes=new S),r.ownerDocument=e,r.nodeType){case x:var o=t.attributes,c=r.attributes=new re,l=o.length;c._ownerElement=r;for(var s=0;s<l;s++)r.setAttributeNode(De(e,o.item(s),!0));break;case k:n=!0}if(n)for(var u=t.firstChild;u;)r.appendChild(De(e,u,n)),u=u.nextSibling;return r}function ot(e,t,n){e[t]=n}try{if(Object.defineProperty){let e=function(t){switch(t.nodeType){case x:case R:var n=[];for(t=t.firstChild;t;)t.nodeType!==7&&t.nodeType!==8&&n.push(e(t)),t=t.nextSibling;return n.join("");default:return t.nodeValue}};Ht=e,Object.defineProperty(V.prototype,"length",{get:function(){return me(this),this.$$length}}),Object.defineProperty(N.prototype,"textContent",{get:function(){return e(this)},set:function(t){switch(this.nodeType){case x:case R:for(;this.firstChild;)this.removeChild(this.firstChild);(t||String(t))&&this.appendChild(this.ownerDocument.createTextNode(t));break;default:this.data=t,this.value=t,this.nodeValue=t}}}),ot=function(t,n,r){t["$$"+n]=r}}}catch(e){}var Ht;K.Node=N;K.DOMException=U;K.DOMImplementation=Be;K.XMLSerializer=nt});var ct=ee(H=>{function st(e){this.options=e||{locator:{}}}st.prototype.parseFromString=function(e,t){var n=this.options,r=new St,a=n.domBuilder||new J,i=n.errorHandler,o=n.locator,c=n.xmlns||{},l=/\\/x?html?$/.test(t),s=l?Ot.entityMap:{lt:"<",gt:">",amp:"&",quot:'"',apos:"'"};return o&&a.setDocumentLocator(o),r.errorHandler=Rt(i,a,o),r.domBuilder=n.domBuilder||a,l&&(c[""]="http://www.w3.org/1999/xhtml"),c.xml=c.xml||"http://www.w3.org/XML/1998/namespace",e&&typeof e=="string"?r.parse(e,c,s):r.errorHandler.error("invalid doc source"),a.doc};function Rt(e,t,n){if(!e){if(t instanceof J)return t;e=t}var r={},a=e instanceof Function;n=n||{};function i(o){var c=e[o];!c&&a&&(c=e.length==2?function(l){e(o,l)}:e),r[o]=c&&function(l){c("[xmldom "+o+"]	"+l+Te(n))}||function(){}}return i("warning"),i("error"),i("fatalError"),r}function J(){this.cdata=!1}function Y(e,t){t.lineNumber=e.lineNumber,t.columnNumber=e.columnNumber}J.prototype={startDocument:function(){this.doc=new Ut().createDocument(null,null,null),this.locator&&(this.doc.documentURI=this.locator.systemId)},startElement:function(e,t,n,r){var a=this.doc,i=a.createElementNS(e,n||t),o=r.length;oe(this,i),this.currentElement=i,this.locator&&Y(this.locator,i);for(var c=0;c<o;c++){var e=r.getURI(c),l=r.getValue(c),n=r.getQName(c),s=a.createAttributeNS(e,n);this.locator&&Y(r.getLocator(c),s),s.value=s.nodeValue=l,i.setAttributeNode(s)}},endElement:function(e,t,n){var r=this.currentElement,a=r.tagName;this.currentElement=r.parentNode},startPrefixMapping:function(e,t){},endPrefixMapping:function(e){},processingInstruction:function(e,t){var n=this.doc.createProcessingInstruction(e,t);this.locator&&Y(this.locator,n),oe(this,n)},ignorableWhitespace:function(e,t,n){},characters:function(e,t,n){if(e=ut.apply(this,arguments),e){if(this.cdata)var r=this.doc.createCDATASection(e);else var r=this.doc.createTextNode(e);this.currentElement?this.currentElement.appendChild(r):/^\\s*$/.test(e)&&this.doc.appendChild(r),this.locator&&Y(this.locator,r)}},skippedEntity:function(e){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(e){(this.locator=e)&&(e.lineNumber=0)},comment:function(e,t,n){e=ut.apply(this,arguments);var r=this.doc.createComment(e);this.locator&&Y(this.locator,r),oe(this,r)},startCDATA:function(){this.cdata=!0},endCDATA:function(){this.cdata=!1},startDTD:function(e,t,n){var r=this.doc.implementation;if(r&&r.createDocumentType){var a=r.createDocumentType(e,t,n);this.locator&&Y(this.locator,a),oe(this,a)}},warning:function(e){console.warn("[xmldom warning]	"+e,Te(this.locator))},error:function(e){console.error("[xmldom error]	"+e,Te(this.locator))},fatalError:function(e){throw new Mt(e,this.locator)}};function Te(e){if(e)return\`
@\`+(e.systemId||"")+"#[line:"+e.lineNumber+",col:"+e.columnNumber+"]"}function ut(e,t,n){return typeof e=="string"?e.substr(t,n):e.length>=t+n||t?new java.lang.String(e,t,n)+"":e}"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\\w+/g,function(e){J.prototype[e]=function(){return null}});function oe(e,t){e.currentElement?e.currentElement.appendChild(t):e.doc.appendChild(t)}var Ot=Re(),lt=Pe(),St=lt.XMLReader,Mt=lt.ParseError,Ut=H.DOMImplementation=we().DOMImplementation;H.XMLSerializer=we().XMLSerializer;H.DOMParser=st;H.__DOMHandler=J});function le(e,t){return(e%t+t)%t}function ce(e){return"ID_xyxyxyxyxyxy".replace(/[xy]/g,function(t){var n=Math.random()*16|0,r=t=="x"?n:n&3|8;return r.toString(16)})}var{DOMParser:$t}=ct(),Ft=/(<(span|div).*?<\\/(span|div)>)/g,M=self,ft=class{constructor(){this.queue=[];this.parsing=!1;this.parseTitle=!1;M.addEventListener("message",t=>{if(t.data.type=="options"){let{defaultCalendar:n,format:r,parseTitle:a,supportsTimelines:i,timelineTag:o}=t.data;this.defaultCalendar=n,this.format=r,this.parseTitle=a,this.supportsTimelines=i,this.timelineTag=o}}),M.addEventListener("message",t=>{if(t.data.type=="calendars"){let{calendars:n}=t.data;this.calendars=[...n]}}),M.addEventListener("message",t=>{t.data.type=="queue"&&this.add(...t.data.paths)})}add(...t){this.queue.push(...t),this.parsing||this.parse()}async parse(){for(this.parsing=!0;this.queue.length;){let t=this.queue.shift();this.getFileData(t)}this.parsing=!1,M.postMessage({type:"save"})}async getFileData(t){let n=this;return new Promise(r=>{function a(i){if(i.data.type!="file"||i.data.path!=t)return;M.removeEventListener("message",a);let{data:o,cache:c,allTags:l,file:s}=i.data;n.parseFileForEvents(o,c,l,s)}M.addEventListener("message",a),M.postMessage({path:t,type:"get"})})}getDataFromFrontmatter(t){let n,r;return t&&(n=t==null?void 0:t["fc-calendar"],r=t==null?void 0:t["fc-category"]),(!n||!n.length)&&(n=this.defaultCalendar),n=n.toLowerCase(),{calendar:this.calendars.find(i=>n==i.name.toLowerCase()),fcCategory:r}}parseFileForEvents(t,n,r,a){var s,u,h,p,d,T;let i=[],{frontmatter:o}=n!=null?n:{},{calendar:c,fcCategory:l}=this.getDataFromFrontmatter(o);if(!!c){this.supportsTimelines&&r&&r.includes(this.timelineTag)&&i.push(...this.parseTimelineEvents(c,t,a,l)),i.push(...this.parseFrontmatterEvents(c,l,o,a));for(let m of i){let f=c.events.find(A=>A.note==a.path&&(!m.timestamp||A.timestamp==m.timestamp));(f==null?void 0:f.date.day)==m.date.day&&(f==null?void 0:f.date.month)==m.date.month&&(f==null?void 0:f.date.year)==m.date.year&&((s=f==null?void 0:f.end)==null?void 0:s.day)==((u=m.end)==null?void 0:u.day)&&((h=f==null?void 0:f.end)==null?void 0:h.month)==((p=m.end)==null?void 0:p.month)&&((d=f==null?void 0:f.end)==null?void 0:d.year)==((T=m.end)==null?void 0:T.year)&&(f==null?void 0:f.category)==m.category&&(!m.timestamp&&!(f==null?void 0:f.timestamp)||(f==null?void 0:f.timestamp)==m.timestamp)||M.postMessage({type:"update",id:c.id,index:f?c.events.findIndex(A=>A.id==(f==null?void 0:f.id)):-1,event:m,original:f})}}}parseFrontmatterEvents(t,n,r,a){let{date:i,end:o}=this.getDates(r,this.parseTitle?a.basename:"");if(!i)return[];if((i==null?void 0:i.month)&&typeof(i==null?void 0:i.month)=="string"){let s=t.static.months.find(u=>u.name==i.month);s?i.month=t.static.months.indexOf(s):i.month=null}else(i==null?void 0:i.month)&&typeof(i==null?void 0:i.month)=="number"&&(i.month=le(i.month-1,t.static.months.length));if((o==null?void 0:o.month)&&typeof(o==null?void 0:o.month)=="string"){let s=t.static.months.find(u=>u.name==o.month);s?o.month=t.static.months.indexOf(s):o.month=null}else(o==null?void 0:o.month)&&typeof(o==null?void 0:o.month)=="number"&&(o.month=le(o.month-1,t.static.months.length));let c=Number(\`\${i.year}\${i.month}\${i.day}00\`),l=t.categories.find(s=>(s==null?void 0:s.name)==n);return[{id:ce(6),name:a.basename,note:a.path,date:i,end:o,category:l==null?void 0:l.id,description:""}]}parseTimelineEvents(t,n,r,a){var c;let i=[],o=new $t;for(let l of n.matchAll(Ft)){let s=o.parseFromString(l[0],"text/html"),u={class:s.documentElement.getAttribute("class"),dataset:{date:s.documentElement.getAttribute("data-date"),title:s.documentElement.getAttribute("data-title"),class:s.documentElement.getAttribute("data-class"),end:s.documentElement.getAttribute("data-end")},content:s.documentElement.textContent};if(u.class!=="ob-timelines"||!u.dataset.date)continue;let h=Number(u.dataset.date[0]=="-"?+u.dataset.date.substring(1,u.dataset.date.length).split("-").join("")*-1:+u.dataset.date.split("-").join("")),p=u.dataset.date.split(/(?<!^)-/),d={year:parseInt(p[0]),month:parseInt(p[1]),day:parseInt(p[2])},T;u.dataset.end&&(p=u.dataset.end.split(/(?<!^)-/),T={year:parseInt(p[0]),month:parseInt(p[1]),day:parseInt(p[2])});let m=t.categories.find(f=>(f==null?void 0:f.name)==a);i.push({id:ce(6),name:(c=u.dataset.title)!=null?c:r.basename,note:r.path,date:d,end:T,timestamp:h,category:m==null?void 0:m.id,description:u.content})}return i}parseDate(t){var n;if(typeof t=="string"){if(!/\\d+[./-]\\d+[./-]\\d+/.test(t))return;try{let[r]=(n=t.match(/\\d+[./-]\\d+[./-]\\d+/))!=null?n:[];if(!r)return;let a=r.split(/[.\\-\\/]/).map(o=>Number(o)),i=[...new Set(this.format.replace(/[^\\w]/g,"").toUpperCase().split(""))];return{year:a[i.indexOf("Y")],month:a[i.indexOf("M")],day:a[i.indexOf("D")]}}catch(r){return}}else return t}getDates(t={},n){let r="fc-date"in t?"fc-date":"fc-start",a;t&&r in t&&(a=t[r]),a||(a=n);let i=this.parseDate(a),o="fc-end"in t?t["fc-end"]:null,c=this.parseDate(o);return{date:i,end:c}}};new ft;
`)}var fs=class extends hn.Component{constructor(e){super();this.plugin=e;this.parsing=new Set;this.tree=new Map;this.worker=new ds}get calendars(){return this.plugin.data.calendars}get metadataCache(){return this.plugin.app.metadataCache}get vault(){return this.plugin.app.vault}onload(){if(this.worker.postMessage({type:"calendars",calendars:this.calendars}),this.registerEvent(this.plugin.app.workspace.on("fantasy-calendars-updated",()=>{this.worker.postMessage({type:"calendars",calendars:this.calendars})})),this.worker.postMessage({type:"options",parseTitle:this.plugin.data.parseDates,format:this.plugin.format,defaultCalendar:this.plugin.defaultCalendar?.name,supportsTimelines:this.plugin.data.supportTimelines,timelineTag:this.plugin.data.timelineTag}),this.registerEvent(this.plugin.app.workspace.on("fantasy-calendar-settings-change",()=>{this.worker.postMessage({type:"options",parseTitle:this.plugin.data.parseDates,format:this.plugin.format,defaultCalendar:this.plugin.defaultCalendar?.name,supportsTimelines:this.plugin.data.supportTimelines,timelineTag:this.plugin.data.timelineTag})})),this.registerEvent(this.metadataCache.on("changed",t=>{this.startParsing([t.path])})),this.registerEvent(this.vault.on("rename",(t,a)=>{!this.calendars.length||t instanceof hn.TFile&&this.worker.postMessage({type:"rename",file:{path:t.path,basename:t.basename,oldPath:a},sourceCalendars:this.calendars})})),this.registerEvent(this.vault.on("delete",t=>{if(t instanceof hn.TFile){for(let a of this.calendars)for(let r of a.events)!r.note||r.note===t.path&&(r.note=null);this.plugin.saveCalendar()}})),this.worker.addEventListener("message",async t=>{if(t.data.type=="get"){let{path:a}=t.data,r=this.plugin.app.vault.getAbstractFileByPath(a);if(r instanceof hn.TFile){let o=this.metadataCache.getFileCache(r),i=(0,hn.getAllTags)(o),l=await this.vault.cachedRead(r);this.worker.postMessage({type:"file",path:a,cache:o,file:{path:r.path,basename:r.basename},allTags:i,data:l})}else if(r instanceof hn.TFolder){let o=r.children.map(i=>i.path);this.startParsing(o)}}}),this.worker.addEventListener("message",async t=>{if(t.data.type=="update"){let{id:a,index:r,event:o,original:i}=t.data,l=this.calendars.find(s=>s.id==a);if(!l)return;l.events.splice(r,r>=0?1:0,o),this.addToTree(l,o),i&&this.addToTree(l,i)}}),this.worker.addEventListener("message",async t=>{t.data.type=="save"&&(this.plugin.app.workspace.trigger("fantasy-calendars-event-update",this.tree),this.tree=new Map,await this.plugin.saveCalendar())}),!this.calendars.length)return;let e=this.vault.getAbstractFileByPath(this.plugin.data.path);!e||!(e instanceof hn.TFolder)||this.startParsing(e.children.map(t=>t.path))}addToTree(e,t){this.tree.has(e.id)||this.tree.set(e.id,new Map);let a=this.tree.get(e.id);a.has(t.date.year)||a.set(t.date.year,new Set);let r=a.get(t.date.year);this.tree.set(e.id,a.set(t.date.year,r.add(t.date.month)))}startParsing(e){e.length&&this.worker.postMessage({type:"queue",paths:e})}onunload(){this.worker.terminate(),this.worker=null}};var hs=class{constructor(e){this.plugin=e}getMoons(e,t){let a=t?this.plugin.data.calendars.find(({name:s})=>s==t):this.plugin.defaultCalendar??this.plugin.defaultCalendar,r=this._getHelper(a),o=e||r.current,i=r.getDayForDate(o),l=[];for(let[s,d]of i.moons){let u=createSpan();new yn({target:u,props:{moon:s,phase:d}}),l.push({icon:u,moon:s,phase:d})}return l}_getHelper(e=this.plugin.defaultCalendar){return new Fa(e,this.plugin)}};var fh=Te(Er()),hh=Na.Platform.isMacOS?"Meta":"Control",bi={name:null,description:null,id:null,static:{incrementDay:!1,firstWeekDay:null,overflow:!0,weekdays:[],months:[],moons:[],displayMoons:!0,displayDayNumber:!1,leapDays:[],eras:[]},current:{year:1,month:null,day:null},events:[],categories:[]},ph={calendars:[],currentCalendar:null,defaultCalendar:null,eventPreview:!1,configDirectory:null,path:"/",parseDates:!1,dateFormat:"YYYY-MM-DD",dailyNotes:!1,version:{major:null,minor:null,patch:null},supportTimelines:!1,timelineTag:"#timeline",syncTimelines:!0,autoParse:!0,settingsToggleState:{calendars:!1,events:!1}},ps=class extends Na.Plugin{constructor(){super(...arguments);this.api=new hs(this);this.watcher=new fs(this)}async addNewCalendar(e){this.data.calendars.push({...e}),this.data.defaultCalendar||(this.data.defaultCalendar=e.id),await this.saveCalendar()}get currentCalendar(){return this.data.calendars.find(e=>e.id==this.data.currentCalendar)}get canUseDailyNotes(){return this.dailyNotes._loaded}get dailyNotes(){return this.app.internalPlugins.getPluginById("daily-notes")}get canUseTimelines(){return this.app.plugins.getPlugin("obsidian-timelines")!=null}get syncTimelines(){return this.data.syncTimelines&&this.canUseTimelines}get timelineTag(){return this.syncTimelines?this.app.plugins.getPlugin("obsidian-timelines").settings.timelineTag:this.data.timelineTag}get format(){return(this.data.dailyNotes&&this.canUseDailyNotes?this.dailyNotes.instance.options.format:this.data.dateFormat)??"YYYY-MM-DD"}get defaultCalendar(){return this.data.calendars.find(e=>e.id==this.data.defaultCalendar)??this.data.calendars[0]}get view(){let e=this.app.workspace.getLeavesOfType(Gt),t=e.length?e[0]:null;if(t&&t.view&&t.view instanceof Vn)return t.view}get full(){let e=this.app.workspace.getLeavesOfType(aa),t=e.length?e[0]:null;if(t&&t.view&&t.view instanceof Vn)return t.view}async onload(){console.log("Loading Fantasy Calendars v"+this.manifest.version),await this.loadSettings(),this.registerView(Gt,e=>new Vn(this,e)),this.registerView(aa,e=>new Vn(this,e,{full:!0})),this.app.workspace.onLayoutReady(()=>{this.watcher.load(),this.addSettingTab(new vi(this)),this.addCalendarView(!0)}),this.addRibbonIcon(Gt,"Open Large Fantasy Calendar",e=>{this.app.workspace.getLeaf(e.getModifierState(hh)).setViewState({type:aa})}),this.addCommand({id:"open-fantasy-calendar",name:"Open Fantasy Calendar",callback:()=>{this.addCalendarView()}}),this.addCommand({id:"open-big-fantasy-calendar",name:"Open Large Fantasy Calendar",callback:()=>{this.addFullCalendarView()}}),this.addCommand({id:"toggle-moons",name:"Toggle Moons",checkCallback:e=>{let t=this.app.workspace.getLeavesOfType(Gt);if(t&&t.length)return e||t[0].view.toggleMoons(),!0}}),this.addCommand({id:"view-date",name:"View Date",checkCallback:e=>{let t=this.app.workspace.getLeavesOfType(Gt);if(t&&t.length)return e||t[0].view.openDate(),!0}}),this.addCommand({id:"view-date",name:"View Note Event",checkCallback:e=>{let t=this.app.workspace.getLeavesOfType(Gt);if(t&&t.length&&t[0].view instanceof Vn){let a=this.app.workspace.getActiveFile();if(a){let r=t[0].view.calendar.events.find(o=>o.note==a.path);if(r)return e||t[0].view.openDay(r.date),!0}}}})}async onunload(){console.log("Unloading Fantasy Calendars v"+this.manifest.version),this.app.workspace.getLeavesOfType(Gt).forEach(e=>e.detach()),this.app.workspace.getLeavesOfType(aa).forEach(e=>e.detach()),this.watcher.unload()}async addCalendarView(e=!1){e&&this.app.workspace.getLeavesOfType(Gt)?.length||(await this.app.workspace.getRightLeaf(!1).setViewState({type:Gt}),this.view&&this.app.workspace.revealLeaf(this.view.leaf))}async addFullCalendarView(e=!1){e&&this.app.workspace.getLeavesOfType(aa)?.length||(this.app.workspace.getLeaf(!1).setViewState({type:aa}),this.full&&this.app.workspace.revealLeaf(this.full.leaf))}async loadSettings(){this.data={...(0,fh.default)(ph),...await this.loadData()},this.configDirectory&&await this.app.vault.adapter.exists(this.configFilePath)&&(this.data=Object.assign({},this.data,JSON.parse(await this.app.vault.adapter.read(this.configFilePath)))),!this.data.defaultCalendar&&this.data.calendars.length&&(this.data.defaultCalendar=this.data.calendars[0].id)}async saveCalendar(){await this.saveSettings(),this.app.workspace.trigger("fantasy-calendars-updated")}get configDirectory(){if(!(!this.data||!this.data.configDirectory))return`${this.data.configDirectory}/plugins/fantasy-calendar`}get configFilePath(){if(!!this.data.configDirectory)return`${this.configDirectory}/data.json`}async saveSettings(){await this.saveData(this.data),this.app.workspace.trigger("fantasy-calendar-settings-change")}async saveData(e){if(this.configDirectory)try{await this.app.vault.adapter.exists(this.configDirectory)||await this.app.vault.adapter.mkdir(this.configDirectory),await this.app.vault.adapter.write(this.configFilePath,JSON.stringify(e))}catch(t){console.error(t),new Na.Notice("There was an error saving into the configured directory.")}await super.saveData(e)}};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/*! https://mths.be/he v1.2.0 by @mathias | MIT license */
/**
 * chroma.js - JavaScript library for color conversions
 *
 * Copyright (c) 2011-2019, Gregor Aisch
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. The name Gregor Aisch may not be used to endorse or promote products
 * derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * -------------------------------------------------------
 *
 * chroma.js includes colors from colorbrewer2.org, which are released under
 * the following license:
 *
 * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,
 * and The Pennsylvania State University.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * ------------------------------------------------------
 *
 * Named colors are taken from X11 Color Names.
 * http://www.w3.org/TR/css3-color/#svg-color
 *
 * @preserve
 */
//# sourceMappingURL=data:application/json;base64,
