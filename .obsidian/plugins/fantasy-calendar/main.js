/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var ym=Object.create;var ya=Object.defineProperty;var vm=Object.getOwnPropertyDescriptor;var bm=Object.getOwnPropertyNames;var wm=Object.getPrototypeOf,Dm=Object.prototype.hasOwnProperty;var Os=t=>ya(t,"__esModule",{value:!0});var Ze=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),_m=(t,e)=>{Os(t);for(var n in e)ya(t,n,{get:e[n],enumerable:!0})},Em=(t,e,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of bm(e))!Dm.call(t,r)&&r!=="default"&&ya(t,r,{get:()=>e[r],enumerable:!(n=vm(e,r))||n.enumerable});return t},Oe=t=>Em(Os(ya(t!=null?ym(wm(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var Rr=Ze((Pi,ji)=>{(function(t,e){typeof Pi=="object"&&typeof ji!="undefined"?ji.exports=e():typeof define=="function"&&define.amd?define(e):(t=typeof globalThis!="undefined"?globalThis:t||self,t["fast-copy"]=e())})(Pi,function(){"use strict";var t=Function.prototype.toString,e=Object.create,n=Object.defineProperty,r=Object.getOwnPropertyDescriptor,a=Object.getOwnPropertyNames,i=Object.getOwnPropertySymbols,o=Object.getPrototypeOf,l=Object.prototype,s=l.hasOwnProperty,d=l.propertyIsEnumerable,u={SYMBOL_PROPERTIES:typeof i=="function",WEAKMAP:typeof WeakMap=="function"},c=function(){if(u.WEAKMAP)return new WeakMap;var T=e({has:function(M){return!!~T._keys.indexOf(M)},set:function(M,k){T._keys.push(M),T._values.push(k)},get:function(M){return T._values[T._keys.indexOf(M)]}});return T._keys=[],T._values=[],T},h=function(T,M){if(!T.constructor)return e(null);var k=T.constructor,E=T.__proto__||o(T);if(k===M.Object)return E===M.Object.prototype?{}:e(E);if(~t.call(k).indexOf("[native code]"))try{return new k}catch{}return e(E)},v=function(T,M,k,E){var b=h(T,M);E.set(T,b);for(var N in T)s.call(T,N)&&(b[N]=k(T[N],E));if(u.SYMBOL_PROPERTIES){var x=i(T),L=x.length;if(L)for(var O=0,U=void 0;O<L;O++)U=x[O],d.call(T,U)&&(b[U]=k(T[U],E))}return b},m=function(T,M,k,E){var b=h(T,M);E.set(T,b);var N=u.SYMBOL_PROPERTIES?a(T).concat(i(T)):a(T),x=N.length;if(x){for(var L=0,O=void 0,U=void 0;L<x;L++)if(O=N[L],O!=="callee"&&O!=="caller")if(U=r(T,O),U){!U.get&&!U.set&&(U.value=k(T[O],E));try{n(b,O,U)}catch{b[O]=U.value}}else b[O]=k(T[O],E)}return b},_=function(T){var M="";return T.global&&(M+="g"),T.ignoreCase&&(M+="i"),T.multiline&&(M+="m"),T.unicode&&(M+="u"),T.sticky&&(M+="y"),M},g=Array.isArray,S=function(){if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;console&&console.error&&console.error('Unable to locate global object, returning "this".')}();function C(T,M){var k=!!(M&&M.isStrict),E=M&&M.realm||S,b=k?m:v,N=function(x,L){if(!x||typeof x!="object")return x;if(L.has(x))return L.get(x);var O=x.constructor;if(O===E.Object)return b(x,E,N,L);var U;if(g(x)){if(k)return m(x,E,N,L);var te=x.length;U=new O,L.set(x,U);for(var he=0;he<te;he++)U[he]=N(x[he],L);return U}if(x instanceof E.Date)return new O(x.getTime());if(x instanceof E.RegExp)return U=new O(x.source,x.flags||_(x)),U.lastIndex=x.lastIndex,U;if(E.Map&&x instanceof E.Map)return U=new O,L.set(x,U),x.forEach(function(ee,se){U.set(se,N(ee,L))}),U;if(E.Set&&x instanceof E.Set)return U=new O,L.set(x,U),x.forEach(function(ee){U.add(N(ee,L))}),U;if(E.Blob&&x instanceof E.Blob)return x.slice(0,x.size,x.type);if(E.Buffer&&E.Buffer.isBuffer(x))return U=E.Buffer.allocUnsafe?E.Buffer.allocUnsafe(x.length):new O(x.length),L.set(x,U),x.copy(U),U;if(E.ArrayBuffer){if(E.ArrayBuffer.isView(x))return U=new O(x.buffer.slice(0)),L.set(x,U),U;if(x instanceof E.ArrayBuffer)return U=x.slice(0),L.set(x,U),U}return typeof x.then=="function"||x instanceof Error||E.WeakMap&&x instanceof E.WeakMap||E.WeakSet&&x instanceof E.WeakSet?x:b(x,E,N,L)};return N(T,c())}return C.default=C,C.strict=function(M,k){return C(M,{isStrict:!0,realm:k?k.realm:void 0})},C})});var qs=Ze(va=>{"use strict";Object.defineProperty(va,"__esModule",{value:!0});va.default=void 0;var Cm={sum:function(e){return e.reduce(function(n,r){return n+r})}},Am=Cm;va.default=Am});var ba=Ze((b1,Rs)=>{function km(t){return Object.prototype.toString.call(t).slice(8,-1)}Rs.exports=km});var Vi=Ze((w1,Ls)=>{function xm(t){return!!t&&typeof t=="object"&&t.constructor===Object}Ls.exports=xm});var wa=Ze((D1,Ps)=>{function Fm(t,e){return Object.prototype.hasOwnProperty.call(t,e)}Ps.exports=Fm});var Ws=Ze((_1,Hs)=>{var Tm=wa(),Da,js;function Sm(){js=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],Da=!0;for(var t in{toString:null})Da=!1}function Bm(t,e,n){var r,a=0;Da==null&&Sm();for(r in t)if(Vs(e,t,r,n)===!1)break;if(Da)for(var i=t.constructor,o=!!i&&t===i.prototype;(r=js[a++])&&!((r!=="constructor"||!o&&Tm(t,r))&&t[r]!==Object.prototype[r]&&Vs(e,t,r,n)===!1););}function Vs(t,e,n,r){return t.call(r,e[n],n,e)}Hs.exports=Bm});var Lr=Ze((E1,Gs)=>{var Nm=wa(),Mm=Ws();function Im(t,e,n){Mm(t,function(r,a){if(Nm(t,a))return e.call(n,t[a],a,t)})}Gs.exports=Im});var zs=Ze((C1,Us)=>{var Om=Lr();function qm(t,e){for(var n=0,r=arguments.length,a;++n<r;)a=arguments[n],a!=null&&Om(a,Rm,t);return t}function Rm(t,e){this[e]=t}Us.exports=qm});var Zs=Ze((A1,Ys)=>{var Lm=ba(),Pm=Vi(),jm=zs();function Vm(t){switch(Lm(t)){case"Object":return Hm(t);case"Array":return Um(t);case"RegExp":return Wm(t);case"Date":return Gm(t);default:return t}}function Hm(t){return Pm(t)?jm({},t):t}function Wm(t){var e="";return e+=t.multiline?"m":"",e+=t.global?"g":"",e+=t.ignoreCase?"i":"",new RegExp(t.source,e)}function Gm(t){return new Date(+t)}function Um(t){return t.slice()}Ys.exports=Vm});var Qs=Ze((k1,Ks)=>{var zm=Zs(),Ym=Lr(),Zm=ba(),Km=Vi();function Hi(t,e){switch(Zm(t)){case"Object":return Qm(t,e);case"Array":return Xm(t,e);default:return zm(t)}}function Qm(t,e){if(Km(t)){var n={};return Ym(t,function(r,a){this[a]=Hi(r,e)},n),n}else return e?e(t):t}function Xm(t,e){for(var n=[],r=-1,a=t.length,i;++r<a;)n[r]=Hi(t[r],e);return n}Ks.exports=Hi});var _a=Ze((x1,Xs)=>{function $m(t,e){return t===e?t!==0||1/t==1/e:t!==t&&e!==e}Xs.exports=$m});var Wi=Ze((F1,$s)=>{var Jm=ba();function eg(t,e){return Jm(t)===e}$s.exports=eg});var Gi=Ze((T1,Js)=>{var tg=Wi();function ng(t){return tg(t,"Object")}Js.exports=ng});var Ea=Ze((S1,el)=>{var rg=Wi(),ag=Array.isArray||function(t){return rg(t,"Array")};el.exports=ag});var nl=Ze((B1,tl)=>{function ig(t){return t}tl.exports=ig});var al=Ze((N1,rl)=>{function og(t){return function(e){return e[t]}}rl.exports=og});var sl=Ze((M1,ol)=>{var sg=Lr(),il=Ea();function lg(t,e){for(var n=-1,r=t.length;++n<r;)if(Ui(t[n],e))return!0;return!1}function ug(t,e){for(var n=-1,r=e.length;++n<r;)if(!lg(t,e[n]))return!1;return!0}function cg(t,e){var n=!0;return sg(e,function(r,a){if(!Ui(t[a],r))return n=!1}),n}function Ui(t,e){return t&&typeof t=="object"&&e&&typeof e=="object"?il(t)&&il(e)?ug(t,e):cg(t,e):t===e}ol.exports=Ui});var zi=Ze((I1,ll)=>{var dg=nl(),fg=al(),hg=sl();function pg(t,e){if(t==null)return dg;switch(typeof t){case"function":return typeof e!="undefined"?function(n,r,a){return t.call(e,n,r,a)}:t;case"object":return function(n){return hg(n,t)};case"string":case"number":return fg(t)}}ll.exports=pg});var cl=Ze((O1,ul)=>{var mg=Lr(),gg=zi();function yg(t,e,n){e=gg(e,n);var r=!0;return mg(t,function(a,i){if(!e(a,i,t))return r=!1,!1}),r}ul.exports=yg});var ml=Ze((q1,pl)=>{var dl=wa(),fl=cl(),hl=Gi(),vg=_a();function bg(t){return function(e,n){return dl(this,n)&&t(e,this[n])}}function wg(t,e){return dl(this,e)}function Dg(t,e,n){return n=n||vg,!hl(t)||!hl(e)?n(t,e):fl(t,bg(n),e)&&fl(e,wg,t)}pl.exports=Dg});var yl=Ze((R1,gl)=>{var _g=zi();function Eg(t,e,n){e=_g(e,n);var r=!0;if(t==null)return r;for(var a=-1,i=t.length;++a<i;)if(!e(t[a],a,t)){r=!1;break}return r}gl.exports=Eg});var wl=Ze((L1,bl)=>{var Cg=_a(),vl=Ea(),Ag=yl();function kg(t,e,n){return n=n||Cg,!vl(t)||!vl(e)?n(t,e):t.length!==e.length?!1:Ag(t,xg(n),e)}function xg(t){return function(e,n){return n in this&&t(e,this[n])}}bl.exports=kg});var Al=Ze((P1,Cl)=>{var Fg=_a(),Dl=Gi(),_l=Ea(),Tg=ml(),Sg=wl();function El(t,e,n){n=n||Fg;var r=Dl(t)&&Dl(e),a=!r&&_l(t)&&_l(e);if(!r&&!a)return n(t,e);function i(l,s){return El(l,s,n)}var o=r?Tg:Sg;return o(t,e,i)}Cl.exports=El});var kl=Ze((Yi,Zi)=>{(function(t,e){typeof Yi=="object"&&typeof Zi!="undefined"?Zi.exports=e():typeof define=="function"&&define.amd?define(e):t.chroma=e()})(Yi,function(){"use strict";for(var t=function(f,p,y){return p===void 0&&(p=0),y===void 0&&(y=1),f<p?p:f>y?y:f},e=function(f){f._clipped=!1,f._unclipped=f.slice(0);for(var p=0;p<=3;p++)p<3?((f[p]<0||f[p]>255)&&(f._clipped=!0),f[p]=t(f[p],0,255)):p===3&&(f[p]=t(f[p],0,1));return f},n={},r=0,a=["Boolean","Number","String","Function","Array","Date","RegExp","Undefined","Null"];r<a.length;r+=1){var i=a[r];n["[object "+i+"]"]=i.toLowerCase()}var o=function(f){return n[Object.prototype.toString.call(f)]||"object"},l=function(f,p){return p===void 0&&(p=null),f.length>=3?Array.prototype.slice.call(f):o(f[0])=="object"&&p?p.split("").filter(function(y){return f[0][y]!==void 0}).map(function(y){return f[0][y]}):f[0]},s=function(f){if(f.length<2)return null;var p=f.length-1;return o(f[p])=="string"?f[p].toLowerCase():null},d=Math.PI,u={clip_rgb:e,limit:t,type:o,unpack:l,last:s,PI:d,TWOPI:d*2,PITHIRD:d/3,DEG2RAD:d/180,RAD2DEG:180/d},c={format:{},autodetect:[]},h=u.last,v=u.clip_rgb,m=u.type,_=function(){for(var p=[],y=arguments.length;y--;)p[y]=arguments[y];var A=this;if(m(p[0])==="object"&&p[0].constructor&&p[0].constructor===this.constructor)return p[0];var I=h(p),q=!1;if(!I){q=!0,c.sorted||(c.autodetect=c.autodetect.sort(function(X,Q){return Q.p-X.p}),c.sorted=!0);for(var B=0,R=c.autodetect;B<R.length;B+=1){var P=R[B];if(I=P.test.apply(P,p),I)break}}if(c.format[I]){var Z=c.format[I].apply(null,q?p:p.slice(0,-1));A._rgb=v(Z)}else throw new Error("unknown format: "+p);A._rgb.length===3&&A._rgb.push(1)};_.prototype.toString=function(){return m(this.hex)=="function"?this.hex():"["+this._rgb.join(",")+"]"};var g=_,S=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(S.Color,[null].concat(f)))};S.Color=g,S.version="2.1.2";var C=S,T=u.unpack,M=Math.max,k=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=T(f,"rgb"),A=y[0],I=y[1],q=y[2];A=A/255,I=I/255,q=q/255;var B=1-M(A,M(I,q)),R=B<1?1/(1-B):0,P=(1-A-B)*R,Z=(1-I-B)*R,X=(1-q-B)*R;return[P,Z,X,B]},E=k,b=u.unpack,N=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];f=b(f,"cmyk");var y=f[0],A=f[1],I=f[2],q=f[3],B=f.length>4?f[4]:1;return q===1?[0,0,0,B]:[y>=1?0:255*(1-y)*(1-q),A>=1?0:255*(1-A)*(1-q),I>=1?0:255*(1-I)*(1-q),B]},x=N,L=u.unpack,O=u.type;g.prototype.cmyk=function(){return E(this._rgb)},C.cmyk=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["cmyk"])))},c.format.cmyk=x,c.autodetect.push({p:2,test:function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];if(f=L(f,"cmyk"),O(f)==="array"&&f.length===4)return"cmyk"}});var U=u.unpack,te=u.last,he=function(f){return Math.round(f*100)/100},ee=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=U(f,"hsla"),A=te(f)||"lsa";return y[0]=he(y[0]||0),y[1]=he(y[1]*100)+"%",y[2]=he(y[2]*100)+"%",A==="hsla"||y.length>3&&y[3]<1?(y[3]=y.length>3?y[3]:1,A="hsla"):y.length=3,A+"("+y.join(",")+")"},se=ee,Y=u.unpack,z=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];f=Y(f,"rgba");var y=f[0],A=f[1],I=f[2];y/=255,A/=255,I/=255;var q=Math.min(y,A,I),B=Math.max(y,A,I),R=(B+q)/2,P,Z;return B===q?(P=0,Z=Number.NaN):P=R<.5?(B-q)/(B+q):(B-q)/(2-B-q),y==B?Z=(A-I)/(B-q):A==B?Z=2+(I-y)/(B-q):I==B&&(Z=4+(y-A)/(B-q)),Z*=60,Z<0&&(Z+=360),f.length>3&&f[3]!==void 0?[Z,P,R,f[3]]:[Z,P,R]},K=z,ye=u.unpack,ue=u.last,Me=Math.round,We=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=ye(f,"rgba"),A=ue(f)||"rgb";return A.substr(0,3)=="hsl"?se(K(y),A):(y[0]=Me(y[0]),y[1]=Me(y[1]),y[2]=Me(y[2]),(A==="rgba"||y.length>3&&y[3]<1)&&(y[3]=y.length>3?y[3]:1,A="rgba"),A+"("+y.slice(0,A==="rgb"?3:4).join(",")+")")},rt=We,Pe=u.unpack,lt=Math.round,et=function(){for(var f,p=[],y=arguments.length;y--;)p[y]=arguments[y];p=Pe(p,"hsl");var A=p[0],I=p[1],q=p[2],B,R,P;if(I===0)B=R=P=q*255;else{var Z=[0,0,0],X=[0,0,0],Q=q<.5?q*(1+I):q+I-q*I,pe=2*q-Q,ce=A/360;Z[0]=ce+1/3,Z[1]=ce,Z[2]=ce-1/3;for(var Ce=0;Ce<3;Ce++)Z[Ce]<0&&(Z[Ce]+=1),Z[Ce]>1&&(Z[Ce]-=1),6*Z[Ce]<1?X[Ce]=pe+(Q-pe)*6*Z[Ce]:2*Z[Ce]<1?X[Ce]=Q:3*Z[Ce]<2?X[Ce]=pe+(Q-pe)*(2/3-Z[Ce])*6:X[Ce]=pe;f=[lt(X[0]*255),lt(X[1]*255),lt(X[2]*255)],B=f[0],R=f[1],P=f[2]}return p.length>3?[B,R,P,p[3]]:[B,R,P,1]},Ae=et,je=/^rgb\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*\)$/,St=/^rgba\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*,\s*([01]|[01]?\.\d+)\)$/,Ht=/^rgb\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/,It=/^rgba\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/,xt=/^hsl\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/,Ot=/^hsla\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/,ln=Math.round,ie=function(f){f=f.toLowerCase().trim();var p;if(c.format.named)try{return c.format.named(f)}catch{}if(p=f.match(je)){for(var y=p.slice(1,4),A=0;A<3;A++)y[A]=+y[A];return y[3]=1,y}if(p=f.match(St)){for(var I=p.slice(1,5),q=0;q<4;q++)I[q]=+I[q];return I}if(p=f.match(Ht)){for(var B=p.slice(1,4),R=0;R<3;R++)B[R]=ln(B[R]*2.55);return B[3]=1,B}if(p=f.match(It)){for(var P=p.slice(1,5),Z=0;Z<3;Z++)P[Z]=ln(P[Z]*2.55);return P[3]=+P[3],P}if(p=f.match(xt)){var X=p.slice(1,4);X[1]*=.01,X[2]*=.01;var Q=Ae(X);return Q[3]=1,Q}if(p=f.match(Ot)){var pe=p.slice(1,4);pe[1]*=.01,pe[2]*=.01;var ce=Ae(pe);return ce[3]=+p[4],ce}};ie.test=function(f){return je.test(f)||St.test(f)||Ht.test(f)||It.test(f)||xt.test(f)||Ot.test(f)};var Mr=ie,ua=u.type;g.prototype.css=function(f){return rt(this._rgb,f)},C.css=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["css"])))},c.format.css=Mr,c.autodetect.push({p:5,test:function(f){for(var p=[],y=arguments.length-1;y-- >0;)p[y]=arguments[y+1];if(!p.length&&ua(f)==="string"&&Mr.test(f))return"css"}});var ca=u.unpack;c.format.gl=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=ca(f,"rgba");return y[0]*=255,y[1]*=255,y[2]*=255,y},C.gl=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["gl"])))},g.prototype.gl=function(){var f=this._rgb;return[f[0]/255,f[1]/255,f[2]/255,f[3]]};var Gf=u.unpack,Uf=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=Gf(f,"rgb"),A=y[0],I=y[1],q=y[2],B=Math.min(A,I,q),R=Math.max(A,I,q),P=R-B,Z=P*100/255,X=B/(255-P)*100,Q;return P===0?Q=Number.NaN:(A===R&&(Q=(I-q)/P),I===R&&(Q=2+(q-A)/P),q===R&&(Q=4+(A-I)/P),Q*=60,Q<0&&(Q+=360)),[Q,Z,X]},zf=Uf,Yf=u.unpack,Zf=Math.floor,Kf=function(){for(var f,p,y,A,I,q,B=[],R=arguments.length;R--;)B[R]=arguments[R];B=Yf(B,"hcg");var P=B[0],Z=B[1],X=B[2],Q,pe,ce;X=X*255;var Ce=Z*255;if(Z===0)Q=pe=ce=X;else{P===360&&(P=0),P>360&&(P-=360),P<0&&(P+=360),P/=60;var qe=Zf(P),Fe=P-qe,Ve=X*(1-Z),ze=Ve+Ce*(1-Fe),_t=Ve+Ce*Fe,Et=Ve+Ce;switch(qe){case 0:f=[Et,_t,Ve],Q=f[0],pe=f[1],ce=f[2];break;case 1:p=[ze,Et,Ve],Q=p[0],pe=p[1],ce=p[2];break;case 2:y=[Ve,Et,_t],Q=y[0],pe=y[1],ce=y[2];break;case 3:A=[Ve,ze,Et],Q=A[0],pe=A[1],ce=A[2];break;case 4:I=[_t,Ve,Et],Q=I[0],pe=I[1],ce=I[2];break;case 5:q=[Et,Ve,ze],Q=q[0],pe=q[1],ce=q[2];break}}return[Q,pe,ce,B.length>3?B[3]:1]},Qf=Kf,Xf=u.unpack,$f=u.type;g.prototype.hcg=function(){return zf(this._rgb)},C.hcg=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["hcg"])))},c.format.hcg=Qf,c.autodetect.push({p:1,test:function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];if(f=Xf(f,"hcg"),$f(f)==="array"&&f.length===3)return"hcg"}});var Jf=u.unpack,eh=u.last,da=Math.round,th=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=Jf(f,"rgba"),A=y[0],I=y[1],q=y[2],B=y[3],R=eh(f)||"auto";B===void 0&&(B=1),R==="auto"&&(R=B<1?"rgba":"rgb"),A=da(A),I=da(I),q=da(q);var P=A<<16|I<<8|q,Z="000000"+P.toString(16);Z=Z.substr(Z.length-6);var X="0"+da(B*255).toString(16);switch(X=X.substr(X.length-2),R.toLowerCase()){case"rgba":return"#"+Z+X;case"argb":return"#"+X+Z;default:return"#"+Z}},us=th,nh=/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,rh=/^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/,ah=function(f){if(f.match(nh)){(f.length===4||f.length===7)&&(f=f.substr(1)),f.length===3&&(f=f.split(""),f=f[0]+f[0]+f[1]+f[1]+f[2]+f[2]);var p=parseInt(f,16),y=p>>16,A=p>>8&255,I=p&255;return[y,A,I,1]}if(f.match(rh)){(f.length===5||f.length===9)&&(f=f.substr(1)),f.length===4&&(f=f.split(""),f=f[0]+f[0]+f[1]+f[1]+f[2]+f[2]+f[3]+f[3]);var q=parseInt(f,16),B=q>>24&255,R=q>>16&255,P=q>>8&255,Z=Math.round((q&255)/255*100)/100;return[B,R,P,Z]}throw new Error("unknown hex color: "+f)},cs=ah,ih=u.type;g.prototype.hex=function(f){return us(this._rgb,f)},C.hex=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["hex"])))},c.format.hex=cs,c.autodetect.push({p:4,test:function(f){for(var p=[],y=arguments.length-1;y-- >0;)p[y]=arguments[y+1];if(!p.length&&ih(f)==="string"&&[3,4,5,6,7,8,9].indexOf(f.length)>=0)return"hex"}});var oh=u.unpack,ds=u.TWOPI,sh=Math.min,lh=Math.sqrt,uh=Math.acos,ch=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=oh(f,"rgb"),A=y[0],I=y[1],q=y[2];A/=255,I/=255,q/=255;var B,R=sh(A,I,q),P=(A+I+q)/3,Z=P>0?1-R/P:0;return Z===0?B=NaN:(B=(A-I+(A-q))/2,B/=lh((A-I)*(A-I)+(A-q)*(I-q)),B=uh(B),q>I&&(B=ds-B),B/=ds),[B*360,Z,P]},dh=ch,fh=u.unpack,bi=u.limit,er=u.TWOPI,wi=u.PITHIRD,tr=Math.cos,hh=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];f=fh(f,"hsi");var y=f[0],A=f[1],I=f[2],q,B,R;return isNaN(y)&&(y=0),isNaN(A)&&(A=0),y>360&&(y-=360),y<0&&(y+=360),y/=360,y<1/3?(R=(1-A)/3,q=(1+A*tr(er*y)/tr(wi-er*y))/3,B=1-(R+q)):y<2/3?(y-=1/3,q=(1-A)/3,B=(1+A*tr(er*y)/tr(wi-er*y))/3,R=1-(q+B)):(y-=2/3,B=(1-A)/3,R=(1+A*tr(er*y)/tr(wi-er*y))/3,q=1-(B+R)),q=bi(I*q*3),B=bi(I*B*3),R=bi(I*R*3),[q*255,B*255,R*255,f.length>3?f[3]:1]},ph=hh,mh=u.unpack,gh=u.type;g.prototype.hsi=function(){return dh(this._rgb)},C.hsi=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["hsi"])))},c.format.hsi=ph,c.autodetect.push({p:2,test:function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];if(f=mh(f,"hsi"),gh(f)==="array"&&f.length===3)return"hsi"}});var yh=u.unpack,vh=u.type;g.prototype.hsl=function(){return K(this._rgb)},C.hsl=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["hsl"])))},c.format.hsl=Ae,c.autodetect.push({p:2,test:function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];if(f=yh(f,"hsl"),vh(f)==="array"&&f.length===3)return"hsl"}});var bh=u.unpack,wh=Math.min,Dh=Math.max,_h=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];f=bh(f,"rgb");var y=f[0],A=f[1],I=f[2],q=wh(y,A,I),B=Dh(y,A,I),R=B-q,P,Z,X;return X=B/255,B===0?(P=Number.NaN,Z=0):(Z=R/B,y===B&&(P=(A-I)/R),A===B&&(P=2+(I-y)/R),I===B&&(P=4+(y-A)/R),P*=60,P<0&&(P+=360)),[P,Z,X]},Eh=_h,Ch=u.unpack,Ah=Math.floor,kh=function(){for(var f,p,y,A,I,q,B=[],R=arguments.length;R--;)B[R]=arguments[R];B=Ch(B,"hsv");var P=B[0],Z=B[1],X=B[2],Q,pe,ce;if(X*=255,Z===0)Q=pe=ce=X;else{P===360&&(P=0),P>360&&(P-=360),P<0&&(P+=360),P/=60;var Ce=Ah(P),qe=P-Ce,Fe=X*(1-Z),Ve=X*(1-Z*qe),ze=X*(1-Z*(1-qe));switch(Ce){case 0:f=[X,ze,Fe],Q=f[0],pe=f[1],ce=f[2];break;case 1:p=[Ve,X,Fe],Q=p[0],pe=p[1],ce=p[2];break;case 2:y=[Fe,X,ze],Q=y[0],pe=y[1],ce=y[2];break;case 3:A=[Fe,Ve,X],Q=A[0],pe=A[1],ce=A[2];break;case 4:I=[ze,Fe,X],Q=I[0],pe=I[1],ce=I[2];break;case 5:q=[X,Fe,Ve],Q=q[0],pe=q[1],ce=q[2];break}}return[Q,pe,ce,B.length>3?B[3]:1]},xh=kh,Fh=u.unpack,Th=u.type;g.prototype.hsv=function(){return Eh(this._rgb)},C.hsv=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["hsv"])))},c.format.hsv=xh,c.autodetect.push({p:2,test:function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];if(f=Fh(f,"hsv"),Th(f)==="array"&&f.length===3)return"hsv"}});var qt={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},Sh=u.unpack,fs=Math.pow,Bh=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=Sh(f,"rgb"),A=y[0],I=y[1],q=y[2],B=Nh(A,I,q),R=B[0],P=B[1],Z=B[2],X=116*P-16;return[X<0?0:X,500*(R-P),200*(P-Z)]},Di=function(f){return(f/=255)<=.04045?f/12.92:fs((f+.055)/1.055,2.4)},_i=function(f){return f>qt.t3?fs(f,1/3):f/qt.t2+qt.t0},Nh=function(f,p,y){f=Di(f),p=Di(p),y=Di(y);var A=_i((.4124564*f+.3575761*p+.1804375*y)/qt.Xn),I=_i((.2126729*f+.7151522*p+.072175*y)/qt.Yn),q=_i((.0193339*f+.119192*p+.9503041*y)/qt.Zn);return[A,I,q]},hs=Bh,Mh=u.unpack,Ih=Math.pow,Oh=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];f=Mh(f,"lab");var y=f[0],A=f[1],I=f[2],q,B,R,P,Z,X;return B=(y+16)/116,q=isNaN(A)?B:B+A/500,R=isNaN(I)?B:B-I/200,B=qt.Yn*Ci(B),q=qt.Xn*Ci(q),R=qt.Zn*Ci(R),P=Ei(3.2404542*q-1.5371385*B-.4985314*R),Z=Ei(-.969266*q+1.8760108*B+.041556*R),X=Ei(.0556434*q-.2040259*B+1.0572252*R),[P,Z,X,f.length>3?f[3]:1]},Ei=function(f){return 255*(f<=.00304?12.92*f:1.055*Ih(f,1/2.4)-.055)},Ci=function(f){return f>qt.t1?f*f*f:qt.t2*(f-qt.t0)},ps=Oh,qh=u.unpack,Rh=u.type;g.prototype.lab=function(){return hs(this._rgb)},C.lab=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["lab"])))},c.format.lab=ps,c.autodetect.push({p:2,test:function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];if(f=qh(f,"lab"),Rh(f)==="array"&&f.length===3)return"lab"}});var Lh=u.unpack,Ph=u.RAD2DEG,jh=Math.sqrt,Vh=Math.atan2,Hh=Math.round,Wh=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=Lh(f,"lab"),A=y[0],I=y[1],q=y[2],B=jh(I*I+q*q),R=(Vh(q,I)*Ph+360)%360;return Hh(B*1e4)===0&&(R=Number.NaN),[A,B,R]},Gh=Wh,Uh=u.unpack,zh=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=Uh(f,"rgb"),A=y[0],I=y[1],q=y[2],B=hs(A,I,q),R=B[0],P=B[1],Z=B[2];return Gh(R,P,Z)},ms=zh,Yh=u.unpack,Zh=u.DEG2RAD,Kh=Math.sin,Qh=Math.cos,Xh=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=Yh(f,"lch"),A=y[0],I=y[1],q=y[2];return isNaN(q)&&(q=0),q=q*Zh,[A,Qh(q)*I,Kh(q)*I]},$h=Xh,Jh=u.unpack,ep=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];f=Jh(f,"lch");var y=f[0],A=f[1],I=f[2],q=$h(y,A,I),B=q[0],R=q[1],P=q[2],Z=ps(B,R,P),X=Z[0],Q=Z[1],pe=Z[2];return[X,Q,pe,f.length>3?f[3]:1]},gs=ep,tp=u.unpack,np=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=tp(f,"hcl").reverse();return gs.apply(void 0,y)},rp=np,ap=u.unpack,ip=u.type;g.prototype.lch=function(){return ms(this._rgb)},g.prototype.hcl=function(){return ms(this._rgb).reverse()},C.lch=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["lch"])))},C.hcl=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["hcl"])))},c.format.lch=gs,c.format.hcl=rp,["lch","hcl"].forEach(function(f){return c.autodetect.push({p:2,test:function(){for(var p=[],y=arguments.length;y--;)p[y]=arguments[y];if(p=ap(p,f),ip(p)==="array"&&p.length===3)return f}})});var op={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflower:"#6495ed",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",laserlemon:"#ffff54",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrod:"#fafad2",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",maroon2:"#7f0000",maroon3:"#b03060",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",purple2:"#7f007f",purple3:"#a020f0",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},nr=op,sp=u.type;g.prototype.name=function(){for(var f=us(this._rgb,"rgb"),p=0,y=Object.keys(nr);p<y.length;p+=1){var A=y[p];if(nr[A]===f)return A.toLowerCase()}return f},c.format.named=function(f){if(f=f.toLowerCase(),nr[f])return cs(nr[f]);throw new Error("unknown color name: "+f)},c.autodetect.push({p:5,test:function(f){for(var p=[],y=arguments.length-1;y-- >0;)p[y]=arguments[y+1];if(!p.length&&sp(f)==="string"&&nr[f.toLowerCase()])return"named"}});var lp=u.unpack,up=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=lp(f,"rgb"),A=y[0],I=y[1],q=y[2];return(A<<16)+(I<<8)+q},cp=up,dp=u.type,fp=function(f){if(dp(f)=="number"&&f>=0&&f<=16777215){var p=f>>16,y=f>>8&255,A=f&255;return[p,y,A,1]}throw new Error("unknown num color: "+f)},hp=fp,pp=u.type;g.prototype.num=function(){return cp(this._rgb)},C.num=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["num"])))},c.format.num=hp,c.autodetect.push({p:5,test:function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];if(f.length===1&&pp(f[0])==="number"&&f[0]>=0&&f[0]<=16777215)return"num"}});var ys=u.unpack,vs=u.type,bs=Math.round;g.prototype.rgb=function(f){return f===void 0&&(f=!0),f===!1?this._rgb.slice(0,3):this._rgb.slice(0,3).map(bs)},g.prototype.rgba=function(f){return f===void 0&&(f=!0),this._rgb.slice(0,4).map(function(p,y){return y<3?f===!1?p:bs(p):p})},C.rgb=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["rgb"])))},c.format.rgb=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];var y=ys(f,"rgba");return y[3]===void 0&&(y[3]=1),y},c.autodetect.push({p:3,test:function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];if(f=ys(f,"rgba"),vs(f)==="array"&&(f.length===3||f.length===4&&vs(f[3])=="number"&&f[3]>=0&&f[3]<=1))return"rgb"}});var fa=Math.log,mp=function(f){var p=f/100,y,A,I;return p<66?(y=255,A=-155.25485562709179-.44596950469579133*(A=p-2)+104.49216199393888*fa(A),I=p<20?0:-254.76935184120902+.8274096064007395*(I=p-10)+115.67994401066147*fa(I)):(y=351.97690566805693+.114206453784165*(y=p-55)-40.25366309332127*fa(y),A=325.4494125711974+.07943456536662342*(A=p-50)-28.0852963507957*fa(A),I=255),[y,A,I,1]},ws=mp,gp=u.unpack,yp=Math.round,vp=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];for(var y=gp(f,"rgb"),A=y[0],I=y[2],q=1e3,B=4e4,R=.4,P;B-q>R;){P=(B+q)*.5;var Z=ws(P);Z[2]/Z[0]>=I/A?B=P:q=P}return yp(P)},bp=vp;g.prototype.temp=g.prototype.kelvin=g.prototype.temperature=function(){return bp(this._rgb)},C.temp=C.kelvin=C.temperature=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];return new(Function.prototype.bind.apply(g,[null].concat(f,["temp"])))},c.format.temp=c.format.kelvin=c.format.temperature=ws;var wp=u.type;g.prototype.alpha=function(f,p){return p===void 0&&(p=!1),f!==void 0&&wp(f)==="number"?p?(this._rgb[3]=f,this):new g([this._rgb[0],this._rgb[1],this._rgb[2],f],"rgb"):this._rgb[3]},g.prototype.clipped=function(){return this._rgb._clipped||!1},g.prototype.darken=function(f){f===void 0&&(f=1);var p=this,y=p.lab();return y[0]-=qt.Kn*f,new g(y,"lab").alpha(p.alpha(),!0)},g.prototype.brighten=function(f){return f===void 0&&(f=1),this.darken(-f)},g.prototype.darker=g.prototype.darken,g.prototype.brighter=g.prototype.brighten,g.prototype.get=function(f){var p=f.split("."),y=p[0],A=p[1],I=this[y]();if(A){var q=y.indexOf(A);if(q>-1)return I[q];throw new Error("unknown channel "+A+" in mode "+y)}else return I};var Dp=u.type,_p=Math.pow,Ep=1e-7,Cp=20;g.prototype.luminance=function(f){if(f!==void 0&&Dp(f)==="number"){if(f===0)return new g([0,0,0,this._rgb[3]],"rgb");if(f===1)return new g([255,255,255,this._rgb[3]],"rgb");var p=this.luminance(),y="rgb",A=Cp,I=function(B,R){var P=B.interpolate(R,.5,y),Z=P.luminance();return Math.abs(f-Z)<Ep||!A--?P:Z>f?I(B,P):I(P,R)},q=(p>f?I(new g([0,0,0]),this):I(this,new g([255,255,255]))).rgb();return new g(q.concat([this._rgb[3]]))}return Ap.apply(void 0,this._rgb.slice(0,3))};var Ap=function(f,p,y){return f=Ai(f),p=Ai(p),y=Ai(y),.2126*f+.7152*p+.0722*y},Ai=function(f){return f/=255,f<=.03928?f/12.92:_p((f+.055)/1.055,2.4)},Rt={},Ds=u.type,_s=function(f,p,y){y===void 0&&(y=.5);for(var A=[],I=arguments.length-3;I-- >0;)A[I]=arguments[I+3];var q=A[0]||"lrgb";if(!Rt[q]&&!A.length&&(q=Object.keys(Rt)[0]),!Rt[q])throw new Error("interpolation mode "+q+" is not defined");return Ds(f)!=="object"&&(f=new g(f)),Ds(p)!=="object"&&(p=new g(p)),Rt[q](f,p,y).alpha(f.alpha()+y*(p.alpha()-f.alpha()))};g.prototype.mix=g.prototype.interpolate=function(f,p){p===void 0&&(p=.5);for(var y=[],A=arguments.length-2;A-- >0;)y[A]=arguments[A+2];return _s.apply(void 0,[this,f,p].concat(y))},g.prototype.premultiply=function(f){f===void 0&&(f=!1);var p=this._rgb,y=p[3];return f?(this._rgb=[p[0]*y,p[1]*y,p[2]*y,y],this):new g([p[0]*y,p[1]*y,p[2]*y,y],"rgb")},g.prototype.saturate=function(f){f===void 0&&(f=1);var p=this,y=p.lch();return y[1]+=qt.Kn*f,y[1]<0&&(y[1]=0),new g(y,"lch").alpha(p.alpha(),!0)},g.prototype.desaturate=function(f){return f===void 0&&(f=1),this.saturate(-f)};var Es=u.type;g.prototype.set=function(f,p,y){y===void 0&&(y=!1);var A=f.split("."),I=A[0],q=A[1],B=this[I]();if(q){var R=I.indexOf(q);if(R>-1){if(Es(p)=="string")switch(p.charAt(0)){case"+":B[R]+=+p;break;case"-":B[R]+=+p;break;case"*":B[R]*=+p.substr(1);break;case"/":B[R]/=+p.substr(1);break;default:B[R]=+p}else if(Es(p)==="number")B[R]=p;else throw new Error("unsupported value for Color.set");var P=new g(B,I);return y?(this._rgb=P._rgb,this):P}throw new Error("unknown channel "+q+" in mode "+I)}else return B};var kp=function(f,p,y){var A=f._rgb,I=p._rgb;return new g(A[0]+y*(I[0]-A[0]),A[1]+y*(I[1]-A[1]),A[2]+y*(I[2]-A[2]),"rgb")};Rt.rgb=kp;var ki=Math.sqrt,rr=Math.pow,xp=function(f,p,y){var A=f._rgb,I=A[0],q=A[1],B=A[2],R=p._rgb,P=R[0],Z=R[1],X=R[2];return new g(ki(rr(I,2)*(1-y)+rr(P,2)*y),ki(rr(q,2)*(1-y)+rr(Z,2)*y),ki(rr(B,2)*(1-y)+rr(X,2)*y),"rgb")};Rt.lrgb=xp;var Fp=function(f,p,y){var A=f.lab(),I=p.lab();return new g(A[0]+y*(I[0]-A[0]),A[1]+y*(I[1]-A[1]),A[2]+y*(I[2]-A[2]),"lab")};Rt.lab=Fp;var Ir=function(f,p,y,A){var I,q,B,R;A==="hsl"?(B=f.hsl(),R=p.hsl()):A==="hsv"?(B=f.hsv(),R=p.hsv()):A==="hcg"?(B=f.hcg(),R=p.hcg()):A==="hsi"?(B=f.hsi(),R=p.hsi()):(A==="lch"||A==="hcl")&&(A="hcl",B=f.hcl(),R=p.hcl());var P,Z,X,Q,pe,ce;A.substr(0,1)==="h"&&(I=B,P=I[0],X=I[1],pe=I[2],q=R,Z=q[0],Q=q[1],ce=q[2]);var Ce,qe,Fe,Ve;return!isNaN(P)&&!isNaN(Z)?(Z>P&&Z-P>180?Ve=Z-(P+360):Z<P&&P-Z>180?Ve=Z+360-P:Ve=Z-P,qe=P+y*Ve):isNaN(P)?isNaN(Z)?qe=Number.NaN:(qe=Z,(pe==1||pe==0)&&A!="hsv"&&(Ce=Q)):(qe=P,(ce==1||ce==0)&&A!="hsv"&&(Ce=X)),Ce===void 0&&(Ce=X+y*(Q-X)),Fe=pe+y*(ce-pe),new g([qe,Ce,Fe],A)},Cs=function(f,p,y){return Ir(f,p,y,"lch")};Rt.lch=Cs,Rt.hcl=Cs;var Tp=function(f,p,y){var A=f.num(),I=p.num();return new g(A+y*(I-A),"num")};Rt.num=Tp;var Sp=function(f,p,y){return Ir(f,p,y,"hcg")};Rt.hcg=Sp;var Bp=function(f,p,y){return Ir(f,p,y,"hsi")};Rt.hsi=Bp;var Np=function(f,p,y){return Ir(f,p,y,"hsl")};Rt.hsl=Np;var Mp=function(f,p,y){return Ir(f,p,y,"hsv")};Rt.hsv=Mp;var Ip=u.clip_rgb,xi=Math.pow,Fi=Math.sqrt,Ti=Math.PI,As=Math.cos,ks=Math.sin,Op=Math.atan2,qp=function(f,p,y){p===void 0&&(p="lrgb"),y===void 0&&(y=null);var A=f.length;y||(y=Array.from(new Array(A)).map(function(){return 1}));var I=A/y.reduce(function(qe,Fe){return qe+Fe});if(y.forEach(function(qe,Fe){y[Fe]*=I}),f=f.map(function(qe){return new g(qe)}),p==="lrgb")return Rp(f,y);for(var q=f.shift(),B=q.get(p),R=[],P=0,Z=0,X=0;X<B.length;X++)if(B[X]=(B[X]||0)*y[0],R.push(isNaN(B[X])?0:y[0]),p.charAt(X)==="h"&&!isNaN(B[X])){var Q=B[X]/180*Ti;P+=As(Q)*y[0],Z+=ks(Q)*y[0]}var pe=q.alpha()*y[0];f.forEach(function(qe,Fe){var Ve=qe.get(p);pe+=qe.alpha()*y[Fe+1];for(var ze=0;ze<B.length;ze++)if(!isNaN(Ve[ze]))if(R[ze]+=y[Fe+1],p.charAt(ze)==="h"){var _t=Ve[ze]/180*Ti;P+=As(_t)*y[Fe+1],Z+=ks(_t)*y[Fe+1]}else B[ze]+=Ve[ze]*y[Fe+1]});for(var ce=0;ce<B.length;ce++)if(p.charAt(ce)==="h"){for(var Ce=Op(Z/R[ce],P/R[ce])/Ti*180;Ce<0;)Ce+=360;for(;Ce>=360;)Ce-=360;B[ce]=Ce}else B[ce]=B[ce]/R[ce];return pe/=A,new g(B,p).alpha(pe>.99999?1:pe,!0)},Rp=function(f,p){for(var y=f.length,A=[0,0,0,0],I=0;I<f.length;I++){var q=f[I],B=p[I]/y,R=q._rgb;A[0]+=xi(R[0],2)*B,A[1]+=xi(R[1],2)*B,A[2]+=xi(R[2],2)*B,A[3]+=R[3]*B}return A[0]=Fi(A[0]),A[1]=Fi(A[1]),A[2]=Fi(A[2]),A[3]>.9999999&&(A[3]=1),new g(Ip(A))},ar=u.type,Lp=Math.pow,ha=function(f){var p="rgb",y=C("#ccc"),A=0,I=[0,1],q=[],B=[0,0],R=!1,P=[],Z=!1,X=0,Q=1,pe=!1,ce={},Ce=!0,qe=1,Fe=function($){if($=$||["#fff","#000"],$&&ar($)==="string"&&C.brewer&&C.brewer[$.toLowerCase()]&&($=C.brewer[$.toLowerCase()]),ar($)==="array"){$.length===1&&($=[$[0],$[0]]),$=$.slice(0);for(var _e=0;_e<$.length;_e++)$[_e]=C($[_e]);q.length=0;for(var Re=0;Re<$.length;Re++)q.push(Re/($.length-1))}return Wt(),P=$},Ve=function($){if(R!=null){for(var _e=R.length-1,Re=0;Re<_e&&$>=R[Re];)Re++;return Re-1}return 0},ze=function($){return $},_t=function($){return $},Et=function($,_e){var Re,Ie;if(_e==null&&(_e=!1),isNaN($)||$===null)return y;if(_e)Ie=$;else if(R&&R.length>2){var Lt=Ve($);Ie=Lt/(R.length-2)}else Q!==X?Ie=($-X)/(Q-X):Ie=1;Ie=_t(Ie),_e||(Ie=ze(Ie)),qe!==1&&(Ie=Lp(Ie,qe)),Ie=B[0]+Ie*(1-B[0]-B[1]),Ie=Math.min(1,Math.max(0,Ie));var $e=Math.floor(Ie*1e4);if(Ce&&ce[$e])Re=ce[$e];else{if(ar(P)==="array")for(var Ge=0;Ge<q.length;Ge++){var Ue=q[Ge];if(Ie<=Ue){Re=P[Ge];break}if(Ie>=Ue&&Ge===q.length-1){Re=P[Ge];break}if(Ie>Ue&&Ie<q[Ge+1]){Ie=(Ie-Ue)/(q[Ge+1]-Ue),Re=C.interpolate(P[Ge],P[Ge+1],Ie,p);break}}else ar(P)==="function"&&(Re=P(Ie));Ce&&(ce[$e]=Re)}return Re},Wt=function(){return ce={}};Fe(f);var Le=function($){var _e=C(Et($));return Z&&_e[Z]?_e[Z]():_e};return Le.classes=function($){if($!=null){if(ar($)==="array")R=$,I=[$[0],$[$.length-1]];else{var _e=C.analyze(I);$===0?R=[_e.min,_e.max]:R=C.limits(_e,"e",$)}return Le}return R},Le.domain=function($){if(!arguments.length)return I;X=$[0],Q=$[$.length-1],q=[];var _e=P.length;if($.length===_e&&X!==Q)for(var Re=0,Ie=Array.from($);Re<Ie.length;Re+=1){var Lt=Ie[Re];q.push((Lt-X)/(Q-X))}else{for(var $e=0;$e<_e;$e++)q.push($e/(_e-1));if($.length>2){var Ge=$.map(function(ut,Ye){return Ye/($.length-1)}),Ue=$.map(function(ut){return(ut-X)/(Q-X)});Ue.every(function(ut,Ye){return Ge[Ye]===ut})||(_t=function(ut){if(ut<=0||ut>=1)return ut;for(var Ye=0;ut>=Ue[Ye+1];)Ye++;var Dn=(ut-Ue[Ye])/(Ue[Ye+1]-Ue[Ye]),ir=Ge[Ye]+Dn*(Ge[Ye+1]-Ge[Ye]);return ir})}}return I=[X,Q],Le},Le.mode=function($){return arguments.length?(p=$,Wt(),Le):p},Le.range=function($,_e){return Fe($,_e),Le},Le.out=function($){return Z=$,Le},Le.spread=function($){return arguments.length?(A=$,Le):A},Le.correctLightness=function($){return $==null&&($=!0),pe=$,Wt(),pe?ze=function(_e){for(var Re=Et(0,!0).lab()[0],Ie=Et(1,!0).lab()[0],Lt=Re>Ie,$e=Et(_e,!0).lab()[0],Ge=Re+(Ie-Re)*_e,Ue=$e-Ge,ut=0,Ye=1,Dn=20;Math.abs(Ue)>.01&&Dn-- >0;)(function(){return Lt&&(Ue*=-1),Ue<0?(ut=_e,_e+=(Ye-_e)*.5):(Ye=_e,_e+=(ut-_e)*.5),$e=Et(_e,!0).lab()[0],Ue=$e-Ge})();return _e}:ze=function(_e){return _e},Le},Le.padding=function($){return $!=null?(ar($)==="number"&&($=[$,$]),B=$,Le):B},Le.colors=function($,_e){arguments.length<2&&(_e="hex");var Re=[];if(arguments.length===0)Re=P.slice(0);else if($===1)Re=[Le(.5)];else if($>1){var Ie=I[0],Lt=I[1]-Ie;Re=Pp(0,$,!1).map(function(Ye){return Le(Ie+Ye/($-1)*Lt)})}else{f=[];var $e=[];if(R&&R.length>2)for(var Ge=1,Ue=R.length,ut=1<=Ue;ut?Ge<Ue:Ge>Ue;ut?Ge++:Ge--)$e.push((R[Ge-1]+R[Ge])*.5);else $e=I;Re=$e.map(function(Ye){return Le(Ye)})}return C[_e]&&(Re=Re.map(function(Ye){return Ye[_e]()})),Re},Le.cache=function($){return $!=null?(Ce=$,Le):Ce},Le.gamma=function($){return $!=null?(qe=$,Le):qe},Le.nodata=function($){return $!=null?(y=C($),Le):y},Le};function Pp(f,p,y){for(var A=[],I=f<p,q=y?I?p+1:p-1:p,B=f;I?B<q:B>q;I?B++:B--)A.push(B);return A}var Si=function(f){var p,y,A,I,q,B,R;if(f=f.map(function(Q){return new g(Q)}),f.length===2)p=f.map(function(Q){return Q.lab()}),q=p[0],B=p[1],I=function(Q){var pe=[0,1,2].map(function(ce){return q[ce]+Q*(B[ce]-q[ce])});return new g(pe,"lab")};else if(f.length===3)y=f.map(function(Q){return Q.lab()}),q=y[0],B=y[1],R=y[2],I=function(Q){var pe=[0,1,2].map(function(ce){return(1-Q)*(1-Q)*q[ce]+2*(1-Q)*Q*B[ce]+Q*Q*R[ce]});return new g(pe,"lab")};else if(f.length===4){var P;A=f.map(function(Q){return Q.lab()}),q=A[0],B=A[1],R=A[2],P=A[3],I=function(Q){var pe=[0,1,2].map(function(ce){return(1-Q)*(1-Q)*(1-Q)*q[ce]+3*(1-Q)*(1-Q)*Q*B[ce]+3*(1-Q)*Q*Q*R[ce]+Q*Q*Q*P[ce]});return new g(pe,"lab")}}else if(f.length===5){var Z=Si(f.slice(0,3)),X=Si(f.slice(2,5));I=function(Q){return Q<.5?Z(Q*2):X((Q-.5)*2)}}return I},jp=function(f){var p=Si(f);return p.scale=function(){return ha(p)},p},Jt=function(f,p,y){if(!Jt[y])throw new Error("unknown blend mode "+y);return Jt[y](f,p)},bn=function(f){return function(p,y){var A=C(y).rgb(),I=C(p).rgb();return C.rgb(f(A,I))}},wn=function(f){return function(p,y){var A=[];return A[0]=f(p[0],y[0]),A[1]=f(p[1],y[1]),A[2]=f(p[2],y[2]),A}},Vp=function(f){return f},Hp=function(f,p){return f*p/255},Wp=function(f,p){return f>p?p:f},Gp=function(f,p){return f>p?f:p},Up=function(f,p){return 255*(1-(1-f/255)*(1-p/255))},zp=function(f,p){return p<128?2*f*p/255:255*(1-2*(1-f/255)*(1-p/255))},Yp=function(f,p){return 255*(1-(1-p/255)/(f/255))},Zp=function(f,p){return f===255?255:(f=255*(p/255)/(1-f/255),f>255?255:f)};Jt.normal=bn(wn(Vp)),Jt.multiply=bn(wn(Hp)),Jt.screen=bn(wn(Up)),Jt.overlay=bn(wn(zp)),Jt.darken=bn(wn(Wp)),Jt.lighten=bn(wn(Gp)),Jt.dodge=bn(wn(Zp)),Jt.burn=bn(wn(Yp));for(var Kp=Jt,Bi=u.type,Qp=u.clip_rgb,Xp=u.TWOPI,$p=Math.pow,Jp=Math.sin,em=Math.cos,tm=function(f,p,y,A,I){f===void 0&&(f=300),p===void 0&&(p=-1.5),y===void 0&&(y=1),A===void 0&&(A=1),I===void 0&&(I=[0,1]);var q=0,B;Bi(I)==="array"?B=I[1]-I[0]:(B=0,I=[I,I]);var R=function(P){var Z=Xp*((f+120)/360+p*P),X=$p(I[0]+B*P,A),Q=q!==0?y[0]+P*q:y,pe=Q*X*(1-X)/2,ce=em(Z),Ce=Jp(Z),qe=X+pe*(-.14861*ce+1.78277*Ce),Fe=X+pe*(-.29227*ce-.90649*Ce),Ve=X+pe*(1.97294*ce);return C(Qp([qe*255,Fe*255,Ve*255,1]))};return R.start=function(P){return P==null?f:(f=P,R)},R.rotations=function(P){return P==null?p:(p=P,R)},R.gamma=function(P){return P==null?A:(A=P,R)},R.hue=function(P){return P==null?y:(y=P,Bi(y)==="array"?(q=y[1]-y[0],q===0&&(y=y[1])):q=0,R)},R.lightness=function(P){return P==null?I:(Bi(P)==="array"?(I=P,B=P[1]-P[0]):(I=[P,P],B=0),R)},R.scale=function(){return C.scale(R)},R.hue(y),R},nm="0123456789abcdef",rm=Math.floor,am=Math.random,im=function(){for(var f="#",p=0;p<6;p++)f+=nm.charAt(rm(am()*16));return new g(f,"hex")},xs=Math.log,om=Math.pow,sm=Math.floor,lm=Math.abs,Fs=function(f,p){p===void 0&&(p=null);var y={min:Number.MAX_VALUE,max:Number.MAX_VALUE*-1,sum:0,values:[],count:0};return o(f)==="object"&&(f=Object.values(f)),f.forEach(function(A){p&&o(A)==="object"&&(A=A[p]),A!=null&&!isNaN(A)&&(y.values.push(A),y.sum+=A,A<y.min&&(y.min=A),A>y.max&&(y.max=A),y.count+=1)}),y.domain=[y.min,y.max],y.limits=function(A,I){return Ts(y,A,I)},y},Ts=function(f,p,y){p===void 0&&(p="equal"),y===void 0&&(y=7),o(f)=="array"&&(f=Fs(f));var A=f.min,I=f.max,q=f.values.sort(function(Ri,Li){return Ri-Li});if(y===1)return[A,I];var B=[];if(p.substr(0,1)==="c"&&(B.push(A),B.push(I)),p.substr(0,1)==="e"){B.push(A);for(var R=1;R<y;R++)B.push(A+R/y*(I-A));B.push(I)}else if(p.substr(0,1)==="l"){if(A<=0)throw new Error("Logarithmic scales are only possible for values > 0");var P=Math.LOG10E*xs(A),Z=Math.LOG10E*xs(I);B.push(A);for(var X=1;X<y;X++)B.push(om(10,P+X/y*(Z-P)));B.push(I)}else if(p.substr(0,1)==="q"){B.push(A);for(var Q=1;Q<y;Q++){var pe=(q.length-1)*Q/y,ce=sm(pe);if(ce===pe)B.push(q[ce]);else{var Ce=pe-ce;B.push(q[ce]*(1-Ce)+q[ce+1]*Ce)}}B.push(I)}else if(p.substr(0,1)==="k"){var qe,Fe=q.length,Ve=new Array(Fe),ze=new Array(y),_t=!0,Et=0,Wt=null;Wt=[],Wt.push(A);for(var Le=1;Le<y;Le++)Wt.push(A+Le/y*(I-A));for(Wt.push(I);_t;){for(var $=0;$<y;$++)ze[$]=0;for(var _e=0;_e<Fe;_e++)for(var Re=q[_e],Ie=Number.MAX_VALUE,Lt=void 0,$e=0;$e<y;$e++){var Ge=lm(Wt[$e]-Re);Ge<Ie&&(Ie=Ge,Lt=$e),ze[Lt]++,Ve[_e]=Lt}for(var Ue=new Array(y),ut=0;ut<y;ut++)Ue[ut]=null;for(var Ye=0;Ye<Fe;Ye++)qe=Ve[Ye],Ue[qe]===null?Ue[qe]=q[Ye]:Ue[qe]+=q[Ye];for(var Dn=0;Dn<y;Dn++)Ue[Dn]*=1/ze[Dn];_t=!1;for(var ir=0;ir<y;ir++)if(Ue[ir]!==Wt[ir]){_t=!0;break}Wt=Ue,Et++,Et>200&&(_t=!1)}for(var Or={},Ii=0;Ii<y;Ii++)Or[Ii]=[];for(var ga=0;ga<Fe;ga++)qe=Ve[ga],Or[qe].push(q[ga]);for(var Bn=[],qr=0;qr<y;qr++)Bn.push(Or[qr][0]),Bn.push(Or[qr][Or[qr].length-1]);Bn=Bn.sort(function(Ri,Li){return Ri-Li}),B.push(Bn[0]);for(var Oi=1;Oi<Bn.length;Oi+=2){var qi=Bn[Oi];!isNaN(qi)&&B.indexOf(qi)===-1&&B.push(qi)}}return B},Ss={analyze:Fs,limits:Ts},um=function(f,p){f=new g(f),p=new g(p);var y=f.luminance(),A=p.luminance();return y>A?(y+.05)/(A+.05):(A+.05)/(y+.05)},pa=Math.sqrt,cm=Math.atan2,Bs=Math.abs,Ns=Math.cos,Ni=Math.PI,dm=function(f,p,y,A){y===void 0&&(y=1),A===void 0&&(A=1),f=new g(f),p=new g(p);for(var I=Array.from(f.lab()),q=I[0],B=I[1],R=I[2],P=Array.from(p.lab()),Z=P[0],X=P[1],Q=P[2],pe=pa(B*B+R*R),ce=pa(X*X+Q*Q),Ce=q<16?.511:.040975*q/(1+.01765*q),qe=.0638*pe/(1+.0131*pe)+.638,Fe=pe<1e-6?0:cm(R,B)*180/Ni;Fe<0;)Fe+=360;for(;Fe>=360;)Fe-=360;var Ve=Fe>=164&&Fe<=345?.56+Bs(.2*Ns(Ni*(Fe+168)/180)):.36+Bs(.4*Ns(Ni*(Fe+35)/180)),ze=pe*pe*pe*pe,_t=pa(ze/(ze+1900)),Et=qe*(_t*Ve+1-_t),Wt=q-Z,Le=pe-ce,$=B-X,_e=R-Q,Re=$*$+_e*_e-Le*Le,Ie=Wt/(y*Ce),Lt=Le/(A*qe),$e=Et;return pa(Ie*Ie+Lt*Lt+Re/($e*$e))},fm=function(f,p,y){y===void 0&&(y="lab"),f=new g(f),p=new g(p);var A=f.get(y),I=p.get(y),q=0;for(var B in A){var R=(A[B]||0)-(I[B]||0);q+=R*R}return Math.sqrt(q)},hm=function(){for(var f=[],p=arguments.length;p--;)f[p]=arguments[p];try{return new(Function.prototype.bind.apply(g,[null].concat(f))),!0}catch{return!1}},pm={cool:function(){return ha([C.hsl(180,1,.9),C.hsl(250,.7,.4)])},hot:function(){return ha(["#000","#f00","#ff0","#fff"],[0,.25,.75,1]).mode("rgb")}},ma={OrRd:["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#b30000","#7f0000"],PuBu:["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#045a8d","#023858"],BuPu:["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#810f7c","#4d004b"],Oranges:["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#a63603","#7f2704"],BuGn:["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"],YlOrBr:["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#993404","#662506"],YlGn:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],Reds:["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#a50f15","#67000d"],RdPu:["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177","#49006a"],Greens:["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],YlGnBu:["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"],Purples:["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#54278f","#3f007d"],GnBu:["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#0868ac","#084081"],Greys:["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525","#000000"],YlOrRd:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"],PuRd:["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#980043","#67001f"],Blues:["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"],PuBuGn:["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016c59","#014636"],Viridis:["#440154","#482777","#3f4a8a","#31678e","#26838f","#1f9d8a","#6cce5a","#b6de2b","#fee825"],Spectral:["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"],RdYlGn:["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"],RdBu:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"],PiYG:["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"],PRGn:["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"],RdYlBu:["#a50026","#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"],BrBG:["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"],RdGy:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"],PuOr:["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"],Set2:["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],Accent:["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17","#666666"],Set1:["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"],Set3:["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"],Dark2:["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],Paired:["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"],Pastel2:["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc","#cccccc"],Pastel1:["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec","#f2f2f2"]},Mi=0,Ms=Object.keys(ma);Mi<Ms.length;Mi+=1){var Is=Ms[Mi];ma[Is.toLowerCase()]=ma[Is]}var mm=ma;C.average=qp,C.bezier=jp,C.blend=Kp,C.cubehelix=tm,C.mix=C.interpolate=_s,C.random=im,C.scale=ha,C.analyze=Ss.analyze,C.contrast=um,C.deltaE=dm,C.distance=fm,C.limits=Ss.limits,C.valid=hm,C.scales=pm,C.colors=nr,C.brewer=mm;var gm=C;return gm})});var Sl=Ze(ka=>{"use strict";Object.defineProperty(ka,"__esModule",{value:!0});ka.default=void 0;var Ki=Aa(qs()),Qi=Aa(Qs()),Bg=Aa(Al()),Ca=Aa(kl());function Aa(t){return t&&t.__esModule?t:{default:t}}function Ng(t){if(typeof Symbol=="undefined"||t[Symbol.iterator]==null){if(Array.isArray(t)||(t=Mg(t))){var e=0,n=function(){};return{s:n,n:function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}},e:function(s){throw s},f:n}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var r,a=!0,i=!1,o;return{s:function(){r=t[Symbol.iterator]()},n:function(){var s=r.next();return a=s.done,s},e:function(s){i=!0,o=s},f:function(){try{!a&&r.return!=null&&r.return()}finally{if(i)throw o}}}}function Mg(t,e){if(!!t){if(typeof t=="string")return xl(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return xl(t,e)}}function xl(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function Fl(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable})),n.push.apply(n,r)}return n}function Ig(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Fl(Object(n),!0).forEach(function(r){Og(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Fl(Object(n)).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function Og(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var qg={count:5,hueMin:0,hueMax:360,chromaMin:0,chromaMax:100,lightMin:0,lightMax:100,quality:50,samples:800},Tl=function(e,n){for(var r=Number.MAX_SAFE_INTEGER,a=0,i=0;i<e.length;i+=1){var o=e[i],l=Math.sqrt(Math.pow(Math.abs(o[0]-n[0]),2)+Math.pow(Math.abs(o[1]-n[1]),2)+Math.pow(Math.abs(o[2]-n[2]),2));l<r&&(r=l,a=i)}return a},Rg=function(e,n){var r=Ca.default.lab(e),a=r.hcl(),i=r.rgb(),o=Ca.default.rgb(i).lab(),l=2;return a[0]>=n.hueMin&&a[0]<=n.hueMax&&a[1]>=n.chromaMin&&a[1]<=n.chromaMax&&a[2]>=n.lightMin&&a[2]<=n.lightMax&&o[0]>=e[0]-l&&o[0]<=e[0]+l&&o[1]>=e[1]-l&&o[1]<=e[1]+l&&o[2]>=e[2]-l&&o[2]<=e[2]+l},Lg=function(e){for(var n=e.slice(0),r=[n.shift()];n.length>0;){for(var a=r[r.length-1],i=0,o=Number.MIN_SAFE_INTEGER,l=0;l<n.length;l+=1){var s=Math.sqrt(Math.pow(Math.abs(a[0]-n[l][0]),2)+Math.pow(Math.abs(a[1]-n[l][1]),2)+Math.pow(Math.abs(a[2]-n[l][2]),2));s>o&&(o=s,i=l)}r.push(n.splice(i,1)[0])}return r},Pg=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},n=Ig({},qg,{},e);if(n.count<=0)return[];n.samples<n.count*3&&(n.samples=Math.ceil(n.count*3));var r=[],a=[],i=new Set,o=Math.ceil(Math.cbrt(n.samples)),l=(n.hueMax-n.hueMin)/o,s=(n.chromaMax-n.chromaMin)/o,d=(n.lightMax-n.lightMin)/o;if(l<=0)throw new Error("hueMax must be greater than hueMin!");if(s<=0)throw new Error("chromaMax must be greater than chromaMin!");if(d<=0)throw new Error("lightMax must be greater than lightMin!");for(var u=n.hueMin+l/2;u<=n.hueMax;u+=l)for(var c=n.chromaMin+s/2;c<=n.chromaMax;c+=s)for(var h=n.lightMin+d/2;h<=n.lightMax;h+=d){var v=Ca.default.hcl(u,c,h).lab();Rg(v,n)&&i.add(v.toString())}if(i=Array.from(i),i=i.map(function(ue){return ue.split(",").map(function(Me){return parseFloat(Me)})}),i.length<n.count)throw new Error("Not enough samples to generate palette, increase sample count.");for(var m=Math.floor(i.length/n.count),_=0;_<i.length&&(r.push(i[_]),a.push([]),!(r.length>=n.count));_+=m);for(var g=1;g<=n.quality;g+=1){for(var S=(0,Qi.default)(a),C=(0,Qi.default)(i),T=0;T<r.length;T+=1){var M=Tl(C,r[T]);S[T].push(C[M]),C.splice(M,1)}for(var k=0;k<C.length;k+=1){var E=i[k],b=Tl(r,E);S[b].push(i[k])}for(var N=(0,Qi.default)(r),x=0;x<S.length;x+=1){var L=S[x],O=L.length,U=[],te=[],he=[],ee=Ng(L),se;try{for(ee.s();!(se=ee.n()).done;){var Y=se.value;U.push(Y[0]),te.push(Y[1]),he.push(Y[2])}}catch(ue){ee.e(ue)}finally{ee.f()}var z=Ki.default.sum(U)/O,K=Ki.default.sum(te)/O,ye=Ki.default.sum(he)/O;r[x]=[z,K,ye]}if((0,Bg.default)(N,r))break}return r=Lg(r),r.map(function(ue){return Ca.default.lab(ue)})},jg=Pg;ka.default=jg});var Bl=Ze((Fa,Pr)=>{(function(t){var e=typeof Fa=="object"&&Fa,n=typeof Pr=="object"&&Pr&&Pr.exports==e&&Pr,r=typeof global=="object"&&global;(r.global===r||r.window===r)&&(t=r);var a=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,i=/[\x01-\x7F]/g,o=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,l=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,s={"\xAD":"shy","\u200C":"zwnj","\u200D":"zwj","\u200E":"lrm","\u2063":"ic","\u2062":"it","\u2061":"af","\u200F":"rlm","\u200B":"ZeroWidthSpace","\u2060":"NoBreak","\u0311":"DownBreve","\u20DB":"tdot","\u20DC":"DotDot","	":"Tab","\n":"NewLine","\u2008":"puncsp","\u205F":"MediumSpace","\u2009":"thinsp","\u200A":"hairsp","\u2004":"emsp13","\u2002":"ensp","\u2005":"emsp14","\u2003":"emsp","\u2007":"numsp","\xA0":"nbsp","\u205F\u200A":"ThickSpace","\u203E":"oline",_:"lowbar","\u2010":"dash","\u2013":"ndash","\u2014":"mdash","\u2015":"horbar",",":"comma",";":"semi","\u204F":"bsemi",":":"colon","\u2A74":"Colone","!":"excl","\xA1":"iexcl","?":"quest","\xBF":"iquest",".":"period","\u2025":"nldr","\u2026":"mldr","\xB7":"middot","'":"apos","\u2018":"lsquo","\u2019":"rsquo","\u201A":"sbquo","\u2039":"lsaquo","\u203A":"rsaquo",'"':"quot","\u201C":"ldquo","\u201D":"rdquo","\u201E":"bdquo","\xAB":"laquo","\xBB":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","\u2308":"lceil","\u2309":"rceil","\u230A":"lfloor","\u230B":"rfloor","\u2985":"lopar","\u2986":"ropar","\u298B":"lbrke","\u298C":"rbrke","\u298D":"lbrkslu","\u298E":"rbrksld","\u298F":"lbrksld","\u2990":"rbrkslu","\u2991":"langd","\u2992":"rangd","\u2993":"lparlt","\u2994":"rpargt","\u2995":"gtlPar","\u2996":"ltrPar","\u27E6":"lobrk","\u27E7":"robrk","\u27E8":"lang","\u27E9":"rang","\u27EA":"Lang","\u27EB":"Rang","\u27EC":"loang","\u27ED":"roang","\u2772":"lbbrk","\u2773":"rbbrk","\u2016":"Vert","\xA7":"sect","\xB6":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","\u2030":"permil","\u2031":"pertenk","\u2020":"dagger","\u2021":"Dagger","\u2022":"bull","\u2043":"hybull","\u2032":"prime","\u2033":"Prime","\u2034":"tprime","\u2057":"qprime","\u2035":"bprime","\u2041":"caret","`":"grave","\xB4":"acute","\u02DC":"tilde","^":"Hat","\xAF":"macr","\u02D8":"breve","\u02D9":"dot","\xA8":"die","\u02DA":"ring","\u02DD":"dblac","\xB8":"cedil","\u02DB":"ogon","\u02C6":"circ","\u02C7":"caron","\xB0":"deg","\xA9":"copy","\xAE":"reg","\u2117":"copysr","\u2118":"wp","\u211E":"rx","\u2127":"mho","\u2129":"iiota","\u2190":"larr","\u219A":"nlarr","\u2192":"rarr","\u219B":"nrarr","\u2191":"uarr","\u2193":"darr","\u2194":"harr","\u21AE":"nharr","\u2195":"varr","\u2196":"nwarr","\u2197":"nearr","\u2198":"searr","\u2199":"swarr","\u219D":"rarrw","\u219D\u0338":"nrarrw","\u219E":"Larr","\u219F":"Uarr","\u21A0":"Rarr","\u21A1":"Darr","\u21A2":"larrtl","\u21A3":"rarrtl","\u21A4":"mapstoleft","\u21A5":"mapstoup","\u21A6":"map","\u21A7":"mapstodown","\u21A9":"larrhk","\u21AA":"rarrhk","\u21AB":"larrlp","\u21AC":"rarrlp","\u21AD":"harrw","\u21B0":"lsh","\u21B1":"rsh","\u21B2":"ldsh","\u21B3":"rdsh","\u21B5":"crarr","\u21B6":"cularr","\u21B7":"curarr","\u21BA":"olarr","\u21BB":"orarr","\u21BC":"lharu","\u21BD":"lhard","\u21BE":"uharr","\u21BF":"uharl","\u21C0":"rharu","\u21C1":"rhard","\u21C2":"dharr","\u21C3":"dharl","\u21C4":"rlarr","\u21C5":"udarr","\u21C6":"lrarr","\u21C7":"llarr","\u21C8":"uuarr","\u21C9":"rrarr","\u21CA":"ddarr","\u21CB":"lrhar","\u21CC":"rlhar","\u21D0":"lArr","\u21CD":"nlArr","\u21D1":"uArr","\u21D2":"rArr","\u21CF":"nrArr","\u21D3":"dArr","\u21D4":"iff","\u21CE":"nhArr","\u21D5":"vArr","\u21D6":"nwArr","\u21D7":"neArr","\u21D8":"seArr","\u21D9":"swArr","\u21DA":"lAarr","\u21DB":"rAarr","\u21DD":"zigrarr","\u21E4":"larrb","\u21E5":"rarrb","\u21F5":"duarr","\u21FD":"loarr","\u21FE":"roarr","\u21FF":"hoarr","\u2200":"forall","\u2201":"comp","\u2202":"part","\u2202\u0338":"npart","\u2203":"exist","\u2204":"nexist","\u2205":"empty","\u2207":"Del","\u2208":"in","\u2209":"notin","\u220B":"ni","\u220C":"notni","\u03F6":"bepsi","\u220F":"prod","\u2210":"coprod","\u2211":"sum","+":"plus","\xB1":"pm","\xF7":"div","\xD7":"times","<":"lt","\u226E":"nlt","<\u20D2":"nvlt","=":"equals","\u2260":"ne","=\u20E5":"bne","\u2A75":"Equal",">":"gt","\u226F":"ngt",">\u20D2":"nvgt","\xAC":"not","|":"vert","\xA6":"brvbar","\u2212":"minus","\u2213":"mp","\u2214":"plusdo","\u2044":"frasl","\u2216":"setmn","\u2217":"lowast","\u2218":"compfn","\u221A":"Sqrt","\u221D":"prop","\u221E":"infin","\u221F":"angrt","\u2220":"ang","\u2220\u20D2":"nang","\u2221":"angmsd","\u2222":"angsph","\u2223":"mid","\u2224":"nmid","\u2225":"par","\u2226":"npar","\u2227":"and","\u2228":"or","\u2229":"cap","\u2229\uFE00":"caps","\u222A":"cup","\u222A\uFE00":"cups","\u222B":"int","\u222C":"Int","\u222D":"tint","\u2A0C":"qint","\u222E":"oint","\u222F":"Conint","\u2230":"Cconint","\u2231":"cwint","\u2232":"cwconint","\u2233":"awconint","\u2234":"there4","\u2235":"becaus","\u2236":"ratio","\u2237":"Colon","\u2238":"minusd","\u223A":"mDDot","\u223B":"homtht","\u223C":"sim","\u2241":"nsim","\u223C\u20D2":"nvsim","\u223D":"bsim","\u223D\u0331":"race","\u223E":"ac","\u223E\u0333":"acE","\u223F":"acd","\u2240":"wr","\u2242":"esim","\u2242\u0338":"nesim","\u2243":"sime","\u2244":"nsime","\u2245":"cong","\u2247":"ncong","\u2246":"simne","\u2248":"ap","\u2249":"nap","\u224A":"ape","\u224B":"apid","\u224B\u0338":"napid","\u224C":"bcong","\u224D":"CupCap","\u226D":"NotCupCap","\u224D\u20D2":"nvap","\u224E":"bump","\u224E\u0338":"nbump","\u224F":"bumpe","\u224F\u0338":"nbumpe","\u2250":"doteq","\u2250\u0338":"nedot","\u2251":"eDot","\u2252":"efDot","\u2253":"erDot","\u2254":"colone","\u2255":"ecolon","\u2256":"ecir","\u2257":"cire","\u2259":"wedgeq","\u225A":"veeeq","\u225C":"trie","\u225F":"equest","\u2261":"equiv","\u2262":"nequiv","\u2261\u20E5":"bnequiv","\u2264":"le","\u2270":"nle","\u2264\u20D2":"nvle","\u2265":"ge","\u2271":"nge","\u2265\u20D2":"nvge","\u2266":"lE","\u2266\u0338":"nlE","\u2267":"gE","\u2267\u0338":"ngE","\u2268\uFE00":"lvnE","\u2268":"lnE","\u2269":"gnE","\u2269\uFE00":"gvnE","\u226A":"ll","\u226A\u0338":"nLtv","\u226A\u20D2":"nLt","\u226B":"gg","\u226B\u0338":"nGtv","\u226B\u20D2":"nGt","\u226C":"twixt","\u2272":"lsim","\u2274":"nlsim","\u2273":"gsim","\u2275":"ngsim","\u2276":"lg","\u2278":"ntlg","\u2277":"gl","\u2279":"ntgl","\u227A":"pr","\u2280":"npr","\u227B":"sc","\u2281":"nsc","\u227C":"prcue","\u22E0":"nprcue","\u227D":"sccue","\u22E1":"nsccue","\u227E":"prsim","\u227F":"scsim","\u227F\u0338":"NotSucceedsTilde","\u2282":"sub","\u2284":"nsub","\u2282\u20D2":"vnsub","\u2283":"sup","\u2285":"nsup","\u2283\u20D2":"vnsup","\u2286":"sube","\u2288":"nsube","\u2287":"supe","\u2289":"nsupe","\u228A\uFE00":"vsubne","\u228A":"subne","\u228B\uFE00":"vsupne","\u228B":"supne","\u228D":"cupdot","\u228E":"uplus","\u228F":"sqsub","\u228F\u0338":"NotSquareSubset","\u2290":"sqsup","\u2290\u0338":"NotSquareSuperset","\u2291":"sqsube","\u22E2":"nsqsube","\u2292":"sqsupe","\u22E3":"nsqsupe","\u2293":"sqcap","\u2293\uFE00":"sqcaps","\u2294":"sqcup","\u2294\uFE00":"sqcups","\u2295":"oplus","\u2296":"ominus","\u2297":"otimes","\u2298":"osol","\u2299":"odot","\u229A":"ocir","\u229B":"oast","\u229D":"odash","\u229E":"plusb","\u229F":"minusb","\u22A0":"timesb","\u22A1":"sdotb","\u22A2":"vdash","\u22AC":"nvdash","\u22A3":"dashv","\u22A4":"top","\u22A5":"bot","\u22A7":"models","\u22A8":"vDash","\u22AD":"nvDash","\u22A9":"Vdash","\u22AE":"nVdash","\u22AA":"Vvdash","\u22AB":"VDash","\u22AF":"nVDash","\u22B0":"prurel","\u22B2":"vltri","\u22EA":"nltri","\u22B3":"vrtri","\u22EB":"nrtri","\u22B4":"ltrie","\u22EC":"nltrie","\u22B4\u20D2":"nvltrie","\u22B5":"rtrie","\u22ED":"nrtrie","\u22B5\u20D2":"nvrtrie","\u22B6":"origof","\u22B7":"imof","\u22B8":"mumap","\u22B9":"hercon","\u22BA":"intcal","\u22BB":"veebar","\u22BD":"barvee","\u22BE":"angrtvb","\u22BF":"lrtri","\u22C0":"Wedge","\u22C1":"Vee","\u22C2":"xcap","\u22C3":"xcup","\u22C4":"diam","\u22C5":"sdot","\u22C6":"Star","\u22C7":"divonx","\u22C8":"bowtie","\u22C9":"ltimes","\u22CA":"rtimes","\u22CB":"lthree","\u22CC":"rthree","\u22CD":"bsime","\u22CE":"cuvee","\u22CF":"cuwed","\u22D0":"Sub","\u22D1":"Sup","\u22D2":"Cap","\u22D3":"Cup","\u22D4":"fork","\u22D5":"epar","\u22D6":"ltdot","\u22D7":"gtdot","\u22D8":"Ll","\u22D8\u0338":"nLl","\u22D9":"Gg","\u22D9\u0338":"nGg","\u22DA\uFE00":"lesg","\u22DA":"leg","\u22DB":"gel","\u22DB\uFE00":"gesl","\u22DE":"cuepr","\u22DF":"cuesc","\u22E6":"lnsim","\u22E7":"gnsim","\u22E8":"prnsim","\u22E9":"scnsim","\u22EE":"vellip","\u22EF":"ctdot","\u22F0":"utdot","\u22F1":"dtdot","\u22F2":"disin","\u22F3":"isinsv","\u22F4":"isins","\u22F5":"isindot","\u22F5\u0338":"notindot","\u22F6":"notinvc","\u22F7":"notinvb","\u22F9":"isinE","\u22F9\u0338":"notinE","\u22FA":"nisd","\u22FB":"xnis","\u22FC":"nis","\u22FD":"notnivc","\u22FE":"notnivb","\u2305":"barwed","\u2306":"Barwed","\u230C":"drcrop","\u230D":"dlcrop","\u230E":"urcrop","\u230F":"ulcrop","\u2310":"bnot","\u2312":"profline","\u2313":"profsurf","\u2315":"telrec","\u2316":"target","\u231C":"ulcorn","\u231D":"urcorn","\u231E":"dlcorn","\u231F":"drcorn","\u2322":"frown","\u2323":"smile","\u232D":"cylcty","\u232E":"profalar","\u2336":"topbot","\u233D":"ovbar","\u233F":"solbar","\u237C":"angzarr","\u23B0":"lmoust","\u23B1":"rmoust","\u23B4":"tbrk","\u23B5":"bbrk","\u23B6":"bbrktbrk","\u23DC":"OverParenthesis","\u23DD":"UnderParenthesis","\u23DE":"OverBrace","\u23DF":"UnderBrace","\u23E2":"trpezium","\u23E7":"elinters","\u2423":"blank","\u2500":"boxh","\u2502":"boxv","\u250C":"boxdr","\u2510":"boxdl","\u2514":"boxur","\u2518":"boxul","\u251C":"boxvr","\u2524":"boxvl","\u252C":"boxhd","\u2534":"boxhu","\u253C":"boxvh","\u2550":"boxH","\u2551":"boxV","\u2552":"boxdR","\u2553":"boxDr","\u2554":"boxDR","\u2555":"boxdL","\u2556":"boxDl","\u2557":"boxDL","\u2558":"boxuR","\u2559":"boxUr","\u255A":"boxUR","\u255B":"boxuL","\u255C":"boxUl","\u255D":"boxUL","\u255E":"boxvR","\u255F":"boxVr","\u2560":"boxVR","\u2561":"boxvL","\u2562":"boxVl","\u2563":"boxVL","\u2564":"boxHd","\u2565":"boxhD","\u2566":"boxHD","\u2567":"boxHu","\u2568":"boxhU","\u2569":"boxHU","\u256A":"boxvH","\u256B":"boxVh","\u256C":"boxVH","\u2580":"uhblk","\u2584":"lhblk","\u2588":"block","\u2591":"blk14","\u2592":"blk12","\u2593":"blk34","\u25A1":"squ","\u25AA":"squf","\u25AB":"EmptyVerySmallSquare","\u25AD":"rect","\u25AE":"marker","\u25B1":"fltns","\u25B3":"xutri","\u25B4":"utrif","\u25B5":"utri","\u25B8":"rtrif","\u25B9":"rtri","\u25BD":"xdtri","\u25BE":"dtrif","\u25BF":"dtri","\u25C2":"ltrif","\u25C3":"ltri","\u25CA":"loz","\u25CB":"cir","\u25EC":"tridot","\u25EF":"xcirc","\u25F8":"ultri","\u25F9":"urtri","\u25FA":"lltri","\u25FB":"EmptySmallSquare","\u25FC":"FilledSmallSquare","\u2605":"starf","\u2606":"star","\u260E":"phone","\u2640":"female","\u2642":"male","\u2660":"spades","\u2663":"clubs","\u2665":"hearts","\u2666":"diams","\u266A":"sung","\u2713":"check","\u2717":"cross","\u2720":"malt","\u2736":"sext","\u2758":"VerticalSeparator","\u27C8":"bsolhsub","\u27C9":"suphsol","\u27F5":"xlarr","\u27F6":"xrarr","\u27F7":"xharr","\u27F8":"xlArr","\u27F9":"xrArr","\u27FA":"xhArr","\u27FC":"xmap","\u27FF":"dzigrarr","\u2902":"nvlArr","\u2903":"nvrArr","\u2904":"nvHarr","\u2905":"Map","\u290C":"lbarr","\u290D":"rbarr","\u290E":"lBarr","\u290F":"rBarr","\u2910":"RBarr","\u2911":"DDotrahd","\u2912":"UpArrowBar","\u2913":"DownArrowBar","\u2916":"Rarrtl","\u2919":"latail","\u291A":"ratail","\u291B":"lAtail","\u291C":"rAtail","\u291D":"larrfs","\u291E":"rarrfs","\u291F":"larrbfs","\u2920":"rarrbfs","\u2923":"nwarhk","\u2924":"nearhk","\u2925":"searhk","\u2926":"swarhk","\u2927":"nwnear","\u2928":"toea","\u2929":"tosa","\u292A":"swnwar","\u2933":"rarrc","\u2933\u0338":"nrarrc","\u2935":"cudarrr","\u2936":"ldca","\u2937":"rdca","\u2938":"cudarrl","\u2939":"larrpl","\u293C":"curarrm","\u293D":"cularrp","\u2945":"rarrpl","\u2948":"harrcir","\u2949":"Uarrocir","\u294A":"lurdshar","\u294B":"ldrushar","\u294E":"LeftRightVector","\u294F":"RightUpDownVector","\u2950":"DownLeftRightVector","\u2951":"LeftUpDownVector","\u2952":"LeftVectorBar","\u2953":"RightVectorBar","\u2954":"RightUpVectorBar","\u2955":"RightDownVectorBar","\u2956":"DownLeftVectorBar","\u2957":"DownRightVectorBar","\u2958":"LeftUpVectorBar","\u2959":"LeftDownVectorBar","\u295A":"LeftTeeVector","\u295B":"RightTeeVector","\u295C":"RightUpTeeVector","\u295D":"RightDownTeeVector","\u295E":"DownLeftTeeVector","\u295F":"DownRightTeeVector","\u2960":"LeftUpTeeVector","\u2961":"LeftDownTeeVector","\u2962":"lHar","\u2963":"uHar","\u2964":"rHar","\u2965":"dHar","\u2966":"luruhar","\u2967":"ldrdhar","\u2968":"ruluhar","\u2969":"rdldhar","\u296A":"lharul","\u296B":"llhard","\u296C":"rharul","\u296D":"lrhard","\u296E":"udhar","\u296F":"duhar","\u2970":"RoundImplies","\u2971":"erarr","\u2972":"simrarr","\u2973":"larrsim","\u2974":"rarrsim","\u2975":"rarrap","\u2976":"ltlarr","\u2978":"gtrarr","\u2979":"subrarr","\u297B":"suplarr","\u297C":"lfisht","\u297D":"rfisht","\u297E":"ufisht","\u297F":"dfisht","\u299A":"vzigzag","\u299C":"vangrt","\u299D":"angrtvbd","\u29A4":"ange","\u29A5":"range","\u29A6":"dwangle","\u29A7":"uwangle","\u29A8":"angmsdaa","\u29A9":"angmsdab","\u29AA":"angmsdac","\u29AB":"angmsdad","\u29AC":"angmsdae","\u29AD":"angmsdaf","\u29AE":"angmsdag","\u29AF":"angmsdah","\u29B0":"bemptyv","\u29B1":"demptyv","\u29B2":"cemptyv","\u29B3":"raemptyv","\u29B4":"laemptyv","\u29B5":"ohbar","\u29B6":"omid","\u29B7":"opar","\u29B9":"operp","\u29BB":"olcross","\u29BC":"odsold","\u29BE":"olcir","\u29BF":"ofcir","\u29C0":"olt","\u29C1":"ogt","\u29C2":"cirscir","\u29C3":"cirE","\u29C4":"solb","\u29C5":"bsolb","\u29C9":"boxbox","\u29CD":"trisb","\u29CE":"rtriltri","\u29CF":"LeftTriangleBar","\u29CF\u0338":"NotLeftTriangleBar","\u29D0":"RightTriangleBar","\u29D0\u0338":"NotRightTriangleBar","\u29DC":"iinfin","\u29DD":"infintie","\u29DE":"nvinfin","\u29E3":"eparsl","\u29E4":"smeparsl","\u29E5":"eqvparsl","\u29EB":"lozf","\u29F4":"RuleDelayed","\u29F6":"dsol","\u2A00":"xodot","\u2A01":"xoplus","\u2A02":"xotime","\u2A04":"xuplus","\u2A06":"xsqcup","\u2A0D":"fpartint","\u2A10":"cirfnint","\u2A11":"awint","\u2A12":"rppolint","\u2A13":"scpolint","\u2A14":"npolint","\u2A15":"pointint","\u2A16":"quatint","\u2A17":"intlarhk","\u2A22":"pluscir","\u2A23":"plusacir","\u2A24":"simplus","\u2A25":"plusdu","\u2A26":"plussim","\u2A27":"plustwo","\u2A29":"mcomma","\u2A2A":"minusdu","\u2A2D":"loplus","\u2A2E":"roplus","\u2A2F":"Cross","\u2A30":"timesd","\u2A31":"timesbar","\u2A33":"smashp","\u2A34":"lotimes","\u2A35":"rotimes","\u2A36":"otimesas","\u2A37":"Otimes","\u2A38":"odiv","\u2A39":"triplus","\u2A3A":"triminus","\u2A3B":"tritime","\u2A3C":"iprod","\u2A3F":"amalg","\u2A40":"capdot","\u2A42":"ncup","\u2A43":"ncap","\u2A44":"capand","\u2A45":"cupor","\u2A46":"cupcap","\u2A47":"capcup","\u2A48":"cupbrcap","\u2A49":"capbrcup","\u2A4A":"cupcup","\u2A4B":"capcap","\u2A4C":"ccups","\u2A4D":"ccaps","\u2A50":"ccupssm","\u2A53":"And","\u2A54":"Or","\u2A55":"andand","\u2A56":"oror","\u2A57":"orslope","\u2A58":"andslope","\u2A5A":"andv","\u2A5B":"orv","\u2A5C":"andd","\u2A5D":"ord","\u2A5F":"wedbar","\u2A66":"sdote","\u2A6A":"simdot","\u2A6D":"congdot","\u2A6D\u0338":"ncongdot","\u2A6E":"easter","\u2A6F":"apacir","\u2A70":"apE","\u2A70\u0338":"napE","\u2A71":"eplus","\u2A72":"pluse","\u2A73":"Esim","\u2A77":"eDDot","\u2A78":"equivDD","\u2A79":"ltcir","\u2A7A":"gtcir","\u2A7B":"ltquest","\u2A7C":"gtquest","\u2A7D":"les","\u2A7D\u0338":"nles","\u2A7E":"ges","\u2A7E\u0338":"nges","\u2A7F":"lesdot","\u2A80":"gesdot","\u2A81":"lesdoto","\u2A82":"gesdoto","\u2A83":"lesdotor","\u2A84":"gesdotol","\u2A85":"lap","\u2A86":"gap","\u2A87":"lne","\u2A88":"gne","\u2A89":"lnap","\u2A8A":"gnap","\u2A8B":"lEg","\u2A8C":"gEl","\u2A8D":"lsime","\u2A8E":"gsime","\u2A8F":"lsimg","\u2A90":"gsiml","\u2A91":"lgE","\u2A92":"glE","\u2A93":"lesges","\u2A94":"gesles","\u2A95":"els","\u2A96":"egs","\u2A97":"elsdot","\u2A98":"egsdot","\u2A99":"el","\u2A9A":"eg","\u2A9D":"siml","\u2A9E":"simg","\u2A9F":"simlE","\u2AA0":"simgE","\u2AA1":"LessLess","\u2AA1\u0338":"NotNestedLessLess","\u2AA2":"GreaterGreater","\u2AA2\u0338":"NotNestedGreaterGreater","\u2AA4":"glj","\u2AA5":"gla","\u2AA6":"ltcc","\u2AA7":"gtcc","\u2AA8":"lescc","\u2AA9":"gescc","\u2AAA":"smt","\u2AAB":"lat","\u2AAC":"smte","\u2AAC\uFE00":"smtes","\u2AAD":"late","\u2AAD\uFE00":"lates","\u2AAE":"bumpE","\u2AAF":"pre","\u2AAF\u0338":"npre","\u2AB0":"sce","\u2AB0\u0338":"nsce","\u2AB3":"prE","\u2AB4":"scE","\u2AB5":"prnE","\u2AB6":"scnE","\u2AB7":"prap","\u2AB8":"scap","\u2AB9":"prnap","\u2ABA":"scnap","\u2ABB":"Pr","\u2ABC":"Sc","\u2ABD":"subdot","\u2ABE":"supdot","\u2ABF":"subplus","\u2AC0":"supplus","\u2AC1":"submult","\u2AC2":"supmult","\u2AC3":"subedot","\u2AC4":"supedot","\u2AC5":"subE","\u2AC5\u0338":"nsubE","\u2AC6":"supE","\u2AC6\u0338":"nsupE","\u2AC7":"subsim","\u2AC8":"supsim","\u2ACB\uFE00":"vsubnE","\u2ACB":"subnE","\u2ACC\uFE00":"vsupnE","\u2ACC":"supnE","\u2ACF":"csub","\u2AD0":"csup","\u2AD1":"csube","\u2AD2":"csupe","\u2AD3":"subsup","\u2AD4":"supsub","\u2AD5":"subsub","\u2AD6":"supsup","\u2AD7":"suphsub","\u2AD8":"supdsub","\u2AD9":"forkv","\u2ADA":"topfork","\u2ADB":"mlcp","\u2AE4":"Dashv","\u2AE6":"Vdashl","\u2AE7":"Barv","\u2AE8":"vBar","\u2AE9":"vBarv","\u2AEB":"Vbar","\u2AEC":"Not","\u2AED":"bNot","\u2AEE":"rnmid","\u2AEF":"cirmid","\u2AF0":"midcir","\u2AF1":"topcir","\u2AF2":"nhpar","\u2AF3":"parsim","\u2AFD":"parsl","\u2AFD\u20E5":"nparsl","\u266D":"flat","\u266E":"natur","\u266F":"sharp","\xA4":"curren","\xA2":"cent",$:"dollar","\xA3":"pound","\xA5":"yen","\u20AC":"euro","\xB9":"sup1","\xBD":"half","\u2153":"frac13","\xBC":"frac14","\u2155":"frac15","\u2159":"frac16","\u215B":"frac18","\xB2":"sup2","\u2154":"frac23","\u2156":"frac25","\xB3":"sup3","\xBE":"frac34","\u2157":"frac35","\u215C":"frac38","\u2158":"frac45","\u215A":"frac56","\u215D":"frac58","\u215E":"frac78","\u{1D4B6}":"ascr","\u{1D552}":"aopf","\u{1D51E}":"afr","\u{1D538}":"Aopf","\u{1D504}":"Afr","\u{1D49C}":"Ascr",\u00AA:"ordf",\u00E1:"aacute",\u00C1:"Aacute",\u00E0:"agrave",\u00C0:"Agrave",\u0103:"abreve",\u0102:"Abreve",\u00E2:"acirc",\u00C2:"Acirc",\u00E5:"aring",\u00C5:"angst",\u00E4:"auml",\u00C4:"Auml",\u00E3:"atilde",\u00C3:"Atilde",\u0105:"aogon",\u0104:"Aogon",\u0101:"amacr",\u0100:"Amacr",\u00E6:"aelig",\u00C6:"AElig","\u{1D4B7}":"bscr","\u{1D553}":"bopf","\u{1D51F}":"bfr","\u{1D539}":"Bopf",\u212C:"Bscr","\u{1D505}":"Bfr","\u{1D520}":"cfr","\u{1D4B8}":"cscr","\u{1D554}":"copf",\u212D:"Cfr","\u{1D49E}":"Cscr",\u2102:"Copf",\u0107:"cacute",\u0106:"Cacute",\u0109:"ccirc",\u0108:"Ccirc",\u010D:"ccaron",\u010C:"Ccaron",\u010B:"cdot",\u010A:"Cdot",\u00E7:"ccedil",\u00C7:"Ccedil","\u2105":"incare","\u{1D521}":"dfr","\u2146":"dd","\u{1D555}":"dopf","\u{1D4B9}":"dscr","\u{1D49F}":"Dscr","\u{1D507}":"Dfr","\u2145":"DD","\u{1D53B}":"Dopf",\u010F:"dcaron",\u010E:"Dcaron",\u0111:"dstrok",\u0110:"Dstrok",\u00F0:"eth",\u00D0:"ETH","\u2147":"ee",\u212F:"escr","\u{1D522}":"efr","\u{1D556}":"eopf",\u2130:"Escr","\u{1D508}":"Efr","\u{1D53C}":"Eopf",\u00E9:"eacute",\u00C9:"Eacute",\u00E8:"egrave",\u00C8:"Egrave",\u00EA:"ecirc",\u00CA:"Ecirc",\u011B:"ecaron",\u011A:"Ecaron",\u00EB:"euml",\u00CB:"Euml",\u0117:"edot",\u0116:"Edot",\u0119:"eogon",\u0118:"Eogon",\u0113:"emacr",\u0112:"Emacr","\u{1D523}":"ffr","\u{1D557}":"fopf","\u{1D4BB}":"fscr","\u{1D509}":"Ffr","\u{1D53D}":"Fopf",\u2131:"Fscr",\uFB00:"fflig",\uFB03:"ffilig",\uFB04:"ffllig",\uFB01:"filig",fj:"fjlig",\uFB02:"fllig",\u0192:"fnof",\u210A:"gscr","\u{1D558}":"gopf","\u{1D524}":"gfr","\u{1D4A2}":"Gscr","\u{1D53E}":"Gopf","\u{1D50A}":"Gfr",\u01F5:"gacute",\u011F:"gbreve",\u011E:"Gbreve",\u011D:"gcirc",\u011C:"Gcirc",\u0121:"gdot",\u0120:"Gdot",\u0122:"Gcedil","\u{1D525}":"hfr",\u210E:"planckh","\u{1D4BD}":"hscr","\u{1D559}":"hopf",\u210B:"Hscr",\u210C:"Hfr",\u210D:"Hopf",\u0125:"hcirc",\u0124:"Hcirc",\u210F:"hbar",\u0127:"hstrok",\u0126:"Hstrok","\u{1D55A}":"iopf","\u{1D526}":"ifr","\u{1D4BE}":"iscr","\u2148":"ii","\u{1D540}":"Iopf",\u2110:"Iscr",\u2111:"Im",\u00ED:"iacute",\u00CD:"Iacute",\u00EC:"igrave",\u00CC:"Igrave",\u00EE:"icirc",\u00CE:"Icirc",\u00EF:"iuml",\u00CF:"Iuml",\u0129:"itilde",\u0128:"Itilde",\u0130:"Idot",\u012F:"iogon",\u012E:"Iogon",\u012B:"imacr",\u012A:"Imacr",\u0133:"ijlig",\u0132:"IJlig",\u0131:"imath","\u{1D4BF}":"jscr","\u{1D55B}":"jopf","\u{1D527}":"jfr","\u{1D4A5}":"Jscr","\u{1D50D}":"Jfr","\u{1D541}":"Jopf",\u0135:"jcirc",\u0134:"Jcirc","\u0237":"jmath","\u{1D55C}":"kopf","\u{1D4C0}":"kscr","\u{1D528}":"kfr","\u{1D4A6}":"Kscr","\u{1D542}":"Kopf","\u{1D50E}":"Kfr",\u0137:"kcedil",\u0136:"Kcedil","\u{1D529}":"lfr","\u{1D4C1}":"lscr",\u2113:"ell","\u{1D55D}":"lopf",\u2112:"Lscr","\u{1D50F}":"Lfr","\u{1D543}":"Lopf",\u013A:"lacute",\u0139:"Lacute",\u013E:"lcaron",\u013D:"Lcaron",\u013C:"lcedil",\u013B:"Lcedil",\u0142:"lstrok",\u0141:"Lstrok",\u0140:"lmidot",\u013F:"Lmidot","\u{1D52A}":"mfr","\u{1D55E}":"mopf","\u{1D4C2}":"mscr","\u{1D510}":"Mfr","\u{1D544}":"Mopf",\u2133:"Mscr","\u{1D52B}":"nfr","\u{1D55F}":"nopf","\u{1D4C3}":"nscr",\u2115:"Nopf","\u{1D4A9}":"Nscr","\u{1D511}":"Nfr",\u0144:"nacute",\u0143:"Nacute",\u0148:"ncaron",\u0147:"Ncaron",\u00F1:"ntilde",\u00D1:"Ntilde",\u0146:"ncedil",\u0145:"Ncedil","\u2116":"numero",\u014B:"eng",\u014A:"ENG","\u{1D560}":"oopf","\u{1D52C}":"ofr",\u2134:"oscr","\u{1D4AA}":"Oscr","\u{1D512}":"Ofr","\u{1D546}":"Oopf",\u00BA:"ordm",\u00F3:"oacute",\u00D3:"Oacute",\u00F2:"ograve",\u00D2:"Ograve",\u00F4:"ocirc",\u00D4:"Ocirc",\u00F6:"ouml",\u00D6:"Ouml",\u0151:"odblac",\u0150:"Odblac",\u00F5:"otilde",\u00D5:"Otilde",\u00F8:"oslash",\u00D8:"Oslash",\u014D:"omacr",\u014C:"Omacr",\u0153:"oelig",\u0152:"OElig","\u{1D52D}":"pfr","\u{1D4C5}":"pscr","\u{1D561}":"popf",\u2119:"Popf","\u{1D513}":"Pfr","\u{1D4AB}":"Pscr","\u{1D562}":"qopf","\u{1D52E}":"qfr","\u{1D4C6}":"qscr","\u{1D4AC}":"Qscr","\u{1D514}":"Qfr",\u211A:"Qopf",\u0138:"kgreen","\u{1D52F}":"rfr","\u{1D563}":"ropf","\u{1D4C7}":"rscr",\u211B:"Rscr",\u211C:"Re",\u211D:"Ropf",\u0155:"racute",\u0154:"Racute",\u0159:"rcaron",\u0158:"Rcaron",\u0157:"rcedil",\u0156:"Rcedil","\u{1D564}":"sopf","\u{1D4C8}":"sscr","\u{1D530}":"sfr","\u{1D54A}":"Sopf","\u{1D516}":"Sfr","\u{1D4AE}":"Sscr","\u24C8":"oS",\u015B:"sacute",\u015A:"Sacute",\u015D:"scirc",\u015C:"Scirc",\u0161:"scaron",\u0160:"Scaron",\u015F:"scedil",\u015E:"Scedil",\u00DF:"szlig","\u{1D531}":"tfr","\u{1D4C9}":"tscr","\u{1D565}":"topf","\u{1D4AF}":"Tscr","\u{1D517}":"Tfr","\u{1D54B}":"Topf",\u0165:"tcaron",\u0164:"Tcaron",\u0163:"tcedil",\u0162:"Tcedil","\u2122":"trade",\u0167:"tstrok",\u0166:"Tstrok","\u{1D4CA}":"uscr","\u{1D566}":"uopf","\u{1D532}":"ufr","\u{1D54C}":"Uopf","\u{1D518}":"Ufr","\u{1D4B0}":"Uscr",\u00FA:"uacute",\u00DA:"Uacute",\u00F9:"ugrave",\u00D9:"Ugrave",\u016D:"ubreve",\u016C:"Ubreve",\u00FB:"ucirc",\u00DB:"Ucirc",\u016F:"uring",\u016E:"Uring",\u00FC:"uuml",\u00DC:"Uuml",\u0171:"udblac",\u0170:"Udblac",\u0169:"utilde",\u0168:"Utilde",\u0173:"uogon",\u0172:"Uogon",\u016B:"umacr",\u016A:"Umacr","\u{1D533}":"vfr","\u{1D567}":"vopf","\u{1D4CB}":"vscr","\u{1D519}":"Vfr","\u{1D54D}":"Vopf","\u{1D4B1}":"Vscr","\u{1D568}":"wopf","\u{1D4CC}":"wscr","\u{1D534}":"wfr","\u{1D4B2}":"Wscr","\u{1D54E}":"Wopf","\u{1D51A}":"Wfr",\u0175:"wcirc",\u0174:"Wcirc","\u{1D535}":"xfr","\u{1D4CD}":"xscr","\u{1D569}":"xopf","\u{1D54F}":"Xopf","\u{1D51B}":"Xfr","\u{1D4B3}":"Xscr","\u{1D536}":"yfr","\u{1D4CE}":"yscr","\u{1D56A}":"yopf","\u{1D4B4}":"Yscr","\u{1D51C}":"Yfr","\u{1D550}":"Yopf",\u00FD:"yacute",\u00DD:"Yacute",\u0177:"ycirc",\u0176:"Ycirc",\u00FF:"yuml",\u0178:"Yuml","\u{1D4CF}":"zscr","\u{1D537}":"zfr","\u{1D56B}":"zopf",\u2128:"Zfr",\u2124:"Zopf","\u{1D4B5}":"Zscr",\u017A:"zacute",\u0179:"Zacute",\u017E:"zcaron",\u017D:"Zcaron",\u017C:"zdot",\u017B:"Zdot",\u01B5:"imped",\u00FE:"thorn",\u00DE:"THORN",\u0149:"napos",\u03B1:"alpha",\u0391:"Alpha",\u03B2:"beta",\u0392:"Beta",\u03B3:"gamma",\u0393:"Gamma",\u03B4:"delta",\u0394:"Delta",\u03B5:"epsi","\u03F5":"epsiv",\u0395:"Epsilon",\u03DD:"gammad",\u03DC:"Gammad",\u03B6:"zeta",\u0396:"Zeta",\u03B7:"eta",\u0397:"Eta",\u03B8:"theta",\u03D1:"thetav",\u0398:"Theta",\u03B9:"iota",\u0399:"Iota",\u03BA:"kappa",\u03F0:"kappav",\u039A:"Kappa",\u03BB:"lambda",\u039B:"Lambda",\u03BC:"mu",\u00B5:"micro",\u039C:"Mu",\u03BD:"nu",\u039D:"Nu",\u03BE:"xi",\u039E:"Xi",\u03BF:"omicron",\u039F:"Omicron",\u03C0:"pi",\u03D6:"piv",\u03A0:"Pi",\u03C1:"rho",\u03F1:"rhov",\u03A1:"Rho",\u03C3:"sigma",\u03A3:"Sigma",\u03C2:"sigmaf",\u03C4:"tau",\u03A4:"Tau",\u03C5:"upsi",\u03A5:"Upsilon",\u03D2:"Upsi",\u03C6:"phi",\u03D5:"phiv",\u03A6:"Phi",\u03C7:"chi",\u03A7:"Chi",\u03C8:"psi",\u03A8:"Psi",\u03C9:"omega",\u03A9:"ohm",\u0430:"acy",\u0410:"Acy",\u0431:"bcy",\u0411:"Bcy",\u0432:"vcy",\u0412:"Vcy",\u0433:"gcy",\u0413:"Gcy",\u0453:"gjcy",\u0403:"GJcy",\u0434:"dcy",\u0414:"Dcy",\u0452:"djcy",\u0402:"DJcy",\u0435:"iecy",\u0415:"IEcy",\u0451:"iocy",\u0401:"IOcy",\u0454:"jukcy",\u0404:"Jukcy",\u0436:"zhcy",\u0416:"ZHcy",\u0437:"zcy",\u0417:"Zcy",\u0455:"dscy",\u0405:"DScy",\u0438:"icy",\u0418:"Icy",\u0456:"iukcy",\u0406:"Iukcy",\u0457:"yicy",\u0407:"YIcy",\u0439:"jcy",\u0419:"Jcy",\u0458:"jsercy",\u0408:"Jsercy",\u043A:"kcy",\u041A:"Kcy",\u045C:"kjcy",\u040C:"KJcy",\u043B:"lcy",\u041B:"Lcy",\u0459:"ljcy",\u0409:"LJcy",\u043C:"mcy",\u041C:"Mcy",\u043D:"ncy",\u041D:"Ncy",\u045A:"njcy",\u040A:"NJcy",\u043E:"ocy",\u041E:"Ocy",\u043F:"pcy",\u041F:"Pcy",\u0440:"rcy",\u0420:"Rcy",\u0441:"scy",\u0421:"Scy",\u0442:"tcy",\u0422:"Tcy",\u045B:"tshcy",\u040B:"TSHcy",\u0443:"ucy",\u0423:"Ucy",\u045E:"ubrcy",\u040E:"Ubrcy",\u0444:"fcy",\u0424:"Fcy",\u0445:"khcy",\u0425:"KHcy",\u0446:"tscy",\u0426:"TScy",\u0447:"chcy",\u0427:"CHcy",\u045F:"dzcy",\u040F:"DZcy",\u0448:"shcy",\u0428:"SHcy",\u0449:"shchcy",\u0429:"SHCHcy",\u044A:"hardcy",\u042A:"HARDcy",\u044B:"ycy",\u042B:"Ycy",\u044C:"softcy",\u042C:"SOFTcy",\u044D:"ecy",\u042D:"Ecy",\u044E:"yucy",\u042E:"YUcy",\u044F:"yacy",\u042F:"YAcy",\u2135:"aleph",\u2136:"beth",\u2137:"gimel",\u2138:"daleth"},d=/["&'<>`]/g,u={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},c=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,h=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,v=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,m={aacute:"\xE1",Aacute:"\xC1",abreve:"\u0103",Abreve:"\u0102",ac:"\u223E",acd:"\u223F",acE:"\u223E\u0333",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",acy:"\u0430",Acy:"\u0410",aelig:"\xE6",AElig:"\xC6",af:"\u2061",afr:"\u{1D51E}",Afr:"\u{1D504}",agrave:"\xE0",Agrave:"\xC0",alefsym:"\u2135",aleph:"\u2135",alpha:"\u03B1",Alpha:"\u0391",amacr:"\u0101",Amacr:"\u0100",amalg:"\u2A3F",amp:"&",AMP:"&",and:"\u2227",And:"\u2A53",andand:"\u2A55",andd:"\u2A5C",andslope:"\u2A58",andv:"\u2A5A",ang:"\u2220",ange:"\u29A4",angle:"\u2220",angmsd:"\u2221",angmsdaa:"\u29A8",angmsdab:"\u29A9",angmsdac:"\u29AA",angmsdad:"\u29AB",angmsdae:"\u29AC",angmsdaf:"\u29AD",angmsdag:"\u29AE",angmsdah:"\u29AF",angrt:"\u221F",angrtvb:"\u22BE",angrtvbd:"\u299D",angsph:"\u2222",angst:"\xC5",angzarr:"\u237C",aogon:"\u0105",Aogon:"\u0104",aopf:"\u{1D552}",Aopf:"\u{1D538}",ap:"\u2248",apacir:"\u2A6F",ape:"\u224A",apE:"\u2A70",apid:"\u224B",apos:"'",ApplyFunction:"\u2061",approx:"\u2248",approxeq:"\u224A",aring:"\xE5",Aring:"\xC5",ascr:"\u{1D4B6}",Ascr:"\u{1D49C}",Assign:"\u2254",ast:"*",asymp:"\u2248",asympeq:"\u224D",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",awconint:"\u2233",awint:"\u2A11",backcong:"\u224C",backepsilon:"\u03F6",backprime:"\u2035",backsim:"\u223D",backsimeq:"\u22CD",Backslash:"\u2216",Barv:"\u2AE7",barvee:"\u22BD",barwed:"\u2305",Barwed:"\u2306",barwedge:"\u2305",bbrk:"\u23B5",bbrktbrk:"\u23B6",bcong:"\u224C",bcy:"\u0431",Bcy:"\u0411",bdquo:"\u201E",becaus:"\u2235",because:"\u2235",Because:"\u2235",bemptyv:"\u29B0",bepsi:"\u03F6",bernou:"\u212C",Bernoullis:"\u212C",beta:"\u03B2",Beta:"\u0392",beth:"\u2136",between:"\u226C",bfr:"\u{1D51F}",Bfr:"\u{1D505}",bigcap:"\u22C2",bigcirc:"\u25EF",bigcup:"\u22C3",bigodot:"\u2A00",bigoplus:"\u2A01",bigotimes:"\u2A02",bigsqcup:"\u2A06",bigstar:"\u2605",bigtriangledown:"\u25BD",bigtriangleup:"\u25B3",biguplus:"\u2A04",bigvee:"\u22C1",bigwedge:"\u22C0",bkarow:"\u290D",blacklozenge:"\u29EB",blacksquare:"\u25AA",blacktriangle:"\u25B4",blacktriangledown:"\u25BE",blacktriangleleft:"\u25C2",blacktriangleright:"\u25B8",blank:"\u2423",blk12:"\u2592",blk14:"\u2591",blk34:"\u2593",block:"\u2588",bne:"=\u20E5",bnequiv:"\u2261\u20E5",bnot:"\u2310",bNot:"\u2AED",bopf:"\u{1D553}",Bopf:"\u{1D539}",bot:"\u22A5",bottom:"\u22A5",bowtie:"\u22C8",boxbox:"\u29C9",boxdl:"\u2510",boxdL:"\u2555",boxDl:"\u2556",boxDL:"\u2557",boxdr:"\u250C",boxdR:"\u2552",boxDr:"\u2553",boxDR:"\u2554",boxh:"\u2500",boxH:"\u2550",boxhd:"\u252C",boxhD:"\u2565",boxHd:"\u2564",boxHD:"\u2566",boxhu:"\u2534",boxhU:"\u2568",boxHu:"\u2567",boxHU:"\u2569",boxminus:"\u229F",boxplus:"\u229E",boxtimes:"\u22A0",boxul:"\u2518",boxuL:"\u255B",boxUl:"\u255C",boxUL:"\u255D",boxur:"\u2514",boxuR:"\u2558",boxUr:"\u2559",boxUR:"\u255A",boxv:"\u2502",boxV:"\u2551",boxvh:"\u253C",boxvH:"\u256A",boxVh:"\u256B",boxVH:"\u256C",boxvl:"\u2524",boxvL:"\u2561",boxVl:"\u2562",boxVL:"\u2563",boxvr:"\u251C",boxvR:"\u255E",boxVr:"\u255F",boxVR:"\u2560",bprime:"\u2035",breve:"\u02D8",Breve:"\u02D8",brvbar:"\xA6",bscr:"\u{1D4B7}",Bscr:"\u212C",bsemi:"\u204F",bsim:"\u223D",bsime:"\u22CD",bsol:"\\",bsolb:"\u29C5",bsolhsub:"\u27C8",bull:"\u2022",bullet:"\u2022",bump:"\u224E",bumpe:"\u224F",bumpE:"\u2AAE",bumpeq:"\u224F",Bumpeq:"\u224E",cacute:"\u0107",Cacute:"\u0106",cap:"\u2229",Cap:"\u22D2",capand:"\u2A44",capbrcup:"\u2A49",capcap:"\u2A4B",capcup:"\u2A47",capdot:"\u2A40",CapitalDifferentialD:"\u2145",caps:"\u2229\uFE00",caret:"\u2041",caron:"\u02C7",Cayleys:"\u212D",ccaps:"\u2A4D",ccaron:"\u010D",Ccaron:"\u010C",ccedil:"\xE7",Ccedil:"\xC7",ccirc:"\u0109",Ccirc:"\u0108",Cconint:"\u2230",ccups:"\u2A4C",ccupssm:"\u2A50",cdot:"\u010B",Cdot:"\u010A",cedil:"\xB8",Cedilla:"\xB8",cemptyv:"\u29B2",cent:"\xA2",centerdot:"\xB7",CenterDot:"\xB7",cfr:"\u{1D520}",Cfr:"\u212D",chcy:"\u0447",CHcy:"\u0427",check:"\u2713",checkmark:"\u2713",chi:"\u03C7",Chi:"\u03A7",cir:"\u25CB",circ:"\u02C6",circeq:"\u2257",circlearrowleft:"\u21BA",circlearrowright:"\u21BB",circledast:"\u229B",circledcirc:"\u229A",circleddash:"\u229D",CircleDot:"\u2299",circledR:"\xAE",circledS:"\u24C8",CircleMinus:"\u2296",CirclePlus:"\u2295",CircleTimes:"\u2297",cire:"\u2257",cirE:"\u29C3",cirfnint:"\u2A10",cirmid:"\u2AEF",cirscir:"\u29C2",ClockwiseContourIntegral:"\u2232",CloseCurlyDoubleQuote:"\u201D",CloseCurlyQuote:"\u2019",clubs:"\u2663",clubsuit:"\u2663",colon:":",Colon:"\u2237",colone:"\u2254",Colone:"\u2A74",coloneq:"\u2254",comma:",",commat:"@",comp:"\u2201",compfn:"\u2218",complement:"\u2201",complexes:"\u2102",cong:"\u2245",congdot:"\u2A6D",Congruent:"\u2261",conint:"\u222E",Conint:"\u222F",ContourIntegral:"\u222E",copf:"\u{1D554}",Copf:"\u2102",coprod:"\u2210",Coproduct:"\u2210",copy:"\xA9",COPY:"\xA9",copysr:"\u2117",CounterClockwiseContourIntegral:"\u2233",crarr:"\u21B5",cross:"\u2717",Cross:"\u2A2F",cscr:"\u{1D4B8}",Cscr:"\u{1D49E}",csub:"\u2ACF",csube:"\u2AD1",csup:"\u2AD0",csupe:"\u2AD2",ctdot:"\u22EF",cudarrl:"\u2938",cudarrr:"\u2935",cuepr:"\u22DE",cuesc:"\u22DF",cularr:"\u21B6",cularrp:"\u293D",cup:"\u222A",Cup:"\u22D3",cupbrcap:"\u2A48",cupcap:"\u2A46",CupCap:"\u224D",cupcup:"\u2A4A",cupdot:"\u228D",cupor:"\u2A45",cups:"\u222A\uFE00",curarr:"\u21B7",curarrm:"\u293C",curlyeqprec:"\u22DE",curlyeqsucc:"\u22DF",curlyvee:"\u22CE",curlywedge:"\u22CF",curren:"\xA4",curvearrowleft:"\u21B6",curvearrowright:"\u21B7",cuvee:"\u22CE",cuwed:"\u22CF",cwconint:"\u2232",cwint:"\u2231",cylcty:"\u232D",dagger:"\u2020",Dagger:"\u2021",daleth:"\u2138",darr:"\u2193",dArr:"\u21D3",Darr:"\u21A1",dash:"\u2010",dashv:"\u22A3",Dashv:"\u2AE4",dbkarow:"\u290F",dblac:"\u02DD",dcaron:"\u010F",Dcaron:"\u010E",dcy:"\u0434",Dcy:"\u0414",dd:"\u2146",DD:"\u2145",ddagger:"\u2021",ddarr:"\u21CA",DDotrahd:"\u2911",ddotseq:"\u2A77",deg:"\xB0",Del:"\u2207",delta:"\u03B4",Delta:"\u0394",demptyv:"\u29B1",dfisht:"\u297F",dfr:"\u{1D521}",Dfr:"\u{1D507}",dHar:"\u2965",dharl:"\u21C3",dharr:"\u21C2",DiacriticalAcute:"\xB4",DiacriticalDot:"\u02D9",DiacriticalDoubleAcute:"\u02DD",DiacriticalGrave:"`",DiacriticalTilde:"\u02DC",diam:"\u22C4",diamond:"\u22C4",Diamond:"\u22C4",diamondsuit:"\u2666",diams:"\u2666",die:"\xA8",DifferentialD:"\u2146",digamma:"\u03DD",disin:"\u22F2",div:"\xF7",divide:"\xF7",divideontimes:"\u22C7",divonx:"\u22C7",djcy:"\u0452",DJcy:"\u0402",dlcorn:"\u231E",dlcrop:"\u230D",dollar:"$",dopf:"\u{1D555}",Dopf:"\u{1D53B}",dot:"\u02D9",Dot:"\xA8",DotDot:"\u20DC",doteq:"\u2250",doteqdot:"\u2251",DotEqual:"\u2250",dotminus:"\u2238",dotplus:"\u2214",dotsquare:"\u22A1",doublebarwedge:"\u2306",DoubleContourIntegral:"\u222F",DoubleDot:"\xA8",DoubleDownArrow:"\u21D3",DoubleLeftArrow:"\u21D0",DoubleLeftRightArrow:"\u21D4",DoubleLeftTee:"\u2AE4",DoubleLongLeftArrow:"\u27F8",DoubleLongLeftRightArrow:"\u27FA",DoubleLongRightArrow:"\u27F9",DoubleRightArrow:"\u21D2",DoubleRightTee:"\u22A8",DoubleUpArrow:"\u21D1",DoubleUpDownArrow:"\u21D5",DoubleVerticalBar:"\u2225",downarrow:"\u2193",Downarrow:"\u21D3",DownArrow:"\u2193",DownArrowBar:"\u2913",DownArrowUpArrow:"\u21F5",DownBreve:"\u0311",downdownarrows:"\u21CA",downharpoonleft:"\u21C3",downharpoonright:"\u21C2",DownLeftRightVector:"\u2950",DownLeftTeeVector:"\u295E",DownLeftVector:"\u21BD",DownLeftVectorBar:"\u2956",DownRightTeeVector:"\u295F",DownRightVector:"\u21C1",DownRightVectorBar:"\u2957",DownTee:"\u22A4",DownTeeArrow:"\u21A7",drbkarow:"\u2910",drcorn:"\u231F",drcrop:"\u230C",dscr:"\u{1D4B9}",Dscr:"\u{1D49F}",dscy:"\u0455",DScy:"\u0405",dsol:"\u29F6",dstrok:"\u0111",Dstrok:"\u0110",dtdot:"\u22F1",dtri:"\u25BF",dtrif:"\u25BE",duarr:"\u21F5",duhar:"\u296F",dwangle:"\u29A6",dzcy:"\u045F",DZcy:"\u040F",dzigrarr:"\u27FF",eacute:"\xE9",Eacute:"\xC9",easter:"\u2A6E",ecaron:"\u011B",Ecaron:"\u011A",ecir:"\u2256",ecirc:"\xEA",Ecirc:"\xCA",ecolon:"\u2255",ecy:"\u044D",Ecy:"\u042D",eDDot:"\u2A77",edot:"\u0117",eDot:"\u2251",Edot:"\u0116",ee:"\u2147",efDot:"\u2252",efr:"\u{1D522}",Efr:"\u{1D508}",eg:"\u2A9A",egrave:"\xE8",Egrave:"\xC8",egs:"\u2A96",egsdot:"\u2A98",el:"\u2A99",Element:"\u2208",elinters:"\u23E7",ell:"\u2113",els:"\u2A95",elsdot:"\u2A97",emacr:"\u0113",Emacr:"\u0112",empty:"\u2205",emptyset:"\u2205",EmptySmallSquare:"\u25FB",emptyv:"\u2205",EmptyVerySmallSquare:"\u25AB",emsp:"\u2003",emsp13:"\u2004",emsp14:"\u2005",eng:"\u014B",ENG:"\u014A",ensp:"\u2002",eogon:"\u0119",Eogon:"\u0118",eopf:"\u{1D556}",Eopf:"\u{1D53C}",epar:"\u22D5",eparsl:"\u29E3",eplus:"\u2A71",epsi:"\u03B5",epsilon:"\u03B5",Epsilon:"\u0395",epsiv:"\u03F5",eqcirc:"\u2256",eqcolon:"\u2255",eqsim:"\u2242",eqslantgtr:"\u2A96",eqslantless:"\u2A95",Equal:"\u2A75",equals:"=",EqualTilde:"\u2242",equest:"\u225F",Equilibrium:"\u21CC",equiv:"\u2261",equivDD:"\u2A78",eqvparsl:"\u29E5",erarr:"\u2971",erDot:"\u2253",escr:"\u212F",Escr:"\u2130",esdot:"\u2250",esim:"\u2242",Esim:"\u2A73",eta:"\u03B7",Eta:"\u0397",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",euro:"\u20AC",excl:"!",exist:"\u2203",Exists:"\u2203",expectation:"\u2130",exponentiale:"\u2147",ExponentialE:"\u2147",fallingdotseq:"\u2252",fcy:"\u0444",Fcy:"\u0424",female:"\u2640",ffilig:"\uFB03",fflig:"\uFB00",ffllig:"\uFB04",ffr:"\u{1D523}",Ffr:"\u{1D509}",filig:"\uFB01",FilledSmallSquare:"\u25FC",FilledVerySmallSquare:"\u25AA",fjlig:"fj",flat:"\u266D",fllig:"\uFB02",fltns:"\u25B1",fnof:"\u0192",fopf:"\u{1D557}",Fopf:"\u{1D53D}",forall:"\u2200",ForAll:"\u2200",fork:"\u22D4",forkv:"\u2AD9",Fouriertrf:"\u2131",fpartint:"\u2A0D",frac12:"\xBD",frac13:"\u2153",frac14:"\xBC",frac15:"\u2155",frac16:"\u2159",frac18:"\u215B",frac23:"\u2154",frac25:"\u2156",frac34:"\xBE",frac35:"\u2157",frac38:"\u215C",frac45:"\u2158",frac56:"\u215A",frac58:"\u215D",frac78:"\u215E",frasl:"\u2044",frown:"\u2322",fscr:"\u{1D4BB}",Fscr:"\u2131",gacute:"\u01F5",gamma:"\u03B3",Gamma:"\u0393",gammad:"\u03DD",Gammad:"\u03DC",gap:"\u2A86",gbreve:"\u011F",Gbreve:"\u011E",Gcedil:"\u0122",gcirc:"\u011D",Gcirc:"\u011C",gcy:"\u0433",Gcy:"\u0413",gdot:"\u0121",Gdot:"\u0120",ge:"\u2265",gE:"\u2267",gel:"\u22DB",gEl:"\u2A8C",geq:"\u2265",geqq:"\u2267",geqslant:"\u2A7E",ges:"\u2A7E",gescc:"\u2AA9",gesdot:"\u2A80",gesdoto:"\u2A82",gesdotol:"\u2A84",gesl:"\u22DB\uFE00",gesles:"\u2A94",gfr:"\u{1D524}",Gfr:"\u{1D50A}",gg:"\u226B",Gg:"\u22D9",ggg:"\u22D9",gimel:"\u2137",gjcy:"\u0453",GJcy:"\u0403",gl:"\u2277",gla:"\u2AA5",glE:"\u2A92",glj:"\u2AA4",gnap:"\u2A8A",gnapprox:"\u2A8A",gne:"\u2A88",gnE:"\u2269",gneq:"\u2A88",gneqq:"\u2269",gnsim:"\u22E7",gopf:"\u{1D558}",Gopf:"\u{1D53E}",grave:"`",GreaterEqual:"\u2265",GreaterEqualLess:"\u22DB",GreaterFullEqual:"\u2267",GreaterGreater:"\u2AA2",GreaterLess:"\u2277",GreaterSlantEqual:"\u2A7E",GreaterTilde:"\u2273",gscr:"\u210A",Gscr:"\u{1D4A2}",gsim:"\u2273",gsime:"\u2A8E",gsiml:"\u2A90",gt:">",Gt:"\u226B",GT:">",gtcc:"\u2AA7",gtcir:"\u2A7A",gtdot:"\u22D7",gtlPar:"\u2995",gtquest:"\u2A7C",gtrapprox:"\u2A86",gtrarr:"\u2978",gtrdot:"\u22D7",gtreqless:"\u22DB",gtreqqless:"\u2A8C",gtrless:"\u2277",gtrsim:"\u2273",gvertneqq:"\u2269\uFE00",gvnE:"\u2269\uFE00",Hacek:"\u02C7",hairsp:"\u200A",half:"\xBD",hamilt:"\u210B",hardcy:"\u044A",HARDcy:"\u042A",harr:"\u2194",hArr:"\u21D4",harrcir:"\u2948",harrw:"\u21AD",Hat:"^",hbar:"\u210F",hcirc:"\u0125",Hcirc:"\u0124",hearts:"\u2665",heartsuit:"\u2665",hellip:"\u2026",hercon:"\u22B9",hfr:"\u{1D525}",Hfr:"\u210C",HilbertSpace:"\u210B",hksearow:"\u2925",hkswarow:"\u2926",hoarr:"\u21FF",homtht:"\u223B",hookleftarrow:"\u21A9",hookrightarrow:"\u21AA",hopf:"\u{1D559}",Hopf:"\u210D",horbar:"\u2015",HorizontalLine:"\u2500",hscr:"\u{1D4BD}",Hscr:"\u210B",hslash:"\u210F",hstrok:"\u0127",Hstrok:"\u0126",HumpDownHump:"\u224E",HumpEqual:"\u224F",hybull:"\u2043",hyphen:"\u2010",iacute:"\xED",Iacute:"\xCD",ic:"\u2063",icirc:"\xEE",Icirc:"\xCE",icy:"\u0438",Icy:"\u0418",Idot:"\u0130",iecy:"\u0435",IEcy:"\u0415",iexcl:"\xA1",iff:"\u21D4",ifr:"\u{1D526}",Ifr:"\u2111",igrave:"\xEC",Igrave:"\xCC",ii:"\u2148",iiiint:"\u2A0C",iiint:"\u222D",iinfin:"\u29DC",iiota:"\u2129",ijlig:"\u0133",IJlig:"\u0132",Im:"\u2111",imacr:"\u012B",Imacr:"\u012A",image:"\u2111",ImaginaryI:"\u2148",imagline:"\u2110",imagpart:"\u2111",imath:"\u0131",imof:"\u22B7",imped:"\u01B5",Implies:"\u21D2",in:"\u2208",incare:"\u2105",infin:"\u221E",infintie:"\u29DD",inodot:"\u0131",int:"\u222B",Int:"\u222C",intcal:"\u22BA",integers:"\u2124",Integral:"\u222B",intercal:"\u22BA",Intersection:"\u22C2",intlarhk:"\u2A17",intprod:"\u2A3C",InvisibleComma:"\u2063",InvisibleTimes:"\u2062",iocy:"\u0451",IOcy:"\u0401",iogon:"\u012F",Iogon:"\u012E",iopf:"\u{1D55A}",Iopf:"\u{1D540}",iota:"\u03B9",Iota:"\u0399",iprod:"\u2A3C",iquest:"\xBF",iscr:"\u{1D4BE}",Iscr:"\u2110",isin:"\u2208",isindot:"\u22F5",isinE:"\u22F9",isins:"\u22F4",isinsv:"\u22F3",isinv:"\u2208",it:"\u2062",itilde:"\u0129",Itilde:"\u0128",iukcy:"\u0456",Iukcy:"\u0406",iuml:"\xEF",Iuml:"\xCF",jcirc:"\u0135",Jcirc:"\u0134",jcy:"\u0439",Jcy:"\u0419",jfr:"\u{1D527}",Jfr:"\u{1D50D}",jmath:"\u0237",jopf:"\u{1D55B}",Jopf:"\u{1D541}",jscr:"\u{1D4BF}",Jscr:"\u{1D4A5}",jsercy:"\u0458",Jsercy:"\u0408",jukcy:"\u0454",Jukcy:"\u0404",kappa:"\u03BA",Kappa:"\u039A",kappav:"\u03F0",kcedil:"\u0137",Kcedil:"\u0136",kcy:"\u043A",Kcy:"\u041A",kfr:"\u{1D528}",Kfr:"\u{1D50E}",kgreen:"\u0138",khcy:"\u0445",KHcy:"\u0425",kjcy:"\u045C",KJcy:"\u040C",kopf:"\u{1D55C}",Kopf:"\u{1D542}",kscr:"\u{1D4C0}",Kscr:"\u{1D4A6}",lAarr:"\u21DA",lacute:"\u013A",Lacute:"\u0139",laemptyv:"\u29B4",lagran:"\u2112",lambda:"\u03BB",Lambda:"\u039B",lang:"\u27E8",Lang:"\u27EA",langd:"\u2991",langle:"\u27E8",lap:"\u2A85",Laplacetrf:"\u2112",laquo:"\xAB",larr:"\u2190",lArr:"\u21D0",Larr:"\u219E",larrb:"\u21E4",larrbfs:"\u291F",larrfs:"\u291D",larrhk:"\u21A9",larrlp:"\u21AB",larrpl:"\u2939",larrsim:"\u2973",larrtl:"\u21A2",lat:"\u2AAB",latail:"\u2919",lAtail:"\u291B",late:"\u2AAD",lates:"\u2AAD\uFE00",lbarr:"\u290C",lBarr:"\u290E",lbbrk:"\u2772",lbrace:"{",lbrack:"[",lbrke:"\u298B",lbrksld:"\u298F",lbrkslu:"\u298D",lcaron:"\u013E",Lcaron:"\u013D",lcedil:"\u013C",Lcedil:"\u013B",lceil:"\u2308",lcub:"{",lcy:"\u043B",Lcy:"\u041B",ldca:"\u2936",ldquo:"\u201C",ldquor:"\u201E",ldrdhar:"\u2967",ldrushar:"\u294B",ldsh:"\u21B2",le:"\u2264",lE:"\u2266",LeftAngleBracket:"\u27E8",leftarrow:"\u2190",Leftarrow:"\u21D0",LeftArrow:"\u2190",LeftArrowBar:"\u21E4",LeftArrowRightArrow:"\u21C6",leftarrowtail:"\u21A2",LeftCeiling:"\u2308",LeftDoubleBracket:"\u27E6",LeftDownTeeVector:"\u2961",LeftDownVector:"\u21C3",LeftDownVectorBar:"\u2959",LeftFloor:"\u230A",leftharpoondown:"\u21BD",leftharpoonup:"\u21BC",leftleftarrows:"\u21C7",leftrightarrow:"\u2194",Leftrightarrow:"\u21D4",LeftRightArrow:"\u2194",leftrightarrows:"\u21C6",leftrightharpoons:"\u21CB",leftrightsquigarrow:"\u21AD",LeftRightVector:"\u294E",LeftTee:"\u22A3",LeftTeeArrow:"\u21A4",LeftTeeVector:"\u295A",leftthreetimes:"\u22CB",LeftTriangle:"\u22B2",LeftTriangleBar:"\u29CF",LeftTriangleEqual:"\u22B4",LeftUpDownVector:"\u2951",LeftUpTeeVector:"\u2960",LeftUpVector:"\u21BF",LeftUpVectorBar:"\u2958",LeftVector:"\u21BC",LeftVectorBar:"\u2952",leg:"\u22DA",lEg:"\u2A8B",leq:"\u2264",leqq:"\u2266",leqslant:"\u2A7D",les:"\u2A7D",lescc:"\u2AA8",lesdot:"\u2A7F",lesdoto:"\u2A81",lesdotor:"\u2A83",lesg:"\u22DA\uFE00",lesges:"\u2A93",lessapprox:"\u2A85",lessdot:"\u22D6",lesseqgtr:"\u22DA",lesseqqgtr:"\u2A8B",LessEqualGreater:"\u22DA",LessFullEqual:"\u2266",LessGreater:"\u2276",lessgtr:"\u2276",LessLess:"\u2AA1",lesssim:"\u2272",LessSlantEqual:"\u2A7D",LessTilde:"\u2272",lfisht:"\u297C",lfloor:"\u230A",lfr:"\u{1D529}",Lfr:"\u{1D50F}",lg:"\u2276",lgE:"\u2A91",lHar:"\u2962",lhard:"\u21BD",lharu:"\u21BC",lharul:"\u296A",lhblk:"\u2584",ljcy:"\u0459",LJcy:"\u0409",ll:"\u226A",Ll:"\u22D8",llarr:"\u21C7",llcorner:"\u231E",Lleftarrow:"\u21DA",llhard:"\u296B",lltri:"\u25FA",lmidot:"\u0140",Lmidot:"\u013F",lmoust:"\u23B0",lmoustache:"\u23B0",lnap:"\u2A89",lnapprox:"\u2A89",lne:"\u2A87",lnE:"\u2268",lneq:"\u2A87",lneqq:"\u2268",lnsim:"\u22E6",loang:"\u27EC",loarr:"\u21FD",lobrk:"\u27E6",longleftarrow:"\u27F5",Longleftarrow:"\u27F8",LongLeftArrow:"\u27F5",longleftrightarrow:"\u27F7",Longleftrightarrow:"\u27FA",LongLeftRightArrow:"\u27F7",longmapsto:"\u27FC",longrightarrow:"\u27F6",Longrightarrow:"\u27F9",LongRightArrow:"\u27F6",looparrowleft:"\u21AB",looparrowright:"\u21AC",lopar:"\u2985",lopf:"\u{1D55D}",Lopf:"\u{1D543}",loplus:"\u2A2D",lotimes:"\u2A34",lowast:"\u2217",lowbar:"_",LowerLeftArrow:"\u2199",LowerRightArrow:"\u2198",loz:"\u25CA",lozenge:"\u25CA",lozf:"\u29EB",lpar:"(",lparlt:"\u2993",lrarr:"\u21C6",lrcorner:"\u231F",lrhar:"\u21CB",lrhard:"\u296D",lrm:"\u200E",lrtri:"\u22BF",lsaquo:"\u2039",lscr:"\u{1D4C1}",Lscr:"\u2112",lsh:"\u21B0",Lsh:"\u21B0",lsim:"\u2272",lsime:"\u2A8D",lsimg:"\u2A8F",lsqb:"[",lsquo:"\u2018",lsquor:"\u201A",lstrok:"\u0142",Lstrok:"\u0141",lt:"<",Lt:"\u226A",LT:"<",ltcc:"\u2AA6",ltcir:"\u2A79",ltdot:"\u22D6",lthree:"\u22CB",ltimes:"\u22C9",ltlarr:"\u2976",ltquest:"\u2A7B",ltri:"\u25C3",ltrie:"\u22B4",ltrif:"\u25C2",ltrPar:"\u2996",lurdshar:"\u294A",luruhar:"\u2966",lvertneqq:"\u2268\uFE00",lvnE:"\u2268\uFE00",macr:"\xAF",male:"\u2642",malt:"\u2720",maltese:"\u2720",map:"\u21A6",Map:"\u2905",mapsto:"\u21A6",mapstodown:"\u21A7",mapstoleft:"\u21A4",mapstoup:"\u21A5",marker:"\u25AE",mcomma:"\u2A29",mcy:"\u043C",Mcy:"\u041C",mdash:"\u2014",mDDot:"\u223A",measuredangle:"\u2221",MediumSpace:"\u205F",Mellintrf:"\u2133",mfr:"\u{1D52A}",Mfr:"\u{1D510}",mho:"\u2127",micro:"\xB5",mid:"\u2223",midast:"*",midcir:"\u2AF0",middot:"\xB7",minus:"\u2212",minusb:"\u229F",minusd:"\u2238",minusdu:"\u2A2A",MinusPlus:"\u2213",mlcp:"\u2ADB",mldr:"\u2026",mnplus:"\u2213",models:"\u22A7",mopf:"\u{1D55E}",Mopf:"\u{1D544}",mp:"\u2213",mscr:"\u{1D4C2}",Mscr:"\u2133",mstpos:"\u223E",mu:"\u03BC",Mu:"\u039C",multimap:"\u22B8",mumap:"\u22B8",nabla:"\u2207",nacute:"\u0144",Nacute:"\u0143",nang:"\u2220\u20D2",nap:"\u2249",napE:"\u2A70\u0338",napid:"\u224B\u0338",napos:"\u0149",napprox:"\u2249",natur:"\u266E",natural:"\u266E",naturals:"\u2115",nbsp:"\xA0",nbump:"\u224E\u0338",nbumpe:"\u224F\u0338",ncap:"\u2A43",ncaron:"\u0148",Ncaron:"\u0147",ncedil:"\u0146",Ncedil:"\u0145",ncong:"\u2247",ncongdot:"\u2A6D\u0338",ncup:"\u2A42",ncy:"\u043D",Ncy:"\u041D",ndash:"\u2013",ne:"\u2260",nearhk:"\u2924",nearr:"\u2197",neArr:"\u21D7",nearrow:"\u2197",nedot:"\u2250\u0338",NegativeMediumSpace:"\u200B",NegativeThickSpace:"\u200B",NegativeThinSpace:"\u200B",NegativeVeryThinSpace:"\u200B",nequiv:"\u2262",nesear:"\u2928",nesim:"\u2242\u0338",NestedGreaterGreater:"\u226B",NestedLessLess:"\u226A",NewLine:`
`,nexist:"\u2204",nexists:"\u2204",nfr:"\u{1D52B}",Nfr:"\u{1D511}",nge:"\u2271",ngE:"\u2267\u0338",ngeq:"\u2271",ngeqq:"\u2267\u0338",ngeqslant:"\u2A7E\u0338",nges:"\u2A7E\u0338",nGg:"\u22D9\u0338",ngsim:"\u2275",ngt:"\u226F",nGt:"\u226B\u20D2",ngtr:"\u226F",nGtv:"\u226B\u0338",nharr:"\u21AE",nhArr:"\u21CE",nhpar:"\u2AF2",ni:"\u220B",nis:"\u22FC",nisd:"\u22FA",niv:"\u220B",njcy:"\u045A",NJcy:"\u040A",nlarr:"\u219A",nlArr:"\u21CD",nldr:"\u2025",nle:"\u2270",nlE:"\u2266\u0338",nleftarrow:"\u219A",nLeftarrow:"\u21CD",nleftrightarrow:"\u21AE",nLeftrightarrow:"\u21CE",nleq:"\u2270",nleqq:"\u2266\u0338",nleqslant:"\u2A7D\u0338",nles:"\u2A7D\u0338",nless:"\u226E",nLl:"\u22D8\u0338",nlsim:"\u2274",nlt:"\u226E",nLt:"\u226A\u20D2",nltri:"\u22EA",nltrie:"\u22EC",nLtv:"\u226A\u0338",nmid:"\u2224",NoBreak:"\u2060",NonBreakingSpace:"\xA0",nopf:"\u{1D55F}",Nopf:"\u2115",not:"\xAC",Not:"\u2AEC",NotCongruent:"\u2262",NotCupCap:"\u226D",NotDoubleVerticalBar:"\u2226",NotElement:"\u2209",NotEqual:"\u2260",NotEqualTilde:"\u2242\u0338",NotExists:"\u2204",NotGreater:"\u226F",NotGreaterEqual:"\u2271",NotGreaterFullEqual:"\u2267\u0338",NotGreaterGreater:"\u226B\u0338",NotGreaterLess:"\u2279",NotGreaterSlantEqual:"\u2A7E\u0338",NotGreaterTilde:"\u2275",NotHumpDownHump:"\u224E\u0338",NotHumpEqual:"\u224F\u0338",notin:"\u2209",notindot:"\u22F5\u0338",notinE:"\u22F9\u0338",notinva:"\u2209",notinvb:"\u22F7",notinvc:"\u22F6",NotLeftTriangle:"\u22EA",NotLeftTriangleBar:"\u29CF\u0338",NotLeftTriangleEqual:"\u22EC",NotLess:"\u226E",NotLessEqual:"\u2270",NotLessGreater:"\u2278",NotLessLess:"\u226A\u0338",NotLessSlantEqual:"\u2A7D\u0338",NotLessTilde:"\u2274",NotNestedGreaterGreater:"\u2AA2\u0338",NotNestedLessLess:"\u2AA1\u0338",notni:"\u220C",notniva:"\u220C",notnivb:"\u22FE",notnivc:"\u22FD",NotPrecedes:"\u2280",NotPrecedesEqual:"\u2AAF\u0338",NotPrecedesSlantEqual:"\u22E0",NotReverseElement:"\u220C",NotRightTriangle:"\u22EB",NotRightTriangleBar:"\u29D0\u0338",NotRightTriangleEqual:"\u22ED",NotSquareSubset:"\u228F\u0338",NotSquareSubsetEqual:"\u22E2",NotSquareSuperset:"\u2290\u0338",NotSquareSupersetEqual:"\u22E3",NotSubset:"\u2282\u20D2",NotSubsetEqual:"\u2288",NotSucceeds:"\u2281",NotSucceedsEqual:"\u2AB0\u0338",NotSucceedsSlantEqual:"\u22E1",NotSucceedsTilde:"\u227F\u0338",NotSuperset:"\u2283\u20D2",NotSupersetEqual:"\u2289",NotTilde:"\u2241",NotTildeEqual:"\u2244",NotTildeFullEqual:"\u2247",NotTildeTilde:"\u2249",NotVerticalBar:"\u2224",npar:"\u2226",nparallel:"\u2226",nparsl:"\u2AFD\u20E5",npart:"\u2202\u0338",npolint:"\u2A14",npr:"\u2280",nprcue:"\u22E0",npre:"\u2AAF\u0338",nprec:"\u2280",npreceq:"\u2AAF\u0338",nrarr:"\u219B",nrArr:"\u21CF",nrarrc:"\u2933\u0338",nrarrw:"\u219D\u0338",nrightarrow:"\u219B",nRightarrow:"\u21CF",nrtri:"\u22EB",nrtrie:"\u22ED",nsc:"\u2281",nsccue:"\u22E1",nsce:"\u2AB0\u0338",nscr:"\u{1D4C3}",Nscr:"\u{1D4A9}",nshortmid:"\u2224",nshortparallel:"\u2226",nsim:"\u2241",nsime:"\u2244",nsimeq:"\u2244",nsmid:"\u2224",nspar:"\u2226",nsqsube:"\u22E2",nsqsupe:"\u22E3",nsub:"\u2284",nsube:"\u2288",nsubE:"\u2AC5\u0338",nsubset:"\u2282\u20D2",nsubseteq:"\u2288",nsubseteqq:"\u2AC5\u0338",nsucc:"\u2281",nsucceq:"\u2AB0\u0338",nsup:"\u2285",nsupe:"\u2289",nsupE:"\u2AC6\u0338",nsupset:"\u2283\u20D2",nsupseteq:"\u2289",nsupseteqq:"\u2AC6\u0338",ntgl:"\u2279",ntilde:"\xF1",Ntilde:"\xD1",ntlg:"\u2278",ntriangleleft:"\u22EA",ntrianglelefteq:"\u22EC",ntriangleright:"\u22EB",ntrianglerighteq:"\u22ED",nu:"\u03BD",Nu:"\u039D",num:"#",numero:"\u2116",numsp:"\u2007",nvap:"\u224D\u20D2",nvdash:"\u22AC",nvDash:"\u22AD",nVdash:"\u22AE",nVDash:"\u22AF",nvge:"\u2265\u20D2",nvgt:">\u20D2",nvHarr:"\u2904",nvinfin:"\u29DE",nvlArr:"\u2902",nvle:"\u2264\u20D2",nvlt:"<\u20D2",nvltrie:"\u22B4\u20D2",nvrArr:"\u2903",nvrtrie:"\u22B5\u20D2",nvsim:"\u223C\u20D2",nwarhk:"\u2923",nwarr:"\u2196",nwArr:"\u21D6",nwarrow:"\u2196",nwnear:"\u2927",oacute:"\xF3",Oacute:"\xD3",oast:"\u229B",ocir:"\u229A",ocirc:"\xF4",Ocirc:"\xD4",ocy:"\u043E",Ocy:"\u041E",odash:"\u229D",odblac:"\u0151",Odblac:"\u0150",odiv:"\u2A38",odot:"\u2299",odsold:"\u29BC",oelig:"\u0153",OElig:"\u0152",ofcir:"\u29BF",ofr:"\u{1D52C}",Ofr:"\u{1D512}",ogon:"\u02DB",ograve:"\xF2",Ograve:"\xD2",ogt:"\u29C1",ohbar:"\u29B5",ohm:"\u03A9",oint:"\u222E",olarr:"\u21BA",olcir:"\u29BE",olcross:"\u29BB",oline:"\u203E",olt:"\u29C0",omacr:"\u014D",Omacr:"\u014C",omega:"\u03C9",Omega:"\u03A9",omicron:"\u03BF",Omicron:"\u039F",omid:"\u29B6",ominus:"\u2296",oopf:"\u{1D560}",Oopf:"\u{1D546}",opar:"\u29B7",OpenCurlyDoubleQuote:"\u201C",OpenCurlyQuote:"\u2018",operp:"\u29B9",oplus:"\u2295",or:"\u2228",Or:"\u2A54",orarr:"\u21BB",ord:"\u2A5D",order:"\u2134",orderof:"\u2134",ordf:"\xAA",ordm:"\xBA",origof:"\u22B6",oror:"\u2A56",orslope:"\u2A57",orv:"\u2A5B",oS:"\u24C8",oscr:"\u2134",Oscr:"\u{1D4AA}",oslash:"\xF8",Oslash:"\xD8",osol:"\u2298",otilde:"\xF5",Otilde:"\xD5",otimes:"\u2297",Otimes:"\u2A37",otimesas:"\u2A36",ouml:"\xF6",Ouml:"\xD6",ovbar:"\u233D",OverBar:"\u203E",OverBrace:"\u23DE",OverBracket:"\u23B4",OverParenthesis:"\u23DC",par:"\u2225",para:"\xB6",parallel:"\u2225",parsim:"\u2AF3",parsl:"\u2AFD",part:"\u2202",PartialD:"\u2202",pcy:"\u043F",Pcy:"\u041F",percnt:"%",period:".",permil:"\u2030",perp:"\u22A5",pertenk:"\u2031",pfr:"\u{1D52D}",Pfr:"\u{1D513}",phi:"\u03C6",Phi:"\u03A6",phiv:"\u03D5",phmmat:"\u2133",phone:"\u260E",pi:"\u03C0",Pi:"\u03A0",pitchfork:"\u22D4",piv:"\u03D6",planck:"\u210F",planckh:"\u210E",plankv:"\u210F",plus:"+",plusacir:"\u2A23",plusb:"\u229E",pluscir:"\u2A22",plusdo:"\u2214",plusdu:"\u2A25",pluse:"\u2A72",PlusMinus:"\xB1",plusmn:"\xB1",plussim:"\u2A26",plustwo:"\u2A27",pm:"\xB1",Poincareplane:"\u210C",pointint:"\u2A15",popf:"\u{1D561}",Popf:"\u2119",pound:"\xA3",pr:"\u227A",Pr:"\u2ABB",prap:"\u2AB7",prcue:"\u227C",pre:"\u2AAF",prE:"\u2AB3",prec:"\u227A",precapprox:"\u2AB7",preccurlyeq:"\u227C",Precedes:"\u227A",PrecedesEqual:"\u2AAF",PrecedesSlantEqual:"\u227C",PrecedesTilde:"\u227E",preceq:"\u2AAF",precnapprox:"\u2AB9",precneqq:"\u2AB5",precnsim:"\u22E8",precsim:"\u227E",prime:"\u2032",Prime:"\u2033",primes:"\u2119",prnap:"\u2AB9",prnE:"\u2AB5",prnsim:"\u22E8",prod:"\u220F",Product:"\u220F",profalar:"\u232E",profline:"\u2312",profsurf:"\u2313",prop:"\u221D",Proportion:"\u2237",Proportional:"\u221D",propto:"\u221D",prsim:"\u227E",prurel:"\u22B0",pscr:"\u{1D4C5}",Pscr:"\u{1D4AB}",psi:"\u03C8",Psi:"\u03A8",puncsp:"\u2008",qfr:"\u{1D52E}",Qfr:"\u{1D514}",qint:"\u2A0C",qopf:"\u{1D562}",Qopf:"\u211A",qprime:"\u2057",qscr:"\u{1D4C6}",Qscr:"\u{1D4AC}",quaternions:"\u210D",quatint:"\u2A16",quest:"?",questeq:"\u225F",quot:'"',QUOT:'"',rAarr:"\u21DB",race:"\u223D\u0331",racute:"\u0155",Racute:"\u0154",radic:"\u221A",raemptyv:"\u29B3",rang:"\u27E9",Rang:"\u27EB",rangd:"\u2992",range:"\u29A5",rangle:"\u27E9",raquo:"\xBB",rarr:"\u2192",rArr:"\u21D2",Rarr:"\u21A0",rarrap:"\u2975",rarrb:"\u21E5",rarrbfs:"\u2920",rarrc:"\u2933",rarrfs:"\u291E",rarrhk:"\u21AA",rarrlp:"\u21AC",rarrpl:"\u2945",rarrsim:"\u2974",rarrtl:"\u21A3",Rarrtl:"\u2916",rarrw:"\u219D",ratail:"\u291A",rAtail:"\u291C",ratio:"\u2236",rationals:"\u211A",rbarr:"\u290D",rBarr:"\u290F",RBarr:"\u2910",rbbrk:"\u2773",rbrace:"}",rbrack:"]",rbrke:"\u298C",rbrksld:"\u298E",rbrkslu:"\u2990",rcaron:"\u0159",Rcaron:"\u0158",rcedil:"\u0157",Rcedil:"\u0156",rceil:"\u2309",rcub:"}",rcy:"\u0440",Rcy:"\u0420",rdca:"\u2937",rdldhar:"\u2969",rdquo:"\u201D",rdquor:"\u201D",rdsh:"\u21B3",Re:"\u211C",real:"\u211C",realine:"\u211B",realpart:"\u211C",reals:"\u211D",rect:"\u25AD",reg:"\xAE",REG:"\xAE",ReverseElement:"\u220B",ReverseEquilibrium:"\u21CB",ReverseUpEquilibrium:"\u296F",rfisht:"\u297D",rfloor:"\u230B",rfr:"\u{1D52F}",Rfr:"\u211C",rHar:"\u2964",rhard:"\u21C1",rharu:"\u21C0",rharul:"\u296C",rho:"\u03C1",Rho:"\u03A1",rhov:"\u03F1",RightAngleBracket:"\u27E9",rightarrow:"\u2192",Rightarrow:"\u21D2",RightArrow:"\u2192",RightArrowBar:"\u21E5",RightArrowLeftArrow:"\u21C4",rightarrowtail:"\u21A3",RightCeiling:"\u2309",RightDoubleBracket:"\u27E7",RightDownTeeVector:"\u295D",RightDownVector:"\u21C2",RightDownVectorBar:"\u2955",RightFloor:"\u230B",rightharpoondown:"\u21C1",rightharpoonup:"\u21C0",rightleftarrows:"\u21C4",rightleftharpoons:"\u21CC",rightrightarrows:"\u21C9",rightsquigarrow:"\u219D",RightTee:"\u22A2",RightTeeArrow:"\u21A6",RightTeeVector:"\u295B",rightthreetimes:"\u22CC",RightTriangle:"\u22B3",RightTriangleBar:"\u29D0",RightTriangleEqual:"\u22B5",RightUpDownVector:"\u294F",RightUpTeeVector:"\u295C",RightUpVector:"\u21BE",RightUpVectorBar:"\u2954",RightVector:"\u21C0",RightVectorBar:"\u2953",ring:"\u02DA",risingdotseq:"\u2253",rlarr:"\u21C4",rlhar:"\u21CC",rlm:"\u200F",rmoust:"\u23B1",rmoustache:"\u23B1",rnmid:"\u2AEE",roang:"\u27ED",roarr:"\u21FE",robrk:"\u27E7",ropar:"\u2986",ropf:"\u{1D563}",Ropf:"\u211D",roplus:"\u2A2E",rotimes:"\u2A35",RoundImplies:"\u2970",rpar:")",rpargt:"\u2994",rppolint:"\u2A12",rrarr:"\u21C9",Rrightarrow:"\u21DB",rsaquo:"\u203A",rscr:"\u{1D4C7}",Rscr:"\u211B",rsh:"\u21B1",Rsh:"\u21B1",rsqb:"]",rsquo:"\u2019",rsquor:"\u2019",rthree:"\u22CC",rtimes:"\u22CA",rtri:"\u25B9",rtrie:"\u22B5",rtrif:"\u25B8",rtriltri:"\u29CE",RuleDelayed:"\u29F4",ruluhar:"\u2968",rx:"\u211E",sacute:"\u015B",Sacute:"\u015A",sbquo:"\u201A",sc:"\u227B",Sc:"\u2ABC",scap:"\u2AB8",scaron:"\u0161",Scaron:"\u0160",sccue:"\u227D",sce:"\u2AB0",scE:"\u2AB4",scedil:"\u015F",Scedil:"\u015E",scirc:"\u015D",Scirc:"\u015C",scnap:"\u2ABA",scnE:"\u2AB6",scnsim:"\u22E9",scpolint:"\u2A13",scsim:"\u227F",scy:"\u0441",Scy:"\u0421",sdot:"\u22C5",sdotb:"\u22A1",sdote:"\u2A66",searhk:"\u2925",searr:"\u2198",seArr:"\u21D8",searrow:"\u2198",sect:"\xA7",semi:";",seswar:"\u2929",setminus:"\u2216",setmn:"\u2216",sext:"\u2736",sfr:"\u{1D530}",Sfr:"\u{1D516}",sfrown:"\u2322",sharp:"\u266F",shchcy:"\u0449",SHCHcy:"\u0429",shcy:"\u0448",SHcy:"\u0428",ShortDownArrow:"\u2193",ShortLeftArrow:"\u2190",shortmid:"\u2223",shortparallel:"\u2225",ShortRightArrow:"\u2192",ShortUpArrow:"\u2191",shy:"\xAD",sigma:"\u03C3",Sigma:"\u03A3",sigmaf:"\u03C2",sigmav:"\u03C2",sim:"\u223C",simdot:"\u2A6A",sime:"\u2243",simeq:"\u2243",simg:"\u2A9E",simgE:"\u2AA0",siml:"\u2A9D",simlE:"\u2A9F",simne:"\u2246",simplus:"\u2A24",simrarr:"\u2972",slarr:"\u2190",SmallCircle:"\u2218",smallsetminus:"\u2216",smashp:"\u2A33",smeparsl:"\u29E4",smid:"\u2223",smile:"\u2323",smt:"\u2AAA",smte:"\u2AAC",smtes:"\u2AAC\uFE00",softcy:"\u044C",SOFTcy:"\u042C",sol:"/",solb:"\u29C4",solbar:"\u233F",sopf:"\u{1D564}",Sopf:"\u{1D54A}",spades:"\u2660",spadesuit:"\u2660",spar:"\u2225",sqcap:"\u2293",sqcaps:"\u2293\uFE00",sqcup:"\u2294",sqcups:"\u2294\uFE00",Sqrt:"\u221A",sqsub:"\u228F",sqsube:"\u2291",sqsubset:"\u228F",sqsubseteq:"\u2291",sqsup:"\u2290",sqsupe:"\u2292",sqsupset:"\u2290",sqsupseteq:"\u2292",squ:"\u25A1",square:"\u25A1",Square:"\u25A1",SquareIntersection:"\u2293",SquareSubset:"\u228F",SquareSubsetEqual:"\u2291",SquareSuperset:"\u2290",SquareSupersetEqual:"\u2292",SquareUnion:"\u2294",squarf:"\u25AA",squf:"\u25AA",srarr:"\u2192",sscr:"\u{1D4C8}",Sscr:"\u{1D4AE}",ssetmn:"\u2216",ssmile:"\u2323",sstarf:"\u22C6",star:"\u2606",Star:"\u22C6",starf:"\u2605",straightepsilon:"\u03F5",straightphi:"\u03D5",strns:"\xAF",sub:"\u2282",Sub:"\u22D0",subdot:"\u2ABD",sube:"\u2286",subE:"\u2AC5",subedot:"\u2AC3",submult:"\u2AC1",subne:"\u228A",subnE:"\u2ACB",subplus:"\u2ABF",subrarr:"\u2979",subset:"\u2282",Subset:"\u22D0",subseteq:"\u2286",subseteqq:"\u2AC5",SubsetEqual:"\u2286",subsetneq:"\u228A",subsetneqq:"\u2ACB",subsim:"\u2AC7",subsub:"\u2AD5",subsup:"\u2AD3",succ:"\u227B",succapprox:"\u2AB8",succcurlyeq:"\u227D",Succeeds:"\u227B",SucceedsEqual:"\u2AB0",SucceedsSlantEqual:"\u227D",SucceedsTilde:"\u227F",succeq:"\u2AB0",succnapprox:"\u2ABA",succneqq:"\u2AB6",succnsim:"\u22E9",succsim:"\u227F",SuchThat:"\u220B",sum:"\u2211",Sum:"\u2211",sung:"\u266A",sup:"\u2283",Sup:"\u22D1",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",supdot:"\u2ABE",supdsub:"\u2AD8",supe:"\u2287",supE:"\u2AC6",supedot:"\u2AC4",Superset:"\u2283",SupersetEqual:"\u2287",suphsol:"\u27C9",suphsub:"\u2AD7",suplarr:"\u297B",supmult:"\u2AC2",supne:"\u228B",supnE:"\u2ACC",supplus:"\u2AC0",supset:"\u2283",Supset:"\u22D1",supseteq:"\u2287",supseteqq:"\u2AC6",supsetneq:"\u228B",supsetneqq:"\u2ACC",supsim:"\u2AC8",supsub:"\u2AD4",supsup:"\u2AD6",swarhk:"\u2926",swarr:"\u2199",swArr:"\u21D9",swarrow:"\u2199",swnwar:"\u292A",szlig:"\xDF",Tab:"	",target:"\u2316",tau:"\u03C4",Tau:"\u03A4",tbrk:"\u23B4",tcaron:"\u0165",Tcaron:"\u0164",tcedil:"\u0163",Tcedil:"\u0162",tcy:"\u0442",Tcy:"\u0422",tdot:"\u20DB",telrec:"\u2315",tfr:"\u{1D531}",Tfr:"\u{1D517}",there4:"\u2234",therefore:"\u2234",Therefore:"\u2234",theta:"\u03B8",Theta:"\u0398",thetasym:"\u03D1",thetav:"\u03D1",thickapprox:"\u2248",thicksim:"\u223C",ThickSpace:"\u205F\u200A",thinsp:"\u2009",ThinSpace:"\u2009",thkap:"\u2248",thksim:"\u223C",thorn:"\xFE",THORN:"\xDE",tilde:"\u02DC",Tilde:"\u223C",TildeEqual:"\u2243",TildeFullEqual:"\u2245",TildeTilde:"\u2248",times:"\xD7",timesb:"\u22A0",timesbar:"\u2A31",timesd:"\u2A30",tint:"\u222D",toea:"\u2928",top:"\u22A4",topbot:"\u2336",topcir:"\u2AF1",topf:"\u{1D565}",Topf:"\u{1D54B}",topfork:"\u2ADA",tosa:"\u2929",tprime:"\u2034",trade:"\u2122",TRADE:"\u2122",triangle:"\u25B5",triangledown:"\u25BF",triangleleft:"\u25C3",trianglelefteq:"\u22B4",triangleq:"\u225C",triangleright:"\u25B9",trianglerighteq:"\u22B5",tridot:"\u25EC",trie:"\u225C",triminus:"\u2A3A",TripleDot:"\u20DB",triplus:"\u2A39",trisb:"\u29CD",tritime:"\u2A3B",trpezium:"\u23E2",tscr:"\u{1D4C9}",Tscr:"\u{1D4AF}",tscy:"\u0446",TScy:"\u0426",tshcy:"\u045B",TSHcy:"\u040B",tstrok:"\u0167",Tstrok:"\u0166",twixt:"\u226C",twoheadleftarrow:"\u219E",twoheadrightarrow:"\u21A0",uacute:"\xFA",Uacute:"\xDA",uarr:"\u2191",uArr:"\u21D1",Uarr:"\u219F",Uarrocir:"\u2949",ubrcy:"\u045E",Ubrcy:"\u040E",ubreve:"\u016D",Ubreve:"\u016C",ucirc:"\xFB",Ucirc:"\xDB",ucy:"\u0443",Ucy:"\u0423",udarr:"\u21C5",udblac:"\u0171",Udblac:"\u0170",udhar:"\u296E",ufisht:"\u297E",ufr:"\u{1D532}",Ufr:"\u{1D518}",ugrave:"\xF9",Ugrave:"\xD9",uHar:"\u2963",uharl:"\u21BF",uharr:"\u21BE",uhblk:"\u2580",ulcorn:"\u231C",ulcorner:"\u231C",ulcrop:"\u230F",ultri:"\u25F8",umacr:"\u016B",Umacr:"\u016A",uml:"\xA8",UnderBar:"_",UnderBrace:"\u23DF",UnderBracket:"\u23B5",UnderParenthesis:"\u23DD",Union:"\u22C3",UnionPlus:"\u228E",uogon:"\u0173",Uogon:"\u0172",uopf:"\u{1D566}",Uopf:"\u{1D54C}",uparrow:"\u2191",Uparrow:"\u21D1",UpArrow:"\u2191",UpArrowBar:"\u2912",UpArrowDownArrow:"\u21C5",updownarrow:"\u2195",Updownarrow:"\u21D5",UpDownArrow:"\u2195",UpEquilibrium:"\u296E",upharpoonleft:"\u21BF",upharpoonright:"\u21BE",uplus:"\u228E",UpperLeftArrow:"\u2196",UpperRightArrow:"\u2197",upsi:"\u03C5",Upsi:"\u03D2",upsih:"\u03D2",upsilon:"\u03C5",Upsilon:"\u03A5",UpTee:"\u22A5",UpTeeArrow:"\u21A5",upuparrows:"\u21C8",urcorn:"\u231D",urcorner:"\u231D",urcrop:"\u230E",uring:"\u016F",Uring:"\u016E",urtri:"\u25F9",uscr:"\u{1D4CA}",Uscr:"\u{1D4B0}",utdot:"\u22F0",utilde:"\u0169",Utilde:"\u0168",utri:"\u25B5",utrif:"\u25B4",uuarr:"\u21C8",uuml:"\xFC",Uuml:"\xDC",uwangle:"\u29A7",vangrt:"\u299C",varepsilon:"\u03F5",varkappa:"\u03F0",varnothing:"\u2205",varphi:"\u03D5",varpi:"\u03D6",varpropto:"\u221D",varr:"\u2195",vArr:"\u21D5",varrho:"\u03F1",varsigma:"\u03C2",varsubsetneq:"\u228A\uFE00",varsubsetneqq:"\u2ACB\uFE00",varsupsetneq:"\u228B\uFE00",varsupsetneqq:"\u2ACC\uFE00",vartheta:"\u03D1",vartriangleleft:"\u22B2",vartriangleright:"\u22B3",vBar:"\u2AE8",Vbar:"\u2AEB",vBarv:"\u2AE9",vcy:"\u0432",Vcy:"\u0412",vdash:"\u22A2",vDash:"\u22A8",Vdash:"\u22A9",VDash:"\u22AB",Vdashl:"\u2AE6",vee:"\u2228",Vee:"\u22C1",veebar:"\u22BB",veeeq:"\u225A",vellip:"\u22EE",verbar:"|",Verbar:"\u2016",vert:"|",Vert:"\u2016",VerticalBar:"\u2223",VerticalLine:"|",VerticalSeparator:"\u2758",VerticalTilde:"\u2240",VeryThinSpace:"\u200A",vfr:"\u{1D533}",Vfr:"\u{1D519}",vltri:"\u22B2",vnsub:"\u2282\u20D2",vnsup:"\u2283\u20D2",vopf:"\u{1D567}",Vopf:"\u{1D54D}",vprop:"\u221D",vrtri:"\u22B3",vscr:"\u{1D4CB}",Vscr:"\u{1D4B1}",vsubne:"\u228A\uFE00",vsubnE:"\u2ACB\uFE00",vsupne:"\u228B\uFE00",vsupnE:"\u2ACC\uFE00",Vvdash:"\u22AA",vzigzag:"\u299A",wcirc:"\u0175",Wcirc:"\u0174",wedbar:"\u2A5F",wedge:"\u2227",Wedge:"\u22C0",wedgeq:"\u2259",weierp:"\u2118",wfr:"\u{1D534}",Wfr:"\u{1D51A}",wopf:"\u{1D568}",Wopf:"\u{1D54E}",wp:"\u2118",wr:"\u2240",wreath:"\u2240",wscr:"\u{1D4CC}",Wscr:"\u{1D4B2}",xcap:"\u22C2",xcirc:"\u25EF",xcup:"\u22C3",xdtri:"\u25BD",xfr:"\u{1D535}",Xfr:"\u{1D51B}",xharr:"\u27F7",xhArr:"\u27FA",xi:"\u03BE",Xi:"\u039E",xlarr:"\u27F5",xlArr:"\u27F8",xmap:"\u27FC",xnis:"\u22FB",xodot:"\u2A00",xopf:"\u{1D569}",Xopf:"\u{1D54F}",xoplus:"\u2A01",xotime:"\u2A02",xrarr:"\u27F6",xrArr:"\u27F9",xscr:"\u{1D4CD}",Xscr:"\u{1D4B3}",xsqcup:"\u2A06",xuplus:"\u2A04",xutri:"\u25B3",xvee:"\u22C1",xwedge:"\u22C0",yacute:"\xFD",Yacute:"\xDD",yacy:"\u044F",YAcy:"\u042F",ycirc:"\u0177",Ycirc:"\u0176",ycy:"\u044B",Ycy:"\u042B",yen:"\xA5",yfr:"\u{1D536}",Yfr:"\u{1D51C}",yicy:"\u0457",YIcy:"\u0407",yopf:"\u{1D56A}",Yopf:"\u{1D550}",yscr:"\u{1D4CE}",Yscr:"\u{1D4B4}",yucy:"\u044E",YUcy:"\u042E",yuml:"\xFF",Yuml:"\u0178",zacute:"\u017A",Zacute:"\u0179",zcaron:"\u017E",Zcaron:"\u017D",zcy:"\u0437",Zcy:"\u0417",zdot:"\u017C",Zdot:"\u017B",zeetrf:"\u2128",ZeroWidthSpace:"\u200B",zeta:"\u03B6",Zeta:"\u0396",zfr:"\u{1D537}",Zfr:"\u2128",zhcy:"\u0436",ZHcy:"\u0416",zigrarr:"\u21DD",zopf:"\u{1D56B}",Zopf:"\u2124",zscr:"\u{1D4CF}",Zscr:"\u{1D4B5}",zwj:"\u200D",zwnj:"\u200C"},_={aacute:"\xE1",Aacute:"\xC1",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",aelig:"\xE6",AElig:"\xC6",agrave:"\xE0",Agrave:"\xC0",amp:"&",AMP:"&",aring:"\xE5",Aring:"\xC5",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",brvbar:"\xA6",ccedil:"\xE7",Ccedil:"\xC7",cedil:"\xB8",cent:"\xA2",copy:"\xA9",COPY:"\xA9",curren:"\xA4",deg:"\xB0",divide:"\xF7",eacute:"\xE9",Eacute:"\xC9",ecirc:"\xEA",Ecirc:"\xCA",egrave:"\xE8",Egrave:"\xC8",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",frac12:"\xBD",frac14:"\xBC",frac34:"\xBE",gt:">",GT:">",iacute:"\xED",Iacute:"\xCD",icirc:"\xEE",Icirc:"\xCE",iexcl:"\xA1",igrave:"\xEC",Igrave:"\xCC",iquest:"\xBF",iuml:"\xEF",Iuml:"\xCF",laquo:"\xAB",lt:"<",LT:"<",macr:"\xAF",micro:"\xB5",middot:"\xB7",nbsp:"\xA0",not:"\xAC",ntilde:"\xF1",Ntilde:"\xD1",oacute:"\xF3",Oacute:"\xD3",ocirc:"\xF4",Ocirc:"\xD4",ograve:"\xF2",Ograve:"\xD2",ordf:"\xAA",ordm:"\xBA",oslash:"\xF8",Oslash:"\xD8",otilde:"\xF5",Otilde:"\xD5",ouml:"\xF6",Ouml:"\xD6",para:"\xB6",plusmn:"\xB1",pound:"\xA3",quot:'"',QUOT:'"',raquo:"\xBB",reg:"\xAE",REG:"\xAE",sect:"\xA7",shy:"\xAD",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",szlig:"\xDF",thorn:"\xFE",THORN:"\xDE",times:"\xD7",uacute:"\xFA",Uacute:"\xDA",ucirc:"\xFB",Ucirc:"\xDB",ugrave:"\xF9",Ugrave:"\xD9",uml:"\xA8",uuml:"\xFC",Uuml:"\xDC",yacute:"\xFD",Yacute:"\xDD",yen:"\xA5",yuml:"\xFF"},g={"0":"\uFFFD","128":"\u20AC","130":"\u201A","131":"\u0192","132":"\u201E","133":"\u2026","134":"\u2020","135":"\u2021","136":"\u02C6","137":"\u2030","138":"\u0160","139":"\u2039","140":"\u0152","142":"\u017D","145":"\u2018","146":"\u2019","147":"\u201C","148":"\u201D","149":"\u2022","150":"\u2013","151":"\u2014","152":"\u02DC","153":"\u2122","154":"\u0161","155":"\u203A","156":"\u0153","158":"\u017E","159":"\u0178"},S=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],C=String.fromCharCode,T={},M=T.hasOwnProperty,k=function(Y,z){return M.call(Y,z)},E=function(Y,z){for(var K=-1,ye=Y.length;++K<ye;)if(Y[K]==z)return!0;return!1},b=function(Y,z){if(!Y)return z;var K={},ye;for(ye in z)K[ye]=k(Y,ye)?Y[ye]:z[ye];return K},N=function(Y,z){var K="";return Y>=55296&&Y<=57343||Y>1114111?(z&&O("character reference outside the permissible Unicode range"),"\uFFFD"):k(g,Y)?(z&&O("disallowed character reference"),g[Y]):(z&&E(S,Y)&&O("disallowed character reference"),Y>65535&&(Y-=65536,K+=C(Y>>>10&1023|55296),Y=56320|Y&1023),K+=C(Y),K)},x=function(Y){return"&#x"+Y.toString(16).toUpperCase()+";"},L=function(Y){return"&#"+Y+";"},O=function(Y){throw Error("Parse error: "+Y)},U=function(Y,z){z=b(z,U.options);var K=z.strict;K&&h.test(Y)&&O("forbidden code point");var ye=z.encodeEverything,ue=z.useNamedReferences,Me=z.allowUnsafeSymbols,We=z.decimal?L:x,rt=function(Pe){return We(Pe.charCodeAt(0))};return ye?(Y=Y.replace(i,function(Pe){return ue&&k(s,Pe)?"&"+s[Pe]+";":rt(Pe)}),ue&&(Y=Y.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),ue&&(Y=Y.replace(l,function(Pe){return"&"+s[Pe]+";"}))):ue?(Me||(Y=Y.replace(d,function(Pe){return"&"+s[Pe]+";"})),Y=Y.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;"),Y=Y.replace(l,function(Pe){return"&"+s[Pe]+";"})):Me||(Y=Y.replace(d,rt)),Y.replace(a,function(Pe){var lt=Pe.charCodeAt(0),et=Pe.charCodeAt(1),Ae=(lt-55296)*1024+et-56320+65536;return We(Ae)}).replace(o,rt)};U.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var te=function(Y,z){z=b(z,te.options);var K=z.strict;return K&&c.test(Y)&&O("malformed character reference"),Y.replace(v,function(ye,ue,Me,We,rt,Pe,lt,et,Ae){var je,St,Ht,It,xt,Ot;return ue?(xt=ue,m[xt]):Me?(xt=Me,Ot=We,Ot&&z.isAttributeValue?(K&&Ot=="="&&O("`&` did not start a character reference"),ye):(K&&O("named character reference was not terminated by a semicolon"),_[xt]+(Ot||""))):rt?(Ht=rt,St=Pe,K&&!St&&O("character reference was not terminated by a semicolon"),je=parseInt(Ht,10),N(je,K)):lt?(It=lt,St=et,K&&!St&&O("character reference was not terminated by a semicolon"),je=parseInt(It,16),N(je,K)):(K&&O("named character reference was not terminated by a semicolon"),ye)})};te.options={isAttributeValue:!1,strict:!1};var he=function(Y){return Y.replace(d,function(z){return u[z]})},ee={version:"1.2.0",encode:U,decode:te,escape:he,unescape:te};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd)define(function(){return ee});else if(e&&!e.nodeType)if(n)n.exports=ee;else for(var se in ee)k(ee,se)&&(e[se]=ee[se]);else t.he=ee})(Fa)});var hd=Ze((oa,sa)=>{(function(t,e){if(typeof oa=="object"){var n=e();typeof sa=="object"&&sa&&sa.exports&&(oa=sa.exports=n),oa.randomColor=n}else typeof define=="function"&&define.amd?define([],e):t.randomColor=e()})(oa,function(){var t=null,e={};_();var n=[],r=function(k){if(k=k||{},k.seed!==void 0&&k.seed!==null&&k.seed===parseInt(k.seed,10))t=k.seed;else if(typeof k.seed=="string")t=T(k.seed);else{if(k.seed!==void 0&&k.seed!==null)throw new TypeError("The seed value must be an integer or string");t=null}var E,b,N;if(k.count!==null&&k.count!==void 0){for(var x=k.count,L=[],O=0;O<k.count;O++)n.push(!1);for(k.count=null;x>L.length;){var U=r(k);t!==null&&(k.seed=t),L.push(U)}return k.count=x,L}return E=a(k),b=i(E,k),N=o(E,b,k),l([E,b,N],k)};function a(k){if(n.length>0){var E=M(k.hue),b=h(E),N=(E[1]-E[0])/n.length,x=parseInt((b-E[0])/N);n[x]===!0?x=(x+2)%n.length:n[x]=!0;var L=(E[0]+x*N)%359,O=(E[0]+(x+1)*N)%359;return E=[L,O],b=h(E),b<0&&(b=360+b),b}else{var E=d(k.hue);return b=h(E),b<0&&(b=360+b),b}}function i(k,E){if(E.hue==="monochrome")return 0;if(E.luminosity==="random")return h([0,100]);var b=u(k),N=b[0],x=b[1];switch(E.luminosity){case"bright":N=55;break;case"dark":N=x-10;break;case"light":x=55;break}return h([N,x])}function o(k,E,b){var N=s(k,E),x=100;switch(b.luminosity){case"dark":x=N+20;break;case"light":N=(x+N)/2;break;case"random":N=0,x=100;break}return h([N,x])}function l(k,E){switch(E.format){case"hsvArray":return k;case"hslArray":return C(k);case"hsl":var b=C(k);return"hsl("+b[0]+", "+b[1]+"%, "+b[2]+"%)";case"hsla":var N=C(k),x=E.alpha||Math.random();return"hsla("+N[0]+", "+N[1]+"%, "+N[2]+"%, "+x+")";case"rgbArray":return g(k);case"rgb":var L=g(k);return"rgb("+L.join(", ")+")";case"rgba":var O=g(k),x=E.alpha||Math.random();return"rgba("+O.join(", ")+", "+x+")";default:return v(k)}}function s(k,E){for(var b=c(k).lowerBounds,N=0;N<b.length-1;N++){var x=b[N][0],L=b[N][1],O=b[N+1][0],U=b[N+1][1];if(E>=x&&E<=O){var te=(U-L)/(O-x),he=L-te*x;return te*E+he}}return 0}function d(k){if(typeof parseInt(k)=="number"){var E=parseInt(k);if(E<360&&E>0)return[E,E]}if(typeof k=="string"){if(e[k]){var b=e[k];if(b.hueRange)return b.hueRange}else if(k.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)){var N=S(k)[0];return[N,N]}}return[0,360]}function u(k){return c(k).saturationRange}function c(k){k>=334&&k<=360&&(k-=360);for(var E in e){var b=e[E];if(b.hueRange&&k>=b.hueRange[0]&&k<=b.hueRange[1])return e[E]}return"Color not found"}function h(k){if(t===null){var E=.618033988749895,b=Math.random();return b+=E,b%=1,Math.floor(k[0]+b*(k[1]+1-k[0]))}else{var N=k[1]||1,x=k[0]||0;t=(t*9301+49297)%233280;var L=t/233280;return Math.floor(x+L*(N-x))}}function v(k){var E=g(k);function b(x){var L=x.toString(16);return L.length==1?"0"+L:L}var N="#"+b(E[0])+b(E[1])+b(E[2]);return N}function m(k,E,b){var N=b[0][0],x=b[b.length-1][0],L=b[b.length-1][1],O=b[0][1];e[k]={hueRange:E,lowerBounds:b,saturationRange:[N,x],brightnessRange:[L,O]}}function _(){m("monochrome",null,[[0,0],[100,0]]),m("red",[-26,18],[[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]),m("orange",[18,46],[[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]),m("yellow",[46,62],[[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]),m("green",[62,178],[[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]),m("blue",[178,257],[[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]),m("purple",[257,282],[[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]),m("pink",[282,334],[[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]])}function g(k){var E=k[0];E===0&&(E=1),E===360&&(E=359),E=E/360;var b=k[1]/100,N=k[2]/100,x=Math.floor(E*6),L=E*6-x,O=N*(1-b),U=N*(1-L*b),te=N*(1-(1-L)*b),he=256,ee=256,se=256;switch(x){case 0:he=N,ee=te,se=O;break;case 1:he=U,ee=N,se=O;break;case 2:he=O,ee=N,se=te;break;case 3:he=O,ee=U,se=N;break;case 4:he=te,ee=O,se=N;break;case 5:he=N,ee=O,se=U;break}var Y=[Math.floor(he*255),Math.floor(ee*255),Math.floor(se*255)];return Y}function S(k){k=k.replace(/^#/,""),k=k.length===3?k.replace(/(.)/g,"$1$1"):k;var E=parseInt(k.substr(0,2),16)/255,b=parseInt(k.substr(2,2),16)/255,N=parseInt(k.substr(4,2),16)/255,x=Math.max(E,b,N),L=x-Math.min(E,b,N),O=x?L/x:0;switch(x){case E:return[60*((b-N)/L%6)||0,O,x];case b:return[60*((N-E)/L+2)||0,O,x];case N:return[60*((E-b)/L+4)||0,O,x]}}function C(k){var E=k[0],b=k[1]/100,N=k[2]/100,x=(2-b)*N;return[E,Math.round(b*N/(x<1?x:2-x)*1e4)/100,x/2*100]}function T(k){for(var E=0,b=0;b!==k.length&&!(E>=Number.MAX_SAFE_INTEGER);b++)E+=k.charCodeAt(b);return E}function M(k){if(isNaN(k)){if(typeof k=="string"){if(e[k]){var b=e[k];if(b.hueRange)return b.hueRange}else if(k.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)){var N=S(k)[0];return c(N).hueRange}}}else{var E=parseInt(k);if(E<360&&E>0)return c(k).hueRange}return[0,360]}return r})});_m(exports,{DEFAULT_CALENDAR:()=>ts,DEFAULT_DATA:()=>Wf,MODIFIER_KEY:()=>Hf,default:()=>ls});var Nr=Oe(require("obsidian"));var He=Oe(require("obsidian")),di=Oe(Rr());var Nl=Oe(Sl());function Xi(t,e){let n=window.moment(t),r=window.moment(e),a=r.diff(n,"days");return(n.year()<r.year()||n.dayOfYear()<r.dayOfYear())&&(n.hour()>r.hour()||n.minute()>r.minute()||n.second()>r.second()||n.millisecond()>r.millisecond())&&(a+=1),a}function Nn(t,e){return(t%e+e)%e}function tt(t){return"ID_xyxyxyxyxyxy".replace(/[xy]/g,function(e){var n=Math.random()*16|0,r=e=="x"?n:n&3|8;return r.toString(16)})}function xa(t){if(!t.interval?.length)return"";let e=t.interval.sort((a,i)=>a.interval-i.interval),n=[];for(let a of e){let i=a.interval+(a.ignore?0:t.offset);if(a.exclusive)n.push(`not every ${Bt(i)} year`);else{let o=e.indexOf(a),l=o>0&&e[o-1].exclusive;n.push(`${l?"also ":""}every ${Bt(i)} year`)}}let r=n.join(", but ");return r[0].toUpperCase()+r.slice(1).toLowerCase()}function Bt(t){let e=t%10,n=t%100;return e==1&&n!=11?t+"st":e==2&&n!=12?t+"nd":e==3&&n!=13?t+"rd":t+"th"}function dn(t,e,n){if(!t||t.day==null)return"";let{day:r,month:a,year:i}=t;if(a!=null&&!e[a])return"Invalid Date";if(n&&n.day){let o=n.day,l=n.month,s=n.year;if(l!=null&&s!=null&&a!=null&&i!=null)return i!=s?`${e[a].name} ${Bt(r)}, ${i} - ${e[l].name} ${Bt(o)}, ${s}`:l==a?`${e[a].name} ${Bt(r)}-${Bt(o)}, ${i}`:a!=null&&i!=null?`${e[a].name} ${Bt(r)}-${e[l].name} ${Bt(o)}, ${i}`:a!=null?`${e[a].name} ${Bt(r)}-${e[l].name} ${Bt(o)} of every year`:`${Bt(r)}-${Bt(o)} of every month`}return a!=null&&i!=null?`${e[a].name} ${Bt(r)}, ${i}`:a!=null?`${e[a].name} ${Bt(r)} of every year`:`${Bt(r)} of every month`}function Mn(t,e){return!(t==null||e?.current?.month==null||t<1||t<1||t>e?.static?.months[e.current?.month]?.length||!e?.static?.months[e.current?.month]?.length)}function In(t,e){return!(t==null||!e?.static?.months?.length||t<0||t>=e?.static?.months?.length)}function On(t,e){return!(t==null||t<1&&!e.static?.useCustomYears||e?.static?.useCustomYears&&(!e?.static?.years?.length||t<0||t>=e?.static?.years?.length))}var Ml=Oe(Bl()),Ta=class{static import(e){let n=[];for(let r of e){let a=r.name??"Imported Calendar",i=r.static_data;if(!i)continue;let o=i.year_data;if(!o)continue;let l=o.first_day-1,s=o.overflow??!0,d=o.global_week;if(!d)continue;let u=d.map(b=>({type:"day",name:b,id:tt(6)})),c=o.timespans;if(!c)continue;let h=c.map(b=>({name:(0,Ml.decode)(b.name),type:b.type,length:b.length,id:tt(6)})),v=h.reduce((b,N)=>N.type=="month"?b+N.length:b,0),m=[];if("leap_days"in o)for(let b of o.leap_days){let x=(b.interval.split(",")??["1"]).map(L=>{let O=/\+/.test(L),U=/\!/.test(L),te=L.match(/(\d+)/).first();return{ignore:O,exclusive:U,interval:Number(te)}});m.push({name:b.name??`Leap Day ${m.length+1}`,type:"leapday",interval:x,timespan:b.timespan??0,intercalary:b.intercalary??!1,offset:b.offset??0,id:tt(6)})}let _=[];if("moons"in i)for(let b of i.moons)_.push({name:b.name??`Moon ${_.length+1}`,cycle:Number(b.cycle)??v,offset:b.shift??0,faceColor:b.color??"#ffffff",shadowColor:b.shadow_color??"#000000",id:tt(6)});let g=[];if("eras"in i)for(let b of i.eras)g.push({name:b.name??`Era ${g.length+1}`,description:b.description,format:b.formatting??"Year {{year}} - {{era_name}}",start:{year:b.date?.year??1,month:b.date?.timespan??0,day:b.date?.day??0}});let S={firstWeekDay:l,overflow:s,weekdays:u,months:h,moons:_,leapDays:m,eras:g,displayMoons:!0,incrementDay:!1,displayDayNumber:!1},C={year:1,day:1,month:0};r.dynamic_data&&(C.year=r.dynamic_data.year??C.year,C.day=r.dynamic_data.day??C.day,C.month=r.dynamic_data.month??C.month);let T=[],M=new Map;if("categories"in r)for(let b of r.categories){let N=b.name,x=N?.split(" ").join("-").toLowerCase()??tt(6),L=b.event_settings.color;if(L in Il)L=Il[L];else{L=L.split("-").join("");let O=createEl("canvas"),U=O.getContext("2d");U.fillStyle=L,L=U.fillStyle,O.detach()}M.set(x,{name:N,id:x,color:L})}if(r.events&&Array.isArray(r.events)&&r.events.length)for(let b of r.events){let N={day:null,year:null,month:null};if(b.data&&b.data.date&&Array.isArray(b.data?.date)&&b.data.date.length)N.day=b.data.date[2],N.month=b.data.date[1],N.year=b.data.date[0];else if(b.data&&b.data.conditions&&Array.isArray(b.data.conditions)){let L=b.data.conditions;try{let O=L.find(he=>he[0]==="Year"),U=L.find(he=>he[0]==="Month"),te=L.find(he=>he[0]==="Day");O&&(N.year=Number(O[2][0])),U&&(N.month=Number(U[2][0])),te&&(N.day=Number(te[2][0]))}catch{}}let x;if(b.description){let L=createDiv();L.innerHTML=b.description,x=L.textContent}T.push({name:b.name,description:x,id:b.id,note:null,date:N,category:M.get(b.event_category_id)?.id??null})}let k=(0,Nl.default)({count:M.size});for(let b of M.keys()){let N=M.get(b);N.color||(N.color=k.shift().hex(),M.set(b,N))}let E={name:a,description:null,static:S,current:C,events:T,id:tt(6),categories:Array.from(M.values())};n.push(E)}return n}},Il={"Dark-Solid":"#000000",Red:"#9b2c2c",Pink:"#880E4F",Purple:"#4A148C","Deep-Purple":"#311B92",Blue:"#0D47A1","Light-Blue":"#0288D1",Cyan:"#006064",Teal:"#004D40",Green:"#2E7D32","Light-Green":"#7CB342",Lime:"#9e9d24",Yellow:"#FFEB3B",Orange:"#FF9100","Blue-Grey":"#455A64"};function J(){}var Sa=t=>t;function Ol(t,e){for(let n in e)t[n]=e[n];return t}function $i(t){return t()}function ql(){return Object.create(null)}function Ee(t){t.forEach($i)}function at(t){return typeof t=="function"}function le(t,e){return t!=t?e==e:t!==e||t&&typeof t=="object"||typeof t=="function"}function Rl(t){return Object.keys(t).length===0}function Ll(t,e,n,r){if(t){let a=Pl(t,e,n,r);return t[0](a)}}function Pl(t,e,n,r){return t[1]&&r?Ol(n.ctx.slice(),t[1](r(e))):n.ctx}function jl(t,e,n,r){if(t[2]&&r){let a=t[2](r(n));if(e.dirty===void 0)return a;if(typeof a=="object"){let i=[],o=Math.max(e.dirty.length,a.length);for(let l=0;l<o;l+=1)i[l]=e.dirty[l]|a[l];return i}return e.dirty|a}return e.dirty}function Vl(t,e,n,r,a,i){if(a){let o=Pl(e,n,r,i);t.p(o,a)}}function Hl(t){if(t.ctx.length>32){let e=[],n=t.ctx.length/32;for(let r=0;r<n;r++)e[r]=-1;return e}return-1}function Ji(t){return t??""}function me(t){return t&&at(t.destroy)?t.destroy:J}var Wl=typeof window!="undefined",Gl=Wl?()=>window.performance.now():()=>Date.now(),eo=Wl?t=>requestAnimationFrame(t):J;var or=new Set;function Ul(t){or.forEach(e=>{e.c(t)||(or.delete(e),e.f())}),or.size!==0&&eo(Ul)}function zl(t){let e;return or.size===0&&eo(Ul),{promise:new Promise(n=>{or.add(e={c:t,f:n})}),abort(){or.delete(e)}}}var Yl=!1;function Vg(){Yl=!0}function Hg(){Yl=!1}function D(t,e){t.appendChild(e)}function ve(t,e,n){let r=to(t);if(!r.getElementById(e)){let a=F("style");a.id=e,a.textContent=n,Zl(r,a)}}function to(t){if(!t)return document;let e=t.getRootNode?t.getRootNode():t.ownerDocument;return e&&e.host?e:t.ownerDocument}function Wg(t){let e=F("style");return Zl(to(t),e),e.sheet}function Zl(t,e){D(t.head||t,e)}function H(t,e,n){t.insertBefore(e,n||null)}function V(t){t.parentNode.removeChild(t)}function Ke(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}function F(t){return document.createElement(t)}function en(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function be(t){return document.createTextNode(t)}function W(){return be(" ")}function ct(){return be("")}function re(t,e,n,r){return t.addEventListener(e,n,r),()=>t.removeEventListener(e,n,r)}function w(t,e,n){n==null?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function _n(t){return t===""?null:+t}function Gg(t){return Array.from(t.childNodes)}function De(t,e){e=""+e,t.wholeText!==e&&(t.data=e)}function Ft(t,e){t.value=e??""}function Qe(t,e,n,r){n===null?t.style.removeProperty(e):t.style.setProperty(e,n,r?"important":"")}function fn(t,e){for(let n=0;n<t.options.length;n+=1){let r=t.options[n];if(r.__value===e){r.selected=!0;return}}t.selectedIndex=-1}function sr(t){let e=t.querySelector(":checked")||t.options[0];return e&&e.__value}function ge(t,e,n){t.classList[n?"add":"remove"](e)}function Kl(t,e,n=!1){let r=document.createEvent("CustomEvent");return r.initCustomEvent(t,n,!1,e),r}var Ba=new Map,Na=0;function Ug(t){let e=5381,n=t.length;for(;n--;)e=(e<<5)-e^t.charCodeAt(n);return e>>>0}function zg(t,e){let n={stylesheet:Wg(e),rules:{}};return Ba.set(t,n),n}function no(t,e,n,r,a,i,o,l=0){let s=16.666/r,d=`{
`;for(let g=0;g<=1;g+=s){let S=e+(n-e)*i(g);d+=g*100+`%{${o(S,1-S)}}
`}let u=d+`100% {${o(n,1-n)}}
}`,c=`__svelte_${Ug(u)}_${l}`,h=to(t),{stylesheet:v,rules:m}=Ba.get(h)||zg(h,t);m[c]||(m[c]=!0,v.insertRule(`@keyframes ${c} ${u}`,v.cssRules.length));let _=t.style.animation||"";return t.style.animation=`${_?`${_}, `:""}${c} ${r}ms linear ${a}ms 1 both`,Na+=1,c}function Ql(t,e){let n=(t.style.animation||"").split(", "),r=n.filter(e?i=>i.indexOf(e)<0:i=>i.indexOf("__svelte")===-1),a=n.length-r.length;a&&(t.style.animation=r.join(", "),Na-=a,Na||Yg())}function Yg(){eo(()=>{Na||(Ba.forEach(t=>{let{stylesheet:e}=t,n=e.cssRules.length;for(;n--;)e.deleteRule(n);t.rules={}}),Ba.clear())})}function lr(t,e,n,r){if(!e)return J;let a=t.getBoundingClientRect();if(e.left===a.left&&e.right===a.right&&e.top===a.top&&e.bottom===a.bottom)return J;let{delay:i=0,duration:o=300,easing:l=Sa,start:s=Gl()+i,end:d=s+o,tick:u=J,css:c}=n(t,{from:e,to:a},r),h=!0,v=!1,m;function _(){c&&(m=no(t,0,1,o,i,l,c)),i||(v=!0)}function g(){c&&Ql(t,m),h=!1}return zl(S=>{if(!v&&S>=s&&(v=!0),v&&S>=d&&(u(1,0),g()),!h)return!1;if(v){let C=S-s,T=0+1*l(C/o);u(T,1-T)}return!0}),_(),u(0,1),g}function ur(t){let e=getComputedStyle(t);if(e.position!=="absolute"&&e.position!=="fixed"){let{width:n,height:r}=e,a=t.getBoundingClientRect();t.style.position="absolute",t.style.width=n,t.style.height=r,Zg(t,a)}}function Zg(t,e){let n=t.getBoundingClientRect();if(e.left!==n.left||e.top!==n.top){let r=getComputedStyle(t),a=r.transform==="none"?"":r.transform;t.style.transform=`${a} translate(${e.left-n.left}px, ${e.top-n.top}px)`}}var jr;function Vr(t){jr=t}function Hr(){if(!jr)throw new Error("Function called outside component initialization");return jr}function qn(t){Hr().$$.on_mount.push(t)}function ro(t){Hr().$$.on_destroy.push(t)}function Te(){let t=Hr();return(e,n)=>{let r=t.$$.callbacks[e];if(r){let a=Kl(e,n);r.slice().forEach(i=>{i.call(t,a)})}}}function Rn(t,e){Hr().$$.context.set(t,e)}function Xe(t){return Hr().$$.context.get(t)}function we(t,e){let n=t.$$.callbacks[e.type];n&&n.slice().forEach(r=>r.call(this,e))}var Wr=[];var cr=[],Ma=[],Xl=[],$l=Promise.resolve(),ao=!1;function Jl(){ao||(ao=!0,$l.then(eu))}function Ln(){return Jl(),$l}function zt(t){Ma.push(t)}var io=new Set,Ia=0;function eu(){let t=jr;do{for(;Ia<Wr.length;){let e=Wr[Ia];Ia++,Vr(e),Kg(e.$$)}for(Vr(null),Wr.length=0,Ia=0;cr.length;)cr.pop()();for(let e=0;e<Ma.length;e+=1){let n=Ma[e];io.has(n)||(io.add(n),n())}Ma.length=0}while(Wr.length);for(;Xl.length;)Xl.pop()();ao=!1,io.clear(),Vr(t)}function Kg(t){if(t.fragment!==null){t.update(),Ee(t.before_update);let e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(zt)}}var Gr;function Qg(){return Gr||(Gr=Promise.resolve(),Gr.then(()=>{Gr=null})),Gr}function oo(t,e,n){t.dispatchEvent(Kl(`${e?"intro":"outro"}${n}`))}var Oa=new Set,hn;function ke(){hn={r:0,c:[],p:hn}}function xe(){hn.r||Ee(hn.c),hn=hn.p}function j(t,e){t&&t.i&&(Oa.delete(t),t.i(e))}function G(t,e,n,r){if(t&&t.o){if(Oa.has(t))return;Oa.add(t),hn.c.push(()=>{Oa.delete(t),r&&(n&&t.d(1),r())}),t.o(e)}}var Xg={duration:0};function so(t,e,n,r){let a=e(t,n),i=r?0:1,o=null,l=null,s=null;function d(){s&&Ql(t,s)}function u(h,v){let m=h.b-i;return v*=Math.abs(m),{a:i,b:h.b,d:m,duration:v,start:h.start,end:h.start+v,group:h.group}}function c(h){let{delay:v=0,duration:m=300,easing:_=Sa,tick:g=J,css:S}=a||Xg,C={start:Gl()+v,b:h};h||(C.group=hn,hn.r+=1),o||l?l=C:(S&&(d(),s=no(t,i,h,m,v,_,S)),h&&g(0,1),o=u(C,m),zt(()=>oo(t,h,"start")),zl(T=>{if(l&&T>l.start&&(o=u(l,m),l=null,oo(t,o.b,"start"),S&&(d(),s=no(t,i,o.b,o.duration,0,_,a.css))),o){if(T>=o.end)g(i=o.b,1-i),oo(t,o.b,"end"),l||(o.b?d():--o.group.r||Ee(o.group.c)),o=null;else if(T>=o.start){let M=T-o.start;i=o.a+o.d*_(M/o.duration),g(i,1-i)}}return!!(o||l)}))}return{run(h){at(a)?Qg().then(()=>{a=a(),c(h)}):c(h)},end(){d(),o=l=null}}}var G1=typeof window!="undefined"?window:typeof globalThis!="undefined"?globalThis:global;function $g(t,e){t.d(1),e.delete(t.key)}function Jg(t,e){G(t,1,1,()=>{e.delete(t.key)})}function qa(t,e){t.f(),$g(t,e)}function tu(t,e){t.f(),Jg(t,e)}function dr(t,e,n,r,a,i,o,l,s,d,u,c){let h=t.length,v=i.length,m=h,_={};for(;m--;)_[t[m].key]=m;let g=[],S=new Map,C=new Map;for(m=v;m--;){let E=c(a,i,m),b=n(E),N=o.get(b);N?r&&N.p(E,e):(N=d(b,E),N.c()),S.set(b,g[m]=N),b in _&&C.set(b,Math.abs(m-_[b]))}let T=new Set,M=new Set;function k(E){j(E,1),E.m(l,u),o.set(E.key,E),u=E.first,v--}for(;h&&v;){let E=g[v-1],b=t[h-1],N=E.key,x=b.key;E===b?(u=E.first,h--,v--):S.has(x)?!o.has(N)||T.has(N)?k(E):M.has(x)?h--:C.get(N)>C.get(x)?(M.add(N),k(E)):(T.add(x),h--):(s(b,o),h--)}for(;h--;){let E=t[h];S.has(E.key)||s(E,o)}for(;v;)k(g[v-1]);return g}var U1=new Set(["allowfullscreen","allowpaymentrequest","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","hidden","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected"]);function oe(t){t&&t.c()}function ae(t,e,n,r){let{fragment:a,on_mount:i,on_destroy:o,after_update:l}=t.$$;a&&a.m(e,n),r||zt(()=>{let s=i.map($i).filter(at);o?o.push(...s):Ee(s),t.$$.on_mount=[]}),l.forEach(zt)}function ne(t,e){let n=t.$$;n.fragment!==null&&(Ee(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function e2(t,e){t.$$.dirty[0]===-1&&(Wr.push(t),Jl(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function fe(t,e,n,r,a,i,o,l=[-1]){let s=jr;Vr(t);let d=t.$$={fragment:null,ctx:null,props:i,update:J,not_equal:a,bound:ql(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(s?s.$$.context:[])),callbacks:ql(),dirty:l,skip_bound:!1,root:e.target||s.$$.root};o&&o(d.root);let u=!1;if(d.ctx=n?n(t,e.props||{},(c,h,...v)=>{let m=v.length?v[0]:h;return d.ctx&&a(d.ctx[c],d.ctx[c]=m)&&(!d.skip_bound&&d.bound[c]&&d.bound[c](m),u&&e2(t,c)),h}):[],d.update(),u=!0,Ee(d.before_update),d.fragment=r?r(d.ctx):!1,e.target){if(e.hydrate){Vg();let c=Gg(e.target);d.fragment&&d.fragment.l(c),c.forEach(V)}else d.fragment&&d.fragment.c();e.intro&&j(t.$$.fragment),ae(t,e.target,e.anchor,e.customElement),Hg(),eu()}Vr(s)}var t2;typeof HTMLElement=="function"&&(t2=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}connectedCallback(){let{on_mount:t}=this.$$;this.$$.on_disconnect=t.map($i).filter(at);for(let e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(t,e,n){this[t]=n}disconnectedCallback(){Ee(this.$$.on_disconnect)}$destroy(){ne(this,1),this.$destroy=J}$on(t,e){let n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{let r=n.indexOf(e);r!==-1&&n.splice(r,1)}}$set(t){this.$$set&&!Rl(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}});var de=class{$destroy(){ne(this,1),this.$destroy=J}$on(e,n){let r=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return r.push(n),()=>{let a=r.indexOf(n);a!==-1&&r.splice(a,1)}}$set(e){this.$$set&&!Rl(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}};var Nd=Oe(Rr()),$n=Oe(require("obsidian"));var ru=Oe(Rr()),Pn=Oe(require("obsidian"));var nu=[{name:"Gregorian Calendar",description:"A calendar for the real world.",static:{displayDayNumber:!1,incrementDay:!0,displayMoons:!0,firstWeekDay:6,overflow:!0,weekdays:[{type:"day",name:"Sunday",id:"ID_19ea684b4a08"},{type:"day",name:"Monday",id:"ID_2928b90ab949"},{type:"day",name:"Tuesday",id:"ID_0ad9a8f9e95b"},{type:"day",name:"Wednesday",id:"ID_195a4b290bc9"},{type:"day",name:"Thursday",id:"ID_abe8c89b0999"},{type:"day",name:"Friday",id:"ID_2b5b8a79fa4a"},{type:"day",name:"Saturday",id:"ID_1a78cb79c8cb"}],months:[{name:"January",type:"month",length:31,id:"ID_e9997a780b3a"},{name:"February",type:"month",length:28,id:"ID_b8c9ebeb0b89"},{name:"March",type:"month",length:31,id:"ID_b83bda2b9be8"},{name:"April",type:"month",length:30,id:"ID_29baea7b28ab"},{name:"May",type:"month",length:31,id:"ID_6a3899fad909"},{name:"June",type:"month",length:30,id:"ID_384aeb1afa8a"},{name:"July",type:"month",length:31,id:"ID_48b8cba87b8a"},{name:"August",type:"month",length:31,id:"ID_fa0b1a6bab8a"},{name:"September",type:"month",length:30,id:"ID_da880b8af849"},{name:"October",type:"month",length:31,id:"ID_babba8186968"},{name:"November",type:"month",length:30,id:"ID_da582bfaf9b9"},{name:"December",type:"month",length:31,id:"ID_ba1bab4a3a28"}],moons:[{name:"Moon",cycle:29.530588853,offset:9.24953,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_a9ab186b1819"}],leapDays:[{name:"Leap Day",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:400},{ignore:!1,exclusive:!0,interval:100},{ignore:!1,exclusive:!1,interval:4}],offset:0,timespan:1,intercalary:!1,id:"ID_b91ad86a887a"}],eras:[{name:"Before Christ",description:"",format:"Year {{abs_year}} - {{era_name}}",start:{year:-1,month:0,day:31}},{name:"Anno Domini",description:"",format:"Year {{year}} - {{era_name}}",start:{year:1,month:0,day:1}}],offset:2},current:{year:null,day:null,month:null},events:[{name:"Summer Solstice",description:"At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824599",note:null,date:{day:null,year:null,month:null},category:null},{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824600",note:null,date:{day:null,year:null,month:null},category:null},{name:"Spring Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824601",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824602",note:null,date:{day:null,year:null,month:null},category:null},{name:"Christmas",description:"Christmas is a Christian holiday celebrating the birth of Christ. Due to a combination of marketability and long lasting traditions it is popular even among many non-Christians, especially in countries that have a strong Christian tradition.",id:"824603",note:null,date:{day:25,year:null,month:11},category:"christian-holidays"},{name:"Paschal Full Moon",description:"The first full moon after march 21st, which is considered the fixed date for the spring equinox.",id:"824604",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Easter",description:"Easter is considered the most important feast for Christians, celebrating the resurrection of Christ. It is classed as a moveable feast occurring on the first full moon after the spring equinox, which is considered to be fixed at March 21st for the sake of computing the date.",id:"824605",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Easter Monday",description:"The Monday following the Easter Sunday is often considered part of the Easter Celebration and is a day off in many countries with a strong Christian tradition.",id:"824606",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Good Friday",description:"Good Friday is the Friday preceding Easter. It comemmorates the crucifixion of Christ according to the Bible.",id:"824607",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Pentecost",description:"Celebrated exactly 50 days after Easter, Pentecost is the celebration of the Holy Spirit appearing before the Apostles as described in the Bible.",id:"824608",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"New Year's Day",description:"New Year's Day marks the start of a new year on the Gregorian Calendar. It starts when the clock strikes midnight and is often celebrated with fireworks, champagne and kissing.",id:"824609",note:null,date:{day:1,year:null,month:0},category:"secular-holidays"},{name:"Valentine's Day",description:"Valentine's day is a celebration of love and romance that is popular across the world. Many more cynically minded people mostly consider it an attempt to monetize the expectation of romantic gestures on the holiday through gift cards, flowers, chocolate and dates.",id:"824610",note:null,date:{day:14,year:null,month:1},category:"secular-holidays"},{name:"Halloween",description:'Halloween is holiday popular in the US, Canada and Ireland that has gradually been adopted by more and more countries. It is often celebrated by people dressing up, usually as something scary. Children will often go from door to door shouting "trick or treat" in the hopes of receiving candy, while adults tend to go to parties.',id:"824611",note:null,date:{day:31,year:null,month:9},category:"secular-holidays"},{name:"Work on the first version of this calendar started.",description:"Aecius started work on the first version Gregorian Calendar for Fantasy Calendar on this day.",id:"824612",note:null,date:{day:23,year:2019,month:5},category:"miscellaneous-events"},{name:"Work on this version of the Gregorian Calendar started.",description:"On this day, Aecius started to rework the Gregorian Calendar from scratch to make it work with the updates Wasp and Alex implemented since the summer of 2019.",id:"824613",note:null,date:{day:21,year:2020,month:0},category:"miscellaneous-events"},{name:"Introduction of the Gregorian Calendar",description:"On this day in 1582 the Gregorian calendar was officially introduced, following Thursday October 4th on the Julian Calendar",id:"824614",note:null,date:{day:15,year:1582,month:9},category:"historical-events"}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Christian Holidays",id:"christian-holidays",color:"#9b2c2c"},{name:"Secular Holidays",id:"secular-holidays",color:"#0D47A1"},{name:"Historical Events",id:"historical-events",color:"#455A64"},{name:"Miscellaneous Events",id:"miscellaneous-events",color:"#0288D1"}]},{name:"Calendar of Greyhawk",description:"Calendar of the world of Greyhawk.",static:{displayDayNumber:!1,incrementDay:!1,displayMoons:!0,firstWeekDay:0,overflow:!1,weekdays:[{type:"day",name:"Starday",id:"ID_a8e979984938"},{type:"day",name:"Sunday",id:"ID_1b68bb78ca1b"},{type:"day",name:"Moonday",id:"ID_c8b86aea0998"},{type:"day",name:"Godsday",id:"ID_b8097a18e95b"},{type:"day",name:"Waterday",id:"ID_1918c99949ca"},{type:"day",name:"Earthday",id:"ID_fa295a1bab89"},{type:"day",name:"Freeday",id:"ID_6a485ada3ae8"}],months:[{name:"Needfest",type:"month",length:7,id:"ID_b8a9e9da8a48"},{name:"Fireseek",type:"month",length:28,id:"ID_39b90bd8189a"},{name:"Readying",type:"month",length:28,id:"ID_48a9081ad839"},{name:"Coldeven",type:"month",length:28,id:"ID_5a7b6beadb68"},{name:"Growfest",type:"month",length:7,id:"ID_48c8d82b1908"},{name:"Planting",type:"month",length:28,id:"ID_081a793a49da"},{name:"Flocktime",type:"month",length:28,id:"ID_eb68a89a0a2a"},{name:"Wealsun",type:"month",length:28,id:"ID_9b3a098ae908"},{name:"Richfest",type:"month",length:7,id:"ID_f99b4b3a08b8"},{name:"Reaping",type:"month",length:28,id:"ID_ebe9eb68ea39"},{name:"Goodmonth",type:"month",length:28,id:"ID_fb3b6af9895b"},{name:"Harvester",type:"month",length:28,id:"ID_395bcb399b8a"},{name:"Brewfest",type:"month",length:7,id:"ID_e8b908181afa"},{name:"Patchwall",type:"month",length:28,id:"ID_cbda3b399969"},{name:"Ready'reat",type:"month",length:28,id:"ID_592a2a690bf8"},{name:"Sunsebb",type:"month",length:28,id:"ID_39e8faf8e9b8"}],moons:[{name:"Luna",cycle:28,offset:3,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_f8997b39b8b8"},{name:"Celene",cycle:91,offset:46,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_7afbb9b88be8"}],leapDays:[],eras:[{name:"Common Year",description:"",format:"Year {{year}} CY",start:{year:1,month:0,day:1}}]},current:{year:591,day:1,month:0},events:[{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824573",note:null,date:{day:null,year:null,month:null},category:null},{name:"Spring Equinox",description:`The 4th of Growfest is the first day of Low Summer in Oerth's Calendar. This is the point where the sun crosses Oerth's equator. Holidays celebrated on this date include Saint Cuthbert's Day, the Feast of Edoira, the Spring Feast, and Raxivort's Orgy. This is also the day on which the priests of Tlaloc ritually sacrifice and eat the flesh of human children or babies in their patron's honor. Worshippers of Rillifane Rallathil celebrate the Budding on this day, a joyful celebration of new life celebrated through dance and song in oak groves in the heart of the forest. A ritual hunt of a noble heart is held on this day, after which the venison is eaten in celebration of Rillifane's bounty.

Also celebrated on this date is the Sanctification of Renewal, a sacred holiday to the followers of Garyx.`,id:"824574",note:null,date:{day:null,year:null,month:null},category:null},{name:"Summer Solstice",description:"	At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824575",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The 4th of Brewfest is the Autumnal Equinox, when the sun crosses the equator from north to south. This date is the official end of high summer and the beginning of autumn on the Greyhawk Calendar. This date is holy to Wenta and is sometimes regarded as an unofficial holy day of Velnius. Among the xvarts, it also marks the celebration of Raxivort's Orgy. The worshippers of Rillifane Rallathil celebrate the Transformation on this day, a time of dancing and spiritual rebirth marking the beginning of autumn and the promise that spring will come again.",id:"824576",note:null,date:{day:null,year:null,month:null},category:null},{name:"Great Moons Glory",description:"The night of Great Moon's Glory on Readying 11th, when Luna is full but Celene is new. It is holy to Celestian, and a time when offerings are left to Atroa to beg her to come early and to Telchur to request that he peacefully leave. Druids of the Old Faith are known to also hold this night as auspicious, but few outside their circles know the details.",id:"824577",note:null,date:{day:null,year:null,month:null},category:null},{name:"Dark Night",description:`Dark Night, also called Black Night, Star Night, and the Night of Hopeful Dawn, is observed on Goodmonth 11. It is a holy night for the church of Celestian because the stars are so easy to observe without the light of one of the moons getting in the way.

It is also a holy night for the church of Rao, who refer to it as the Night of Hopeful Judgment. They believe that Rao chooses this time to separate the sinful from the righteous in the afterworld. There is also a prophecy in the Raoan holy text, the Book of Incarum, that claims that Rao will cleanse the world of evil on this night, sometime in the future.

The priesthood of Kurell consider it holy, too, calling it Kurell's Night, requiring the faithful to undertake special missions on this night to prove their cleverness and skill. Kurell smiles particularly on acts of theft or vengeance performed on his holy night, blessing those who do so successfully. Donations to Kurell's church are encouraged afterwards, for Kurell may take vengeance against those who do not properly thank him for his aid.

Most other people regard Dark Night as a time of ill omen, fearing it as much as the night of the Blood Moon Festival. Bonfires are burned from dusk till dawn, particularly in small villages and in Elmshire and Narwell. Orc and goblin religions view it as an excellent night for raiding settlements. Certain evil cults perform kidnappings, murders, and vile rites during this period. On the other hand, lycanthropic activity is at its lowest.

Iggwilv and Tuerny attempted to summon a demonic army to Luna on this night in 585 CY.`,id:"824578",note:null,date:{day:null,year:null,month:null},category:null},{name:"Agelong",description:`Agelong, observed on the 4th of Richfest (the Summer Solstice), is the celebration of the legendary creation of the elves. According to myth, after Corellon Larethian spilled his blood during the battle with Gruumsh, the rest of the Seldarine gathered this sacred blood and mingled it with the tears shed during the same battle by Sehanine Moonbow. The Seldarine then infused these divine fluids into vessels they had created to be the bodies of the elven race.

This day is, among the elves, mostly an excuse to go orc-hunting. Elven warriors cut themselves with daggers carved from volcanic glass to remind themselves of Corellon's own wound from Gruumsh's spear, then strive to slaughter as many orcs as possible during the night.`,id:"824579",note:null,date:{day:4,year:null,month:8},category:null},{name:"Blood Moon Festival",description:`The Blood Moon Festival is celebrated on Coldeven 11, the night when Luna is full just before the Spring Equinox. On this night, curses are said to be twice as powerful and the forces of evil are at their strongest. Fiends roam the lands, and human sacrifice is common. This night is held especially sacred by cultists of Nerull, but worshipers of Kurell also mark this night as especially auspicious for acts of vengeance. Goodly folk superstitiously guard their homes with horseshoes, holy water, bottles of milk, and iron filings.

Demonic forces sent by Iuz destroyed the leadership of the Horned Society during the Blood Moon Festival of 583 CY.

It's possible that this is also the night the elves celebrate as Faerieluck.`,id:"824580",note:null,date:{day:11,year:null,month:3},category:null},{name:"Breadgiving Day",description:`Celebrated on on the Winter Solstice (Needfest 4), Breadgiving Day, is a day of charity observed in the Free City of Greyhawk by the faiths of Pelor, Rao, and Saint Cuthbert.

This was not originally a religious holiday as such. It is a new practice that began after the Greyhawk Wars to feed the refugees that flooded the city during that time. Since of Old City who line up by the hundreds along the Processional from the Black Gate. The booths are worked by low-ranking priests from all three religions, with armed priests of St. Cuthbert providing security. A smaller event is held simultaneously below Wharfgate in Greyhawk City's Shacktown.

The clergies of Heironeous, Pholtus, and Trithereon do not participate, but they compete with one another to perform good deeds the whole week of Needfest. The rivalries between Trithereon and Pholtus, Trithereon and Heironeous, and Pholtus and St. Cuthbert are such that the faiths sometimes fall into arguments and even blows if their "good deeds" conflict with each other. Greyhawk's rowdy citizens often cheer and place bets on the outcomes of these quarrels.

The priests of Pelor hold a morning ceremony on this day with a sermon, singing, and music.`,id:"824581",note:null,date:{day:4,year:null,month:0},category:null},{name:"Brewfest",description:`Also called Drunken Days or the Feast of Brewers, Brewfest, the fourth festival week of Oerth's calendar, is a rowdy period unsurprisingly claimed as a holy time by the churches of Olidammara and Wenta. The Free City of Greyhawk does not celebrate the entire week, but Brewfest 1 and Brewfest 7 are both set aside as public holidays. In Elmshire, the week is spent in restful, carefree music, drinking, and dancing. In Hardby it is spent with fistfights, riots, and ensuing hangovers. In Narwell it is celebrated with ale-brewing contests, horse races, beatings, and robbery. In Safeton it is celebrated with nervous violence and nightly orc hunts. The week is also sacred to the Old Faith.

The elves call this week Fallrite, and use it to contemplate the spirits of their ancestors, the passage to the afterworld, and the fragility of life. They believe other races make merry during Brewfest because they are "hiding" to avoid facing death's reality. In contrast, the olvenfolk strive to fulfill the most important of their duties and reach the most crucial of their decisions during this time of year. The elven kings and queens traditionally judge capital cases during Fallrite.`,id:"824582",note:null,date:{day:4,year:null,month:12},category:null},{name:"Faerieluck",description:"Faerieluck is a holiday celebrated by the elves in early spring, when the power of Faerie runs high and they celebrate with their fey cousins: the sprites, buckawns, pixies, nymphs and so forth. The point of the festival is to remind the elves of their ancient kinship with these creatures. The day is spent playing practical jokes, engaging in battles of wit, and general merriment.",id:"824583",note:null,date:{day:11,year:null,month:2},category:null},{name:"Feast of Edoira",description:`The Feast of Edoira is a holiday celebrated in the Domain of Greyhawk on Growfest 4, during the Spring Equinox. It is named after Edoira, a priest of Rao who centuries ago established the Edoiran Compact, a pact by which many of the lawful good-aligned faiths and people of the Domain could agree to cooperate. The Compact was later extended to non-lawful good and neutral faiths.

Edoira was never deified but was revered by many good faiths in the Domain. The holiday was marked by religious services on Godsday of Growfest led by the clerics of the good faiths who partook of the Compact, and secular festivals by the ordinary citizenry. Observance of the holiday has declined over the years, though the clergies of Rao and Pelor still hold their traditional interfaith services, with occasional participation by the priesthoods of Heironeous and Mayaheine. Since the end of the Greyhawk Wars most of the Domain's outlying communities no longer observe the holiday. Only one church in Safeton still does so.`,id:"824584",note:null,date:{day:4,year:null,month:4},category:null},{name:"Desportium of Magic",description:`The highlight of Growfest is the Desportium of Magic. During this day torchlight only, no magic illumination is supposed to be used. Wizards and Sorcerers then perform feats of illusion and magic trying to outdo one another with their displays. Usually there is a panel of judges to decide, in the larger cities there is usually a limit of 5-person teams competing. Each performance during the Desportium of Magic uses a long established theme, that of an attack on the town by various monsters and Dark Elves, repelled by brave warriors and spellcasters. The displays, made up of any number of spells cast without the use of magic devices, cannot actually cause any harm to property or people, but must be as wonderful, striking, detailed, and lifelike as possible.

This motif is based on actual attacks through the years from the Uttermost War to the most recent Great Slave Raids. The idea is to make the attackers as dreadful as possible and the defenders as heroic as possible, secondary is to make sure that people will always remember the terror of the Uttermost War. In large cities like the CSIO and CSWE and Tarantis, these performances last all night and are amazing to watch. In smaller villages without spellcasters, puppet plays are often done in its stead.`,id:"824585",note:null,date:{day:7,year:null,month:4},category:null},{name:"Holy Day of Pelor",description:`The Holy Day of Pelor, also known as Giving Day and Midsummer's Day, is celebrated on the Summer Solstice.

Because Pelor is widely loved by the commoners, this day is set aside as a day of rest in the Free City of Greyhawk. Only essential work is done on this day. Many merchants close their shops on Giving Day as well out of respect for the Sun Father and his teachings. Gambling houses are closed, but not hostelries, for Giving Day is a day of feasting and goodwill, a time for enjoying the fruits of the Oerth.

Public services are held from dawn until noon by Pelor's priests, outdoors if the weather permits (which if almost always does, as the clerics use weather-controlling magic for maximum sunlight). Even Greyhawk City's large temple of Pelor is not big enough to hold the throngs who come to celebrate on this day, so throngs of the faithful fill the temple grounds in the Garden Quarter, spilling out from the Millstream to the Nobles' Wall, and to the road leading toward Greyhawk's Grand Theater. Many come, of course, for the free meal the priests provide after the service. The Pelorian priests are well aware of this, but believe that for the needy, a full stomach must come before wisdom and learning. Members of Greyhawk's Guild of Thieves and Beggar's Union, many of whom remember Midsummer's Day fondly from their orphaned childhoods, both protect priests of Pelor on this day, and woe onto those who attempt to test them on this matter.

Priests of Pelor, bedecked in yellow and gold, parade about the streets, demanding donations for their charitable works, freely using guilt to squeeze more from stingy purses. Free healings are given out, particularly to children. Most Greyhawkers wear at least one item of yellow cloth on this day out of respect.

Some crusading Pelorians crusade against evil lycanthropes on this night, since both Celene and Luna are full.`,id:"824586",note:null,date:{day:4,year:null,month:8},category:null},{name:"Holy Day of Serenity",description:"The Holy Day of Serenity, on Reaping 10, is celebrated in Veluna as a holy day of Rao, though it's actually the anniversary of Veluna's secession from Furyondy in 476 CY. It is celebrated with religious singing and worship.",id:"824587",note:null,date:{day:10,year:null,month:9},category:null}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Religious Holidays",id:"religious-holidays",color:"#FFEB3B"},{name:"Secular Holidays",id:"secular-holidays",color:"#0D47A1"},{name:"Magical Events",id:"magical-events",color:"#311B92"},{name:"Miscellaneous Events",id:"miscellaneous-events",color:"#0288D1"}]},{name:"Calendar of Golarion",description:"Calendar for the world of Pathfinder.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!0,weekdays:[{type:"day",name:"Moonday",id:"ID_db8af8f85b8a"},{type:"day",name:"Toilday",id:"ID_f87a094b2849"},{type:"day",name:"Wealday",id:"ID_2a5bb88b3ae8"},{type:"day",name:"Oathday",id:"ID_c93a0be8981b"},{type:"day",name:"Fireday",id:"ID_2b7b59794a0b"},{type:"day",name:"Starday",id:"ID_baaa6a89ca1b"},{type:"day",name:"Sunday",id:"ID_f9baca088b28"}],months:[{name:"Abadius",type:"month",length:31,id:"ID_dad9da89f818"},{name:"Calistril",type:"month",length:28,id:"ID_980a88cb9b68"},{name:"Pharast",type:"month",length:31,id:"ID_a9c96ac80908"},{name:"Gozran",type:"month",length:30,id:"ID_a99a697b9abb"},{name:"Desnus",type:"month",length:31,id:"ID_8bcad9a8f84a"},{name:"Sarenith",type:"month",length:30,id:"ID_484a49a998db"},{name:"Erastus",type:"month",length:31,id:"ID_9a48e9b96938"},{name:"Arodus",type:"month",length:31,id:"ID_bbe99b2afaea"},{name:"Rova",type:"month",length:30,id:"ID_ba39fbe8c8b8"},{name:"Lamashan",type:"month",length:31,id:"ID_69d93ba9dba8"},{name:"Neth",type:"month",length:30,id:"ID_4ad8fb79eb6a"},{name:"Kuthona",type:"month",length:31,id:"ID_9a3a8b388939"}],moons:[{name:"Somal",cycle:29.5,offset:9.5,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_b87ab959cac9"}],leapDays:[{name:"Leap Day",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:8}],offset:0,timespan:1,intercalary:!1,id:"ID_88c8da3b8b2b"}],eras:[{name:"Age of Serpents",description:"",format:"Year {{year}} - {{era_name}}",start:{year:4720,month:8,day:15}},{name:"Age of Darkness",description:"",format:"Year {{abs_year}} - {{era_name}}",start:{year:-5300,month:0,day:1}},{name:"Age of Anguish",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-4500,month:8,day:1}},{name:"Age of Destiny",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-3500,month:8,day:1}},{name:"Age of Enthronement",description:"",format:"Year {{year}} AR - {{era_name}}",start:{year:1,month:8,day:1}},{name:"Age of Lost Omens",description:"",format:"Year {{year}} AR - {{era_name}}",start:{year:4606,month:8,day:1}}]},current:{year:4720,day:15,month:0},events:[{name:"Summer Solstice",description:"At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824492",note:null,date:{day:null,year:null,month:null},category:null},{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824493",note:null,date:{day:null,year:null,month:null},category:null},{name:"Spring Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824494",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824495",note:null,date:{day:null,year:null,month:null},category:null},{name:"Eternal Kiss",description:`Zon-Kuthon

Culminating on the first new moon of the new year, the Eternal Kiss is an 11 day ceremony honoring Zon-Kuthon. On the final day, a living sacrifice is made to the Dark Prince, after the victim is pampered and pleasured for the ten days prior. The sacrifice can either be an enemy or a great devotee of the church, and is kept alive for as long as possible during the torture using magic. This holiday often involves fortune-telling as a part of the torture, using the victim's entrails or their cries of pain to determine the Midnight Lord's will. Occasionally it is believed that the sacrifice will prophesy with the voice of Zon-Kuthon himself.`,id:"824496",note:null,date:{day:null,year:null,month:null},category:null},{name:"Longnight",description:"Longnight is a holiday celebrated on the full moon in the winter month of Abadius. During the festival, revelers stay up all night to greet the dawn to defy the long winter months. It is even celebrated in Irrisen, where there are no natural seasons.",id:"824497",note:null,date:{day:null,year:null,month:0},category:null},{name:"Foundation Day",description:`Absalom, Milani

Foundation Day is a civil holiday celebrated on the New Year (1 Abadius) in Absalom to commemorate the city's founding by the god Aroden in 1 AR.`,id:"824498",note:null,date:{day:1,year:null,month:0},category:null},{name:"Pjallarane Day",description:`Irrisen

Pjallarane Day is an ancient holiday in Irrisen celebrated on 1 Abadius (New Year's Day). Every 100 years, Baba Yaga returns to Golarion to remove her daughter from the throne of Irrisen, and put another daughter on the throne instead. In 3713 AR the third Queen of Irrisen, Pjallarane, and her children chose to resist. Baba Yaga ruthlessly crushed the rebellion in a single day, which is now celebrated as a holiday. The festival includes feasting and the burning of effigies of tar and straw. This is a reminder of the fate of Pjallarane's followers, who were burned alive as a warning to all those who would oppose Baba Yaga.`,id:"824499",note:null,date:{day:1,year:null,month:0},category:null},{name:"Vault Day",description:`Abadar

Vault Day is a holiday held on 6 Abadius in honor of Abadar, Master of the First Vault.`,id:"824500",note:null,date:{day:6,year:null,month:0},category:null},{name:"Ruby Prince's Birthday",description:`Osirion

The Ruby Prince's Birthday is a national holiday in Osirion in honor of the birthday of Khemet III, the Ruby Prince. It is celebrated annually on the 20 Abadius.`,id:"824501",note:null,date:{day:20,year:null,month:0},category:null},{name:"Merrymead",description:`Druma, Cayden Cailean

A holiday occurring on 2 Calistril, Merrymead was started in Druma and is supposed to be a time to share of the last of the previous year's mead with the rest of the community.

In current times, most people just use it as an excuse to drink excessively. The poor travel from bar to bar drinking whatever alcohol they can afford, while the wealthy will set aside specific vintages for this day. A known consequence of this day are 'mead riots' that happen when there are more celebrants than there is alcohol to serve them. This leads to a violent, destructive group of people in a crowded bar. If this is a common occurrence for particular cities, they may reinforce their guard force for the inevitably eventful night.`,id:"824502",note:null,date:{day:2,year:null,month:1},category:null},{name:"King Eodred II's Birthday",description:`Korvosa

King Eodred II's Birthday was a local holiday in the Varisian city-state of Korvosa and was celebrated on 16 Calistril. It commemorated the birthday of its former ruler, King Eodred Arabasti II, who decreed that on the day, scantily clad women would dance and serve free wine to celebrants.`,id:"824503",note:null,date:{day:16,year:null,month:1},category:null},{name:"Loyalty Day",description:`Cheliax, Asmodeus

Loyalty Day is a holiday in the nation of Cheliax commemorating the date on Calistril 19, 4640 AR when House Thrune signed the Treaty of Egorian, declaring it the victor in the Chelish Civil War and ruler of the empire. Because of House Thrune's well-known ties to the infernal, this holiday is also observed by the Church of Asmodeus who consider it a feast day. The church along with local governments provide a free meal to all citizens to remind them of the benefits House Thrune provides them with.`,id:"824504",note:null,date:{day:19,year:null,month:1},category:null},{name:"Fateless Day",description:`Mahathallah

Followers of Mahathallah mark each leap day as Fateless Day, when the River of Souls temporarily stops and souls can escape Pharasma's judgment. They perform many sacrificial and suicidal rituals on Fateless Day.`,id:"824505",note:null,date:{day:29,year:null,month:1},category:null},{name:"Golemwalk Parade",description:`Magnimar, Varisia

The Golemwalk Parade is a parade of golems created by amateurs hoping to win a monetary grant, or even a job, from the Golemworks in Magnimar. At the end of the parade along the Avenue of Honors, the constructs are judged.`,id:"824506",note:null,date:{day:null,year:null,month:2},category:null},{name:"Day of Bones",description:`Pharasma

Priests and worshipers of the Lady of Graves parade the bodies of the recently dead on this holiday, holding free burials afterwards.`,id:"824507",note:null,date:{day:5,year:null,month:2},category:null},{name:"Sable Company Founding Day",description:`Korvosa

Sable Company Founding Day is a holiday marking the founding of the Sable Company of the Varisian city-state of Korvosa. Celebrated on 6 Pharast, the day is marked by somber military parades that generally preclude the consumption of alcohol, a staple on most other holidays.`,id:"824508",note:null,date:{day:6,year:null,month:2},category:null},{name:"Night of Tears",description:`Solku

The Night of Tears held annually on 7 Pharast in the Katapeshi town of Solku. It is a solemn vigil commemorating those lost in the Battle of Red Hail in 4701 AR.`,id:"824509",note:null,date:{day:7,year:null,month:2},category:null},{name:"Kaliashahrim",description:`Qadira

Kaliashahrim is a national holiday celebrated on Pharast 13 in Qadira that celebrates the Padishah Emperor of distant Katheer, and Qadira's loyalty to him.`,id:"824510",note:null,date:{day:13,year:null,month:2},category:null},{name:"Conquest Day",description:`Nex

Every year, on the 26th of Pharast, Elder Architect Oblosk \u2014 oldest member of Nex's Council of Three and Nine \u2014 ascends to the highest balconies of the Bandeshar in Quantium. In a voice made thunderous by the platform's magic, the wizened pech councilman spends the hours from dusk to just past noon enumerating the atrocities committed by the necromancers of Geb upon the people of Nex, culminating with the disappearance of the archwizard Nex himself. At the conclusion of this record of national wounds, the country's eleven other council members join Oblosk in renewing their yearly vow to neither forget nor forgive the Gebbites' atrocities and to again swear in their lost ruler's name to endlessly wage war against their ancient enemies.

On this day, known as Conquest Day, all the people of Nex are expected to share in their leaders' oaths, to celebrate the shared patriotism of their wondrous nation, and to remember the sacrifices of heroes past. This also makes it a day for many Nexian wizards to reveal deadly new spells, gigantic constructs, and audacious arcane masterworks\u2014which many creators promise to be the doom of their foes. Even throughout the rest of the Inner Sea region, many crusaders, rebels, and zealots observe Conquest Day as a day to renew blood oaths, launch long-planned battles, and finally take revenge. It is a day for words of honor, a day for battle cries, and a day where glory most favors the bold.`,id:"824511",note:null,date:{day:26,year:null,month:2},category:null},{name:"Days of Wrath",description:`Asmodeus, Cheliax

The Days of Wrath, or Dies Irae, are a holiday celebrated on both solstices and equinoxes in the nation of Cheliax and wherever Asmodeus is worshiped. They are primarily a national holiday and not truly a religious one, but the two are often confused due to Cheliax's current political climate. Various contests and blood sports are held on these days, promoting those elites who can clearly demonstrate their superiority over others. Some believe that these competitions are watched and judged by devils themselves. In the parts of the world where the Prince of Darkness is not openly venerated, these holidays take on a different tone: they are used to settle old grievances and also to end contracts.

In these days, bloodsports are organized into cities' stadiums. Slaves and servants of any master may choose to enter the arena for one-on-one bloody battles to the death. Free men and women of all classes are free to enter the arena as well. The entrants fight in rounds until at last one stands alone. The winner is granted freedom from slavery or servitude, erasure of all debts, and a purse of gold.

The winter solstice sees the culmination of the Dies Irae, with all the winners of the three previous bouts summoned to Egorian to fight to the death for the amusement of the nobles. The winner is given a title of baronet and a plot of land.`,id:"824512",note:null,date:{day:null,year:null,month:null},category:null},{name:"Firstbloom",description:`Gozreh

Firstbloom is a holiday celebrating the first planting of the agricultural season, and generally associated with the weather god Gozreh. It falls on the vernal equinox. Many farming communities see it as the beginning of the year, even though conventional calendars begin two months earlier. Despite weariness after a full day planting, many farming communities hold celebrations come the night: feasting, dancing and courtship feature showing the cycle of nature.`,id:"824513",note:null,date:{day:null,year:null,month:null},category:null},{name:"First Cut",description:`Falcon's Hollow

The First Cut celebration in Falcon's Hollow used to mark the start of the work in the woods each spring. Now, however, it is a meaningless ramshackle ceremony as Thuldrin Kreed forces the lumber crews to work through even during the coldest months in the winter. Still, First Cut brings people out to celebrate the start of the spring.`,id:"824514",note:null,date:{day:null,year:null,month:null},category:null},{name:"Currentseve",description:`Gozreh

On this religious holiday, all who travel on the water make offerings to Gozreh in the hopes of safe passage for the coming year.`,id:"824515",note:null,date:{day:7,year:null,month:3},category:null},{name:"Taxfest",description:`Abadar

No one enjoys paying taxes but the collection of fair taxes is considered an integral part of the maintenance of society, and is therefore holy to the god Abadar. Every year on the 15th of Gozran, priests of the church of Abadar spend the day walking city streets, doing what they can to make the bitter pill of annual taxes a bit easier to swallow.

The Business of the Day

From dawn to dusk, clerics of Abadar attend the tax collectors of sizeable communities as the tax wagons roll from door to door. The church officials monitor these activities to make sure that the process is conducted respectfully and justly, and that citizens know that the process is monitored. More than just aiding in the yearly errand, the faithful personally thank every citizen for contributing to the improvement of their city, extol the public works funded by their contributions, and foretell the grandeur of civic projects to come. The disenfranchised and destitute they attempt to comfort as best they can, quoting from their god's dogma on work and worthiness, but this is not a day for discounts or deferrals. The citizens are able to voice their concerns and ideas as to where the monies levied should best be applied. Citizens are free to speak their mind on any issue here without fear of repercussion.

The Celebrations of the Day

At dusk, the Abadarans host several celebrations in parks, plazas, and other communal areas about the city, organizing donations and contributions from local vendors to feed and entertain all-comers. Having already preached to most of the city over the course of the day, the clerics perform only a brief opening ceremony, dedicating the feast to Abadar, the city, and its great people. These celebrations are often quite distinct from neighbourhood to neighbourhood and are almost always divided along economic boundaries.

The festivities involving the wealthiest citizens usually happen on the steps of city hall or other grand civic buildings and feature the best music and food, but often little more than polite card and guessing games. These galas usually wrap up by midnight.

For the common folk, the parks and marketplaces take on a carnival atmosphere, with simple but good food, local ales, performances by talented citizens, and games of chance going on well into the night. A prevailing superstition through these festivals is that, during the celebration, it is lucky to kiss\u2014or in some regions, pinch\u2014a cleric of Abadar, leading to many a rosy-cheeked cleric.

Even the city's poor are given reason to celebrate, as the local temple of Abadar hosts a cheery but unabashedly religious gathering on its steps, feeding all comers, doling out a hearty ration of wine, singing hymns of the faith, and providing tokens for a second wine ration for any who return to attend a service within the month.

For a holiday that revolves around paying taxes, this Abadaran festival is not as reviled as one might expect.`,id:"824516",note:null,date:{day:15,year:null,month:3},category:null},{name:"Wrights of Augustana",description:`Andoran, Brigh

This local festival in the Andoran port city of Augustana is held to honor and celebrate the local shipbuilding industry as well as the navy. The mathematics and engineering required for the building of the ships is praised by Brigh's faithful.`,id:"824517",note:null,date:{day:16,year:null,month:3},category:null},{name:"Gala of Sails",description:`Absalom

One of two local festivals where kite-battlers compete.`,id:"824518",note:null,date:{day:27,year:null,month:3},category:null},{name:"Remembrance Moon",description:`Iomedae, Lastwall, Ustalav

A national holiday to commemorate those who died in the Shining Crusade against the Whispering Tyrant. Although not strictly a religious holiday, Iomedae's name is heavily invoked, due to her many military accomplishments during the war.`,id:"824519",note:null,date:{day:null,year:null,month:4},category:null},{name:"Angel Day",description:`Magnimar, Varisia

Angel Day is a local Magnimarian holiday celebrated on 31 Desnus. The annual celebration marks the founding of the city, and its founders' flight from Korvosa. It also honors the presence and popular worship of the empyreal lords, which predates the city by centuries. During the festival, nearly all local businesses shut their doors and the citizens take part in countless feasts, masquerade balls dressed as angels, and the burning of devil effigies meant to symbolize infernally-influenced Korvosa.`,id:"824520",note:null,date:{day:31,year:null,month:4},category:null},{name:"Old-Mage Day",description:"Holiday celebrating Old-Mage Jatembe, the father of Garundi magic.",id:"824521",note:null,date:{day:13,year:null,month:4},category:null},{name:"Multiple Events",description:`Festival of the Ruling Sun

Shizuru

Celebrates the longest day.

Founder's FollyUlar Kel

Adventurers and children follow a hallucinatory red stripe along zigzagging paths, amusing residents.

Harvest Bounty Festival

Segada

Marking the beginning of the harvest season, this festival involves sporting tournaments, dancing, storytelling, and feasts. Celebrants give thanks and eliminate grudges.

Longwalk

Grandmother Spider, Nurvatchta; southern hemisphere winter solstice

Celebrates the escape of Nurvatchta's anadi people from bondage, in part thanks to Grandmother Spider lengthening their cover of darkness in their escape.

Ritual of Stardust

Desna

Festival held in the evening and through the night, where Desna's faithful sing songs and throw sand and powdered gems into bonfires.

Runefeast

Magrim

Day marking the day dwarves learnt the first runes and the proper way to pray.

Sunwrought FestivalSarenrae, Brigh

Day commemorating the defeat of Rovagug by Sarenrae, celebrated with the flying of kites, fireworks, and gift giving.`,id:"824522",note:null,date:{day:null,year:null,month:null},category:null},{name:"Burning Blades",description:`Sarenrae

The holy, month-long festival ends on this day, featuring dances with flaming blades.`,id:"824523",note:null,date:{day:10,year:null,month:5},category:null},{name:"Liberty Day",description:`Andoran, Milani

Holiday celebrating Andoran's independence. Milanites celebrate that very little violence occurred.`,id:"824524",note:null,date:{day:3,year:null,month:5},category:null},{name:"Talon Tag",description:`Andoran

The Eagle Knights perform aerial displays in Almas on this day.`,id:"824525",note:null,date:{day:21,year:null,month:5},category:null},{name:"Riverwind Festival",description:`Korvosa

An early summer holiday that honors a cooling shift in the winds, celebrated with much drinking.`,id:"824526",note:null,date:{day:22,year:null,month:5},category:null},{name:"Inheritor's Ascendance ",description:`Iomedae

Inheritor's Ascendance, originally called 'Herald's Day', honours the day that Iomedae was chosen by the god Aroden to become his herald (thus replacing Arazni), thus boosting her power beyond that of a fledgling goddess. This holiday was renamed after the demise of Aroden.`,id:"824527",note:null,date:{day:1,year:null,month:7},category:null},{name:"First Crusader Day",description:`Mendev

Holiday in celebration of the continuing crusade against the demons of the Worldwound.`,id:"824528",note:null,date:{day:6,year:null,month:7},category:null},{name:"Day of Silenced Whispers",description:`Ustalav

The Day of Silenced Whispers is an Ustalavic holiday celebrated every 9 Arodus marking the defeat of the Whispering Tyrant in 3827 AR by the coalition forces of the Shining Crusade and the liberation of the country after centuries of undead domination.`,id:"824529",note:null,date:{day:9,year:null,month:7},category:null},{name:"Founding Day",description:`Ilsurian, Varisia

Festival celebrating the founding by Ilsur of the town of Ilsurian in 4631 AR.`,id:"824530",note:null,date:{day:10,year:null,month:7},category:null},{name:"Armasse",description:`Aroden, Iomedae, Milani

The raucous, week-long festival known as Armasse is held each year beginning on 16 Arodus. The celebration \u2014 once dedicated to the god Aroden \u2014 is still important to the faithful of Iomedae, who use it to train commoners in combat, ordain apprentice clergy, pick squires for knights, and teach military history, hoping to prevent the mistakes of the past from being repeated. Among those not dedicated to the Inheritor the holiday has lost most of its religious significance since Aroden's death, tending now only toward wild partying, a fact that has precluded the diabolist authorities of Cheliax from prohibiting Armasse outright. Nevertheless, in places where the church of Asmodeus is openly allowed, it hosts special activities for its parishioners during the same week in an effort to counter the influence of the holiday. The city of Corentyn is especially known for its extravagant Armasse festivities.`,id:"824531",note:null,date:{day:16,year:null,month:7},category:null},{name:"Saint Alika's Birthday",description:`Korvosa

Quiet holiday honoring the birth of Saint Alika the Martyr.`,id:"824532",note:null,date:{day:31,year:null,month:7},category:null},{name:"Archerfeast",description:`Erastil

Archer's Day or Archerfeast is a holiday of the god Erastil held annually on the 3rd of Erastus. Despite the holiday's origins in the worship of Erastil, common country folk from the Lands of the Linnorm Kings to Taldor celebrate the height of summer with a day set aside for establishing new relationships, enjoying current camaraderie, and celebrating the gifts of the gods. Archery competitions are held frequently in which the men test their skill with the bow through progressively harder trials. The exact form of competition is different from place to place, and the winner is awarded a rack of elk horns and a quiver of blessed arrows. He is also given the title of "Protector", which he holds until the next year.

While the festival's traditions emphasize contests of marksmanship, most have expanded to exhibit talents of all types, from baking and storytelling to racing and mock combat. Aside from encouraging a fair-like atmosphere, many of the displays and competitions serve one of two secondary purposes: either as a way for merchants to show off their superior livestock and wares, or (more popularly) as a way for eligible men and women to show off to each other.

While the day's events at most Archerfeast fairs are filled with games, food, and crafts, the night brings dancing, drinking, pranks, and the crowning of the princes and princesses of spring and summer for the two single youths and two single adults who fared best in the day's events. The festivities continue late into the evening, but end promptly at midnight, so that in true Erastilian fashion the next day's responsibilities are not overly impeded. For those not of Erastil's flock, however, private parties, drinking, and trysting carry on long into the next morning.`,id:"824533",note:null,date:{day:3,year:null,month:6},category:null},{name:"Founding Festival",description:`Korvosa

Founding Festival is a local Korvosan celebration marking the establishment of the city in 4407 AR. Held annually on 14 Erastus, the festival is a chance for the citizens to let off some steam, drink copiously, and watch magical light shows late into the night.`,id:"824534",note:null,date:{day:14,year:null,month:6},category:null},{name:"Burning Night",description:`Razmiran

Items or people who have transgressed against the god-king of Razmiran are burned on this day.`,id:"824535",note:null,date:{day:17,year:null,month:6},category:null},{name:"Kianidi Festival",description:`Garundi

The Kianidi Festival is a week long event held annually between 15 and 21 Erastus by Garundi people everywhere. The Garundi have a powerful belief in belonging to a specific location in this world, with clans or tribes sometimes traveling for years in search of their true home. In these travels each individual will collect small mementos of the places she or he has visited in order to remember them and maintain a spiritual connection. During the Kianidi, a tribe will gather and display these mementos to the group. The best ones are chosen and made part of the clan or tribal history, something which Garundi feel is a great honor.`,id:"824536",note:null,date:{day:15,year:null,month:6},category:null},{name:"Harvest Moon",description:null,id:"824537",note:null,date:{day:null,year:null,month:8},category:null},{name:"Multiple Events",description:`Festival of Night's Return

Nidal

Celebrated throughout Nidal, this holiday involves the burning of effigies and self-flagellation.

Swallowtail Festival

Desna

Holiday celebrated with storytelling, feasting, and the release of butterflies.

Waning Light Festival

Segada

Also called Blessing of the Sun and Night of Spirits, participants bid farewell to the long days of sunshine with feasting, dancing, and music.`,id:"824538",note:null,date:{day:null,year:null,month:null},category:null},{name:"Signing Day",description:`Andoran, Cheliax, Galt, Isger

Signing Day is a Chelish holiday, dating back to the height of the empire. Observed on the second Oathday of Rova, this is the day on which new laws in the empire took effect. The significance of this day expanded over many years until imperial marriages, significant business arrangements and oaths of fealty were all conducted on this day.

Originally, the holiday began as a celebration of the mutual-defense pact between Cheliax, Isger, Galt and Andoran when the united nations threw off the shackles of Taldor, declaring themselves independent from the empire. Observances of the holiday vary, but often include firework displays, feats of strength, and public debates to showcase speaking and rhetorical skills.

As Cheliax degenerated to civil war and diabolism after 4606 AR, blood pacts and infernal contracts also began to be signed on this day. As a result of Cheliax's new affiliation, Andoran and Galt began to distance themselves from Cheliax and the original interpretation of the holiday. In Andoran it continues to be the day that most national laws take effect as well as being a traditional day of marriage, and the date on which new Steel Falcons are inducted.`,id:"824539",note:null,date:{day:null,year:null,month:8},category:null},{name:"Crabfest",description:`Korvosa

Crabfest is a Korvosan holiday held on the first Wealday of Rova. It celebrates the return of the crabs from the cooler waters of the Jeggare River to their winter habitat in Conqueror's Bay, and is marked by crab boil feasts held throughout the city and its surrounding communities.`,id:"824540",note:null,date:{day:null,year:null,month:8},category:null},{name:"Feast of Szurpade",description:`Irrisen

This "celebration of plenty" festival mocks the traditional harvest festivals celebrated in the region before Baba Yaga and her eternal winter descended upon the land.`,id:"824541",note:null,date:{day:26,year:null,month:8},category:null},{name:"Day of Sundering",description:`Ydersius

Once many holidays were celebrated by the faith of Ydersius, but today only this date has much significance.`,id:"824542",note:null,date:{day:29,year:null,month:8},category:null},{name:"Admani Upastuti",description:`Jalmeri

Admani Upastuti is a Jalmeri holiday celebrated on the first full moon of Lamashan that marks the founding of Jalmeray as a Vudran colony.`,id:"824543",note:null,date:{day:null,year:null,month:9},category:null},{name:"Ascendance Day",description:`Iomedae

Ascendance Day is an Iomedaean holiday, held on the 6th of Lamashan. The day marks the anniversary of the day Iomedae took the Test of the Starstone in the autumn of 3832 AR and ascended to godhood.

Celebration

The day is a joyous celebration for the faithful, with singing, pledging of friendships, and forgiving of old grudges.

To many, the Test of the Starstone represents the greatest of all challenges, yet for Iomedae it was one of three storied promotions in her rise from Aroden's herald to a goddess in her own right. On the 6th of Lamashan, the Inheritor's faithful observe the heroism of Iomedae's life before her moment of ascension and celebrate the anniversary of the apotheosis itself.

The celebration takes place in several stages. Early in the day, troupes of performers\u2014as often passionate amateurs as professionals\u2014stage morality plays featuring the Eleven Acts of Iomedae, the heroic near-miracles and sacrifices she made leading up to her trials in the Starstone Cathedral. Scripts vary by region, city, and even neighborhood, but despite differences in setting, performance medium, and word choice, the themes and morals are all the same.

As the day continues, the priests organize jousts and mock battles, allowing anyone to participate so long as she can demonstrate enough skill to not be a risk to herself or others. The winners of these contests then face tests of mental acuity such as solving riddles, deciphering philosophical quandaries, and answering questions of honor and justice. Those who prove themselves in both contests are awarded a white cloak\u2014representing the Inheritor at peace\u2014styled after Iomedae's own red garment to wear for the rest of the celebration. Feasting and singing follow the competitions, mirroring the jubilation that followed Iomedae's ascension. This is occasion for making pledges of friendship and forgiving enemies, and priests circulate about the crowd offering the Inheritor's blessing to those who do and providing a moment's counsel or mediation for those who need an extra nudge.

The celebration typically ends before midnight, and the following day the priests and previous day's champions gather up the blunted swords from the mock battles, sharpen them, and distribute them among the church's armory and those of like-minded organizations so that all may remain vigilant against evil and prepared to strike it down.`,id:"824544",note:null,date:{day:6,year:null,month:9},category:null},{name:"Bastion Day",description:`Solku

Bastion Day is a two-day festival held annually on 19 and 20 Lamashan in the Katapeshi town of Solku honoring the founding of the town, when it is traditional to host a stranger from one noon until the next.`,id:"824545",note:null,date:{day:19,year:4712,month:9},category:null},{name:"Jestercap",description:`Andoran, Druma, Taldor

Jestercap occurs at the end of the month of Lamashan, traditionally on the 27th (although a few regions have taken to moving the exact day around slightly so it always falls on the last Starday of the month, allowing people who wish to celebrate in excess to have the following day of rest to recover).

History

While Jestercap has been embraced with excited open arms by the gnome communities of the Inner Sea region, its original genesis is said to have been in one of Taldor's coastal cities not long after King Aspex the Even-Tongued broke from the nation, significantly weakening Taldor's power and beginning that nation's long decline. The holiday was originally intended to distract the distraught Taldan populace with a night of revelry and comedic entertainment, but the antics of jesters were simply not enough.

Over the course of the first few years, Jestercap evolved from a holiday of observation to a holiday of participation. Today, the holiday is a time where anyone can pull pranks or jokes or japes on companions, on neighbors, and (most typically) on rivals, with the understanding that provided no lasting harm is done, any humiliations inflicted before midnight are to be taken in stride. Of course, come morning the day after, there are inevitably jokes that went too far, and grudges and feuds borne from Jestercap antics have a way of lingering for months to follow.

In Religion

Followers of Chaldira Zuzaristan, a halfling deity of mischief, treat Jestercap as a holy day and their pranks \u2014 often elaborate and extravagant in nature and plotted for months in advance \u2014 as displays of their faith.`,id:"824546",note:null,date:{day:27,year:null,month:9},category:null},{name:"Feast of the Survivors",description:`Zon-Kuthon, Nidal

A harvest festival signifying the centuries of Nidalese ancestors protected by Zon-Kuthon. The ceremonial tables are made of human bones of community members from past generations.`,id:"824547",note:null,date:{day:null,year:null,month:9},category:null},{name:"Kraken Carnival",description:`Absalom

The second of two local festivals where kite-battlers compete.`,id:"824548",note:null,date:{day:15,year:null,month:9},category:null},{name:"Independence Day",description:`Galt

Marks the beginning of the Red Revolution.`,id:"824549",note:null,date:{day:5,year:null,month:10},category:null},{name:"Seven Veils",description:`Sivanah

The holiday known as Seven Veils, which takes place on the 23rd of Neth in most realms of the Inner Sea region, is a celebration of the region's diversity \u2014 a time when social boundaries break down even further in a day-long event filled with dancing, feasting, and courting. The evening traditionally closes out with the Seven Veil masquerade, a ball wherein the participants wear disguises that hide their race or gender (often using minor magical trinkets and spells) or disguise these features as entirely new characteristics. At the end of the ball, the participants remove their disguises to their partners, often with unpredictable and sometimes delightfully awkward results. Traditionalists and conservative minds often find the Seven Veils masquerades to be scandalous or off-putting, yet they remain particularly popular in most of the larger cities of the land.

Historians note that the original "Dance of the Seven Veils" has a much different genesis than one promoting diversity \u2014 the mysterious cult of Sivanah, goddess of illusions, mystery, and reflections, is generally cited as the source of this festival, and indeed, worshippers of the goddess (herself known as the Seventh Veil) count the 23rd of Neth as one of their most sacred of days. What rituals the church of Sivanah performs on this date, however, are unknown to outsiders, for the cult enjoys its secrets. This secrecy has, unsurprisingly, given rise to all manner of sinister rumour, yet when Seven Veils rolls around each year, its eager participants are quick to set aside rumour in preference for the night's fun and games.`,id:"824550",note:null,date:{day:23,year:null,month:10},category:null},{name:"Abjurant Day",description:`Nethys

Abjurant Day occurs on 8 Neth and is known as a day of cooperation between neighbors to shore up mutual defenses and train allies in magic. Potential apprentices are often tested on the day.`,id:"824551",note:null,date:{day:8,year:null,month:10},category:null},{name:"Great Fire Remembrance",description:`Korvosa

Great Fire Remembrance is a holiday celebrated on each 13 Neth in the Varisian city of Korvosa. It commemorates the Great Fire of 4429 AR, which devastated the then still fledgling Chelish colony of Fort Korvosa. On this somber day, most of the city shuts down and people generally remain at home. It has become tradition not to light any fires (not even cooking fires) on Great Fire Remembrance.`,id:"824552",note:null,date:{day:13,year:null,month:10},category:null},{name:"Even-Tongued Day",description:`Cheliax, Asmodeus, Milani

Observed on 14 of Neth, Even-Tongued Day was once a day of joy and celebration in Cheliax, but has become instead one of mourning.

Originally, the date marked the conquest of Aspex the Even-Tongued, who brought the nations of Galt, Andoran and Isger under Chelish control. Since the death of Aroden and the loss of these nations, the holiday instead marks the loss of territory and glory once held by Cheliax. Oaths are sometimes made, typically to Asmodeus, and rarely of a pleasant nature (such as the reclaiming of the lost empire and vengeance against treacherous former allies).

Citizens wear black on this day, public speaking is forbidden, and old feuds and vendettas are rekindled.`,id:"824553",note:null,date:{day:14,year:null,month:10},category:null},{name:"Evoking Day",description:`Nethys

A holy day to followers of Nethys, Evoking Day is full of vibrant explosions, skillful wielding of spells, and much dancing. Evoking Day is observed on the 18th of Neth, and while this holiday is mostly celebrated in Garund, temples dedicated to Nethys host celebrations throughout the Inner Sea region. Traditional celebrations of Evoking Day have changed over the thousands of years since its first incarnation, but to this day every occurrence of Evoking Day still features a grand meal shared by celebrants during the afternoon and a wondrous exhibition of brilliant and explosive magic once the sun sets. These days, such colorful magical displays are augmented with fireworks of a dozen different colors and patterns.

In temples of Nethys dedicated to revering evocation magic, priests and prominent arcanists participate in spell duels where each contestant stands on a raised platform and takes turns trying to incapacitate her opponent. The magic wielded in theses duels favors the flashy over the dangerous, but clerics of Nethys are on hand to treat any injuries. These duels gather large crowds eager to lend their applause to their favorite contestant.

It is also during this festival when wizards who worship Nethys open their spellbooks to others who share their craft. Wizards normally guard their spellbooks with their lives and covet the eldritch information therein, but on Evoking Day these wizards meet with one another prior to the afternoon feast to share their spells just as they prepare to share a grand meal.

Though Evoking Day is primarily a day of grand magic, those with no spellcasting talent still flock to local temples of Nethys to partake in the shared feast and flashy evening displays of magic and fireworks. Between the meal and into the night, celebrants wear black-and-white robes and perform joyous dances meant to give thanks to the wonders Nethys brought to humankind. These dances are grand affairs involving dozens of dancers all spinning and clapping to the accompanying music as their black-and-white robes fan out around them with each spin. As night descends and the fireworks and magical displays begin, the dancing rises to a climax erupting in shouts and calls to Nethys with each thunderous boom.`,id:"824554",note:null,date:{day:18,year:null,month:10},category:null},{name:"Baptism of Ice",description:`Irrisen

In the Irriseni Baptism of Ice, an annual fertility festival held from the 24th to the 30th of Neth, locals parade all children born during the year through the town in fine clothes. In most towns, the festival ends with a symbolic sacrifice of a child to the cold. However, in Whitethrone and Irrisen's provincial capitals, a peasant child is killed through exposure.`,id:"824555",note:null,date:{day:24,year:null,month:10},category:null},{name:"Transmutatum",description:`Nethys

Transmutatum is one of the three major holidays of the church of Nethys, on 28th of Neth. It is a day of reflection and self-improvement. Many followers of Nethys begin research and crafting projects on this day.`,id:"824556",note:null,date:{day:28,year:null,month:10},category:null},{name:"Winter Week",description:"Traditional feast; time for courting and spending time with friends.",id:"824557",note:null,date:{day:null,year:null,month:11},category:null},{name:"The Shadowchaining",description:`Zon-Kuthon, Nidal

Commemorating the Midnight Lord's gift of shadow animals.`,id:"824558",note:null,date:{day:1,year:null,month:11},category:null},{name:"Pseudodragon Festival",description:`Korvosa

Korvosa's Pseudodragon Festival, a holiday celebrated annually on 7 Kuthona, marks the winter migration of wild pseudodragons from the Mindspin Mountains to Conqueror's Bay, which inspires the creatures already in the city\u2014even those domesticated\u2014to play with their wild kin in the skies over the city. Locals mark the day with a joyous inebriation.`,id:"824559",note:null,date:{day:7,year:null,month:11},category:null},{name:"Ascension Day",description:`Cayden Cailean

Much like the god to whom it is dedicated, the Caydenite holiday of Ascension Day is generally celebrated in a very informal style. Occurring annually on 11 Kuthona, it commemorates the day Cayden Cailean passed the Test of the Starstone and ascended to godhood in 2765 AR. In all likelihood, the 11th of Kuthona is not the exact date on which it actually happened, but since the god was dead drunk when it happened, it will probably be never known.`,id:"824560",note:null,date:{day:11,year:null,month:11},category:null},{name:"Winterbloom",description:`Naderi

Holiday celebrating Naderi's ascension. Celebrations are typically understated but include readings of The Lay of Arden and Lysena.`,id:"824561",note:null,date:{day:15,year:null,month:11},category:null},{name:"Final Day",description:`Groetus

Cultists of Groetus perform an hour's silence at dusk on the last day of the year and seek guidance from their god about the End Time.`,id:"824562",note:null,date:{day:31,year:null,month:11},category:null},{name:"Night of the Pale",description:`Not all of Golarion's holidays and festivals are times of rejoicing and delight. Holidays worshiped by dark and sinister cults and religions tend to be hidden affairs, their rituals and ceremonies involving cruelties and vile practices that send shivers of fear through gentler society. Scholars suspect that the Night of the Pale\u2014a holiday that traditionally takes place on the last day of the year, the 31st of Kuthona\u2014has links to several sinister religions, but today no one church has specific association with the event. Nonetheless, the Night of the Pale is an event that many look forward to all year, whether in fear or excitement.

On the Night of the Pale, it is said that the ghosts of those who died during the previous year manifest upon the world and come to visit the homes they lived in during life. Although some might think that the chance of seeing even the shade of a dearly departed one might be a blessing, the Night of the Pale is not a time for tearful reunions, for these ghosts, tradition says, do not return out of love for those they left behind but out of darker compulsions. Lingering jealousy, unfinished arguments, or the simmering need for revenge are said to be what compels the dead to return to torment the living on the Night of the Pale.

The evening of this night in many communities is celebrated by a morbid feast, the food prepared with themes revolving around graveyards, the dead, and other spooky traditions. This feast, on one level, helps the celebrants to make light of their fears while sharing good company with similarly nervous neighbors, but at another level is believed to placate vengeful spirits as toasts are raised to the memories of the recently departed. These feasts include retellings of favorite memories of the departed, in hopes of reminding the approaching ghosts of brighter and kinder memories than those that compel them to return. The feast always ends at least an hour before midnight in order to give participants time to return home, decorate doors and windows with salt and other trinkets taken from the feasting table (salted bread baked into crook-like shapes are a favorite, as these can be hung from doorknobs and eaves) to ward off evil spirits, and hide in their bedrooms until dawn. Brave youths and adventurers often deliberately stay out after midnight, either to dare the ghosts to challenge them or simply for the thrill of bucking tradition. Every Night of the Pale, it seems, there are disappearances among those who stay out after midnight, although whether these vanishings are the result of dissatisfied locals taking the opportunity to run away from home, murderers or wild animals or other mundane dangers, or the vengeful spirits carrying off their victims depends upon the circumstances.

The morning after a Night of the Pale is also the first day of the new year\u2014a time that many celebrate more as a relief for surviving the night before than in anticipation of what the new year might bring, although regional preferences for how this day is celebrated vary enough that no single tradition holds over the other. Save, of course, the lingering fears of what dread spirits might come knocking upon warded doors one year away...`,id:"824563",note:null,date:{day:31,year:null,month:11},category:null},{name:"Turning Day",description:`Alseta

The changing of the year is celebrated with the forgiveness of old debts and grudges, and embracing new opportunities.`,id:"824564",note:null,date:{day:31,year:null,month:11},category:null},{name:"Ritual of Stardust",description:`Desna

The Ritual of Stardust is one of the few formal religious holidays in honor of the goddess Desna. It is held on both the summer and winter solstices.

Followers of the Song of Spheres gather at dusk and light enormous bonfires and hold feasts, watching the sparks and embers float out into the darkening sky. After it is fully dark, the celebrants chant and sing songs as they watch the fires burn low. When only embers remain, sand mixed with ground star gems (either star rubies, star sapphires, or rose quartz) is thrown on them or into the air downwind. At this point it is common to make proclamations of love and friendship and of promised journeys to come. The twinkling of the sand is thought to mirror the night sky and demonstrate Desna's witnessing of these pronouncements.`,id:"824565",note:null,date:{day:null,year:null,month:null},category:null},{name:"Planting Week",description:`Erastil

This holy week to the god Erastil is a time of heavy work in the fields for farmers.`,id:"824566",note:null,date:{day:null,year:null,month:null},category:null},{name:"Ascendance Night",description:`Norgorber

Day marking the apotheosis of the Reaper of Reputation.`,id:"824567",note:null,date:{day:2,year:null,month:4},category:null},{name:"Azvadeva Dejal",description:`Gruhastha

Celebration of the revelation of the Azvadeva Pujila, with gifts of books, celebrations of knowledge, blessing of animals, and a vegetarian feast.`,id:"824568",note:null,date:{day:3,year:null,month:4},category:null},{name:"Goblin Flea Market",description:`Andoran

A market day that focuses on unusual crafts and offers games to children who dress up for the occasion.`,id:"824569",note:null,date:{day:null,year:null,month:null},category:null},{name:"Breaching Festival",description:`Korvosa

Yearly festival in which contestants try to break through the magical wards protecting the Academae.`,id:"824570",note:null,date:{day:null,year:null,month:4},category:null},{name:"Silverglazer Sunday",description:`Andoran

Silverglazer Sunday is a two-part Andoren national festival that is held on the last Sunday of Arodus and the first Sunday of Rova every year. Celebrants spend the two Sundays fishing, holding swimming competitions, and making enormous puppets.`,id:"824571",note:null,date:{day:null,year:null,month:null},category:null},{name:"Batul al-Alim",description:`Qadira

Batul al-Alim is a holiday celebrated on the last Oathday of Calistril in Qadira. It commemorates the birthday of the popular romantic poet of the same name.`,id:"824572",note:null,date:{day:null,year:null,month:1},category:null}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Religious Holidays",id:"religious-holidays",color:"#9b2c2c"},{name:"Secular Holidays",id:"secular-holidays",color:"#0D47A1"},{name:"Historical Events",id:"historical-events",color:"#455A64"},{name:"Miscellaneous Events",id:"miscellaneous-events",color:"#0288D1"}]},{name:"Calendar of Galifar",description:"Calendar of the world of Eberron.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!1,weekdays:[{type:"day",name:"Sul",id:"ID_598a7bd9b8b9"},{type:"day",name:"Mol",id:"ID_69088ac8f818"},{type:"day",name:"Zol",id:"ID_a8c85a98f8fa"},{type:"day",name:"Wir",id:"ID_fa4b687aaba9"},{type:"day",name:"Zor",id:"ID_58e9a82a6bc8"},{type:"day",name:"Far",id:"ID_9a18cb889ada"},{type:"day",name:"Sar",id:"ID_3b9bfa38c979"}],months:[{name:"Zarantyr",type:"month",length:28,id:"ID_7a8afb09aa6a"},{name:"Olarune",type:"month",length:28,id:"ID_386b188b2a89"},{name:"Therendor",type:"month",length:28,id:"ID_599a0ad859c8"},{name:"Eyre",type:"month",length:28,id:"ID_98a95869e90b"},{name:"Dravago",type:"month",length:28,id:"ID_eb5a194bcbf8"},{name:"Nymm",type:"month",length:28,id:"ID_bb596aa9ca5b"},{name:"Lharvion",type:"month",length:28,id:"ID_fb1bb9dabb88"},{name:"Barrakas",type:"month",length:28,id:"ID_8bcb19c8f90a"},{name:"Rhaan",type:"month",length:28,id:"ID_0a09eb5b7b9b"},{name:"Sypheros",type:"month",length:28,id:"ID_3b98ab1a29e8"},{name:"Aryth",type:"month",length:28,id:"ID_899b59faaba9"},{name:"Vult",type:"month",length:28,id:"ID_8a286b78aac9"}],moons:[{name:"Nymm",cycle:28,offset:-14,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_a8b88988a94a"},{name:"Sypheros",cycle:35,offset:-11,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_5ba80b4b096a"},{name:"Therendor",cycle:42,offset:21,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_c999085a499b"},{name:"Rhaan",cycle:49,offset:9,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_39f91ab8a85a"},{name:"Olarune",cycle:56,offset:27,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_2ada8b99788b"},{name:"Eyre",cycle:63,offset:10,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_49285b79d988"},{name:"Vult",cycle:70,offset:6,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_eaebb94a9acb"},{name:"Zarantyr",cycle:77,offset:31,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_98d86aabcbb9"},{name:"Aryth",cycle:84,offset:41,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_d989b809d97b"},{name:"Dravago",cycle:91,offset:31,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_1a293959eaab"},{name:"Lharvion",cycle:98,offset:34,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_cbf919491a5b"},{name:"Barrakas",cycle:105,offset:-11,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_4a1a2a6b589b"}],leapDays:[],eras:[]},current:{year:998,day:1,month:0},events:[{name:"The Tain Gala - Sharn",description:"The Tain Gala is a notable event held on the first Far of each month in Sharn.",id:"824461",note:null,date:{day:null,year:null,month:null},category:null},{name:"Revelation Day - Blood of Vol",description:"Meditation ceremony for Seekers (also called Ascension Day).",id:"824462",note:null,date:{day:13,year:null,month:0},category:null},{name:"Winter Solstice",description:"The longest night of the year.",id:"824463",note:null,date:{day:14,year:null,month:0},category:null},{name:"Rebirth Eve - The Silver Flame",description:"The Purified new year; a night for spiritual vigil and guarding against evil. ",id:"824464",note:null,date:{day:14,year:null,month:0},category:null},{name:"Crystalfall - Sharn",description:"A day of remembrance; Ice sculptures are created (and destroyed) to commemorate the destruction of the Glass Tower on 9 Olarune in 918 by abjurers. ",id:"824465",note:null,date:{day:9,year:998,month:1},category:null},{name:"Bright Souls' Day - The Silver Flame",description:"On this day each year, the Purified celebrate the lives and sacrifice of all followers of the Flame who died while fighting evil and protecting the faithful. ",id:"824466",note:null,date:{day:18,year:null,month:1},category:null},{name:"The Day of Mourning - Sharn",description:"In commemoration of the destruction of the nation of Cyre, those who survived gather to remember the loss of their kingdom on this date in the year 994. ",id:"824467",note:null,date:{day:20,year:995,month:1},category:null},{name:"Tirasday - The Silver Flame",description:"On this day, the Silver Flame work, give gifts, and partake in joyous celebration out of thankfulness for the new planting season and the birth of Tira Miron - the Voice of the Silver Flame.",id:"824468",note:null,date:{day:5,year:null,month:2},category:null},{name:"Sun's Blessing - The Sovereign Host",description:"The Sovereign Host enjoys this festival of peace, and of setting aside differences, in the name of Dol Arrah.",id:"824469",note:null,date:{day:15,year:null,month:2},category:null},{name:"Initiation Day - The Silver Flame",description:"Seminary graduations and breaking grounds for new churches are common on this day as the Silver Flame recalls their declarations of independent faith and the construction of their first cathedral on this special day each year. ",id:"824470",note:null,date:{day:11,year:null,month:3},category:null},{name:"Baker's Night - The Silver Flame",description:"An old and misunderstood, yet immensely popular, holiday wherein followers of the Silver Flame gather to share pastries and treats created by bakers within their fold. ",id:"824471",note:null,date:{day:6,year:null,month:4},category:null},{name:"Aureon's Crown - Sharn and The Sovereign Host",description:`The Sovereign Host celebrate knowledge on this day with lectures and sermons.Secular institutions hold graduation and commencement ceremonies on this date, as do the monastic schools of the Silver Flame.In Sharn this has become a common secular holiday, wherein even non-devout members of the Five Nations attend lectures and sermons held by the priests of Aureon on philosophical, historical, and a range of other topics - including discussions on the nature of the gods.

`,id:"824472",note:null,date:{day:26,year:null,month:4},category:null},{name:"Promisetide - The Silver Flame",description:"A controversial holiday outside of the Silver Flame faith, on this day the Purified honor the Silver Flame for the promise of paradise. They also honor (without worship) the Sovereign Host for having created the world, before stepping aside to allow the Flame its rightful place as the last god of Eberron.\xA0 ",id:"824473",note:null,date:{day:28,year:null,month:4},category:null},{name:"Brightblade - Sharn and The Sovereign Host",description:`This Sovereign Host festival, dedicated to Dol Dorn, is marked by gladiatorial and athletic contests. 

In Sharn, festival celebrations occur throughout the temple districts with events culminating in a combined contest of champions at the Cornerstone Arena. `,id:"824474",note:null,date:{day:12,year:null,month:5},category:null},{name:"First Dawn - The Silver Flame",description:"On this day in 914, the Church of the Silver Flame officially assumed control of the government of Thrane. On each anniversary, the Purified give thanks for their just rule, while also honoring the memory of King Thalin, whose death paved the way for their governance.",id:"824475",note:null,date:{day:21,year:915,month:5},category:null},{name:"Silvertide - The Silver Flame",description:"Commemoration of both the couatl sacrifice and the entry, thousands of years ago, of the Silver Flame into Eberron mark this highest of holy days. The vast majority of Purified spend this day in prayer and observance.\xA0 ",id:"824476",note:null,date:{day:14,year:null,month:6},category:null},{name:"The Race of Eight Winds - Sharn",description:`Legend tells of King Galifar II's fascination with aerial scouts and cavalry. The evolution of this annual contest took centuries, but has given Sharn an exotic and well anticipated event involving beasts and their riders in a symbiotic quest for glory* over a course that finds them weaving through the spires of the city. 



*the winner also receives 500gp and a land grant located elsewhere in Breland.`,id:"824477",note:null,date:{day:21,year:201,month:6},category:null},{name:"The Hunt - Sharn and The Sovereign Host",description:`The Sovereign Host celebrate Balinor with communal hunts of dangerous creatures. 

In Sharn, a dangerous beast*, whose transport to the city was arranged by the priests of Balinor, is released into the Depths of the Lower-City. Open to any who would participate (and pay an entry fee in the form of a 5gp donation), the victor must return with the beast's head to receive a 500gp purse, local fame, and the blessing of Balinor. 



*often a singular beast, it can be several - which then requires the victor to return with the most skins. `,id:"824478",note:null,date:{day:4,year:null,month:7},category:null},{name:"Victory Day - The Silver Flame",description:"Commemorating the conclusion of the lycanthropic purge (832 YK - 880 YK), on Victory Day the adult faithful of the Silver Flame attend sermons on triumph, defeat, and the somewhat questionable methods utilized by the templars during the purge - while the children of the faithful act out great battles with toy swords. ",id:"824479",note:null,date:{day:9,year:881,month:7},category:null},{name:"Fathen's Fall - Sharn",description:"Honoring the memory of Fathen, a great hero of the Silver Crusade (832 YK - 880 YK), who, in the last days of the purge, was torn apart by wererats on the streets of North Market. Faithful gather on this day at the Shrine of Fathen the Martyr to listen to a sermon from the priest of High Hope. This holiday is often uncomfortable and tense for shifter communities in Sharn. ",id:"824480",note:null,date:{day:25,year:881,month:7},category:null},{name:"Boldrei's Feast - Sharn and The Sovereign Host",description:`A feast of community in the name of Boldrei, extravagant parties are often held on this holiday and it has also become the traditional day for elections. 

In Sharn, a great feast is held at the Pavilion of the Host with goods and services donated\xA0 from local merchants, as well as House Ghallanda. Many grand parties, some quite astonishing in their opulence, are hosted by the wealthiest members of varying districts - often in competition with one another for social standing. `,id:"824481",note:null,date:{day:9,year:null,month:8},category:null},{name:"The Ascension - Sharn",description:"Each year on The Ascension, followers reaffirm their faith and give thanks as well as attend blessing ceremonies at temples throughout the city - the grandest of which occurs at the Cathedral of the Cleansing Flame. All of this is to honor the sacrifice of Tira Miron, the Voice of the Flame, without which there would be no Church of the Silver Flame. Contributions to their community on this day are a high priority for the faithful.",id:"824482",note:null,date:{day:1,year:null,month:9},category:null},{name:"Wildnight - Sharn",description:"With the The Fury (the Sovereign of Passion and Madness) reaching the height of her power on this night, people find it difficult to control or restrain their impulses - once the sun sets, public revelry in the streets climbs to joyous or, all too often, dangerous levels, calming only as the sun rises on the following morning. ",id:"824483",note:null,date:{day:18,year:null,month:9},category:null},{name:"Saint Voltros's Day - The Silver Flame",description:"Though one of the least high holy days, it is marked by brief prayers and church services in the honor of the birth of Saint Voltros - the first paladin called to only serve the Silver Flame.",id:"824484",note:null,date:{day:25,year:null,month:9},category:null},{name:"Thronehold - Sharn",description:"On this day in 996, the Treaty of Thronehold was signed, formally ending the Last War. Annual celebratory feasts are held throughout the Five Nations to mark this auspicious and long-awaited event. ",id:"824485",note:null,date:{day:11,year:997,month:10},category:null},{name:"Rampartide - The Silver Flame",description:"In accordance with scripture, on this day the Purified steel themselves against wickedness, both without and within, through repentance and fasting. Children, elderly, and the sick are required only to give up their favorite foods for the day. ",id:"824486",note:null,date:{day:24,year:null,month:10},category:null},{name:"Long Shadows - Sharn",description:"As dark magic dominates over these three days of the Long Shadows, the myth of Sovereign Lord Aureon's stolen shadow is forefront in the minds of the people. Most will spend these days indoors huddled around the warmth of a fire, but those few who worship the dark deity use this time to prey upon the weak and the foolish. ",id:"824487",note:null,date:{day:26,year:null,month:11},category:null},{name:"Khybersef - The Silver Flame",description:`Originally called Khyber's Eve, the Purified spend the night in intense prayer and spiritual vigilance against the, according to scripture, "thinning of the bonds that hold the demon lords in Khyber" between now (the beginning of winter) and the solstice. Quests and crusades often begin on Khybersef. `,id:"824488",note:null,date:{day:27,year:null,month:11},category:null},{name:"Spring Equinox",description:"The spring equinox is when the day and the night are equally as long, and are getting longer.",id:"824489",note:null,date:{day:null,year:null,month:null},category:null},{name:"Summer Solstice",description:"	At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824490",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The autumn equinox is when the day and the night are equally as long, and are getting shorter.",id:"824491",note:null,date:{day:null,year:null,month:null},category:null}],id:null,categories:[]},{name:"Barovian Calendar",description:"Calendar of the realm of Barovia, home of Strahd.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!0,weekdays:[{type:"day",name:"Monday",id:"ID_6a183b08c8eb"},{type:"day",name:"Tuesday",id:"ID_892b7b7a5ae9"},{type:"day",name:"Wednesday",id:"ID_6bb98899ba68"},{type:"day",name:"Thursday",id:"ID_4a7b683aea19"},{type:"day",name:"Friday",id:"ID_78690a099b89"},{type:"day",name:"Saturday",id:"ID_ba5b09ba5a89"},{type:"day",name:"Sunday",id:"ID_29b90acaead9"}],months:[{name:"1st Moon",type:"month",length:31,id:"ID_7b4978ab581a"},{name:"2nd Moon",type:"month",length:28,id:"ID_cb99fbb9395b"},{name:"3rd Moon",type:"month",length:31,id:"ID_79881a89cb18"},{name:"4th Moon",type:"month",length:30,id:"ID_5b9a8a397908"},{name:"5th Moon",type:"month",length:31,id:"ID_f8399ab80818"},{name:"6th Moon",type:"month",length:30,id:"ID_3ac84a7bc869"},{name:"7th Moon",type:"month",length:31,id:"ID_e98bc86bc809"},{name:"8th Moon",type:"month",length:31,id:"ID_89ea78ca5988"},{name:"9th Moon",type:"month",length:30,id:"ID_798a3b990a4b"},{name:"10th Moon",type:"month",length:31,id:"ID_3a9999e8eb59"},{name:"11th Moon",type:"month",length:30,id:"ID_db39383b990a"},{name:"12th Moon",type:"month",length:31,id:"ID_1bfa3b180a48"}],moons:[{name:"Moon",cycle:29.530588853,offset:10.24953,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_e98b3a8ab8da"}],leapDays:[{name:"Leap Day",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:400},{ignore:!1,exclusive:!0,interval:100},{ignore:!1,exclusive:!1,interval:4}],offset:0,timespan:1,intercalary:!1,id:"ID_6a28dbb81a48"}],eras:[{name:"Before Christ",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-9e3,month:0,day:0}},{name:"Anno Domini",description:"",format:"Year {{year}} - {{era_name}}",start:{year:1,month:0,day:1}}]},current:{year:735,day:1,month:0},events:[{name:"Winter Solstice",description:"The Winter Solstice is the day of the year with the least time between sunrise and sunset. Many western cultures consider it the official start of winter.",id:"824455",note:null,date:{day:null,year:null,month:null},category:"natural-event"},{name:"Summer Solstice",description:`The Summer Solstice is the day of the year with the most time between 
sunrise and sunset. Many western cultures consider it the official start
 of summer.`,id:"824456",note:null,date:{day:null,year:null,month:null},category:"natural-event"},{name:"Spring Equinox",description:`The Spring Equinox,
also called the Vernal Equinox, is the day between the winter and
summer solstices where the day is the exact same length as the night.
Many western cultures consider it the official start of Spring.
`,id:"824457",note:null,date:{day:null,year:null,month:null},category:"natural-event"},{name:"Autumnal Equinox",description:`The Autumnal Equinox,
also called the Fall Equinox, is the midpoint between the summer and
winter solstices, where the day is the exact same length as the night.
Many western cultures consider it the official start of Autumn.
`,id:"824458",note:null,date:{day:null,year:null,month:null},category:null},{name:"New Year's Day",description:"New Year's day marks the start of a new year.",id:"824459",note:null,date:{day:1,year:null,month:null},category:null},{name:"Paschal Full Moon",description:"The first full moon after march 21st, which is considered the fixed date for the spring equinox.",id:"824460",note:null,date:{day:null,year:null,month:null},category:"natural-event"}],id:null,categories:[{name:"Natural Event",id:"natural-event",color:"#9e9d24"}]},{name:"Exandrian Calendar",description:"Calendar of the world of Wildemount.",static:{displayDayNumber:!1,firstWeekDay:2,incrementDay:!1,displayMoons:!0,overflow:!0,weekdays:[{type:"day",name:"Miresen",id:"ID_3b38aaa81bca"},{type:"day",name:"Grissen",id:"ID_da6b19882baa"},{type:"day",name:"Whelsen",id:"ID_a9cae8f88b98"},{type:"day",name:"Conthsen",id:"ID_e87859eb5aaa"},{type:"day",name:"Folsen",id:"ID_59180abbea8a"},{type:"day",name:"Yulisen",id:"ID_98082bd8d8ca"},{type:"day",name:"Da'leysen",id:"ID_da4ba92b299a"}],months:[{name:"Horisal",type:"month",length:29,id:"ID_e89a4ab9995b"},{name:"Misuthar",type:"month",length:30,id:"ID_18b8894bab7b"},{name:"Dualahei",type:"month",length:30,id:"ID_0a9b29f8f8db"},{name:"Thunsheer",type:"month",length:31,id:"ID_6a8a8a5bea5b"},{name:"Unndilar",type:"month",length:28,id:"ID_b8295bdbcafa"},{name:"Brussendar",type:"month",length:31,id:"ID_c92a489bb909"},{name:"Sydenstar",type:"month",length:32,id:"ID_7b48bb1b0a4a"},{name:"Fessuran",type:"month",length:29,id:"ID_289858c97849"},{name:"Quen'pillar",type:"month",length:27,id:"ID_f8abd9a86aa9"},{name:"Cuersaar",type:"month",length:29,id:"ID_7aba59fa2b69"},{name:"Duscar",type:"month",length:32,id:"ID_5819f86b99cb"}],moons:[{name:"Catha",cycle:33,offset:7,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_0ab929092b5b"},{name:"Ruidus",cycle:328,offset:80,faceColor:"#ff6161",shadowColor:"#1f1f1f",id:"ID_b9783ac818e9"}],leapDays:[],eras:[{name:"The Founding",description:"",format:"Year {{year}} - {{era_name}}",start:{year:1,month:0,day:1}},{name:"Age of Arcanum",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-1500,month:0,day:1}},{name:"The Calamity",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-665,month:0,day:1}},{name:"Post-Divergence",description:"",format:"Year {{year}} P.D.",start:{year:1,month:0,day:1}}]},current:{day:1,month:0,year:836},events:[{name:"Spring Equinox",description:"The spring equinox is when the day and the night are equally as long, and are getting longer.",id:"824430",note:null,date:{day:null,year:null,month:null},category:null},{name:"Summer Solstice",description:"	At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824431",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The autumn equinox is when the day and the night are equally as long, and are getting shorter.",id:"824432",note:null,date:{day:null,year:null,month:null},category:null},{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824433",note:null,date:{day:null,year:null,month:null},category:null},{name:"New Dawn",description:`The first day of the new year is also the holy day of the Changebringer, as the old year gives way to a new path.

In Tal'Dorei, Emon celebrates New Dawn with a grand midnight feast, which commonly features a short play celebrating the changes witnessed in the past year.

On the Menagerie Coast, people celebrate by having a feast on the shore at dusk to watch the sunset. They feast and discuss their hopes for the new year until the sun rises.`,id:"824434",note:null,date:{day:1,year:null,month:0},category:"religious-holidays"},{name:"Hillsgold",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824435",note:null,date:{day:27,year:null,month:0},category:"secular-holidays"},{name:"Day of Challenging",description:`The holy day of the Stormlord is one of the most raucous holidays in Emon. Thousands of spectators attend the annual Godsbrawl, which is held in the fighting ring within the Temple of the Stormlord. The people root for their deity's favored champion, and there is a fierce (yet friendly) rivalry between the Champion of the Stormlord and the Champion of the Platinum Dragon. The winner earns the title of "Supreme Champion" for an entire year.

The Day of Challenging is one of the most raucous holidays in Port Damali, and thousands of spectators attend the annual Godsbrawl held in the Temple of\xA0Kord to root for their favored deity's champion, particularly the chosen champions of the Storm Lord and the\xA0All-Hammer.\xA0`,id:"824436",note:null,date:{day:7,year:null,month:1},category:"religious-holidays"},{name:"Renewal Festival",description:"Spring begins early in the month of Dualahei, officially starting on the 13th with the Renewal Festival.",id:"824437",note:null,date:{day:13,year:null,month:2},category:"secular-holidays"},{name:"Wild's Grandeur",description:`Though the Archeart is the god of spring, the peak of the spring season is the holy day of the Wildmother.

The people in the southern wilds of Tal'Dorei celebrate the Wildmother's strength by journeying to a place of great natural beauty. This could be the top of a mountainous waterfall, the center of a desert, or even an old and peaceful city park (such as Azalea Street Park in Emon). Though Emon rarely celebrates Wild's Grandeur, the few who do will plant trees in observance of the holiday.

The people of the Menagerie Coast set aside this day to sail for no reason other than the pleasure of observing the natural beauty of their surroundings. Those who still partake in elements of Ki'Nau culture take this day to appreciate the fruits and foods granted by the sea, leaving offerings of delicacies and small handmade crafts at temporary altars of twisted roots and grasses.`,id:"824438",note:null,date:{day:20,year:null,month:2},category:"religious-holidays"},{name:"Harvest's Rise",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824439",note:null,date:{day:11,year:null,month:3},category:"secular-holidays"},{name:"Merryfrond's Day",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824440",note:null,date:{day:31,year:null,month:3},category:"secular-holidays"},{name:"Deep Solace",description:`Moradin's holy day is Deep Solace, which is celebrated on the eighteenth day of the fifth month. Especially devout followers of the All-Hammer spend the day in isolation, meditating on the meaning of family and how they may be better mothers, fathers, siblings, and children.

The dwarven communities across Exandria, such as the ones in Grimgolir and Kraghammer, celebrate with a full day of feasting and drinking.\xA0`,id:"824441",note:null,date:{day:18,year:null,month:4},category:"religious-holidays"},{name:"Zenith",description:"Summer begins in the middle of Unndilar, officially starting at noon on the 26th day known as the Zenith.",id:"824442",note:null,date:{day:26,year:null,month:4},category:"secular-holidays"},{name:"Artisan's Faire",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824443",note:null,date:{day:15,year:null,month:5},category:"secular-holidays"},{name:"Elvendawn",description:`Corellon's holy day is called Elvendawn,
or Midsummer. It is celebrated on the twentieth day
of the sixth month, and commemorates the elves' first
emergence from the Feywild.

In Syngorn, the Elves open small doorways into the Feywild and celebrate alongside the wild fey with uncharacteristic vigor.

Though the Dwendalian
Empire doesn't promote the worship of the Arch Heart,
the elves of Bysaes Tyl quietly celebrate in private by
opening small doors to the Feywild and having a little
more wine than usual.\xA0`,id:"824444",note:null,date:{day:20,year:null,month:5},category:"religious-holidays"},{name:"Highsummer",description:`The holy day of the Dawnfather is the peak of the summer season.

Emon celebrates with an entire week of gift-giving and feasting, ending at midnight on the 21st of Sydenstar (the anniversary of the Battle of the Umbra Hills, where Zan Tal'Dorei dethroned Trist Drassig).

Whitestone (where the Dawnfather is the city's patron god) celebrates with gift-giving and a festival of lights around the Sun Tree. Due to the Briarwood occupation, money is thin, so most Whitestone folk choose to recount the small things they are thankful for, rather than buy gifts.

While other parts of Exandria feast, the Dwendalian
Empire uses this day as an opportunity to enlist more
soldiers in its army. The military holds great feasts and
hands out toy soldiers and other propaganda, encouraging people to enlist and help fight against the evil that
threatens the king.\xA0`,id:"824445",note:null,date:{day:7,year:null,month:6},category:"religious-holidays"},{name:"Morn of Largesse",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824446",note:null,date:{day:14,year:null,month:6},category:"secular-holidays"},{name:"Harvest's Close",description:"Autumn begins on the 3rd of Fessuran\xA0and is typically celebrated with feasting in rural regions and with carnivals in the cities.\xA0",id:"824447",note:null,date:{day:3,year:null,month:7},category:"secular-holidays"},{name:"The Hazel Festival",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824448",note:null,date:{day:12,year:null,month:8},category:"secular-holidays"},{name:"Civilization's Dawn",description:`The Law Bearer's holy day is Civilization's
Dawn, which is celebrated on the autumnal equinox,
usually the twenty-second day of the ninth month.

Emon celebrates with a great bonfire in the square of each neighborhood, around which each community dances and gives gifts.

In the
Dwendalian Empire, people celebrate by having feasts 
in honor of the laws of the Dwendal bloodline. One seat
at every table is left open for the king, who eats in spirit
with the people he rules.\xA0`,id:"824449",note:null,date:{day:22,year:null,month:8},category:"religious-holidays"},{name:"Night of Ascension",description:`The Raven Queen's holy day is called the Night of Ascension, celebrating her apotheosis. The actual date of the her rise to divinity is unclear, but the Night of Ascension is celebrated on the thirteenth day of the tenth month.

Though most in Emon see this celebration of the dead as unnerving and macabre, the followers of the Matron of Ravens believe that the honored dead would prefer to be venerated with cheer, not misery.

What was once a night of cheery celebration of the dead in the Dwendalian Empire has recently become an occasion to burn effigies and decry the Kryn Dynasty for their unnatural relationship with death.`,id:"824450",note:null,date:{day:13,year:null,month:9},category:"religious-holidays"},{name:"Zan's Cup",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824451",note:null,date:{day:21,year:null,month:9},category:"secular-holidays"},{name:"Barren Eve",description:"Winter begins on the 2nd day of Duscar, the Barren Eve, which is a nighttime celebration and remembrance of those who fell in battle.",id:"824452",note:null,date:{day:2,year:null,month:10},category:"secular-holidays"},{name:"Embertide",description:"Bahamut's holy day is called Embertide,\xA0and is celebrated on the fifth day of Duscar. This is a day\xA0of remembrance, solemnity, and respect for those who\xA0have fallen in the defense of others.",id:"824453",note:null,date:{day:5,year:null,month:10},category:"religious-holidays"},{name:"Winter's Crest",description:`This day celebrates the freedom of Tal'Dorei from Errevon the Rimelord. It is the peak of the winter season, so devout followers of the Matron of Ravens (as the goddess of winter) consider it to be one of her holy days.

However, in most of the land, people see Winter's Crest as a secular holiday, often celebrated with omnipresent music in public areas, lavish gift-giving to relatives and loved ones, and the cutting and decorating of trees placed indoors. The Sun Tree in Whitestone is often decorated with lights and other baubles for Winter's Crest.`,id:"824454",note:null,date:{day:20,year:null,month:10},category:"secular-holidays"}],id:null,categories:[{name:"Religious Holidays",id:"religious-holidays",color:"#0D47A1"},{name:"Secular Holidays",id:"secular-holidays",color:"#4A148C"}]},{name:"Calendar of Harptos",description:"Calendar of Faer\xFBn of the Forgotten Realms.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!1,weekdays:[{type:"day",name:"I",id:"ID_9999882bb94a"},{type:"day",name:"II",id:"ID_8a0b4b79d888"},{type:"day",name:"III",id:"ID_da483aca8bf9"},{type:"day",name:"IV",id:"ID_a8fbea39cac8"},{type:"day",name:"V",id:"ID_9b19d9787b0b"},{type:"day",name:"VI",id:"ID_382a590a8a28"},{type:"day",name:"VII",id:"ID_fbca0ab80afb"},{type:"day",name:"VIII",id:"ID_ca093bca5ad9"},{type:"day",name:"IX",id:"ID_d95b39098bf8"},{type:"day",name:"X",id:"ID_389bfb5858db"}],months:[{name:"Hammer (Deepwinter)",type:"month",length:30,id:"ID_cbeb4b190b6a"},{name:"Midwinter",type:"intercalary",length:1,id:"ID_89bad9089b7b"},{name:"Alturiak (The Claw of Winter)",type:"month",length:30,id:"ID_6a08a8aacb7b"},{name:"Ches (The Claw of the Sunsets)",type:"month",length:30,id:"ID_db2a7bf97afa"},{name:"Tarsakh (The Claw of Storms)",type:"month",length:30,id:"ID_6b48982b0bda"},{name:"Greengrass",type:"intercalary",length:1,id:"ID_08790af92809"},{name:"Mirtul (The Melting)",type:"month",length:30,id:"ID_b91b39f95a28"},{name:"Kythorn (The Time of Flowers)",type:"month",length:30,id:"ID_f8e9585a2bf8"},{name:"Flamerule (Summertide)",type:"month",length:30,id:"ID_fa895bdb38e9"},{name:"Midsummer",type:"intercalary",length:1,id:"ID_a9181b5a683a"},{name:"Eleasis (Highsun)",type:"month",length:30,id:"ID_1b1b1b287b0a"},{name:"Eleint (The Fading)",type:"month",length:30,id:"ID_1aca5918993a"},{name:"Highharvestide",type:"intercalary",length:1,id:"ID_a94a183b4b88"},{name:"Marpenoth (Leaffall)",type:"month",length:30,id:"ID_58d97969eb79"},{name:"Uktar (The Rotting)",type:"month",length:30,id:"ID_4b090b787b18"},{name:"The Feast of the Moon",type:"intercalary",length:1,id:"ID_1b0ae8dbdb4a"},{name:"Nightal (The Drawing Down)",type:"month",length:30,id:"ID_abb82afab80a"}],moons:[{name:"Sel\xFAne",cycle:30.4375,offset:13.9,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_48ea2a69a888"}],leapDays:[{name:"Shieldsmeet",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:4}],offset:0,timespan:9,intercalary:!1,id:"ID_5b08faa88ada"}],eras:[]},current:{year:1491,day:1,month:0},events:[{name:"Winter Solstice",description:null,id:"824588",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Vernal Equinox",description:null,id:"824589",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Summer Solstice",description:null,id:"824590",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Autumnal Equinox",description:null,id:"824591",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Shieldmeet",description:`Shieldmeet was the equivalent of a leap year day in the Calendar of Harptos, occurring once every four years, adding a day after the festival of Midsummer and before Eleasis 1. Traditionally the day was used for fairs, bazaars, musical and theatrical performances, and tournaments of skill and magical ability. Nobles usually held court to hear the petitions of their people and to make or renew trade pacts, alliances, and agreements. Shieldmeet was known as Cinnaelos'Cor (also seen as Cinnaeloscor), "the Day of Corellon's Peace" in elvish and marked the end of an aeloulaev and the beginning of a new one in the elven Aryselmalyn calendar.`,id:"824592",note:null,date:{day:2,year:null,month:9},category:"festivals"},{name:"Feast of the Moon",description:`The Feast of the Moon, or Moonfest, was an annual festival in the Calendar of Harptos, occurring between the final night of Uktar and the first day of Nightal. It was the last great festival of the calendar year.

The day traditionally marked the onset of winter. It was also a time to celebrate and honor the ancestors and the respected dead. On this day, folk blessed their ancestors' graves and performed the Ritual of Remembrance. People also gathered to tell stories of the deeds of their ancestors and of the gods until deep into the night, until they merged and became legend. This was a time to hear of past heroes, great treasures, and lost cities.

In Faer\xC3\u0192\xC2\xBBn, battles were typically fought between harvest-time and the coming of winter. This meant that most of the fighting usually occurred in the month of Uktar. The timing of the Feast of the Moon\xC3\xA2\xE2\u201A\xAC\xE2\u20ACafter recently slain soldiers had joined the ranks of the dead\xC3\xA2\xE2\u201A\xAC\xE2\u20ACwas thus practical, if sadly ironic.

The Heralds of Faer\xC3\u0192\xC2\xBBn had a number of special duties on the Feast of the Moon. Prime among these was to perform the Bloodsong ceremony, at which a Herald publicly recited the genealogies of each noble family in the area. In this way, the Heralds reaffirmed a noble family's traditional authority and status, as well as the respect accorded to them.

Priests of a number of deities of various pantheons held rites, ceremonies, and festivals on the Feast of the Moon. Many, though not all, focused on remembering the dead in one way or another.`,id:"824593",note:null,date:{day:1,year:null,month:15},category:"festivals"},{name:"Highharvesttide",description:`Highharvestide was an annual festival in the Calendar of Harptos, taking place between 30 Eleint and 1 Marpenoth. It was traditionally a feast to celebrate the harvest and the abundance of food, but also the time when those wishing to travel left on their journeys before winter set in.

Preparations for the feast started as early as a tenday before, while preparing, cooking, and preserving the harvest for the cold winter months. Traditions varied from community to community, but examples of festive activity included food-related contests; races and challenges of skill and strength; receiving homemade sweets from the local clergy; and priests blessing larders, wine cellars, grain bins, and food preserves.

This day was often an important anniversary to various governments. Often, taxes and tithes came due, rulers held "open courts" to hear the concerns of their citizens, oaths were publicly renewed, troops received marching orders to new duty stations, and guilds met to confer on prices and rate changes for goods and services.

According to tradition, dwarves only drank water and elves drank only dew on this day. However, these traditions began to fade in the 14th and 15th century DR.

It was said that children born on this day were favored by Tymora to have lifelong good luck but be smitten with wanderlust. Another legend was that human females born on this day had control over their reproductive system (i.e., got pregnant only when they wanted to) by force of will alone, and that they could instantly sense when they had been poisoned, either by ingestion or being bitten by a venomous creature for example.`,id:"824594",note:null,date:{day:1,year:null,month:12},category:"festivals"},{name:"Greengrass",description:"Greengrass was a festival to welcome in the first day of spring in the Calendar of Harptos. It occured annually on a special day between Tarsakh 30 and Mirtul 1. Traditionally, the wealthier people brought out flowers to give to the less wealthy, who either wore them or spread them on the ground to encourage the deities to usher in the summer.",id:"824595",note:null,date:{day:1,year:null,month:5},category:"festivals"},{name:"Midwinter",description:`Midwinter (also known as Deadwinter Day) was a festival to mark the midpoint of winter in the Calendar of Harptos. It occured on a special day between Hammer 30 and Alturiak 1. Amongst nobles and monarchs it was known as Midwinter and was traditionally used to make or renew alliances, although the common people called it Deadwinter Day, a reference to the cold and hard times that remained before the spring.

On Midwinter Day the Red Fellowship of the Deity known as the Red Knight observes the Retreat. This solemn ceremony consists of an assembly wherein the clergy discuss the previous year's campaigns. Strategies are discussed, battles analyzed, and the accumulated lore integrated into the church's teachings.

The holiest day of the year for the Church of Shevarash is Midwinter Night, during which the Dark Court Slaughter is remembered. Inductions into the ranks of the clergy occur at this time. Each new cleric screams vows of vengeance into the night air and swears neither to laugh nor smile until the Spider Queen and her followers are no more.`,id:"824596",note:null,date:{day:1,year:null,month:1},category:"festivals"},{name:"Midsummer",description:"Midsummer was a festival that celebrated love and music through feast. It occurred between Flamerule 30 and Eleasis 1 on the Calendar of Harptos. It was a time when love advanced, and it was said the deities themselves took a hand to ensure good weather. If bad weather was experienced on this night it was considered an extremely bad omen. Shieldmeet occurred the day after Midsummer on leap years.",id:"824597",note:null,date:{day:1,year:null,month:9},category:"festivals"}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Festivals",id:"festivals",color:"#9b2c2c"}]}];var lo=class extends Pn.Modal{async onOpen(){await this.display()}async display(){this.containerEl.addClass("fantasy-calendar-choose-preset"),this.contentEl.empty(),this.contentEl.createEl("h3",{text:"Choose a Preset Calendar"});let e=this.contentEl.createDiv("fantasy-calendar-preset-container");for(let r of nu){let a=new Pn.ButtonComponent(e).onClick(()=>{this.preset=r,this.display()});this.preset==r&&a.setCta(),a.buttonEl.createDiv({cls:"setting-item-name",text:r.name}),a.buttonEl.createDiv({cls:"setting-item-description",text:r.description})}let n=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new Pn.ButtonComponent(n).setButtonText("Apply").onClick(()=>{this.saved=!0,this.preset=(0,ru.default)(this.preset),this.close()}).setCta(),new Pn.ExtraButtonComponent(n).setIcon("cross").onClick(()=>{this.close()})}};function Ra(t){let e=t-1;return e*e*e+1}function uo(t,{delay:e=0,duration:n=400,easing:r=Ra,x:a=0,y:i=0,opacity:o=0}={}){let l=getComputedStyle(t),s=+l.opacity,d=l.transform==="none"?"":l.transform,u=s*(1-o);return{delay:e,duration:n,easing:r,css:(c,h)=>`
			transform: ${d} translate(${(1-c)*a}px, ${(1-c)*i}px);
			opacity: ${s-u*h}`}}var fr=[];function hr(t,e=J){let n,r=new Set;function a(l){if(le(t,l)&&(t=l,n)){let s=!fr.length;for(let d of r)d[1](),fr.push(d,t);if(s){for(let d=0;d<fr.length;d+=2)fr[d][0](fr[d+1]);fr.length=0}}}function i(l){a(l(t))}function o(l,s=J){let d=[l,s];return r.add(d),r.size===1&&(n=e(a)||J),l(t),()=>{r.delete(d),r.size===0&&(n(),n=null)}}return{set:a,update:i,subscribe:o}}var su=Oe(require("obsidian"));var au=Oe(require("obsidian"));function un(t){(0,au.setIcon)(t,"fantasy-calendar-warning")}function iu(t){let e=[];if(t.name?.length||e.push("A calendar must have a name."),(!Mn(t.current.day,t)||!In(t.current.month,t)||!On(t.current.year,t))&&e.push("Specified current date is not valid."),!t.static.weekdays?.length)e.push("A calendar must have at least 1 weekday.");else{if(!t.static.weekdays?.every(n=>n.name?.length)){let n=t.static.weekdays?.filter(r=>!r.name?.length).length;n==1?e.push(`${n} weekday does not have a name.`):e.push(`${n} weekdays do not have names.`)}t.static.firstWeekDay>=(t.static.weekdays?.length??1/0)&&e.push(`Invalid first weekday selection: ${t.static.weekdays[t.static.firstWeekDay]}`)}if(!t.static.months?.length)e.push("A calendar must have at least 1 month.");else{if(!t.static.months?.every(n=>n.name?.length)){let n=t.static.months?.filter(r=>!r.name?.length).length;n==1?e.push(`${n} month does not have a name.`):e.push(`${n} months do not have names.`)}if(!t.static.months?.every(n=>n.length>0)){let n=t.static.months?.filter(r=>!(r.length>0)).length;n==1?e.push(`${n} month does not have a length.`):e.push(`${n} months do not have lengths.`)}}if(t.static.useCustomYears){if(!t.static.years?.length)e.push("Use Custom Years is on but no years have been created.");else if(!t.static.years.every(n=>n.name?.length)){let n=t.static.years.filter(r=>!r.name?.length).length;n==1?e.push(`${n} year does not have a name.`):e.push(`${n} years do not have names.`)}}return e.join(`
`)}function ou(t){return!!(Mn(t.current.day,t)&&In(t.current.month,t)&&On(t.current.year,t)&&t.static.months?.length&&t.static.months?.every(e=>e.name?.length)&&t.static.months?.every(e=>e.length>0)&&t.static.weekdays?.length&&t.static.weekdays?.every(e=>e.name?.length)&&t.name?.length&&t.static.firstWeekDay<(t.static.weekdays?.length??1/0)&&(!t.static.useCustomYears||t.static.useCustomYears&&t.static.years?.length&&t.static.years.every(e=>e.name?.length)))}function co(t,e){if(t==null)return"No day specified";if(e?.current?.month==null)return"No month selected";if(t<1||t>e?.static?.months[e.current?.month]?.length||!e?.static?.months[e.current?.month]?.length)return"Day does not exist in selected month"}function fo(t,e){if(t==null)return"No month specified";if(!e?.static?.months?.length)return"No months exist";if(t<0||t>=e?.static?.months?.length)return"Selected month does not exist"}function ho(t,e){if(t==null)return"No year specified";if(t<1&&!e.static?.useCustomYears)return"Years start at 1";if(e?.static?.useCustomYears){if(!e?.static?.years?.length)return"No custom years exist";if(t<0||t>=e?.static?.years?.length)return"Year does not exist in custom years"}}function n2(t){ve(t,"svelte-14i1c0v",'.warning-label-container.svelte-14i1c0v.svelte-14i1c0v{display:flex;justify-content:flex-end;position:absolute;right:0}.fantasy-calendar-nested-settings.svelte-14i1c0v.svelte-14i1c0v{position:relative}.warning-label.svelte-14i1c0v.svelte-14i1c0v{color:var(--text-error)}.fantasy-calendar-nested-summary.svelte-14i1c0v.svelte-14i1c0v{outline:none;display:block !important;list-style:none !important;list-style-type:none !important;min-height:1rem;border-top-left-radius:0.1rem;border-top-right-radius:0.1rem;cursor:pointer}summary.svelte-14i1c0v.svelte-14i1c0v::-webkit-details-marker,summary.svelte-14i1c0v.svelte-14i1c0v::marker{display:none !important}.collapser.svelte-14i1c0v.svelte-14i1c0v{position:absolute;top:50%;right:8px;transform:translateY(-50%);content:""}.handle.svelte-14i1c0v.svelte-14i1c0v{transform:rotate(0deg);transition:transform 0.25s;background-color:currentColor;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;-webkit-mask-image:var(--admonition-details-icon);mask-image:var(--admonition-details-icon);width:20px;height:20px}details[open].svelte-14i1c0v .handle.svelte-14i1c0v{transform:rotate(90deg)}')}function lu(t){let e,n,r,a;return{c(){e=F("div")},m(i,o){H(i,e,o),r||(a=me(n=un.call(null,e)),r=!0)},d(i){i&&V(e),r=!1,a()}}}function uu(t){let e,n,r;return{c(){e=F("div"),n=F("div"),r=be(t[2]),w(n,"class","setting-item-description warning-label svelte-14i1c0v"),w(e,"class","warning-label-container svelte-14i1c0v")},m(a,i){H(a,e,i),D(e,n),D(n,r)},p(a,i){i&4&&De(r,a[2])},d(a){a&&V(e)}}}function r2(t){let e,n,r,a,i,o,l,s,d,u,c,h,v,m,_,g,S,C,T,M=t[1]&&lu(t),k=t[1]&&t[2]&&uu(t),E=t[6].default,b=Ll(E,t,t[5],null);return{c(){e=F("details"),n=F("summary"),r=F("div"),a=F("div"),i=F("div"),o=be(t[0]),l=W(),s=F("div"),d=W(),u=F("div"),c=F("div"),M&&M.c(),h=W(),v=F("div"),m=W(),k&&k.c(),_=W(),b&&b.c(),w(i,"class","setting-item-name"),w(s,"class","setting-item-description"),w(a,"class","setting-item-info"),w(r,"class","setting-item setting-item-heading"),w(v,"class","handle svelte-14i1c0v"),w(c,"class","warning-container"),w(u,"class","collapser svelte-14i1c0v"),w(n,"class","fantasy-calendar-nested-summary svelte-14i1c0v"),w(e,"class","fantasy-calendar-nested-settings svelte-14i1c0v")},m(N,x){H(N,e,x),D(e,n),D(n,r),D(r,a),D(a,i),D(i,o),D(a,l),D(a,s),D(n,d),D(n,u),D(u,c),M&&M.m(c,null),D(c,h),D(c,v),D(e,m),k&&k.m(e,null),D(e,_),b&&b.m(e,null),S=!0,C||(T=me(g=t[3].call(null,e)),C=!0)},p(N,[x]){(!S||x&1)&&De(o,N[0]),N[1]?M||(M=lu(N),M.c(),M.m(c,h)):M&&(M.d(1),M=null),N[1]&&N[2]?k?k.p(N,x):(k=uu(N),k.c(),k.m(e,_)):k&&(k.d(1),k=null),b&&b.p&&(!S||x&32)&&Vl(b,E,N,N[5],S?jl(E,N[5],x,null):Hl(N[5]),null)},i(N){S||(j(b,N),S=!0)},o(N){G(b,N),S=!1},d(N){N&&V(e),M&&M.d(),k&&k.d(),b&&b.d(N),C=!1,T()}}}function a2(t,e,n){let{$$slots:r={},$$scope:a}=e,{open:i=!0}=e,{name:o}=e,{warn:l=!1}=e,{label:s=null}=e,d=c=>{i&&c.setAttr("open","open")},u=c=>{new su.Setting(c).setHeading().setName(o)};return t.$$set=c=>{"open"in c&&n(4,i=c.open),"name"in c&&n(0,o=c.name),"warn"in c&&n(1,l=c.warn),"label"in c&&n(2,s=c.label),"$$scope"in c&&n(5,a=c.$$scope)},[o,l,s,d,i,a,r]}var cu=class extends de{constructor(e){super();fe(this,e,a2,r2,le,{open:4,name:0,warn:1,label:2},n2)}},yt=cu;function i2(t){ve(t,"svelte-8wb3dw",".fantasy-calendar-date-field-container.svelte-8wb3dw.svelte-8wb3dw{display:flex;gap:1rem;border:0}.fantasy-calendar-date-field.svelte-8wb3dw.svelte-8wb3dw{display:grid;grid-auto-rows:1fr;flex:1 1 0;gap:0.5rem}.fantasy-calendar-date-field.svelte-8wb3dw .setting-item-description.svelte-8wb3dw{padding-top:0}.fantasy-calendar-date-field.svelte-8wb3dw .invalid.svelte-8wb3dw{border:1px solid var(--text-error)}")}function du(t,e,n){let r=t.slice();return r[11]=e[n],r[13]=n,r}function fu(t){let e,n,r,a;return{c(){e=F("div")},m(i,o){H(i,e,o),r||(a=me(n=un.call(null,e)),r=!0)},d(i){i&&V(e),r=!1,a()}}}function hu(t){let e,n=!t[3]&&pu(t);return{c(){e=F("div"),n&&n.c(),w(e,"class","setting-item-description svelte-8wb3dw")},m(r,a){H(r,e,a),n&&n.m(e,null)},p(r,a){r[3]?n&&(n.d(1),n=null):n?n.p(r,a):(n=pu(r),n.c(),n.m(e,null))},d(r){r&&V(e),n&&n.d()}}}function pu(t){let e=co(t[4].day,t[0])+"",n;return{c(){n=be(e)},m(r,a){H(r,n,a)},p(r,a){a&17&&e!==(e=co(r[4].day,r[0])+"")&&De(n,e)},d(r){r&&V(n)}}}function mu(t){let e,n,r,a;return{c(){e=F("div")},m(i,o){H(i,e,o),r||(a=me(n=un.call(null,e)),r=!0)},d(i){i&&V(e),r=!1,a()}}}function gu(t){let e,n=t[11].name+"",r,a;return{c(){e=F("option"),r=be(n),e.__value=a=t[13],e.value=e.__value},m(i,o){H(i,e,o),D(e,r)},p(i,o){o&64&&n!==(n=i[11].name+"")&&De(r,n)},d(i){i&&V(e)}}}function yu(t){let e,n=!t[2]&&vu(t);return{c(){e=F("div"),n&&n.c(),w(e,"class","setting-item-description svelte-8wb3dw")},m(r,a){H(r,e,a),n&&n.m(e,null)},p(r,a){r[2]?n&&(n.d(1),n=null):n?n.p(r,a):(n=vu(r),n.c(),n.m(e,null))},d(r){r&&V(e),n&&n.d()}}}function vu(t){let e=fo(t[4].month,t[0])+"",n;return{c(){n=be(e)},m(r,a){H(r,n,a)},p(r,a){a&17&&e!==(e=fo(r[4].month,r[0])+"")&&De(n,e)},d(r){r&&V(n)}}}function bu(t){let e,n,r,a;return{c(){e=F("div")},m(i,o){H(i,e,o),r||(a=me(n=un.call(null,e)),r=!0)},d(i){i&&V(e),r=!1,a()}}}function wu(t){let e,n=!t[1]&&Du(t);return{c(){e=F("div"),n&&n.c(),w(e,"class","setting-item-description svelte-8wb3dw")},m(r,a){H(r,e,a),n&&n.m(e,null)},p(r,a){r[1]?n&&(n.d(1),n=null):n?n.p(r,a):(n=Du(r),n.c(),n.m(e,null))},d(r){r&&V(e),n&&n.d()}}}function Du(t){let e=ho(t[4].year,t[0])+"",n;return{c(){n=be(e)},m(r,a){H(r,n,a)},p(r,a){a&17&&e!==(e=ho(r[4].year,r[0])+"")&&De(n,e)},d(r){r&&V(n)}}}function o2(t){let e,n,r,a,i,o,l,s,d,u,c,h,v,m,_,g,S,C,T,M,k,E,b,N,x,L,O=!t[3]&&fu(t),U=t[5]&&hu(t),te=!t[2]&&mu(t),he=t[6].filter(_u),ee=[];for(let K=0;K<he.length;K+=1)ee[K]=gu(du(t,he,K));let se=t[5]&&yu(t),Y=!t[1]&&bu(t),z=t[5]&&wu(t);return{c(){e=F("div"),n=F("div"),r=F("div"),a=F("label"),a.textContent="Day",i=W(),O&&O.c(),o=W(),l=F("input"),s=W(),U&&U.c(),d=W(),u=F("div"),c=F("div"),h=F("label"),h.textContent="Month",v=W(),te&&te.c(),m=W(),_=F("select");for(let K=0;K<ee.length;K+=1)ee[K].c();g=W(),se&&se.c(),S=W(),C=F("div"),T=F("div"),M=F("label"),M.textContent="Year",k=W(),Y&&Y.c(),E=W(),b=F("input"),N=W(),z&&z.c(),w(a,"for",""),w(r,"class","warning-container"),w(l,"type","number"),w(l,"spellcheck","false"),w(l,"placeholder","Day"),w(l,"class","svelte-8wb3dw"),ge(l,"invalid",!t[3]),w(n,"class","fantasy-calendar-date-field svelte-8wb3dw"),w(h,"for",""),w(c,"class","warning-container"),w(_,"class","dropdown svelte-8wb3dw"),t[4].month===void 0&&zt(()=>t[8].call(_)),ge(_,"invalid",!t[2]),w(u,"class","fantasy-calendar-date-field svelte-8wb3dw"),w(M,"for",""),w(T,"class","warning-container"),w(b,"type","number"),w(b,"spellcheck","false"),w(b,"placeholder","Year"),w(b,"class","svelte-8wb3dw"),ge(b,"invalid",!t[1]),w(C,"class","fantasy-calendar-date-field svelte-8wb3dw"),w(e,"class","fantasy-calendar-date-field-container setting-item svelte-8wb3dw")},m(K,ye){H(K,e,ye),D(e,n),D(n,r),D(r,a),D(r,i),O&&O.m(r,null),D(n,o),D(n,l),Ft(l,t[4].day),D(n,s),U&&U.m(n,null),D(e,d),D(e,u),D(u,c),D(c,h),D(c,v),te&&te.m(c,null),D(u,m),D(u,_);for(let ue=0;ue<ee.length;ue+=1)ee[ue].m(_,null);fn(_,t[4].month),D(u,g),se&&se.m(u,null),D(e,S),D(e,C),D(C,T),D(T,M),D(T,k),Y&&Y.m(T,null),D(C,E),D(C,b),Ft(b,t[4].year),D(C,N),z&&z.m(C,null),x||(L=[re(l,"input",t[7]),re(_,"change",t[8]),re(b,"input",t[9])],x=!0)},p(K,ye){if(K[3]?O&&(O.d(1),O=null):O||(O=fu(K),O.c(),O.m(r,null)),ye&16&&_n(l.value)!==K[4].day&&Ft(l,K[4].day),ye&8&&ge(l,"invalid",!K[3]),K[5]?U?U.p(K,ye):(U=hu(K),U.c(),U.m(n,null)):U&&(U.d(1),U=null),K[2]?te&&(te.d(1),te=null):te||(te=mu(K),te.c(),te.m(c,null)),ye&64){he=K[6].filter(_u);let ue;for(ue=0;ue<he.length;ue+=1){let Me=du(K,he,ue);ee[ue]?ee[ue].p(Me,ye):(ee[ue]=gu(Me),ee[ue].c(),ee[ue].m(_,null))}for(;ue<ee.length;ue+=1)ee[ue].d(1);ee.length=he.length}ye&16&&fn(_,K[4].month),ye&4&&ge(_,"invalid",!K[2]),K[5]?se?se.p(K,ye):(se=yu(K),se.c(),se.m(u,null)):se&&(se.d(1),se=null),K[1]?Y&&(Y.d(1),Y=null):Y||(Y=bu(K),Y.c(),Y.m(T,null)),ye&16&&_n(b.value)!==K[4].year&&Ft(b,K[4].year),ye&2&&ge(b,"invalid",!K[1]),K[5]?z?z.p(K,ye):(z=wu(K),z.c(),z.m(C,null)):z&&(z.d(1),z=null)},d(K){K&&V(e),O&&O.d(),U&&U.d(),te&&te.d(),Ke(ee,K),se&&se.d(),Y&&Y.d(),z&&z.d(),x=!1,Ee(L)}}}function s2(t){let e,n;return e=new yt({props:{name:"Current Date",warn:t[5],label:"Invalid current date specified",$$slots:{default:[o2]},$$scope:{ctx:t}}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,[a]){let i={};a&32&&(i.warn=r[5]),a&16511&&(i.$$scope={dirty:a,ctx:r}),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}var _u=t=>t.name;function l2(t,e,n){let r,a,i,o,l,s,d;Xe("store").subscribe(m=>n(0,d=m));function c(){r.day=_n(this.value),n(4,r),n(0,d)}function h(){r.month=sr(this),n(4,r),n(0,d)}function v(){r.year=_n(this.value),n(4,r),n(0,d)}return t.$$.update=()=>{if(t.$$.dirty&1){e:n(4,r=d.current)}if(t.$$.dirty&1){e:n(6,a=d.static.months)}if(t.$$.dirty&17){e:n(3,i=Mn(r.day,d))}if(t.$$.dirty&17){e:n(2,o=In(r.month,d))}if(t.$$.dirty&17){e:n(1,l=On(r.year,d))}if(t.$$.dirty&14){e:n(5,s=!i||!o||!l)}},[d,l,o,i,r,s,a,c,h,v]}var Eu=class extends de{constructor(e){super();fe(this,e,l2,s2,le,{},i2)}},Cu=Eu;function u2(t){ve(t,"svelte-1ezzfh1",".text-area-component.svelte-1ezzfh1{display:flex;flex-flow:column nowrap;align-items:flex-start;width:100%}textarea.svelte-1ezzfh1{width:100%}")}function c2(t){let e,n,r,a,i,o,l;return{c(){e=F("div"),n=F("label"),r=be(t[1]),a=W(),i=F("textarea"),w(i,"spellcheck","false"),w(i,"placeholder",t[2]),w(i,"class","svelte-1ezzfh1"),w(e,"class","text-area-component setting-item svelte-1ezzfh1"),ge(e,"cls",t[3])},m(s,d){H(s,e,d),D(e,n),D(n,r),D(e,a),D(e,i),Ft(i,t[0]),o||(l=[re(i,"input",t[5]),re(i,"blur",t[6])],o=!0)},p(s,[d]){d&2&&De(r,s[1]),d&4&&w(i,"placeholder",s[2]),d&1&&Ft(i,s[0]),d&8&&ge(e,"cls",s[3])},i:J,o:J,d(s){s&&V(e),o=!1,Ee(l)}}}function d2(t,e,n){let r=Te(),{value:a}=e,{name:i}=e,{placeholder:o=i}=e,{cls:l=""}=e;function s(){a=this.value,n(0,a)}let d=()=>r("blur",a);return t.$$set=u=>{"value"in u&&n(0,a=u.value),"name"in u&&n(1,i=u.name),"placeholder"in u&&n(2,o=u.placeholder),"cls"in u&&n(3,l=u.cls)},[a,i,o,l,r,s,d]}var Au=class extends de{constructor(e){super();fe(this,e,d2,c2,le,{value:0,name:1,placeholder:2,cls:3},u2)}},ku=Au;function f2(t){ve(t,"svelte-9iftg2","input.warn.svelte-9iftg2{border-color:var(--text-error)}")}function xu(t){let e,n,r,a;return{c(){e=F("div")},m(i,o){H(i,e,o),r||(a=me(n=un.call(null,e)),r=!0)},d(i){i&&V(e),r=!1,a()}}}function h2(t){let e,n,r,a,i,o,l,s,d,u,c,h,v,m,_=t[2]&&xu(t);return{c(){e=F("div"),n=F("div"),r=F("div"),a=be(t[1]),i=W(),o=F("div"),l=be(t[3]),s=W(),d=F("div"),u=F("div"),_&&_.c(),c=W(),h=F("input"),w(r,"class","setting-item-name"),w(o,"class","setting-item-description"),w(n,"class","setting-item-info"),w(h,"type","text"),w(h,"spellcheck","false"),w(h,"placeholder",t[4]),w(h,"class","svelte-9iftg2"),ge(h,"warn",t[2]),w(u,"class","warning-container"),w(d,"class","setting-item-control"),w(e,"class","setting-item")},m(g,S){H(g,e,S),D(e,n),D(n,r),D(r,a),D(n,i),D(n,o),D(o,l),D(e,s),D(e,d),D(d,u),_&&_.m(u,null),D(u,c),D(u,h),Ft(h,t[0]),v||(m=[re(h,"input",t[6]),re(h,"blur",t[7])],v=!0)},p(g,[S]){S&2&&De(a,g[1]),S&8&&De(l,g[3]),g[2]?_||(_=xu(g),_.c(),_.m(u,c)):_&&(_.d(1),_=null),S&16&&w(h,"placeholder",g[4]),S&1&&h.value!==g[0]&&Ft(h,g[0]),S&4&&ge(h,"warn",g[2])},i:J,o:J,d(g){g&&V(e),_&&_.d(),v=!1,Ee(m)}}}function p2(t,e,n){let r=Te(),{value:a}=e,{name:i}=e,{warn:o=!1}=e,{desc:l=""}=e,{placeholder:s=i}=e;function d(){a=this.value,n(0,a)}let u=()=>{r("blur",a)};return t.$$set=c=>{"value"in c&&n(0,a=c.value),"name"in c&&n(1,i=c.name),"warn"in c&&n(2,o=c.warn),"desc"in c&&n(3,l=c.desc),"placeholder"in c&&n(4,s=c.placeholder)},[a,i,o,l,s,r,d,u]}var Fu=class extends de{constructor(e){super();fe(this,e,p2,h2,le,{value:0,name:1,warn:2,desc:3,placeholder:4},f2)}},Tu=Fu;function Su(t){let e;function n(i,o){return typeof i[1]=="string"?g2:m2}let r=n(t,-1),a=r(t);return{c(){a.c(),e=ct()},m(i,o){a.m(i,o),H(i,e,o)},p(i,o){r===(r=n(i,o))&&a?a.p(i,o):(a.d(1),a=r(i),a&&(a.c(),a.m(e.parentNode,e)))},d(i){a.d(i),i&&V(e)}}}function m2(t){let e,n,r,a;return{c(){e=F("div"),w(e,"class","setting-item-description")},m(i,o){H(i,e,o),r||(a=me(n=t[3].call(null,e)),r=!0)},p:J,d(i){i&&V(e),r=!1,a()}}}function g2(t){let e,n;return{c(){e=F("div"),n=be(t[1]),w(e,"class","setting-item-description")},m(r,a){H(r,e,a),D(e,n)},p(r,a){a&2&&De(n,r[1])},d(r){r&&V(e)}}}function y2(t){let e,n,r,a,i,o,l,s,d,u,c=t[1]&&Su(t);return{c(){e=F("div"),n=F("div"),r=F("div"),a=be(t[0]),i=W(),c&&c.c(),o=W(),l=F("div"),s=F("div"),w(r,"class","setting-item-name"),w(n,"class","setting-item-info"),w(s,"class","checkbox-container"),ge(s,"is-enabled",t[2]),w(l,"class","setting-item-control"),w(e,"class","setting-item mod-toggle")},m(h,v){H(h,e,v),D(e,n),D(n,r),D(r,a),D(n,i),c&&c.m(n,null),D(e,o),D(e,l),D(l,s),d||(u=re(s,"click",t[4]),d=!0)},p(h,[v]){v&1&&De(a,h[0]),h[1]?c?c.p(h,v):(c=Su(h),c.c(),c.m(n,null)):c&&(c.d(1),c=null),v&4&&ge(s,"is-enabled",h[2])},i:J,o:J,d(h){h&&V(e),c&&c.d(),d=!1,u()}}}function v2(t,e,n){let{name:r}=e,{desc:a}=e,{value:i}=e,o=s=>{s.append(a)};function l(s){we.call(this,t,s)}return t.$$set=s=>{"name"in s&&n(0,r=s.name),"desc"in s&&n(1,a=s.desc),"value"in s&&n(2,i=s.value)},[r,a,i,o,l]}var Bu=class extends de{constructor(e){super();fe(this,e,v2,y2,le,{name:0,desc:1,value:2})}},pn=Bu;function b2(t){ve(t,"svelte-1uda69j",".fantasy-calendar-info.svelte-1uda69j .setting-item{padding-top:18px}.fantasy-calendar-info.svelte-1uda69j .fantasy-calendar-description{display:flex;flex-flow:column;align-items:flex-start}.fantasy-calendar-info.svelte-1uda69j .fantasy-calendar-description textarea{width:100%}")}function w2(t){let e,n,r,a,i,o,l,s,d;return n=new Tu({props:{name:"Calendar Name",warn:!t[1],desc:t[1]?"":"The calendar must have a name",value:t[0].name}}),n.$on("blur",t[5]),a=new ku({props:{name:"Calendar Description",value:t[0].description}}),a.$on("blur",t[6]),o=new pn({props:{name:"Display Day Number",desc:"Display day of year in Day View",value:t[3]}}),o.$on("click",t[7]),s=new pn({props:{name:"Auto Increment Day",desc:"Automatically increment the current day every real-world day.",value:t[2]}}),s.$on("click",t[8]),{c(){e=F("div"),oe(n.$$.fragment),r=W(),oe(a.$$.fragment),i=W(),oe(o.$$.fragment),l=W(),oe(s.$$.fragment),w(e,"class","fantasy-calendar-info svelte-1uda69j")},m(u,c){H(u,e,c),ae(n,e,null),D(e,r),ae(a,e,null),D(e,i),ae(o,e,null),D(e,l),ae(s,e,null),d=!0},p(u,c){let h={};c&2&&(h.warn=!u[1]),c&2&&(h.desc=u[1]?"":"The calendar must have a name"),c&1&&(h.value=u[0].name),n.$set(h);let v={};c&1&&(v.value=u[0].description),a.$set(v);let m={};c&8&&(m.value=u[3]),o.$set(m);let _={};c&4&&(_.value=u[2]),s.$set(_)},i(u){d||(j(n.$$.fragment,u),j(a.$$.fragment,u),j(o.$$.fragment,u),j(s.$$.fragment,u),d=!0)},o(u){G(n.$$.fragment,u),G(a.$$.fragment,u),G(o.$$.fragment,u),G(s.$$.fragment,u),d=!1},d(u){u&&V(e),ne(n),ne(a),ne(o),ne(s)}}}function D2(t){let e,n;return e=new yt({props:{name:"Basic Info",warn:!t[1],label:"The calendar must have a name",$$slots:{default:[w2]},$$scope:{ctx:t}}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,[a]){let i={};a&2&&(i.warn=!r[1]),a&527&&(i.$$scope={dirty:a,ctx:r}),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function _2(t,e,n){let r,a,i,{calendar:o}=e,l=Xe("store");l.subscribe(h=>n(0,o=h));let s=h=>{n(0,o.name=h.detail,o),l.set(o)},d=h=>n(0,o.description=h.detail,o),u=()=>{n(0,o.static.displayDayNumber=!o.static.displayDayNumber,o)},c=()=>{n(0,o.static.incrementDay=!o.static.incrementDay,o)};return t.$$set=h=>{"calendar"in h&&n(0,o=h.calendar)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(3,r=o.static.displayDayNumber)}if(t.$$.dirty&1){e:n(2,a=o.static.incrementDay)}if(t.$$.dirty&1){e:n(1,i=o.name!=null&&o.name.length)}},[o,i,a,r,l,s,d,u,c]}var Nu=class extends de{constructor(e){super();fe(this,e,_2,D2,le,{calendar:0},b2)}},Mu=Nu;function pr(t,{from:e,to:n},r={}){let a=getComputedStyle(t),i=a.transform==="none"?"":a.transform,[o,l]=a.transformOrigin.split(" ").map(parseFloat),s=e.left+e.width*o/n.width-(n.left+o),d=e.top+e.height*l/n.height-(n.top+l),{delay:u=0,duration:c=v=>Math.sqrt(v)*120,easing:h=Ra}=r;return{delay:u,duration:at(c)?c(Math.sqrt(s*s+d*d)):c,easing:h,css:(v,m)=>{let _=m*s,g=m*d,S=v+m*e.width/n.width,C=v+m*e.height/n.height;return`transform: ${i} translate(${_}px, ${g}px) scale(${S}, ${C});`}}}function Ur(t){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Ur=function(e){return typeof e}:Ur=function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ur(t)}function zr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Iu(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable})),n.push.apply(n,r)}return n}function jn(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Iu(Object(n),!0).forEach(function(r){zr(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Iu(Object(n)).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function E2(t,e){if(t==null)return{};var n={},r=Object.keys(t),a,i;for(i=0;i<r.length;i++)a=r[i],!(e.indexOf(a)>=0)&&(n[a]=t[a]);return n}function C2(t,e){if(t==null)return{};var n=E2(t,e),r,a;if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],!(e.indexOf(r)>=0)&&(!Object.prototype.propertyIsEnumerable.call(t,r)||(n[r]=t[r]))}return n}function A2(t,e){return x2(t)||T2(t,e)||po(t,e)||B2()}function La(t){return k2(t)||F2(t)||po(t)||S2()}function k2(t){if(Array.isArray(t))return mo(t)}function x2(t){if(Array.isArray(t))return t}function F2(t){if(typeof Symbol!="undefined"&&Symbol.iterator in Object(t))return Array.from(t)}function T2(t,e){if(!(typeof Symbol=="undefined"||!(Symbol.iterator in Object(t)))){var n=[],r=!0,a=!1,i=void 0;try{for(var o=t[Symbol.iterator](),l;!(r=(l=o.next()).done)&&(n.push(l.value),!(e&&n.length===e));r=!0);}catch(s){a=!0,i=s}finally{try{!r&&o.return!=null&&o.return()}finally{if(a)throw i}}return n}}function po(t,e){if(!!t){if(typeof t=="string")return mo(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set")return Array.from(t);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return mo(t,e)}}function mo(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function S2(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function B2(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function go(t,e){var n;if(typeof Symbol=="undefined"||t[Symbol.iterator]==null){if(Array.isArray(t)||(n=po(t))||e&&t&&typeof t.length=="number"){n&&(t=n);var r=0,a=function(){};return{s:a,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(s){throw s},f:a}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var i=!0,o=!1,l;return{s:function(){n=t[Symbol.iterator]()},n:function(){var s=n.next();return i=s.done,s},e:function(s){o=!0,l=s},f:function(){try{!i&&n.return!=null&&n.return()}finally{if(o)throw l}}}}var N2="finalize",M2="consider";function mr(t,e,n){t.dispatchEvent(new CustomEvent(N2,{detail:{items:e,info:n}}))}function En(t,e,n){t.dispatchEvent(new CustomEvent(M2,{detail:{items:e,info:n}}))}var Pa="draggedEntered",Yr="draggedLeft",ja="draggedOverIndex",yo="draggedLeftDocument",Va={LEFT_FOR_ANOTHER:"leftForAnother",OUTSIDE_OF_ANY:"outsideOfAny"};function I2(t,e,n){t.dispatchEvent(new CustomEvent(Pa,{detail:{indexObj:e,draggedEl:n}}))}function O2(t,e,n){t.dispatchEvent(new CustomEvent(Yr,{detail:{draggedEl:e,type:Va.LEFT_FOR_ANOTHER,theOtherDz:n}}))}function q2(t,e){t.dispatchEvent(new CustomEvent(Yr,{detail:{draggedEl:e,type:Va.OUTSIDE_OF_ANY}}))}function R2(t,e,n){t.dispatchEvent(new CustomEvent(ja,{detail:{indexObj:e,draggedEl:n}}))}function L2(t){window.dispatchEvent(new CustomEvent(yo,{detail:{draggedEl:t}}))}var it={DRAG_STARTED:"dragStarted",DRAGGED_ENTERED:Pa,DRAGGED_ENTERED_ANOTHER:"dragEnteredAnother",DRAGGED_OVER_INDEX:ja,DRAGGED_LEFT:Yr,DRAGGED_LEFT_ALL:"draggedLeftAll",DROPPED_INTO_ZONE:"droppedIntoZone",DROPPED_INTO_ANOTHER:"droppedIntoAnother",DROPPED_OUTSIDE_OF_ANY:"droppedOutsideOfAny",DRAG_STOPPED:"dragStopped"},Je={POINTER:"pointer",KEYBOARD:"keyboard"},Ha="isDndShadowItem",vo="data-is-dnd-shadow-item",bo="id:dnd-shadow-placeholder-0000",P2="dnd-action-dragged-el",vt="id",wo=0;function Ou(){wo++}function qu(){if(wo===0)throw new Error("Bug! trying to decrement when there are no dropzones");wo--}var j2=typeof window=="undefined",Se=function(){};function Ru(t){var e,n=t.getBoundingClientRect(),r=getComputedStyle(t),a=r.transform;if(a){var i,o,l,s;if(a.startsWith("matrix3d("))e=a.slice(9,-1).split(/, /),i=+e[0],o=+e[5],l=+e[12],s=+e[13];else if(a.startsWith("matrix("))e=a.slice(7,-1).split(/, /),i=+e[0],o=+e[3],l=+e[4],s=+e[5];else return n;var d=r.transformOrigin,u=n.x-l-(1-i)*parseFloat(d),c=n.y-s-(1-o)*parseFloat(d.slice(d.indexOf(" ")+1)),h=i?n.width/i:t.offsetWidth,v=o?n.height/o:t.offsetHeight;return{x:u,y:c,width:h,height:v,top:c,right:u+h,bottom:c+v,left:u}}else return n}function Lu(t){var e=Ru(t);return{top:e.top+window.scrollY,bottom:e.bottom+window.scrollY,left:e.left+window.scrollX,right:e.right+window.scrollX}}function Do(t){var e=t.getBoundingClientRect();return{top:e.top+window.scrollY,bottom:e.bottom+window.scrollY,left:e.left+window.scrollX,right:e.right+window.scrollX}}function Pu(t){return{x:(t.left+t.right)/2,y:(t.top+t.bottom)/2}}function V2(t,e){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}function _o(t,e){return t.y<=e.bottom&&t.y>=e.top&&t.x>=e.left&&t.x<=e.right}function Zr(t){return Pu(Do(t))}function ju(t,e){var n=Zr(t),r=Lu(e);return _o(n,r)}function H2(t,e){var n=Zr(t),r=Zr(e);return V2(n,r)}function W2(t){var e=Do(t);return e.right<0||e.left>document.documentElement.scrollWidth||e.bottom<0||e.top>document.documentElement.scrollHeight}function G2(t,e){var n=Do(e);return _o(t,n)?{top:t.y-n.top,bottom:n.bottom-t.y,left:t.x-n.left,right:Math.min(n.right,document.documentElement.clientWidth)-t.x}:null}var gr;function Vu(){Se(function(){return"resetting indexes cache"}),gr=new Map}Vu();function U2(t){var e=Array.from(t.children).findIndex(function(n){return n.getAttribute(vo)});if(e>=0)return gr.has(t)||gr.set(t,new Map),gr.get(t).set(e,Lu(t.children[e])),e}function z2(t,e){if(!ju(t,e))return null;var n=e.children;if(n.length===0)return{index:0,isProximityBased:!0};for(var r=U2(e),a=0;a<n.length;a++)if(ju(t,n[a])){var i=gr.has(e)&&gr.get(e).get(a);return i&&!_o(Zr(t),i)?{index:r,isProximityBased:!1}:{index:a,isProximityBased:!1}}for(var o=Number.MAX_VALUE,l=void 0,s=0;s<n.length;s++){var d=H2(t,n[s]);d<o&&(o=d,l=s)}return{index:l,isProximityBased:!0}}var Kr=25;function Hu(){var t;function e(){t={directionObj:void 0,stepPx:0}}e();function n(i){var o=t,l=o.directionObj,s=o.stepPx;l&&(i.scrollBy(l.x*s,l.y*s),window.requestAnimationFrame(function(){return n(i)}))}function r(i){return Kr-i}function a(i,o){if(!o)return!1;var l=G2(i,o);if(l===null)return e(),!1;var s=!!t.directionObj,d=!1,u=!1;return o.scrollHeight>o.clientHeight&&(l.bottom<Kr?(d=!0,t.directionObj={x:0,y:1},t.stepPx=r(l.bottom)):l.top<Kr&&(d=!0,t.directionObj={x:0,y:-1},t.stepPx=r(l.top)),!s&&d)||o.scrollWidth>o.clientWidth&&(l.right<Kr?(u=!0,t.directionObj={x:1,y:0},t.stepPx=r(l.right)):l.left<Kr&&(u=!0,t.directionObj={x:-1,y:0},t.stepPx=r(l.left)),!s&&u)?(n(o),!0):(e(),!1)}return{scrollIfNeeded:a,resetScrolling:e}}function mn(t){return JSON.stringify(t,null,2)}function Wu(t){if(!t)throw new Error("cannot get depth of a falsy node");return Gu(t,0)}function Gu(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return t.parentElement?Gu(t.parentElement,e+1):e-1}function Y2(t,e){if(Object.keys(t).length!==Object.keys(e).length)return!1;for(var n in t)if(!{}.hasOwnProperty.call(e,n)||e[n]!==t[n])return!1;return!0}function Z2(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}var K2=200,Uu=10,zu=Hu(),Q2=zu.scrollIfNeeded,X2=zu.resetScrolling,Eo;function $2(t,e){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:K2,r,a,i=!1,o,l=Array.from(e).sort(function(d,u){return Wu(u)-Wu(d)});function s(){var d=Zr(t),u=Q2(d,r);if(!u&&o&&Math.abs(o.x-d.x)<Uu&&Math.abs(o.y-d.y)<Uu){Eo=window.setTimeout(s,n);return}if(W2(t)){Se(function(){return"off document"}),L2(t);return}o=d;var c=!1,h=go(l),v;try{for(h.s();!(v=h.n()).done;){var m=v.value,_=z2(t,m);if(_!==null){var g=_.index;c=!0,m!==r?(r&&O2(r,t,m),I2(m,_,t),r=m):g!==a&&(R2(m,_,t),a=g);break}}}catch(S){h.e(S)}finally{h.f()}!c&&i&&r?(q2(r,t),r=void 0,a=void 0,i=!1):i=!0,Eo=window.setTimeout(s,n)}s()}function J2(){Se(function(){return"unobserving"}),clearTimeout(Eo),X2(),Vu()}var ey=300,Wa;function Ga(t){var e=t.touches?t.touches[0]:t;Wa={x:e.clientX,y:e.clientY}}var Yu=Hu(),ty=Yu.scrollIfNeeded,ny=Yu.resetScrolling,Zu;function Ku(){Wa&&ty(Wa,document.documentElement),Zu=window.setTimeout(Ku,ey)}function ry(){Se(function(){return"arming window scroller"}),window.addEventListener("mousemove",Ga),window.addEventListener("touchmove",Ga),Ku()}function ay(){Se(function(){return"disarming window scroller"}),window.removeEventListener("mousemove",Ga),window.removeEventListener("touchmove",Ga),Wa=void 0,window.clearTimeout(Zu),ny()}var iy=.2;function Vn(t){return"".concat(t," ").concat(iy,"s ease")}function oy(t,e){var n=t.getBoundingClientRect(),r=t.cloneNode(!0);Qu(t,r),r.id=P2,r.style.position="fixed";var a=n.top,i=n.left;if(r.style.top="".concat(a,"px"),r.style.left="".concat(i,"px"),e){var o=Pu(n);a-=o.y-e.y,i-=o.x-e.x,window.setTimeout(function(){r.style.top="".concat(a,"px"),r.style.left="".concat(i,"px")},0)}return r.style.margin="0",r.style.boxSizing="border-box",r.style.height="".concat(n.height,"px"),r.style.width="".concat(n.width,"px"),r.style.transition="".concat(Vn("top"),", ").concat(Vn("left"),", ").concat(Vn("background-color"),", ").concat(Vn("opacity"),", ").concat(Vn("color")," "),window.setTimeout(function(){return r.style.transition+=", ".concat(Vn("width"),", ").concat(Vn("height"))},0),r.style.zIndex="9999",r.style.cursor="grabbing",r}function sy(t){t.style.cursor="grab"}function ly(t,e,n,r,a){var i=e.getBoundingClientRect(),o=t.getBoundingClientRect(),l=i.width-o.width,s=i.height-o.height;if(l||s){var d={left:(n-o.left)/o.width,top:(r-o.top)/o.height};t.style.height="".concat(i.height,"px"),t.style.width="".concat(i.width,"px"),t.style.left="".concat(parseFloat(t.style.left)-d.left*l,"px"),t.style.top="".concat(parseFloat(t.style.top)-d.top*s,"px")}Qu(e,t),a()}function Qu(t,e){var n=window.getComputedStyle(t);Array.from(n).filter(function(r){return r.startsWith("background")||r.startsWith("padding")||r.startsWith("font")||r.startsWith("text")||r.startsWith("align")||r.startsWith("justify")||r.startsWith("display")||r.startsWith("flex")||r.startsWith("border")||r==="opacity"||r==="color"||r==="list-style-type"}).forEach(function(r){return e.style.setProperty(r,n.getPropertyValue(r),n.getPropertyPriority(r))})}function uy(t,e){t.draggable=!1,t.ondragstart=function(){return!1},e?(t.style.userSelect="",t.style.WebkitUserSelect="",t.style.cursor=""):(t.style.userSelect="none",t.style.WebkitUserSelect="none",t.style.cursor="grab")}function cy(t){t.style.display="none",t.style.position="fixed",t.style.zIndex="-5"}function dy(t){t.style.visibility="hidden",t.setAttribute(vo,"true")}function fy(t){t.style.visibility="",t.removeAttribute(vo)}function Ua(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){},n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:function(){return[]};t.forEach(function(r){var a=e(r);Object.keys(a).forEach(function(i){r.style[i]=a[i]}),n(r).forEach(function(i){return r.classList.add(i)})})}function za(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){},n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:function(){return[]};t.forEach(function(r){var a=e(r);Object.keys(a).forEach(function(i){r.style[i]=""}),n(r).forEach(function(i){return r.classList.contains(i)&&r.classList.remove(i)})})}function hy(t){var e=t.style.minHeight;t.style.minHeight=window.getComputedStyle(t).getPropertyValue("height");var n=t.style.minWidth;return t.style.minWidth=window.getComputedStyle(t).getPropertyValue("width"),function(){t.style.minHeight=e,t.style.minWidth=n}}var py="--any--",my=100,Xu=3,$u={outline:"rgba(255, 255, 102, 0.7) solid 2px"},cn,Ct,Gt,Ya,dt,Za,yr,Pt,Cn,Yt,vr=!1,Co=!1,Ao,Qr=!1,tn=new Map,pt=new Map,ko=new WeakMap;function gy(t,e){Se(function(){return"registering drop-zone if absent"}),tn.has(e)||tn.set(e,new Set),tn.get(e).has(t)||(tn.get(e).add(t),Ou())}function Ju(t,e){tn.get(e).delete(t),qu(),tn.get(e).size===0&&tn.delete(e)}function yy(){Se(function(){return"watching dragged element"}),ry();var t=tn.get(Ya),e=go(t),n;try{for(e.s();!(n=e.n()).done;){var r=n.value;r.addEventListener(Pa,ec),r.addEventListener(Yr,tc),r.addEventListener(ja,nc)}}catch(i){e.e(i)}finally{e.f()}window.addEventListener(yo,br);var a=Math.max.apply(Math,[my].concat(La(Array.from(t.keys()).map(function(i){return pt.get(i).dropAnimationDurationMs}))));$2(Ct,t,a*1.07)}function vy(){Se(function(){return"unwatching dragged element"}),ay();var t=tn.get(Ya),e=go(t),n;try{for(e.s();!(n=e.n()).done;){var r=n.value;r.removeEventListener(Pa,ec),r.removeEventListener(Yr,tc),r.removeEventListener(ja,nc)}}catch(a){e.e(a)}finally{e.f()}window.removeEventListener(yo,br),J2()}function by(t){return t.findIndex(function(e){return e[vt]===bo})}function Ka(t){return t.findIndex(function(e){return!!e[Ha]&&e[vt]!==bo})}function ec(t){Se(function(){return["dragged entered",t.currentTarget,t.detail]});var e=pt.get(t.currentTarget),n=e.items,r=e.dropFromOthersDisabled;if(r&&t.currentTarget!==dt){Se(function(){return"ignoring dragged entered because drop is currently disabled"});return}if(Qr=!1,n=n.filter(function(c){return c[vt]!==yr[vt]}),Se(function(){return"dragged entered items ".concat(mn(n))}),dt!==t.currentTarget){var a=pt.get(dt).items,i=a.filter(function(c){return!c[Ha]});En(dt,i,{trigger:it.DRAGGED_ENTERED_ANOTHER,id:Gt[vt],source:Je.POINTER})}else{var o=by(n);o!==-1&&(Se(function(){return"removing placeholder item from origin dz"}),n.splice(o,1))}var l=t.detail.indexObj,s=l.index,d=l.isProximityBased,u=d&&s===t.currentTarget.children.length-1?s+1:s;Pt=t.currentTarget,n.splice(u,0,yr),En(t.currentTarget,n,{trigger:it.DRAGGED_ENTERED,id:Gt[vt],source:Je.POINTER})}function tc(t){if(!!vr){Se(function(){return["dragged left",t.currentTarget,t.detail]});var e=pt.get(t.currentTarget),n=e.items,r=e.dropFromOthersDisabled;if(r&&t.currentTarget!==dt&&t.currentTarget!==Pt){Se(function(){return"drop is currently disabled"});return}var a=Ka(n),i=n.splice(a,1)[0];Pt=void 0;var o=t.detail,l=o.type,s=o.theOtherDz;if(l===Va.OUTSIDE_OF_ANY||l===Va.LEFT_FOR_ANOTHER&&s!==dt&&pt.get(s).dropFromOthersDisabled){Se(function(){return"dragged left all, putting shadow element back in the origin dz"}),Qr=!0,Pt=dt;var d=pt.get(dt).items;d.splice(Za,0,i),En(dt,d,{trigger:it.DRAGGED_LEFT_ALL,id:Gt[vt],source:Je.POINTER})}En(t.currentTarget,n,{trigger:it.DRAGGED_LEFT,id:Gt[vt],source:Je.POINTER})}}function nc(t){Se(function(){return["dragged is over index",t.currentTarget,t.detail]});var e=pt.get(t.currentTarget),n=e.items,r=e.dropFromOthersDisabled;if(r&&t.currentTarget!==dt){Se(function(){return"drop is currently disabled"});return}Qr=!1;var a=t.detail.indexObj.index,i=Ka(n);n.splice(i,1),n.splice(a,0,yr),En(t.currentTarget,n,{trigger:it.DRAGGED_OVER_INDEX,id:Gt[vt],source:Je.POINTER})}function Qa(t){t.preventDefault();var e=t.touches?t.touches[0]:t;Yt={x:e.clientX,y:e.clientY},Ct.style.transform="translate3d(".concat(Yt.x-Cn.x,"px, ").concat(Yt.y-Cn.y,"px, 0)")}function br(){Se(function(){return"dropped"}),Co=!0,window.removeEventListener("mousemove",Qa),window.removeEventListener("touchmove",Qa),window.removeEventListener("mouseup",br),window.removeEventListener("touchend",br),vy(),sy(Ct),Pt||(Se(function(){return"element was dropped right after it left origin but before entering somewhere else"}),Pt=dt),Se(function(){return["dropped in dz",Pt]});var t=pt.get(Pt),e=t.items,n=t.type;za(tn.get(n),function(i){return pt.get(i).dropTargetStyle},function(i){return pt.get(i).dropTargetClasses});var r=Ka(e);r===-1&&(r=Za),e=e.map(function(i){return i[Ha]?Gt:i});function a(){Ao(),mr(Pt,e,{trigger:Qr?it.DROPPED_OUTSIDE_OF_ANY:it.DROPPED_INTO_ZONE,id:Gt[vt],source:Je.POINTER}),Pt!==dt&&mr(dt,pt.get(dt).items,{trigger:it.DROPPED_INTO_ANOTHER,id:Gt[vt],source:Je.POINTER}),fy(Pt.children[r]),Dy()}wy(r,a)}function wy(t,e){var n=Ru(Pt.children[t]),r={x:n.left-parseFloat(Ct.style.left),y:n.top-parseFloat(Ct.style.top)},a=pt.get(Pt),i=a.dropAnimationDurationMs,o="transform ".concat(i,"ms ease");Ct.style.transition=Ct.style.transition?Ct.style.transition+","+o:o,Ct.style.transform="translate3d(".concat(r.x,"px, ").concat(r.y,"px, 0)"),window.setTimeout(e,i)}function Dy(){Ct.remove(),cn.remove(),Ct=void 0,cn=void 0,Gt=void 0,Ya=void 0,dt=void 0,Za=void 0,yr=void 0,Pt=void 0,Cn=void 0,Yt=void 0,vr=!1,Co=!1,Ao=void 0,Qr=!1}function _y(t,e){var n={items:void 0,type:void 0,flipDurationMs:0,dragDisabled:!1,morphDisabled:!1,dropFromOthersDisabled:!1,dropTargetStyle:$u,dropTargetClasses:[],transformDraggedElement:function(){},centreDraggedOnCursor:!1};Se(function(){return["dndzone good to go options: ".concat(mn(e),", config: ").concat(mn(n)),{node:t}]});var r=new Map;function a(){window.addEventListener("mousemove",l,{passive:!1}),window.addEventListener("touchmove",l,{passive:!1,capture:!1}),window.addEventListener("mouseup",o,{passive:!1}),window.addEventListener("touchend",o,{passive:!1})}function i(){window.removeEventListener("mousemove",l),window.removeEventListener("touchmove",l),window.removeEventListener("mouseup",o),window.removeEventListener("touchend",o)}function o(){i(),cn=void 0,Cn=void 0,Yt=void 0}function l(c){c.preventDefault();var h=c.touches?c.touches[0]:c;Yt={x:h.clientX,y:h.clientY},(Math.abs(Yt.x-Cn.x)>=Xu||Math.abs(Yt.y-Cn.y)>=Xu)&&(i(),d())}function s(c){if(c.target!==c.currentTarget&&(c.target.value!==void 0||c.target.isContentEditable)){Se(function(){return"won't initiate drag on a nested input element"});return}if(c.button){Se(function(){return"ignoring none left click button: ".concat(c.button)});return}if(vr){Se(function(){return"cannot start a new drag before finalizing previous one"});return}c.stopPropagation();var h=c.touches?c.touches[0]:c;Cn={x:h.clientX,y:h.clientY},Yt=jn({},Cn),cn=c.currentTarget,a()}function d(){Se(function(){return["drag start config: ".concat(mn(n)),cn]}),vr=!0;var c=r.get(cn);Za=c,dt=cn.parentElement;var h=dt.getRootNode(),v=h.body||h,m=n.items,_=n.type,g=n.centreDraggedOnCursor;Gt=jn({},m[c]),Ya=_,yr=jn(jn({},Gt),{},zr({},Ha,!0));var S=jn(jn({},yr),{},zr({},vt,bo));Ct=oy(cn,g&&Yt);function C(){Ct.parentElement?window.requestAnimationFrame(C):(v.appendChild(Ct),Ct.focus(),yy(),cy(cn),v.appendChild(cn))}window.requestAnimationFrame(C),Ua(Array.from(tn.get(n.type)).filter(function(T){return T===dt||!pt.get(T).dropFromOthersDisabled}),function(T){return pt.get(T).dropTargetStyle},function(T){return pt.get(T).dropTargetClasses}),m.splice(c,1,S),Ao=hy(dt),En(dt,m,{trigger:it.DRAG_STARTED,id:Gt[vt],source:Je.POINTER}),window.addEventListener("mousemove",Qa,{passive:!1}),window.addEventListener("touchmove",Qa,{passive:!1,capture:!1}),window.addEventListener("mouseup",br,{passive:!1}),window.addEventListener("touchend",br,{passive:!1})}function u(c){var h=c.items,v=h===void 0?void 0:h,m=c.flipDurationMs,_=m===void 0?0:m,g=c.type,S=g===void 0?py:g,C=c.dragDisabled,T=C===void 0?!1:C,M=c.morphDisabled,k=M===void 0?!1:M,E=c.dropFromOthersDisabled,b=E===void 0?!1:E,N=c.dropTargetStyle,x=N===void 0?$u:N,L=c.dropTargetClasses,O=L===void 0?[]:L,U=c.transformDraggedElement,te=U===void 0?function(){}:U,he=c.centreDraggedOnCursor,ee=he===void 0?!1:he;n.dropAnimationDurationMs=_,n.type&&S!==n.type&&Ju(t,n.type),n.type=S,gy(t,S),n.items=La(v),n.dragDisabled=T,n.morphDisabled=k,n.transformDraggedElement=te,n.centreDraggedOnCursor=ee,vr&&!Co&&(!Y2(x,n.dropTargetStyle)||!Z2(O,n.dropTargetClasses))&&(za([t],function(){return n.dropTargetStyle},function(){return O}),Ua([t],function(){return x},function(){return O})),n.dropTargetStyle=x,n.dropTargetClasses=La(O);function se(ue,Me){return pt.get(ue)?pt.get(ue)[Me]:n[Me]}vr&&n.dropFromOthersDisabled!==b&&(b?za([t],function(ue){return se(ue,"dropTargetStyle")},function(ue){return se(ue,"dropTargetClasses")}):Ua([t],function(ue){return se(ue,"dropTargetStyle")},function(ue){return se(ue,"dropTargetClasses")})),n.dropFromOthersDisabled=b,pt.set(t,n);for(var Y=Ka(n.items),z=function(Me){var We=t.children[Me];if(uy(We,T),Me===Y)return k||ly(Ct,We,Yt.x,Yt.y,function(){return n.transformDraggedElement(Ct,Gt,Me)}),dy(We),"continue";We.removeEventListener("mousedown",ko.get(We)),We.removeEventListener("touchstart",ko.get(We)),T||(We.addEventListener("mousedown",s),We.addEventListener("touchstart",s),ko.set(We,s)),r.set(We,Me)},K=0;K<t.children.length;K++)var ye=z(K)}return u(e),{update:function(h){Se(function(){return"pointer dndzone will update newOptions: ".concat(mn(h))}),u(h)},destroy:function(){Se(function(){return"pointer dndzone will destroy"}),Ju(t,n.type),pt.delete(t)}}}var Xa,xo={DND_ZONE_ACTIVE:"dnd-zone-active",DND_ZONE_DRAG_DISABLED:"dnd-zone-drag-disabled"},Ey=(Xa={},zr(Xa,xo.DND_ZONE_ACTIVE,"Tab to one the items and press space-bar or enter to start dragging it"),zr(Xa,xo.DND_ZONE_DRAG_DISABLED,"This is a disabled drag and drop list"),Xa),Cy="dnd-action-aria-alert",Nt;function rc(){Nt=document.createElement("div"),function(){Nt.id=Cy,Nt.style.position="fixed",Nt.style.bottom="0",Nt.style.left="0",Nt.style.zIndex="-5",Nt.style.opacity="0",Nt.style.height="0",Nt.style.width="0",Nt.setAttribute("role","alert")}(),document.body.prepend(Nt),Object.entries(Ey).forEach(function(t){var e=A2(t,2),n=e[0],r=e[1];return document.body.prepend(ky(n,r))})}function Ay(){return j2?null:(document.readyState==="complete"?rc():window.addEventListener("DOMContentLoaded",rc),jn({},xo))}function ky(t,e){var n=document.createElement("div");return n.id=t,n.innerHTML="<p>".concat(e,"</p>"),n.style.display="none",n.style.position="fixed",n.style.zIndex="-5",n}function wr(t){Nt.innerHTML="";var e=document.createTextNode(t);Nt.appendChild(e),Nt.style.display="none",Nt.style.display="inline"}var xy="--any--",ac={outline:"rgba(255, 255, 102, 0.7) solid 2px"},Zt=!1,Fo,Tt,Hn="",Wn,nn,An="",$a=new WeakSet,ic=new WeakMap,oc=new WeakMap,To=new Map,At=new Map,rn=new Map,sc=Ay();function Fy(t,e){Se(function(){return"registering drop-zone if absent"}),rn.size===0&&(Se(function(){return"adding global keydown and click handlers"}),window.addEventListener("keydown",uc),window.addEventListener("click",cc)),rn.has(e)||rn.set(e,new Set),rn.get(e).has(t)||(rn.get(e).add(t),Ou())}function lc(t,e){Se(function(){return"unregistering drop-zone"}),Tt===t&&Xr(),rn.get(e).delete(t),qu(),rn.get(e).size===0&&rn.delete(e),rn.size===0&&(Se(function(){return"removing global keydown and click handlers"}),window.removeEventListener("keydown",uc),window.removeEventListener("click",cc))}function uc(t){if(!!Zt)switch(t.key){case"Escape":{Xr();break}}}function cc(){!Zt||$a.has(document.activeElement)||(Se(function(){return"clicked outside of any draggable"}),Xr())}function Ty(t){if(Se(function(){return"zone focus"}),!!Zt){var e=t.currentTarget;if(e!==Tt){Hn=e.getAttribute("aria-label")||"";var n=At.get(Tt),r=n.items,a=r.find(function(c){return c[vt]===nn}),i=r.indexOf(a),o=r.splice(i,1)[0],l=At.get(e),s=l.items,d=l.autoAriaDisabled;e.getBoundingClientRect().top<Tt.getBoundingClientRect().top||e.getBoundingClientRect().left<Tt.getBoundingClientRect().left?(s.push(o),d||wr("Moved item ".concat(An," to the end of the list ").concat(Hn))):(s.unshift(o),d||wr("Moved item ".concat(An," to the beginning of the list ").concat(Hn)));var u=Tt;mr(u,r,{trigger:it.DROPPED_INTO_ANOTHER,id:nn,source:Je.KEYBOARD}),mr(e,s,{trigger:it.DROPPED_INTO_ZONE,id:nn,source:Je.KEYBOARD}),Tt=e}}}function dc(){To.forEach(function(t,e){var n=t.update;return n(At.get(e))})}function Xr(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!0;Se(function(){return"drop"}),At.get(Tt).autoAriaDisabled||wr("Stopped dragging item ".concat(An)),$a.has(document.activeElement)&&document.activeElement.blur(),t&&En(Tt,At.get(Tt).items,{trigger:it.DRAG_STOPPED,id:nn,source:Je.KEYBOARD}),za(rn.get(Fo),function(e){return At.get(e).dropTargetStyle},function(e){return At.get(e).dropTargetClasses}),Wn=null,nn=null,An="",Fo=null,Tt=null,Hn="",Zt=!1,dc()}function Sy(t,e){var n={items:void 0,type:void 0,dragDisabled:!1,zoneTabIndex:0,dropFromOthersDisabled:!1,dropTargetStyle:ac,dropTargetClasses:[],autoAriaDisabled:!1};function r(u,c,h){u.length<=1||u.splice(h,1,u.splice(c,1,u[h])[0])}function a(u){switch(Se(function(){return["handling key down",u.key]}),u.key){case"Enter":case" ":{if((u.target.disabled!==void 0||u.target.href||u.target.isContentEditable)&&!$a.has(u.target))return;u.preventDefault(),u.stopPropagation(),Zt?Xr():i(u);break}case"ArrowDown":case"ArrowRight":{if(!Zt)return;u.preventDefault(),u.stopPropagation();var c=At.get(t),h=c.items,v=Array.from(t.children),m=v.indexOf(u.currentTarget);Se(function(){return["arrow down",m]}),m<v.length-1&&(n.autoAriaDisabled||wr("Moved item ".concat(An," to position ").concat(m+2," in the list ").concat(Hn)),r(h,m,m+1),mr(t,h,{trigger:it.DROPPED_INTO_ZONE,id:nn,source:Je.KEYBOARD}));break}case"ArrowUp":case"ArrowLeft":{if(!Zt)return;u.preventDefault(),u.stopPropagation();var _=At.get(t),g=_.items,S=Array.from(t.children),C=S.indexOf(u.currentTarget);Se(function(){return["arrow up",C]}),C>0&&(n.autoAriaDisabled||wr("Moved item ".concat(An," to position ").concat(C," in the list ").concat(Hn)),r(g,C,C-1),mr(t,g,{trigger:it.DROPPED_INTO_ZONE,id:nn,source:Je.KEYBOARD}));break}}}function i(u){Se(function(){return"drag start"}),l(u.currentTarget),Tt=t,Fo=n.type,Zt=!0;var c=Array.from(rn.get(n.type)).filter(function(v){return v===Tt||!At.get(v).dropFromOthersDisabled});if(Ua(c,function(v){return At.get(v).dropTargetStyle},function(v){return At.get(v).dropTargetClasses}),!n.autoAriaDisabled){var h="Started dragging item ".concat(An,". Use the arrow keys to move it within its list ").concat(Hn);c.length>1&&(h+=", or tab to another list in order to move the item into it"),wr(h)}En(t,At.get(t).items,{trigger:it.DRAG_STARTED,id:nn,source:Je.KEYBOARD}),dc()}function o(u){!Zt||u.currentTarget!==Wn&&(u.stopPropagation(),Xr(!1),i(u))}function l(u){var c=At.get(t),h=c.items,v=Array.from(t.children),m=v.indexOf(u);Wn=u,Wn.tabIndex=0,nn=h[m][vt],An=v[m].getAttribute("aria-label")||""}function s(u){var c=u.items,h=c===void 0?[]:c,v=u.type,m=v===void 0?xy:v,_=u.dragDisabled,g=_===void 0?!1:_,S=u.zoneTabIndex,C=S===void 0?0:S,T=u.dropFromOthersDisabled,M=T===void 0?!1:T,k=u.dropTargetStyle,E=k===void 0?ac:k,b=u.dropTargetClasses,N=b===void 0?[]:b,x=u.autoAriaDisabled,L=x===void 0?!1:x;n.items=La(h),n.dragDisabled=g,n.dropFromOthersDisabled=M,n.zoneTabIndex=C,n.dropTargetStyle=E,n.dropTargetClasses=N,n.autoAriaDisabled=L,L||(t.setAttribute("aria-disabled",g),t.setAttribute("role","list"),t.setAttribute("aria-describedby",g?sc.DND_ZONE_DRAG_DISABLED:sc.DND_ZONE_ACTIVE)),n.type&&m!==n.type&&lc(t,n.type),n.type=m,Fy(t,m),At.set(t,n),Zt?t.tabIndex=t===Tt||Wn.contains(t)||n.dropFromOthersDisabled||Tt&&n.type!==At.get(Tt).type?-1:0:t.tabIndex=n.zoneTabIndex,t.addEventListener("focus",Ty);for(var O=function(he){var ee=t.children[he];$a.add(ee),ee.tabIndex=Zt?-1:0,L||ee.setAttribute("role","listitem"),ee.removeEventListener("keydown",ic.get(ee)),ee.removeEventListener("click",oc.get(ee)),g||(ee.addEventListener("keydown",a),ic.set(ee,a),ee.addEventListener("click",o),oc.set(ee,o)),Zt&&n.items[he][vt]===nn&&(Se(function(){return["focusing on",{i:he,focusedItemId:nn}]}),Wn=ee,Wn.tabIndex=0,ee.focus())},U=0;U<t.children.length;U++)O(U)}s(e);var d={update:function(c){Se(function(){return"keyboard dndzone will update newOptions: ".concat(mn(c))}),s(c)},destroy:function(){Se(function(){return"keyboard dndzone will destroy"}),lc(t,n.type),At.delete(t),To.delete(t)}};return To.set(t,d),d}function Dr(t,e){fc(e);var n=_y(t,e),r=Sy(t,e);return{update:function(i){fc(i),n.update(i),r.update(i)},destroy:function(){n.destroy(),r.destroy()}}}function fc(t){var e=t.items,n=t.flipDurationMs,r=t.type,a=t.dragDisabled,i=t.morphDisabled,o=t.dropFromOthersDisabled,l=t.zoneTabIndex,s=t.dropTargetStyle,d=t.dropTargetClasses,u=t.transformDraggedElement,c=t.autoAriaDisabled,h=t.centreDraggedOnCursor,v=C2(t,["items","flipDurationMs","type","dragDisabled","morphDisabled","dropFromOthersDisabled","zoneTabIndex","dropTargetStyle","dropTargetClasses","transformDraggedElement","autoAriaDisabled","centreDraggedOnCursor"]);if(Object.keys(v).length>0&&console.warn("dndzone will ignore unknown options",v),!e)throw new Error("no 'items' key provided to dndzone");var m=e.find(function(_){return!{}.hasOwnProperty.call(_,vt)});if(m)throw new Error("missing '".concat(vt,"' property for item ").concat(mn(m)));if(d&&!Array.isArray(d))throw new Error("dropTargetClasses should be an array but instead it is a ".concat(Ur(d),", ").concat(mn(d)));if(l&&!By(l))throw new Error("zoneTabIndex should be a number but instead it is a ".concat(Ur(l),", ").concat(mn(l)))}function By(t){return!isNaN(t)&&function(e){return(e|0)===e}(parseFloat(t))}var _r=Oe(require("obsidian"));var hc=Oe(require("obsidian"));function Ny(t){ve(t,"svelte-l6axd",".add-new.svelte-l6axd,.add-new.svelte-l6axd button{width:100%}.disabled.svelte-l6axd button{cursor:not-allowed}")}function My(t){let e,n,r,a;return{c(){e=F("div"),w(e,"class","add-new setting-item svelte-l6axd"),w(e,"aria-label",t[1]),ge(e,"disabled",t[0])},m(i,o){H(i,e,o),r||(a=[me(n=t[2].call(null,e)),re(e,"click",t[4])],r=!0)},p(i,[o]){o&2&&w(e,"aria-label",i[1]),o&1&&ge(e,"disabled",i[0])},i:J,o:J,d(i){i&&V(e),r=!1,Ee(a)}}}function Iy(t,e,n){let{disabled:r=!1}=e,{label:a="Add New"}=e,i,o=s=>{n(3,i=new hc.ButtonComponent(s).setButtonText("+").setDisabled(r))};function l(s){we.call(this,t,s)}return t.$$set=s=>{"disabled"in s&&n(0,r=s.disabled),"label"in s&&n(1,a=s.label)},t.$$.update=()=>{if(t.$$.dirty&9){e:i&&i.setDisabled(r)}},[r,a,o,i,l]}var pc=class extends de{constructor(e){super();fe(this,e,Iy,My,le,{disabled:0,label:1},Ny)}},jt=pc;function Oy(t){ve(t,"svelte-u7oux9",".no-existing-items.svelte-u7oux9 span.svelte-u7oux9{width:100%;text-align:center;color:var(--text-faint)}")}function qy(t){let e,n,r;return{c(){e=F("div"),n=F("span"),r=be(t[0]),w(n,"class","svelte-u7oux9"),w(e,"class","no-existing-items setting-item svelte-u7oux9")},m(a,i){H(a,e,i),D(e,n),D(n,r)},p(a,[i]){i&1&&De(r,a[0])},i:J,o:J,d(a){a&&V(e)}}}function Ry(t,e,n){let{message:r}=e;return t.$$set=a=>{"message"in a&&n(0,r=a.message)},[r]}var mc=class extends de{constructor(e){super();fe(this,e,Ry,qy,le,{message:0},Oy)}},Vt=mc;function Ly(t){ve(t,"svelte-1ddbnom",".existing-items.svelte-1ddbnom.svelte-1ddbnom{width:100%}.weekday.svelte-1ddbnom.svelte-1ddbnom{display:grid;grid-template-columns:auto 1fr auto;align-items:center;justify-content:space-between;gap:1rem;width:100%}.weekday.svelte-1ddbnom .icon.svelte-1ddbnom{align-items:center}.weekday.svelte-1ddbnom.svelte-1ddbnom{margin-top:0.5rem}")}function gc(t,e,n){let r=t.slice();return r[15]=e[n],r[17]=n,r}function yc(t,e,n){let r=t.slice();return r[18]=e[n],r}function Py(t){let e,n=[],r=new Map,a,i,o,l=t[1],s=d=>d[18].id;for(let d=0;d<l.length;d+=1){let u=yc(t,l,d),c=s(u);r.set(c,n[d]=vc(c,u))}return{c(){e=F("div");for(let d=0;d<n.length;d+=1)n[d].c();w(e,"class","existing-items svelte-1ddbnom")},m(d,u){H(d,e,u);for(let c=0;c<n.length;c+=1)n[c].m(e,null);i||(o=[me(a=Dr.call(null,e,{items:t[1],flipDurationMs:So,dragDisabled:t[3]})),re(e,"consider",t[7]),re(e,"finalize",t[8])],i=!0)},p(d,u){if(u&66){l=d[1];for(let c=0;c<n.length;c+=1)n[c].r();n=dr(n,u,s,1,d,l,r,e,qa,vc,null,yc);for(let c=0;c<n.length;c+=1)n[c].a()}a&&at(a.update)&&u&10&&a.update.call(null,{items:d[1],flipDurationMs:So,dragDisabled:d[3]})},i:J,o:J,d(d){d&&V(e);for(let u=0;u<n.length;u+=1)n[u].d();i=!1,Ee(o)}}}function jy(t){let e,n;return e=new Vt({props:{message:"Create a new weekday to see it here."}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p:J,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function vc(t,e){let n,r,a,i,o,l,s,d,u,c,h,v=J,m,_;return{key:t,first:null,c(){n=F("div"),r=F("div"),i=W(),o=F("div"),s=W(),d=F("div"),c=W(),w(r,"class","icon svelte-1ddbnom"),w(d,"class","icon svelte-1ddbnom"),w(n,"class","weekday svelte-1ddbnom"),this.first=n},m(g,S){H(g,n,S),D(n,r),D(n,i),D(n,o),D(n,s),D(n,d),D(n,c),m||(_=[me(a=e[4].call(null,r)),re(r,"mousedown",e[6]),re(r,"touchstart",e[6]),me(l=e[9].call(null,o,e[18])),me(u=e[5].call(null,d,e[18]))],m=!0)},p(g,S){e=g,l&&at(l.update)&&S&2&&l.update.call(null,e[18]),u&&at(u.update)&&S&2&&u.update.call(null,e[18])},r(){h=n.getBoundingClientRect()},f(){ur(n),v()},a(){v(),v=lr(n,h,pr,{duration:So})},d(g){g&&V(n),m=!1,Ee(_)}}}function bc(t){let e,n=(t[15].name??"")+"",r,a,i,o;return{c(){e=F("option"),r=be(n),a=W(),e.disabled=i=!t[2],e.__value=o=t[17],e.value=e.__value},m(l,s){H(l,e,s),D(e,r),D(e,a)},p(l,s){s&2&&n!==(n=(l[15].name??"")+"")&&De(r,n),s&4&&i!==(i=!l[2])&&(e.disabled=i)},d(l){l&&V(e)}}}function Vy(t){let e,n,r,a,i,o,l,s,d,u,c,h,v,m,_,g,S;e=new pn({props:{name:"Overflow Weeks",desc:"Turn this off to make each month start on the first of the week.",value:t[0].static.overflow}}),e.$on("click",t[11]),r=new jt({}),r.$on("click",t[12]);let C=[jy,Py],T=[];function M(b,N){return b[1].length?1:0}i=M(t,-1),o=T[i]=C[i](t);let k=t[1].filter(wc),E=[];for(let b=0;b<k.length;b+=1)E[b]=bc(gc(t,k,b));return{c(){oe(e.$$.fragment),n=W(),oe(r.$$.fragment),a=W(),o.c(),l=W(),s=F("div"),d=F("div"),d.innerHTML=`<div class="setting-item-name">First Day</div> 
            <div class="setting-item-description">The day of the week the first year starts on.</div>`,u=W(),c=F("div"),h=F("select"),v=F("option"),v.textContent="Select a Weekday";for(let b=0;b<E.length;b+=1)E[b].c();w(d,"class","setting-item-info"),v.selected=!0,v.hidden=!0,v.disabled=!0,v.__value="Select a Weekday",v.value=v.__value,w(h,"class","dropdown"),w(h,"aria-label",m=t[1].filter(Dc).length?null:"Named Weekday Required"),t[0].static.firstWeekDay===void 0&&zt(()=>t[13].call(h)),w(c,"class","setting-item-control"),w(s,"class","setting-item")},m(b,N){ae(e,b,N),H(b,n,N),ae(r,b,N),H(b,a,N),T[i].m(b,N),H(b,l,N),H(b,s,N),D(s,d),D(s,u),D(s,c),D(c,h),D(h,v);for(let x=0;x<E.length;x+=1)E[x].m(h,null);fn(h,t[0].static.firstWeekDay),_=!0,g||(S=re(h,"change",t[13]),g=!0)},p(b,N){let x={};N&1&&(x.value=b[0].static.overflow),e.$set(x);let L=i;if(i=M(b,N),i===L?T[i].p(b,N):(ke(),G(T[L],1,1,()=>{T[L]=null}),xe(),o=T[i],o?o.p(b,N):(o=T[i]=C[i](b),o.c()),j(o,1),o.m(l.parentNode,l)),N&6){k=b[1].filter(wc);let O;for(O=0;O<k.length;O+=1){let U=gc(b,k,O);E[O]?E[O].p(U,N):(E[O]=bc(U),E[O].c(),E[O].m(h,null))}for(;O<E.length;O+=1)E[O].d(1);E.length=k.length}(!_||N&2&&m!==(m=b[1].filter(Dc).length?null:"Named Weekday Required"))&&w(h,"aria-label",m),N&1&&fn(h,b[0].static.firstWeekDay)},i(b){_||(j(e.$$.fragment,b),j(r.$$.fragment,b),j(o),_=!0)},o(b){G(e.$$.fragment,b),G(r.$$.fragment,b),G(o),_=!1},d(b){ne(e,b),b&&V(n),ne(r,b),b&&V(a),T[i].d(b),b&&V(l),b&&V(s),Ke(E,b),g=!1,S()}}}function Hy(t){let e,n;return e=new yt({props:{name:"Weekdays",warn:!t[1]?.length,label:"At least one weekday is required",$$slots:{default:[Vy]},$$scope:{ctx:t}}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,[a]){let i={};a&2&&(i.warn=!r[1]?.length),a&2097167&&(i.$$scope={dirty:a,ctx:r}),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}var So=300,wc=t=>t.name?.length,Dc=t=>t.name?.length;function Wy(t,e,n){let r,a,i=Te(),{calendar:o}=e,l=o.static.firstWeekDay,s=C=>{(0,_r.setIcon)(C,"fantasy-calendar-grip")},d=(C,T)=>{new _r.ExtraButtonComponent(C).setIcon("trash").onClick(()=>n(1,r=r.filter(M=>M.id!==T.id)))};function u(C){C.preventDefault(),n(3,c=!1)}let c=!1;function h(C){let{items:T,info:{source:M,trigger:k}}=C.detail;n(1,r=T),M===Je.KEYBOARD&&k===it.DRAG_STOPPED&&n(3,c=!0)}function v(C){let{items:T,info:{source:M}}=C.detail;n(1,r=T),M===Je.POINTER&&n(3,c=!0)}let m=(C,T)=>{new _r.TextComponent(C).setValue(T.name).setPlaceholder("Name").onChange(M=>{T.name=M,i("weekday-update",r),n(1,r),n(0,o)}).inputEl.setAttr("style","width: 100%;")},_=()=>n(0,o.static.overflow=!o.static.overflow,o),g=()=>n(0,o.static.weekdays=[...r,{type:"day",name:null,id:tt(6)}],o);function S(){o.static.firstWeekDay=sr(this),n(0,o)}return t.$$set=C=>{"calendar"in C&&n(0,o=C.calendar)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(1,r=o.static.weekdays)}if(t.$$.dirty&1){e:n(10,l=o.static.firstWeekDay)}if(t.$$.dirty&1){e:n(2,a=o.static.overflow)}if(t.$$.dirty&2){e:i("weekday-update",r)}if(t.$$.dirty&1024){e:i("first-weekday-update",l)}if(t.$$.dirty&4){e:i("overflow-update",a)}},[o,r,a,c,s,d,u,h,v,m,l,_,g,S]}var _c=class extends de{constructor(e){super();fe(this,e,Wy,Hy,le,{calendar:0},Ly)}},Ec=_c;var kc=Oe(require("obsidian"));var Ja=Oe(require("obsidian"));function Gy(t){ve(t,"svelte-1e37bk8",".month.svelte-1e37bk8.svelte-1e37bk8{display:grid;grid-template-columns:1fr 1fr auto auto;align-items:center;justify-content:space-between;gap:1rem;width:100%}.month.svelte-1e37bk8 .icon.svelte-1e37bk8{align-items:center}")}function Uy(t){let e,n,r,a,i,o,l,s,d,u,c,h,v;return{c(){e=F("div"),n=F("input"),r=W(),a=F("input"),i=W(),o=F("select"),l=F("option"),l.textContent="Month",s=F("option"),s.textContent="Intercalary",d=W(),u=F("div"),w(n,"type","text"),w(n,"spellcheck","false"),w(n,"placeholder","Name"),Qe(n,"width","100%"),w(a,"type","number"),w(a,"spellcheck","false"),w(a,"placeholder","Length"),Qe(a,"width","100%"),w(a,"min","0"),l.__value="month",l.value=l.__value,s.__value="intercalary",s.value=s.__value,w(o,"class","dropdown"),t[0]===void 0&&zt(()=>t[8].call(o)),w(u,"class","icon svelte-1e37bk8"),w(e,"class","month svelte-1e37bk8")},m(m,_){H(m,e,_),D(e,n),Ft(n,t[1]),D(e,r),D(e,a),Ft(a,t[2]),D(e,i),D(e,o),D(o,l),D(o,s),fn(o,t[0]),D(e,d),D(e,u),h||(v=[re(n,"input",t[6]),re(n,"input",t[4]),re(a,"input",t[7]),re(a,"input",t[4]),re(o,"change",t[8]),re(o,"input",t[4]),me(c=t[3].call(null,u))],h=!0)},p(m,[_]){_&2&&n.value!==m[1]&&Ft(n,m[1]),_&4&&_n(a.value)!==m[2]&&Ft(a,m[2]),_&1&&fn(o,m[0])},i:J,o:J,d(m){m&&V(e),h=!1,Ee(v)}}}function zy(t,e,n){let r=Te(),{month:a}=e,i=a.name,o=a.type,l=a.length,s=v=>{new Ja.ExtraButtonComponent(v).setIcon("trash").onClick(()=>{r("month-delete")})},d=(0,Ja.debounce)(()=>{n(5,a.name=i,a),n(5,a.type=o,a),n(5,a.length=l,a),r("month-update",a)},300,!0);function u(){i=this.value,n(1,i)}function c(){l=_n(this.value),n(2,l)}function h(){o=sr(this),n(0,o)}return t.$$set=v=>{"month"in v&&n(5,a=v.month)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(5,a.type=o,a)}},[o,i,l,s,d,a,u,c,h]}var Cc=class extends de{constructor(e){super();fe(this,e,zy,Uy,le,{month:5},Gy)}},Ac=Cc;function Yy(t){ve(t,"svelte-xv4vbj",".month.svelte-xv4vbj{display:flex;align-items:center;margin-top:0.5rem;gap:1rem}")}function xc(t,e,n){let r=t.slice();return r[14]=e[n],r}function Zy(t){let e,n=[],r=new Map,a,i,o,l,s=t[2],d=u=>u[14].id;for(let u=0;u<s.length;u+=1){let c=xc(t,s,u),h=d(c);r.set(h,n[u]=Fc(h,c))}return{c(){e=F("div");for(let u=0;u<n.length;u+=1)n[u].c();w(e,"class","existing-items")},m(u,c){H(u,e,c);for(let h=0;h<n.length;h+=1)n[h].m(e,null);i=!0,o||(l=[me(a=Dr.call(null,e,{items:t[2],flipDurationMs:Bo,dragDisabled:t[1]})),re(e,"consider",t[7]),re(e,"finalize",t[8])],o=!0)},p(u,c){if(c&93){s=u[2],ke();for(let h=0;h<n.length;h+=1)n[h].r();n=dr(n,c,d,1,u,s,r,e,tu,Fc,null,xc);for(let h=0;h<n.length;h+=1)n[h].a();xe()}a&&at(a.update)&&c&6&&a.update.call(null,{items:u[2],flipDurationMs:Bo,dragDisabled:u[1]})},i(u){if(!i){for(let c=0;c<s.length;c+=1)j(n[c]);i=!0}},o(u){for(let c=0;c<n.length;c+=1)G(n[c]);i=!1},d(u){u&&V(e);for(let c=0;c<n.length;c+=1)n[c].d();o=!1,Ee(l)}}}function Ky(t){let e,n;return e=new Vt({props:{message:"Create a new month to see it here."}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p:J,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function Fc(t,e){let n,r,a,i,o,l,s,d=J,u,c,h;function v(){return e[11](e[14])}return o=new Ac({props:{month:e[14]}}),o.$on("mousedown",e[6]),o.$on("month-delete",v),o.$on("month-update",e[12]),{key:t,first:null,c(){n=F("div"),r=F("div"),i=W(),oe(o.$$.fragment),l=W(),w(r,"class","icon"),w(n,"class","month svelte-xv4vbj"),this.first=n},m(m,_){H(m,n,_),D(n,r),D(n,i),ae(o,n,null),D(n,l),u=!0,c||(h=[me(a=e[5].call(null,r)),re(r,"mousedown",e[6]),re(r,"touchstart",e[6])],c=!0)},p(m,_){e=m;let g={};_&4&&(g.month=e[14]),o.$set(g)},r(){s=n.getBoundingClientRect()},f(){ur(n),d()},a(){d(),d=lr(n,s,pr,{duration:Bo})},i(m){u||(j(o.$$.fragment,m),u=!0)},o(m){G(o.$$.fragment,m),u=!1},d(m){m&&V(n),ne(o),c=!1,Ee(h)}}}function Qy(t){let e,n,r,a,i,o;e=new jt({}),e.$on("click",t[10]);let l=[Ky,Zy],s=[];function d(u,c){return u[2].length?1:0}return r=d(t,-1),a=s[r]=l[r](t),{c(){oe(e.$$.fragment),n=W(),a.c(),i=ct()},m(u,c){ae(e,u,c),H(u,n,c),s[r].m(u,c),H(u,i,c),o=!0},p(u,c){let h=r;r=d(u,c),r===h?s[r].p(u,c):(ke(),G(s[h],1,1,()=>{s[h]=null}),xe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){G(e.$$.fragment,u),G(a),o=!1},d(u){ne(e,u),u&&V(n),s[r].d(u),u&&V(i)}}}function Xy(t){let e,n;return e=new yt({props:{name:"Months",warn:!t[2]?.length,label:"At least one month is required",$$slots:{default:[Qy]},$$scope:{ctx:t}}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,[a]){let i={};a&4&&(i.warn=!r[2]?.length),a&131079&&(i.$$scope={dirty:a,ctx:r}),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}var Bo=300;function $y(t,e,n){let r,a,i=Xe("store");i.subscribe(S=>n(0,a=S));let o=S=>{n(2,r=r.filter(C=>C.id!=S.id)),i.set(a)},l=S=>{(0,kc.setIcon)(S,"fantasy-calendar-grip")};function s(S){S.preventDefault(),n(1,d=!1)}let d=!1;function u(S){let{items:C,info:{source:T,trigger:M}}=S.detail;n(2,r=C),T===Je.KEYBOARD&&M===it.DRAG_STOPPED&&n(1,d=!0)}function c(S){let{items:C,info:{source:T}}=S.detail;n(2,r=C),h("month-update",r),T===Je.POINTER&&n(1,d=!0)}let h=Te(),v=()=>{n(0,a.static.months=[...r,{type:"month",name:null,length:null,id:tt(6)}],a),i.set(a)},m=()=>v(),_=S=>o(S),g=()=>{i.set(a)};return t.$$.update=()=>{if(t.$$.dirty&1){e:n(2,r=a.static.months)}},[a,d,r,i,o,l,s,u,c,v,m,_,g]}var Tc=class extends de{constructor(e){super();fe(this,e,$y,Xy,le,{},Yy)}},Sc=Tc;var Cr=Oe(require("obsidian"));var Gn=Oe(require("obsidian"));async function Er(t,e,n={cta:"Yes",secondary:"No"}){return new Promise((r,a)=>{let i=new Bc(t,e,n);i.onClose=()=>{r(i.confirmed)},i.open()})}var Bc=class extends Gn.Modal{constructor(e,n,r){super(e);this.text=n;this.buttons=r;this.confirmed=!1}async display(){this.contentEl.empty(),this.contentEl.addClass("confirm-modal"),this.contentEl.createEl("p",{text:this.text});let e=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new Gn.ButtonComponent(e).setButtonText(this.buttons.cta).setCta().onClick(()=>{this.confirmed=!0,this.close()}),new Gn.ButtonComponent(e).setButtonText(this.buttons.secondary).onClick(()=>{this.close()})}onOpen(){this.display()}},No=class extends Gn.Modal{constructor(e){super(e.app);this.plugin=e;this.confirmed=!1}async display(){this.contentEl.empty(),this.contentEl.addClass("confirm-modal"),this.contentEl.createEl("p",{text:"Additional information is required to save this calendar. Any changes you may have made will be discarded if you exit now."});let e=this.contentEl.createDiv("fantasy-calendar-confirm-buttons-container");e.createEl("a").createEl("small",{cls:"dont-ask",text:"Exit and don't ask again"}).onclick=()=>{this.confirmed=!0,this.plugin.data.exitWithoutSaving=!0,this.plugin.saveSettings(),this.close()};let n=e.createDiv("fantasy-calendar-confirm-buttons");new Gn.ButtonComponent(n).setButtonText("Exit").setCta().onClick(()=>{this.confirmed=!0,this.close()}),n.createEl("a").createEl("small",{cls:"dont-ask",text:"Keep editing"}).onclick=()=>{this.plugin.saveSettings(),this.close()}}onOpen(){this.display()}};function Jy(t){ve(t,"svelte-1c4m78g",".weekday.svelte-1c4m78g.svelte-1c4m78g{display:grid;grid-template-columns:auto 1fr auto;align-items:center;justify-content:space-between;gap:1rem}.weekday.svelte-1c4m78g .icon.svelte-1c4m78g{align-items:center}.weekday.svelte-1c4m78g.svelte-1c4m78g{margin-top:0.5rem}")}function Nc(t,e,n){let r=t.slice();return r[17]=e[n],r}function Mc(t){let e,n,r,a,i,o;e=new jt({}),e.$on("click",t[15]);let l=[t0,e0],s=[];function d(u,c){return!u[2]||!u[2].length?0:1}return r=d(t,-1),a=s[r]=l[r](t),{c(){oe(e.$$.fragment),n=W(),a.c(),i=ct()},m(u,c){ae(e,u,c),H(u,n,c),s[r].m(u,c),H(u,i,c),o=!0},p(u,c){let h=r;r=d(u,c),r===h?s[r].p(u,c):(ke(),G(s[h],1,1,()=>{s[h]=null}),xe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){G(e.$$.fragment,u),G(a),o=!1},d(u){ne(e,u),u&&V(n),s[r].d(u),u&&V(i)}}}function e0(t){let e,n=[],r=new Map,a,i,o,l=t[2],s=d=>d[17].id;for(let d=0;d<l.length;d+=1){let u=Nc(t,l,d),c=s(u);r.set(c,n[d]=Ic(c,u))}return{c(){e=F("div");for(let d=0;d<n.length;d+=1)n[d].c();w(e,"class","existing-items")},m(d,u){H(d,e,u);for(let c=0;c<n.length;c+=1)n[c].m(e,null);i||(o=[me(a=Dr.call(null,e,{items:t[2],flipDurationMs:Mo,dragDisabled:t[3]})),re(e,"consider",t[11]),re(e,"finalize",t[12])],i=!0)},p(d,u){if(u&1028){l=d[2];for(let c=0;c<n.length;c+=1)n[c].r();n=dr(n,u,s,1,d,l,r,e,qa,Ic,null,Nc);for(let c=0;c<n.length;c+=1)n[c].a()}a&&at(a.update)&&u&12&&a.update.call(null,{items:d[2],flipDurationMs:Mo,dragDisabled:d[3]})},i:J,o:J,d(d){d&&V(e);for(let u=0;u<n.length;u+=1)n[u].d();i=!1,Ee(o)}}}function t0(t){let e,n;return e=new Vt({props:{message:"Create a new year to see it here."}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p:J,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function Ic(t,e){let n,r,a,i,o,l,s,d,u,c,h,v=J,m,_;return{key:t,first:null,c(){n=F("div"),r=F("div"),i=W(),o=F("div"),s=W(),d=F("div"),c=W(),w(r,"class","icon svelte-1c4m78g"),w(d,"class","icon svelte-1c4m78g"),w(n,"class","weekday svelte-1c4m78g"),this.first=n},m(g,S){H(g,n,S),D(n,r),D(n,i),D(n,o),D(n,s),D(n,d),D(n,c),m||(_=[me(a=e[5].call(null,r)),re(r,"mousedown",e[10]),re(r,"touchstart",e[10]),me(l=e[7].call(null,o,e[17])),me(u=e[6].call(null,d,e[17]))],m=!0)},p(g,S){e=g,l&&at(l.update)&&S&4&&l.update.call(null,e[17]),u&&at(u.update)&&S&4&&u.update.call(null,e[17])},r(){h=n.getBoundingClientRect()},f(){ur(n),v()},a(){v(),v=lr(n,h,pr,{duration:Mo})},d(g){g&&V(n),m=!1,Ee(_)}}}function n0(t){let e,n,r,a;e=new pn({props:{name:"Use Custom Years",desc:t[8],value:t[1]}}),e.$on("click",t[14]);let i=t[1]&&Mc(t);return{c(){oe(e.$$.fragment),n=W(),i&&i.c(),r=ct()},m(o,l){ae(e,o,l),H(o,n,l),i&&i.m(o,l),H(o,r,l),a=!0},p(o,l){let s={};l&2&&(s.value=o[1]),e.$set(s),o[1]?i?(i.p(o,l),l&2&&j(i,1)):(i=Mc(o),i.c(),j(i,1),i.m(r.parentNode,r)):i&&(ke(),G(i,1,1,()=>{i=null}),xe())},i(o){a||(j(e.$$.fragment,o),j(i),a=!0)},o(o){G(e.$$.fragment,o),G(i),a=!1},d(o){ne(e,o),o&&V(n),i&&i.d(o),o&&V(r)}}}function r0(t){let e,n;return e=new yt({props:{name:"Years",warn:t[1]&&!t[2]?.length,label:"At least one year is required when using custom years",$$slots:{default:[n0]},$$scope:{ctx:t}}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,[a]){let i={};a&6&&(i.warn=r[1]&&!r[2]?.length),a&1048591&&(i.$$scope={dirty:a,ctx:r}),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}var Mo=300;function a0(t,e,n){let r,a,{calendar:i}=e,o=Xe("store");o.subscribe(M=>n(0,i=M));let l=M=>{(0,Cr.setIcon)(M,"fantasy-calendar-grip")},s=(M,k)=>{new Cr.ExtraButtonComponent(M).setIcon("trash").onClick(()=>n(2,r=r.filter(E=>E.id!==k.id)))},d=(M,k)=>{new Cr.TextComponent(M).setValue(k.name).setPlaceholder("Name").onChange(b=>{k.name=b,S("years-update",r),n(2,r),n(0,i)}).inputEl.setAttr("style","width: 100%;")},{app:u}=e,c=createFragment(M=>(M.createSpan({text:"Create custom years to display instead of incrementing from 1."}),M.createEl("br"),M.createSpan({text:"If on, "}),M.createEl("strong",{text:"only the years added below will be displayed."}),M)),h=async()=>{i.static.useCustomYears&&r?.length&&await Er(u,"The custom years you have created will be removed. Proceed?")&&n(0,i.static.years=[],i),n(0,i.static.useCustomYears=!i.static.useCustomYears,i),o.set(i)};function v(M){M.preventDefault(),n(3,m=!1)}let m=!1;function _(M){let{items:k,info:{source:E,trigger:b}}=M.detail;n(2,r=k),E===Je.KEYBOARD&&b===it.DRAG_STOPPED&&n(3,m=!0)}function g(M){let{items:k,info:{source:E}}=M.detail;n(2,r=k),E===Je.POINTER&&n(3,m=!0)}let S=Te(),C=()=>h(),T=()=>{n(0,i.static.years=[...r??[],{name:null,id:tt(6),type:"year"}],i),o.set(i)};return t.$$set=M=>{"calendar"in M&&n(0,i=M.calendar),"app"in M&&n(13,u=M.app)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(2,r=i.static.years)}if(t.$$.dirty&1){e:n(1,a=i.static.useCustomYears)}if(t.$$.dirty&4){e:S("years-update",r)}if(t.$$.dirty&2){e:S("use-custom-update",a)}},[i,a,r,m,o,l,s,d,c,h,v,_,g,u,C,T]}var Oc=class extends de{constructor(e){super();fe(this,e,a0,r0,le,{calendar:0,app:13},Jy)}},qc=Oc;var Io=Oe(require("obsidian"));function i0(t){ve(t,"svelte-1ldxqlp",".dot.svelte-1ldxqlp{display:inline-block;height:0.875em;width:0.875em;margin:0 1px}")}function o0(t){let e,n;return{c(){e=en("svg"),n=en("circle"),w(n,"stroke",t[0]),w(n,"fill",t[0]),w(n,"cx","3"),w(n,"cy","3"),w(n,"r","2"),w(e,"class","dot svelte-1ldxqlp"),w(e,"viewBox","0 0 6 6"),w(e,"xmlns","http://www.w3.org/2000/svg"),w(e,"aria-label",t[1])},m(r,a){H(r,e,a),D(e,n)},p(r,[a]){a&1&&w(n,"stroke",r[0]),a&1&&w(n,"fill",r[0]),a&2&&w(e,"aria-label",r[1])},i:J,o:J,d(r){r&&V(e)}}}function s0(t,e,n){let{color:r}=e,{label:a}=e;return t.$$set=i=>{"color"in i&&n(0,r=i.color),"label"in i&&n(1,a=i.label)},[r,a]}var Rc=class extends de{constructor(e){super();fe(this,e,s0,o0,le,{color:0,label:1},i0)}},Lc=Rc;function l0(t){ve(t,"svelte-3snb0d",".event.svelte-3snb0d.svelte-3snb0d{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.event-info.svelte-3snb0d.svelte-3snb0d{width:100%}.icons.svelte-3snb0d.svelte-3snb0d{display:flex;align-self:flex-start;justify-self:flex-end;align-items:center}.event.svelte-3snb0d .icon.svelte-3snb0d{align-items:center}.date.svelte-3snb0d.svelte-3snb0d{display:flex;justify-content:flex-start;gap:0.25rem}.clamp.svelte-3snb0d.svelte-3snb0d{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;word-break:keep-all;overflow:hidden;width:calc(var(--event-max-width) * 0.75)}")}function Pc(t){let e,n;return e=new Lc({props:{color:t[1].color,label:t[1].name}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a&2&&(i.color=r[1].color),a&2&&(i.label=r[1].name),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function u0(t){let e,n,r,a,i=t[0].name+"",o,l,s,d,u,c,h,v=(t[0].description??"")+"",m,_,g,S,C,T,M,k,E,b,N,x=t[1]!=null&&Pc(t);return{c(){e=F("div"),n=F("div"),r=F("span"),x&&x.c(),a=W(),o=be(i),l=W(),s=F("div"),d=F("div"),u=be(t[2]),c=W(),h=F("span"),m=be(v),_=W(),g=F("div"),S=F("div"),T=W(),M=F("div"),w(r,"class","setting-item-name"),w(d,"class","date svelte-3snb0d"),w(h,"class","clamp svelte-3snb0d"),w(s,"class","setting-item-description"),w(n,"class","event-info svelte-3snb0d"),w(S,"class","icon svelte-3snb0d"),w(M,"class","icon svelte-3snb0d"),w(g,"class","icons svelte-3snb0d"),w(e,"class","event svelte-3snb0d")},m(L,O){H(L,e,O),D(e,n),D(n,r),x&&x.m(r,null),D(r,a),D(r,o),D(n,l),D(n,s),D(s,d),D(d,u),D(s,c),D(s,h),D(h,m),D(e,_),D(e,g),D(g,S),D(g,T),D(g,M),E=!0,b||(N=[me(C=t[5].call(null,S)),re(S,"click",t[6]),me(k=t[4].call(null,M)),re(M,"click",t[7])],b=!0)},p(L,[O]){L[1]!=null?x?(x.p(L,O),O&2&&j(x,1)):(x=Pc(L),x.c(),j(x,1),x.m(r,a)):x&&(ke(),G(x,1,1,()=>{x=null}),xe()),(!E||O&1)&&i!==(i=L[0].name+"")&&De(o,i),(!E||O&4)&&De(u,L[2]),(!E||O&1)&&v!==(v=(L[0].description??"")+"")&&De(m,v)},i(L){E||(j(x),E=!0)},o(L){G(x),E=!1},d(L){L&&V(e),x&&x.d(),b=!1,Ee(N)}}}function c0(t,e,n){let r=Te(),a=c=>{new Io.ExtraButtonComponent(c).setIcon("trash").setTooltip("Delete").extraSettingsEl.setAttr("style","margin-left: 0;")},i=c=>{new Io.ExtraButtonComponent(c).setIcon("pencil").setTooltip("Edit")},{event:o}=e,{category:l}=e,{date:s}=e,d=()=>r("edit"),u=()=>r("delete");return t.$$set=c=>{"event"in c&&n(0,o=c.event),"category"in c&&n(1,l=c.category),"date"in c&&n(2,s=c.date)},[o,l,s,r,a,i,d,u]}var jc=class extends de{constructor(e){super();fe(this,e,c0,u0,le,{event:0,category:1,date:2},l0)}},Vc=jc;var gt=Oe(require("obsidian"));var si=Oe(require("obsidian"));var ot="top",mt="bottom",ft="right",ht="left",ei="auto",kn=[ot,mt,ft,ht],gn="start",Un="end",Hc="clippingParents",ti="viewport",Ar="popper",Wc="reference",Oo=kn.reduce(function(t,e){return t.concat([e+"-"+gn,e+"-"+Un])},[]),ni=[].concat(kn,[ei]).reduce(function(t,e){return t.concat([e,e+"-"+gn,e+"-"+Un])},[]),d0="beforeRead",f0="read",h0="afterRead",p0="beforeMain",m0="main",g0="afterMain",y0="beforeWrite",v0="write",b0="afterWrite",Gc=[d0,f0,h0,p0,m0,g0,y0,v0,b0];function bt(t){return t?(t.nodeName||"").toLowerCase():null}function st(t){if(t==null)return window;if(t.toString()!=="[object Window]"){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function yn(t){var e=st(t).Element;return t instanceof e||t instanceof Element}function wt(t){var e=st(t).HTMLElement;return t instanceof e||t instanceof HTMLElement}function ri(t){if(typeof ShadowRoot=="undefined")return!1;var e=st(t).ShadowRoot;return t instanceof e||t instanceof ShadowRoot}function w0(t){var e=t.state;Object.keys(e.elements).forEach(function(n){var r=e.styles[n]||{},a=e.attributes[n]||{},i=e.elements[n];!wt(i)||!bt(i)||(Object.assign(i.style,r),Object.keys(a).forEach(function(o){var l=a[o];l===!1?i.removeAttribute(o):i.setAttribute(o,l===!0?"":l)}))})}function D0(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow),function(){Object.keys(e.elements).forEach(function(r){var a=e.elements[r],i=e.attributes[r]||{},o=Object.keys(e.styles.hasOwnProperty(r)?e.styles[r]:n[r]),l=o.reduce(function(s,d){return s[d]="",s},{});!wt(a)||!bt(a)||(Object.assign(a.style,l),Object.keys(i).forEach(function(s){a.removeAttribute(s)}))})}}var Uc={name:"applyStyles",enabled:!0,phase:"write",fn:w0,effect:D0,requires:["computeStyles"]};function Dt(t){return t.split("-")[0]}function Kt(t,e){e===void 0&&(e=!1);var n=t.getBoundingClientRect(),r=1,a=1;return{width:n.width/r,height:n.height/a,top:n.top/a,right:n.right/r,bottom:n.bottom/a,left:n.left/r,x:n.left/r,y:n.top/a}}function zn(t){var e=Kt(t),n=t.offsetWidth,r=t.offsetHeight;return Math.abs(e.width-n)<=1&&(n=e.width),Math.abs(e.height-r)<=1&&(r=e.height),{x:t.offsetLeft,y:t.offsetTop,width:n,height:r}}function $r(t,e){var n=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(n&&ri(n)){var r=e;do{if(r&&t.isSameNode(r))return!0;r=r.parentNode||r.host}while(r)}return!1}function Mt(t){return st(t).getComputedStyle(t)}function qo(t){return["table","td","th"].indexOf(bt(t))>=0}function kt(t){return((yn(t)?t.ownerDocument:t.document)||window.document).documentElement}function vn(t){return bt(t)==="html"?t:t.assignedSlot||t.parentNode||(ri(t)?t.host:null)||kt(t)}function zc(t){return!wt(t)||Mt(t).position==="fixed"?null:t.offsetParent}function _0(t){var e=navigator.userAgent.toLowerCase().indexOf("firefox")!==-1,n=navigator.userAgent.indexOf("Trident")!==-1;if(n&&wt(t)){var r=Mt(t);if(r.position==="fixed")return null}for(var a=vn(t);wt(a)&&["html","body"].indexOf(bt(a))<0;){var i=Mt(a);if(i.transform!=="none"||i.perspective!=="none"||i.contain==="paint"||["transform","perspective"].indexOf(i.willChange)!==-1||e&&i.willChange==="filter"||e&&i.filter&&i.filter!=="none")return a;a=a.parentNode}return null}function an(t){for(var e=st(t),n=zc(t);n&&qo(n)&&Mt(n).position==="static";)n=zc(n);return n&&(bt(n)==="html"||bt(n)==="body"&&Mt(n).position==="static")?e:n||_0(t)||e}function Yn(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}var Qt=Math.max,xn=Math.min,Jr=Math.round;function Zn(t,e,n){return Qt(t,xn(e,n))}function ea(){return{top:0,right:0,bottom:0,left:0}}function ta(t){return Object.assign({},ea(),t)}function na(t,e){return e.reduce(function(n,r){return n[r]=t,n},{})}var E0=function(e,n){return e=typeof e=="function"?e(Object.assign({},n.rects,{placement:n.placement})):e,ta(typeof e!="number"?e:na(e,kn))};function C0(t){var e,n=t.state,r=t.name,a=t.options,i=n.elements.arrow,o=n.modifiersData.popperOffsets,l=Dt(n.placement),s=Yn(l),d=[ht,ft].indexOf(l)>=0,u=d?"height":"width";if(!(!i||!o)){var c=E0(a.padding,n),h=zn(i),v=s==="y"?ot:ht,m=s==="y"?mt:ft,_=n.rects.reference[u]+n.rects.reference[s]-o[s]-n.rects.popper[u],g=o[s]-n.rects.reference[s],S=an(i),C=S?s==="y"?S.clientHeight||0:S.clientWidth||0:0,T=_/2-g/2,M=c[v],k=C-h[u]-c[m],E=C/2-h[u]/2+T,b=Zn(M,E,k),N=s;n.modifiersData[r]=(e={},e[N]=b,e.centerOffset=b-E,e)}}function A0(t){var e=t.state,n=t.options,r=n.element,a=r===void 0?"[data-popper-arrow]":r;a!=null&&(typeof a=="string"&&(a=e.elements.popper.querySelector(a),!a)||!$r(e.elements.popper,a)||(e.elements.arrow=a))}var Yc={name:"arrow",enabled:!0,phase:"main",fn:C0,effect:A0,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Xt(t){return t.split("-")[1]}var k0={top:"auto",right:"auto",bottom:"auto",left:"auto"};function x0(t){var e=t.x,n=t.y,r=window,a=r.devicePixelRatio||1;return{x:Jr(Jr(e*a)/a)||0,y:Jr(Jr(n*a)/a)||0}}function Zc(t){var e,n=t.popper,r=t.popperRect,a=t.placement,i=t.variation,o=t.offsets,l=t.position,s=t.gpuAcceleration,d=t.adaptive,u=t.roundOffsets,c=u===!0?x0(o):typeof u=="function"?u(o):o,h=c.x,v=h===void 0?0:h,m=c.y,_=m===void 0?0:m,g=o.hasOwnProperty("x"),S=o.hasOwnProperty("y"),C=ht,T=ot,M=window;if(d){var k=an(n),E="clientHeight",b="clientWidth";k===st(n)&&(k=kt(n),Mt(k).position!=="static"&&l==="absolute"&&(E="scrollHeight",b="scrollWidth")),k=k,(a===ot||(a===ht||a===ft)&&i===Un)&&(T=mt,_-=k[E]-r.height,_*=s?1:-1),(a===ht||(a===ot||a===mt)&&i===Un)&&(C=ft,v-=k[b]-r.width,v*=s?1:-1)}var N=Object.assign({position:l},d&&k0);if(s){var x;return Object.assign({},N,(x={},x[T]=S?"0":"",x[C]=g?"0":"",x.transform=(M.devicePixelRatio||1)<=1?"translate("+v+"px, "+_+"px)":"translate3d("+v+"px, "+_+"px, 0)",x))}return Object.assign({},N,(e={},e[T]=S?_+"px":"",e[C]=g?v+"px":"",e.transform="",e))}function F0(t){var e=t.state,n=t.options,r=n.gpuAcceleration,a=r===void 0?!0:r,i=n.adaptive,o=i===void 0?!0:i,l=n.roundOffsets,s=l===void 0?!0:l;if(!1)var d;var u={placement:Dt(e.placement),variation:Xt(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:a};e.modifiersData.popperOffsets!=null&&(e.styles.popper=Object.assign({},e.styles.popper,Zc(Object.assign({},u,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:o,roundOffsets:s})))),e.modifiersData.arrow!=null&&(e.styles.arrow=Object.assign({},e.styles.arrow,Zc(Object.assign({},u,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:s})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})}var Kc={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:F0,data:{}};var ai={passive:!0};function T0(t){var e=t.state,n=t.instance,r=t.options,a=r.scroll,i=a===void 0?!0:a,o=r.resize,l=o===void 0?!0:o,s=st(e.elements.popper),d=[].concat(e.scrollParents.reference,e.scrollParents.popper);return i&&d.forEach(function(u){u.addEventListener("scroll",n.update,ai)}),l&&s.addEventListener("resize",n.update,ai),function(){i&&d.forEach(function(u){u.removeEventListener("scroll",n.update,ai)}),l&&s.removeEventListener("resize",n.update,ai)}}var Qc={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:T0,data:{}};var S0={left:"right",right:"left",bottom:"top",top:"bottom"};function kr(t){return t.replace(/left|right|bottom|top/g,function(e){return S0[e]})}var B0={start:"end",end:"start"};function ii(t){return t.replace(/start|end/g,function(e){return B0[e]})}function Kn(t){var e=st(t),n=e.pageXOffset,r=e.pageYOffset;return{scrollLeft:n,scrollTop:r}}function Qn(t){return Kt(kt(t)).left+Kn(t).scrollLeft}function Ro(t){var e=st(t),n=kt(t),r=e.visualViewport,a=n.clientWidth,i=n.clientHeight,o=0,l=0;return r&&(a=r.width,i=r.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(o=r.offsetLeft,l=r.offsetTop)),{width:a,height:i,x:o+Qn(t),y:l}}function Lo(t){var e,n=kt(t),r=Kn(t),a=(e=t.ownerDocument)==null?void 0:e.body,i=Qt(n.scrollWidth,n.clientWidth,a?a.scrollWidth:0,a?a.clientWidth:0),o=Qt(n.scrollHeight,n.clientHeight,a?a.scrollHeight:0,a?a.clientHeight:0),l=-r.scrollLeft+Qn(t),s=-r.scrollTop;return Mt(a||n).direction==="rtl"&&(l+=Qt(n.clientWidth,a?a.clientWidth:0)-i),{width:i,height:o,x:l,y:s}}function Xn(t){var e=Mt(t),n=e.overflow,r=e.overflowX,a=e.overflowY;return/auto|scroll|overlay|hidden/.test(n+a+r)}function oi(t){return["html","body","#document"].indexOf(bt(t))>=0?t.ownerDocument.body:wt(t)&&Xn(t)?t:oi(vn(t))}function Fn(t,e){var n;e===void 0&&(e=[]);var r=oi(t),a=r===((n=t.ownerDocument)==null?void 0:n.body),i=st(r),o=a?[i].concat(i.visualViewport||[],Xn(r)?r:[]):r,l=e.concat(o);return a?l:l.concat(Fn(vn(o)))}function xr(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function N0(t){var e=Kt(t);return e.top=e.top+t.clientTop,e.left=e.left+t.clientLeft,e.bottom=e.top+t.clientHeight,e.right=e.left+t.clientWidth,e.width=t.clientWidth,e.height=t.clientHeight,e.x=e.left,e.y=e.top,e}function Xc(t,e){return e===ti?xr(Ro(t)):wt(e)?N0(e):xr(Lo(kt(t)))}function M0(t){var e=Fn(vn(t)),n=["absolute","fixed"].indexOf(Mt(t).position)>=0,r=n&&wt(t)?an(t):t;return yn(r)?e.filter(function(a){return yn(a)&&$r(a,r)&&bt(a)!=="body"}):[]}function Po(t,e,n){var r=e==="clippingParents"?M0(t):[].concat(e),a=[].concat(r,[n]),i=a[0],o=a.reduce(function(l,s){var d=Xc(t,s);return l.top=Qt(d.top,l.top),l.right=xn(d.right,l.right),l.bottom=xn(d.bottom,l.bottom),l.left=Qt(d.left,l.left),l},Xc(t,i));return o.width=o.right-o.left,o.height=o.bottom-o.top,o.x=o.left,o.y=o.top,o}function ra(t){var e=t.reference,n=t.element,r=t.placement,a=r?Dt(r):null,i=r?Xt(r):null,o=e.x+e.width/2-n.width/2,l=e.y+e.height/2-n.height/2,s;switch(a){case ot:s={x:o,y:e.y-n.height};break;case mt:s={x:o,y:e.y+e.height};break;case ft:s={x:e.x+e.width,y:l};break;case ht:s={x:e.x-n.width,y:l};break;default:s={x:e.x,y:e.y}}var d=a?Yn(a):null;if(d!=null){var u=d==="y"?"height":"width";switch(i){case gn:s[d]=s[d]-(e[u]/2-n[u]/2);break;case Un:s[d]=s[d]+(e[u]/2-n[u]/2);break;default:}}return s}function on(t,e){e===void 0&&(e={});var n=e,r=n.placement,a=r===void 0?t.placement:r,i=n.boundary,o=i===void 0?Hc:i,l=n.rootBoundary,s=l===void 0?ti:l,d=n.elementContext,u=d===void 0?Ar:d,c=n.altBoundary,h=c===void 0?!1:c,v=n.padding,m=v===void 0?0:v,_=ta(typeof m!="number"?m:na(m,kn)),g=u===Ar?Wc:Ar,S=t.rects.popper,C=t.elements[h?g:u],T=Po(yn(C)?C:C.contextElement||kt(t.elements.popper),o,s),M=Kt(t.elements.reference),k=ra({reference:M,element:S,strategy:"absolute",placement:a}),E=xr(Object.assign({},S,k)),b=u===Ar?E:M,N={top:T.top-b.top+_.top,bottom:b.bottom-T.bottom+_.bottom,left:T.left-b.left+_.left,right:b.right-T.right+_.right},x=t.modifiersData.offset;if(u===Ar&&x){var L=x[a];Object.keys(N).forEach(function(O){var U=[ft,mt].indexOf(O)>=0?1:-1,te=[ot,mt].indexOf(O)>=0?"y":"x";N[O]+=L[te]*U})}return N}function jo(t,e){e===void 0&&(e={});var n=e,r=n.placement,a=n.boundary,i=n.rootBoundary,o=n.padding,l=n.flipVariations,s=n.allowedAutoPlacements,d=s===void 0?ni:s,u=Xt(r),c=u?l?Oo:Oo.filter(function(m){return Xt(m)===u}):kn,h=c.filter(function(m){return d.indexOf(m)>=0});h.length===0&&(h=c);var v=h.reduce(function(m,_){return m[_]=on(t,{placement:_,boundary:a,rootBoundary:i,padding:o})[Dt(_)],m},{});return Object.keys(v).sort(function(m,_){return v[m]-v[_]})}function I0(t){if(Dt(t)===ei)return[];var e=kr(t);return[ii(t),e,ii(e)]}function O0(t){var e=t.state,n=t.options,r=t.name;if(!e.modifiersData[r]._skip){for(var a=n.mainAxis,i=a===void 0?!0:a,o=n.altAxis,l=o===void 0?!0:o,s=n.fallbackPlacements,d=n.padding,u=n.boundary,c=n.rootBoundary,h=n.altBoundary,v=n.flipVariations,m=v===void 0?!0:v,_=n.allowedAutoPlacements,g=e.options.placement,S=Dt(g),C=S===g,T=s||(C||!m?[kr(g)]:I0(g)),M=[g].concat(T).reduce(function(rt,Pe){return rt.concat(Dt(Pe)===ei?jo(e,{placement:Pe,boundary:u,rootBoundary:c,padding:d,flipVariations:m,allowedAutoPlacements:_}):Pe)},[]),k=e.rects.reference,E=e.rects.popper,b=new Map,N=!0,x=M[0],L=0;L<M.length;L++){var O=M[L],U=Dt(O),te=Xt(O)===gn,he=[ot,mt].indexOf(U)>=0,ee=he?"width":"height",se=on(e,{placement:O,boundary:u,rootBoundary:c,altBoundary:h,padding:d}),Y=he?te?ft:ht:te?mt:ot;k[ee]>E[ee]&&(Y=kr(Y));var z=kr(Y),K=[];if(i&&K.push(se[U]<=0),l&&K.push(se[Y]<=0,se[z]<=0),K.every(function(rt){return rt})){x=O,N=!1;break}b.set(O,K)}if(N)for(var ye=m?3:1,ue=function(Pe){var lt=M.find(function(et){var Ae=b.get(et);if(Ae)return Ae.slice(0,Pe).every(function(je){return je})});if(lt)return x=lt,"break"},Me=ye;Me>0;Me--){var We=ue(Me);if(We==="break")break}e.placement!==x&&(e.modifiersData[r]._skip=!0,e.placement=x,e.reset=!0)}}var $c={name:"flip",enabled:!0,phase:"main",fn:O0,requiresIfExists:["offset"],data:{_skip:!1}};function Jc(t,e,n){return n===void 0&&(n={x:0,y:0}),{top:t.top-e.height-n.y,right:t.right-e.width+n.x,bottom:t.bottom-e.height+n.y,left:t.left-e.width-n.x}}function ed(t){return[ot,ft,mt,ht].some(function(e){return t[e]>=0})}function q0(t){var e=t.state,n=t.name,r=e.rects.reference,a=e.rects.popper,i=e.modifiersData.preventOverflow,o=on(e,{elementContext:"reference"}),l=on(e,{altBoundary:!0}),s=Jc(o,r),d=Jc(l,a,i),u=ed(s),c=ed(d);e.modifiersData[n]={referenceClippingOffsets:s,popperEscapeOffsets:d,isReferenceHidden:u,hasPopperEscaped:c},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":c})}var td={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:q0};function R0(t,e,n){var r=Dt(t),a=[ht,ot].indexOf(r)>=0?-1:1,i=typeof n=="function"?n(Object.assign({},e,{placement:t})):n,o=i[0],l=i[1];return o=o||0,l=(l||0)*a,[ht,ft].indexOf(r)>=0?{x:l,y:o}:{x:o,y:l}}function L0(t){var e=t.state,n=t.options,r=t.name,a=n.offset,i=a===void 0?[0,0]:a,o=ni.reduce(function(u,c){return u[c]=R0(c,e.rects,i),u},{}),l=o[e.placement],s=l.x,d=l.y;e.modifiersData.popperOffsets!=null&&(e.modifiersData.popperOffsets.x+=s,e.modifiersData.popperOffsets.y+=d),e.modifiersData[r]=o}var nd={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:L0};function P0(t){var e=t.state,n=t.name;e.modifiersData[n]=ra({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})}var rd={name:"popperOffsets",enabled:!0,phase:"read",fn:P0,data:{}};function Vo(t){return t==="x"?"y":"x"}function j0(t){var e=t.state,n=t.options,r=t.name,a=n.mainAxis,i=a===void 0?!0:a,o=n.altAxis,l=o===void 0?!1:o,s=n.boundary,d=n.rootBoundary,u=n.altBoundary,c=n.padding,h=n.tether,v=h===void 0?!0:h,m=n.tetherOffset,_=m===void 0?0:m,g=on(e,{boundary:s,rootBoundary:d,padding:c,altBoundary:u}),S=Dt(e.placement),C=Xt(e.placement),T=!C,M=Yn(S),k=Vo(M),E=e.modifiersData.popperOffsets,b=e.rects.reference,N=e.rects.popper,x=typeof _=="function"?_(Object.assign({},e.rects,{placement:e.placement})):_,L={x:0,y:0};if(!!E){if(i||l){var O=M==="y"?ot:ht,U=M==="y"?mt:ft,te=M==="y"?"height":"width",he=E[M],ee=E[M]+g[O],se=E[M]-g[U],Y=v?-N[te]/2:0,z=C===gn?b[te]:N[te],K=C===gn?-N[te]:-b[te],ye=e.elements.arrow,ue=v&&ye?zn(ye):{width:0,height:0},Me=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:ea(),We=Me[O],rt=Me[U],Pe=Zn(0,b[te],ue[te]),lt=T?b[te]/2-Y-Pe-We-x:z-Pe-We-x,et=T?-b[te]/2+Y+Pe+rt+x:K+Pe+rt+x,Ae=e.elements.arrow&&an(e.elements.arrow),je=Ae?M==="y"?Ae.clientTop||0:Ae.clientLeft||0:0,St=e.modifiersData.offset?e.modifiersData.offset[e.placement][M]:0,Ht=E[M]+lt-St-je,It=E[M]+et-St;if(i){var xt=Zn(v?xn(ee,Ht):ee,he,v?Qt(se,It):se);E[M]=xt,L[M]=xt-he}if(l){var Ot=M==="x"?ot:ht,ln=M==="x"?mt:ft,ie=E[k],Mr=ie+g[Ot],ua=ie-g[ln],ca=Zn(v?xn(Mr,Ht):Mr,ie,v?Qt(ua,It):ua);E[k]=ca,L[k]=ca-ie}}e.modifiersData[r]=L}}var ad={name:"preventOverflow",enabled:!0,phase:"main",fn:j0,requiresIfExists:["offset"]};function Ho(t){return{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}}function Wo(t){return t===st(t)||!wt(t)?Kn(t):Ho(t)}function V0(t){var e=t.getBoundingClientRect(),n=e.width/t.offsetWidth||1,r=e.height/t.offsetHeight||1;return n!==1||r!==1}function Go(t,e,n){n===void 0&&(n=!1);var r=wt(e),a=wt(e)&&V0(e),i=kt(e),o=Kt(t,a),l={scrollLeft:0,scrollTop:0},s={x:0,y:0};return(r||!r&&!n)&&((bt(e)!=="body"||Xn(i))&&(l=Wo(e)),wt(e)?(s=Kt(e,!0),s.x+=e.clientLeft,s.y+=e.clientTop):i&&(s.x=Qn(i))),{x:o.left+l.scrollLeft-s.x,y:o.top+l.scrollTop-s.y,width:o.width,height:o.height}}function H0(t){var e=new Map,n=new Set,r=[];t.forEach(function(i){e.set(i.name,i)});function a(i){n.add(i.name);var o=[].concat(i.requires||[],i.requiresIfExists||[]);o.forEach(function(l){if(!n.has(l)){var s=e.get(l);s&&a(s)}}),r.push(i)}return t.forEach(function(i){n.has(i.name)||a(i)}),r}function Uo(t){var e=H0(t);return Gc.reduce(function(n,r){return n.concat(e.filter(function(a){return a.phase===r}))},[])}function zo(t){var e;return function(){return e||(e=new Promise(function(n){Promise.resolve().then(function(){e=void 0,n(t())})})),e}}function Yo(t){var e=t.reduce(function(n,r){var a=n[r.name];return n[r.name]=a?Object.assign({},a,r,{options:Object.assign({},a.options,r.options),data:Object.assign({},a.data,r.data)}):r,n},{});return Object.keys(e).map(function(n){return e[n]})}var id={placement:"bottom",modifiers:[],strategy:"absolute"};function od(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return!e.some(function(r){return!(r&&typeof r.getBoundingClientRect=="function")})}function sd(t){t===void 0&&(t={});var e=t,n=e.defaultModifiers,r=n===void 0?[]:n,a=e.defaultOptions,i=a===void 0?id:a;return function(l,s,d){d===void 0&&(d=i);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},id,i),modifiersData:{},elements:{reference:l,popper:s},attributes:{},styles:{}},c=[],h=!1,v={state:u,setOptions:function(S){var C=typeof S=="function"?S(u.options):S;_(),u.options=Object.assign({},i,u.options,C),u.scrollParents={reference:yn(l)?Fn(l):l.contextElement?Fn(l.contextElement):[],popper:Fn(s)};var T=Uo(Yo([].concat(r,u.options.modifiers)));if(u.orderedModifiers=T.filter(function(O){return O.enabled}),!1){var M;if(getBasePlacement(u.options.placement)===auto)var k;var E,b,N,x,L}return m(),v.update()},forceUpdate:function(){if(!h){var S=u.elements,C=S.reference,T=S.popper;if(!!od(C,T)){u.rects={reference:Go(C,an(T),u.options.strategy==="fixed"),popper:zn(T)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(O){return u.modifiersData[O.name]=Object.assign({},O.data)});for(var M=0,k=0;k<u.orderedModifiers.length;k++){if(u.reset===!0){u.reset=!1,k=-1;continue}var E=u.orderedModifiers[k],b=E.fn,N=E.options,x=N===void 0?{}:N,L=E.name;typeof b=="function"&&(u=b({state:u,options:x,name:L,instance:v})||u)}}}},update:zo(function(){return new Promise(function(g){v.forceUpdate(),g(u)})}),destroy:function(){_(),h=!0}};if(!od(l,s))return v;v.setOptions(d).then(function(g){!h&&d.onFirstUpdate&&d.onFirstUpdate(g)});function m(){u.orderedModifiers.forEach(function(g){var S=g.name,C=g.options,T=C===void 0?{}:C,M=g.effect;if(typeof M=="function"){var k=M({state:u,name:S,instance:v,options:T}),E=function(){};c.push(k||E)}})}function _(){c.forEach(function(g){return g()}),c=[]}return v}}var W0=[Qc,rd,Kc,Uc,nd,$c,ad,Yc,td],Zo=sd({defaultModifiers:W0});var ld=class{constructor(e,n,r){this.containerEl=n,this.owner=e,n.on("click",".suggestion-item",this.onSuggestionClick.bind(this)),n.on("mousemove",".suggestion-item",this.onSuggestionMouseover.bind(this)),r.register([],"ArrowUp",()=>(this.setSelectedItem(this.selectedItem-1,!0),!1)),r.register([],"ArrowDown",()=>(this.setSelectedItem(this.selectedItem+1,!0),!1)),r.register([],"Enter",a=>(this.useSelectedItem(a),!1)),r.register([],"Tab",a=>(this.chooseSuggestion(a),!1))}chooseSuggestion(e){if(!this.items||!this.items.length)return;let n=this.items[this.selectedItem];n&&this.owner.onChooseSuggestion(n,e)}onSuggestionClick(e,n){if(e.preventDefault(),!this.suggestions||!this.suggestions.length)return;let r=this.suggestions.indexOf(n);this.setSelectedItem(r,!1),this.useSelectedItem(e)}onSuggestionMouseover(e,n){if(!this.suggestions||!this.suggestions.length)return;let r=this.suggestions.indexOf(n);this.setSelectedItem(r,!1)}empty(){this.containerEl.empty()}setSuggestions(e){this.containerEl.empty();let n=[];e.forEach(r=>{let a=this.containerEl.createDiv("suggestion-item");this.owner.renderSuggestion(r,a),n.push(a)}),this.items=e,this.suggestions=n,this.setSelectedItem(0,!1)}useSelectedItem(e){if(!this.items||!this.items.length)return;let n=this.items[this.selectedItem];n&&this.owner.selectSuggestion(n,e)}wrap(e,n){return(e%n+n)%n}setSelectedItem(e,n){let r=this.wrap(e,this.suggestions.length),a=this.suggestions[this.selectedItem],i=this.suggestions[r];a&&a.removeClass("is-selected"),i&&i.addClass("is-selected"),this.selectedItem=r,n&&i.scrollIntoView(!1)}},aa=class extends si.FuzzySuggestModal{constructor(e,n,r){super(e);this.items=[];this.scope=new si.Scope;this.emptyStateText="No match found";this.limit=100;this.inputEl=n,this.items=r,this.suggestEl=createDiv("suggestion-container"),this.contentEl=this.suggestEl.createDiv("suggestion"),this.suggester=new ld(this,this.contentEl,this.scope),this.scope.register([],"Escape",this.onEscape.bind(this)),this.inputEl.addEventListener("input",this.onInputChanged.bind(this)),this.inputEl.addEventListener("focus",this.onFocus.bind(this)),this.inputEl.addEventListener("blur",this.close.bind(this)),this.suggestEl.on("mousedown",".suggestion-container",a=>{a.preventDefault()})}empty(){this.suggester.empty()}onInputChanged(){if(this.shouldNotOpen)return;let e=this.modifyInput(this.inputEl.value),n=this.getSuggestions(e);n.length>0?this.suggester.setSuggestions(n.slice(0,this.limit)):this.onNoSuggestion(),this.open()}onFocus(){this.shouldNotOpen=!1,this.onInputChanged()}modifyInput(e){return e}onNoSuggestion(){this.empty(),this.renderSuggestion(null,this.contentEl.createDiv("suggestion-item"))}open(){this.app.keymap.pushScope(this.scope),document.body.appendChild(this.suggestEl),this.popper=Zo(this.inputEl,this.suggestEl,{placement:"bottom-start",modifiers:[{name:"offset",options:{offset:[0,10]}},{name:"flip",options:{fallbackPlacements:["top"]}}]})}onEscape(){this.close(),this.shouldNotOpen=!0}close(){this.app.keymap.popScope(this.scope),this.suggester.setSuggestions([]),this.popper&&this.popper.destroy(),this.suggestEl.detach()}createPrompt(e){this.promptEl||(this.promptEl=this.suggestEl.createDiv("prompt-instructions"));let n=this.promptEl.createDiv("prompt-instruction");for(let r of e)n.appendChild(r)}};var ia=Oe(require("obsidian")),li=class extends aa{constructor(e,n,r){super(e,n.inputEl,r);this.files=[...r],this.text=n,this.createPrompts(),this.inputEl.addEventListener("input",this.getFile.bind(this))}createPrompts(){this.createPrompt([createSpan({cls:"prompt-instruction-command",text:"Type #"}),createSpan({text:"to link heading"})]),this.createPrompt([createSpan({cls:"prompt-instruction-command",text:"Type ^"}),createSpan({text:"to link blocks"})]),this.createPrompt([createSpan({cls:"prompt-instruction-command",text:"Note: "}),createSpan({text:"Blocks must have been created already"})])}getFile(){let e=this.inputEl.value,n=this.app.metadataCache.getFirstLinkpathDest(e.split(/[\^#]/).shift()||"","");n!=this.file&&(this.file=n,this.file&&(this.cache=this.app.metadataCache.getFileCache(this.file)),this.onInputChanged())}getItemText(e){if(e instanceof ia.TFile)return e.path;if(Object.prototype.hasOwnProperty.call(e,"heading"))return e.heading;if(Object.prototype.hasOwnProperty.call(e,"id"))return e.id}onChooseItem(e){e instanceof ia.TFile?(this.text.setValue(e.basename),this.file=e,this.cache=this.app.metadataCache.getFileCache(this.file)):Object.prototype.hasOwnProperty.call(e,"heading")?this.text.setValue(this.file.basename+"#"+e.heading):Object.prototype.hasOwnProperty.call(e,"id")&&this.text.setValue(this.file.basename+"^"+e.id)}selectSuggestion({item:e}){let n;e instanceof ia.TFile?(this.file=e,n=e.basename):Object.prototype.hasOwnProperty.call(e,"heading")?n=this.file.basename+"#"+e.heading:Object.prototype.hasOwnProperty.call(e,"id")&&(n=this.file.basename+"^"+e.id),this.text.setValue(n),this.close(),this.onClose()}renderSuggestion(e,n){let{item:r,match:a}=e||{},i=n.createDiv({cls:"suggestion-content"});if(!r){i.setText(this.emptyStateText),i.parentElement.addClass("is-selected");return}if(r instanceof ia.TFile){let o=r.path.length-r.name.length,l=a.matches.map(s=>createSpan("suggestion-highlight"));for(let s=o;s<r.path.length-r.extension.length-1;s++){let d=a.matches.find(u=>u[0]===s);if(d){let u=l[a.matches.indexOf(d)];i.appendChild(u),u.appendText(r.path.substring(d[0],d[1])),s+=d[1]-d[0]-1;continue}i.appendText(r.path[s])}n.createDiv({cls:"suggestion-note",text:r.path})}else Object.prototype.hasOwnProperty.call(r,"heading")?(i.setText(r.heading),i.prepend(createSpan({cls:"suggestion-flair",text:`H${r.level}`}))):Object.prototype.hasOwnProperty.call(r,"id")&&i.setText(r.id)}get headings(){return this.file?(this.cache||(this.cache=this.app.metadataCache.getFileCache(this.file)),this.cache.headings||[]):[]}get blocks(){return this.file?(this.cache||(this.cache=this.app.metadataCache.getFileCache(this.file)),Object.values(this.cache.blocks||{})||[]):[]}getItems(){let e=this.inputEl.value;return/#/.test(e)?(this.modifyInput=n=>n.split(/#/).pop(),this.headings):/\^/.test(e)?(this.modifyInput=n=>n.split(/\^/).pop(),this.blocks):this.files}};var Fr=class extends gt.Modal{constructor(e,n,r,a){super(e);this.calendar=n;this.saved=!1;this.event={name:null,description:null,date:{month:null,day:null,year:null},id:tt(6),note:null,category:null};r&&(this.event={...r},this.editing=!0),a&&(this.event.date={...a}),this.containerEl.addClass("fantasy-calendar-create-event")}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Event":"New Event"}),this.infoEl=this.contentEl.createDiv("event-info"),this.buildInfo(),this.dateEl=this.contentEl.createDiv("event-date"),this.buildDate(),new gt.Setting(this.contentEl).addButton(e=>{e.setButtonText("Save").setCta().onClick(()=>{if(!this.event.name?.length){new gt.Notice("The event must have a name.");return}if(this.event.end){this.event.end={year:this.event.end.year??this.event.date.year,month:this.event.end.month??this.event.date.month,day:this.event.end.day??this.event.date.day};let n=this.event.date,r=this.event.end,a=Math.max(...this.calendar.static.months.map(s=>s.length)),i=a*this.calendar.static.months.length,o=(n.year-1)*i+(n.month??-1)*a+n.day,l=(r.year-1)*i+(r.month??-1)*a+r.day;if(o>l){let s={...this.event.end};this.event.end={...this.event.date},this.event.date={...s}}}this.saved=!0,this.close()})}).addExtraButton(e=>{e.setIcon("cross").setTooltip("Cancel").onClick(()=>this.close())})}buildDate(){this.dateEl.empty(),this.buildStartDate(),this.endEl=this.dateEl.createDiv(),this.event.end?this.buildEndDate():new gt.Setting(this.endEl).setName("Add End Date").addToggle(e=>{e.setValue(!1).onChange(n=>this.buildEndDate())}),this.stringEl=this.dateEl.createDiv("event-date-string setting-item-description"),this.buildDateString()}buildStartDate(){this.startEl=this.dateEl.createDiv("fantasy-calendar-event-date"),this.startEl.createSpan({text:"Start:"}),this.startDateEl=this.startEl.createDiv("fantasy-calendar-date-fields"),this.buildDateFields(this.startDateEl,this.event.date)}buildEndDate(){this.event.end=this.event.end??{...this.event.date},this.endEl.empty(),this.endEl.addClass("fantasy-calendar-event-date"),this.endEl.createSpan({text:"End:"}),this.endDateEl=this.endEl.createDiv("fantasy-calendar-date-fields"),this.buildDateFields(this.endDateEl,this.event.end)}buildDateString(){this.stringEl.empty(),this.stringEl.createSpan({text:dn(this.event.date,this.calendar.static.months,this.event.end)})}buildDateFields(e,n=this.event.date){e.empty();let r=e.createDiv("fantasy-calendar-date-field");r.createEl("label",{text:"Day"}),new gt.TextComponent(r).setPlaceholder("Day").setValue(`${n.day}`).onChange(s=>{n.day=Number(s),this.buildDateString()}).inputEl.setAttr("type","number");let i=e.createDiv("fantasy-calendar-date-field");i.createEl("label",{text:"Month"}),new gt.DropdownComponent(i).addOptions(Object.fromEntries([["select","Select Month"],...this.calendar.static.months.map(s=>[s.name,s.name])])).setValue(n.month!=null?this.calendar.static.months[n.month].name:"select").onChange(s=>{s==="select"&&(n.month=null);let d=this.calendar.static.months.find(u=>u.name==s);n.month=this.calendar.static.months.indexOf(d),this.buildDateString()});let o=e.createDiv("fantasy-calendar-date-field");o.createEl("label",{text:"Year"}),new gt.TextComponent(o).setPlaceholder("Year").setValue(`${n.year}`).onChange(s=>{!s||s==null?n.year=void 0:n.year=Number(s),this.buildDateString()}).inputEl.setAttr("type","number")}buildInfo(){this.infoEl.empty(),new gt.Setting(this.infoEl).setName("Note").setDesc("Link the event to a note.").addText(n=>{let r=this.app.vault.getFiles();if(n.setPlaceholder("Path"),this.event.note){let i=this.app.vault.getAbstractFileByPath(this.event.note);i&&i instanceof gt.TFile&&n.setValue(i.basename)}let a=new li(this.app,n,[...r]);a.onClose=async()=>{n.inputEl.blur(),this.event.note=a.file.path,this.tryParse(a.file)}}),new gt.Setting(this.infoEl).setName("Event Name").addText(n=>n.setPlaceholder("Event Name").setValue(this.event.name).onChange(r=>{this.event.name=r}));let e=this.infoEl.createDiv("event-description");e.createEl("label",{text:"Event Description"}),new gt.TextAreaComponent(e).setPlaceholder("Event Description").setValue(this.event.description).onChange(n=>{this.event.description=n}),new gt.Setting(this.infoEl).setName("Event Category").addDropdown(n=>{let r=Object.fromEntries(this.calendar.categories.map(a=>[a.id,a.name]));n.addOptions(r).setValue(this.event.category).onChange(a=>this.event.category=a)})}async tryParse(e){this.event.name=e.basename;let n=this.app.metadataCache.getFileCache(e),{frontmatter:r}=n;if(r){if("fc-date"in r){let{day:a,month:i,year:o}=r["fc-date"];if(a&&(this.event.date.day=a),i){if(typeof i=="string"){let l=this.calendar.static.months?.find(s=>s.name==i)??this.calendar.static.months?.[0];this.event.date.month=this.calendar.static.months?.indexOf(l)}typeof i=="number"&&(this.event.date.month=i-1)}o&&(this.event.date.year=o)}"fc-category"in r&&(this.calendar.categories.find(a=>a.name===r["fc-category"])||this.calendar.categories.push({name:r["fantasy-category"],color:"#808080",id:tt(6)}),this.event.category=this.calendar.categories.find(a=>a.name===r["fc-category"])?.id)}await this.display()}async onOpen(){await this.display()}};function ud(t,e,n){let r=t.slice();return r[10]=e[n],r}function G0(t){let e,n,r=t[0],a=[];for(let o=0;o<r.length;o+=1)a[o]=cd(ud(t,r,o));let i=o=>G(a[o],1,1,()=>{a[o]=null});return{c(){e=F("div");for(let o=0;o<a.length;o+=1)a[o].c();w(e,"class","existing-items")},m(o,l){H(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&31){r=o[0];let s;for(s=0;s<r.length;s+=1){let d=ud(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=cd(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(ke(),s=r.length;s<a.length;s+=1)i(s);xe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)G(a[l]);n=!1},d(o){o&&V(e),Ke(a,o)}}}function U0(t){let e,n;return e=new Vt({props:{message:"Create a new event to see it here."}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p:J,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function cd(t){let e,n;function r(){return t[8](t[10])}function a(){return t[9](t[10])}return e=new Vc({props:{event:t[10],category:t[3](t[10].category),date:dn(t[10].date,t[1],t[10].end)}}),e.$on("edit",r),e.$on("delete",a),{c(){oe(e.$$.fragment)},m(i,o){ae(e,i,o),n=!0},p(i,o){t=i;let l={};o&1&&(l.event=t[10]),o&1&&(l.category=t[3](t[10].category)),o&3&&(l.date=dn(t[10].date,t[1],t[10].end)),e.$set(l)},i(i){n||(j(e.$$.fragment,i),n=!0)},o(i){G(e.$$.fragment,i),n=!1},d(i){ne(e,i)}}}function z0(t){let e,n,r,a,i,o;e=new jt({}),e.$on("click",t[7]);let l=[U0,G0],s=[];function d(u,c){return u[0].length?1:0}return r=d(t,-1),a=s[r]=l[r](t),{c(){oe(e.$$.fragment),n=W(),a.c(),i=ct()},m(u,c){ae(e,u,c),H(u,n,c),s[r].m(u,c),H(u,i,c),o=!0},p(u,c){let h=r;r=d(u,c),r===h?s[r].p(u,c):(ke(),G(s[h],1,1,()=>{s[h]=null}),xe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){G(e.$$.fragment,u),G(a),o=!1},d(u){ne(e,u),u&&V(n),s[r].d(u),u&&V(i)}}}function Y0(t){let e,n;return e=new yt({props:{name:"Events",$$slots:{default:[z0]},$$scope:{ctx:t}}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,[a]){let i={};a&8195&&(i.$$scope={dirty:a,ctx:r}),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function Z0(t,e,n){let r,a,{calendar:i}=e,{plugin:o}=e,l=v=>{n(0,r=r.filter(m=>m.id!==v.id))},s=v=>i.categories.find(({id:m})=>m==v),d=v=>{let m=new Fr(o.app,i,v);m.onClose=()=>{if(!!m.saved){if(m.editing){let _=i.events.findIndex(g=>g.id===m.event.id);i.events.splice(_,1,{...m.event})}else i.events.push({...m.event});n(0,r=i.events)}},m.open()},u=()=>d(),c=v=>d(v),h=v=>l(v);return t.$$set=v=>{"calendar"in v&&n(5,i=v.calendar),"plugin"in v&&n(6,o=v.plugin)},t.$$.update=()=>{if(t.$$.dirty&32){e:n(0,r=i.events)}if(t.$$.dirty&32){e:n(1,a=i.static.months)}if(t.$$.dirty&1){e:r.sort((v,m)=>v.date.year!=m.date.year?v.date.year-m.date.year:v.date.month!=m.date.month?v.date.month-m.date.month:v.date.day-m.date.day)}},[r,a,l,s,d,i,o,u,c,h]}var dd=class extends de{constructor(e){super();fe(this,e,Z0,Y0,le,{calendar:5,plugin:6})}},fd=dd;var ui=Oe(require("obsidian"));var pd=Oe(hd());function K0(t){ve(t,"svelte-1ok7o99",".category.svelte-1ok7o99{display:grid;grid-template-columns:1fr auto auto;align-items:center;gap:0.5rem;padding-top:0.75rem}")}function md(t,e,n){let r=t.slice();return r[8]=e[n],r}function Q0(t){let e,n=t[1],r=[];for(let a=0;a<n.length;a+=1)r[a]=gd(md(t,n,a));return{c(){e=F("div");for(let a=0;a<r.length;a+=1)r[a].c();w(e,"class","existing-items")},m(a,i){H(a,e,i);for(let o=0;o<r.length;o+=1)r[o].m(e,null)},p(a,i){if(i&18){n=a[1];let o;for(o=0;o<n.length;o+=1){let l=md(a,n,o);r[o]?r[o].p(l,i):(r[o]=gd(l),r[o].c(),r[o].m(e,null))}for(;o<r.length;o+=1)r[o].d(1);r.length=n.length}},i:J,o:J,d(a){a&&V(e),Ke(r,a)}}}function X0(t){let e,n;return e=new Vt({props:{message:"Create a new event category to see it here."}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p:J,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function gd(t){let e,n,r,a,i,o,l,s,d,u,c,h,v;function m(..._){return t[6](t[8],..._)}return{c(){e=F("div"),n=F("div"),a=W(),i=F("div"),o=F("input"),s=W(),d=F("div"),c=W(),w(o,"type","color"),o.value=l=t[8].color,w(i,"class","color"),w(e,"class","category svelte-1ok7o99")},m(_,g){H(_,e,g),D(e,n),D(e,a),D(e,i),D(i,o),D(e,s),D(e,d),D(e,c),h||(v=[me(r=t[2].call(null,n,t[8])),re(o,"change",m),me(u=t[3].call(null,d,t[8]))],h=!0)},p(_,g){t=_,r&&at(r.update)&&g&2&&r.update.call(null,t[8]),g&2&&l!==(l=t[8].color)&&(o.value=l),u&&at(u.update)&&g&2&&u.update.call(null,t[8])},d(_){_&&V(e),h=!1,Ee(v)}}}function $0(t){let e,n,r,a,i,o;e=new jt({}),e.$on("click",t[5]);let l=[X0,Q0],s=[];function d(u,c){return u[1].length?1:0}return r=d(t,-1),a=s[r]=l[r](t),{c(){oe(e.$$.fragment),n=W(),a.c(),i=ct()},m(u,c){ae(e,u,c),H(u,n,c),s[r].m(u,c),H(u,i,c),o=!0},p(u,c){let h=r;r=d(u,c),r===h?s[r].p(u,c):(ke(),G(s[h],1,1,()=>{s[h]=null}),xe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){G(e.$$.fragment,u),G(a),o=!1},d(u){ne(e,u),u&&V(n),s[r].d(u),u&&V(i)}}}function J0(t){let e,n;return e=new yt({props:{name:"Categories",$$slots:{default:[$0]},$$scope:{ctx:t}}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,[a]){let i={};a&2051&&(i.$$scope={dirty:a,ctx:r}),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function ev(t,e,n){let r,a=Te(),{calendar:i}=e,o=(c,h)=>{new ui.TextComponent(c).setValue(h.name).setPlaceholder("Name").onChange(m=>{h.name=m,a("update",h)}).inputEl.setAttr("style","width: 100%;")},l=(c,h)=>{new ui.ExtraButtonComponent(c).setIcon("trash").onClick(()=>{n(1,r=r.filter(v=>v.id!==h.id)),a("delete",h)})},s=(c,h)=>{let{target:v}=c;v instanceof HTMLInputElement&&(h.color=v.value,a("update",h))},d=()=>n(0,i.categories=[...r,{id:tt(6),color:(0,pd.default)(),name:"Category"}],i),u=(c,h)=>s(h,c);return t.$$set=c=>{"calendar"in c&&n(0,i=c.calendar)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(1,r=i.categories)}},[i,r,o,l,s,d,u]}var yd=class extends de{constructor(e){super();fe(this,e,ev,J0,le,{calendar:0},K0)}},vd=yd;var Xo=Oe(require("obsidian"));var Ko="#808080",Ne=["M6.5,16a9.5,9.5 0 1,0 19,0a9.5,9.5 0 1,0 -19,0","M19.79,6C22.25,7.2,25,9.92,25,16s-2.75,8.8-5.21,10a10.59,10.59,0,0,1-3.79.71A10.72,10.72,0,0,1,16,5.28,10.59,10.59,0,0,1,19.79,6Z","M19.43,5.86C21.79,7,24.5,9.7,24.5,16s-2.71,9-5.07,10.14a10.55,10.55,0,0,1-3.43.58A10.72,10.72,0,0,1,16,5.28,10.55,10.55,0,0,1,19.43,5.86Z","M17.87,5.46C20.23,6.34,24,8.88,24,16.17c0,6.85-3.33,9.36-5.69,10.29a11,11,0,0,1-2.31.26A10.72,10.72,0,0,1,16,5.28,10.49,10.49,0,0,1,17.87,5.46Z","M17.79,5.45C20,6.3,23.5,8.77,23.5,15.88c0,7.37-3.75,9.87-5.95,10.71a9.92,9.92,0,0,1-1.55.13A10.72,10.72,0,0,1,16,5.28,10.54,10.54,0,0,1,17.79,5.45Z","M17.35,5.38c1.9.79,5.15,3.25,5.15,10.72,0,7.25-3.06,9.68-5,10.5a10.87,10.87,0,0,1-1.52.12A10.72,10.72,0,0,1,16,5.28,10.1,10.1,0,0,1,17.35,5.38Z","M17.05,5.34c1.6.75,4.45,3.17,4.45,10.79,0,7.39-2.68,9.76-4.3,10.52a11.9,11.9,0,0,1-1.2.07A10.72,10.72,0,0,1,16,5.28,9,9,0,0,1,17.05,5.34Z","M16.85,5.33c1.3.74,3.65,3.12,3.65,10.67s-2.35,9.93-3.65,10.67c-.28,0-.56,0-.85,0A10.72,10.72,0,0,1,16,5.28,7.92,7.92,0,0,1,16.85,5.33Z","M16.46,5.31c.95.78,3,3.34,3,10.69s-2.09,9.91-3,10.69l-.46,0A10.72,10.72,0,0,1,16,5.28Z","M16.29,5.3c.65.8,2.21,3.48,2.21,10.78S17,25.91,16.3,26.7l-.3,0A10.72,10.72,0,0,1,16,5.28Z","M16.13,5.29c.37.89,1.37,3.92,1.37,10.79s-1,9.76-1.36,10.63H16A10.72,10.72,0,0,1,16,5.28Z","M16,5.29A85.5,85.5,0,0,1,16.5,16,85.5,85.5,0,0,1,16,26.71h0A10.72,10.72,0,0,1,16,5.28Z","M16,26.72A10.72,10.72,0,0,1,16,5.28Z","M15.5,16A85.59,85.59,0,0,0,16,26.72,10.72,10.72,0,0,1,16,5.28,85.59,85.59,0,0,0,15.5,16Z","M14.5,16.08c0,6.84,1,9.77,1.36,10.63a10.71,10.71,0,0,1,0-21.42C15.5,6.17,14.5,9.2,14.5,16.08Z","M15.7,26.7a10.7,10.7,0,0,1,0-21.4c-.65.8-2.21,3.47-2.21,10.78S15,25.92,15.7,26.7Z","M15.55,26.7a10.71,10.71,0,0,1,0-21.4c-1,.78-3.05,3.34-3.05,10.7S14.6,25.92,15.55,26.7Z","M15.16,26.68a10.71,10.71,0,0,1,0-21.36C13.85,6.06,11.5,8.43,11.5,16S13.85,25.94,15.16,26.68Z","M14.81,26.65A10.72,10.72,0,0,1,15,5.33c-1.59.76-4.45,3.17-4.45,10.8C10.5,23.53,13.19,25.9,14.81,26.65Z","M14.49,26.6a10.71,10.71,0,0,1,.17-21.23c-1.9.8-5.16,3.24-5.16,10.73C9.5,23.37,12.57,25.79,14.49,26.6Z","M14.46,26.6a10.71,10.71,0,0,1-.24-21.16C12,6.29,8.5,8.76,8.5,15.88,8.5,23.26,12.27,25.76,14.46,26.6Z","M13.72,26.47a10.71,10.71,0,0,1,.43-21C11.78,6.33,8,8.87,8,16.17,8,23,11.35,25.55,13.72,26.47Z","M12.6,26.19a10.73,10.73,0,0,1,0-20.35C10.23,7,7.5,9.67,7.5,16s2.73,9,5.1,10.16Z","M12.23,26a10.7,10.7,0,0,1,0-20C9.77,7.19,7,9.9,7,16S9.77,24.81,12.23,26Z",null,"M19.77,26C22.23,24.81,25,22.1,25,16S22.23,7.19,19.77,6a10.7,10.7,0,0,1,0,20Z","M19.4,26.16C21.77,25,24.5,22.33,24.5,16S21.77,7,19.4,5.84a10.71,10.71,0,0,1,0,20.32Z","M18.28,26.47C20.65,25.55,24,23,24,16.17c0-7.3-3.78-9.84-6.15-10.72a10.71,10.71,0,0,1,.43,21Z","M17.54,26.6c2.19-.84,6-3.34,6-10.72,0-7.12-3.5-9.59-5.72-10.44a10.71,10.71,0,0,1-.24,21.16Z","M17.51,26.6c1.92-.81,5-3.23,5-10.5,0-7.49-3.26-9.93-5.16-10.73a10.71,10.71,0,0,1,.17,21.23Z","M17.19,26.65c1.62-.75,4.31-3.12,4.31-10.52,0-7.63-2.86-10-4.45-10.8a10.72,10.72,0,0,1,.14,21.32Z","M16.84,26.68c1.31-.74,3.66-3.11,3.66-10.68S18.15,6.06,16.84,5.32a10.71,10.71,0,0,1,0,21.36Z","M16.45,26.7c.95-.78,3.05-3.34,3.05-10.7S17.4,6.08,16.45,5.3a10.71,10.71,0,0,1,0,21.4Z","M16.3,26.7c.67-.78,2.2-3.37,2.2-10.62S16.94,6.1,16.29,5.3a10.7,10.7,0,0,1,0,21.4Z","M16.14,26.71c.37-.86,1.36-3.79,1.36-10.63s-1-9.91-1.37-10.79a10.71,10.71,0,0,1,0,21.42Z","M16,26.72A85.59,85.59,0,0,0,16.5,16,85.59,85.59,0,0,0,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72V5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72h0A85.59,85.59,0,0,1,15.5,16,85.59,85.59,0,0,1,16,5.28h0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72h-.14c-.37-.86-1.36-3.79-1.36-10.63s1-9.91,1.37-10.79H16a10.72,10.72,0,0,1,0,21.44Z","M16,26.72l-.3,0c-.67-.78-2.2-3.37-2.2-10.62s1.56-10,2.21-10.78l.29,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72l-.45,0c-1-.78-3.05-3.34-3.05-10.7s2.1-9.92,3.05-10.7l.45,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72c-.28,0-.56,0-.84,0C13.85,25.94,11.5,23.57,11.5,16s2.35-9.94,3.66-10.68c.28,0,.56,0,.84,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a11.7,11.7,0,0,1-1.19-.07c-1.62-.75-4.31-3.12-4.31-10.52,0-7.63,2.86-10,4.45-10.8.35,0,.7,0,1.05,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a10.85,10.85,0,0,1-1.51-.12c-1.92-.81-5-3.23-5-10.5,0-7.49,3.26-9.93,5.16-10.73A11.9,11.9,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a11.16,11.16,0,0,1-1.54-.12c-2.19-.84-6-3.34-6-10.72,0-7.12,3.5-9.59,5.72-10.44A10.43,10.43,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a10.69,10.69,0,0,1-2.28-.25C11.35,25.55,8,23,8,16.17c0-7.3,3.78-9.84,6.15-10.72A11.26,11.26,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a10.63,10.63,0,0,1-3.4-.56C10.23,25,7.5,22.33,7.5,16s2.73-9,5.1-10.16A10.72,10.72,0,1,1,16,26.72Z","M16,26.72a10.52,10.52,0,0,1-3.77-.7C9.77,24.81,7,22.1,7,16S9.77,7.19,12.23,6A10.52,10.52,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z"],bd={"New Moon":Ne[0],"New Moon Fading":Ne[1],"New Moon Faded":Ne[2],"Waxing Crescent Rising":Ne[3],"Waxing Crescent Risen":Ne[4],"Waxing Crescent":Ne[6],"Waxing Crescent Fading":Ne[7],"Waxing Crescent Faded":Ne[8],"First Quarter Rising":Ne[9],"First Quarter Risen":Ne[10],"First Quarter":Ne[12],"First Quarter Fading":Ne[13],"First Quarter Faded":Ne[14],"Waxing Gibbous Rising":Ne[15],"Waxing Gibbous Risen":Ne[16],"Waxing Gibbous":Ne[18],"Waxing Gibbous Fading":Ne[19],"Waxing Gibbous Faded":Ne[20],"Full Moon Rising":Ne[21],"Full Moon Risen":Ne[22],"Full Moon":Ne[24],"Full Moon Fading":Ne[25],"Full Moon Faded":Ne[26],"Waning Gibbous Rising":Ne[27],"Waning Gibbous Risen":Ne[28],"Waning Gibbous":Ne[30],"Waning Gibbous Fading":Ne[31],"Waning Gibbous Faded":Ne[32],"Last Quarter Rising":Ne[33],"Last Quarter Risen":Ne[34],"Last Quarter":Ne[36],"Last Quarter Fading":Ne[37],"Last Quarter Faded":Ne[38],"Waning Crescent Rising":Ne[39],"Waning Crescent Risen":Ne[40],"Waning Crescent":Ne[42],"Waning Crescent Fading":Ne[43],"Waning Crescent Faded":Ne[44],"New Moon Rising":Ne[45],"New Moon Risen":Ne[46]},wd={4:["New Moon","First Quarter","Full Moon","Last Quarter"],8:["New Moon","Waxing Crescent","First Quarter","Waxing Gibbous","Full Moon","Waning Gibbous","Last Quarter","Waning Crescent"],16:["New Moon","New Moon Fading","Waxing Crescent","Waxing Crescent Fading","First Quarter","First Quarter Fading","Waxing Gibbous","Waxing Gibbous Fading","Full Moon","Full Moon Fading","Waning Gibbous","Waning Gibbous Fading","Last Quarter","Last Quarter Fading","Waning Crescent","Waning Crescent Fading"],24:["New Moon","New Moon Fading","Waxing Crescent Rising","Waxing Crescent","Waxing Crescent Fading","First Quarter Rising","First Quarter","First Quarter Fading","Waxing Gibbous Rising","Waxing Gibbous","Waxing Gibbous Fading","Full Moon Rising","Full Moon","Full Moon Fading","Waning Gibbous Rising","Waning Gibbous","Waning Gibbous Fading","Last Quarter Rising","Last Quarter","Last Quarter Fading","Waning Crescent Rising","Waning Crescent","Waning Crescent Fading","New Moon Rising"],40:["New Moon","New Moon Fading","New Moon Faded","Waxing Crescent Rising","Waxing Crescent Risen","Waxing Crescent","Waxing Crescent Fading","Waxing Crescent Faded","First Quarter Rising","First Quarter Risen","First Quarter","First Quarter Fading","First Quarter Faded","Waxing Gibbous Rising","Waxing Gibbous Risen","Waxing Gibbous","Waxing Gibbous Fading","Waxing Gibbous Faded","Full Moon Rising","Full Moon Risen","Full Moon","Full Moon Fading","Full Moon Faded","Waning Gibbous Rising","Waning Gibbous Risen","Waning Gibbous","Waning Gibbous Fading","Waning Gibbous Faded","Last Quarter Rising","Last Quarter Risen","Last Quarter","Last Quarter Fading","Last Quarter Faded","Waning Crescent Rising","Waning Crescent Risen","Waning Crescent","Waning Crescent Fading","Waning Crescent Faded","New Moon Rising","New Moon Risen"]};function tv(t){let e,n,r,a,i,o,l,s;return{c(){e=en("svg"),n=en("circle"),a=en("path"),o=en("circle"),w(n,"cx","16"),w(n,"cy","16"),w(n,"r","10"),w(n,"fill",r=t[0].faceColor),w(a,"class","shadow"),w(a,"fill",i=t[0].shadowColor),w(a,"d",t[4]),w(o,"cx","16"),w(o,"cy","16"),w(o,"r","10"),w(o,"fill","none"),w(o,"stroke","#000"),w(o,"stroke-width","2px"),w(e,"class","moon"),w(e,"id",l=t[0].id),w(e,"preserveAspectRatio","xMidYMid"),w(e,"aria-label",s=t[1]?`${t[0].name}
${t[3]}`:null),w(e,"width",t[2]),w(e,"height",t[2]),w(e,"viewBox","0 0 32 32")},m(d,u){H(d,e,u),D(e,n),D(e,a),D(e,o)},p(d,[u]){u&1&&r!==(r=d[0].faceColor)&&w(n,"fill",r),u&1&&i!==(i=d[0].shadowColor)&&w(a,"fill",i),u&16&&w(a,"d",d[4]),u&1&&l!==(l=d[0].id)&&w(e,"id",l),u&11&&s!==(s=d[1]?`${d[0].name}
${d[3]}`:null)&&w(e,"aria-label",s),u&4&&w(e,"width",d[2]),u&4&&w(e,"height",d[2])},i:J,o:J,d(d){d&&V(e)}}}function nv(t,e,n){let r,{moon:a}=e,{label:i=!0}=e,{size:o=28}=e,{phase:l}=e;return t.$$set=s=>{"moon"in s&&n(0,a=s.moon),"label"in s&&n(1,i=s.label),"size"in s&&n(2,o=s.size),"phase"in s&&n(3,l=s.phase)},t.$$.update=()=>{if(t.$$.dirty&8){e:n(4,r=bd[l])}},[a,i,o,l,r]}var Dd=class extends de{constructor(e){super();fe(this,e,nv,tv,le,{moon:0,label:1,size:2,phase:3})}},Tn=Dd;var $t=Oe(require("obsidian"));var Qo=class extends $t.Modal{constructor(e,n,r){super(e);this.calendar=n;this.saved=!1;this.moon={name:null,cycle:null,offset:null,faceColor:"#fff",shadowColor:"#000",id:tt(6)};r&&(this.moon={...r},this.editing=!0),this.containerEl.addClass("fantasy-calendar-create-moon")}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Moon":"New Moon"}),this.infoEl=this.contentEl.createDiv("moon-info"),this.buildInfo(),new $t.Setting(this.contentEl).addButton(e=>{e.setButtonText("Save").setCta().onClick(()=>{if(!this.moon.name?.length){new $t.Notice("The moon must have a name.");return}if(!this.moon.cycle){new $t.Notice("The moon must have a positive cycle.");return}this.saved=!0,this.close()})}).addExtraButton(e=>{e.setIcon("cross").setTooltip("Cancel").onClick(()=>this.close())})}buildInfo(){this.infoEl.empty(),new $t.Setting(this.infoEl).setName("Name").addText(e=>{e.setValue(this.moon.name).onChange(n=>{this.moon.name=n})}),new $t.Setting(this.infoEl).setName("Cycle").setDesc("How many days it takes for the moon to complete a full cycle.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.moon.cycle}`).onChange(n=>{isNaN(Number(n))||(this.moon.cycle=Number(n))})}),new $t.Setting(this.infoEl).setName("Offset").setDesc("Shift the starting moon phase by a number of days.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.moon.offset}`).onChange(n=>{isNaN(Number(n))||(this.moon.offset=Number(n))})}),new $t.Setting(this.infoEl).setName("Face Color").addText(e=>{e.inputEl.setAttr("type","color"),e.setValue(this.moon.faceColor).onChange(n=>{this.moon.faceColor=n})}),new $t.Setting(this.infoEl).setName("Shadow Color").addText(e=>{e.inputEl.setAttr("type","color"),e.setValue(this.moon.shadowColor).onChange(n=>{this.moon.shadowColor=n})})}async onOpen(){await this.display()}};function rv(t){ve(t,"svelte-v24qmo",".moon.svelte-v24qmo{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.setting-item-name.svelte-v24qmo{display:flex;align-items:center}.icons.svelte-v24qmo{display:flex;align-self:flex-start;justify-self:flex-end;align-items:center}.icon.svelte-v24qmo{align-items:center}")}function _d(t,e,n){let r=t.slice();return r[13]=e[n],r}function av(t){let e,n,r=t[1],a=[];for(let o=0;o<r.length;o+=1)a[o]=Ed(_d(t,r,o));let i=o=>G(a[o],1,1,()=>{a[o]=null});return{c(){e=F("div");for(let o=0;o<a.length;o+=1)a[o].c();w(e,"class","existing-items")},m(o,l){H(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&98){r=o[1];let s;for(s=0;s<r.length;s+=1){let d=_d(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=Ed(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(ke(),s=r.length;s<a.length;s+=1)i(s);xe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)G(a[l]);n=!1},d(o){o&&V(e),Ke(a,o)}}}function iv(t){let e,n;return e=new Vt({props:{message:"Create a new moon to see it here."}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p:J,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function Ed(t){let e,n,r,a,i,o=t[13].name+"",l,s,d,u,c,h=t[13].cycle+"",v,m,_,g,S,C,T,M,k,E,b,N,x;a=new Tn({props:{moon:t[13],phase:"First Quarter",label:!1,size:20}});function L(){return t[10](t[13])}function O(){return t[11](t[13])}return{c(){e=F("div"),n=F("div"),r=F("span"),oe(a.$$.fragment),i=W(),l=be(o),s=W(),d=F("div"),u=F("div"),c=be("Cycle: "),v=be(h),m=be(" days"),_=W(),g=F("div"),S=F("div"),T=W(),M=F("div"),E=W(),w(r,"class","setting-item-name svelte-v24qmo"),w(u,"class","date"),w(d,"class","setting-item-description"),w(n,"class","moon-info"),w(S,"class","icon svelte-v24qmo"),w(M,"class","icon svelte-v24qmo"),w(g,"class","icons svelte-v24qmo"),w(e,"class","moon svelte-v24qmo")},m(U,te){H(U,e,te),D(e,n),D(n,r),ae(a,r,null),D(r,i),D(r,l),D(n,s),D(n,d),D(d,u),D(u,c),D(u,v),D(u,m),D(e,_),D(e,g),D(g,S),D(g,T),D(g,M),D(e,E),b=!0,N||(x=[me(C=t[4].call(null,S)),re(S,"click",L),me(k=t[3].call(null,M)),re(M,"click",O)],N=!0)},p(U,te){t=U;let he={};te&2&&(he.moon=t[13]),a.$set(he),(!b||te&2)&&o!==(o=t[13].name+"")&&De(l,o),(!b||te&2)&&h!==(h=t[13].cycle+"")&&De(v,h)},i(U){b||(j(a.$$.fragment,U),b=!0)},o(U){G(a.$$.fragment,U),b=!1},d(U){U&&V(e),ne(a),N=!1,Ee(x)}}}function ov(t){let e,n,r,a,i,o,l,s;e=new pn({props:{name:"Display Moons",desc:"Display moons by default when viewing this calendar.",value:t[2]}}),e.$on("click",t[8]),r=new jt({}),r.$on("click",t[9]);let d=[iv,av],u=[];function c(h,v){return h[1].length?1:0}return i=c(t,-1),o=u[i]=d[i](t),{c(){oe(e.$$.fragment),n=W(),oe(r.$$.fragment),a=W(),o.c(),l=ct()},m(h,v){ae(e,h,v),H(h,n,v),ae(r,h,v),H(h,a,v),u[i].m(h,v),H(h,l,v),s=!0},p(h,v){let m={};v&4&&(m.value=h[2]),e.$set(m);let _=i;i=c(h,v),i===_?u[i].p(h,v):(ke(),G(u[_],1,1,()=>{u[_]=null}),xe(),o=u[i],o?o.p(h,v):(o=u[i]=d[i](h),o.c()),j(o,1),o.m(l.parentNode,l))},i(h){s||(j(e.$$.fragment,h),j(r.$$.fragment,h),j(o),s=!0)},o(h){G(e.$$.fragment,h),G(r.$$.fragment,h),G(o),s=!1},d(h){ne(e,h),h&&V(n),ne(r,h),h&&V(a),u[i].d(h),h&&V(l)}}}function sv(t){let e,n;return e=new yt({props:{name:"Moons",$$slots:{default:[ov]},$$scope:{ctx:t}}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,[a]){let i={};a&65543&&(i.$$scope={dirty:a,ctx:r}),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function lv(t,e,n){let r,a,{calendar:i}=e,{plugin:o}=e,l=Te(),s=g=>{let S=new Xo.ExtraButtonComponent(g).setIcon("trash").setTooltip("Delete")},d=g=>{new Xo.ExtraButtonComponent(g).setIcon("pencil").setTooltip("Edit")},u=g=>{n(0,i.static.moons=i.static.moons.filter(S=>S.id!==g.id),i)},c=g=>{let S=new Qo(o.app,i,g);S.onClose=()=>{if(!!S.saved){if(S.editing){let C=i.static.moons.findIndex(T=>T.id===S.moon.id);i.static.moons.splice(C,1,{...S.moon})}else i.static.moons.push({...S.moon});n(1,r=i.static.moons)}},S.open()},h=()=>n(0,i.static.displayMoons=!i.static.displayMoons,i),v=()=>c(),m=g=>c(g),_=g=>u(g);return t.$$set=g=>{"calendar"in g&&n(0,i=g.calendar),"plugin"in g&&n(7,o=g.plugin)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(1,r=i.static.moons)}if(t.$$.dirty&1){e:n(2,a=i.static.displayMoons)}},[i,r,a,s,d,u,c,o,h,v,m,_]}var Cd=class extends de{constructor(e){super();fe(this,e,lv,sv,le,{calendar:0,plugin:7},rv)}},Ad=Cd;var $o=Oe(require("obsidian"));function uv(t){ve(t,"svelte-1rh93fc",".leapday.svelte-1rh93fc.svelte-1rh93fc{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.leapday-info.svelte-1rh93fc.svelte-1rh93fc{width:100%}.icons.svelte-1rh93fc.svelte-1rh93fc{display:flex;align-self:center;justify-self:flex-end;align-items:center}.leapday.svelte-1rh93fc .icon.svelte-1rh93fc{align-items:center}")}function cv(t){let e,n,r,a=t[0].name+"",i,o,l,s,d,u,c,h,v,m,_,g,S;return{c(){e=F("div"),n=F("div"),r=F("span"),i=be(a),o=W(),l=F("div"),s=be(t[1]),d=W(),u=F("div"),c=F("div"),v=W(),m=F("div"),w(r,"class","setting-item-name"),w(l,"class","setting-item-description"),w(n,"class","leapday-info svelte-1rh93fc"),w(c,"class","icon svelte-1rh93fc"),w(m,"class","icon svelte-1rh93fc"),w(u,"class","icons svelte-1rh93fc"),w(e,"class","leapday svelte-1rh93fc")},m(C,T){H(C,e,T),D(e,n),D(n,r),D(r,i),D(n,o),D(n,l),D(l,s),D(e,d),D(e,u),D(u,c),D(u,v),D(u,m),g||(S=[me(h=t[4].call(null,c)),re(c,"click",t[5]),me(_=t[3].call(null,m)),re(m,"click",t[6])],g=!0)},p(C,[T]){T&1&&a!==(a=C[0].name+"")&&De(i,a),T&2&&De(s,C[1])},i:J,o:J,d(C){C&&V(e),g=!1,Ee(S)}}}function dv(t,e,n){let r,a=Te(),i=u=>{new $o.ExtraButtonComponent(u).setIcon("trash").setTooltip("Delete").extraSettingsEl.setAttr("style","margin-left: 0;")},o=u=>{new $o.ExtraButtonComponent(u).setIcon("pencil").setTooltip("Edit")},{leapday:l}=e,s=()=>a("edit"),d=()=>a("delete");return t.$$set=u=>{"leapday"in u&&n(0,l=u.leapday)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(1,r=xa(l))}},[l,r,a,i,o,s,d]}var kd=class extends de{constructor(e){super();fe(this,e,dv,cv,le,{leapday:0},uv)}},xd=kd;var nt=Oe(require("obsidian"));var Jo=class extends nt.Modal{constructor(e,n,r){super(e);this.calendar=n;this.saved=!1;this.leapday={id:tt(6),name:"Leap Day",interval:[],intercalary:!1,timespan:null,offset:0,type:"leapday"};r&&(this.leapday={...r},this.editing=!0),this.containerEl.addClass("fantasy-calendar-create-leapday")}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Leap Day":"New Leap Day"}),this.infoEl=this.contentEl.createDiv("leapday-info"),this.buildInfo(),new nt.Setting(this.contentEl).addButton(e=>{e.setButtonText("Save").setCta().onClick(()=>{if(!this.leapday.interval.length){new nt.Notice("The leap day must have an interval.");return}if(this.leapday.timespan==null){new nt.Notice("The leap day must be attached to a Month.");return}this.saved=!0,this.close()})}).addExtraButton(e=>{e.setIcon("cross").setTooltip("Cancel").onClick(()=>this.close())})}buildInfo(){this.infoEl.empty(),new nt.Setting(this.infoEl).setName("Name").addText(e=>{e.setValue(this.leapday.name).onChange(n=>{this.leapday.name=n})}),new nt.Setting(this.infoEl).setName("Intercalary").addToggle(e=>{e.setValue(this.leapday.intercalary).onChange(n=>{this.leapday.intercalary=n,this.display()})}),new nt.Setting(this.infoEl).setName("Month").setDesc("The leap day will be added to this month.").addDropdown(e=>{for(let n of this.calendar.static.months){let r=this.calendar.static.months.indexOf(n);e.addOption(`${r}`,n.name)}e.setValue(`${this.leapday.timespan}`).onChange(n=>this.leapday.timespan=Number(n))}),new nt.Setting(this.infoEl).setName("Offset").setDesc("Shift the years the leap day is applied to.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.leapday.offset}`).onChange(n=>{isNaN(Number(n))||(this.leapday.offset=Number(n))})}),this.conditionsEl=this.infoEl.createDiv(),this.buildConditions()}buildConditions(){this.conditionsEl.empty();let e=new nt.ButtonComponent(this.conditionsEl).setTooltip("Add New").setButtonText("+").onClick(async()=>{let n=new es(this.app,this.intervals.length>0);n.onClose=()=>{!n.saved||(this.leapday.interval.push(n.condition),this.buildConditions())},n.open()});e.buttonEl.style.width="100%",this.conditionsEl.createSpan({text:xa(this.leapday),cls:"fantasy-leap-day-interval-description setting-item"});for(let n of this.intervals)new nt.Setting(this.conditionsEl).setName(this.getIntervalName(n)).addExtraButton(r=>{r.setIcon("pencil").setTooltip("Edit").onClick(()=>{let a=new es(this.app,this.intervals.indexOf(n)!=0,n);a.onClose=()=>{!a.saved||(this.leapday.interval.splice(this.leapday.interval.indexOf(n),1,a.condition),this.buildConditions())},a.open()})}).addExtraButton(r=>{r.setIcon("trash").setTooltip("Delete").onClick(()=>{this.leapday.interval.splice(this.leapday.interval.indexOf(n),1),this.intervals.length&&this.intervals[0].exclusive&&(this.intervals[0].exclusive=!1),this.buildConditions()})})}get intervals(){return this.leapday.interval.sort((e,n)=>e.interval-n.interval)}getIntervalName(e){let n=[`${e.interval}`];return e.exclusive&&n.push("(Exclusive)"),e.ignore&&n.push(" - Ignoring Offset"),n.join(" ")}async onOpen(){await this.display()}},es=class extends nt.Modal{constructor(e,n,r){super(e);this.app=e;this.canBeExclusive=n;this.saved=!1;this.editing=!1;this.condition={interval:null,exclusive:!1,ignore:!1};r&&(this.condition={...r},this.editing=!0)}onOpen(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:"Leap Day Condition"}),new nt.Setting(this.contentEl).setName("Interval").setDesc("How often the condition applies.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.condition.interval}`).onChange(n=>{isNaN(Number(n))||(this.condition.interval=Number(n))})}),new nt.Setting(this.contentEl).setName("Exclusive").setDesc(`If true, the leap day will not apply when the year meets the condition.

Requires the leap day to have at least one non-exclusive condition.`).addToggle(e=>e.setDisabled(!this.canBeExclusive).setValue(this.condition.exclusive).onChange(n=>this.condition.exclusive=n)),new nt.Setting(this.contentEl).setName("Ignore Offset").setDesc("The condition will ignore the leap day's offset when checking to apply.").addToggle(e=>e.setValue(this.condition.ignore).onChange(n=>this.condition.ignore=n)),this.buttonsEl=this.contentEl.createDiv("fantasy-context-buttons"),new nt.ButtonComponent(this.buttonsEl).setCta().setButtonText(this.editing?"Save":"Create").onClick(()=>{if(!this.condition.interval){new nt.Notice("The condition requires an interval.");return}this.saved=!0,this.close()}),new nt.ExtraButtonComponent(this.buttonsEl).setTooltip("Cancel").setIcon("cross").onClick(()=>this.close())}};function Fd(t,e,n){let r=t.slice();return r[11]=e[n],r}function fv(t){let e,n,r=t[1],a=[];for(let o=0;o<r.length;o+=1)a[o]=Td(Fd(t,r,o));let i=o=>G(a[o],1,1,()=>{a[o]=null});return{c(){e=F("div");for(let o=0;o<a.length;o+=1)a[o].c();w(e,"class","existing-items")},m(o,l){H(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&14){r=o[1];let s;for(s=0;s<r.length;s+=1){let d=Fd(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=Td(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(ke(),s=r.length;s<a.length;s+=1)i(s);xe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)G(a[l]);n=!1},d(o){o&&V(e),Ke(a,o)}}}function hv(t){let e,n;return e=new Vt({props:{message:"Create a new leap day to see it here."}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p:J,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function Td(t){let e,n;function r(){return t[7](t[11])}function a(){return t[8](t[11])}return e=new xd({props:{leapday:t[11]}}),e.$on("edit",r),e.$on("delete",a),{c(){oe(e.$$.fragment)},m(i,o){ae(e,i,o),n=!0},p(i,o){t=i;let l={};o&2&&(l.leapday=t[11]),e.$set(l)},i(i){n||(j(e.$$.fragment,i),n=!0)},o(i){G(e.$$.fragment,i),n=!1},d(i){ne(e,i)}}}function pv(t){let e,n,r,a,i,o;e=new jt({props:{disabled:t[0],label:t[0]?"At least one named month is required":null}}),e.$on("click",t[6]);let l=[hv,fv],s=[];function d(u,c){return u[1].length?1:0}return r=d(t,-1),a=s[r]=l[r](t),{c(){oe(e.$$.fragment),n=W(),a.c(),i=ct()},m(u,c){ae(e,u,c),H(u,n,c),s[r].m(u,c),H(u,i,c),o=!0},p(u,c){let h={};c&1&&(h.disabled=u[0]),c&1&&(h.label=u[0]?"At least one named month is required":null),e.$set(h);let v=r;r=d(u,c),r===v?s[r].p(u,c):(ke(),G(s[v],1,1,()=>{s[v]=null}),xe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){G(e.$$.fragment,u),G(a),o=!1},d(u){ne(e,u),u&&V(n),s[r].d(u),u&&V(i)}}}function mv(t){let e,n;return e=new yt({props:{name:"Leap Days",$$slots:{default:[pv]},$$scope:{ctx:t}}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,[a]){let i={};a&16387&&(i.$$scope={dirty:a,ctx:r}),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function gv(t,e,n){let r,{calendar:a}=e,{plugin:i}=e;Xe("store").subscribe(m=>n(4,a=m));let l=a.static.months?.filter(m=>m.name?.length).length==0,s=Te(),d=m=>{n(1,r=r.filter(_=>_.id!==m.id)),s("edit-leapdays",r)},u=m=>{let _=new Jo(i.app,a,m);_.onClose=()=>{if(!!_.saved){if(_.editing){let g=a.static.leapDays.findIndex(S=>S.id===_.leapday.id);a.static.leapDays.splice(g,1,{..._.leapday})}else a.static.leapDays.push({..._.leapday});n(1,r=a.static.leapDays)}},_.open()},c=()=>u(),h=m=>u(m),v=m=>d(m);return t.$$set=m=>{"calendar"in m&&n(4,a=m.calendar),"plugin"in m&&n(5,i=m.plugin)},t.$$.update=()=>{if(t.$$.dirty&16){e:n(1,r=a.static.leapDays)}if(t.$$.dirty&16){e:n(0,l=a.static.months?.filter(m=>m.name?.length).length==0)}},[l,r,d,u,a,i,c,h,v]}var Sd=class extends de{constructor(e){super();fe(this,e,gv,mv,le,{calendar:4,plugin:5})}},Bd=Sd;function yv(t){ve(t,"svelte-1alhh8h",".fantasy-calendar-creator.svelte-1alhh8h.svelte-1alhh8h{height:100%;position:absolute;top:0}.fantasy-calendar-creator-inner.svelte-1alhh8h.svelte-1alhh8h{position:absolute;top:0;left:0}.fantasy-calendar-creator.svelte-1alhh8h.svelte-1alhh8h,.fantasy-calendar-creator-inner.svelte-1alhh8h.svelte-1alhh8h,.fantasy-creator-app.svelte-1alhh8h.svelte-1alhh8h{background-color:inherit}.fantasy-creator-app.svelte-1alhh8h.svelte-1alhh8h{overflow:auto}.fantasy-calendar-creator-header.svelte-1alhh8h.svelte-1alhh8h{margin:0}.top-nav.svelte-1alhh8h.svelte-1alhh8h{position:sticky;top:var(--top, 0);padding:10px 0px;background-color:inherit;z-index:1}.icons.svelte-1alhh8h.svelte-1alhh8h{display:flex;justify-content:space-between}.icons.svelte-1alhh8h .left.svelte-1alhh8h{display:flex;align-items:center}.check.svelte-1alhh8h.svelte-1alhh8h{display:flex;gap:0.25rem;align-items:center}.additional.svelte-1alhh8h.svelte-1alhh8h{color:var(--text-faint)}.save.svelte-1alhh8h.svelte-1alhh8h{color:var(--text-error)}.save.can-save.svelte-1alhh8h.svelte-1alhh8h{color:var(--interactive-success)}.back.svelte-1alhh8h.svelte-1alhh8h{width:min-content}.back.svelte-1alhh8h .clickable-icon{margin-left:0}.fantasy-calendar-creator.svelte-1alhh8h .warning-container{position:relative;display:flex;align-items:center;gap:0.25rem}")}function Md(t){let e,n,r,a,i,o,l,s,d,u,c,h,v,m,_,g,S,C,T,M,k,E,b,N,x,L,O,U,te,he,ee,se,Y,z,K,ye,ue,Me,We,rt;function Pe(Ae,je){return Ae[6]?bv:vv}let lt=Pe(t,-1),et=lt(t);return M=new Mu({props:{calendar:t[0]}}),E=new Ec({props:{calendar:t[0]}}),N=new Sc({}),L=new qc({props:{calendar:t[0],app:t[3].app}}),U=new Cu({}),he=new fd({props:{plugin:t[3],calendar:t[0]}}),se=new vd({props:{calendar:t[0]}}),z=new Ad({props:{plugin:t[3],calendar:t[0]}}),ye=new Bd({props:{calendar:t[0],plugin:t[3]}}),{c(){e=F("div"),n=F("div"),r=F("div"),a=F("div"),i=F("div"),s=W(),d=F("div"),et.c(),u=W(),c=F("div"),v=W(),m=F("h3"),m.textContent="Calendar Creator",_=W(),g=F("div"),S=F("div"),T=W(),oe(M.$$.fragment),k=W(),oe(E.$$.fragment),b=W(),oe(N.$$.fragment),x=W(),oe(L.$$.fragment),O=W(),oe(U.$$.fragment),te=W(),oe(he.$$.fragment),ee=W(),oe(se.$$.fragment),Y=W(),oe(z.$$.fragment),K=W(),oe(ye.$$.fragment),w(i,"class","back svelte-1alhh8h"),w(i,"aria-label",o=t[6]?"Save and exit":"Exit without saving"),w(d,"class","check svelte-1alhh8h"),w(a,"class","left svelte-1alhh8h"),w(c,"class","cancel"),w(r,"class","icons svelte-1alhh8h"),w(m,"class","fantasy-calendar-creator-header svelte-1alhh8h"),w(n,"class","top-nav svelte-1alhh8h"),Qe(n,"--top",t[2]+"px"),w(g,"class","fantasy-creator-app svelte-1alhh8h"),w(e,"class","inherit fantasy-calendar-creator-inner svelte-1alhh8h"),Qe(e,"width",t[1]+"px")},m(Ae,je){H(Ae,e,je),D(e,n),D(n,r),D(r,a),D(a,i),D(a,s),D(a,d),et.m(d,null),D(r,u),D(r,c),D(n,v),D(n,m),D(e,_),D(e,g),D(g,S),D(g,T),ae(M,g,null),D(g,k),ae(E,g,null),D(g,b),ae(N,g,null),D(g,x),ae(L,g,null),D(g,O),ae(U,g,null),D(g,te),ae(he,g,null),D(g,ee),ae(se,g,null),D(g,Y),ae(z,g,null),D(g,K),ae(ye,g,null),Me=!0,We||(rt=[me(l=t[9].call(null,i)),re(i,"click",t[14]),me(h=t[10].call(null,c)),re(c,"click",t[15]),me(C=t[11].call(null,S)),re(e,"introend",t[16]),re(e,"outroend",t[17])],We=!0)},p(Ae,je){t=Ae,(!Me||je&64&&o!==(o=t[6]?"Save and exit":"Exit without saving"))&&w(i,"aria-label",o),lt===(lt=Pe(t,je))&&et?et.p(t,je):(et.d(1),et=lt(t),et&&(et.c(),et.m(d,null))),(!Me||je&4)&&Qe(n,"--top",t[2]+"px");let St={};je&1&&(St.calendar=t[0]),M.$set(St);let Ht={};je&1&&(Ht.calendar=t[0]),E.$set(Ht);let It={};je&1&&(It.calendar=t[0]),je&8&&(It.app=t[3].app),L.$set(It);let xt={};je&8&&(xt.plugin=t[3]),je&1&&(xt.calendar=t[0]),he.$set(xt);let Ot={};je&1&&(Ot.calendar=t[0]),se.$set(Ot);let ln={};je&8&&(ln.plugin=t[3]),je&1&&(ln.calendar=t[0]),z.$set(ln);let ie={};je&1&&(ie.calendar=t[0]),je&8&&(ie.plugin=t[3]),ye.$set(ie),(!Me||je&2)&&Qe(e,"width",t[1]+"px")},i(Ae){Me||(j(M.$$.fragment,Ae),j(E.$$.fragment,Ae),j(N.$$.fragment,Ae),j(L.$$.fragment,Ae),j(U.$$.fragment,Ae),j(he.$$.fragment,Ae),j(se.$$.fragment,Ae),j(z.$$.fragment,Ae),j(ye.$$.fragment,Ae),zt(()=>{ue||(ue=so(e,uo,{x:t[1]*1.5,opacity:1},!0)),ue.run(1)}),Me=!0)},o(Ae){G(M.$$.fragment,Ae),G(E.$$.fragment,Ae),G(N.$$.fragment,Ae),G(L.$$.fragment,Ae),G(U.$$.fragment,Ae),G(he.$$.fragment,Ae),G(se.$$.fragment,Ae),G(z.$$.fragment,Ae),G(ye.$$.fragment,Ae),ue||(ue=so(e,uo,{x:t[1]*1.5,opacity:1},!1)),ue.run(0),Me=!1},d(Ae){Ae&&V(e),et.d(),ne(M),ne(E),ne(N),ne(L),ne(U),ne(he),ne(se),ne(z),ne(ye),Ae&&ue&&ue.end(),We=!1,Ee(rt)}}}function vv(t){let e,n,r,a,i,o;return{c(){e=F("div"),r=W(),a=F("span"),a.textContent=`Additional information is required before
                                    saving`,w(e,"class","save svelte-1alhh8h"),w(e,"aria-label",t[7]),w(a,"class","additional svelte-1alhh8h")},m(l,s){H(l,e,s),H(l,r,s),H(l,a,s),i||(o=me(n=t[13].call(null,e)),i=!0)},p(l,s){s&128&&w(e,"aria-label",l[7])},d(l){l&&V(e),l&&V(r),l&&V(a),i=!1,o()}}}function bv(t){let e,n,r,a;return{c(){e=F("div"),w(e,"class","save can-save svelte-1alhh8h"),w(e,"aria-label",t[7])},m(i,o){H(i,e,o),r||(a=me(n=t[13].call(null,e)),r=!0)},p(i,o){o&128&&w(e,"aria-label",i[7])},d(i){i&&V(e),r=!1,a()}}}function wv(t){let e,n,r=t[4]&&Md(t);return{c(){e=F("div"),r&&r.c(),w(e,"class","fantasy-calendar-creator svelte-1alhh8h")},m(a,i){H(a,e,i),r&&r.m(e,null),n=!0},p(a,[i]){a[4]?r?(r.p(a,i),i&16&&j(r,1)):(r=Md(a),r.c(),j(r,1),r.m(e,null)):r&&(ke(),G(r,1,1,()=>{r=null}),xe())},i(a){n||(j(r),n=!0)},o(a){G(r),n=!1},d(a){a&&V(e),r&&r.d()}}}function Dv(t,e,n){let r,a,i=!1;qn(()=>{n(4,i=!0)});let o=Te(),{width:l}=e,{top:s}=e,{calendar:d}=e,{plugin:u}=e;window.calendar=d;let c=hr(d);c.subscribe(E=>{n(0,d=E)}),Rn("store",c);let h=E=>{new $n.ExtraButtonComponent(E).setIcon("left-arrow-with-tail")},v=E=>{new $n.ExtraButtonComponent(E).setIcon("cross").setTooltip("Exit without saving")},m=E=>{let b=E.createDiv("fantasy-calendar-apply-preset");new $n.Setting(b).setName("Apply Preset").setDesc("Apply a common fantasy calendar as a preset.").addButton(N=>{N.setCta().setButtonText("Choose Preset").onClick(()=>{let x=new lo(u.app);x.onClose=()=>{if(!!x.saved){if(n(0,d={...(0,Nd.default)(x.preset),id:d.id}),d?.name=="Gregorian Calendar"){let L=new Date;n(0,d.current={year:L.getFullYear(),month:L.getMonth(),day:L.getDate()},d)}c.set(d)}},x.open()})})},_=!1,g=()=>{if(!a&&!u.data.exitWithoutSaving){let E=new No(u);E.onClose=()=>{E.confirmed&&n(4,i=!1)},E.open()}else n(5,_=!0),n(4,i=!1)},S=E=>{a?(0,$n.setIcon)(E,"checkmark"):un(E)},C=()=>{g()},T=()=>n(4,i=!1),M=()=>o("flown"),k=()=>o("exit",{saved:_,calendar:d});return t.$$set=E=>{"width"in E&&n(1,l=E.width),"top"in E&&n(2,s=E.top),"calendar"in E&&n(0,d=E.calendar),"plugin"in E&&n(3,u=E.plugin)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(7,r=iu(d))}if(t.$$.dirty&1){e:n(6,a=ou(d))}},[d,l,s,u,i,_,a,r,o,h,v,m,g,S,C,T,M,k]}var Id=class extends de{constructor(e){super();fe(this,e,Dv,wv,le,{width:1,top:2,calendar:0,plugin:3},yv)}},Od=Id;var qd=Oe(require("obsidian"));var ci=class extends aa{constructor(e,n,r){super(e,n.inputEl,r);this.folders=[...r],this.text=n,this.inputEl.addEventListener("input",()=>this.getFolder())}getFolder(){let e=this.inputEl.value,n=this.app.vault.getAbstractFileByPath(e);n!=this.folder&&n instanceof qd.TFolder&&(this.folder=n,this.onInputChanged())}getItemText(e){return e.path}onChooseItem(e){this.text.setValue(e.path),this.folder=e}selectSuggestion({item:e}){let n=e.path;this.text.setValue(n),this.onClose(),this.close()}renderSuggestion(e,n){let{item:r,match:a}=e||{},i=n.createDiv({cls:"suggestion-content"});if(!r){i.setText(this.emptyStateText),i.parentElement.addClass("is-selected");return}let o=r.path.length-r.name.length,l=a.matches.map(s=>createSpan("suggestion-highlight"));for(let s=o;s<r.path.length;s++){let d=a.matches.find(u=>u[0]===s);if(d){let u=l[a.matches.indexOf(d)];i.appendChild(u),u.appendText(r.path.substring(d[0],d[1])),s+=d[1]-d[0]-1;continue}i.appendText(r.path[s])}n.createDiv({cls:"suggestion-note",text:r.path})}getItems(){return this.folders}};var Rd;(function(r){r.none="None",r.monthly="Monthly",r.yearly="Yearly"})(Rd||(Rd={}));(0,He.addIcon)("fantasy-calendar-grip",'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="grip-lines" class="svg-inline--fa fa-grip-lines fa-w-16" role="img" viewBox="0 0 512 512"><path fill="currentColor" d="M496 288H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-128H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z"/></svg>');(0,He.addIcon)("fantasy-calendar-warning",'<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="exclamation-triangle" class="svg-inline--fa fa-exclamation-triangle fa-w-18" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"></path></svg>');var fi=class extends He.PluginSettingTab{constructor(e){super(e.app,e);this.plugin=e}get data(){return this.plugin.data}async display(){this.containerEl.empty(),this.containerEl.createEl("h2",{text:"Fantasy Calendars"}),this.containerEl.addClass("fantasy-calendar-settings"),this.contentEl=this.containerEl.createDiv("fantasy-calendar-settings-content"),this.buildInfo(this.contentEl.createDiv("fantasy-calendar-nested-settings")),this.buildCalendars(this.contentEl.createEl("details",{cls:"fantasy-calendar-nested-settings",attr:{...this.data.settingsToggleState.calendars?{open:"open"}:{}}})),this.buildEvents(this.contentEl.createEl("details",{cls:"fantasy-calendar-nested-settings",attr:{...this.data.settingsToggleState.events?{open:"open"}:{}}}))}buildInfo(e){e.empty(),new He.Setting(e).setName(createFragment(n=>{let r=n.createSpan("fantasy-calendar-warning");(0,He.setIcon)(r.createSpan("fantasy-calendar-warning"),"fantasy-calendar-warning"),r.createSpan({text:"Default Config Directory"})})).setDesc(createFragment(n=>{n.createSpan({text:"Please back up your data before changing this setting. Hidden directories must be manually entered."}),n.createEl("br"),n.createSpan({text:"Current directory: "});let r=this.data.configDirectory??this.app.vault.configDir;n.createEl("code",{text:r})})).addText(async n=>{let r=this.app.vault.getAllLoadedFiles().filter(i=>i instanceof He.TFolder);n.setPlaceholder(this.data.configDirectory??this.app.vault.configDir);let a=new ci(this.app,n,[...r]);a.onClose=async()=>{n.inputEl.value?await this.app.vault.adapter.exists(n.inputEl.value)||(this.data.configDirectory=n.inputEl.value,await this.plugin.saveSettings()):this.data.configDirectory=null},n.inputEl.onblur=async()=>{if(!n.inputEl.value)return;let i=await this.app.vault.adapter.exists(n.inputEl.value);this.data.configDirectory=n.inputEl.value,await this.plugin.saveSettings(),this.display()}}).addExtraButton(n=>{n.setTooltip("Reset to Default").setIcon("reset").onClick(async()=>{this.data.configDirectory=null,await this.plugin.saveSettings(),this.display()})})}buildCalendars(e){e.empty(),e.ontoggle=()=>{this.data.settingsToggleState.calendars=e.open};let n=e.createEl("summary");new He.Setting(n).setHeading().setName("Calendar Management"),n.createDiv("collapser").createDiv("handle"),new He.Setting(e).setName("Default Calendar").setDesc("Views will open to this calendar by default.").addDropdown(a=>{a.addOption("none","None");for(let i of this.data.calendars)a.addOption(i.id,i.name);a.setValue(this.plugin.data.defaultCalendar),a.onChange(i=>{if(i==="none"){this.plugin.data.defaultCalendar=null,this.plugin.saveSettings();return}this.plugin.data.defaultCalendar=i,this.plugin.saveSettings()})}),new He.Setting(e).setName("Import Calendar").setDesc(createFragment(a=>{a.createSpan({text:"Import calendar from "}),a.createEl("a",{href:"https://app.fantasy-calendar.com",text:"Fantasy Calendar",cls:"external-link"})})).addButton(a=>{let i=createEl("input",{attr:{type:"file",name:"merge",accept:".json",multiple:!0,style:"display: none;"}});i.onchange=async()=>{let{files:o}=i;if(!!o.length){try{let l=[];for(let d of Array.from(o))l.push(JSON.parse(await d.text()));let s=Ta.import(l);this.plugin.data.calendars.push(...s),await this.plugin.saveCalendar(),this.showCalendars(r)}catch(l){new He.Notice(`There was an error while importing the calendar${o.length==1?"":"s"}.`),console.error(l)}i.value=null}},a.setButtonText("Choose Files"),a.buttonEl.addClass("calendar-file-upload"),a.buttonEl.appendChild(i),a.onClick(()=>i.click())}),new He.Setting(e).setName("Create New Calendar").addButton(a=>a.setTooltip("Launch Calendar Creator").setIcon("plus-with-circle").onClick(async()=>{let i=await this.launchCalendarCreator();console.log("\u{1F680} ~ file: settings.ts ~ line 266 ~ calendar",i)}));let r=e.createDiv("existing-calendars");this.showCalendars(r)}showCalendars(e){if(e.empty(),!this.data.calendars.length){e.createSpan({text:"No calendars created! Create a calendar to see it here."});return}for(let n of this.data.calendars)new He.Setting(e).setName(n.name).setDesc(n.description??"").addExtraButton(r=>{r.setIcon("pencil").onClick(()=>{this.launchCalendarCreator(n)})}).addExtraButton(r=>{r.setIcon("trash").onClick(async()=>{!await Er(this.app,"Are you sure you want to delete this calendar?",{cta:"Delete",secondary:"Cancel"})||(this.plugin.data.calendars=this.plugin.data.calendars.filter(a=>a.id!=n.id),await this.plugin.saveCalendar(),n.name==this.plugin.data.defaultCalendar?this.display():this.showCalendars(e))})})}buildEvents(e){e.empty(),e.ontoggle=()=>{this.data.settingsToggleState.events=e.open};let n=e.createEl("summary");new He.Setting(n).setHeading().setName("Events"),n.createDiv("collapser").createDiv("handle"),new He.Setting(e).setName("Display Event Previews").setDesc("Use the core Note Preview plugin to display event notes when hovered.").addToggle(r=>{r.setValue(this.data.eventPreview).onChange(a=>{this.data.eventPreview=a,this.plugin.saveSettings()})}),new He.Setting(e).setName("Automatically Parse for Events").setDesc("The plugin will automatically parse files in the vault for events.").addToggle(r=>{r.setValue(this.data.autoParse).onChange(a=>{this.data.autoParse=a,this.plugin.saveSettings()})}),new He.Setting(e).setName("Events Folder").setDesc("The plugin will only watch for changes in this folder.").addText(r=>{let a=this.app.vault.getAllLoadedFiles().filter(o=>o instanceof He.TFolder);r.setPlaceholder(this.plugin.data.path??"/");let i=new ci(this.app,r,[...a]);i.onClose=async()=>{let o=r.inputEl.value?.trim()?r.inputEl.value.trim():"/";this.plugin.data.path=(0,He.normalizePath)(o)},r.inputEl.onblur=async()=>{let o=r.inputEl.value?.trim()?r.inputEl.value.trim():"/";this.plugin.data.path=(0,He.normalizePath)(o)}}),new He.Setting(e).setName("Parse Note Titles for Event Dates").setDesc("The plugin will parse note titles for event dates.").addToggle(r=>{r.setValue(this.data.parseDates).onChange(a=>{this.data.parseDates=a,this.plugin.saveSettings()})}),new He.Setting(e).setName("Date Format").setClass(this.data.dailyNotes?"daily-notes":"no-daily-notes").setDesc(createFragment(r=>{if(r.createSpan({text:"Event dates will be parsed using this format."}),r.createSpan({text:"Only the "}),r.createEl("code",{text:"Y"}),r.createSpan({text:", "}),r.createEl("code",{text:"M"}),r.createSpan({text:", and "}),r.createEl("code",{text:"D"}),r.createEl("a",{text:"tokens",href:"https://momentjs.com/docs/#/displaying/format/",cls:"external-link"}),r.createSpan({text:" are supported."}),["Y","M","D"].some(a=>!this.data.dateFormat.includes(a))){r.createEl("br");let a=r.createSpan({cls:"fantasy-calendar-warning date-format"});(0,He.setIcon)(a.createSpan("fantasy-calendar-warning"),"fantasy-calendar-warning");let i=["Y","M","D"].filter(o=>!this.data.dateFormat.includes(o));a.createSpan({text:` Date format is missing: ${i.join(", ").replace(/, ([^,]*)$/," and $1")}`})}})).addText(r=>{r.setDisabled(this.data.dailyNotes).setValue(this.plugin.format).onChange(a=>{this.data.dateFormat=a,this.plugin.saveSettings()}),r.inputEl.onblur=()=>this.buildEvents(e)}).addExtraButton(r=>{if(!this.plugin.canUseDailyNotes){r.extraSettingsEl.detach();return}this.data.dailyNotes?r.setIcon("checkmark").setTooltip("Unlink from Daily Notes").onClick(()=>{this.data.dailyNotes=!1,this.buildEvents(e)}):r.setIcon("sync").setTooltip("Link with Daily Notes").onClick(()=>{this.data.dailyNotes=!0,this.buildEvents(e)})}),new He.Setting(e).setName("Support Timelines Events").setDesc(createFragment(r=>{r.createSpan({text:"Support <span> elements used by the "}),r.createEl("a",{text:"Obsidian Timelines",href:"obsidian://show-plugin?id=obsidian-timelines"}),r.createSpan({text:" plugin (by Darakah)."})})).addToggle(r=>{r.setValue(this.data.supportTimelines).onChange(a=>{this.data.supportTimelines=a,this.plugin.saveSettings()})}),new He.Setting(e).setName("Default tag marking pages containing Timelines data").setDesc("Tag to specify which notes to include in created timelines e.g. timeline to use the #timeline tag").addText(r=>r.setPlaceholder(this.data.timelineTag).setValue(this.data.timelineTag.replace("#","")).setDisabled(this.plugin.syncTimelines).onChange(a=>{this.data.timelineTag=a.startsWith("#")?a:`#${a}`,this.plugin.saveSettings()})).addExtraButton(r=>{if(!this.plugin.canUseTimelines){this.data.syncTimelines=!1,r.extraSettingsEl.detach();return}this.data.syncTimelines?r.setIcon("checkmark").setTooltip("Unsync from Timelines Plugin").onClick(async()=>{this.data.syncTimelines=!1,await this.plugin.saveSettings(),this.buildEvents(e)}):r.setIcon("sync").setTooltip("Sync with Timelines Plugin").onClick(async()=>{this.data.syncTimelines=!0,this.data.timelineTag=this.plugin.app.plugins.getPlugin("obsidian-timelines").settings.timelineTag,await this.plugin.saveSettings(),this.buildEvents(e)})})}launchCalendarCreator(e=ts){return new Promise(n=>{let r=(0,di.default)(e),a=-1*Number(getComputedStyle(this.containerEl).paddingTop.replace(/[^\d]/g,"")),i=new Od({target:this.containerEl,props:{calendar:r,plugin:this.plugin,width:this.contentEl.clientWidth,top:a}}),o=new ResizeObserver(()=>{i.$set({width:this.contentEl.clientWidth})});o.observe(this.contentEl),i.$on("exit",l=>{this.display(),l.detail.saved&&(e=(0,di.default)(l.detail.calendar),o.disconnect(),n(e))}),i.$on("destroy",l=>{this.display(),console.log(l.detail),l.detail&&(e=(0,di.default)(r),o.disconnect(),n(e))})})}};var Be=Oe(require("obsidian"));var la=Oe(require("obsidian"));var ns=class{constructor(e,n,r,a){this.data=e;this.number=n;this.year=r;this.calendar=a;this.days=[];this.leapDays=[];this.shouldUpdateEvents=!1;this.shouldUpdateMoons=!1;this.leapDays=this.calendar.leapDaysForMonth(this.number,r),this.daysBefore=this.calendar.daysBeforeMonth(this.number,this.year),this.days=[...new Array(e.length+this.leapDays.length).keys()].map(i=>new Ld(this,i+1))}get id(){return this.data.id}get index(){return this.calendar.data.months.indexOf(this.data)}get name(){return this.data.name}get length(){return this.days.length}get firstWeekday(){return this.calendar.data.overflow?this.days[0].weekday:0}get lastWeekday(){return this.days[this.days.length-1].weekday}get type(){return this.data.type}getEventsOnDay(e){return(!this.events||!this.events.length||this.shouldUpdateEvents)&&(this.events=this.calendar.eventsForMonth(this)),this.events.filter(n=>{if(n.date.day==e.day)return!0;if(!n.end)return!1;let r={...n.date},a={...n.end};r.year||(r.year=a.year=this.year),r.month||(r.month=a.month=this.number);let i=Number(this.calendar.hash(e));if(Number(this.calendar.hash(r))<=i&&i<=Number(this.calendar.hash(a)))return!0})}getMoonsForDay(e){return(!this.moons||!this.moons.length||this.shouldUpdateMoons)&&(this.moons=this.calendar.getMoonsForMonth(this)),this.moons[e.day-1]}},Ld=class{constructor(e,n){this.month=e;this.number=n}get calendar(){return this.month.calendar}get date(){return{day:this.number,month:this.month.number,year:this.year}}get events(){return(!this._events||!this._events.length||this.month.shouldUpdateEvents)&&(this._events=this.month.getEventsOnDay(this.date)),this._events}get longDate(){return{day:this.number,month:this.month.name,year:this.year}}get daysBefore(){return this.month.daysBefore+this.number-1}get year(){return this.month.year}get weekday(){let e=this.calendar.firstDayOfYear(this.year);return Nn(this.daysBefore%this.calendar.weekdays.length+e,this.calendar.weekdays.length)}get isCurrentDay(){return this.number==this.calendar.current.day&&this.month.number==this.calendar.current.month&&this.month.year==this.calendar.current.year}get isDisplaying(){return this.number==this.calendar.viewing.day&&this.calendar.displayed.year==this.calendar.viewing.year&&this.calendar.displayed.month==this.calendar.viewing.month}get moons(){return(!this._moons||!this._moons.length)&&(this._moons=this.month.getMoonsForDay(this.date)),this._moons}},Tr=class extends la.Events{constructor(e,n){super();this.calendar=e;this.plugin=n;this._cache=new Map;this.displayed={year:null,month:null,day:null};this.viewing={year:null,month:null,day:null};this.displayed={...this.current},this.update(this.calendar),this.plugin.registerEvent(this.plugin.app.workspace.on("fantasy-calendars-event-update",r=>{if(!r.has(this.calendar.id))return;let a=r.get(this.calendar.id);for(let[i,o]of a)if(!!this._cache.has(i))for(let l of o)!this._cache.get(i).has(l)||(this._cache.get(i).get(l).shouldUpdateEvents=!0,(i==this.displayed.year&&l==this.displayed.month||i==this.viewing.year&&l==this.viewing.month)&&this.trigger("month-update"))}))}getDayForDate(e){return this.getMonth(e.month,e.year).days[e.day-1]}eventsForMonth(e){let{year:n,number:r}=e;return this.calendar.events.filter(i=>{let o={...i.date},l={...i.end};return o.month==null||(o.year==n||o.year==null)&&o.month==r?!0:o.year>n||o.year==n&&o.month>r||!l&&(o.month!=r||o.year<n)?!1:(o.year==null&&(l.year=o.year=n),(o.year<=n||o.month<=r)&&l.year>=n&&l.month>=r)})}getNameForYear(e){if(!this.data.useCustomYears)return`${e}`;if(this.data.useCustomYears&&e-1>=0&&e<=this.data.years?.length)return this.data.years[e-1].name}get displayWeeks(){return this.calendar.displayWeeks}getMonthsForYear(e){return this._cache.has(e)||this._cache.set(e,new Map(this.data.months.map((n,r)=>[r,new ns(n,r,e,this)]))),Array.from(this._cache.get(e).values())}hash(e){if(e.year==null||e.month==null||e.day==null)return null;let n=`${this.data.months.length}`.length,r=`${e.month}`.padStart(n,"0"),a=`${this.maxDays}`.length,i=`${e.day}`.padStart(a,"0");return`${e.year}${r}${i}`}update(e){this.calendar=e??this.calendar,this.maxDays=Math.max(...this.data.months.map(n=>n.length)),e.current||(e.current={day:null,month:null,year:null}),On(e.current.year,e)||(e.current.year=1),In(e.current.month,e)||(e.current.month=0),Mn(e.current.day,e)||(e.current.day=1),this.trigger("month-update"),this.trigger("day-update")}get categories(){return this.calendar.categories}get data(){return this.calendar.static}get current(){return this.calendar.current}get leapdays(){return this.data.leapDays}get currentDate(){return dn(this.current,this.data.months)}get displayedDate(){return dn(this.displayed,this.data.months)}get viewedDate(){return dn(this.viewing,this.data.months)}reset(){this.displayed={...this.current},this.viewing={...this.current},this.trigger("month-update"),this.trigger("day-update")}setCurrentMonth(e){this.displayed.month=e,this.trigger("month-update")}goToNextDay(){this.viewing.day+=1;let e=this.getMonth(this.displayed.month,this.displayed.year);this.viewing.day>e.days.length&&(this.goToNext(),this.viewing.month=this.displayed.month,this.viewing.year=this.displayed.year,this.viewing.day=1),this.trigger("day-update")}goToNextCurrentDay(){this.current.day+=1;let e=this.getMonth(this.current.month,this.current.year);this.current.day>=e.days.length&&(this.current.day=1,this.current.month+=1,this.current.month>=this.data.months.length&&(this.current.month=0,this.current.year+=1)),this.trigger("day-update")}get nextMonthIndex(){return Nn(this.displayed.month+1,this.data.months.length)}get nextMonth(){return this.getMonth(this.displayed.month+1,this.displayed.year)}canGoToNextYear(e=this.displayed.year){return!this.data.useCustomYears||e<this.data.years.length}goToNext(){if(this.nextMonthIndex<this.displayed.month){if(!this.canGoToNextYear()){new la.Notice("This is the last year. Additional years can be created in settings.");return}this.goToNextYear()}this.setCurrentMonth(this.nextMonthIndex)}goToNextYear(){this.displayed.year+=1,this.trigger("year-update")}get prevMonthIndex(){return Nn(this.displayed.month-1,this.data.months.length)}get previousMonth(){return this.getMonth(this.displayed.month-1,this.displayed.year)}goToPrevious(){if(this.prevMonthIndex>this.displayed.month){if(this.displayed.year==1){new la.Notice("This is the earliest year.");return}this.goToPreviousYear()}this.setCurrentMonth(this.prevMonthIndex)}goToPreviousDay(){this.viewing.day-=1,this.viewing.day<1&&(this.goToPrevious(),this.viewing.month=this.displayed.month,this.viewing.year=this.displayed.year,this.viewing.day=this.currentMonth.days.length),this.trigger("day-update")}goToPreviousYear(){this.displayed.year-=1,this.trigger("year-update")}get weekdays(){return this.data.weekdays}get currentMonth(){return this.getMonth(this.displayed.month,this.displayed.year)}testLeapDay(e,n){return e.interval.sort((r,a)=>r.interval-a.interval).some(({interval:r,exclusive:a},i,o)=>{if(a&&i==0)return(n-e.offset)%r!=0;if(!a)return o[i+1]&&o[i+1].exclusive?(n-e.offset)%r==0&&(n-e.offset)%o[i+1].interval!=0:(n-e.offset)%r==0})}leapDaysForYear(e){return this.leapdays.filter(n=>this.testLeapDay(n,e))}leapDaysForMonth(e,n=this.displayed.year){return this.leapdays.filter(r=>r.timespan!=e?!1:this.testLeapDay(r,n))}getMonth(e,n,r=0){let a=this.data.months,i=Nn(e,a.length);if(e<0&&(n-=1),n==0)return null;if(e>=a.length&&(n+=1),this._cache.has(n)){if(this._cache.get(n).has(i))return this._cache.get(n).get(i)}else this._cache.set(n,new Map);if(a[i].type=="intercalary"&&r!=0)return this.getMonth(e+r,n,r);let o=new ns(a[i],i,n,this);return this._cache.set(n,this._cache.get(n).set(i,o)),o}getPaddedDaysForMonth(e){let n=e.days,r=[],a=this.getMonth(e.index-1,this.displayed.year,-1);e.firstWeekday>0&&e.type=="month"&&(r=a!=null?a.days.slice(-e.firstWeekday):Array(e.firstWeekday).fill(null));let i=[],o=this.getMonth(e.index+1,this.displayed.year,1);return e.lastWeekday<this.weekdays.length-1&&e.type=="month"&&(i=o.days.slice(0,this.weekdays.length-e.lastWeekday-1)),{previous:r,current:n,next:i}}get weeksPerCurrentMonth(){return Math.ceil(this.getMonth(this.displayed.month,this.displayed.year).length/this.data.weekdays.length)}weeksOfMonth(e){return Math.ceil((e.length+e.firstWeekday)/this.data.weekdays.length)}weekNumbersOfMonth(e){let n=e.daysBefore+this.firstDayOfYear(e.year);return Math.floor(n/this.data.weekdays.length)}get daysPerYear(){return this.data.months.filter(e=>e.type==="month").reduce((e,n)=>e+n.length,0)}daysBeforeMonth(e,n,r=!1){return!e||e==0?0:this.data.months.slice(0,e).filter(a=>r?!0:a.type=="month").map((a,i)=>a.length+this.leapDaysForMonth(i,n).length).reduce((a,i)=>a+i,0)}areDatesEqual(e,n){return!(e.day!=n.day||e.month!=n.month&&e.month!=null&&n.month!=null||e.year!=n.year&&e.year!=null&&n.year!=null)}dayNumberForDate(e){return this.daysBeforeMonth(e.month,e.year,!0)+e.day}get firstWeekday(){return this.data.firstWeekDay}get leapDaysBefore(){return this.displayed.year==1?0:this.leapDaysBeforeYear(this.displayed.year-1)}leapDaysBeforeYear(e){if(e==1)return 0;let n=e-1,r=0;for(let{interval:a,offset:i}of this.leapdays){let o=0;for(let l=0;l<a.length;l++){let s=a[l],d=a.slice(l+1).filter(c=>!c.exclusive).map(c=>Math.floor((n+(c.ignore?0:i))/c.interval)).reduce((c,h)=>c+h,0),u=Math.floor((n+(s.ignore?0:i))/s.interval);s.exclusive?(o-=u,o+=d):(o+=u,o-=d)}r+=o}return r}get totalDaysBefore(){return this.totalDaysBeforeYear(this.displayed.year)}totalDaysBeforeYear(e,n=!1){return e<1?0:Math.abs(e-1)*this.data.months.filter(r=>n||r.type=="month").reduce((r,a)=>r+a.length,0)+this.leapDaysBeforeYear(e)}firstDayOfYear(e=this.displayed.year){return this.data.overflow?e==1?this.firstWeekday:Nn(this.totalDaysBeforeYear(e)%this.data.weekdays.length+this.firstWeekday+(this.data.offset??0),this.data.weekdays.length):0}get moons(){return this.data.moons}getMoonsForMonth(e){let n=[];for(let r of e.days){let a=this.totalDaysBeforeYear(e.year,!0)+this.daysBeforeMonth(e.number,e.year,!0)+r.number-1,i=[];for(let o of this.moons){let{offset:l,cycle:s}=o,d=24,u=(a-l)/s,h=(u-Math.floor(u))*d%d,v=wd[d];i.push([o,v[Nn(Math.round(h),v.length)]])}n.push(i)}return n}};var Sr=Oe(require("obsidian"));var hi=Oe(require("obsidian"));function _v(t){ve(t,"svelte-1e1nyi2",".flag.svelte-1e1nyi2.svelte-1e1nyi2{cursor:pointer;position:relative;padding-left:0.125rem;text-align:left;width:100%;background-color:var(--hex-alpha);border-left:2px solid var(--color)}.flag-content.svelte-1e1nyi2.svelte-1e1nyi2{display:flex;gap:0.25rem;align-items:flex-start;justify-content:space-between}.day-view.svelte-1e1nyi2 .flag-content.svelte-1e1nyi2{justify-content:space-between}.clamp.svelte-1e1nyi2.svelte-1e1nyi2{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;word-break:keep-all;overflow:hidden;text-overflow:ellipsis}.note.svelte-1e1nyi2.svelte-1e1nyi2{display:flex;align-self:center}.multi.svelte-1e1nyi2.svelte-1e1nyi2{flex-shrink:0;overflow:visible;width:unset}.multi.svelte-1e1nyi2 .clamp.svelte-1e1nyi2{-webkit-line-clamp:1;overflow:visible}.multi.start.svelte-1e1nyi2.svelte-1e1nyi2{margin-left:0}.multi.end.svelte-1e1nyi2.svelte-1e1nyi2{margin-right:0}.multi.first.svelte-1e1nyi2.svelte-1e1nyi2{overflow:visible;white-space:nowrap}.multi.svelte-1e1nyi2.svelte-1e1nyi2:not(.first){color:transparent;overflow:hidden}.multi.svelte-1e1nyi2.svelte-1e1nyi2:not(.start){border:0;margin-left:-6px}.multi.svelte-1e1nyi2.svelte-1e1nyi2:not(.end){margin-right:-6px}.start.svelte-1e1nyi2>.flag-content.svelte-1e1nyi2{justify-content:flex-start;gap:1em}")}function Pd(t){let e,n,r,a;return{c(){e=F("div"),w(e,"class","note svelte-1e1nyi2")},m(i,o){H(i,e,o),r||(a=me(n=t[9].call(null,e)),r=!0)},d(i){i&&V(e),r=!1,a()}}}function Ev(t){let e,n,r,a=t[0].name+"",i,o,l,s,d,u=t[0].note&&Pd(t);return{c(){e=F("div"),n=F("div"),r=F("span"),i=be(a),o=W(),u&&u.c(),w(r,"class","svelte-1e1nyi2"),ge(r,"clamp",!t[1]),ge(r,"day-view",t[1]),w(n,"class","flag-content svelte-1e1nyi2"),w(e,"class","flag svelte-1e1nyi2"),w(e,"aria-label",l=t[1]?null:t[0].name),Qe(e,"--hex-alpha",t[6]+"40"),Qe(e,"--color",t[6]),ge(e,"multi",t[4]),ge(e,"start",t[2]),ge(e,"end",t[3]),ge(e,"first",t[5]),ge(e,"day-view",t[1])},m(c,h){H(c,e,h),D(e,n),D(n,r),D(r,i),D(n,o),u&&u.m(n,null),s||(d=[re(e,"click",t[12]),re(e,"mouseover",t[13]),re(e,"focus",Cv),re(e,"contextmenu",t[14])],s=!0)},p(c,[h]){h&1&&a!==(a=c[0].name+"")&&De(i,a),h&2&&ge(r,"clamp",!c[1]),h&2&&ge(r,"day-view",c[1]),c[0].note?u||(u=Pd(c),u.c(),u.m(n,null)):u&&(u.d(1),u=null),h&3&&l!==(l=c[1]?null:c[0].name)&&w(e,"aria-label",l),h&64&&Qe(e,"--hex-alpha",c[6]+"40"),h&64&&Qe(e,"--color",c[6]),h&16&&ge(e,"multi",c[4]),h&4&&ge(e,"start",c[2]),h&8&&ge(e,"end",c[3]),h&32&&ge(e,"first",c[5]),h&2&&ge(e,"day-view",c[1])},i:J,o:J,d(c){c&&V(e),u&&u.d(),s=!1,Ee(d)}}}var Cv=()=>{};function Av(t,e,n){let r=Te(),{event:a}=e,{date:i}=e,{dayView:o=!1}=e,l=!1,s=!1,d=!1,u=!1,{categories:c}=e,h=c.find(C=>C.id==a.category)?.color??Ko,v=hi.Platform.isMacOS?"Meta":"Control",m=C=>{(0,hi.setIcon)(C,"note-glyph")},_=C=>{C.stopPropagation(),r("event-click",{event:a,modifier:C.getModifierState(v)})},g=C=>r("event-mouseover",{target:C.target,event:a}),S=C=>{C.stopPropagation(),r("event-context",{evt:C,event:a})};return t.$$set=C=>{"event"in C&&n(0,a=C.event),"date"in C&&n(10,i=C.date),"dayView"in C&&n(1,o=C.dayView),"categories"in C&&n(11,c=C.categories)},t.$$.update=()=>{if(t.$$.dirty&1039){e:a.end!=null&&!o&&(n(4,l=!0),n(2,s=i.day===a.date.day&&(a.date.month==null||i.month==a.date.month)&&(a.date.year==null||i.year===a.date.year)),n(5,u=s||i.day==1),n(3,d=i.day===a.end.day&&(a.end.month==null||i.month==a.end.month)&&(a.end.year==null||i.year===a.end.year)),s&&d&&(n(4,l=!1),n(2,s=!1),n(3,d=!1)))}if(t.$$.dirty&2049){e:n(6,h=c.find(C=>C.id==a.category)?.color??Ko)}},[a,o,s,d,l,u,h,r,v,m,i,c,_,g,S]}var jd=class extends de{constructor(e){super();fe(this,e,Av,Ev,le,{event:0,date:10,dayView:1,categories:11},_v)}},Vd=jd;function kv(t){ve(t,"svelte-qnut28",".flags-container.svelte-qnut28{height:100%}.flag-container.svelte-qnut28{display:flex;flex-flow:column nowrap;gap:0.25rem}.overflow.svelte-qnut28{color:var(--text-muted);display:flex;justify-content:flex-end;width:100%}")}function Hd(t){let e,n,r,a;return{c(){e=F("div"),w(e,"class","flag-container svelte-qnut28")},m(i,o){H(i,e,o),r||(a=me(n=t[2].call(null,e)),r=!0)},d(i){i&&V(e),r=!1,a()}}}function Wd(t){let e,n,r;return{c(){e=F("span"),n=be("+"),r=be(t[1])},m(a,i){H(a,e,i),D(e,n),D(e,r)},p(a,i){i&2&&De(r,a[1])},d(a){a&&V(e)}}}function xv(t){let e,n=t[0],r,a,i=Hd(t),o=t[1]>0&&Wd(t);return{c(){e=F("div"),i.c(),r=W(),a=F("div"),o&&o.c(),w(a,"class","overflow svelte-qnut28"),w(e,"class","flags-container svelte-qnut28")},m(l,s){H(l,e,s),i.m(e,null),D(e,r),D(e,a),o&&o.m(a,null)},p(l,[s]){s&1&&le(n,n=l[0])&&(i.d(1),i=Hd(l),i.c(),i.m(e,r)),l[1]>0?o?o.p(l,s):(o=Wd(l),o.c(),o.m(a,null)):o&&(o.d(1),o=null)},i:J,o:J,d(l){l&&V(e),i.d(l),o&&o.d()}}}function Fv(t,e,n){let{events:r=[]}=e,{categories:a}=e,{dayView:i=!1}=e,{date:o}=e,{calendar:l}=e,s=0,d=Te(),u,c=0,h=v=>{if(r.length){let m=v?.parentElement?.getBoundingClientRect()?.height;if(!i&&(m==null||Math.floor(m)==Math.floor(c)))return;c=m,u=v,v.empty(),n(1,s=0);let _=m;for(let g of r){let S=new Vd({target:v,props:{event:g,categories:a,dayView:i,date:o}});if(S.$on("event-click",C=>d("event-click",C.detail)),S.$on("event-mouseover",C=>d("event-mouseover",C.detail)),S.$on("event-context",C=>d("event-context",C.detail)),!i){if(_=m-v.getBoundingClientRect().height,_<0){v.lastElementChild.detach(),n(1,s=r.length-r.indexOf(g));break}else if(_==0){n(1,s=r.length-r.indexOf(g)-1);break}}}}};return l.on("view-resized",()=>{i||h(u)}),t.$$set=v=>{"events"in v&&n(0,r=v.events),"categories"in v&&n(3,a=v.categories),"dayView"in v&&n(4,i=v.dayView),"date"in v&&n(5,o=v.date),"calendar"in v&&n(6,l=v.calendar)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(0,r=[...r])}},[r,s,h,a,i,o,l]}var Gd=class extends de{constructor(e){super();fe(this,e,Fv,xv,le,{events:0,categories:3,dayView:4,date:5,calendar:6},kv)}},pi=Gd;function Tv(t){ve(t,"svelte-1uhffao",".day-view.svelte-1uhffao{padding:5px 15px;display:flex;flex-flow:column nowrap;gap:0.5rem}.nav.svelte-1uhffao,.date.svelte-1uhffao{display:flex;justify-content:space-between;align-items:center}.left-nav.svelte-1uhffao{display:flex}.left-nav.svelte-1uhffao .clickable-icon{margin-right:0}.calendar-clickable.svelte-1uhffao{align-items:center;cursor:pointer;display:flex;justify-content:center}h3.svelte-1uhffao{margin:0}.day-view.svelte-1uhffao .flag-container > .flag{padding-left:0.5rem}.title-container.svelte-1uhffao{display:flex;flex-flow:column nowrap;align-items:center;justify-content:center}.day-number.svelte-1uhffao{font-size:small}")}function Ud(t,e,n){let r=t.slice();return r[24]=e[n][0],r[25]=e[n][1],r}function zd(t){let e,n,r,a;return{c(){e=F("div"),n=F("em"),r=be("Day "),a=be(t[8]),w(e,"class","day-number svelte-1uhffao")},m(i,o){H(i,e,o),D(e,n),D(n,r),D(n,a)},p(i,o){o&256&&De(a,i[8])},d(i){i&&V(e)}}}function Yd(t){let e,n,r=t[5],a=[];for(let o=0;o<r.length;o+=1)a[o]=Zd(Ud(t,r,o));let i=o=>G(a[o],1,1,()=>{a[o]=null});return{c(){e=F("div");for(let o=0;o<a.length;o+=1)a[o].c();w(e,"class","moon-container")},m(o,l){H(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&32){r=o[5];let s;for(s=0;s<r.length;s+=1){let d=Ud(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=Zd(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(ke(),s=r.length;s<a.length;s+=1)i(s);xe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)G(a[l]);n=!1},d(o){o&&V(e),Ke(a,o)}}}function Zd(t){let e,n;return e=new Tn({props:{moon:t[24],phase:t[25]}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a&32&&(i.moon=r[24]),a&32&&(i.phase=r[25]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function Sv(t){let e,n,r,a,i,o,l,s,d,u,c,h,v,m,_,g,S,C,T,M,k,E,b,N,x,L,O,U,te,he,ee=t[0]&&zd(t),se=t[4]&&t[5]&&t[5].length&&Yd(t);return O=new pi({props:{events:t[3].events,categories:t[7],date:t[2],dayView:!0,calendar:t[1]}}),O.$on("event-click",t[19]),O.$on("event-mouseover",t[20]),O.$on("event-context",t[21]),{c(){e=F("div"),n=F("div"),r=F("div"),a=F("div"),o=W(),l=F("div"),d=W(),u=F("div"),h=W(),v=F("div"),m=F("div"),g=W(),S=F("div"),C=F("h3"),T=F("span"),M=be(t[6]),k=W(),ee&&ee.c(),E=W(),b=F("div"),x=W(),se&&se.c(),L=W(),oe(O.$$.fragment),w(r,"class","left-nav svelte-1uhffao"),w(n,"class","nav svelte-1uhffao"),w(m,"class","arrow calendar-clickable svelte-1uhffao"),w(m,"aria-label","Previous"),w(T,"class","current"),w(C,"class","fantasy-title title svelte-1uhffao"),w(S,"class","title-container svelte-1uhffao"),w(b,"class","arrow right calendar-clickable svelte-1uhffao"),w(b,"aria-label","Next"),w(v,"class","date svelte-1uhffao"),w(e,"class","day-view svelte-1uhffao")},m(Y,z){H(Y,e,z),D(e,n),D(n,r),D(r,a),D(r,o),D(r,l),D(n,d),D(n,u),D(e,h),D(e,v),D(v,m),D(v,g),D(v,S),D(S,C),D(C,T),D(T,M),D(S,k),ee&&ee.m(S,null),D(v,E),D(v,b),D(e,x),se&&se.m(e,null),D(e,L),ae(O,e,null),U=!0,te||(he=[me(i=t[11].call(null,a)),re(a,"click",t[15]),me(s=t[12].call(null,l)),me(c=t[10].call(null,u)),re(u,"click",t[16]),me(_=t[13].call(null,m)),re(m,"click",t[17]),me(N=t[14].call(null,b)),re(b,"click",t[18])],te=!0)},p(Y,[z]){(!U||z&64)&&De(M,Y[6]),Y[0]?ee?ee.p(Y,z):(ee=zd(Y),ee.c(),ee.m(S,null)):ee&&(ee.d(1),ee=null),Y[4]&&Y[5]&&Y[5].length?se?(se.p(Y,z),z&48&&j(se,1)):(se=Yd(Y),se.c(),j(se,1),se.m(e,L)):se&&(ke(),G(se,1,1,()=>{se=null}),xe());let K={};z&8&&(K.events=Y[3].events),z&128&&(K.categories=Y[7]),z&4&&(K.date=Y[2]),z&2&&(K.calendar=Y[1]),O.$set(K)},i(Y){U||(j(se),j(O.$$.fragment,Y),U=!0)},o(Y){G(se),G(O.$$.fragment,Y),U=!1},d(Y){Y&&V(e),ee&&ee.d(),se&&se.d(),ne(O),te=!1,Ee(he)}}}function Bv(t,e,n){let r,a,i,o,l,s,{displayDayNumber:d}=e,u=Xe("calendar"),c;u.subscribe(O=>{n(1,c=O)});let h;Xe("displayMoons").subscribe(O=>n(4,h=O)),c.on("day-update",()=>{n(2,a=c.viewing),n(6,r=c.viewedDate),n(3,i=c.getDayForDate(a)),n(5,l=i.moons)});let m=Te(),_=O=>{new Sr.ExtraButtonComponent(O).setIcon("cross").setTooltip("Close")},g=O=>{new Sr.ExtraButtonComponent(O).setIcon("fantasy-calendar-reveal").setTooltip("Show on Calendar").onClick(()=>{n(1,c.displayed.year=c.viewing.year,c),c.setCurrentMonth(c.viewing.month)})},S=O=>{new Sr.ExtraButtonComponent(O).setIcon("plus-with-circle").setTooltip("New Event").onClick(()=>m("event",a))},C=O=>{new Sr.ExtraButtonComponent(O).setIcon("left-arrow")},T=O=>{new Sr.ExtraButtonComponent(O).setIcon("right-arrow")},M=()=>m("reveal"),k=()=>m("close"),E=()=>c.goToPreviousDay(),b=()=>c.goToNextDay();function N(O){we.call(this,t,O)}function x(O){we.call(this,t,O)}function L(O){we.call(this,t,O)}return t.$$set=O=>{"displayDayNumber"in O&&n(0,d=O.displayDayNumber)},t.$$.update=()=>{if(t.$$.dirty&2){e:n(6,r=c.viewedDate)}if(t.$$.dirty&2){e:n(2,a=c.viewing)}if(t.$$.dirty&6){e:n(3,i=c.getDayForDate(a))}if(t.$$.dirty&6){e:n(8,o=c.dayNumberForDate(a))}if(t.$$.dirty&8){e:n(5,l=i.moons)}if(t.$$.dirty&2){e:n(7,s=c.categories)}},[d,c,a,i,h,l,r,s,o,m,_,g,S,C,T,M,k,E,b,N,x,L]}var Kd=class extends de{constructor(e){super();fe(this,e,Bv,Sv,le,{displayDayNumber:0},Tv)}},Qd=Kd;function Nv(t){ve(t,"svelte-1gou5hh",".dot.svelte-1gou5hh{display:inline-block;min-height:6px;min-width:6px;height:6px;width:6px;margin:0 2px}.active.svelte-1gou5hh{color:var(--text-on-accent)}")}function Mv(t){let e,n,r,a;return{c(){e=en("svg"),n=en("circle"),w(n,"stroke",r=t[2]??"currentColor"),w(n,"fill",a=t[2]??"currentColor"),w(n,"cx","3"),w(n,"cy","3"),w(n,"r","2"),w(e,"class","dot svelte-1gou5hh"),w(e,"viewBox","0 0 6 6"),w(e,"xmlns","http://www.w3.org/2000/svg"),ge(e,"filled",t[0]),ge(e,"active",t[1])},m(i,o){H(i,e,o),D(e,n)},p(i,[o]){o&4&&r!==(r=i[2]??"currentColor")&&w(n,"stroke",r),o&4&&a!==(a=i[2]??"currentColor")&&w(n,"fill",a),o&1&&ge(e,"filled",i[0]),o&2&&ge(e,"active",i[1])},i:J,o:J,d(i){i&&V(e)}}}function Iv(t,e,n){let{isFilled:r=!0}=e,{isActive:a=!1}=e,{color:i}=e;return t.$$set=o=>{"isFilled"in o&&n(0,r=o.isFilled),"isActive"in o&&n(1,a=o.isActive),"color"in o&&n(2,i=o.color)},[r,a,i]}var Xd=class extends de{constructor(e){super();fe(this,e,Iv,Mv,le,{isFilled:0,isActive:1,color:2},Nv)}},$d=Xd;function Ov(t){ve(t,"svelte-1w3ytba",".dots-container.svelte-1w3ytba{width:100%}.dot-container.svelte-1w3ytba{display:flex;flex-flow:row nowrap;width:fit-content;margin:auto;line-height:6px;min-height:6px}.centered.svelte-1w3ytba{justify-content:center;align-items:center}.overflow.svelte-1w3ytba{color:var(--text-muted);font-size:xx-small;display:flex;justify-content:flex-end;width:100%;line-height:1.25}")}function Jd(t){let e,n,r,a;return{c(){e=F("div"),w(e,"class","dot-container centered svelte-1w3ytba")},m(i,o){H(i,e,o),r||(a=me(n=t[2].call(null,e)),r=!0)},d(i){i&&V(e),r=!1,a()}}}function ef(t){let e,n,r;return{c(){e=F("span"),n=be("+"),r=be(t[1])},m(a,i){H(a,e,i),D(e,n),D(e,r)},p(a,i){i&2&&De(r,a[1])},d(a){a&&V(e)}}}function qv(t){let e,n=t[0],r,a,i=Jd(t),o=t[1]>0&&ef(t);return{c(){e=F("div"),i.c(),r=W(),a=F("div"),o&&o.c(),w(a,"class","overflow svelte-1w3ytba"),w(e,"class","dots-container svelte-1w3ytba")},m(l,s){H(l,e,s),i.m(e,null),D(e,r),D(e,a),o&&o.m(a,null)},p(l,[s]){s&1&&le(n,n=l[0])&&(i.d(1),i=Jd(l),i.c(),i.m(e,r)),l[1]>0?o?o.p(l,s):(o=ef(l),o.c(),o.m(a,null)):o&&(o.d(1),o=null)},i:J,o:J,d(l){l&&V(e),i.d(l),o&&o.d()}}}function Rv(t,e,n){let{events:r=[]}=e,{categories:a}=e,{calendar:i}=e,o=0,l,s=0,d=c=>{if(l=c,r.length){let h=c.parentElement?.getBoundingClientRect()?.width;if(!h||Math.floor(h)==Math.floor(s))return;s=h;let v=h;c.empty(),n(1,o=0);for(let m of r)if(new $d({target:c,props:{color:u(m)}}),v=h-c.getBoundingClientRect().width,v<0){c.lastElementChild.detach(),n(1,o=r.length-r.indexOf(m));break}else if(v==0){n(1,o=r.length-r.indexOf(m)-1);break}}};i.on("view-resized",()=>{!l||d(l)});let u=c=>a.find(h=>h.id==c.category)?.color;return t.$$set=c=>{"events"in c&&n(0,r=c.events),"categories"in c&&n(3,a=c.categories),"calendar"in c&&n(4,i=c.calendar)},[r,o,d,a,i]}var tf=class extends de{constructor(e){super();fe(this,e,Rv,qv,le,{events:0,categories:3,calendar:4},Ov)}},nf=tf;function Lv(t){ve(t,"svelte-3pptg2",".day.svelte-3pptg2{background-color:transparent;border:2px solid transparent;border-radius:4px;color:var(--color-text-day);cursor:pointer;font-size:0.8em;height:100%;padding:2px;position:relative;text-align:center;vertical-align:baseline;overflow:visible;display:flex;flex-flow:column nowrap}.active.svelte-3pptg2{background-color:var(--background-secondary)}.viewing.svelte-3pptg2{border:2px solid var(--background-modifier-border)}.adjacent-month.svelte-3pptg2{opacity:0.25}")}function rf(t,e,n){let r=t.slice();return r[20]=e[n][0],r[21]=e[n][1],r}function Pv(t){let e,n;return e=new nf({props:{events:t[4],categories:t[9],calendar:t[0].calendar}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a&16&&(i.events=r[4]),a&512&&(i.categories=r[9]),a&1&&(i.calendar=r[0].calendar),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function jv(t){let e,n,r,a=t[5]&&t[10]&&t[10].length&&af(t);return n=new pi({props:{events:t[4],categories:t[9],date:t[8],calendar:t[0].calendar}}),n.$on("event-click",t[12]),n.$on("event-mouseover",t[13]),n.$on("event-context",t[14]),{c(){a&&a.c(),e=W(),oe(n.$$.fragment)},m(i,o){a&&a.m(i,o),H(i,e,o),ae(n,i,o),r=!0},p(i,o){i[5]&&i[10]&&i[10].length?a?(a.p(i,o),o&1056&&j(a,1)):(a=af(i),a.c(),j(a,1),a.m(e.parentNode,e)):a&&(ke(),G(a,1,1,()=>{a=null}),xe());let l={};o&16&&(l.events=i[4]),o&512&&(l.categories=i[9]),o&256&&(l.date=i[8]),o&1&&(l.calendar=i[0].calendar),n.$set(l)},i(i){r||(j(a),j(n.$$.fragment,i),r=!0)},o(i){G(a),G(n.$$.fragment,i),r=!1},d(i){a&&a.d(i),i&&V(e),ne(n,i)}}}function af(t){let e,n,r=t[10],a=[];for(let o=0;o<r.length;o+=1)a[o]=of(rf(t,r,o));let i=o=>G(a[o],1,1,()=>{a[o]=null});return{c(){e=F("div");for(let o=0;o<a.length;o+=1)a[o].c();w(e,"class","moon-container")},m(o,l){H(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&1024){r=o[10];let s;for(s=0;s<r.length;s+=1){let d=rf(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=of(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(ke(),s=r.length;s<a.length;s+=1)i(s);xe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)G(a[l]);n=!1},d(o){o&&V(e),Ke(a,o)}}}function of(t){let e,n;return e=new Tn({props:{moon:t[20],phase:t[21]}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a&1024&&(i.moon=r[20]),a&1024&&(i.phase=r[21]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function Vv(t){let e,n,r=t[0].number+"",a,i,o,l,s,d,u,c,h,v=[jv,Pv],m=[];function _(g,S){return g[2]?0:1}return o=_(t,-1),l=m[o]=v[o](t),{c(){e=F("div"),n=F("span"),a=be(r),i=W(),l.c(),w(e,"class",s=""+(Ji(t[1]?"adjacent-month fantasy-adjacent-month":"")+" svelte-3pptg2")),w(e,"aria-label",d=!t[2]&&t[4].length?`${t[4].length} event${t[4].length==1?"":"s"}`:void 0),ge(e,"day",!0),ge(e,"fantasy-day",!0),ge(e,"active",t[7]&&!t[1]),ge(e,"viewing",t[3]&&t[6]&&!t[1])},m(g,S){H(g,e,S),D(e,n),D(n,a),D(e,i),m[o].m(e,null),u=!0,c||(h=[re(e,"click",t[15]),re(e,"dblclick",t[16]),re(e,"contextmenu",t[17])],c=!0)},p(g,[S]){(!u||S&1)&&r!==(r=g[0].number+"")&&De(a,r);let C=o;o=_(g,S),o===C?m[o].p(g,S):(ke(),G(m[C],1,1,()=>{m[C]=null}),xe(),l=m[o],l?l.p(g,S):(l=m[o]=v[o](g),l.c()),j(l,1),l.m(e,null)),(!u||S&2&&s!==(s=""+(Ji(g[1]?"adjacent-month fantasy-adjacent-month":"")+" svelte-3pptg2")))&&w(e,"class",s),(!u||S&20&&d!==(d=!g[2]&&g[4].length?`${g[4].length} event${g[4].length==1?"":"s"}`:void 0))&&w(e,"aria-label",d),S&2&&ge(e,"day",!0),S&2&&ge(e,"fantasy-day",!0),S&130&&ge(e,"active",g[7]&&!g[1]),S&74&&ge(e,"viewing",g[3]&&g[6]&&!g[1])},i(g){u||(j(l),u=!0)},o(g){G(l),u=!1},d(g){g&&V(e),m[o].d(),c=!1,Ee(h)}}}function Hv(t,e,n){let r,a,i,o,l,s=Te(),{day:d}=e,{adjacent:u}=e,{fullView:c}=e,h=[],v;Xe("dayView").subscribe(b=>n(3,v=b));let _;Xe("displayMoons").subscribe(b=>n(5,_=b)),d.calendar.on("month-update",()=>{n(7,o=d.isCurrentDay),n(6,l=d.isDisplaying),n(4,h=d.events)}),d.calendar.on("day-update",()=>{n(7,o=d.isCurrentDay),n(6,l=d.isDisplaying)});function S(b){we.call(this,t,b)}function C(b){we.call(this,t,b)}function T(b){we.call(this,t,b)}let M=()=>s("day-click",d),k=()=>s("day-doubleclick",d),E=b=>s("day-context-menu",{day:d,evt:b});return t.$$set=b=>{"day"in b&&n(0,d=b.day),"adjacent"in b&&n(1,u=b.adjacent),"fullView"in b&&n(2,c=b.fullView)},t.$$.update=()=>{if(t.$$.dirty&3){e:u||n(4,h=d.events)}if(t.$$.dirty&1){e:n(10,r=d.moons)}if(t.$$.dirty&1){e:n(9,a=d.calendar.categories)}if(t.$$.dirty&1){e:n(8,i=d.date)}if(t.$$.dirty&1){e:n(7,o=d.isCurrentDay)}if(t.$$.dirty&1){e:n(6,l=d.isDisplaying)}if(t.$$.dirty&8){e:n(3,v)}},[d,u,c,v,h,_,l,o,i,a,r,s,S,C,T,M,k,E]}var sf=class extends de{constructor(e){super();fe(this,e,Hv,Vv,le,{day:0,adjacent:1,fullView:2},Lv)}},mi=sf;function Wv(t){ve(t,"svelte-1xujcmn",`.fantasy-month.svelte-1xujcmn{display:grid;grid-template-columns:repeat(
            var(--calendar-columns),
            var(--column-widths)
        );grid-auto-rows:var(--calendar-rows)}.full-view.svelte-1xujcmn{height:100%;margin-bottom:0.5rem}.month.svelte-1xujcmn{border-radius:1rem;padding:0.25rem}.month-name.svelte-1xujcmn{margin:0}.month.svelte-1xujcmn .fantasy-day.day{padding:0px}`)}function lf(t,e,n){let r=t.slice();return r[16]=e[n],r}function uf(t,e,n){let r=t.slice();return r[16]=e[n],r}function cf(t,e,n){let r=t.slice();return r[16]=e[n],r}function df(t){let e,n=t[1].name+"",r;return{c(){e=F("h3"),r=be(n),w(e,"class","month-name svelte-1xujcmn")},m(a,i){H(a,e,i),D(e,r)},p(a,i){i&2&&n!==(n=a[1].name+"")&&De(r,n)},d(a){a&&V(e)}}}function Gv(t){let e;return{c(){e=F("div")},m(n,r){H(n,e,r)},p:J,i:J,o:J,d(n){n&&V(e)}}}function Uv(t){let e,n;return e=new mi({props:{day:t[16],adjacent:!0,fullView:t[3]}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a&256&&(i.day=r[16]),a&8&&(i.fullView=r[3]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function ff(t){let e,n,r,a,i=[Uv,Gv],o=[];function l(s,d){return s[5]&&s[16]!=null?0:1}return e=l(t,-1),n=o[e]=i[e](t),{c(){n.c(),r=ct()},m(s,d){o[e].m(s,d),H(s,r,d),a=!0},p(s,d){let u=e;e=l(s,d),e===u?o[e].p(s,d):(ke(),G(o[u],1,1,()=>{o[u]=null}),xe(),n=o[e],n?n.p(s,d):(n=o[e]=i[e](s),n.c()),j(n,1),n.m(r.parentNode,r))},i(s){a||(j(n),a=!0)},o(s){G(n),a=!1},d(s){o[e].d(s),s&&V(r)}}}function hf(t){let e,n;return e=new mi({props:{day:t[16],adjacent:!1,fullView:t[3]}}),e.$on("day-click",t[10]),e.$on("day-doubleclick",t[11]),e.$on("day-context-menu",t[12]),e.$on("event-click",t[13]),e.$on("event-mouseover",t[14]),e.$on("event-context",t[15]),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a&128&&(i.day=r[16]),a&8&&(i.fullView=r[3]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function zv(t){let e;return{c(){e=F("div")},m(n,r){H(n,e,r)},p:J,i:J,o:J,d(n){n&&V(e)}}}function Yv(t){let e,n;return e=new mi({props:{day:t[16],adjacent:!0,fullView:t[3]}}),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a&64&&(i.day=r[16]),a&8&&(i.fullView=r[3]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function pf(t){let e,n,r,a,i=[Yv,zv],o=[];function l(s,d){return s[5]?0:1}return e=l(t,-1),n=o[e]=i[e](t),{c(){n.c(),r=ct()},m(s,d){o[e].m(s,d),H(s,r,d),a=!0},p(s,d){let u=e;e=l(s,d),e===u?o[e].p(s,d):(ke(),G(o[u],1,1,()=>{o[u]=null}),xe(),n=o[e],n?n.p(s,d):(n=o[e]=i[e](s),n.c()),j(n,1),n.m(r.parentNode,r))},i(s){a||(j(n),a=!0)},o(s){G(n),a=!1},d(s){o[e].d(s),s&&V(r)}}}function mf(t){let e,n,r,a,i=t[8],o=[];for(let m=0;m<i.length;m+=1)o[m]=ff(cf(t,i,m));let l=m=>G(o[m],1,1,()=>{o[m]=null}),s=t[7],d=[];for(let m=0;m<s.length;m+=1)d[m]=hf(uf(t,s,m));let u=m=>G(d[m],1,1,()=>{d[m]=null}),c=t[6],h=[];for(let m=0;m<c.length;m+=1)h[m]=pf(lf(t,c,m));let v=m=>G(h[m],1,1,()=>{h[m]=null});return{c(){e=F("div");for(let m=0;m<o.length;m+=1)o[m].c();n=W();for(let m=0;m<d.length;m+=1)d[m].c();r=W();for(let m=0;m<h.length;m+=1)h[m].c();w(e,"class","fantasy-month svelte-1xujcmn"),Qe(e,"--calendar-columns",t[2]),Qe(e,"--calendar-rows",t[3]?`${1/t[4]*100}%`:"1fr"),ge(e,"full-view",t[3]),ge(e,"year-view",t[0])},m(m,_){H(m,e,_);for(let g=0;g<o.length;g+=1)o[g].m(e,null);D(e,n);for(let g=0;g<d.length;g+=1)d[g].m(e,null);D(e,r);for(let g=0;g<h.length;g+=1)h[g].m(e,null);a=!0},p(m,_){if(_&296){i=m[8];let g;for(g=0;g<i.length;g+=1){let S=cf(m,i,g);o[g]?(o[g].p(S,_),j(o[g],1)):(o[g]=ff(S),o[g].c(),j(o[g],1),o[g].m(e,n))}for(ke(),g=i.length;g<o.length;g+=1)l(g);xe()}if(_&136){s=m[7];let g;for(g=0;g<s.length;g+=1){let S=uf(m,s,g);d[g]?(d[g].p(S,_),j(d[g],1)):(d[g]=hf(S),d[g].c(),j(d[g],1),d[g].m(e,r))}for(ke(),g=s.length;g<d.length;g+=1)u(g);xe()}if(_&104){c=m[6];let g;for(g=0;g<c.length;g+=1){let S=lf(m,c,g);h[g]?(h[g].p(S,_),j(h[g],1)):(h[g]=pf(S),h[g].c(),j(h[g],1),h[g].m(e,null))}for(ke(),g=c.length;g<h.length;g+=1)v(g);xe()}(!a||_&4)&&Qe(e,"--calendar-columns",m[2]),(!a||_&24)&&Qe(e,"--calendar-rows",m[3]?`${1/m[4]*100}%`:"1fr"),_&8&&ge(e,"full-view",m[3]),_&1&&ge(e,"year-view",m[0])},i(m){if(!a){for(let _=0;_<i.length;_+=1)j(o[_]);for(let _=0;_<s.length;_+=1)j(d[_]);for(let _=0;_<c.length;_+=1)j(h[_]);a=!0}},o(m){o=o.filter(Boolean);for(let _=0;_<o.length;_+=1)G(o[_]);d=d.filter(Boolean);for(let _=0;_<d.length;_+=1)G(d[_]);h=h.filter(Boolean);for(let _=0;_<h.length;_+=1)G(h[_]);a=!1},d(m){m&&V(e),Ke(o,m),Ke(d,m),Ke(h,m)}}}function Zv(t){let e,n,r=t[7],a,i,o,l=t[0]&&df(t),s=mf(t);return{c(){e=F("div"),l&&l.c(),n=W(),s.c(),w(e,"class","month svelte-1xujcmn"),w(e,"data-id",a=t[1].id),w(e,"id",i=`MONTH-${t[1].id}-${t[1].year}`),ge(e,"full-view",t[3])},m(d,u){H(d,e,u),l&&l.m(e,null),D(e,n),s.m(e,null),o=!0},p(d,[u]){d[0]?l?l.p(d,u):(l=df(d),l.c(),l.m(e,n)):l&&(l.d(1),l=null),u&128&&le(r,r=d[7])?(ke(),G(s,1,1,J),xe(),s=mf(d),s.c(),j(s),s.m(e,null)):s.p(d,u),(!o||u&2&&a!==(a=d[1].id))&&w(e,"data-id",a),(!o||u&2&&i!==(i=`MONTH-${d[1].id}-${d[1].year}`))&&w(e,"id",i),u&8&&ge(e,"full-view",d[3])},i(d){o||(j(s),o=!0)},o(d){G(s),o=!1},d(d){d&&V(e),l&&l.d(),s.d(d)}}}function Kv(t,e,n){let r,a,i,o,{yearView:l=!1}=e,{month:s}=e,{columns:d}=e,{fullView:u=!1}=e,{weeks:c}=e,{showPad:h=!0}=e;function v(T){we.call(this,t,T)}function m(T){we.call(this,t,T)}function _(T){we.call(this,t,T)}function g(T){we.call(this,t,T)}function S(T){we.call(this,t,T)}function C(T){we.call(this,t,T)}return t.$$set=T=>{"yearView"in T&&n(0,l=T.yearView),"month"in T&&n(1,s=T.month),"columns"in T&&n(2,d=T.columns),"fullView"in T&&n(3,u=T.fullView),"weeks"in T&&n(4,c=T.weeks),"showPad"in T&&n(5,h=T.showPad)},t.$$.update=()=>{if(t.$$.dirty&2){e:n(9,r=s.calendar.getPaddedDaysForMonth(s))}if(t.$$.dirty&512){e:n(8,a=r.previous)}if(t.$$.dirty&2){e:n(7,i=s.days)}if(t.$$.dirty&512){e:n(6,o=r.next)}},[l,s,d,u,c,h,o,i,a,r,v,m,_,g,S,C]}var gf=class extends de{constructor(e){super();fe(this,e,Kv,Zv,le,{yearView:0,month:1,columns:2,fullView:3,weeks:4,showPad:5},Wv)}},Br=gf;var gi=Oe(require("obsidian"));function Qv(t){ve(t,"svelte-131055d",".fantasy-nav.nav.nav.svelte-131055d{padding:10px 0px;margin:0;display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:stretch}.container.svelte-131055d{display:flex;align-items:center}.fantasy-title.svelte-131055d{margin:0;line-height:1.25}.fantasy-right-nav.svelte-131055d{display:flex;justify-content:center;align-items:flex-start}.calendar-clickable.svelte-131055d{align-items:center;cursor:pointer;display:flex;justify-content:center}.title-container.svelte-131055d{display:flex;flex-flow:column nowrap;align-items:flex-start}")}function Xv(t){let e,n,r,a,i,o,l,s,d,u,c,h,v,m,_,g,S,C,T,M,k,E,b,N,x;return{c(){e=F("div"),n=F("div"),r=F("h3"),a=F("span"),i=be(t[0]),o=W(),l=F("span"),s=be(t[1]),d=W(),u=F("div"),c=F("div"),h=F("div"),m=W(),_=F("div"),g=F("span"),g.textContent="Today",C=W(),T=F("div"),k=W(),E=F("div"),w(a,"class","fantasy-month month"),w(l,"class","fantasy-year year"),w(r,"class","fantasy-title title svelte-131055d"),w(n,"class","title-container svelte-131055d"),w(h,"class","arrow calendar-clickable svelte-131055d"),w(h,"aria-label","Previous Month"),w(_,"class","reset-button calendar-clickable svelte-131055d"),w(_,"aria-label",S="Today is "+t[2]),w(T,"class","arrow right calendar-clickable svelte-131055d"),w(T,"aria-label","Next Month"),w(E,"class","calendar-clickable svelte-131055d"),w(E,"aria-label","Calendar Settings"),w(c,"class","container svelte-131055d"),w(u,"class","right-nav fantasy-right-nav svelte-131055d"),w(e,"class","fantasy-nav nav svelte-131055d")},m(L,O){H(L,e,O),D(e,n),D(n,r),D(r,a),D(a,i),D(r,o),D(r,l),D(l,s),D(e,d),D(e,u),D(u,c),D(c,h),D(c,m),D(c,_),D(_,g),D(c,C),D(c,T),D(c,k),D(c,E),N||(x=[me(v=t[4].call(null,h)),re(h,"click",t[7]),re(_,"click",t[8]),me(M=t[5].call(null,T)),re(T,"click",t[9]),me(b=t[6].call(null,E)),re(E,"click",t[10])],N=!0)},p(L,[O]){O&1&&De(i,L[0]),O&2&&De(s,L[1]),O&4&&S!==(S="Today is "+L[2])&&w(_,"aria-label",S)},i:J,o:J,d(L){L&&V(e),N=!1,Ee(x)}}}function $v(t,e,n){let r=Te(),{month:a}=e,{year:i}=e,{current:o}=e,l=m=>{new gi.ExtraButtonComponent(m).setIcon("left-arrow")},s=m=>{new gi.ExtraButtonComponent(m).setIcon("right-arrow")},d=m=>{new gi.ExtraButtonComponent(m).setIcon("gear")},u=()=>r("previous"),c=()=>r("reset"),h=m=>r("next"),v=m=>r("settings",m);return t.$$set=m=>{"month"in m&&n(0,a=m.month),"year"in m&&n(1,i=m.year),"current"in m&&n(2,o=m.current)},[a,i,o,r,l,s,d,u,c,h,v]}var yf=class extends de{constructor(e){super();fe(this,e,$v,Xv,le,{month:0,year:1,current:2},Qv)}},vf=yf;var yi=Oe(require("obsidian"));function Jv(t){ve(t,"svelte-i3pajt","#calendar-container .fantasy-nav.nav.nav.svelte-i3pajt{padding:0;margin:0;display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center;position:sticky;top:0;z-index:2}.fantasy-year-nav.svelte-i3pajt{display:flex;align-items:center;margin-right:auto}.container.svelte-i3pajt{display:flex;align-items:center}.fantasy-title.svelte-i3pajt{margin:0}.fantasy-right-nav.svelte-i3pajt{display:flex;justify-content:center;align-items:flex-start}.calendar-clickable.svelte-i3pajt{align-items:center;cursor:pointer;display:flex;justify-content:center}")}function bf(t){let e,n,r,a;return{c(){e=F("div"),w(e,"class","arrow calendar-clickable svelte-i3pajt"),w(e,"aria-label","Previous Year")},m(i,o){H(i,e,o),r||(a=[me(n=t[4].call(null,e)),re(e,"click",t[7])],r=!0)},p:J,d(i){i&&V(e),r=!1,Ee(a)}}}function wf(t){let e,n,r,a;return{c(){e=F("div"),w(e,"class","arrow right calendar-clickable svelte-i3pajt"),w(e,"aria-label","Next Year")},m(i,o){H(i,e,o),r||(a=[me(n=t[5].call(null,e)),re(e,"click",t[9])],r=!0)},p:J,d(i){i&&V(e),r=!1,Ee(a)}}}function e1(t){let e,n,r,a,i,o,l,s,d,u,c,h,v,m,_,g,S,C,T=t[1]&&bf(t),M=t[1]&&wf(t);return{c(){e=F("div"),n=F("div"),r=F("h2"),a=F("span"),i=be(t[0]),o=W(),l=F("div"),s=F("div"),T&&T.c(),d=W(),u=F("div"),c=F("span"),c.textContent="Today",v=W(),M&&M.c(),m=W(),_=F("div"),w(a,"class","fantasy-year"),w(r,"class","fantasy-title svelte-i3pajt"),w(n,"class","fantasy-year-nav svelte-i3pajt"),w(u,"class","reset-button calendar-clickable svelte-i3pajt"),w(u,"aria-label",h="Today is "+t[2]),w(_,"class","calendar-clickable svelte-i3pajt"),w(_,"aria-label","Calendar Settings"),w(s,"class","container svelte-i3pajt"),w(l,"class","right-nav fantasy-right-nav svelte-i3pajt"),w(e,"class","fantasy-nav nav svelte-i3pajt")},m(k,E){H(k,e,E),D(e,n),D(n,r),D(r,a),D(a,i),D(e,o),D(e,l),D(l,s),T&&T.m(s,null),D(s,d),D(s,u),D(u,c),D(s,v),M&&M.m(s,null),D(s,m),D(s,_),S||(C=[re(u,"click",t[8]),me(g=t[6].call(null,_)),re(_,"click",t[10])],S=!0)},p(k,[E]){E&1&&De(i,k[0]),k[1]?T?T.p(k,E):(T=bf(k),T.c(),T.m(s,d)):T&&(T.d(1),T=null),E&4&&h!==(h="Today is "+k[2])&&w(u,"aria-label",h),k[1]?M?M.p(k,E):(M=wf(k),M.c(),M.m(s,m)):M&&(M.d(1),M=null)},i:J,o:J,d(k){k&&V(e),T&&T.d(),M&&M.d(),S=!1,Ee(C)}}}function t1(t,e,n){let r=Te(),{year:a}=e,{arrows:i=!1}=e,{current:o}=e,l=m=>{new yi.ExtraButtonComponent(m).setIcon("left-arrow")},s=m=>{new yi.ExtraButtonComponent(m).setIcon("right-arrow")},d=m=>{new yi.ExtraButtonComponent(m).setIcon("gear")},u=()=>r("previous"),c=()=>r("reset"),h=m=>r("next"),v=m=>r("settings",m);return t.$$set=m=>{"year"in m&&n(0,a=m.year),"arrows"in m&&n(1,i=m.arrows),"current"in m&&n(2,o=m.current)},[a,i,o,r,l,s,d,u,c,h,v]}var Df=class extends de{constructor(e){super();fe(this,e,t1,e1,le,{year:0,arrows:1,current:2},Jv)}},vi=Df;function n1(t){ve(t,"svelte-15hvixf",".year-view.svelte-15hvixf{height:100%;position:relative;display:flex;flex-direction:column}.year.svelte-15hvixf{display:grid;grid-template-columns:1fr 1fr 1fr;gap:1rem;overflow:auto;flex:1}.year.svelte-15hvixf:not(.full-view){grid-template-columns:1fr}")}function r1(t){let e,n,r,a,i,o,l;return n=new vi({props:{year:t[3],current:t[0]}}),n.$on("next",t[9]),n.$on("previous",t[10]),n.$on("reset",t[11]),n.$on("settings",t[12]),{c(){e=F("div"),oe(n.$$.fragment),r=W(),a=F("div"),w(a,"class","year svelte-15hvixf"),ge(a,"full-view",t[1]),w(e,"class","year-view svelte-15hvixf")},m(s,d){H(s,e,d),ae(n,e,null),D(e,r),D(e,a),t[13](a),i=!0,o||(l=re(a,"scroll",t[5],{once:!0}),o=!0)},p(s,[d]){let u={};d&8&&(u.year=s[3]),d&1&&(u.current=s[0]),n.$set(u),d&2&&ge(a,"full-view",s[1])},i(s){i||(j(n.$$.fragment,s),i=!0)},o(s){G(n.$$.fragment,s),i=!1},d(s){s&&V(e),ne(n),t[13](null),o=!1,l()}}}function a1(t,e,n){let r,a=Te(),{current:i}=e,{year:o}=e,{columns:l}=e,{fullView:s}=e,d,u,c,h=Xe("calendar"),v;h.subscribe(z=>{n(8,v=z)});let m=[],_=Xe("dayView"),g=Xe("displayMoons"),S=new IntersectionObserver((z,K)=>{K===S&&(!z.length||!z[0].isIntersecting||(S.disconnect(),!(!v.canGoToNextYear(c.year)&&c.number===v.data.months.length-1)&&(M(),L(m.shift()),C())))},{root:d,rootMargin:"0px",threshold:.25}),C=()=>{let z=d.children[d.children.length-2];!z||S.observe(z)},T=new IntersectionObserver((z,K)=>{if(K!==T||!z&&!z.length||z[0].isIntersecting)return;let ye=d.getBoundingClientRect();z[0].boundingClientRect.top<ye.top&&(n(6,o+=1),b.observe(z[0].target),T.disconnect())},{root:d,rootMargin:"0px",threshold:0}),M=(z=!0)=>{if(!(!v.canGoToNextYear(c.year)&&c.number===v.data.months.length-1)){if(c=v.getMonth(c.number+1,c.year),c.number===0&&!(d.lastElementChild instanceof HTMLHeadingElement)){let K=d.createEl("h2",{text:v.getNameForYear(c.year),cls:"fantasy-title"});m.push(K),T.disconnect(),T.observe(K)}m.push(x(c,!1)),z&&(u=v.getMonth((u?.number??0)+1,u?.year??1)),E()}},k=new IntersectionObserver((z,K)=>{K===k&&(!z.length||!z[0].isIntersecting||(k.disconnect(),!!u&&(N(),L(m.pop()),E())))},{root:d,rootMargin:"0px",threshold:.25}),E=()=>{let z=d.children[1];!z||k.observe(z)},b=new IntersectionObserver((z,K)=>{K===b&&(!z&&!z.length||z[0].isIntersecting&&(n(6,o-=1),T.observe(z[0].target),b.disconnect()))},{root:d,rootMargin:"0px",threshold:0}),N=(z=!0)=>{if(u=v.getMonth(u.number-1,u.year),!!u){if(m.unshift(x(u,!0)),u.number===0&&!(d.firstElementChild instanceof HTMLHeadingElement)){let K=createEl("h2",{text:v.getNameForYear(u.year),cls:"fantasy-title"});d.prepend(K),m.unshift(K),b.disconnect(),b.observe(K)}z&&(c=v.getMonth(c.number-1,c.year)),C()}},x=(z,K)=>{let ye=new Br({target:d,anchor:K?d.children[0]:null,props:{month:z,fullView:!1,yearView:!0,columns:l,weeks:v.weekdays.length,showPad:!1},context:new Map([["dayView",_],["displayMoons",g]])});return ye.$on("day-click",ue=>a("day-click",ue.detail)),ye.$on("day-doubleclick",ue=>a("day-doubleclick",ue.detail)),ye.$on("day-context-menu",ue=>a("day-context-menu",ue.detail)),ye.$on("event-mouseover",ue=>a("event-mouseover",ue.detail)),ye.$on("event-mouseover",ue=>a("event-mouseover",ue.detail)),ye},L=z=>{z instanceof HTMLHeadingElement?z.detach():z.$destroy()},O=async(z=!1)=>{for(let ye of m)L(ye);m.splice(0,m.length),d.empty(),await Ln(),n(6,o=v.current.year),u=v.getMonth(v.displayed.month-1,v.displayed.year),c=u;for(let ye=0;ye<v.data.months.length;ye++)M(!1);N(!1),await Ln(),d.querySelector(`#MONTH-${v.currentMonth.id}-${o}`).scrollIntoView(!0),z&&U()};ro(()=>{k.disconnect(),S.disconnect(),b.disconnect(),T.disconnect()}),qn(O);let U=async()=>{await Ln(),k.observe(d.children[1]),S.observe(d.children[d.children.length-2])};function te(z){we.call(this,t,z)}function he(z){we.call(this,t,z)}let ee=()=>O(!0);function se(z){we.call(this,t,z)}function Y(z){cr[z?"unshift":"push"](()=>{d=z,n(2,d)})}return t.$$set=z=>{"current"in z&&n(0,i=z.current),"year"in z&&n(6,o=z.year),"columns"in z&&n(7,l=z.columns),"fullView"in z&&n(1,s=z.fullView)},t.$$.update=()=>{if(t.$$.dirty&320){e:n(3,r=v.getNameForYear(o))}},[i,s,d,r,O,U,o,l,v,te,he,ee,se,Y]}var _f=class extends de{constructor(e){super();fe(this,e,a1,r1,le,{current:0,year:6,columns:7,fullView:1},n1)}},Ef=_f;var rs=Oe(require("obsidian"));function i1(t){ve(t,"svelte-ztrrn8",".year.svelte-ztrrn8{display:grid;grid-template-columns:1fr 1fr 1fr;gap:1rem;overflow:auto;flex:1}.year.svelte-ztrrn8:not(.full-view){grid-template-columns:1fr}")}function Cf(t,e,n){let r=t.slice();return r[8]=e[n],r}function Af(t){let e,n;return e=new Br({props:{month:t[8],fullView:!1,yearView:!0,columns:t[2],weeks:t[8].calendar.weekdays.length,showPad:!1}}),e.$on("day-click",t[3]),e.$on("day-doubleclick",t[4]),e.$on("day-context-menu",t[5]),e.$on("event-click",t[6]),e.$on("event-mouseover",t[7]),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a&2&&(i.month=r[8]),a&4&&(i.columns=r[2]),a&2&&(i.weeks=r[8].calendar.weekdays.length),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function o1(t){let e,n,r=t[1],a=[];for(let o=0;o<r.length;o+=1)a[o]=Af(Cf(t,r,o));let i=o=>G(a[o],1,1,()=>{a[o]=null});return{c(){e=F("div");for(let o=0;o<a.length;o+=1)a[o].c();w(e,"class","year svelte-ztrrn8"),ge(e,"full-view",t[0])},m(o,l){H(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,[l]){if(l&6){r=o[1];let s;for(s=0;s<r.length;s+=1){let d=Cf(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=Af(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(ke(),s=r.length;s<a.length;s+=1)i(s);xe()}l&1&&ge(e,"full-view",o[0])},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)G(a[l]);n=!1},d(o){o&&V(e),Ke(a,o)}}}function s1(t,e,n){let{fullView:r}=e,{months:a}=e,{columns:i}=e;function o(c){we.call(this,t,c)}function l(c){we.call(this,t,c)}function s(c){we.call(this,t,c)}function d(c){we.call(this,t,c)}function u(c){we.call(this,t,c)}return t.$$set=c=>{"fullView"in c&&n(0,r=c.fullView),"months"in c&&n(1,a=c.months),"columns"in c&&n(2,i=c.columns)},[r,a,i,o,l,s,d,u]}var kf=class extends de{constructor(e){super();fe(this,e,s1,o1,le,{fullView:0,months:1,columns:2},i1)}},xf=kf;function l1(t){ve(t,"svelte-1xpvbi",".year-view.svelte-1xpvbi{height:100%;position:relative;display:flex;flex-direction:column}.year-container.svelte-1xpvbi{flex:1;overflow:auto}")}function u1(t){let e,n,r,a,i;return n=new vi({props:{year:t[2],current:t[0],arrows:!0}}),n.$on("next",t[9]),n.$on("previous",t[10]),n.$on("reset",t[11]),n.$on("settings",t[12]),{c(){e=F("div"),oe(n.$$.fragment),r=W(),a=F("div"),w(a,"class","year-container svelte-1xpvbi"),w(e,"class","year-view svelte-1xpvbi")},m(o,l){H(o,e,l),ae(n,e,null),D(e,r),D(e,a),t[13](a),i=!0},p(o,[l]){let s={};l&4&&(s.year=o[2]),l&1&&(s.current=o[0]),n.$set(s)},i(o){i||(j(n.$$.fragment,o),i=!0)},o(o){G(n.$$.fragment,o),i=!1},d(o){o&&V(e),ne(n),t[13](null)}}}function c1(t,e,n){let r,a=Te(),i=Xe("calendar"),o=Xe("dayView"),l=Xe("displayMoons"),s;i.subscribe(x=>{n(8,s=x)});let{year:d}=e,{current:u}=e,{columns:c}=e,h,v=(x,L=!1)=>{let O=s.getMonthsForYear(x),U=new xf({target:h,anchor:L?h.children[0]:null,props:{months:O,fullView:!0,columns:c},context:new Map([["dayView",o],["displayMoons",l]])});return U.$on("day-click",te=>a("day-click",te.detail)),U.$on("day-doubleclick",te=>a("day-doubleclick",te.detail)),U.$on("day-context-menu",te=>a("day-context-menu",te.detail)),U.$on("event-mouseover",te=>a("event-mouseover",te.detail)),U.$on("event-mouseover",te=>a("event-mouseover",te.detail)),U},m=x=>{x instanceof HTMLHeadingElement?x.detach():x.$destroy()},_=[],g=()=>{if(!s.canGoToNextYear(d)){new rs.Notice("This is the last year. Additional years can be created in settings.");return}n(6,d=d+1),T(d)},S=()=>{if(d===1){new rs.Notice("This is the earliest year.");return}n(6,d=d-1),T(d)},C=()=>{n(6,d=s.current.year),T(d)},T=async x=>{_.forEach(L=>m(L)),h.empty(),await Ln(),x=x,_.push(v(x))};qn(()=>_.push(v(d)));let M=()=>g(),k=()=>S(),E=()=>C();function b(x){we.call(this,t,x)}function N(x){cr[x?"unshift":"push"](()=>{h=x,n(1,h)})}return t.$$set=x=>{"year"in x&&n(6,d=x.year),"current"in x&&n(0,u=x.current),"columns"in x&&n(7,c=x.columns)},t.$$.update=()=>{if(t.$$.dirty&320){e:n(2,r=s.getNameForYear(d))}},[u,h,r,g,S,C,d,c,s,M,k,E,b,N]}var Ff=class extends de{constructor(e){super();fe(this,e,c1,u1,le,{year:6,current:0,columns:7},l1)}},Tf=Ff;function d1(t){ve(t,"svelte-1kty1w6","#calendar-container.year-view.svelte-1kty1w6.svelte-1kty1w6{height:100%}#calendar-container.fantasy-calendar.full-view.svelte-1kty1w6.svelte-1kty1w6{width:100%;padding:0 0.5rem 0.5rem;height:100%;display:flex;flex-flow:column}.fantasy-calendar.full-view.svelte-1kty1w6 .month-container.svelte-1kty1w6{height:100%}.month-container.svelte-1kty1w6.svelte-1kty1w6{display:flex}.month-view.svelte-1kty1w6.svelte-1kty1w6{flex-grow:2}.weeks.svelte-1kty1w6.svelte-1kty1w6{display:grid;grid-template-rows:auto 1fr}.week-num-container.svelte-1kty1w6.svelte-1kty1w6{display:grid;grid-template-rows:repeat(var(--calendar-rows), auto);padding:0.25rem 0}.week-num.svelte-1kty1w6.svelte-1kty1w6{background-color:transparent;border:2px solid transparent;border-radius:4px;color:var(--color-text-day);cursor:pointer;font-size:0.8em;height:100%;padding:2px;position:relative;text-align:center;vertical-align:baseline;overflow:visible}.weekdays.svelte-1kty1w6.svelte-1kty1w6{display:grid;grid-template-columns:repeat(var(--calendar-columns), 1fr);grid-template-rows:auto;padding:0 0.25rem;gap:2px}.weekday.svelte-1kty1w6.svelte-1kty1w6{background-color:var(--color-background-heading);color:var(--color-text-heading);font-size:0.6em;letter-spacing:1px;padding:4px;text-transform:uppercase;text-align:center;border:2px solid transparent}hr.svelte-1kty1w6.svelte-1kty1w6{margin:1rem 0}.moon-container{display:flex;flex-flow:row wrap;align-items:center;justify-content:center}")}function Sf(t,e,n){let r=t.slice();return r[49]=e[n],r}function Bf(t,e,n){let r=t.slice();return r[52]=e[n],r}function f1(t){let e,n,r,a,i,o,l,s,d,u;e=new vf({props:{month:t[6].name,year:t[9],current:t[3].displayedDate}}),e.$on("next",t[31]),e.$on("previous",t[32]),e.$on("reset",t[33]),e.$on("settings",t[34]);let c=t[5]&&Nf(t),h=t[11],v=[];for(let m=0;m<h.length;m+=1)v[m]=If(Sf(t,h,m));return d=new Br({props:{columns:t[11].length,weeks:t[7],month:t[6],fullView:t[1]}}),d.$on("day-click",t[35]),d.$on("day-doubleclick",t[36]),d.$on("day-context-menu",t[37]),d.$on("event-click",t[38]),d.$on("event-mouseover",t[39]),d.$on("event-context",t[40]),{c(){oe(e.$$.fragment),n=W(),r=F("div"),a=F("div"),c&&c.c(),i=W(),o=F("div"),l=F("div");for(let m=0;m<v.length;m+=1)v[m].c();s=W(),oe(d.$$.fragment),w(a,"class","weeks svelte-1kty1w6"),w(l,"class","weekdays svelte-1kty1w6"),w(o,"class","month-view svelte-1kty1w6"),w(r,"class","month-container svelte-1kty1w6")},m(m,_){ae(e,m,_),H(m,n,_),H(m,r,_),D(r,a),c&&c.m(a,null),D(r,i),D(r,o),D(o,l);for(let g=0;g<v.length;g+=1)v[g].m(l,null);D(o,s),ae(d,o,null),u=!0},p(m,_){let g={};if(_[0]&64&&(g.month=m[6].name),_[0]&512&&(g.year=m[9]),_[0]&8&&(g.current=m[3].displayedDate),e.$set(g),m[5]?c?c.p(m,_):(c=Nf(m),c.c(),c.m(a,null)):c&&(c.d(1),c=null),_[0]&2048){h=m[11];let C;for(C=0;C<h.length;C+=1){let T=Sf(m,h,C);v[C]?v[C].p(T,_):(v[C]=If(T),v[C].c(),v[C].m(l,null))}for(;C<v.length;C+=1)v[C].d(1);v.length=h.length}let S={};_[0]&2048&&(S.columns=m[11].length),_[0]&128&&(S.weeks=m[7]),_[0]&64&&(S.month=m[6]),_[0]&2&&(S.fullView=m[1]),d.$set(S)},i(m){u||(j(e.$$.fragment,m),j(d.$$.fragment,m),u=!0)},o(m){G(e.$$.fragment,m),G(d.$$.fragment,m),u=!1},d(m){ne(e,m),m&&V(n),m&&V(r),c&&c.d(),Ke(v,m),ne(d)}}}function h1(t){let e,n;return e=new Tf({props:{year:t[10],columns:t[11].length,current:t[3].displayedDate}}),e.$on("next",t[22]),e.$on("previous",t[23]),e.$on("reset",t[24]),e.$on("settings",t[25]),e.$on("day-click",t[26]),e.$on("day-doubleclick",t[27]),e.$on("day-context-menu",t[28]),e.$on("event-click",t[29]),e.$on("event-mouseover",t[30]),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a[0]&1024&&(i.year=r[10]),a[0]&2048&&(i.columns=r[11].length),a[0]&8&&(i.current=r[3].displayedDate),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function p1(t){let e,n;return e=new Ef({props:{year:t[10],fullView:t[1],columns:t[11].length,current:t[3].displayedDate}}),e.$on("next",t[13]),e.$on("previous",t[14]),e.$on("reset",t[15]),e.$on("settings",t[16]),e.$on("day-click",t[17]),e.$on("day-doubleclick",t[18]),e.$on("day-context-menu",t[19]),e.$on("event-click",t[20]),e.$on("event-mouseover",t[21]),{c(){oe(e.$$.fragment)},m(r,a){ae(e,r,a),n=!0},p(r,a){let i={};a[0]&1024&&(i.year=r[10]),a[0]&2&&(i.fullView=r[1]),a[0]&2048&&(i.columns=r[11].length),a[0]&8&&(i.current=r[3].displayedDate),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){G(e.$$.fragment,r),n=!1},d(r){ne(e,r)}}}function Nf(t){let e,n,r,a=[...Array(t[7]).keys()],i=[];for(let o=0;o<a.length;o+=1)i[o]=Mf(Bf(t,a,o));return{c(){e=F("span"),e.textContent="W",n=W(),r=F("div");for(let o=0;o<i.length;o+=1)i[o].c();w(e,"class","week-num weekday fantasy-weekday svelte-1kty1w6"),w(r,"class","week-num-container svelte-1kty1w6")},m(o,l){H(o,e,l),H(o,n,l),H(o,r,l);for(let s=0;s<i.length;s+=1)i[s].m(r,null)},p(o,l){if(l[0]&384){a=[...Array(o[7]).keys()];let s;for(s=0;s<a.length;s+=1){let d=Bf(o,a,s);i[s]?i[s].p(d,l):(i[s]=Mf(d),i[s].c(),i[s].m(r,null))}for(;s<i.length;s+=1)i[s].d(1);i.length=a.length}},d(o){o&&V(e),o&&V(n),o&&V(r),Ke(i,o)}}}function Mf(t){let e,n=t[8]+1+t[52]+"",r;return{c(){e=F("span"),r=be(n),w(e,"class","week-num svelte-1kty1w6")},m(a,i){H(a,e,i),D(e,r)},p(a,i){i[0]&384&&n!==(n=a[8]+1+a[52]+"")&&De(r,n)},d(a){a&&V(e)}}}function If(t){let e,n=t[49].name.slice(0,3)+"",r;return{c(){e=F("span"),r=be(n),w(e,"class","weekday fantasy-weekday svelte-1kty1w6")},m(a,i){H(a,e,i),D(e,r)},p(a,i){i[0]&2048&&n!==(n=a[49].name.slice(0,3)+"")&&De(r,n)},d(a){a&&V(e)}}}function Of(t){let e,n,r,a;return r=new Qd({props:{displayDayNumber:t[4]}}),r.$on("close",t[41]),r.$on("event-click",t[42]),r.$on("event-mouseover",t[43]),r.$on("event-context",t[44]),r.$on("event",t[45]),{c(){e=F("hr"),n=W(),oe(r.$$.fragment),w(e,"class","svelte-1kty1w6")},m(i,o){H(i,e,o),H(i,n,o),ae(r,i,o),a=!0},p(i,o){let l={};o[0]&16&&(l.displayDayNumber=i[4]),r.$set(l)},i(i){a||(j(r.$$.fragment,i),a=!0)},o(i){G(r.$$.fragment,i),a=!1},d(i){i&&V(e),i&&V(n),ne(r,i)}}}function m1(t){let e,n,r,a,i,o,l=[p1,h1,f1],s=[];function d(c,h){return c[2]&&!c[1]?0:c[2]?1:2}n=d(t,[-1,-1]),r=s[n]=l[n](t);let u=t[0]&&!t[1]&&Of(t);return{c(){e=F("div"),r.c(),a=W(),u&&u.c(),i=ct(),w(e,"id","calendar-container"),w(e,"class","fantasy-calendar svelte-1kty1w6"),Qe(e,"--calendar-columns",t[3].weekdays.length),Qe(e,"--column-widths",1/t[3].weekdays.length*100+"%"),Qe(e,"--calendar-rows",t[3].weeksPerCurrentMonth),ge(e,"full-view",t[1]),ge(e,"year-view",t[2])},m(c,h){H(c,e,h),s[n].m(e,null),H(c,a,h),u&&u.m(c,h),H(c,i,h),o=!0},p(c,h){let v=n;n=d(c,h),n===v?s[n].p(c,h):(ke(),G(s[v],1,1,()=>{s[v]=null}),xe(),r=s[n],r?r.p(c,h):(r=s[n]=l[n](c),r.c()),j(r,1),r.m(e,null)),(!o||h[0]&8)&&Qe(e,"--calendar-columns",c[3].weekdays.length),(!o||h[0]&8)&&Qe(e,"--column-widths",1/c[3].weekdays.length*100+"%"),(!o||h[0]&8)&&Qe(e,"--calendar-rows",c[3].weeksPerCurrentMonth),h[0]&2&&ge(e,"full-view",c[1]),h[0]&4&&ge(e,"year-view",c[2]),c[0]&&!c[1]?u?(u.p(c,h),h[0]&3&&j(u,1)):(u=Of(c),u.c(),j(u,1),u.m(i.parentNode,i)):u&&(ke(),G(u,1,1,()=>{u=null}),xe())},i(c){o||(j(r),j(u),o=!0)},o(c){G(r),G(u),o=!1},d(c){c&&V(e),s[n].d(),c&&V(a),u&&u.d(c),c&&V(i)}}}function g1(t,e,n){let r,a,i,o,l,s,{fullView:d=!1}=e,{dayView:u=!1}=e,{yearView:c=!1}=e,{calendar:h}=e,{moons:v}=e,{displayDayNumber:m}=e,{displayWeeks:_}=e,g=hr(u),S=hr(v),C=hr(h);Rn("dayView",g),Rn("displayMoons",S),Rn("calendar",C),h.on("month-update",()=>{n(10,a=h.displayed.year),n(9,i=h.getNameForYear(h.displayed.year)),n(6,o=h.currentMonth),n(7,s=h.weeksOfMonth(o)),n(8,l=h.weekNumbersOfMonth(o))});let T=()=>h.goToNextYear(),M=()=>h.goToPreviousYear();function k(ie){we.call(this,t,ie)}function E(ie){we.call(this,t,ie)}function b(ie){we.call(this,t,ie)}function N(ie){we.call(this,t,ie)}function x(ie){we.call(this,t,ie)}function L(ie){we.call(this,t,ie)}function O(ie){we.call(this,t,ie)}let U=()=>h.goToNextYear(),te=()=>h.goToPreviousYear();function he(ie){we.call(this,t,ie)}function ee(ie){we.call(this,t,ie)}function se(ie){we.call(this,t,ie)}function Y(ie){we.call(this,t,ie)}function z(ie){we.call(this,t,ie)}function K(ie){we.call(this,t,ie)}function ye(ie){we.call(this,t,ie)}let ue=()=>h.goToNext(),Me=()=>h.goToPrevious();function We(ie){we.call(this,t,ie)}function rt(ie){we.call(this,t,ie)}function Pe(ie){we.call(this,t,ie)}function lt(ie){we.call(this,t,ie)}function et(ie){we.call(this,t,ie)}function Ae(ie){we.call(this,t,ie)}function je(ie){we.call(this,t,ie)}function St(ie){we.call(this,t,ie)}let Ht=()=>n(0,u=!1);function It(ie){we.call(this,t,ie)}function xt(ie){we.call(this,t,ie)}function Ot(ie){we.call(this,t,ie)}function ln(ie){we.call(this,t,ie)}return t.$$set=ie=>{"fullView"in ie&&n(1,d=ie.fullView),"dayView"in ie&&n(0,u=ie.dayView),"yearView"in ie&&n(2,c=ie.yearView),"calendar"in ie&&n(3,h=ie.calendar),"moons"in ie&&n(12,v=ie.moons),"displayDayNumber"in ie&&n(4,m=ie.displayDayNumber),"displayWeeks"in ie&&n(5,_=ie.displayWeeks)},t.$$.update=()=>{if(t.$$.dirty[0]&4){e:c&&n(0,u=!1)}if(t.$$.dirty[0]&1){e:g.set(u)}if(t.$$.dirty[0]&4096){e:S.set(v)}if(t.$$.dirty[0]&8){e:C.set(h)}if(t.$$.dirty[0]&8){e:n(11,r=h.weekdays)}if(t.$$.dirty[0]&8){e:n(10,a=h.displayed.year)}if(t.$$.dirty[0]&8){e:n(9,i=h.getNameForYear(h.displayed.year))}if(t.$$.dirty[0]&8){e:n(6,o=h.currentMonth)}if(t.$$.dirty[0]&72){e:n(8,l=h.weekNumbersOfMonth(o))}if(t.$$.dirty[0]&72){e:n(7,s=h.weeksOfMonth(o))}},[u,d,c,h,m,_,o,s,l,i,a,r,v,T,M,k,E,b,N,x,L,O,U,te,he,ee,se,Y,z,K,ye,ue,Me,We,rt,Pe,lt,et,Ae,je,St,Ht,It,xt,Ot,ln]}var qf=class extends de{constructor(e){super();fe(this,e,g1,m1,le,{fullView:1,dayView:0,yearView:2,calendar:3,moons:12,displayDayNumber:4,displayWeeks:5},d1,[-1,-1])}},Rf=qf;var Ut="FANTASY_CALENDAR",Jn="FANTASY_CALENDAR_FULL_VIEW";(0,Be.addIcon)(Ut,'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="far" data-icon="calendar" class="svg-inline--fa fa-calendar fa-w-14" role="img" viewBox="0 0 448 512"><path xmlns="http://www.w3.org/2000/svg" fill="currentColor" d="M400 64h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V160h352v298c0 3.3-2.7 6-6 6z"/><path fill="currentColor" d="M18.32 255.78L192 223.96l-91.28 68.69c-10.08 10.08-2.94 27.31 11.31 27.31h222.7c-9.44-26.4-14.73-54.47-14.73-83.38v-42.27l-119.73-87.6c-23.82-15.88-55.29-14.01-77.06 4.59L5.81 227.64c-12.38 10.33-3.45 30.42 12.51 28.14zm556.87 34.1l-100.66-50.31A47.992 47.992 0 0 1 448 196.65v-36.69h64l28.09 22.63c6 6 14.14 9.37 22.63 9.37h30.97a32 32 0 0 0 28.62-17.69l14.31-28.62a32.005 32.005 0 0 0-3.02-33.51l-74.53-99.38C553.02 4.7 543.54 0 533.47 0H296.02c-7.13 0-10.7 8.57-5.66 13.61L352 63.96 292.42 88.8c-5.9 2.95-5.9 11.36 0 14.31L352 127.96v108.62c0 72.08 36.03 139.39 96 179.38-195.59 6.81-344.56 41.01-434.1 60.91C5.78 478.67 0 485.88 0 494.2 0 504 7.95 512 17.76 512h499.08c63.29.01 119.61-47.56 122.99-110.76 2.52-47.28-22.73-90.4-64.64-111.36zM489.18 66.25l45.65 11.41c-2.75 10.91-12.47 18.89-24.13 18.26-12.96-.71-25.85-12.53-21.52-29.67z" style="&#10;    transform: scale(0.4125) translate(50%, 95%);&#10;"/></svg>');(0,Be.addIcon)("fantasy-calendar-reveal",'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="calendar-day" class="svg-inline--fa fa-calendar-day fa-w-14" role="img" viewBox="0 0 448 512"><path fill="currentColor" d="M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h96c8.8 0 16 7.2 16 16v96c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-96zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z"/></svg>');var Sn=class extends Be.ItemView{constructor(e,n,r={}){super(n);this.plugin=e;this.leaf=n;this.options=r;this.updateMe=!0;this.yearView=!1;this.moons=!0;this.containerEl.addClass("fantasy-calendar-view"),this.contentEl.addClass("fantasy-calendar-view-content"),this.registerEvent(this.plugin.app.workspace.on("fantasy-calendars-updated",()=>{this.plugin.onSettingsLoad(()=>this.updateCalendars())})),this.registerEvent(this.plugin.app.workspace.on("layout-change",()=>{!this._app||this._app.$set({fullView:this.full,...this.full?{dayView:!1}:{}})}))}get root(){return this.leaf.getRoot()}get full(){return!("collapse"in this.root)}updateCalendars(){if(!this.updateMe){this.updateMe=!0;return}if(!this.plugin.data.calendars.length){this._app?.$destroy(),this.contentEl.empty(),this.noCalendarEl=this.contentEl.createDiv("fantasy-no-calendar"),this.noCalendarEl.createSpan({text:"No calendars created! Create a calendar to see it here."});return}let e=this.plugin.data.calendars.find(n=>n.id==this.calendar?.id)??this.plugin.defaultCalendar??this.plugin.data.calendars[0];this.helper&&this.helper.calendar.id==e.id?this.update(e):this.setCurrentCalendar(e)}update(e){this.calendar=e,this.helper.update(this.calendar),this.registerCalendarInterval(),this._app?this._app.$set({calendar:this.helper}):this.build()}registerCalendarInterval(){if(this.interval&&(clearInterval(this.interval),this.interval=null),this.calendar.static.incrementDay){let e=new Date;this.calendar.date||(this.calendar.date=e.valueOf());let n=Xi(new Date(this.calendar.date),e);if(n>=1){for(let r=0;r<n;r++)this.helper.goToNextCurrentDay();this.calendar.date=e.valueOf(),this.plugin.saveSettings()}this.interval=window.setInterval(()=>{Xi(new Date,e)>=1&&(this.helper.goToNextCurrentDay(),this.helper.current,e=new Date,this.calendar.date=e.valueOf(),this.plugin.saveSettings())},60*1e3),this.registerInterval(this.interval)}}setCurrentCalendar(e){this.noCalendarEl?.detach(),this.calendar=e,this.moons=this.calendar.static.displayMoons,this.dayNumber=this.calendar.static.displayDayNumber,this.helper=new Tr(this.calendar,this.plugin),this.registerCalendarInterval(),this.build()}createEventForDay(e){let n=new Fr(this.app,this.calendar,null,e);n.onClose=()=>{!n.saved||(this.calendar.events.push(n.event),this.plugin.saveSettings(),this._app.$set({calendar:this.helper}),this.triggerHelperEvent("day-update"))},n.open()}async onOpen(){this.plugin.onSettingsLoad(()=>this.updateCalendars())}build(){this.contentEl.empty(),this._app=new Rf({target:this.contentEl,props:{calendar:this.helper,fullView:this.full,yearView:this.yearView,moons:this.moons,displayWeeks:this.helper.displayWeeks,displayDayNumber:this.dayNumber}}),this._app.$on("day-click",e=>{let n=e.detail;n.events.length||this.createEventForDay(n.date)}),this._app.$on("day-doubleclick",e=>{let n=e.detail;!n.events.length||(this.helper.viewing.day=n.number,this.helper.viewing.month=this.helper.displayed.month,this.helper.viewing.year=this.helper.displayed.year,this.yearView=!1,this._app.$set({yearView:!1}),this._app.$set({dayView:!0}),this.triggerHelperEvent("day-update",!1))}),this._app.$on("day-context-menu",e=>{let{day:n,evt:r}=e.detail,a=new Be.Menu(this.app);a.setNoIcon(),this.full||a.addItem(i=>{i.setTitle("Open Day").onClick(()=>{this.openDay({day:n.number,month:this.helper.displayed.month,year:this.helper.displayed.year})})}),a.addItem(i=>{i.setTitle("Set as Today").onClick(()=>{this.calendar.current=n.date,this.helper.current.day=n.number,this.triggerHelperEvent("day-update"),this.plugin.saveSettings()})}),a.addItem(i=>i.setTitle("New Event").onClick(()=>{this.createEventForDay(n.date)})),a.showAtMouseEvent(r)}),this._app.$on("settings",e=>{let n=e.detail,r=new Be.Menu(this.app);r.setNoIcon(),r.addItem(a=>{a.setTitle(`${this.calendar.displayWeeks?"Hide":"Show"} Weeks`).onClick(()=>{this.calendar.displayWeeks=!this.calendar.displayWeeks,this.helper.update(this.calendar),this._app.$set({displayWeeks:this.calendar.displayWeeks}),this.plugin.saveSettings()})}),r.addItem(a=>{a.setTitle(`Open ${this.yearView?"Month":"Year"}`).onClick(()=>{this.yearView=!this.yearView,this._app.$set({yearView:this.yearView})})}),r.addItem(a=>{a.setTitle(this.moons?"Hide Moons":"Display Moons").onClick(()=>{this.toggleMoons()})}),r.addItem(a=>{a.setTitle(this.dayNumber?"Hide Day Number":"Display Day Number").onClick(()=>{this.dayNumber=!this.dayNumber,this.calendar.static.displayDayNumber=this.dayNumber,this._app.$set({displayDayNumber:this.dayNumber}),this.plugin.saveSettings()})}),r.addItem(a=>{a.setTitle("View Day"),a.onClick(()=>{this.openDate()})}),r.addItem(a=>{a.setTitle("Switch Calendars"),a.setDisabled(this.plugin.data.calendars.length<=1),a.onClick(()=>{let i=new Lf(this.plugin,this.calendar);i.onClose=()=>{!i.confirmed||this.setCurrentCalendar(i.calendar)},i.open()})}),r.showAtMouseEvent(n)}),this._app.$on("event-click",e=>{let{event:n,modifier:r}=e.detail;if(n.note){let a=[];this.app.workspace.iterateAllLeaves(i=>{i.view instanceof Be.MarkdownView&&i.view.file.basename===n.note&&a.push(i)}),a.length?this.app.workspace.setActiveLeaf(a[0]):this.app.workspace.openLinkText(n.note,"",this.full||r)}else new jf(n,this.plugin).open()}),this._app.$on("event-mouseover",e=>{if(!this.plugin.data.eventPreview)return;let{target:n,event:r}=e.detail;r.note&&this.app.workspace.trigger("link-hover",this,n,r.note,"")}),this._app.$on("event-context",e=>{let{evt:n,event:r}=e.detail,a=new Be.Menu(this.app);a.setNoIcon(),r.note||a.addItem(i=>{i.setTitle("Create Note").onClick(async()=>{let o=this.app.workspace.getActiveFile()?.path,l=o?this.app.fileManager.getNewFileParent(o)?.parent??"/":"/",s=`${r.date.year}-${r.date.month+1}-${r.date.day}`,d;r.end&&(d=`${r.end.year}-${r.end.month+1}-${r.end.day}`);let u={"fc-calendar":this.calendar.name,"fc-date":s,...r.end?{"fc-end":d}:{},...r.category?{"fc-category":this.calendar.categories.find(h=>h.id==r.category)?.name}:{}};r.note=(0,Be.normalizePath)(`${l}/${r.name}.md`);let c=this.app.vault.getAbstractFileByPath(r.note);if(c||(c=await this.app.vault.create(r.note,`---
${(0,Be.stringifyYaml)(u)}
---`)),this.plugin.saveCalendar(),c instanceof Be.TFile){let v=this.app.workspace.getLeavesOfType("markdown").find(m=>{m.view instanceof Be.FileView&&m.view.file.path==r.note});v?this.app.workspace.setActiveLeaf(v):await this.app.workspace.getUnpinnedLeaf().openFile(c,{active:!0})}})}),a.addItem(i=>{i.setTitle("Edit Event").onClick(()=>{let o=new Fr(this.app,this.calendar,r);o.onClose=()=>{if(!o.saved)return;let l=this.calendar.events.find(s=>s.id==r.id);this.calendar.events.splice(this.calendar.events.indexOf(l),1,o.event),this.plugin.saveSettings(),this._app.$set({calendar:this.helper}),this.triggerHelperEvent("day-update")},o.open()})}),a.addItem(i=>{i.setTitle("Delete Event").onClick(async()=>{if(await Er(this.app,"Are you sure you wish to delete this event?",{cta:"Delete",secondary:"Cancel"})){let o=this.calendar.events.find(l=>l.id==r.id);this.calendar.events.splice(this.calendar.events.indexOf(o),1),this.plugin.saveSettings(),this._app.$set({calendar:this.helper}),this.triggerHelperEvent("day-update")}})}),a.showAtMouseEvent(n)}),this._app.$on("event",e=>{let n=e.detail;this.createEventForDay(n)}),this._app.$on("reset",()=>{this.helper.reset(),this.yearView=!1,this._app.$set({yearView:!1}),this._app.$set({dayView:!0}),this.triggerHelperEvent("day-update",!1)})}openDay(e){this.helper.viewing.day=e.day,this.helper.viewing.month=e.month,this.helper.viewing.year=e.year,this.yearView=!1,this._app.$set({yearView:!1}),this._app.$set({dayView:!0}),this.triggerHelperEvent("day-update",!1)}openDate(){if(!this.helper||!this.calendar)return;let e=new Pf(this.plugin,this.calendar);e.onClose=()=>{!e.confirmed||(e.setCurrent?(this.calendar.current={...e.date},this.setCurrentCalendar(this.calendar)):(this.helper.displayed={...e.date},this.helper.update(),this._app.$set({calendar:this.helper})),this.plugin.saveSettings())},e.open()}toggleMoons(){this.moons=!this.moons,this._app.$set({moons:this.moons})}async onClose(){}onResize(){this.triggerHelperEvent("view-resized",!1)}getViewType(){return Ut}getDisplayText(){return"Fantasy Calendar"}getIcon(){return Ut}triggerHelperEvent(e,n=!0){!this.helper||(this.helper.trigger(e),n&&(this.updateMe=!1,this.plugin.app.workspace.trigger("fantasy-calendars-updated")))}async onunload(){}},Lf=class extends Be.Modal{constructor(e,n){super(e.app);this.plugin=e;this.calendar=n;this.confirmed=!1}async display(){this.contentEl.empty(),this.contentEl.createEl("h4",{text:"Switch Calendars"});let e=this.contentEl.createDiv("fantasy-calendar-dropdown");e.createEl("label",{text:"Choose a Calendar"}),new Be.DropdownComponent(e).onChange(a=>{this.calendar=this.plugin.data.calendars.find(i=>i.id==a)}).addOptions(Object.fromEntries(this.plugin.data.calendars.map(a=>[a.id,a.name]))).setValue(this.calendar?this.calendar.id:null);let r=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new Be.ButtonComponent(r).setButtonText("Switch").setCta().onClick(()=>{this.confirmed=!0,this.close()}),new Be.ButtonComponent(r).setButtonText("Cancel").onClick(()=>{this.close()})}onOpen(){this.display()}},Pf=class extends Be.Modal{constructor(e,n){super(e.app);this.plugin=e;this.calendar=n;this.confirmed=!1;this.setCurrent=!1;this.date={...this.calendar.current},this.tempCurrentDays=this.date.day}async display(){this.contentEl.empty(),this.contentEl.createEl("h4",{text:"View Day"}),this.dateFieldEl=this.contentEl.createDiv("fantasy-calendar-date-fields"),this.buildDateFields(),new Be.Setting(this.contentEl).setName("Set as Current Date").setDesc("Also set this date to today's date.").addToggle(n=>n.setValue(this.setCurrent).onChange(r=>{this.setCurrent=r}));let e=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new Be.ButtonComponent(e).setButtonText("Switch").setCta().onClick(()=>{this.confirmed=!0,this.date.day=this.tempCurrentDays,this.close()}),new Be.ButtonComponent(e).setButtonText("Cancel").onClick(()=>{this.close()})}buildDateFields(){this.dateFieldEl.empty(),this.tempCurrentDays!=null&&this.date.month!=null&&this.tempCurrentDays>this.calendar.static.months[this.date.month]?.length&&(this.tempCurrentDays=this.calendar.static.months[this.date.month]?.length);let e=this.dateFieldEl.createDiv("fantasy-calendar-date-field");e.createEl("label",{text:"Day"}),new Be.TextComponent(e).setPlaceholder("Day").setValue(`${this.tempCurrentDays}`).setDisabled(this.date.month==null).onChange(i=>{if(Number(i)<1||Number(i)>this.calendar.static.months[this.date.month]?.length){new Be.Notice(`The current day must be between 1 and ${this.calendar.static.months[this.date.month].length}`),this.tempCurrentDays=this.date.day,this.buildDateFields();return}this.tempCurrentDays=Number(i)}).inputEl.setAttr("type","number");let r=this.dateFieldEl.createDiv("fantasy-calendar-date-field");r.createEl("label",{text:"Month"}),new Be.DropdownComponent(r).addOptions(Object.fromEntries([["select","Select Month"],...this.calendar.static.months.map(i=>[i.name,i.name])])).setValue(this.date.month!=null?this.calendar.static.months[this.date.month].name:"select").onChange(i=>{i==="select"&&(this.date.month=null);let o=this.calendar.static.months.find(l=>l.name==i);this.date.month=this.calendar.static.months.indexOf(o),this.buildDateFields()});let a=this.dateFieldEl.createDiv("fantasy-calendar-date-field");if(a.createEl("label",{text:"Year"}),this.calendar.static.useCustomYears){let i=new Be.DropdownComponent(a);(this.calendar.static.years??[]).forEach(o=>{i.addOption(o.id,o.name)}),this.date.year>this.calendar.static.years?.length&&(this.date.year=this.calendar.static.years?this.calendar.static.years.length:null),i.setValue(this.calendar.static.years?.[this.date.year-1]?.id).onChange(o=>{this.date.year=this.calendar.static.years.findIndex(l=>l.id==o)+1})}else new Be.TextComponent(a).setPlaceholder("Year").setValue(`${this.date.year}`).onChange(o=>{this.date.year=Number(o)}).inputEl.setAttr("type","number")}onOpen(){this.display()}},jf=class extends Be.Modal{constructor(e,n){super(n.app);this.event=e;this.plugin=n;this.containerEl.addClass("fantasy-calendar-view-event")}async display(){this.contentEl.empty(),this.contentEl.createEl("h4",{text:this.event.name}),await Be.MarkdownRenderer.renderMarkdown(this.event.description,this.contentEl,this.event.note,null)}async onOpen(){await this.display()}};var jC=Oe(require("fs")),sn=Oe(require("obsidian"));function as(t){let e=new Blob([t],{type:"text/javascript"}),n=URL.createObjectURL(e),r=new Worker(n);return URL.revokeObjectURL(n),r}function is(){return as(`var ee=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var Re=ee(Ie=>{Ie.entityMap={lt:"<",gt:">",amp:"&",quot:'"',apos:"'",Agrave:"\\xC0",Aacute:"\\xC1",Acirc:"\\xC2",Atilde:"\\xC3",Auml:"\\xC4",Aring:"\\xC5",AElig:"\\xC6",Ccedil:"\\xC7",Egrave:"\\xC8",Eacute:"\\xC9",Ecirc:"\\xCA",Euml:"\\xCB",Igrave:"\\xCC",Iacute:"\\xCD",Icirc:"\\xCE",Iuml:"\\xCF",ETH:"\\xD0",Ntilde:"\\xD1",Ograve:"\\xD2",Oacute:"\\xD3",Ocirc:"\\xD4",Otilde:"\\xD5",Ouml:"\\xD6",Oslash:"\\xD8",Ugrave:"\\xD9",Uacute:"\\xDA",Ucirc:"\\xDB",Uuml:"\\xDC",Yacute:"\\xDD",THORN:"\\xDE",szlig:"\\xDF",agrave:"\\xE0",aacute:"\\xE1",acirc:"\\xE2",atilde:"\\xE3",auml:"\\xE4",aring:"\\xE5",aelig:"\\xE6",ccedil:"\\xE7",egrave:"\\xE8",eacute:"\\xE9",ecirc:"\\xEA",euml:"\\xEB",igrave:"\\xEC",iacute:"\\xED",icirc:"\\xEE",iuml:"\\xEF",eth:"\\xF0",ntilde:"\\xF1",ograve:"\\xF2",oacute:"\\xF3",ocirc:"\\xF4",otilde:"\\xF5",ouml:"\\xF6",oslash:"\\xF8",ugrave:"\\xF9",uacute:"\\xFA",ucirc:"\\xFB",uuml:"\\xFC",yacute:"\\xFD",thorn:"\\xFE",yuml:"\\xFF",nbsp:"\\xA0",iexcl:"\\xA1",cent:"\\xA2",pound:"\\xA3",curren:"\\xA4",yen:"\\xA5",brvbar:"\\xA6",sect:"\\xA7",uml:"\\xA8",copy:"\\xA9",ordf:"\\xAA",laquo:"\\xAB",not:"\\xAC",shy:"\\xAD\\xAD",reg:"\\xAE",macr:"\\xAF",deg:"\\xB0",plusmn:"\\xB1",sup2:"\\xB2",sup3:"\\xB3",acute:"\\xB4",micro:"\\xB5",para:"\\xB6",middot:"\\xB7",cedil:"\\xB8",sup1:"\\xB9",ordm:"\\xBA",raquo:"\\xBB",frac14:"\\xBC",frac12:"\\xBD",frac34:"\\xBE",iquest:"\\xBF",times:"\\xD7",divide:"\\xF7",forall:"\\u2200",part:"\\u2202",exist:"\\u2203",empty:"\\u2205",nabla:"\\u2207",isin:"\\u2208",notin:"\\u2209",ni:"\\u220B",prod:"\\u220F",sum:"\\u2211",minus:"\\u2212",lowast:"\\u2217",radic:"\\u221A",prop:"\\u221D",infin:"\\u221E",ang:"\\u2220",and:"\\u2227",or:"\\u2228",cap:"\\u2229",cup:"\\u222A",int:"\\u222B",there4:"\\u2234",sim:"\\u223C",cong:"\\u2245",asymp:"\\u2248",ne:"\\u2260",equiv:"\\u2261",le:"\\u2264",ge:"\\u2265",sub:"\\u2282",sup:"\\u2283",nsub:"\\u2284",sube:"\\u2286",supe:"\\u2287",oplus:"\\u2295",otimes:"\\u2297",perp:"\\u22A5",sdot:"\\u22C5",Alpha:"\\u0391",Beta:"\\u0392",Gamma:"\\u0393",Delta:"\\u0394",Epsilon:"\\u0395",Zeta:"\\u0396",Eta:"\\u0397",Theta:"\\u0398",Iota:"\\u0399",Kappa:"\\u039A",Lambda:"\\u039B",Mu:"\\u039C",Nu:"\\u039D",Xi:"\\u039E",Omicron:"\\u039F",Pi:"\\u03A0",Rho:"\\u03A1",Sigma:"\\u03A3",Tau:"\\u03A4",Upsilon:"\\u03A5",Phi:"\\u03A6",Chi:"\\u03A7",Psi:"\\u03A8",Omega:"\\u03A9",alpha:"\\u03B1",beta:"\\u03B2",gamma:"\\u03B3",delta:"\\u03B4",epsilon:"\\u03B5",zeta:"\\u03B6",eta:"\\u03B7",theta:"\\u03B8",iota:"\\u03B9",kappa:"\\u03BA",lambda:"\\u03BB",mu:"\\u03BC",nu:"\\u03BD",xi:"\\u03BE",omicron:"\\u03BF",pi:"\\u03C0",rho:"\\u03C1",sigmaf:"\\u03C2",sigma:"\\u03C3",tau:"\\u03C4",upsilon:"\\u03C5",phi:"\\u03C6",chi:"\\u03C7",psi:"\\u03C8",omega:"\\u03C9",thetasym:"\\u03D1",upsih:"\\u03D2",piv:"\\u03D6",OElig:"\\u0152",oelig:"\\u0153",Scaron:"\\u0160",scaron:"\\u0161",Yuml:"\\u0178",fnof:"\\u0192",circ:"\\u02C6",tilde:"\\u02DC",ensp:"\\u2002",emsp:"\\u2003",thinsp:"\\u2009",zwnj:"\\u200C",zwj:"\\u200D",lrm:"\\u200E",rlm:"\\u200F",ndash:"\\u2013",mdash:"\\u2014",lsquo:"\\u2018",rsquo:"\\u2019",sbquo:"\\u201A",ldquo:"\\u201C",rdquo:"\\u201D",bdquo:"\\u201E",dagger:"\\u2020",Dagger:"\\u2021",bull:"\\u2022",hellip:"\\u2026",permil:"\\u2030",prime:"\\u2032",Prime:"\\u2033",lsaquo:"\\u2039",rsaquo:"\\u203A",oline:"\\u203E",euro:"\\u20AC",trade:"\\u2122",larr:"\\u2190",uarr:"\\u2191",rarr:"\\u2192",darr:"\\u2193",harr:"\\u2194",crarr:"\\u21B5",lceil:"\\u2308",rceil:"\\u2309",lfloor:"\\u230A",rfloor:"\\u230B",loz:"\\u25CA",spades:"\\u2660",clubs:"\\u2663",hearts:"\\u2665",diams:"\\u2666"}});var Pe=ee(pe=>{var fe=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/,Oe=new RegExp("[\\\\-\\\\.0-9"+fe.source.slice(1,-1)+"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]"),Se=new RegExp("^"+fe.source+Oe.source+"*(?::"+fe.source+Oe.source+"*)?$"),z=0,S=1,$=2,j=3,F=4,L=5,G=6,te=7;function P(e,t){this.message=e,this.locator=t,Error.captureStackTrace&&Error.captureStackTrace(this,P)}P.prototype=new Error;P.prototype.name=P.name;function Me(){}Me.prototype={parse:function(e,t,n){var r=this.domBuilder;r.startDocument(),Fe(t,t={}),vt(e,t,n,r,this.errorHandler),r.endDocument()}};function vt(e,t,n,r,i){function a(v){if(v>65535){v-=65536;var C=55296+(v>>10),dt=56320+(v&1023);return String.fromCharCode(C,dt)}else return String.fromCharCode(v)}function s(v){var C=v.slice(1,-1);return C in n?n[C]:C.charAt(0)==="#"?a(parseInt(C.substr(1).replace("x","0x"))):(i.error("entity not found:"+v),v)}function c(v){if(v>m){var C=e.substring(m,v).replace(/&#?\\w+;/g,s);p&&l(m),r.characters(C,0,v-m),m=v}}function l(v,C){for(;v>=u&&(C=h.exec(e));)o=C.index,u=o+C[0].length,p.lineNumber++;p.columnNumber=v-o+1}for(var o=0,u=0,h=/.*(?:\\r\\n?|\\n)|.*$/g,p=r.locator,d=[{currentNSMap:t}],T={},m=0;;){try{var f=e.indexOf("<",m);if(f<0){if(!e.substr(m).match(/^\\s*$/)){var A=r.doc,be=A.createTextNode(e.substr(m));A.appendChild(be),r.currentElement=be}return}switch(f>m&&c(f),e.charAt(f+1)){case"/":var y=e.indexOf(">",f+3),_=e.substring(f+2,y),I=d.pop();y<0?(_=e.substring(f+2).replace(/[\\s<].*/,""),i.error("end tag name: "+_+" is not complete:"+I.tagName),y=f+1+_.length):_.match(/\\s</)&&(_=_.replace(/[\\s<].*/,""),i.error("end tag name: "+_+" maybe not complete"),y=f+1+_.length);var _e=I.localNSMap,Ce=I.tagName==_,pt=Ce||I.tagName&&I.tagName.toLowerCase()==_.toLowerCase();if(pt){if(r.endElement(I.uri,I.localName,_),_e)for(var mt in _e)r.endPrefixMapping(mt);Ce||i.fatalError("end tag name: "+_+" is not match the current start tagName:"+I.tagName)}else d.push(I);y++;break;case"?":p&&l(f),y=Dt(e,f,r);break;case"!":p&&l(f),y=yt(e,f,r,i);break;default:p&&l(f);var b=new Le,oe=d[d.length-1].currentNSMap,y=gt(e,f,b,oe,s,i),xe=b.length;if(!b.closed&&Nt(e,y,b.tagName,T)&&(b.closed=!0,n.nbsp||i.warning("unclosed xml attribute")),p&&xe){for(var ht=Ue(p,{}),ue=0;ue<xe;ue++){var Ae=b[ue];l(Ae.offset),Ae.locator=Ue(p,{})}r.locator=ht,$e(b,r,oe)&&d.push(b),r.locator=p}else $e(b,r,oe)&&d.push(b);b.uri==="http://www.w3.org/1999/xhtml"&&!b.closed?y=Et(e,y,b.tagName,s,r):y++}}catch(v){if(v instanceof P)throw v;i.error("element parse error: "+v),y=-1}y>m?m=y:c(Math.max(f,m)+1)}}function Ue(e,t){return t.lineNumber=e.lineNumber,t.columnNumber=e.columnNumber,t}function gt(e,t,n,r,i,a){function s(d,T,m){d in n.attributeNames&&a.fatalError("Attribute "+d+" redefined"),n.addValue(d,T,m)}for(var c,l,o=++t,u=z;;){var h=e.charAt(o);switch(h){case"=":if(u===S)c=e.slice(t,o),u=j;else if(u===$)u=j;else throw new Error("attribute equal must after attrName");break;case"'":case'"':if(u===j||u===S)if(u===S&&(a.warning('attribute value must after "="'),c=e.slice(t,o)),t=o+1,o=e.indexOf(h,t),o>0)l=e.slice(t,o).replace(/&#?\\w+;/g,i),s(c,l,t-1),u=L;else throw new Error("attribute value no end '"+h+"' match");else if(u==F)l=e.slice(t,o).replace(/&#?\\w+;/g,i),s(c,l,t),a.warning('attribute "'+c+'" missed start quot('+h+")!!"),t=o+1,u=L;else throw new Error('attribute value must after "="');break;case"/":switch(u){case z:n.setTagName(e.slice(t,o));case L:case G:case te:u=te,n.closed=!0;case F:case S:case $:break;default:throw new Error("attribute invalid close char('/')")}break;case"":return a.error("unexpected end of input"),u==z&&n.setTagName(e.slice(t,o)),o;case">":switch(u){case z:n.setTagName(e.slice(t,o));case L:case G:case te:break;case F:case S:l=e.slice(t,o),l.slice(-1)==="/"&&(n.closed=!0,l=l.slice(0,-1));case $:u===$&&(l=c),u==F?(a.warning('attribute "'+l+'" missed quot(")!'),s(c,l.replace(/&#?\\w+;/g,i),t)):((r[""]!=="http://www.w3.org/1999/xhtml"||!l.match(/^(?:disabled|checked|selected)$/i))&&a.warning('attribute "'+l+'" missed value!! "'+l+'" instead!!'),s(l,l,t));break;case j:throw new Error("attribute value missed!!")}return o;case"\\x80":h=" ";default:if(h<=" ")switch(u){case z:n.setTagName(e.slice(t,o)),u=G;break;case S:c=e.slice(t,o),u=$;break;case F:var l=e.slice(t,o).replace(/&#?\\w+;/g,i);a.warning('attribute "'+l+'" missed quot(")!!'),s(c,l,t);case L:u=G;break}else switch(u){case $:var p=n.tagName;(r[""]!=="http://www.w3.org/1999/xhtml"||!c.match(/^(?:disabled|checked|selected)$/i))&&a.warning('attribute "'+c+'" missed value!! "'+c+'" instead2!!'),s(c,c,t),t=o,u=S;break;case L:a.warning('attribute space is required"'+c+'"!!');case G:u=S,t=o;break;case j:u=F,t=o;break;case te:throw new Error("elements closed character '/' and '>' must be connected to")}}o++}}function $e(e,t,n){for(var r=e.tagName,i=null,a=e.length;a--;){var s=e[a],c=s.qName,l=s.value,p=c.indexOf(":");if(p>0)var o=s.prefix=c.slice(0,p),u=c.slice(p+1),h=o==="xmlns"&&u;else u=c,o=null,h=c==="xmlns"&&"";s.localName=u,h!==!1&&(i==null&&(i={},Fe(n,n={})),n[h]=i[h]=l,s.uri="http://www.w3.org/2000/xmlns/",t.startPrefixMapping(h,l))}for(var a=e.length;a--;){s=e[a];var o=s.prefix;o&&(o==="xml"&&(s.uri="http://www.w3.org/XML/1998/namespace"),o!=="xmlns"&&(s.uri=n[o||""]))}var p=r.indexOf(":");p>0?(o=e.prefix=r.slice(0,p),u=e.localName=r.slice(p+1)):(o=null,u=e.localName=r);var d=e.uri=n[o||""];if(t.startElement(d,u,r,e),e.closed){if(t.endElement(d,u,r),i)for(o in i)t.endPrefixMapping(o)}else return e.currentNSMap=n,e.localNSMap=i,!0}function Et(e,t,n,r,i){if(/^(?:script|textarea)$/i.test(n)){var a=e.indexOf("</"+n+">",t),s=e.substring(t+1,a);if(/[&<]/.test(s))return/^script$/i.test(n)?(i.characters(s,0,s.length),a):(s=s.replace(/&#?\\w+;/g,r),i.characters(s,0,s.length),a)}return t+1}function Nt(e,t,n,r){var i=r[n];return i==null&&(i=e.lastIndexOf("</"+n+">"),i<t&&(i=e.lastIndexOf("</"+n)),r[n]=i),i<t}function Fe(e,t){for(var n in e)t[n]=e[n]}function yt(e,t,n,r){var i=e.charAt(t+2);switch(i){case"-":if(e.charAt(t+3)==="-"){var a=e.indexOf("-->",t+4);return a>t?(n.comment(e,t+4,a-t-4),a+3):(r.error("Unclosed comment"),-1)}else return-1;default:if(e.substr(t+3,6)=="CDATA["){var a=e.indexOf("]]>",t+9);return n.startCDATA(),n.characters(e,t+9,a-t-9),n.endCDATA(),a+3}var s=wt(e,t),c=s.length;if(c>1&&/!doctype/i.test(s[0][0])){var l=s[1][0],o=!1,u=!1;c>3&&(/^public$/i.test(s[2][0])?(o=s[3][0],u=c>4&&s[4][0]):/^system$/i.test(s[2][0])&&(u=s[3][0]));var h=s[c-1];return n.startDTD(l,o,u),n.endDTD(),h.index+h[0].length}}return-1}function Dt(e,t,n){var r=e.indexOf("?>",t);if(r){var i=e.substring(t,r).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(i){var a=i[0].length;return n.processingInstruction(i[1],i[2]),r+2}else return-1}return-1}function Le(){this.attributeNames={}}Le.prototype={setTagName:function(e){if(!Se.test(e))throw new Error("invalid tagName:"+e);this.tagName=e},addValue:function(e,t,n){if(!Se.test(e))throw new Error("invalid attribute:"+e);this.attributeNames[e]=this.length,this[this.length++]={qName:e,value:t,offset:n}},length:0,getLocalName:function(e){return this[e].localName},getLocator:function(e){return this[e].locator},getQName:function(e){return this[e].qName},getURI:function(e){return this[e].uri},getValue:function(e){return this[e].value}};function wt(e,t){var n,r=[],i=/'[^']+'|"[^"]+"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;for(i.lastIndex=t,i.exec(e);n=i.exec(e);)if(r.push(n),n[1])return r}pe.XMLReader=Me;pe.ParseError=P});var we=ee(K=>{function Q(e,t){for(var n in e)t[n]=e[n]}function D(e,t){var n=e.prototype;if(!(n instanceof t)){let i=function(){};var r=i;i.prototype=t.prototype,i=new i,Q(n,i),e.prototype=n=i}n.constructor!=e&&(typeof e!="function"&&console.error("unknow Class:"+e),n.constructor=e)}var Tt="http://www.w3.org/1999/xhtml",w={},x=w.ELEMENT_NODE=1,k=w.ATTRIBUTE_NODE=2,ne=w.TEXT_NODE=3,ke=w.CDATA_SECTION_NODE=4,Ve=w.ENTITY_REFERENCE_NODE=5,bt=w.ENTITY_NODE=6,qe=w.PROCESSING_INSTRUCTION_NODE=7,Ye=w.COMMENT_NODE=8,Xe=w.DOCUMENT_NODE=9,ze=w.DOCUMENT_TYPE_NODE=10,R=w.DOCUMENT_FRAGMENT_NODE=11,_t=w.NOTATION_NODE=12,E={},g={},qt=E.INDEX_SIZE_ERR=(g[1]="Index size error",1),Yt=E.DOMSTRING_SIZE_ERR=(g[2]="DOMString size error",2),Ct=E.HIERARCHY_REQUEST_ERR=(g[3]="Hierarchy request error",3),Xt=E.WRONG_DOCUMENT_ERR=(g[4]="Wrong document",4),zt=E.INVALID_CHARACTER_ERR=(g[5]="Invalid character",5),jt=E.NO_DATA_ALLOWED_ERR=(g[6]="No data allowed",6),Gt=E.NO_MODIFICATION_ALLOWED_ERR=(g[7]="No modification allowed",7),xt=E.NOT_FOUND_ERR=(g[8]="Not found",8),Qt=E.NOT_SUPPORTED_ERR=(g[9]="Not supported",9),je=E.INUSE_ATTRIBUTE_ERR=(g[10]="Attribute in use",10),Wt=E.INVALID_STATE_ERR=(g[11]="Invalid state",11),Bt=E.SYNTAX_ERR=(g[12]="Syntax error",12),Zt=E.INVALID_MODIFICATION_ERR=(g[13]="Invalid modification",13),Kt=E.NAMESPACE_ERR=(g[14]="Invalid namespace",14),Jt=E.INVALID_ACCESS_ERR=(g[15]="Invalid access",15);function U(e,t){if(t instanceof Error)var n=t;else n=this,Error.call(this,g[e]),this.message=g[e],Error.captureStackTrace&&Error.captureStackTrace(this,U);return n.code=e,t&&(this.message=this.message+": "+t),n}U.prototype=Error.prototype;Q(E,U);function M(){}M.prototype={length:0,item:function(e){return this[e]||null},toString:function(e,t){for(var n=[],r=0;r<this.length;r++)Y(this[r],n,e,t);return n.join("")}};function V(e,t){this._node=e,this._refresh=t,me(this)}function me(e){var t=e._node._inc||e._node.ownerDocument._inc;if(e._inc!=t){var n=e._refresh(e._node);st(e,"length",n.length),Q(n,e),e._inc=t}}V.prototype.item=function(e){return me(this),this[e]};D(V,M);function re(){}function Ge(e,t){for(var n=e.length;n--;)if(e[n]===t)return n}function Qe(e,t,n,r){if(r?t[Ge(t,r)]=n:t[t.length++]=n,e){n.ownerElement=e;var i=e.ownerDocument;i&&(r&&Ke(i,e,r),At(i,e,n))}}function We(e,t,n){var r=Ge(t,n);if(r>=0){for(var i=t.length-1;r<i;)t[r]=t[++r];if(t.length=i,e){var a=e.ownerDocument;a&&(Ke(a,e,n),n.ownerElement=null)}}else throw U(xt,new Error(e.tagName+"@"+n))}re.prototype={length:0,item:M.prototype.item,getNamedItem:function(e){for(var t=this.length;t--;){var n=this[t];if(n.nodeName==e)return n}},setNamedItem:function(e){var t=e.ownerElement;if(t&&t!=this._ownerElement)throw new U(je);var n=this.getNamedItem(e.nodeName);return Qe(this._ownerElement,this,e,n),n},setNamedItemNS:function(e){var t=e.ownerElement,n;if(t&&t!=this._ownerElement)throw new U(je);return n=this.getNamedItemNS(e.namespaceURI,e.localName),Qe(this._ownerElement,this,e,n),n},removeNamedItem:function(e){var t=this.getNamedItem(e);return We(this._ownerElement,this,t),t},removeNamedItemNS:function(e,t){var n=this.getNamedItemNS(e,t);return We(this._ownerElement,this,n),n},getNamedItemNS:function(e,t){for(var n=this.length;n--;){var r=this[n];if(r.localName==t&&r.namespaceURI==e)return r}return null}};function Be(e){if(this._features={},e)for(var t in e)this._features=e[t]}Be.prototype={hasFeature:function(e,t){var n=this._features[e.toLowerCase()];return!!(n&&(!t||t in n))},createDocument:function(e,t,n){var r=new B;if(r.implementation=this,r.childNodes=new M,r.doctype=n,n&&r.appendChild(n),t){var i=r.createElementNS(e,t);r.appendChild(i)}return r},createDocumentType:function(e,t,n){var r=new Ee;return r.name=e,r.nodeName=e,r.publicId=t,r.systemId=n,r}};function N(){}N.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(e,t){return He(this,e,t)},replaceChild:function(e,t){this.insertBefore(e,t),t&&this.removeChild(t)},removeChild:function(e){return Je(this,e)},appendChild:function(e){return this.insertBefore(e,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(e){return De(this.ownerDocument||this,this,e)},normalize:function(){for(var e=this.firstChild;e;){var t=e.nextSibling;t&&t.nodeType==ne&&e.nodeType==ne?(this.removeChild(t),e.appendData(t.data)):(e.normalize(),e=t)}},isSupported:function(e,t){return this.ownerDocument.implementation.hasFeature(e,t)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(e){for(var t=this;t;){var n=t._nsMap;if(n){for(var r in n)if(n[r]==e)return r}t=t.nodeType==k?t.ownerDocument:t.parentNode}return null},lookupNamespaceURI:function(e){for(var t=this;t;){var n=t._nsMap;if(n&&e in n)return n[e];t=t.nodeType==k?t.ownerDocument:t.parentNode}return null},isDefaultNamespace:function(e){var t=this.lookupPrefix(e);return t==null}};function Ze(e){return e=="<"&&"&lt;"||e==">"&&"&gt;"||e=="&"&&"&amp;"||e=='"'&&"&quot;"||"&#"+e.charCodeAt()+";"}Q(w,N);Q(w,N.prototype);function W(e,t){if(t(e))return!0;if(e=e.firstChild)do if(W(e,t))return!0;while(e=e.nextSibling)}function B(){}function At(e,t,n){e&&e._inc++;var r=n.namespaceURI;r=="http://www.w3.org/2000/xmlns/"&&(t._nsMap[n.prefix?n.localName:""]=n.value)}function Ke(e,t,n,r){e&&e._inc++;var i=n.namespaceURI;i=="http://www.w3.org/2000/xmlns/"&&delete t._nsMap[n.prefix?n.localName:""]}function he(e,t,n){if(e&&e._inc){e._inc++;var r=t.childNodes;if(n)r[r.length++]=n;else{for(var i=t.firstChild,a=0;i;)r[a++]=i,i=i.nextSibling;r.length=a}}}function Je(e,t){var n=t.previousSibling,r=t.nextSibling;return n?n.nextSibling=r:e.firstChild=r,r?r.previousSibling=n:e.lastChild=n,he(e.ownerDocument,e),t}function He(e,t,n){var r=t.parentNode;if(r&&r.removeChild(t),t.nodeType===R){var i=t.firstChild;if(i==null)return t;var a=t.lastChild}else i=a=t;var s=n?n.previousSibling:e.lastChild;i.previousSibling=s,a.nextSibling=n,s?s.nextSibling=i:e.firstChild=i,n==null?e.lastChild=a:n.previousSibling=a;do i.parentNode=e;while(i!==a&&(i=i.nextSibling));return he(e.ownerDocument||e,e),t.nodeType==R&&(t.firstChild=t.lastChild=null),t}function It(e,t){var n=t.parentNode;if(n){var r=e.lastChild;n.removeChild(t);var r=e.lastChild}var r=e.lastChild;return t.parentNode=e,t.previousSibling=r,t.nextSibling=null,r?r.nextSibling=t:e.firstChild=t,e.lastChild=t,he(e.ownerDocument,e,t),t}B.prototype={nodeName:"#document",nodeType:Xe,doctype:null,documentElement:null,_inc:1,insertBefore:function(e,t){if(e.nodeType==R){for(var n=e.firstChild;n;){var r=n.nextSibling;this.insertBefore(n,t),n=r}return e}return this.documentElement==null&&e.nodeType==x&&(this.documentElement=e),He(this,e,t),e.ownerDocument=this,e},removeChild:function(e){return this.documentElement==e&&(this.documentElement=null),Je(this,e)},importNode:function(e,t){return at(this,e,t)},getElementById:function(e){var t=null;return W(this.documentElement,function(n){if(n.nodeType==x&&n.getAttribute("id")==e)return t=n,!0}),t},getElementsByClassName:function(e){var t=new RegExp("(^|\\\\s)"+e+"(\\\\s|$)");return new V(this,function(n){var r=[];return W(n.documentElement,function(i){i!==n&&i.nodeType==x&&t.test(i.getAttribute("class"))&&r.push(i)}),r})},createElement:function(e){var t=new q;t.ownerDocument=this,t.nodeName=e,t.tagName=e,t.childNodes=new M;var n=t.attributes=new re;return n._ownerElement=t,t},createDocumentFragment:function(){var e=new ae;return e.ownerDocument=this,e.childNodes=new M,e},createTextNode:function(e){var t=new de;return t.ownerDocument=this,t.appendData(e),t},createComment:function(e){var t=new ve;return t.ownerDocument=this,t.appendData(e),t},createCDATASection:function(e){var t=new ge;return t.ownerDocument=this,t.appendData(e),t},createProcessingInstruction:function(e,t){var n=new ye;return n.ownerDocument=this,n.tagName=n.target=e,n.nodeValue=n.data=t,n},createAttribute:function(e){var t=new ie;return t.ownerDocument=this,t.name=e,t.nodeName=e,t.localName=e,t.specified=!0,t},createEntityReference:function(e){var t=new Ne;return t.ownerDocument=this,t.nodeName=e,t},createElementNS:function(e,t){var n=new q,r=t.split(":"),i=n.attributes=new re;return n.childNodes=new M,n.ownerDocument=this,n.nodeName=t,n.tagName=t,n.namespaceURI=e,r.length==2?(n.prefix=r[0],n.localName=r[1]):n.localName=t,i._ownerElement=n,n},createAttributeNS:function(e,t){var n=new ie,r=t.split(":");return n.ownerDocument=this,n.nodeName=t,n.name=t,n.namespaceURI=e,n.specified=!0,r.length==2?(n.prefix=r[0],n.localName=r[1]):n.localName=t,n}};D(B,N);function q(){this._nsMap={}}q.prototype={nodeType:x,hasAttribute:function(e){return this.getAttributeNode(e)!=null},getAttribute:function(e){var t=this.getAttributeNode(e);return t&&t.value||""},getAttributeNode:function(e){return this.attributes.getNamedItem(e)},setAttribute:function(e,t){var n=this.ownerDocument.createAttribute(e);n.value=n.nodeValue=""+t,this.setAttributeNode(n)},removeAttribute:function(e){var t=this.getAttributeNode(e);t&&this.removeAttributeNode(t)},appendChild:function(e){return e.nodeType===R?this.insertBefore(e,null):It(this,e)},setAttributeNode:function(e){return this.attributes.setNamedItem(e)},setAttributeNodeNS:function(e){return this.attributes.setNamedItemNS(e)},removeAttributeNode:function(e){return this.attributes.removeNamedItem(e.nodeName)},removeAttributeNS:function(e,t){var n=this.getAttributeNodeNS(e,t);n&&this.removeAttributeNode(n)},hasAttributeNS:function(e,t){return this.getAttributeNodeNS(e,t)!=null},getAttributeNS:function(e,t){var n=this.getAttributeNodeNS(e,t);return n&&n.value||""},setAttributeNS:function(e,t,n){var r=this.ownerDocument.createAttributeNS(e,t);r.value=r.nodeValue=""+n,this.setAttributeNode(r)},getAttributeNodeNS:function(e,t){return this.attributes.getNamedItemNS(e,t)},getElementsByTagName:function(e){return new V(this,function(t){var n=[];return W(t,function(r){r!==t&&r.nodeType==x&&(e==="*"||r.tagName==e)&&n.push(r)}),n})},getElementsByTagNameNS:function(e,t){return new V(this,function(n){var r=[];return W(n,function(i){i!==n&&i.nodeType===x&&(e==="*"||i.namespaceURI===e)&&(t==="*"||i.localName==t)&&r.push(i)}),r})}};B.prototype.getElementsByTagName=q.prototype.getElementsByTagName;B.prototype.getElementsByTagNameNS=q.prototype.getElementsByTagNameNS;D(q,N);function ie(){}ie.prototype.nodeType=k;D(ie,N);function Z(){}Z.prototype={data:"",substringData:function(e,t){return this.data.substring(e,e+t)},appendData:function(e){e=this.data+e,this.nodeValue=this.data=e,this.length=e.length},insertData:function(e,t){this.replaceData(e,0,t)},appendChild:function(e){throw new Error(g[Ct])},deleteData:function(e,t){this.replaceData(e,t,"")},replaceData:function(e,t,n){var r=this.data.substring(0,e),i=this.data.substring(e+t);n=r+n+i,this.nodeValue=this.data=n,this.length=n.length}};D(Z,N);function de(){}de.prototype={nodeName:"#text",nodeType:ne,splitText:function(e){var t=this.data,n=t.substring(e);t=t.substring(0,e),this.data=this.nodeValue=t,this.length=t.length;var r=this.ownerDocument.createTextNode(n);return this.parentNode&&this.parentNode.insertBefore(r,this.nextSibling),r}};D(de,Z);function ve(){}ve.prototype={nodeName:"#comment",nodeType:Ye};D(ve,Z);function ge(){}ge.prototype={nodeName:"#cdata-section",nodeType:ke};D(ge,Z);function Ee(){}Ee.prototype.nodeType=ze;D(Ee,N);function et(){}et.prototype.nodeType=_t;D(et,N);function tt(){}tt.prototype.nodeType=bt;D(tt,N);function Ne(){}Ne.prototype.nodeType=Ve;D(Ne,N);function ae(){}ae.prototype.nodeName="#document-fragment";ae.prototype.nodeType=R;D(ae,N);function ye(){}ye.prototype.nodeType=qe;D(ye,N);function nt(){}nt.prototype.serializeToString=function(e,t,n){return rt.call(e,t,n)};N.prototype.toString=rt;function rt(e,t){var n=[],r=this.nodeType==9&&this.documentElement||this,i=r.prefix,a=r.namespaceURI;if(a&&i==null){var i=r.lookupPrefix(a);if(i==null)var s=[{namespace:a,prefix:null}]}return Y(this,n,e,t,s),n.join("")}function it(e,t,n){var r=e.prefix||"",i=e.namespaceURI;if(!r&&!i||r==="xml"&&i==="http://www.w3.org/XML/1998/namespace"||i=="http://www.w3.org/2000/xmlns/")return!1;for(var a=n.length;a--;){var s=n[a];if(s.prefix==r)return s.namespace!=i}return!0}function Y(e,t,n,r,i){if(r)if(e=r(e),e){if(typeof e=="string"){t.push(e);return}}else return;switch(e.nodeType){case x:i||(i=[]);var a=i.length,s=e.attributes,c=s.length,l=e.firstChild,o=e.tagName;n=Tt===e.namespaceURI||n,t.push("<",o);for(var u=0;u<c;u++){var h=s.item(u);h.prefix=="xmlns"?i.push({prefix:h.localName,namespace:h.value}):h.nodeName=="xmlns"&&i.push({prefix:"",namespace:h.value})}for(var u=0;u<c;u++){var h=s.item(u);if(it(h,n,i)){var p=h.prefix||"",d=h.namespaceURI,T=p?" xmlns:"+p:" xmlns";t.push(T,'="',d,'"'),i.push({prefix:p,namespace:d})}Y(h,t,n,r,i)}if(it(e,n,i)){var p=e.prefix||"",d=e.namespaceURI;if(d){var T=p?" xmlns:"+p:" xmlns";t.push(T,'="',d,'"'),i.push({prefix:p,namespace:d})}}if(l||n&&!/^(?:meta|link|img|br|hr|input)$/i.test(o)){if(t.push(">"),n&&/^script$/i.test(o))for(;l;)l.data?t.push(l.data):Y(l,t,n,r,i),l=l.nextSibling;else for(;l;)Y(l,t,n,r,i),l=l.nextSibling;t.push("</",o,">")}else t.push("/>");return;case Xe:case R:for(var l=e.firstChild;l;)Y(l,t,n,r,i),l=l.nextSibling;return;case k:return t.push(" ",e.name,'="',e.value.replace(/[<&"]/g,Ze),'"');case ne:return t.push(e.data.replace(/[<&]/g,Ze).replace(/]]>/g,"]]&gt;"));case ke:return t.push("<![CDATA[",e.data,"]]>");case Ye:return t.push("<!--",e.data,"-->");case ze:var m=e.publicId,f=e.systemId;if(t.push("<!DOCTYPE ",e.name),m)t.push(" PUBLIC ",m),f&&f!="."&&t.push(" ",f),t.push(">");else if(f&&f!=".")t.push(" SYSTEM ",f,">");else{var A=e.internalSubset;A&&t.push(" [",A,"]"),t.push(">")}return;case qe:return t.push("<?",e.target," ",e.data,"?>");case Ve:return t.push("&",e.nodeName,";");default:t.push("??",e.nodeName)}}function at(e,t,n){var r;switch(t.nodeType){case x:r=t.cloneNode(!1),r.ownerDocument=e;case R:break;case k:n=!0;break}if(r||(r=t.cloneNode(!1)),r.ownerDocument=e,r.parentNode=null,n)for(var i=t.firstChild;i;)r.appendChild(at(e,i,n)),i=i.nextSibling;return r}function De(e,t,n){var r=new t.constructor;for(var i in t){var a=t[i];typeof a!="object"&&a!=r[i]&&(r[i]=a)}switch(t.childNodes&&(r.childNodes=new M),r.ownerDocument=e,r.nodeType){case x:var s=t.attributes,c=r.attributes=new re,l=s.length;c._ownerElement=r;for(var o=0;o<l;o++)r.setAttributeNode(De(e,s.item(o),!0));break;case k:n=!0}if(n)for(var u=t.firstChild;u;)r.appendChild(De(e,u,n)),u=u.nextSibling;return r}function st(e,t,n){e[t]=n}try{if(Object.defineProperty){let e=function(t){switch(t.nodeType){case x:case R:var n=[];for(t=t.firstChild;t;)t.nodeType!==7&&t.nodeType!==8&&n.push(e(t)),t=t.nextSibling;return n.join("");default:return t.nodeValue}};Ht=e,Object.defineProperty(V.prototype,"length",{get:function(){return me(this),this.$$length}}),Object.defineProperty(N.prototype,"textContent",{get:function(){return e(this)},set:function(t){switch(this.nodeType){case x:case R:for(;this.firstChild;)this.removeChild(this.firstChild);(t||String(t))&&this.appendChild(this.ownerDocument.createTextNode(t));break;default:this.data=t,this.value=t,this.nodeValue=t}}}),st=function(t,n,r){t["$$"+n]=r}}}catch(e){}var Ht;K.Node=N;K.DOMException=U;K.DOMImplementation=Be;K.XMLSerializer=nt});var ct=ee(H=>{function ot(e){this.options=e||{locator:{}}}ot.prototype.parseFromString=function(e,t){var n=this.options,r=new St,i=n.domBuilder||new J,a=n.errorHandler,s=n.locator,c=n.xmlns||{},l=/\\/x?html?$/.test(t),o=l?Ot.entityMap:{lt:"<",gt:">",amp:"&",quot:'"',apos:"'"};return s&&i.setDocumentLocator(s),r.errorHandler=Rt(a,i,s),r.domBuilder=n.domBuilder||i,l&&(c[""]="http://www.w3.org/1999/xhtml"),c.xml=c.xml||"http://www.w3.org/XML/1998/namespace",e&&typeof e=="string"?r.parse(e,c,o):r.errorHandler.error("invalid doc source"),i.doc};function Rt(e,t,n){if(!e){if(t instanceof J)return t;e=t}var r={},i=e instanceof Function;n=n||{};function a(s){var c=e[s];!c&&i&&(c=e.length==2?function(l){e(s,l)}:e),r[s]=c&&function(l){c("[xmldom "+s+"]	"+l+Te(n))}||function(){}}return a("warning"),a("error"),a("fatalError"),r}function J(){this.cdata=!1}function X(e,t){t.lineNumber=e.lineNumber,t.columnNumber=e.columnNumber}J.prototype={startDocument:function(){this.doc=new Ut().createDocument(null,null,null),this.locator&&(this.doc.documentURI=this.locator.systemId)},startElement:function(e,t,n,r){var i=this.doc,a=i.createElementNS(e,n||t),s=r.length;se(this,a),this.currentElement=a,this.locator&&X(this.locator,a);for(var c=0;c<s;c++){var e=r.getURI(c),l=r.getValue(c),n=r.getQName(c),o=i.createAttributeNS(e,n);this.locator&&X(r.getLocator(c),o),o.value=o.nodeValue=l,a.setAttributeNode(o)}},endElement:function(e,t,n){var r=this.currentElement,i=r.tagName;this.currentElement=r.parentNode},startPrefixMapping:function(e,t){},endPrefixMapping:function(e){},processingInstruction:function(e,t){var n=this.doc.createProcessingInstruction(e,t);this.locator&&X(this.locator,n),se(this,n)},ignorableWhitespace:function(e,t,n){},characters:function(e,t,n){if(e=ut.apply(this,arguments),e){if(this.cdata)var r=this.doc.createCDATASection(e);else var r=this.doc.createTextNode(e);this.currentElement?this.currentElement.appendChild(r):/^\\s*$/.test(e)&&this.doc.appendChild(r),this.locator&&X(this.locator,r)}},skippedEntity:function(e){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(e){(this.locator=e)&&(e.lineNumber=0)},comment:function(e,t,n){e=ut.apply(this,arguments);var r=this.doc.createComment(e);this.locator&&X(this.locator,r),se(this,r)},startCDATA:function(){this.cdata=!0},endCDATA:function(){this.cdata=!1},startDTD:function(e,t,n){var r=this.doc.implementation;if(r&&r.createDocumentType){var i=r.createDocumentType(e,t,n);this.locator&&X(this.locator,i),se(this,i)}},warning:function(e){console.warn("[xmldom warning]	"+e,Te(this.locator))},error:function(e){console.error("[xmldom error]	"+e,Te(this.locator))},fatalError:function(e){throw new Mt(e,this.locator)}};function Te(e){if(e)return\`
@\`+(e.systemId||"")+"#[line:"+e.lineNumber+",col:"+e.columnNumber+"]"}function ut(e,t,n){return typeof e=="string"?e.substr(t,n):e.length>=t+n||t?new java.lang.String(e,t,n)+"":e}"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\\w+/g,function(e){J.prototype[e]=function(){return null}});function se(e,t){e.currentElement?e.currentElement.appendChild(t):e.doc.appendChild(t)}var Ot=Re(),lt=Pe(),St=lt.XMLReader,Mt=lt.ParseError,Ut=H.DOMImplementation=we().DOMImplementation;H.XMLSerializer=we().XMLSerializer;H.DOMParser=ot;H.__DOMHandler=J});function le(e,t){return(e%t+t)%t}function ce(e){return"ID_xyxyxyxyxyxy".replace(/[xy]/g,function(t){var n=Math.random()*16|0,r=t=="x"?n:n&3|8;return r.toString(16)})}var{DOMParser:$t}=ct(),Ft=/(<(span|div).*?<\\/(span|div)>)/g,O=self,ft=class{constructor(){this.queue=[];this.parsing=!1;this.parseTitle=!1;O.addEventListener("message",t=>{if(t.data.type=="options"){let{defaultCalendar:n,format:r,parseTitle:i,supportsTimelines:a,timelineTag:s}=t.data;this.defaultCalendar=n,this.format=r,this.parseTitle=i,this.supportsTimelines=a,this.timelineTag=s}}),O.addEventListener("message",t=>{if(t.data.type=="calendars"){let{calendars:n}=t.data;this.calendars=[...n]}}),O.addEventListener("message",t=>{t.data.type=="queue"&&this.add(...t.data.paths)})}add(...t){this.queue.push(...t),this.parsing||this.parse()}async parse(){for(this.parsing=!0;this.queue.length;){let t=this.queue.shift();await this.getFileData(t)}this.parsing=!1,O.postMessage({type:"save"})}async getFileData(t){let n=this;return new Promise(r=>{function i(a){if(a.data.type=="queue"){O.removeEventListener("message",i),r();return}if(a.data.type!="file"||a.data.path!=t)return;O.removeEventListener("message",i);let{data:s,cache:c,allTags:l,file:o}=a.data;n.parseFileForEvents(s,c,l,o),r()}setTimeout(()=>r,500),O.addEventListener("message",i),O.postMessage({path:t,type:"get"})})}getDataFromFrontmatter(t){let n,r;return t&&(n=t==null?void 0:t["fc-calendar"],r=t==null?void 0:t["fc-category"]),(!n||!n.length)&&(n=this.defaultCalendar),n=n.toLowerCase(),{calendar:this.calendars.find(a=>n==a.name.toLowerCase()),fcCategory:r}}parseFileForEvents(t,n,r,i){var o,u,h,p,d,T;let a=[],{frontmatter:s}=n!=null?n:{},{calendar:c,fcCategory:l}=this.getDataFromFrontmatter(s);if(!!c){this.supportsTimelines&&r&&r.includes(this.timelineTag)&&a.push(...this.parseTimelineEvents(c,t,i,l)),a.push(...this.parseFrontmatterEvents(c,l,s,i));for(let m of a){let f=c.events.find(A=>A.note==i.path&&(!m.timestamp||A.timestamp==m.timestamp));(f==null?void 0:f.date.day)==m.date.day&&(f==null?void 0:f.date.month)==m.date.month&&(f==null?void 0:f.date.year)==m.date.year&&((o=f==null?void 0:f.end)==null?void 0:o.day)==((u=m.end)==null?void 0:u.day)&&((h=f==null?void 0:f.end)==null?void 0:h.month)==((p=m.end)==null?void 0:p.month)&&((d=f==null?void 0:f.end)==null?void 0:d.year)==((T=m.end)==null?void 0:T.year)&&(f==null?void 0:f.category)==m.category&&(!m.timestamp&&!(f==null?void 0:f.timestamp)||(f==null?void 0:f.timestamp)==m.timestamp)||O.postMessage({type:"update",id:c.id,index:f?c.events.findIndex(A=>A.id==(f==null?void 0:f.id)):-1,event:m,original:f})}}}parseFrontmatterEvents(t,n,r,i){let{date:a,end:s}=this.getDates(r,this.parseTitle?i.basename:"");if(!a)return[];if((a==null?void 0:a.month)&&typeof(a==null?void 0:a.month)=="string"){let o=t.static.months.find(u=>u.name==a.month);o?a.month=t.static.months.indexOf(o):a.month=null}else(a==null?void 0:a.month)&&typeof(a==null?void 0:a.month)=="number"&&(a.month=le(a.month-1,t.static.months.length));if((s==null?void 0:s.month)&&typeof(s==null?void 0:s.month)=="string"){let o=t.static.months.find(u=>u.name==s.month);o?s.month=t.static.months.indexOf(o):s.month=null}else(s==null?void 0:s.month)&&typeof(s==null?void 0:s.month)=="number"&&(s.month=le(s.month-1,t.static.months.length));let c=Number(\`\${a.year}\${a.month}\${a.day}00\`),l=t.categories.find(o=>(o==null?void 0:o.name)==n);return[{id:ce(6),name:i.basename,note:i.path,date:a,end:s,category:l==null?void 0:l.id,description:""}]}parseTimelineEvents(t,n,r,i){var c;let a=[],s=new $t;for(let l of n.matchAll(Ft)){let o=s.parseFromString(l[0],"text/html"),u={class:o.documentElement.getAttribute("class"),dataset:{date:o.documentElement.getAttribute("data-date"),title:o.documentElement.getAttribute("data-title"),class:o.documentElement.getAttribute("data-class"),end:o.documentElement.getAttribute("data-end")},content:o.documentElement.textContent};if(u.class!=="ob-timelines"||!u.dataset.date)continue;let h=Number(u.dataset.date[0]=="-"?+u.dataset.date.substring(1,u.dataset.date.length).split("-").join("")*-1:+u.dataset.date.split("-").join("")),p=u.dataset.date.split(/(?<!^)-/),d={year:parseInt(p[0]),month:parseInt(p[1]),day:parseInt(p[2])},T;u.dataset.end&&(p=u.dataset.end.split(/(?<!^)-/),T={year:parseInt(p[0]),month:parseInt(p[1]),day:parseInt(p[2])});let m=t.categories.find(f=>(f==null?void 0:f.name)==i);a.push({id:ce(6),name:(c=u.dataset.title)!=null?c:r.basename,note:r.path,date:d,end:T,timestamp:h,category:m==null?void 0:m.id,description:u.content})}return a}parseDate(t){var n;if(typeof t=="string"){if(!/\\d+[./-]\\d+[./-]\\d+/.test(t))return;try{let[r]=(n=t.match(/\\d+[./-]\\d+[./-]\\d+/))!=null?n:[];if(!r)return;let i=r.split(/[.\\-\\/]/).map(s=>Number(s)),a=[...new Set(this.format.replace(/[^\\w]/g,"").toUpperCase().split(""))];return{year:i[a.indexOf("Y")],month:i[a.indexOf("M")],day:i[a.indexOf("D")]}}catch(r){return}}else return t}getDates(t={},n){let r="fc-date"in t?"fc-date":"fc-start",i;t&&r in t&&(i=t[r]),i||(i=n);let a=this.parseDate(i),s="fc-end"in t?t["fc-end"]:null,c=this.parseDate(s);return{date:a,end:c}}};new ft;
`)}var os=class extends sn.Component{constructor(e){super();this.plugin=e;this.parsing=new Set;this.tree=new Map;this.worker=new is}get calendars(){return this.plugin.data.calendars}get metadataCache(){return this.plugin.app.metadataCache}get vault(){return this.plugin.app.vault}onload(){if(this.worker.postMessage({type:"calendars",calendars:this.calendars}),this.registerEvent(this.plugin.app.workspace.on("fantasy-calendars-updated",()=>{this.worker.postMessage({type:"calendars",calendars:this.calendars})})),this.worker.postMessage({type:"options",parseTitle:this.plugin.data.parseDates,format:this.plugin.format,defaultCalendar:this.plugin.defaultCalendar?.name,supportsTimelines:this.plugin.data.supportTimelines,timelineTag:this.plugin.data.timelineTag}),this.registerEvent(this.plugin.app.workspace.on("fantasy-calendar-settings-change",()=>{this.worker.postMessage({type:"options",parseTitle:this.plugin.data.parseDates,format:this.plugin.format,defaultCalendar:this.plugin.defaultCalendar?.name,supportsTimelines:this.plugin.data.supportTimelines,timelineTag:this.plugin.data.timelineTag})})),this.registerEvent(this.metadataCache.on("changed",n=>{this.startParsing([n.path])})),this.registerEvent(this.vault.on("rename",(n,r)=>{!this.calendars.length||n instanceof sn.TFile&&this.worker.postMessage({type:"rename",file:{path:n.path,basename:n.basename,oldPath:r},sourceCalendars:this.calendars})})),this.registerEvent(this.vault.on("delete",n=>{if(n instanceof sn.TFile){for(let r of this.calendars)for(let a of r.events)!a.note||a.note===n.path&&(a.note=null);this.plugin.saveCalendar()}})),this.worker.addEventListener("message",async n=>{if(n.data.type=="get"){let{path:r}=n.data,a=this.plugin.app.vault.getAbstractFileByPath(r);if(a instanceof sn.TFile){let i=this.metadataCache.getFileCache(a),o=(0,sn.getAllTags)(i),l=await this.vault.cachedRead(a);this.worker.postMessage({type:"file",path:r,cache:i,file:{path:a.path,basename:a.basename},allTags:o,data:l})}else if(a instanceof sn.TFolder){let i=a.children.map(o=>o.path);this.startParsing(i)}}}),this.worker.addEventListener("message",async n=>{if(n.data.type=="update"){let{id:r,index:a,event:i,original:o}=n.data,l=this.calendars.find(s=>s.id==r);if(!l)return;l.events.splice(a,a>=0?1:0,i),this.addToTree(l,i),o&&this.addToTree(l,o)}}),this.worker.addEventListener("message",async n=>{n.data.type=="save"&&(this.plugin.app.workspace.trigger("fantasy-calendars-event-update",this.tree),this.tree=new Map,await this.plugin.saveCalendar())}),!this.calendars.length)return;let e=this.vault.getAbstractFileByPath(this.plugin.data.path);!e||!(e instanceof sn.TFolder)||this.startParsing(e.children.map(n=>n.path))}addToTree(e,n){this.tree.has(e.id)||this.tree.set(e.id,new Map);let r=this.tree.get(e.id);r.has(n.date.year)||r.set(n.date.year,new Set);let a=r.get(n.date.year);this.tree.set(e.id,r.set(n.date.year,a.add(n.date.month)))}startParsing(e){this.worker.postMessage({type:"queue",paths:e})}onunload(){this.worker.terminate(),this.worker=null}};var ss=class{constructor(e){this.plugin=e}getMoons(e,n){let r=n?this.plugin.data.calendars.find(({name:s})=>s==n):this.plugin.defaultCalendar??this.plugin.defaultCalendar,a=this._getHelper(r),i=e||a.current,o=a.getDayForDate(i),l=[];for(let[s,d]of o.moons){let u=createSpan();new Tn({target:u,props:{moon:s,phase:d}}),l.push({icon:u,moon:s,phase:d})}return l}_getHelper(e=this.plugin.defaultCalendar){return new Tr(e,this.plugin)}};var Vf=Oe(Rr()),Hf=Nr.Platform.isMacOS?"Meta":"Control",ts={name:null,description:null,id:null,static:{incrementDay:!1,firstWeekDay:null,overflow:!0,weekdays:[],months:[],moons:[],displayMoons:!0,displayDayNumber:!1,leapDays:[],eras:[]},current:{year:null,month:null,day:null},events:[],categories:[]},Wf={calendars:[],currentCalendar:null,defaultCalendar:null,eventPreview:!1,configDirectory:null,path:"/",parseDates:!1,dateFormat:"YYYY-MM-DD",dailyNotes:!1,version:{major:null,minor:null,patch:null},supportTimelines:!1,timelineTag:"#timeline",syncTimelines:!0,autoParse:!0,settingsToggleState:{calendars:!1,events:!1},exitWithoutSaving:!1},ls=class extends Nr.Plugin{constructor(){super(...arguments);this.api=new ss(this);this.watcher=new os(this)}async addNewCalendar(e){this.data.calendars.push({...e}),this.data.defaultCalendar||(this.data.defaultCalendar=e.id),await this.saveCalendar()}get currentCalendar(){return this.data.calendars.find(e=>e.id==this.data.currentCalendar)}get canUseDailyNotes(){return this.dailyNotes._loaded}get dailyNotes(){return this.app.internalPlugins.getPluginById("daily-notes")}get canUseTimelines(){return this.app.plugins.getPlugin("obsidian-timelines")!=null}get syncTimelines(){return this.data.syncTimelines&&this.canUseTimelines}get timelineTag(){return this.syncTimelines?this.app.plugins.getPlugin("obsidian-timelines").settings.timelineTag:this.data.timelineTag}get format(){return(this.data.dailyNotes&&this.canUseDailyNotes?this.dailyNotes.instance.options.format:this.data.dateFormat)??"YYYY-MM-DD"}get defaultCalendar(){return this.data.calendars.find(e=>e.id==this.data.defaultCalendar)??this.data.calendars[0]}get view(){let e=this.app.workspace.getLeavesOfType(Ut),n=e.length?e[0]:null;if(n&&n.view&&n.view instanceof Sn)return n.view}get full(){let e=this.app.workspace.getLeavesOfType(Jn),n=e.length?e[0]:null;if(n&&n.view&&n.view instanceof Sn)return n.view}async onload(){console.log("Loading Fantasy Calendars v"+this.manifest.version),this.registerView(Ut,e=>new Sn(this,e)),this.registerView(Jn,e=>new Sn(this,e,{full:!0})),this.app.workspace.onLayoutReady(async()=>{await this.loadSettings(),this.watcher.load(),this.addCommands(),this.addSettingTab(new fi(this)),this.addCalendarView(!0)}),this.addRibbonIcon(Ut,"Open Large Fantasy Calendar",e=>{this.app.workspace.getLeaf(e.getModifierState(Hf)).setViewState({type:Jn})})}async onunload(){console.log("Unloading Fantasy Calendars v"+this.manifest.version),this.app.workspace.getLeavesOfType(Ut).forEach(e=>e.detach()),this.app.workspace.getLeavesOfType(Jn).forEach(e=>e.detach()),this.watcher.unload()}addCommands(){this.addCommand({id:"open-fantasy-calendar",name:"Open Fantasy Calendar",callback:()=>{this.addCalendarView()}}),this.addCommand({id:"open-big-fantasy-calendar",name:"Open Large Fantasy Calendar",callback:()=>{this.addFullCalendarView()}}),this.addCommand({id:"toggle-moons",name:"Toggle Moons",checkCallback:e=>{let n=this.app.workspace.getLeavesOfType(Ut);if(n&&n.length)return e||n[0].view.toggleMoons(),!0}}),this.addCommand({id:"view-date",name:"View Date",checkCallback:e=>{let n=this.app.workspace.getLeavesOfType(Ut);if(n&&n.length)return e||n[0].view.openDate(),!0}}),this.addCommand({id:"view-date",name:"View Note Event",checkCallback:e=>{let n=this.app.workspace.getLeavesOfType(Ut);if(n&&n.length&&n[0].view instanceof Sn){let r=this.app.workspace.getActiveFile();if(r){let a=n[0].view.calendar.events.find(i=>i.note==r.path);if(a)return e||n[0].view.openDay(a.date),!0}}}})}async addCalendarView(e=!1){e&&this.app.workspace.getLeavesOfType(Ut)?.length||(await this.app.workspace.getRightLeaf(!1).setViewState({type:Ut}),this.view&&this.app.workspace.revealLeaf(this.view.leaf))}async addFullCalendarView(e=!1){e&&this.app.workspace.getLeavesOfType(Jn)?.length||(this.app.workspace.getLeaf(!1).setViewState({type:Jn}),this.full&&this.app.workspace.revealLeaf(this.full.leaf))}async loadSettings(){this.data={...(0,Vf.default)(Wf),...await this.loadData()},this.configDirectory&&await this.app.vault.adapter.exists(this.configFilePath)&&(this.data=Object.assign({},this.data,JSON.parse(await this.app.vault.adapter.read(this.configFilePath)))),!this.data.defaultCalendar&&this.data.calendars.length&&(this.data.defaultCalendar=this.data.calendars[0].id),this.settingsLoaded=!0,this.app.workspace.trigger("fantasy-calendars-settings-loaded")}onSettingsLoad(e){this.settingsLoaded?e():this.app.workspace.on("fantasy-calendars-settings-loaded",()=>e())}async saveCalendar(){this.app.workspace.trigger("fantasy-calendars-updated")}get configDirectory(){if(!(!this.data||!this.data.configDirectory))return`${this.data.configDirectory}/plugins/fantasy-calendar`}get configFilePath(){if(!!this.data.configDirectory)return`${this.configDirectory}/data.json`}async saveSettings(){await this.saveData(this.data),this.app.workspace.trigger("fantasy-calendar-settings-change")}async saveData(e){if(this.configDirectory)try{await this.app.vault.adapter.exists(this.configDirectory)||await this.app.vault.adapter.mkdir(this.configDirectory),await this.app.vault.adapter.write(this.configFilePath,JSON.stringify(e))}catch(n){console.error(n),new Nr.Notice("There was an error saving into the configured directory.")}await super.saveData(e)}};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/*! https://mths.be/he v1.2.0 by @mathias | MIT license */
/**
 * chroma.js - JavaScript library for color conversions
 *
 * Copyright (c) 2011-2019, Gregor Aisch
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. The name Gregor Aisch may not be used to endorse or promote products
 * derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * -------------------------------------------------------
 *
 * chroma.js includes colors from colorbrewer2.org, which are released under
 * the following license:
 *
 * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,
 * and The Pennsylvania State University.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * ------------------------------------------------------
 *
 * Named colors are taken from X11 Color Names.
 * http://www.w3.org/TR/css3-color/#svg-color
 *
 * @preserve
 */
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL2Zhc3QtY29weS9zcmMvdXRpbHMudHMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL2Zhc3QtY29weS9zcmMvaW5kZXgudHMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL2Rpc3RpbmN0LWNvbG9ycy9saWIvdXRpbHMuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL21vdXQvbGFuZy9raW5kT2YuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL21vdXQvbGFuZy9pc1BsYWluT2JqZWN0LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9tb3V0L29iamVjdC9oYXNPd24uanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL21vdXQvb2JqZWN0L2ZvckluLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9tb3V0L29iamVjdC9mb3JPd24uanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL21vdXQvb2JqZWN0L21peEluLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9tb3V0L2xhbmcvY2xvbmUuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL21vdXQvbGFuZy9kZWVwQ2xvbmUuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL21vdXQvbGFuZy9pcy5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvbW91dC9sYW5nL2lzS2luZC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvbW91dC9sYW5nL2lzT2JqZWN0LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9tb3V0L2xhbmcvaXNBcnJheS5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvbW91dC9mdW5jdGlvbi9pZGVudGl0eS5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvbW91dC9mdW5jdGlvbi9wcm9wLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9tb3V0L29iamVjdC9kZWVwTWF0Y2hlcy5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvbW91dC9mdW5jdGlvbi9tYWtlSXRlcmF0b3JfLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9tb3V0L29iamVjdC9ldmVyeS5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvbW91dC9vYmplY3QvZXF1YWxzLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9tb3V0L2FycmF5L2V2ZXJ5LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9tb3V0L2FycmF5L2VxdWFscy5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvbW91dC9sYW5nL2RlZXBFcXVhbHMuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL2Nocm9tYS1qcy9jaHJvbWEuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL2Rpc3RpbmN0LWNvbG9ycy9saWIvaW5kZXguanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL2hlL2hlLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9yYW5kb21jb2xvci9yYW5kb21Db2xvci5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvbWFpbi50cyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvc2V0dGluZ3Mvc2V0dGluZ3MudHMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2ltcG9ydC9pbXBvcnRlci50cyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvdXRpbHMvZnVuY3Rpb25zLnRzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9zdmVsdGUvaW50ZXJuYWwvaW5kZXgubWpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9jcmVhdG9yL0NyZWF0b3Iuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9tb2RhbHMvcHJlc2V0LnRzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy91dGlscy9wcmVzZXRzLnRzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9zdmVsdGUvZWFzaW5nL2luZGV4Lm1qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvc3ZlbHRlL3RyYW5zaXRpb24vaW5kZXgubWpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9zdmVsdGUvc3RvcmUvaW5kZXgubWpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9jcmVhdG9yL1V0aWxpdGllcy9EZXRhaWxzLnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvc2V0dGluZ3MvY3JlYXRvci9VdGlsaXRpZXMvdXRpbHMudHMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2NyZWF0b3IvQ29udGFpbmVycy9DdXJyZW50RGF0ZS5zdmVsdGUiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2NyZWF0b3IvU2V0dGluZ3MvVGV4dEFyZWFDb21wb25lbnQuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9jcmVhdG9yL1NldHRpbmdzL1RleHRDb21wb25lbnQuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9jcmVhdG9yL1NldHRpbmdzL1RvZ2dsZUNvbXBvbmVudC5zdmVsdGUiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2NyZWF0b3IvQ29udGFpbmVycy9JbmZvLnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvc3ZlbHRlL2FuaW1hdGUvaW5kZXgubWpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9zdmVsdGUtZG5kLWFjdGlvbi9kaXN0L2luZGV4Lm1qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvc2V0dGluZ3MvY3JlYXRvci9Db250YWluZXJzL1dlZWtkYXlDb250YWluZXIuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9jcmVhdG9yL1V0aWxpdGllcy9BZGROZXcuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9jcmVhdG9yL1V0aWxpdGllcy9Ob0V4aXN0aW5nSXRlbXMuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9jcmVhdG9yL0NvbnRhaW5lcnMvTW9udGhDb250YWluZXIuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9jcmVhdG9yL0NvbnRhaW5lcnMvTW9udGhJbnN0YW5jZS5zdmVsdGUiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2NyZWF0b3IvQ29udGFpbmVycy9ZZWFyQ29udGFpbmVyLnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvc2V0dGluZ3MvbW9kYWxzL2NvbmZpcm0udHMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2NyZWF0b3IvQ29udGFpbmVycy9FdmVudEluc3RhbmNlLnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvc2V0dGluZ3MvY3JlYXRvci9VdGlsaXRpZXMvRG90LnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvc2V0dGluZ3MvbW9kYWxzL2V2ZW50LnRzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zdWdnZXN0ZXIvc3VnZ2VzdGVyLnRzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZW51bXMuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Tm9kZU5hbWUuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2luc3RhbmNlT2YuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvYXBwbHlTdHlsZXMuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRMYXlvdXRSZWN0LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2NvbnRhaW5zLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNUYWJsZUVsZW1lbnQuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFBhcmVudE5vZGUuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWF0aC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3dpdGhpbi5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEZyZXNoU2lkZU9iamVjdC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2V4cGFuZFRvSGFzaE1hcC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9hcnJvdy5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldFZhcmlhdGlvbi5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9jb21wdXRlU3R5bGVzLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2V2ZW50TGlzdGVuZXJzLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0T3Bwb3NpdGVQbGFjZW1lbnQuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3dTY3JvbGwuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93U2Nyb2xsQmFyWC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRWaWV3cG9ydFJlY3QuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRSZWN0LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2lzU2Nyb2xsUGFyZW50LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFNjcm9sbFBhcmVudC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9saXN0U2Nyb2xsUGFyZW50cy5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3JlY3RUb0NsaWVudFJlY3QuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q2xpcHBpbmdSZWN0LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvY29tcHV0ZU9mZnNldHMuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9kZXRlY3RPdmVyZmxvdy5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2NvbXB1dGVBdXRvUGxhY2VtZW50LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2ZsaXAuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvaGlkZS5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9vZmZzZXQuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcG9wcGVyT2Zmc2V0cy5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEFsdEF4aXMuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcHJldmVudE92ZXJmbG93LmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldEhUTUxFbGVtZW50U2Nyb2xsLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE5vZGVTY3JvbGwuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcG9zaXRlUmVjdC5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL29yZGVyTW9kaWZpZXJzLmpzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZGVib3VuY2UuanMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9tZXJnZUJ5TmFtZS5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2NyZWF0ZVBvcHBlci5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3BvcHBlci5qcyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvc3VnZ2VzdGVyL3BhdGgudHMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2NyZWF0b3IvQ29udGFpbmVycy9FdmVudENvbnRhaW5lci5zdmVsdGUiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2NyZWF0b3IvQ29udGFpbmVycy9DYXRlZ29yeUNvbnRhaW5lci5zdmVsdGUiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2NyZWF0b3IvQ29udGFpbmVycy9Nb29uQ29udGFpbmVyLnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvdXRpbHMvY29uc3RhbnRzLnRzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy92aWV3L3VpL01vb24uc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9tb2RhbHMvbW9vbnMudHMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3NldHRpbmdzL2NyZWF0b3IvQ29udGFpbmVycy9MZWFwRGF5SW5zdGFuY2Uuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zZXR0aW5ncy9tb2RhbHMvbGVhcGRheS50cyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvc2V0dGluZ3MvY3JlYXRvci9Db250YWluZXJzL0xlYXBEYXlDb250YWluZXIuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9zdWdnZXN0ZXIvZm9sZGVyLnRzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy92aWV3L3ZpZXcudHMiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL2hlbHBlci9pbmRleC50cyIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvdmlldy91aS9EYXlWaWV3LnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvdmlldy91aS9GbGFnLnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvdmlldy91aS9GbGFncy5zdmVsdGUiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3ZpZXcvdWkvRG90LnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvdmlldy91aS9Eb3RzLnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvdmlldy91aS9EYXkuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy92aWV3L3VpL01vbnRoLnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvdmlldy91aS9OYXYuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy92aWV3L3VpL1llYXJOYXYuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy92aWV3L3VpL1llYXJWaWV3LnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvdmlldy91aS9ZZWFyVmlld0JpZy5zdmVsdGUiLCAiLi4vLi4vLi4vLi4vR2l0SHViL29ic2lkaWFuLWZhbnRhc3ktY2FsZW5kYXIvc3JjL3ZpZXcvdWkvWWVhclZpZXdDb250YWluZXIuc3ZlbHRlIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy92aWV3L3VpL0NhbGVuZGFyLnN2ZWx0ZSIsICIuLi8uLi8uLi8uLi9HaXRIdWIvb2JzaWRpYW4tZmFudGFzeS1jYWxlbmRhci9zcmMvd2F0Y2hlci93YXRjaGVyLnRzIiwgImlubGluZS13b3JrZXI6X19pbmxpbmUtd29ya2VyIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy93YXRjaGVyL3dhdGNoZXIud29ya2VyLnRzIiwgIi4uLy4uLy4uLy4uL0dpdEh1Yi9vYnNpZGlhbi1mYW50YXN5LWNhbGVuZGFyL3NyYy9hcGkvYXBpLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCB7IHRvU3RyaW5nOiB0b1N0cmluZ0Z1bmN0aW9uIH0gPSBGdW5jdGlvbi5wcm90b3R5cGU7XG5jb25zdCB7XG4gIGNyZWF0ZSxcbiAgZGVmaW5lUHJvcGVydHksXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgZ2V0T3duUHJvcGVydHlOYW1lcyxcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzLFxuICBnZXRQcm90b3R5cGVPZixcbn0gPSBPYmplY3Q7XG5jb25zdCB7IGhhc093blByb3BlcnR5LCBwcm9wZXJ0eUlzRW51bWVyYWJsZSB9ID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBAZW51bVxuICpcbiAqIEBjb25zdCB7T2JqZWN0fSBTVVBQT1JUU1xuICpcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gU1lNQk9MX1BST1BFUlRJRVMgYXJlIHN5bWJvbCBwcm9wZXJ0aWVzIHN1cHBvcnRlZFxuICogQHByb3BlcnR5IHtib29sZWFufSBXRUFLTUFQIGlzIFdlYWtNYXAgc3VwcG9ydGVkXG4gKi9cbmV4cG9ydCBjb25zdCBTVVBQT1JUUyA9IHtcbiAgU1lNQk9MX1BST1BFUlRJRVM6IHR5cGVvZiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicsXG4gIFdFQUtNQVA6IHR5cGVvZiBXZWFrTWFwID09PSAnZnVuY3Rpb24nLFxufTtcblxuLyoqXG4gKiBAZnVuY3Rpb24gY3JlYXRlQ2FjaGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIGdldCBhIG5ldyBjYWNoZSBvYmplY3QgdG8gcHJldmVudCBjaXJjdWxhciByZWZlcmVuY2VzXG4gKlxuICogQHJldHVybnMgdGhlIG5ldyBjYWNoZSBvYmplY3RcbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUNhY2hlID0gKCk6IEZhc3RDb3B5LkNhY2hlID0+IHtcbiAgaWYgKFNVUFBPUlRTLldFQUtNQVApIHtcbiAgICByZXR1cm4gbmV3IFdlYWtNYXAoKTtcbiAgfVxuXG4gIC8vIHRpbnkgaW1wbGVtZW50YXRpb24gb2YgV2Vha01hcFxuICBjb25zdCBvYmplY3QgPSBjcmVhdGUoe1xuICAgIGhhczogKGtleTogYW55KSA9PiAhIX5vYmplY3QuX2tleXMuaW5kZXhPZihrZXkpLFxuICAgIHNldDogKGtleTogYW55LCB2YWx1ZTogYW55KSA9PiB7XG4gICAgICBvYmplY3QuX2tleXMucHVzaChrZXkpO1xuICAgICAgb2JqZWN0Ll92YWx1ZXMucHVzaCh2YWx1ZSk7XG4gICAgfSxcbiAgICBnZXQ6IChrZXk6IGFueSkgPT4gb2JqZWN0Ll92YWx1ZXNbb2JqZWN0Ll9rZXlzLmluZGV4T2Yoa2V5KV0sXG4gIH0pO1xuXG4gIG9iamVjdC5fa2V5cyA9IFtdO1xuICBvYmplY3QuX3ZhbHVlcyA9IFtdO1xuXG4gIHJldHVybiBvYmplY3Q7XG59O1xuXG4vKipcbiAqIEBmdW5jdGlvbiBnZXRDbGVhbkNsb25lXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBnZXQgYW4gZW1wdHkgdmVyc2lvbiBvZiB0aGUgb2JqZWN0IHdpdGggdGhlIHNhbWUgcHJvdG90eXBlIGl0IGhhc1xuICpcbiAqIEBwYXJhbSBvYmplY3QgdGhlIG9iamVjdCB0byBidWlsZCBhIGNsZWFuIGNsb25lIGZyb21cbiAqIEBwYXJhbSByZWFsbSB0aGUgcmVhbG0gdGhlIG9iamVjdCByZXNpZGVzIGluXG4gKiBAcmV0dXJucyB0aGUgZW1wdHkgY2xvbmVkIG9iamVjdFxuICovXG5leHBvcnQgY29uc3QgZ2V0Q2xlYW5DbG9uZSA9IChvYmplY3Q6IGFueSwgcmVhbG06IEZhc3RDb3B5LlJlYWxtKTogYW55ID0+IHtcbiAgaWYgKCFvYmplY3QuY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gY3JlYXRlKG51bGwpO1xuICB9XG5cbiAgY29uc3QgeyBjb25zdHJ1Y3RvcjogQ29uc3RydWN0b3IgfSA9IG9iamVjdDtcbiAgY29uc3QgcHJvdG90eXBlID0gb2JqZWN0Ll9fcHJvdG9fXyB8fCBnZXRQcm90b3R5cGVPZihvYmplY3QpO1xuXG4gIGlmIChDb25zdHJ1Y3RvciA9PT0gcmVhbG0uT2JqZWN0KSB7XG4gICAgcmV0dXJuIHByb3RvdHlwZSA9PT0gcmVhbG0uT2JqZWN0LnByb3RvdHlwZSA/IHt9IDogY3JlYXRlKHByb3RvdHlwZSk7XG4gIH1cblxuICBpZiAofnRvU3RyaW5nRnVuY3Rpb24uY2FsbChDb25zdHJ1Y3RvcikuaW5kZXhPZignW25hdGl2ZSBjb2RlXScpKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBuZXcgQ29uc3RydWN0b3IoKTtcbiAgICB9IGNhdGNoIHt9XG4gIH1cblxuICByZXR1cm4gY3JlYXRlKHByb3RvdHlwZSk7XG59O1xuXG4vKipcbiAqIEBmdW5jdGlvbiBnZXRPYmplY3RDbG9uZUxvb3NlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBnZXQgYSBjb3B5IG9mIHRoZSBvYmplY3QgYmFzZWQgb24gbG9vc2UgcnVsZXMsIG1lYW5pbmcgYWxsIGVudW1lcmFibGUga2V5c1xuICogYW5kIHN5bWJvbHMgYXJlIGNvcGllZCwgYnV0IHByb3BlcnR5IGRlc2NyaXB0b3JzIGFyZSBub3QgY29uc2lkZXJlZFxuICpcbiAqIEBwYXJhbSBvYmplY3QgdGhlIG9iamVjdCB0byBjbG9uZVxuICogQHBhcmFtIHJlYWxtIHRoZSByZWFsbSB0aGUgb2JqZWN0IHJlc2lkZXMgaW5cbiAqIEBwYXJhbSBoYW5kbGVDb3B5IHRoZSBmdW5jdGlvbiB0aGF0IGhhbmRsZXMgY29weWluZyB0aGUgb2JqZWN0XG4gKiBAcmV0dXJucyB0aGUgY29waWVkIG9iamVjdFxuICovXG5leHBvcnQgY29uc3QgZ2V0T2JqZWN0Q2xvbmVMb29zZTogRmFzdENvcHkuT2JqZWN0Q2xvbmVyID0gKFxuICBvYmplY3Q6IGFueSxcbiAgcmVhbG06IEZhc3RDb3B5LlJlYWxtLFxuICBoYW5kbGVDb3B5OiBGYXN0Q29weS5Db3BpZXIsXG4gIGNhY2hlOiBGYXN0Q29weS5DYWNoZSxcbik6IGFueSA9PiB7XG4gIGNvbnN0IGNsb25lOiBhbnkgPSBnZXRDbGVhbkNsb25lKG9iamVjdCwgcmVhbG0pO1xuICAvLyBzZXQgaW4gdGhlIGNhY2hlIGltbWVkaWF0ZWx5IHRvIGJlIGFibGUgdG8gcmV1c2UgdGhlIG9iamVjdCByZWN1cnNpdmVseVxuICBjYWNoZS5zZXQob2JqZWN0LCBjbG9uZSk7XG5cbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqZWN0KSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpKSB7XG4gICAgICBjbG9uZVtrZXldID0gaGFuZGxlQ29weShvYmplY3Rba2V5XSwgY2FjaGUpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChTVVBQT1JUUy5TWU1CT0xfUFJPUEVSVElFUykge1xuICAgIGNvbnN0IHN5bWJvbHM6IHN5bWJvbFtdID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7XG5cbiAgICBjb25zdCB7IGxlbmd0aCB9ID0gc3ltYm9scztcblxuICAgIGlmIChsZW5ndGgpIHtcbiAgICAgIGZvciAobGV0IGluZGV4ID0gMCwgc3ltYm9sOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICBzeW1ib2wgPSBzeW1ib2xzW2luZGV4XTtcblxuICAgICAgICBpZiAocHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChvYmplY3QsIHN5bWJvbCkpIHtcbiAgICAgICAgICBjbG9uZVtzeW1ib2xdID0gaGFuZGxlQ29weShvYmplY3Rbc3ltYm9sXSwgY2FjaGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNsb25lO1xufTtcblxuLyoqXG4gKiBAZnVuY3Rpb24gZ2V0T2JqZWN0Q2xvbmVTdHJpY3RcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIGdldCBhIGNvcHkgb2YgdGhlIG9iamVjdCBiYXNlZCBvbiBzdHJpY3QgcnVsZXMsIG1lYW5pbmcgYWxsIGtleXMgYW5kIHN5bWJvbHNcbiAqIGFyZSBjb3BpZWQgYmFzZWQgb24gdGhlIG9yaWdpbmFsIHByb3BlcnR5IGRlc2NyaXB0b3JzXG4gKlxuICogQHBhcmFtIG9iamVjdCB0aGUgb2JqZWN0IHRvIGNsb25lXG4gKiBAcGFyYW0gcmVhbG0gdGhlIHJlYWxtIHRoZSBvYmplY3QgcmVzaWRlcyBpblxuICogQHBhcmFtIGhhbmRsZUNvcHkgdGhlIGZ1bmN0aW9uIHRoYXQgaGFuZGxlcyBjb3B5aW5nIHRoZSBvYmplY3RcbiAqIEByZXR1cm5zIHRoZSBjb3BpZWQgb2JqZWN0XG4gKi9cbmV4cG9ydCBjb25zdCBnZXRPYmplY3RDbG9uZVN0cmljdDogRmFzdENvcHkuT2JqZWN0Q2xvbmVyID0gKFxuICBvYmplY3Q6IGFueSxcbiAgcmVhbG06IEZhc3RDb3B5LlJlYWxtLFxuICBoYW5kbGVDb3B5OiBGYXN0Q29weS5Db3BpZXIsXG4gIGNhY2hlOiBGYXN0Q29weS5DYWNoZSxcbik6IGFueSA9PiB7XG4gIGNvbnN0IGNsb25lOiBhbnkgPSBnZXRDbGVhbkNsb25lKG9iamVjdCwgcmVhbG0pO1xuICAvLyBzZXQgaW4gdGhlIGNhY2hlIGltbWVkaWF0ZWx5IHRvIGJlIGFibGUgdG8gcmV1c2UgdGhlIG9iamVjdCByZWN1cnNpdmVseVxuICBjYWNoZS5zZXQob2JqZWN0LCBjbG9uZSk7XG5cbiAgY29uc3QgcHJvcGVydGllczogKHN0cmluZyB8IHN5bWJvbClbXSA9IFNVUFBPUlRTLlNZTUJPTF9QUk9QRVJUSUVTXG4gICAgPyBnZXRPd25Qcm9wZXJ0eU5hbWVzKG9iamVjdCkuY29uY2F0KChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KSBhcyB1bmtub3duKSBhcyBzdHJpbmdbXSlcbiAgICA6IGdldE93blByb3BlcnR5TmFtZXMob2JqZWN0KTtcblxuICBjb25zdCB7IGxlbmd0aCB9ID0gcHJvcGVydGllcztcblxuICBpZiAobGVuZ3RoKSB7XG4gICAgZm9yIChsZXQgaW5kZXggPSAwLCBwcm9wZXJ0eSwgZGVzY3JpcHRvcjsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcbiAgICAgIHByb3BlcnR5ID0gcHJvcGVydGllc1tpbmRleF07XG5cbiAgICAgIGlmIChwcm9wZXJ0eSAhPT0gJ2NhbGxlZScgJiYgcHJvcGVydHkgIT09ICdjYWxsZXInKSB7XG4gICAgICAgIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7XG5cbiAgICAgICAgaWYgKGRlc2NyaXB0b3IpIHtcbiAgICAgICAgICAvLyBPbmx5IGNsb25lIHRoZSB2YWx1ZSBpZiBhY3R1YWxseSBhIHZhbHVlLCBub3QgYSBnZXR0ZXIgLyBzZXR0ZXIuXG4gICAgICAgICAgaWYgKCFkZXNjcmlwdG9yLmdldCAmJiAhZGVzY3JpcHRvci5zZXQpIHtcbiAgICAgICAgICAgIGRlc2NyaXB0b3IudmFsdWUgPSBoYW5kbGVDb3B5KG9iamVjdFtwcm9wZXJ0eV0sIGNhY2hlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkoY2xvbmUsIHByb3BlcnR5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgLy8gVGVlIGFib3ZlIGNhbiBmYWlsIG9uIG5vZGUgaW4gZWRnZSBjYXNlcywgc28gZmFsbCBiYWNrIHRvIHRoZSBsb29zZSBhc3NpZ25tZW50LlxuICAgICAgICAgICAgY2xvbmVbcHJvcGVydHldID0gZGVzY3JpcHRvci52YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gSW4gZXh0cmEgZWRnZSBjYXNlcyB3aGVyZSB0aGUgcHJvcGVydHkgZGVzY3JpcHRvciBjYW5ub3QgYmUgcmV0cml2ZWQsIGZhbGwgYmFjayB0b1xuICAgICAgICAgIC8vIHRoZSBsb29zZSBhc3NpZ25tZW50LlxuICAgICAgICAgIGNsb25lW3Byb3BlcnR5XSA9IGhhbmRsZUNvcHkob2JqZWN0W3Byb3BlcnR5XSwgY2FjaGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNsb25lO1xufTtcblxuLyoqXG4gKiBAZnVuY3Rpb24gZ2V0UmVnRXhwRmxhZ3NcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIGdldCB0aGUgZmxhZ3MgdG8gYXBwbHkgdG8gdGhlIGNvcGllZCByZWdleHBcbiAqXG4gKiBAcGFyYW0gcmVnRXhwIHRoZSByZWdleHAgdG8gZ2V0IHRoZSBmbGFncyBvZlxuICogQHJldHVybnMgdGhlIGZsYWdzIGZvciB0aGUgcmVnZXhwXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRSZWdFeHBGbGFncyA9IChyZWdFeHA6IFJlZ0V4cCk6IHN0cmluZyA9PiB7XG4gIGxldCBmbGFncyA9ICcnO1xuXG4gIGlmIChyZWdFeHAuZ2xvYmFsKSB7XG4gICAgZmxhZ3MgKz0gJ2cnO1xuICB9XG5cbiAgaWYgKHJlZ0V4cC5pZ25vcmVDYXNlKSB7XG4gICAgZmxhZ3MgKz0gJ2knO1xuICB9XG5cbiAgaWYgKHJlZ0V4cC5tdWx0aWxpbmUpIHtcbiAgICBmbGFncyArPSAnbSc7XG4gIH1cblxuICBpZiAocmVnRXhwLnVuaWNvZGUpIHtcbiAgICBmbGFncyArPSAndSc7XG4gIH1cblxuICBpZiAocmVnRXhwLnN0aWNreSkge1xuICAgIGZsYWdzICs9ICd5JztcbiAgfVxuXG4gIHJldHVybiBmbGFncztcbn07XG4iLCAiLy8gdXRpbHNcbmltcG9ydCB7IGNyZWF0ZUNhY2hlLCBnZXRPYmplY3RDbG9uZUxvb3NlLCBnZXRPYmplY3RDbG9uZVN0cmljdCwgZ2V0UmVnRXhwRmxhZ3MgfSBmcm9tICcuL3V0aWxzJztcblxuY29uc3QgeyBpc0FycmF5IH0gPSBBcnJheTtcblxuY29uc3QgR0xPQkFMX1RISVMgPSAoKCkgPT4ge1xuICBpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHNlbGY7XG4gIH1cblxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gd2luZG93O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGdsb2JhbDtcbiAgfVxuXG4gIGlmIChjb25zb2xlICYmIGNvbnNvbGUuZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gbG9jYXRlIGdsb2JhbCBvYmplY3QsIHJldHVybmluZyBcInRoaXNcIi4nKTtcbiAgfVxufSkoKTtcblxuLyoqXG4gKiBAZnVuY3Rpb24gY29weVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogY29weSBhbiBvYmplY3QgZGVlcGx5IGFzIG11Y2ggYXMgcG9zc2libGVcbiAqXG4gKiBJZiBgc3RyaWN0YCBpcyBhcHBsaWVkLCB0aGVuIGFsbCBwcm9wZXJ0aWVzIChpbmNsdWRpbmcgbm9uLWVudW1lcmFibGUgb25lcylcbiAqIGFyZSBjb3BpZWQgd2l0aCB0aGVpciBvcmlnaW5hbCBwcm9wZXJ0eSBkZXNjcmlwdG9ycyBvbiBib3RoIG9iamVjdHMgYW5kIGFycmF5cy5cbiAqXG4gKiBUaGUgb2JqZWN0IGlzIGNvbXBhcmVkIHRvIHRoZSBnbG9iYWwgY29uc3RydWN0b3JzIGluIHRoZSBgcmVhbG1gIHByb3ZpZGVkLFxuICogYW5kIHRoZSBuYXRpdmUgY29uc3RydWN0b3IgaXMgYWx3YXlzIHVzZWQgdG8gZW5zdXJlIHRoYXQgZXh0ZW5zaW9ucyBvZiBuYXRpdmVcbiAqIG9iamVjdHMgKGFsbG93cyBpbiBFUzIwMTUrKSBhcmUgbWFpbnRhaW5lZC5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IHRoZSBvYmplY3QgdG8gY29weVxuICogQHBhcmFtIFtvcHRpb25zXSB0aGUgb3B0aW9ucyBmb3IgY29weWluZyB3aXRoXG4gKiBAcGFyYW0gW29wdGlvbnMuaXNTdHJpY3RdIHNob3VsZCB0aGUgY29weSBiZSBzdHJpY3RcbiAqIEBwYXJhbSBbb3B0aW9ucy5yZWFsbV0gdGhlIHJlYWxtICh0aGlzKSBvYmplY3QgdGhlIG9iamVjdCBpcyBjb3BpZWQgZnJvbVxuICogQHJldHVybnMgdGhlIGNvcGllZCBvYmplY3RcbiAqL1xuZnVuY3Rpb24gY29weTxUPihvYmplY3Q6IFQsIG9wdGlvbnM/OiBGYXN0Q29weS5PcHRpb25zKTogVCB7XG4gIC8vIG1hbnVhbGx5IGNvYWxlc2NlZCBpbnN0ZWFkIG9mIGRlZmF1bHQgcGFyYW1ldGVycyBmb3IgcGVyZm9ybWFuY2VcbiAgY29uc3QgaXNTdHJpY3Q6IGJvb2xlYW4gPSAhIShvcHRpb25zICYmIG9wdGlvbnMuaXNTdHJpY3QpO1xuICBjb25zdCByZWFsbTogRmFzdENvcHkuUmVhbG0gPSAob3B0aW9ucyAmJiBvcHRpb25zLnJlYWxtKSB8fCBHTE9CQUxfVEhJUztcblxuICBjb25zdCBnZXRPYmplY3RDbG9uZTogRmFzdENvcHkuT2JqZWN0Q2xvbmVyID0gaXNTdHJpY3RcbiAgICA/IGdldE9iamVjdENsb25lU3RyaWN0XG4gICAgOiBnZXRPYmplY3RDbG9uZUxvb3NlO1xuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb24gaGFuZGxlQ29weVxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogY29weSB0aGUgb2JqZWN0IHJlY3Vyc2l2ZWx5IGJhc2VkIG9uIGl0cyB0eXBlXG4gICAqXG4gICAqIEBwYXJhbSBvYmplY3QgdGhlIG9iamVjdCB0byBjb3B5XG4gICAqIEByZXR1cm5zIHRoZSBjb3BpZWQgb2JqZWN0XG4gICAqL1xuICBjb25zdCBoYW5kbGVDb3B5OiBGYXN0Q29weS5Db3BpZXIgPSAob2JqZWN0OiBhbnksIGNhY2hlOiBGYXN0Q29weS5DYWNoZSk6IGFueSA9PiB7XG4gICAgaWYgKCFvYmplY3QgfHwgdHlwZW9mIG9iamVjdCAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfSBpZiAoY2FjaGUuaGFzKG9iamVjdCkpIHtcbiAgICAgIHJldHVybiBjYWNoZS5nZXQob2JqZWN0KTtcbiAgICB9XG5cbiAgICBjb25zdCB7IGNvbnN0cnVjdG9yOiBDb25zdHJ1Y3RvciB9ID0gb2JqZWN0O1xuXG4gICAgLy8gcGxhaW4gb2JqZWN0c1xuICAgIGlmIChDb25zdHJ1Y3RvciA9PT0gcmVhbG0uT2JqZWN0KSB7XG4gICAgICByZXR1cm4gZ2V0T2JqZWN0Q2xvbmUob2JqZWN0LCByZWFsbSwgaGFuZGxlQ29weSwgY2FjaGUpO1xuICAgIH1cblxuICAgIGxldCBjbG9uZTogYW55O1xuICAgIC8vIGFycmF5c1xuICAgIGlmIChpc0FycmF5KG9iamVjdCkpIHtcbiAgICAgIC8vIGlmIHN0cmljdCwgaW5jbHVkZSBub24tc3RhbmRhcmQgcHJvcGVydGllc1xuICAgICAgaWYgKGlzU3RyaWN0KSB7XG4gICAgICAgIHJldHVybiBnZXRPYmplY3RDbG9uZVN0cmljdChvYmplY3QsIHJlYWxtLCBoYW5kbGVDb3B5LCBjYWNoZSk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSBvYmplY3Q7XG5cbiAgICAgIGNsb25lID0gbmV3IENvbnN0cnVjdG9yKCk7XG4gICAgICBjYWNoZS5zZXQob2JqZWN0LCBjbG9uZSk7XG5cbiAgICAgIGZvciAobGV0IGluZGV4OiBudW1iZXIgPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICBjbG9uZVtpbmRleF0gPSBoYW5kbGVDb3B5KG9iamVjdFtpbmRleF0sIGNhY2hlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNsb25lO1xuICAgIH1cblxuICAgIC8vIGRhdGVzXG4gICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIHJlYWxtLkRhdGUpIHtcbiAgICAgIHJldHVybiBuZXcgQ29uc3RydWN0b3Iob2JqZWN0LmdldFRpbWUoKSk7XG4gICAgfVxuXG4gICAgLy8gcmVnZXhwc1xuICAgIGlmIChvYmplY3QgaW5zdGFuY2VvZiByZWFsbS5SZWdFeHApIHtcbiAgICAgIGNsb25lID0gbmV3IENvbnN0cnVjdG9yKG9iamVjdC5zb3VyY2UsIG9iamVjdC5mbGFncyB8fCBnZXRSZWdFeHBGbGFncyhvYmplY3QpKTtcblxuICAgICAgY2xvbmUubGFzdEluZGV4ID0gb2JqZWN0Lmxhc3RJbmRleDtcblxuICAgICAgcmV0dXJuIGNsb25lO1xuICAgIH1cblxuICAgIC8vIG1hcHNcbiAgICBpZiAocmVhbG0uTWFwICYmIG9iamVjdCBpbnN0YW5jZW9mIHJlYWxtLk1hcCkge1xuICAgICAgY2xvbmUgPSBuZXcgQ29uc3RydWN0b3IoKTtcbiAgICAgIGNhY2hlLnNldChvYmplY3QsIGNsb25lKTtcblxuICAgICAgb2JqZWN0LmZvckVhY2goKHZhbHVlOiBhbnksIGtleTogYW55KSA9PiB7XG4gICAgICAgIGNsb25lLnNldChrZXksIGhhbmRsZUNvcHkodmFsdWUsIGNhY2hlKSk7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGNsb25lO1xuICAgIH1cblxuICAgIC8vIHNldHNcbiAgICBpZiAocmVhbG0uU2V0ICYmIG9iamVjdCBpbnN0YW5jZW9mIHJlYWxtLlNldCkge1xuICAgICAgY2xvbmUgPSBuZXcgQ29uc3RydWN0b3IoKTtcbiAgICAgIGNhY2hlLnNldChvYmplY3QsIGNsb25lKTtcblxuICAgICAgb2JqZWN0LmZvckVhY2goKHZhbHVlOiBhbnkpID0+IHtcbiAgICAgICAgY2xvbmUuYWRkKGhhbmRsZUNvcHkodmFsdWUsIGNhY2hlKSk7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGNsb25lO1xuICAgIH1cblxuICAgIC8vIGJsb2JzXG4gICAgaWYgKHJlYWxtLkJsb2IgJiYgb2JqZWN0IGluc3RhbmNlb2YgcmVhbG0uQmxvYikge1xuICAgICAgcmV0dXJuIG9iamVjdC5zbGljZSgwLCBvYmplY3Quc2l6ZSwgb2JqZWN0LnR5cGUpO1xuICAgIH1cblxuICAgIC8vIGJ1ZmZlcnMgKG5vZGUtb25seSlcbiAgICBpZiAocmVhbG0uQnVmZmVyICYmIHJlYWxtLkJ1ZmZlci5pc0J1ZmZlcihvYmplY3QpKSB7XG4gICAgICBjbG9uZSA9IHJlYWxtLkJ1ZmZlci5hbGxvY1Vuc2FmZVxuICAgICAgICA/IHJlYWxtLkJ1ZmZlci5hbGxvY1Vuc2FmZShvYmplY3QubGVuZ3RoKVxuICAgICAgICA6IG5ldyBDb25zdHJ1Y3RvcihvYmplY3QubGVuZ3RoKTtcblxuICAgICAgY2FjaGUuc2V0KG9iamVjdCwgY2xvbmUpO1xuICAgICAgb2JqZWN0LmNvcHkoY2xvbmUpO1xuXG4gICAgICByZXR1cm4gY2xvbmU7XG4gICAgfVxuXG4gICAgLy8gYXJyYXlidWZmZXJzIC8gZGF0YXZpZXdzXG4gICAgaWYgKHJlYWxtLkFycmF5QnVmZmVyKSB7XG4gICAgICAvLyBkYXRhdmlld3NcbiAgICAgIGlmIChyZWFsbS5BcnJheUJ1ZmZlci5pc1ZpZXcob2JqZWN0KSkge1xuICAgICAgICBjbG9uZSA9IG5ldyBDb25zdHJ1Y3RvcihvYmplY3QuYnVmZmVyLnNsaWNlKDApKTtcbiAgICAgICAgY2FjaGUuc2V0KG9iamVjdCwgY2xvbmUpO1xuICAgICAgICByZXR1cm4gY2xvbmU7XG4gICAgICB9XG5cbiAgICAgIC8vIGFycmF5YnVmZmVyc1xuICAgICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIHJlYWxtLkFycmF5QnVmZmVyKSB7XG4gICAgICAgIGNsb25lID0gb2JqZWN0LnNsaWNlKDApO1xuICAgICAgICBjYWNoZS5zZXQob2JqZWN0LCBjbG9uZSk7XG4gICAgICAgIHJldHVybiBjbG9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBpZiB0aGUgb2JqZWN0IGNhbm5vdCAvIHNob3VsZCBub3QgYmUgY2xvbmVkLCBkb24ndFxuICAgIGlmIChcbiAgICAgIC8vIHByb21pc2UtbGlrZVxuICAgICAgdHlwZW9mIG9iamVjdC50aGVuID09PSAnZnVuY3Rpb24nIHx8XG4gICAgICAvLyBlcnJvcnNcbiAgICAgIG9iamVjdCBpbnN0YW5jZW9mIEVycm9yIHx8XG4gICAgICAvLyB3ZWFrbWFwc1xuICAgICAgKHJlYWxtLldlYWtNYXAgJiYgb2JqZWN0IGluc3RhbmNlb2YgcmVhbG0uV2Vha01hcCkgfHxcbiAgICAgIC8vIHdlYWtzZXRzXG4gICAgICAocmVhbG0uV2Vha1NldCAmJiBvYmplY3QgaW5zdGFuY2VvZiByZWFsbS5XZWFrU2V0KVxuICAgICkge1xuICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG5cbiAgICAvLyBhc3N1bWUgYW55dGhpbmcgbGVmdCBpcyBhIGN1c3RvbSBjb25zdHJ1Y3RvclxuICAgIHJldHVybiBnZXRPYmplY3RDbG9uZShvYmplY3QsIHJlYWxtLCBoYW5kbGVDb3B5LCBjYWNoZSk7XG4gIH07XG5cbiAgcmV0dXJuIGhhbmRsZUNvcHkob2JqZWN0LCBjcmVhdGVDYWNoZSgpKTtcbn1cblxuLy8gQWRkaW5nIHJlZmVyZW5jZSB0byBhbGxvdyB1c2FnZSBpbiBDb21tb25KUyBsaWJyYXJpZXMgY29tcGlsZWQgdXNpbmcgVFNDLCB3aGljaFxuLy8gZXhwZWN0cyB0aGVyZSB0byBiZSBhIGRlZmF1bHQgcHJvcGVydHkgb24gdGhlIGV4cG9ydGVkIG9iamVjdC4gU2VlXG4vLyBbIzM3XShodHRwczovL2dpdGh1Yi5jb20vcGxhbnR0aGVpZGVhL2Zhc3QtY29weS9pc3N1ZXMvMzcpIGZvciBkZXRhaWxzLlxuY29weS5kZWZhdWx0ID0gY29weTtcblxuLyoqXG4gKiBAZnVuY3Rpb24gc3RyaWN0Q29weVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogY29weSB0aGUgb2JqZWN0IHdpdGggYHN0cmljdGAgb3B0aW9uIHByZS1hcHBsaWVkXG4gKlxuICogQHBhcmFtIG9iamVjdCB0aGUgb2JqZWN0IHRvIGNvcHlcbiAqIEBwYXJhbSBbb3B0aW9uc10gdGhlIG9wdGlvbnMgZm9yIGNvcHlpbmcgd2l0aFxuICogQHBhcmFtIFtvcHRpb25zLnJlYWxtXSB0aGUgcmVhbG0gKHRoaXMpIG9iamVjdCB0aGUgb2JqZWN0IGlzIGNvcGllZCBmcm9tXG4gKiBAcmV0dXJucyB0aGUgY29waWVkIG9iamVjdFxuICovXG5jb3B5LnN0cmljdCA9IGZ1bmN0aW9uIHN0cmljdENvcHkob2JqZWN0OiBhbnksIG9wdGlvbnM/OiBGYXN0Q29weS5PcHRpb25zKSB7XG4gIHJldHVybiBjb3B5KG9iamVjdCwge1xuICAgIGlzU3RyaWN0OiB0cnVlLFxuICAgIHJlYWxtOiBvcHRpb25zID8gb3B0aW9ucy5yZWFsbSA6IHZvaWQgMCxcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb3B5O1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG52YXIgdXRpbHMgPSB7XG4gIHN1bTogZnVuY3Rpb24gc3VtKGFycmF5KSB7XG4gICAgcmV0dXJuIGFycmF5LnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGEgKyBiO1xuICAgIH0pO1xuICB9XG59O1xudmFyIF9kZWZhdWx0ID0gdXRpbHM7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0OyIsICJcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBcImtpbmRcIiBvZiB2YWx1ZS4gKGUuZy4gXCJTdHJpbmdcIiwgXCJOdW1iZXJcIiwgZXRjKVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGtpbmRPZih2YWwpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWwpLnNsaWNlKDgsIC0xKTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBraW5kT2Y7XG5cbiIsICJcblxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiB0aGUgdmFsdWUgaXMgY3JlYXRlZCBieSB0aGUgYE9iamVjdGAgY29uc3RydWN0b3IuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXNQbGFpbk9iamVjdCh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gKCEhdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAgICAgdmFsdWUuY29uc3RydWN0b3IgPT09IE9iamVjdCk7XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBpc1BsYWluT2JqZWN0O1xuXG5cbiIsICJcblxuICAgIC8qKlxuICAgICAqIFNhZmVyIE9iamVjdC5oYXNPd25Qcm9wZXJ0eVxuICAgICAqL1xuICAgICBmdW5jdGlvbiBoYXNPd24ob2JqLCBwcm9wKXtcbiAgICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbiAgICAgfVxuXG4gICAgIG1vZHVsZS5leHBvcnRzID0gaGFzT3duO1xuXG5cbiIsICJ2YXIgaGFzT3duID0gcmVxdWlyZSgnLi9oYXNPd24nKTtcblxuICAgIHZhciBfaGFzRG9udEVudW1CdWcsXG4gICAgICAgIF9kb250RW51bXM7XG5cbiAgICBmdW5jdGlvbiBjaGVja0RvbnRFbnVtKCl7XG4gICAgICAgIF9kb250RW51bXMgPSBbXG4gICAgICAgICAgICAgICAgJ3RvU3RyaW5nJyxcbiAgICAgICAgICAgICAgICAndG9Mb2NhbGVTdHJpbmcnLFxuICAgICAgICAgICAgICAgICd2YWx1ZU9mJyxcbiAgICAgICAgICAgICAgICAnaGFzT3duUHJvcGVydHknLFxuICAgICAgICAgICAgICAgICdpc1Byb3RvdHlwZU9mJyxcbiAgICAgICAgICAgICAgICAncHJvcGVydHlJc0VudW1lcmFibGUnLFxuICAgICAgICAgICAgICAgICdjb25zdHJ1Y3RvcidcbiAgICAgICAgICAgIF07XG5cbiAgICAgICAgX2hhc0RvbnRFbnVtQnVnID0gdHJ1ZTtcblxuICAgICAgICBmb3IgKHZhciBrZXkgaW4geyd0b1N0cmluZyc6IG51bGx9KSB7XG4gICAgICAgICAgICBfaGFzRG9udEVudW1CdWcgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNpbWlsYXIgdG8gQXJyYXkvZm9yRWFjaCBidXQgd29ya3Mgb3ZlciBvYmplY3QgcHJvcGVydGllcyBhbmQgZml4ZXMgRG9uJ3RcbiAgICAgKiBFbnVtIGJ1ZyBvbiBJRS5cbiAgICAgKiBiYXNlZCBvbjogaHR0cDovL3doYXR0aGVoZWFkc2FpZC5jb20vMjAxMC8xMC9hLXNhZmVyLW9iamVjdC1rZXlzLWNvbXBhdGliaWxpdHktaW1wbGVtZW50YXRpb25cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmb3JJbihvYmosIGZuLCB0aGlzT2JqKXtcbiAgICAgICAgdmFyIGtleSwgaSA9IDA7XG4gICAgICAgIC8vIG5vIG5lZWQgdG8gY2hlY2sgaWYgYXJndW1lbnQgaXMgYSByZWFsIG9iamVjdCB0aGF0IHdheSB3ZSBjYW4gdXNlXG4gICAgICAgIC8vIGl0IGZvciBhcnJheXMsIGZ1bmN0aW9ucywgZGF0ZSwgZXRjLlxuXG4gICAgICAgIC8vcG9zdC1wb25lIGNoZWNrIHRpbGwgbmVlZGVkXG4gICAgICAgIGlmIChfaGFzRG9udEVudW1CdWcgPT0gbnVsbCkgY2hlY2tEb250RW51bSgpO1xuXG4gICAgICAgIGZvciAoa2V5IGluIG9iaikge1xuICAgICAgICAgICAgaWYgKGV4ZWMoZm4sIG9iaiwga2V5LCB0aGlzT2JqKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG5cbiAgICAgICAgaWYgKF9oYXNEb250RW51bUJ1Zykge1xuICAgICAgICAgICAgdmFyIGN0b3IgPSBvYmouY29uc3RydWN0b3IsXG4gICAgICAgICAgICAgICAgaXNQcm90byA9ICEhY3RvciAmJiBvYmogPT09IGN0b3IucHJvdG90eXBlO1xuXG4gICAgICAgICAgICB3aGlsZSAoa2V5ID0gX2RvbnRFbnVtc1tpKytdKSB7XG4gICAgICAgICAgICAgICAgLy8gRm9yIGNvbnN0cnVjdG9yLCBpZiBpdCBpcyBhIHByb3RvdHlwZSBvYmplY3QgdGhlIGNvbnN0cnVjdG9yXG4gICAgICAgICAgICAgICAgLy8gaXMgYWx3YXlzIG5vbi1lbnVtZXJhYmxlIHVubGVzcyBkZWZpbmVkIG90aGVyd2lzZSAoYW5kXG4gICAgICAgICAgICAgICAgLy8gZW51bWVyYXRlZCBhYm92ZSkuICBGb3Igbm9uLXByb3RvdHlwZSBvYmplY3RzLCBpdCB3aWxsIGhhdmVcbiAgICAgICAgICAgICAgICAvLyB0byBiZSBkZWZpbmVkIG9uIHRoaXMgb2JqZWN0LCBzaW5jZSBpdCBjYW5ub3QgYmUgZGVmaW5lZCBvblxuICAgICAgICAgICAgICAgIC8vIGFueSBwcm90b3R5cGUgb2JqZWN0cy5cbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIEZvciBvdGhlciBbW0RvbnRFbnVtXV0gcHJvcGVydGllcywgY2hlY2sgaWYgdGhlIHZhbHVlIGlzXG4gICAgICAgICAgICAgICAgLy8gZGlmZmVyZW50IHRoYW4gT2JqZWN0IHByb3RvdHlwZSB2YWx1ZS5cbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIChrZXkgIT09ICdjb25zdHJ1Y3RvcicgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICghaXNQcm90byAmJiBoYXNPd24ob2JqLCBrZXkpKSkgJiZcbiAgICAgICAgICAgICAgICAgICAgb2JqW2tleV0gIT09IE9iamVjdC5wcm90b3R5cGVba2V5XVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXhlYyhmbiwgb2JqLCBrZXksIHRoaXNPYmopID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBleGVjKGZuLCBvYmosIGtleSwgdGhpc09iail7XG4gICAgICAgIHJldHVybiBmbi5jYWxsKHRoaXNPYmosIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmb3JJbjtcblxuXG4iLCAidmFyIGhhc093biA9IHJlcXVpcmUoJy4vaGFzT3duJyk7XG52YXIgZm9ySW4gPSByZXF1aXJlKCcuL2ZvckluJyk7XG5cbiAgICAvKipcbiAgICAgKiBTaW1pbGFyIHRvIEFycmF5L2ZvckVhY2ggYnV0IHdvcmtzIG92ZXIgb2JqZWN0IHByb3BlcnRpZXMgYW5kIGZpeGVzIERvbid0XG4gICAgICogRW51bSBidWcgb24gSUUuXG4gICAgICogYmFzZWQgb246IGh0dHA6Ly93aGF0dGhlaGVhZHNhaWQuY29tLzIwMTAvMTAvYS1zYWZlci1vYmplY3Qta2V5cy1jb21wYXRpYmlsaXR5LWltcGxlbWVudGF0aW9uXG4gICAgICovXG4gICAgZnVuY3Rpb24gZm9yT3duKG9iaiwgZm4sIHRoaXNPYmope1xuICAgICAgICBmb3JJbihvYmosIGZ1bmN0aW9uKHZhbCwga2V5KXtcbiAgICAgICAgICAgIGlmIChoYXNPd24ob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZuLmNhbGwodGhpc09iaiwgb2JqW2tleV0sIGtleSwgb2JqKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmb3JPd247XG5cblxuIiwgInZhciBmb3JPd24gPSByZXF1aXJlKCcuL2Zvck93bicpO1xuXG4gICAgLyoqXG4gICAgKiBDb21iaW5lIHByb3BlcnRpZXMgZnJvbSBhbGwgdGhlIG9iamVjdHMgaW50byBmaXJzdCBvbmUuXG4gICAgKiAtIFRoaXMgbWV0aG9kIGFmZmVjdHMgdGFyZ2V0IG9iamVjdCBpbiBwbGFjZSwgaWYgeW91IHdhbnQgdG8gY3JlYXRlIGEgbmV3IE9iamVjdCBwYXNzIGFuIGVtcHR5IG9iamVjdCBhcyBmaXJzdCBwYXJhbS5cbiAgICAqIEBwYXJhbSB7b2JqZWN0fSB0YXJnZXQgICAgVGFyZ2V0IE9iamVjdFxuICAgICogQHBhcmFtIHsuLi5vYmplY3R9IG9iamVjdHMgICAgT2JqZWN0cyB0byBiZSBjb21iaW5lZCAoMC4uLm4gb2JqZWN0cykuXG4gICAgKiBAcmV0dXJuIHtvYmplY3R9IFRhcmdldCBPYmplY3QuXG4gICAgKi9cbiAgICBmdW5jdGlvbiBtaXhJbih0YXJnZXQsIG9iamVjdHMpe1xuICAgICAgICB2YXIgaSA9IDAsXG4gICAgICAgICAgICBuID0gYXJndW1lbnRzLmxlbmd0aCxcbiAgICAgICAgICAgIG9iajtcbiAgICAgICAgd2hpbGUoKytpIDwgbil7XG4gICAgICAgICAgICBvYmogPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBpZiAob2JqICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBmb3JPd24ob2JqLCBjb3B5UHJvcCwgdGFyZ2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvcHlQcm9wKHZhbCwga2V5KXtcbiAgICAgICAgdGhpc1trZXldID0gdmFsO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gbWl4SW47XG5cbiIsICJ2YXIga2luZE9mID0gcmVxdWlyZSgnLi9raW5kT2YnKTtcbnZhciBpc1BsYWluT2JqZWN0ID0gcmVxdWlyZSgnLi9pc1BsYWluT2JqZWN0Jyk7XG52YXIgbWl4SW4gPSByZXF1aXJlKCcuLi9vYmplY3QvbWl4SW4nKTtcblxuICAgIC8qKlxuICAgICAqIENsb25lIG5hdGl2ZSB0eXBlcy5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjbG9uZSh2YWwpe1xuICAgICAgICBzd2l0Y2ggKGtpbmRPZih2YWwpKSB7XG4gICAgICAgICAgICBjYXNlICdPYmplY3QnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjbG9uZU9iamVjdCh2YWwpO1xuICAgICAgICAgICAgY2FzZSAnQXJyYXknOlxuICAgICAgICAgICAgICAgIHJldHVybiBjbG9uZUFycmF5KHZhbCk7XG4gICAgICAgICAgICBjYXNlICdSZWdFeHAnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjbG9uZVJlZ0V4cCh2YWwpO1xuICAgICAgICAgICAgY2FzZSAnRGF0ZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsb25lRGF0ZSh2YWwpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2xvbmVPYmplY3Qoc291cmNlKSB7XG4gICAgICAgIGlmIChpc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBtaXhJbih7fSwgc291cmNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBzb3VyY2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbG9uZVJlZ0V4cChyKSB7XG4gICAgICAgIHZhciBmbGFncyA9ICcnO1xuICAgICAgICBmbGFncyArPSByLm11bHRpbGluZSA/ICdtJyA6ICcnO1xuICAgICAgICBmbGFncyArPSByLmdsb2JhbCA/ICdnJyA6ICcnO1xuICAgICAgICBmbGFncyArPSByLmlnbm9yZUNhc2UgPyAnaScgOiAnJztcbiAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAoci5zb3VyY2UsIGZsYWdzKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbG9uZURhdGUoZGF0ZSkge1xuICAgICAgICByZXR1cm4gbmV3IERhdGUoK2RhdGUpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsb25lQXJyYXkoYXJyKSB7XG4gICAgICAgIHJldHVybiBhcnIuc2xpY2UoKTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNsb25lO1xuXG5cbiIsICJ2YXIgY2xvbmUgPSByZXF1aXJlKCcuL2Nsb25lJyk7XG52YXIgZm9yT3duID0gcmVxdWlyZSgnLi4vb2JqZWN0L2Zvck93bicpO1xudmFyIGtpbmRPZiA9IHJlcXVpcmUoJy4va2luZE9mJyk7XG52YXIgaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoJy4vaXNQbGFpbk9iamVjdCcpO1xuXG4gICAgLyoqXG4gICAgICogUmVjdXJzaXZlbHkgY2xvbmUgbmF0aXZlIHR5cGVzLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRlZXBDbG9uZSh2YWwsIGluc3RhbmNlQ2xvbmUpIHtcbiAgICAgICAgc3dpdGNoICgga2luZE9mKHZhbCkgKSB7XG4gICAgICAgICAgICBjYXNlICdPYmplY3QnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjbG9uZU9iamVjdCh2YWwsIGluc3RhbmNlQ2xvbmUpO1xuICAgICAgICAgICAgY2FzZSAnQXJyYXknOlxuICAgICAgICAgICAgICAgIHJldHVybiBjbG9uZUFycmF5KHZhbCwgaW5zdGFuY2VDbG9uZSk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBjbG9uZSh2YWwpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2xvbmVPYmplY3Qoc291cmNlLCBpbnN0YW5jZUNsb25lKSB7XG4gICAgICAgIGlmIChpc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgICAgICAgIHZhciBvdXQgPSB7fTtcbiAgICAgICAgICAgIGZvck93bihzb3VyY2UsIGZ1bmN0aW9uKHZhbCwga2V5KSB7XG4gICAgICAgICAgICAgICAgdGhpc1trZXldID0gZGVlcENsb25lKHZhbCwgaW5zdGFuY2VDbG9uZSk7XG4gICAgICAgICAgICB9LCBvdXQpO1xuICAgICAgICAgICAgcmV0dXJuIG91dDtcbiAgICAgICAgfSBlbHNlIGlmIChpbnN0YW5jZUNsb25lKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5zdGFuY2VDbG9uZShzb3VyY2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHNvdXJjZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsb25lQXJyYXkoYXJyLCBpbnN0YW5jZUNsb25lKSB7XG4gICAgICAgIHZhciBvdXQgPSBbXSxcbiAgICAgICAgICAgIGkgPSAtMSxcbiAgICAgICAgICAgIG4gPSBhcnIubGVuZ3RoLFxuICAgICAgICAgICAgdmFsO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgICAgb3V0W2ldID0gZGVlcENsb25lKGFycltpXSwgaW5zdGFuY2VDbG9uZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGRlZXBDbG9uZTtcblxuXG5cbiIsICJcblxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIGJvdGggYXJndW1lbnRzIGFyZSBlZ2FsLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzKHgsIHkpe1xuICAgICAgICAvLyBpbXBsZW1lbnRhdGlvbiBib3Jyb3dlZCBmcm9tIGhhcm1vbnk6ZWdhbCBzcGVjXG4gICAgICAgIGlmICh4ID09PSB5KSB7XG4gICAgICAgICAgLy8gMCA9PT0gLTAsIGJ1dCB0aGV5IGFyZSBub3QgaWRlbnRpY2FsXG4gICAgICAgICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gTmFOICE9PSBOYU4sIGJ1dCB0aGV5IGFyZSBpZGVudGljYWwuXG4gICAgICAgIC8vIE5hTnMgYXJlIHRoZSBvbmx5IG5vbi1yZWZsZXhpdmUgdmFsdWUsIGkuZS4sIGlmIHggIT09IHgsXG4gICAgICAgIC8vIHRoZW4geCBpcyBhIE5hTi5cbiAgICAgICAgLy8gaXNOYU4gaXMgYnJva2VuOiBpdCBjb252ZXJ0cyBpdHMgYXJndW1lbnQgdG8gbnVtYmVyLCBzb1xuICAgICAgICAvLyBpc05hTihcImZvb1wiKSA9PiB0cnVlXG4gICAgICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBpcztcblxuXG4iLCAidmFyIGtpbmRPZiA9IHJlcXVpcmUoJy4va2luZE9mJyk7XG4gICAgLyoqXG4gICAgICogQ2hlY2sgaWYgdmFsdWUgaXMgZnJvbSBhIHNwZWNpZmljIFwia2luZFwiLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzS2luZCh2YWwsIGtpbmQpe1xuICAgICAgICByZXR1cm4ga2luZE9mKHZhbCkgPT09IGtpbmQ7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gaXNLaW5kO1xuXG4iLCAidmFyIGlzS2luZCA9IHJlcXVpcmUoJy4vaXNLaW5kJyk7XG4gICAgLyoqXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXNPYmplY3QodmFsKSB7XG4gICAgICAgIHJldHVybiBpc0tpbmQodmFsLCAnT2JqZWN0Jyk7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gaXNPYmplY3Q7XG5cbiIsICJ2YXIgaXNLaW5kID0gcmVxdWlyZSgnLi9pc0tpbmQnKTtcbiAgICAvKipcbiAgICAgKi9cbiAgICB2YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICByZXR1cm4gaXNLaW5kKHZhbCwgJ0FycmF5Jyk7XG4gICAgfTtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGlzQXJyYXk7XG5cbiIsICJcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGZpcnN0IGFyZ3VtZW50IHByb3ZpZGVkIHRvIGl0LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlkZW50aXR5KHZhbCl7XG4gICAgICAgIHJldHVybiB2YWw7XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBpZGVudGl0eTtcblxuXG4iLCAiXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCBnZXRzIGEgcHJvcGVydHkgb2YgdGhlIHBhc3NlZCBvYmplY3RcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBwcm9wKG5hbWUpe1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24ob2JqKXtcbiAgICAgICAgICAgIHJldHVybiBvYmpbbmFtZV07XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBwcm9wO1xuXG5cbiIsICJ2YXIgZm9yT3duID0gcmVxdWlyZSgnLi9mb3JPd24nKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi4vbGFuZy9pc0FycmF5Jyk7XG5cbiAgICBmdW5jdGlvbiBjb250YWluc01hdGNoKGFycmF5LCBwYXR0ZXJuKSB7XG4gICAgICAgIHZhciBpID0gLTEsIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCsraSA8IGxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKGRlZXBNYXRjaGVzKGFycmF5W2ldLCBwYXR0ZXJuKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1hdGNoQXJyYXkodGFyZ2V0LCBwYXR0ZXJuKSB7XG4gICAgICAgIHZhciBpID0gLTEsIHBhdHRlcm5MZW5ndGggPSBwYXR0ZXJuLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCsraSA8IHBhdHRlcm5MZW5ndGgpIHtcbiAgICAgICAgICAgIGlmICghY29udGFpbnNNYXRjaCh0YXJnZXQsIHBhdHRlcm5baV0pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWF0Y2hPYmplY3QodGFyZ2V0LCBwYXR0ZXJuKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSB0cnVlO1xuICAgICAgICBmb3JPd24ocGF0dGVybiwgZnVuY3Rpb24odmFsLCBrZXkpIHtcbiAgICAgICAgICAgIGlmICghZGVlcE1hdGNoZXModGFyZ2V0W2tleV0sIHZhbCkpIHtcbiAgICAgICAgICAgICAgICAvLyBSZXR1cm4gZmFsc2UgdG8gYnJlYWsgb3V0IG9mIGZvck93biBlYXJseVxuICAgICAgICAgICAgICAgIHJldHVybiAocmVzdWx0ID0gZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlY3Vyc2l2ZWx5IGNoZWNrIGlmIHRoZSBvYmplY3RzIG1hdGNoLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRlZXBNYXRjaGVzKHRhcmdldCwgcGF0dGVybil7XG4gICAgICAgIGlmICh0YXJnZXQgJiYgdHlwZW9mIHRhcmdldCA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgICAgIHBhdHRlcm4gJiYgdHlwZW9mIHBhdHRlcm4gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBpZiAoaXNBcnJheSh0YXJnZXQpICYmIGlzQXJyYXkocGF0dGVybikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2hBcnJheSh0YXJnZXQsIHBhdHRlcm4pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2hPYmplY3QodGFyZ2V0LCBwYXR0ZXJuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXQgPT09IHBhdHRlcm47XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGRlZXBNYXRjaGVzO1xuXG5cbiIsICJ2YXIgaWRlbnRpdHkgPSByZXF1aXJlKCcuL2lkZW50aXR5Jyk7XG52YXIgcHJvcCA9IHJlcXVpcmUoJy4vcHJvcCcpO1xudmFyIGRlZXBNYXRjaGVzID0gcmVxdWlyZSgnLi4vb2JqZWN0L2RlZXBNYXRjaGVzJyk7XG5cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0cyBhcmd1bWVudCBpbnRvIGEgdmFsaWQgaXRlcmF0b3IuXG4gICAgICogVXNlZCBpbnRlcm5hbGx5IG9uIG1vc3QgYXJyYXkvb2JqZWN0L2NvbGxlY3Rpb24gbWV0aG9kcyB0aGF0IHJlY2VpdmVzIGFcbiAgICAgKiBjYWxsYmFjay9pdGVyYXRvciBwcm92aWRpbmcgYSBzaG9ydGN1dCBzeW50YXguXG4gICAgICovXG4gICAgZnVuY3Rpb24gbWFrZUl0ZXJhdG9yKHNyYywgdGhpc09iail7XG4gICAgICAgIGlmIChzcmMgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGlkZW50aXR5O1xuICAgICAgICB9XG4gICAgICAgIHN3aXRjaCh0eXBlb2Ygc3JjKSB7XG4gICAgICAgICAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICAgICAgICAgICAgLy8gZnVuY3Rpb24gaXMgdGhlIGZpcnN0IHRvIGltcHJvdmUgcGVyZiAobW9zdCBjb21tb24gY2FzZSlcbiAgICAgICAgICAgICAgICAvLyBhbHNvIGF2b2lkIHVzaW5nIGBGdW5jdGlvbiNjYWxsYCBpZiBub3QgbmVlZGVkLCB3aGljaCBib29zdHNcbiAgICAgICAgICAgICAgICAvLyBwZXJmIGEgbG90IGluIHNvbWUgY2FzZXNcbiAgICAgICAgICAgICAgICByZXR1cm4gKHR5cGVvZiB0aGlzT2JqICE9PSAndW5kZWZpbmVkJyk/IGZ1bmN0aW9uKHZhbCwgaSwgYXJyKXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNyYy5jYWxsKHRoaXNPYmosIHZhbCwgaSwgYXJyKTtcbiAgICAgICAgICAgICAgICB9IDogc3JjO1xuICAgICAgICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24odmFsKXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlZXBNYXRjaGVzKHZhbCwgc3JjKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3Aoc3JjKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gbWFrZUl0ZXJhdG9yO1xuXG5cbiIsICJ2YXIgZm9yT3duID0gcmVxdWlyZSgnLi9mb3JPd24nKTtcbnZhciBtYWtlSXRlcmF0b3IgPSByZXF1aXJlKCcuLi9mdW5jdGlvbi9tYWtlSXRlcmF0b3JfJyk7XG5cbiAgICAvKipcbiAgICAgKiBPYmplY3QgZXZlcnlcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBldmVyeShvYmosIGNhbGxiYWNrLCB0aGlzT2JqKSB7XG4gICAgICAgIGNhbGxiYWNrID0gbWFrZUl0ZXJhdG9yKGNhbGxiYWNrLCB0aGlzT2JqKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRydWU7XG4gICAgICAgIGZvck93bihvYmosIGZ1bmN0aW9uKHZhbCwga2V5KSB7XG4gICAgICAgICAgICAvLyB3ZSBjb25zaWRlciBhbnkgZmFsc3kgdmFsdWVzIGFzIFwiZmFsc2VcIiBvbiBwdXJwb3NlIHNvIHNob3J0aGFuZFxuICAgICAgICAgICAgLy8gc3ludGF4IGNhbiBiZSB1c2VkIHRvIGNoZWNrIHByb3BlcnR5IGV4aXN0ZW5jZVxuICAgICAgICAgICAgaWYgKCFjYWxsYmFjayh2YWwsIGtleSwgb2JqKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gYnJlYWtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBldmVyeTtcblxuXG4iLCAidmFyIGhhc093biA9IHJlcXVpcmUoJy4vaGFzT3duJyk7XG52YXIgZXZlcnkgPSByZXF1aXJlKCcuL2V2ZXJ5Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9sYW5nL2lzT2JqZWN0Jyk7XG52YXIgaXMgPSByZXF1aXJlKCcuLi9sYW5nL2lzJyk7XG5cbiAgICAvLyBNYWtlcyBhIGZ1bmN0aW9uIHRvIGNvbXBhcmUgdGhlIG9iamVjdCB2YWx1ZXMgZnJvbSB0aGUgc3BlY2lmaWVkIGNvbXBhcmVcbiAgICAvLyBvcGVyYXRpb24gY2FsbGJhY2suXG4gICAgZnVuY3Rpb24gbWFrZUNvbXBhcmUoY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgICAgIHJldHVybiBoYXNPd24odGhpcywga2V5KSAmJiBjYWxsYmFjayh2YWx1ZSwgdGhpc1trZXldKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjaGVja1Byb3BlcnRpZXModmFsdWUsIGtleSkge1xuICAgICAgICByZXR1cm4gaGFzT3duKHRoaXMsIGtleSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGlmIHR3byBvYmplY3RzIGhhdmUgdGhlIHNhbWUga2V5cyBhbmQgdmFsdWVzLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGVxdWFscyhhLCBiLCBjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IGlzO1xuXG4gICAgICAgIGlmICghaXNPYmplY3QoYSkgfHwgIWlzT2JqZWN0KGIpKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soYSwgYik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKGV2ZXJ5KGEsIG1ha2VDb21wYXJlKGNhbGxiYWNrKSwgYikgJiZcbiAgICAgICAgICAgICAgICBldmVyeShiLCBjaGVja1Byb3BlcnRpZXMsIGEpKTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGVxdWFscztcblxuIiwgInZhciBtYWtlSXRlcmF0b3IgPSByZXF1aXJlKCcuLi9mdW5jdGlvbi9tYWtlSXRlcmF0b3JfJyk7XG5cbiAgICAvKipcbiAgICAgKiBBcnJheSBldmVyeVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGV2ZXJ5KGFyciwgY2FsbGJhY2ssIHRoaXNPYmopIHtcbiAgICAgICAgY2FsbGJhY2sgPSBtYWtlSXRlcmF0b3IoY2FsbGJhY2ssIHRoaXNPYmopO1xuICAgICAgICB2YXIgcmVzdWx0ID0gdHJ1ZTtcbiAgICAgICAgaWYgKGFyciA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGkgPSAtMSwgbGVuID0gYXJyLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCsraSA8IGxlbikge1xuICAgICAgICAgICAgLy8gd2UgaXRlcmF0ZSBvdmVyIHNwYXJzZSBpdGVtcyBzaW5jZSB0aGVyZSBpcyBubyB3YXkgdG8gbWFrZSBpdFxuICAgICAgICAgICAgLy8gd29yayBwcm9wZXJseSBvbiBJRSA3LTguIHNlZSAjNjRcbiAgICAgICAgICAgIGlmICghY2FsbGJhY2soYXJyW2ldLCBpLCBhcnIpICkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV2ZXJ5O1xuXG4iLCAidmFyIGlzID0gcmVxdWlyZSgnLi4vbGFuZy9pcycpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuLi9sYW5nL2lzQXJyYXknKTtcbnZhciBldmVyeSA9IHJlcXVpcmUoJy4vZXZlcnknKTtcblxuICAgIC8qKlxuICAgICAqIENvbXBhcmVzIGlmIGJvdGggYXJyYXlzIGhhdmUgdGhlIHNhbWUgZWxlbWVudHNcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBlcXVhbHMoYSwgYiwgY2FsbGJhY2spe1xuICAgICAgICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IGlzO1xuXG4gICAgICAgIGlmICghaXNBcnJheShhKSB8fCAhaXNBcnJheShiKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGEsIGIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGV2ZXJ5KGEsIG1ha2VDb21wYXJlKGNhbGxiYWNrKSwgYik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWFrZUNvbXBhcmUoY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlLCBpKSB7XG4gICAgICAgICAgICByZXR1cm4gaSBpbiB0aGlzICYmIGNhbGxiYWNrKHZhbHVlLCB0aGlzW2ldKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGVxdWFscztcblxuXG4iLCAidmFyIGlzID0gcmVxdWlyZSgnLi9pcycpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKTtcbnZhciBvYmpFcXVhbHMgPSByZXF1aXJlKCcuLi9vYmplY3QvZXF1YWxzJyk7XG52YXIgYXJyRXF1YWxzID0gcmVxdWlyZSgnLi4vYXJyYXkvZXF1YWxzJyk7XG5cbiAgICAvKipcbiAgICAgKiBSZWN1cnNpdmVseSBjaGVja3MgZm9yIHNhbWUgcHJvcGVydGllcyBhbmQgdmFsdWVzLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRlZXBFcXVhbHMoYSwgYiwgY2FsbGJhY2spe1xuICAgICAgICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IGlzO1xuXG4gICAgICAgIHZhciBib3RoT2JqZWN0cyA9IGlzT2JqZWN0KGEpICYmIGlzT2JqZWN0KGIpO1xuICAgICAgICB2YXIgYm90aEFycmF5cyA9ICFib3RoT2JqZWN0cyAmJiBpc0FycmF5KGEpICYmIGlzQXJyYXkoYik7XG5cbiAgICAgICAgaWYgKCFib3RoT2JqZWN0cyAmJiAhYm90aEFycmF5cykge1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGEsIGIpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY29tcGFyZShhLCBiKXtcbiAgICAgICAgICAgIHJldHVybiBkZWVwRXF1YWxzKGEsIGIsIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBtZXRob2QgPSBib3RoT2JqZWN0cyA/IG9iakVxdWFscyA6IGFyckVxdWFscztcbiAgICAgICAgcmV0dXJuIG1ldGhvZChhLCBiLCBjb21wYXJlKTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGRlZXBFcXVhbHM7XG5cblxuIiwgIi8qKlxuICogY2hyb21hLmpzIC0gSmF2YVNjcmlwdCBsaWJyYXJ5IGZvciBjb2xvciBjb252ZXJzaW9uc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMS0yMDE5LCBHcmVnb3IgQWlzY2hcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0XG4gKiBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDpcbiAqXG4gKiAxLiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXNcbiAqIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLlxuICpcbiAqIDIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSxcbiAqIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlIGRvY3VtZW50YXRpb25cbiAqIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLlxuICpcbiAqIDMuIFRoZSBuYW1lIEdyZWdvciBBaXNjaCBtYXkgbm90IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzXG4gKiBkZXJpdmVkIGZyb20gdGhpcyBzb2Z0d2FyZSB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi5cbiAqXG4gKiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTIFwiQVMgSVNcIlxuICogQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRVxuICogSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFXG4gKiBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBHUkVHT1IgQUlTQ0ggT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCxcbiAqIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLFxuICogQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSxcbiAqIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUllcbiAqIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HXG4gKiBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsXG4gKiBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLlxuICpcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKiBjaHJvbWEuanMgaW5jbHVkZXMgY29sb3JzIGZyb20gY29sb3JicmV3ZXIyLm9yZywgd2hpY2ggYXJlIHJlbGVhc2VkIHVuZGVyXG4gKiB0aGUgZm9sbG93aW5nIGxpY2Vuc2U6XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDAyIEN5bnRoaWEgQnJld2VyLCBNYXJrIEhhcnJvd2VyLFxuICogYW5kIFRoZSBQZW5uc3lsdmFuaWEgU3RhdGUgVW5pdmVyc2l0eS5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCxcbiAqIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljXG4gKiBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqIE5hbWVkIGNvbG9ycyBhcmUgdGFrZW4gZnJvbSBYMTEgQ29sb3IgTmFtZXMuXG4gKiBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWNvbG9yLyNzdmctY29sb3JcbiAqXG4gKiBAcHJlc2VydmVcbiAqL1xuXG4oZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICAgIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpIDpcbiAgICB0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoZmFjdG9yeSkgOlxuICAgIChnbG9iYWwuY2hyb21hID0gZmFjdG9yeSgpKTtcbn0odGhpcywgKGZ1bmN0aW9uICgpIHsgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyIGxpbWl0ID0gZnVuY3Rpb24gKHgsIG1pbiwgbWF4KSB7XG4gICAgICAgIGlmICggbWluID09PSB2b2lkIDAgKSBtaW49MDtcbiAgICAgICAgaWYgKCBtYXggPT09IHZvaWQgMCApIG1heD0xO1xuXG4gICAgICAgIHJldHVybiB4IDwgbWluID8gbWluIDogeCA+IG1heCA/IG1heCA6IHg7XG4gICAgfTtcblxuICAgIHZhciBjbGlwX3JnYiA9IGZ1bmN0aW9uIChyZ2IpIHtcbiAgICAgICAgcmdiLl9jbGlwcGVkID0gZmFsc2U7XG4gICAgICAgIHJnYi5fdW5jbGlwcGVkID0gcmdiLnNsaWNlKDApO1xuICAgICAgICBmb3IgKHZhciBpPTA7IGk8PTM7IGkrKykge1xuICAgICAgICAgICAgaWYgKGkgPCAzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJnYltpXSA8IDAgfHwgcmdiW2ldID4gMjU1KSB7IHJnYi5fY2xpcHBlZCA9IHRydWU7IH1cbiAgICAgICAgICAgICAgICByZ2JbaV0gPSBsaW1pdChyZ2JbaV0sIDAsIDI1NSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGkgPT09IDMpIHtcbiAgICAgICAgICAgICAgICByZ2JbaV0gPSBsaW1pdChyZ2JbaV0sIDAsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZ2I7XG4gICAgfTtcblxuICAgIC8vIHBvcnRlZCBmcm9tIGpRdWVyeSdzICQudHlwZVxuICAgIHZhciBjbGFzc1RvVHlwZSA9IHt9O1xuICAgIGZvciAodmFyIGkgPSAwLCBsaXN0ID0gWydCb29sZWFuJywgJ051bWJlcicsICdTdHJpbmcnLCAnRnVuY3Rpb24nLCAnQXJyYXknLCAnRGF0ZScsICdSZWdFeHAnLCAnVW5kZWZpbmVkJywgJ051bGwnXTsgaSA8IGxpc3QubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgdmFyIG5hbWUgPSBsaXN0W2ldO1xuXG4gICAgICAgIGNsYXNzVG9UeXBlWyhcIltvYmplY3QgXCIgKyBuYW1lICsgXCJdXCIpXSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICB9XG4gICAgdmFyIHR5cGUgPSBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgcmV0dXJuIGNsYXNzVG9UeXBlW09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopXSB8fCBcIm9iamVjdFwiO1xuICAgIH07XG5cbiAgICB2YXIgdW5wYWNrID0gZnVuY3Rpb24gKGFyZ3MsIGtleU9yZGVyKSB7XG4gICAgICAgIGlmICgga2V5T3JkZXIgPT09IHZvaWQgMCApIGtleU9yZGVyPW51bGw7XG5cbiAgICBcdC8vIGlmIGNhbGxlZCB3aXRoIG1vcmUgdGhhbiAzIGFyZ3VtZW50cywgd2UgcmV0dXJuIHRoZSBhcmd1bWVudHNcbiAgICAgICAgaWYgKGFyZ3MubGVuZ3RoID49IDMpIHsgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3MpOyB9XG4gICAgICAgIC8vIHdpdGggbGVzcyB0aGFuIDMgYXJncyB3ZSBjaGVjayBpZiBmaXJzdCBhcmcgaXMgb2JqZWN0XG4gICAgICAgIC8vIGFuZCB1c2UgdGhlIGtleU9yZGVyIHN0cmluZyB0byBleHRyYWN0IGFuZCBzb3J0IHByb3BlcnRpZXNcbiAgICBcdGlmICh0eXBlKGFyZ3NbMF0pID09ICdvYmplY3QnICYmIGtleU9yZGVyKSB7XG4gICAgXHRcdHJldHVybiBrZXlPcmRlci5zcGxpdCgnJylcbiAgICBcdFx0XHQuZmlsdGVyKGZ1bmN0aW9uIChrKSB7IHJldHVybiBhcmdzWzBdW2tdICE9PSB1bmRlZmluZWQ7IH0pXG4gICAgXHRcdFx0Lm1hcChmdW5jdGlvbiAoaykgeyByZXR1cm4gYXJnc1swXVtrXTsgfSk7XG4gICAgXHR9XG4gICAgXHQvLyBvdGhlcndpc2Ugd2UganVzdCByZXR1cm4gdGhlIGZpcnN0IGFyZ3VtZW50XG4gICAgXHQvLyAod2hpY2ggd2Ugc3VwcG9zZSBpcyBhbiBhcnJheSBvZiBhcmdzKVxuICAgICAgICByZXR1cm4gYXJnc1swXTtcbiAgICB9O1xuXG4gICAgdmFyIGxhc3QgPSBmdW5jdGlvbiAoYXJncykge1xuICAgICAgICBpZiAoYXJncy5sZW5ndGggPCAyKSB7IHJldHVybiBudWxsOyB9XG4gICAgICAgIHZhciBsID0gYXJncy5sZW5ndGgtMTtcbiAgICAgICAgaWYgKHR5cGUoYXJnc1tsXSkgPT0gJ3N0cmluZycpIHsgcmV0dXJuIGFyZ3NbbF0udG9Mb3dlckNhc2UoKTsgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuXG4gICAgdmFyIFBJID0gTWF0aC5QSTtcblxuICAgIHZhciB1dGlscyA9IHtcbiAgICBcdGNsaXBfcmdiOiBjbGlwX3JnYixcbiAgICBcdGxpbWl0OiBsaW1pdCxcbiAgICBcdHR5cGU6IHR5cGUsXG4gICAgXHR1bnBhY2s6IHVucGFjayxcbiAgICBcdGxhc3Q6IGxhc3QsXG4gICAgXHRQSTogUEksXG4gICAgXHRUV09QSTogUEkqMixcbiAgICBcdFBJVEhJUkQ6IFBJLzMsXG4gICAgXHRERUcyUkFEOiBQSSAvIDE4MCxcbiAgICBcdFJBRDJERUc6IDE4MCAvIFBJXG4gICAgfTtcblxuICAgIHZhciBpbnB1dCA9IHtcbiAgICBcdGZvcm1hdDoge30sXG4gICAgXHRhdXRvZGV0ZWN0OiBbXVxuICAgIH07XG5cbiAgICB2YXIgbGFzdCQxID0gdXRpbHMubGFzdDtcbiAgICB2YXIgY2xpcF9yZ2IkMSA9IHV0aWxzLmNsaXBfcmdiO1xuICAgIHZhciB0eXBlJDEgPSB1dGlscy50eXBlO1xuXG5cbiAgICB2YXIgQ29sb3IgPSBmdW5jdGlvbiBDb2xvcigpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICBpZiAodHlwZSQxKGFyZ3NbMF0pID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAgICAgYXJnc1swXS5jb25zdHJ1Y3RvciAmJlxuICAgICAgICAgICAgYXJnc1swXS5jb25zdHJ1Y3RvciA9PT0gdGhpcy5jb25zdHJ1Y3Rvcikge1xuICAgICAgICAgICAgLy8gdGhlIGFyZ3VtZW50IGlzIGFscmVhZHkgYSBDb2xvciBpbnN0YW5jZVxuICAgICAgICAgICAgcmV0dXJuIGFyZ3NbMF07XG4gICAgICAgIH1cblxuICAgICAgICAvLyBsYXN0IGFyZ3VtZW50IGNvdWxkIGJlIHRoZSBtb2RlXG4gICAgICAgIHZhciBtb2RlID0gbGFzdCQxKGFyZ3MpO1xuICAgICAgICB2YXIgYXV0b2RldGVjdCA9IGZhbHNlO1xuXG4gICAgICAgIGlmICghbW9kZSkge1xuICAgICAgICAgICAgYXV0b2RldGVjdCA9IHRydWU7XG4gICAgICAgICAgICBpZiAoIWlucHV0LnNvcnRlZCkge1xuICAgICAgICAgICAgICAgIGlucHV0LmF1dG9kZXRlY3QgPSBpbnB1dC5hdXRvZGV0ZWN0LnNvcnQoZnVuY3Rpb24gKGEsYikgeyByZXR1cm4gYi5wIC0gYS5wOyB9KTtcbiAgICAgICAgICAgICAgICBpbnB1dC5zb3J0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gYXV0by1kZXRlY3QgZm9ybWF0XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGlzdCA9IGlucHV0LmF1dG9kZXRlY3Q7IGkgPCBsaXN0Lmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNoayA9IGxpc3RbaV07XG5cbiAgICAgICAgICAgICAgICBtb2RlID0gY2hrLnRlc3QuYXBwbHkoY2hrLCBhcmdzKTtcbiAgICAgICAgICAgICAgICBpZiAobW9kZSkgeyBicmVhazsgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGlucHV0LmZvcm1hdFttb2RlXSkge1xuICAgICAgICAgICAgdmFyIHJnYiA9IGlucHV0LmZvcm1hdFttb2RlXS5hcHBseShudWxsLCBhdXRvZGV0ZWN0ID8gYXJncyA6IGFyZ3Muc2xpY2UoMCwtMSkpO1xuICAgICAgICAgICAgbWUuX3JnYiA9IGNsaXBfcmdiJDEocmdiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBmb3JtYXQ6ICcrYXJncyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBhZGQgYWxwaGEgY2hhbm5lbFxuICAgICAgICBpZiAobWUuX3JnYi5sZW5ndGggPT09IDMpIHsgbWUuX3JnYi5wdXNoKDEpOyB9XG4gICAgfTtcblxuICAgIENvbG9yLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nICgpIHtcbiAgICAgICAgaWYgKHR5cGUkMSh0aGlzLmhleCkgPT0gJ2Z1bmN0aW9uJykgeyByZXR1cm4gdGhpcy5oZXgoKTsgfVxuICAgICAgICByZXR1cm4gKFwiW1wiICsgKHRoaXMuX3JnYi5qb2luKCcsJykpICsgXCJdXCIpO1xuICAgIH07XG5cbiAgICB2YXIgQ29sb3JfMSA9IENvbG9yO1xuXG4gICAgdmFyIGNocm9tYSA9IGZ1bmN0aW9uICgpIHtcbiAgICBcdHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgXHR3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgXHRyZXR1cm4gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseSggY2hyb21hLkNvbG9yLCBbIG51bGwgXS5jb25jYXQoIGFyZ3MpICkpO1xuICAgIH07XG5cbiAgICBjaHJvbWEuQ29sb3IgPSBDb2xvcl8xO1xuICAgIGNocm9tYS52ZXJzaW9uID0gJzIuMS4yJztcblxuICAgIHZhciBjaHJvbWFfMSA9IGNocm9tYTtcblxuICAgIHZhciB1bnBhY2skMSA9IHV0aWxzLnVucGFjaztcbiAgICB2YXIgbWF4ID0gTWF0aC5tYXg7XG5cbiAgICB2YXIgcmdiMmNteWsgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgdmFyIHJlZiA9IHVucGFjayQxKGFyZ3MsICdyZ2InKTtcbiAgICAgICAgdmFyIHIgPSByZWZbMF07XG4gICAgICAgIHZhciBnID0gcmVmWzFdO1xuICAgICAgICB2YXIgYiA9IHJlZlsyXTtcbiAgICAgICAgciA9IHIgLyAyNTU7XG4gICAgICAgIGcgPSBnIC8gMjU1O1xuICAgICAgICBiID0gYiAvIDI1NTtcbiAgICAgICAgdmFyIGsgPSAxIC0gbWF4KHIsbWF4KGcsYikpO1xuICAgICAgICB2YXIgZiA9IGsgPCAxID8gMSAvICgxLWspIDogMDtcbiAgICAgICAgdmFyIGMgPSAoMS1yLWspICogZjtcbiAgICAgICAgdmFyIG0gPSAoMS1nLWspICogZjtcbiAgICAgICAgdmFyIHkgPSAoMS1iLWspICogZjtcbiAgICAgICAgcmV0dXJuIFtjLG0seSxrXTtcbiAgICB9O1xuXG4gICAgdmFyIHJnYjJjbXlrXzEgPSByZ2IyY215aztcblxuICAgIHZhciB1bnBhY2skMiA9IHV0aWxzLnVucGFjaztcblxuICAgIHZhciBjbXlrMnJnYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICBhcmdzID0gdW5wYWNrJDIoYXJncywgJ2NteWsnKTtcbiAgICAgICAgdmFyIGMgPSBhcmdzWzBdO1xuICAgICAgICB2YXIgbSA9IGFyZ3NbMV07XG4gICAgICAgIHZhciB5ID0gYXJnc1syXTtcbiAgICAgICAgdmFyIGsgPSBhcmdzWzNdO1xuICAgICAgICB2YXIgYWxwaGEgPSBhcmdzLmxlbmd0aCA+IDQgPyBhcmdzWzRdIDogMTtcbiAgICAgICAgaWYgKGsgPT09IDEpIHsgcmV0dXJuIFswLDAsMCxhbHBoYV07IH1cbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIGMgPj0gMSA/IDAgOiAyNTUgKiAoMS1jKSAqICgxLWspLCAvLyByXG4gICAgICAgICAgICBtID49IDEgPyAwIDogMjU1ICogKDEtbSkgKiAoMS1rKSwgLy8gZ1xuICAgICAgICAgICAgeSA+PSAxID8gMCA6IDI1NSAqICgxLXkpICogKDEtayksIC8vIGJcbiAgICAgICAgICAgIGFscGhhXG4gICAgICAgIF07XG4gICAgfTtcblxuICAgIHZhciBjbXlrMnJnYl8xID0gY215azJyZ2I7XG5cbiAgICB2YXIgdW5wYWNrJDMgPSB1dGlscy51bnBhY2s7XG4gICAgdmFyIHR5cGUkMiA9IHV0aWxzLnR5cGU7XG5cblxuXG4gICAgQ29sb3JfMS5wcm90b3R5cGUuY215ayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmdiMmNteWtfMSh0aGlzLl9yZ2IpO1xuICAgIH07XG5cbiAgICBjaHJvbWFfMS5jbXlrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgIHJldHVybiBuZXcgKEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmFwcGx5KCBDb2xvcl8xLCBbIG51bGwgXS5jb25jYXQoIGFyZ3MsIFsnY215ayddKSApKTtcbiAgICB9O1xuXG4gICAgaW5wdXQuZm9ybWF0LmNteWsgPSBjbXlrMnJnYl8xO1xuXG4gICAgaW5wdXQuYXV0b2RldGVjdC5wdXNoKHtcbiAgICAgICAgcDogMixcbiAgICAgICAgdGVzdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgICAgIGFyZ3MgPSB1bnBhY2skMyhhcmdzLCAnY215aycpO1xuICAgICAgICAgICAgaWYgKHR5cGUkMihhcmdzKSA9PT0gJ2FycmF5JyAmJiBhcmdzLmxlbmd0aCA9PT0gNCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnY215ayc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHZhciB1bnBhY2skNCA9IHV0aWxzLnVucGFjaztcbiAgICB2YXIgbGFzdCQyID0gdXRpbHMubGFzdDtcbiAgICB2YXIgcm5kID0gZnVuY3Rpb24gKGEpIHsgcmV0dXJuIE1hdGgucm91bmQoYSoxMDApLzEwMDsgfTtcblxuICAgIC8qXG4gICAgICogc3VwcG9ydGVkIGFyZ3VtZW50czpcbiAgICAgKiAtIGhzbDJjc3MoaCxzLGwpXG4gICAgICogLSBoc2wyY3NzKGgscyxsLGEpXG4gICAgICogLSBoc2wyY3NzKFtoLHMsbF0sIG1vZGUpXG4gICAgICogLSBoc2wyY3NzKFtoLHMsbCxhXSwgbW9kZSlcbiAgICAgKiAtIGhzbDJjc3Moe2gscyxsLGF9LCBtb2RlKVxuICAgICAqL1xuICAgIHZhciBoc2wyY3NzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgIHZhciBoc2xhID0gdW5wYWNrJDQoYXJncywgJ2hzbGEnKTtcbiAgICAgICAgdmFyIG1vZGUgPSBsYXN0JDIoYXJncykgfHwgJ2xzYSc7XG4gICAgICAgIGhzbGFbMF0gPSBybmQoaHNsYVswXSB8fCAwKTtcbiAgICAgICAgaHNsYVsxXSA9IHJuZChoc2xhWzFdKjEwMCkgKyAnJSc7XG4gICAgICAgIGhzbGFbMl0gPSBybmQoaHNsYVsyXSoxMDApICsgJyUnO1xuICAgICAgICBpZiAobW9kZSA9PT0gJ2hzbGEnIHx8IChoc2xhLmxlbmd0aCA+IDMgJiYgaHNsYVszXTwxKSkge1xuICAgICAgICAgICAgaHNsYVszXSA9IGhzbGEubGVuZ3RoID4gMyA/IGhzbGFbM10gOiAxO1xuICAgICAgICAgICAgbW9kZSA9ICdoc2xhJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGhzbGEubGVuZ3RoID0gMztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKG1vZGUgKyBcIihcIiArIChoc2xhLmpvaW4oJywnKSkgKyBcIilcIik7XG4gICAgfTtcblxuICAgIHZhciBoc2wyY3NzXzEgPSBoc2wyY3NzO1xuXG4gICAgdmFyIHVucGFjayQ1ID0gdXRpbHMudW5wYWNrO1xuXG4gICAgLypcbiAgICAgKiBzdXBwb3J0ZWQgYXJndW1lbnRzOlxuICAgICAqIC0gcmdiMmhzbChyLGcsYilcbiAgICAgKiAtIHJnYjJoc2wocixnLGIsYSlcbiAgICAgKiAtIHJnYjJoc2woW3IsZyxiXSlcbiAgICAgKiAtIHJnYjJoc2woW3IsZyxiLGFdKVxuICAgICAqIC0gcmdiMmhzbCh7cixnLGIsYX0pXG4gICAgICovXG4gICAgdmFyIHJnYjJoc2wgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgYXJncyA9IHVucGFjayQ1KGFyZ3MsICdyZ2JhJyk7XG4gICAgICAgIHZhciByID0gYXJnc1swXTtcbiAgICAgICAgdmFyIGcgPSBhcmdzWzFdO1xuICAgICAgICB2YXIgYiA9IGFyZ3NbMl07XG5cbiAgICAgICAgciAvPSAyNTU7XG4gICAgICAgIGcgLz0gMjU1O1xuICAgICAgICBiIC89IDI1NTtcblxuICAgICAgICB2YXIgbWluID0gTWF0aC5taW4ociwgZywgYik7XG4gICAgICAgIHZhciBtYXggPSBNYXRoLm1heChyLCBnLCBiKTtcblxuICAgICAgICB2YXIgbCA9IChtYXggKyBtaW4pIC8gMjtcbiAgICAgICAgdmFyIHMsIGg7XG5cbiAgICAgICAgaWYgKG1heCA9PT0gbWluKXtcbiAgICAgICAgICAgIHMgPSAwO1xuICAgICAgICAgICAgaCA9IE51bWJlci5OYU47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzID0gbCA8IDAuNSA/IChtYXggLSBtaW4pIC8gKG1heCArIG1pbikgOiAobWF4IC0gbWluKSAvICgyIC0gbWF4IC0gbWluKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChyID09IG1heCkgeyBoID0gKGcgLSBiKSAvIChtYXggLSBtaW4pOyB9XG4gICAgICAgIGVsc2UgaWYgKGcgPT0gbWF4KSB7IGggPSAyICsgKGIgLSByKSAvIChtYXggLSBtaW4pOyB9XG4gICAgICAgIGVsc2UgaWYgKGIgPT0gbWF4KSB7IGggPSA0ICsgKHIgLSBnKSAvIChtYXggLSBtaW4pOyB9XG5cbiAgICAgICAgaCAqPSA2MDtcbiAgICAgICAgaWYgKGggPCAwKSB7IGggKz0gMzYwOyB9XG4gICAgICAgIGlmIChhcmdzLmxlbmd0aD4zICYmIGFyZ3NbM10hPT11bmRlZmluZWQpIHsgcmV0dXJuIFtoLHMsbCxhcmdzWzNdXTsgfVxuICAgICAgICByZXR1cm4gW2gscyxsXTtcbiAgICB9O1xuXG4gICAgdmFyIHJnYjJoc2xfMSA9IHJnYjJoc2w7XG5cbiAgICB2YXIgdW5wYWNrJDYgPSB1dGlscy51bnBhY2s7XG4gICAgdmFyIGxhc3QkMyA9IHV0aWxzLmxhc3Q7XG5cblxuICAgIHZhciByb3VuZCA9IE1hdGgucm91bmQ7XG5cbiAgICAvKlxuICAgICAqIHN1cHBvcnRlZCBhcmd1bWVudHM6XG4gICAgICogLSByZ2IyY3NzKHIsZyxiKVxuICAgICAqIC0gcmdiMmNzcyhyLGcsYixhKVxuICAgICAqIC0gcmdiMmNzcyhbcixnLGJdLCBtb2RlKVxuICAgICAqIC0gcmdiMmNzcyhbcixnLGIsYV0sIG1vZGUpXG4gICAgICogLSByZ2IyY3NzKHtyLGcsYixhfSwgbW9kZSlcbiAgICAgKi9cbiAgICB2YXIgcmdiMmNzcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICB2YXIgcmdiYSA9IHVucGFjayQ2KGFyZ3MsICdyZ2JhJyk7XG4gICAgICAgIHZhciBtb2RlID0gbGFzdCQzKGFyZ3MpIHx8ICdyZ2InO1xuICAgICAgICBpZiAobW9kZS5zdWJzdHIoMCwzKSA9PSAnaHNsJykge1xuICAgICAgICAgICAgcmV0dXJuIGhzbDJjc3NfMShyZ2IyaHNsXzEocmdiYSksIG1vZGUpO1xuICAgICAgICB9XG4gICAgICAgIHJnYmFbMF0gPSByb3VuZChyZ2JhWzBdKTtcbiAgICAgICAgcmdiYVsxXSA9IHJvdW5kKHJnYmFbMV0pO1xuICAgICAgICByZ2JhWzJdID0gcm91bmQocmdiYVsyXSk7XG4gICAgICAgIGlmIChtb2RlID09PSAncmdiYScgfHwgKHJnYmEubGVuZ3RoID4gMyAmJiByZ2JhWzNdPDEpKSB7XG4gICAgICAgICAgICByZ2JhWzNdID0gcmdiYS5sZW5ndGggPiAzID8gcmdiYVszXSA6IDE7XG4gICAgICAgICAgICBtb2RlID0gJ3JnYmEnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAobW9kZSArIFwiKFwiICsgKHJnYmEuc2xpY2UoMCxtb2RlPT09J3JnYic/Mzo0KS5qb2luKCcsJykpICsgXCIpXCIpO1xuICAgIH07XG5cbiAgICB2YXIgcmdiMmNzc18xID0gcmdiMmNzcztcblxuICAgIHZhciB1bnBhY2skNyA9IHV0aWxzLnVucGFjaztcbiAgICB2YXIgcm91bmQkMSA9IE1hdGgucm91bmQ7XG5cbiAgICB2YXIgaHNsMnJnYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFzc2lnbjtcblxuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuICAgICAgICBhcmdzID0gdW5wYWNrJDcoYXJncywgJ2hzbCcpO1xuICAgICAgICB2YXIgaCA9IGFyZ3NbMF07XG4gICAgICAgIHZhciBzID0gYXJnc1sxXTtcbiAgICAgICAgdmFyIGwgPSBhcmdzWzJdO1xuICAgICAgICB2YXIgcixnLGI7XG4gICAgICAgIGlmIChzID09PSAwKSB7XG4gICAgICAgICAgICByID0gZyA9IGIgPSBsKjI1NTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciB0MyA9IFswLDAsMF07XG4gICAgICAgICAgICB2YXIgYyA9IFswLDAsMF07XG4gICAgICAgICAgICB2YXIgdDIgPSBsIDwgMC41ID8gbCAqICgxK3MpIDogbCtzLWwqcztcbiAgICAgICAgICAgIHZhciB0MSA9IDIgKiBsIC0gdDI7XG4gICAgICAgICAgICB2YXIgaF8gPSBoIC8gMzYwO1xuICAgICAgICAgICAgdDNbMF0gPSBoXyArIDEvMztcbiAgICAgICAgICAgIHQzWzFdID0gaF87XG4gICAgICAgICAgICB0M1syXSA9IGhfIC0gMS8zO1xuICAgICAgICAgICAgZm9yICh2YXIgaT0wOyBpPDM7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmICh0M1tpXSA8IDApIHsgdDNbaV0gKz0gMTsgfVxuICAgICAgICAgICAgICAgIGlmICh0M1tpXSA+IDEpIHsgdDNbaV0gLT0gMTsgfVxuICAgICAgICAgICAgICAgIGlmICg2ICogdDNbaV0gPCAxKVxuICAgICAgICAgICAgICAgICAgICB7IGNbaV0gPSB0MSArICh0MiAtIHQxKSAqIDYgKiB0M1tpXTsgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKDIgKiB0M1tpXSA8IDEpXG4gICAgICAgICAgICAgICAgICAgIHsgY1tpXSA9IHQyOyB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoMyAqIHQzW2ldIDwgMilcbiAgICAgICAgICAgICAgICAgICAgeyBjW2ldID0gdDEgKyAodDIgLSB0MSkgKiAoKDIgLyAzKSAtIHQzW2ldKSAqIDY7IH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHsgY1tpXSA9IHQxOyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAoYXNzaWduID0gW3JvdW5kJDEoY1swXSoyNTUpLHJvdW5kJDEoY1sxXSoyNTUpLHJvdW5kJDEoY1syXSoyNTUpXSwgciA9IGFzc2lnblswXSwgZyA9IGFzc2lnblsxXSwgYiA9IGFzc2lnblsyXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFyZ3MubGVuZ3RoID4gMykge1xuICAgICAgICAgICAgLy8ga2VlcCBhbHBoYSBjaGFubmVsXG4gICAgICAgICAgICByZXR1cm4gW3IsZyxiLGFyZ3NbM11dO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbcixnLGIsMV07XG4gICAgfTtcblxuICAgIHZhciBoc2wycmdiXzEgPSBoc2wycmdiO1xuXG4gICAgdmFyIFJFX1JHQiA9IC9ecmdiXFwoXFxzKigtP1xcZCspLFxccyooLT9cXGQrKVxccyosXFxzKigtP1xcZCspXFxzKlxcKSQvO1xuICAgIHZhciBSRV9SR0JBID0gL15yZ2JhXFwoXFxzKigtP1xcZCspLFxccyooLT9cXGQrKVxccyosXFxzKigtP1xcZCspXFxzKixcXHMqKFswMV18WzAxXT9cXC5cXGQrKVxcKSQvO1xuICAgIHZhciBSRV9SR0JfUENUID0gL15yZ2JcXChcXHMqKC0/XFxkKyg/OlxcLlxcZCspPyklLFxccyooLT9cXGQrKD86XFwuXFxkKyk/KSVcXHMqLFxccyooLT9cXGQrKD86XFwuXFxkKyk/KSVcXHMqXFwpJC87XG4gICAgdmFyIFJFX1JHQkFfUENUID0gL15yZ2JhXFwoXFxzKigtP1xcZCsoPzpcXC5cXGQrKT8pJSxcXHMqKC0/XFxkKyg/OlxcLlxcZCspPyklXFxzKixcXHMqKC0/XFxkKyg/OlxcLlxcZCspPyklXFxzKixcXHMqKFswMV18WzAxXT9cXC5cXGQrKVxcKSQvO1xuICAgIHZhciBSRV9IU0wgPSAvXmhzbFxcKFxccyooLT9cXGQrKD86XFwuXFxkKyk/KSxcXHMqKC0/XFxkKyg/OlxcLlxcZCspPyklXFxzKixcXHMqKC0/XFxkKyg/OlxcLlxcZCspPyklXFxzKlxcKSQvO1xuICAgIHZhciBSRV9IU0xBID0gL15oc2xhXFwoXFxzKigtP1xcZCsoPzpcXC5cXGQrKT8pLFxccyooLT9cXGQrKD86XFwuXFxkKyk/KSVcXHMqLFxccyooLT9cXGQrKD86XFwuXFxkKyk/KSVcXHMqLFxccyooWzAxXXxbMDFdP1xcLlxcZCspXFwpJC87XG5cbiAgICB2YXIgcm91bmQkMiA9IE1hdGgucm91bmQ7XG5cbiAgICB2YXIgY3NzMnJnYiA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgICAgICAgY3NzID0gY3NzLnRvTG93ZXJDYXNlKCkudHJpbSgpO1xuICAgICAgICB2YXIgbTtcblxuICAgICAgICBpZiAoaW5wdXQuZm9ybWF0Lm5hbWVkKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dC5mb3JtYXQubmFtZWQoY3NzKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHJnYigyNTAsMjAsMClcbiAgICAgICAgaWYgKChtID0gY3NzLm1hdGNoKFJFX1JHQikpKSB7XG4gICAgICAgICAgICB2YXIgcmdiID0gbS5zbGljZSgxLDQpO1xuICAgICAgICAgICAgZm9yICh2YXIgaT0wOyBpPDM7IGkrKykge1xuICAgICAgICAgICAgICAgIHJnYltpXSA9ICtyZ2JbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZ2JbM10gPSAxOyAgLy8gZGVmYXVsdCBhbHBoYVxuICAgICAgICAgICAgcmV0dXJuIHJnYjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHJnYmEoMjUwLDIwLDAsMC40KVxuICAgICAgICBpZiAoKG0gPSBjc3MubWF0Y2goUkVfUkdCQSkpKSB7XG4gICAgICAgICAgICB2YXIgcmdiJDEgPSBtLnNsaWNlKDEsNSk7XG4gICAgICAgICAgICBmb3IgKHZhciBpJDE9MDsgaSQxPDQ7IGkkMSsrKSB7XG4gICAgICAgICAgICAgICAgcmdiJDFbaSQxXSA9ICtyZ2IkMVtpJDFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJnYiQxO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmdiKDEwMCUsMCUsMCUpXG4gICAgICAgIGlmICgobSA9IGNzcy5tYXRjaChSRV9SR0JfUENUKSkpIHtcbiAgICAgICAgICAgIHZhciByZ2IkMiA9IG0uc2xpY2UoMSw0KTtcbiAgICAgICAgICAgIGZvciAodmFyIGkkMj0wOyBpJDI8MzsgaSQyKyspIHtcbiAgICAgICAgICAgICAgICByZ2IkMltpJDJdID0gcm91bmQkMihyZ2IkMltpJDJdICogMi41NSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZ2IkMlszXSA9IDE7ICAvLyBkZWZhdWx0IGFscGhhXG4gICAgICAgICAgICByZXR1cm4gcmdiJDI7XG4gICAgICAgIH1cblxuICAgICAgICAvLyByZ2JhKDEwMCUsMCUsMCUsMC40KVxuICAgICAgICBpZiAoKG0gPSBjc3MubWF0Y2goUkVfUkdCQV9QQ1QpKSkge1xuICAgICAgICAgICAgdmFyIHJnYiQzID0gbS5zbGljZSgxLDUpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSQzPTA7IGkkMzwzOyBpJDMrKykge1xuICAgICAgICAgICAgICAgIHJnYiQzW2kkM10gPSByb3VuZCQyKHJnYiQzW2kkM10gKiAyLjU1KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJnYiQzWzNdID0gK3JnYiQzWzNdO1xuICAgICAgICAgICAgcmV0dXJuIHJnYiQzO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaHNsKDAsMTAwJSw1MCUpXG4gICAgICAgIGlmICgobSA9IGNzcy5tYXRjaChSRV9IU0wpKSkge1xuICAgICAgICAgICAgdmFyIGhzbCA9IG0uc2xpY2UoMSw0KTtcbiAgICAgICAgICAgIGhzbFsxXSAqPSAwLjAxO1xuICAgICAgICAgICAgaHNsWzJdICo9IDAuMDE7XG4gICAgICAgICAgICB2YXIgcmdiJDQgPSBoc2wycmdiXzEoaHNsKTtcbiAgICAgICAgICAgIHJnYiQ0WzNdID0gMTtcbiAgICAgICAgICAgIHJldHVybiByZ2IkNDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGhzbGEoMCwxMDAlLDUwJSwwLjUpXG4gICAgICAgIGlmICgobSA9IGNzcy5tYXRjaChSRV9IU0xBKSkpIHtcbiAgICAgICAgICAgIHZhciBoc2wkMSA9IG0uc2xpY2UoMSw0KTtcbiAgICAgICAgICAgIGhzbCQxWzFdICo9IDAuMDE7XG4gICAgICAgICAgICBoc2wkMVsyXSAqPSAwLjAxO1xuICAgICAgICAgICAgdmFyIHJnYiQ1ID0gaHNsMnJnYl8xKGhzbCQxKTtcbiAgICAgICAgICAgIHJnYiQ1WzNdID0gK21bNF07ICAvLyBkZWZhdWx0IGFscGhhID0gMVxuICAgICAgICAgICAgcmV0dXJuIHJnYiQ1O1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNzczJyZ2IudGVzdCA9IGZ1bmN0aW9uIChzKSB7XG4gICAgICAgIHJldHVybiBSRV9SR0IudGVzdChzKSB8fFxuICAgICAgICAgICAgUkVfUkdCQS50ZXN0KHMpIHx8XG4gICAgICAgICAgICBSRV9SR0JfUENULnRlc3QocykgfHxcbiAgICAgICAgICAgIFJFX1JHQkFfUENULnRlc3QocykgfHxcbiAgICAgICAgICAgIFJFX0hTTC50ZXN0KHMpIHx8XG4gICAgICAgICAgICBSRV9IU0xBLnRlc3Qocyk7XG4gICAgfTtcblxuICAgIHZhciBjc3MycmdiXzEgPSBjc3MycmdiO1xuXG4gICAgdmFyIHR5cGUkMyA9IHV0aWxzLnR5cGU7XG5cblxuXG5cbiAgICBDb2xvcl8xLnByb3RvdHlwZS5jc3MgPSBmdW5jdGlvbihtb2RlKSB7XG4gICAgICAgIHJldHVybiByZ2IyY3NzXzEodGhpcy5fcmdiLCBtb2RlKTtcbiAgICB9O1xuXG4gICAgY2hyb21hXzEuY3NzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgIHJldHVybiBuZXcgKEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmFwcGx5KCBDb2xvcl8xLCBbIG51bGwgXS5jb25jYXQoIGFyZ3MsIFsnY3NzJ10pICkpO1xuICAgIH07XG5cbiAgICBpbnB1dC5mb3JtYXQuY3NzID0gY3NzMnJnYl8xO1xuXG4gICAgaW5wdXQuYXV0b2RldGVjdC5wdXNoKHtcbiAgICAgICAgcDogNSxcbiAgICAgICAgdGVzdDogZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgICAgIHZhciByZXN0ID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGggLSAxO1xuICAgICAgICAgICAgd2hpbGUgKCBsZW4tLSA+IDAgKSByZXN0WyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuICsgMSBdO1xuXG4gICAgICAgICAgICBpZiAoIXJlc3QubGVuZ3RoICYmIHR5cGUkMyhoKSA9PT0gJ3N0cmluZycgJiYgY3NzMnJnYl8xLnRlc3QoaCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2Nzcyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHZhciB1bnBhY2skOCA9IHV0aWxzLnVucGFjaztcblxuICAgIGlucHV0LmZvcm1hdC5nbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICB2YXIgcmdiID0gdW5wYWNrJDgoYXJncywgJ3JnYmEnKTtcbiAgICAgICAgcmdiWzBdICo9IDI1NTtcbiAgICAgICAgcmdiWzFdICo9IDI1NTtcbiAgICAgICAgcmdiWzJdICo9IDI1NTtcbiAgICAgICAgcmV0dXJuIHJnYjtcbiAgICB9O1xuXG4gICAgY2hyb21hXzEuZ2wgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgcmV0dXJuIG5ldyAoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuYXBwbHkoIENvbG9yXzEsIFsgbnVsbCBdLmNvbmNhdCggYXJncywgWydnbCddKSApKTtcbiAgICB9O1xuXG4gICAgQ29sb3JfMS5wcm90b3R5cGUuZ2wgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHJnYiA9IHRoaXMuX3JnYjtcbiAgICAgICAgcmV0dXJuIFtyZ2JbMF0vMjU1LCByZ2JbMV0vMjU1LCByZ2JbMl0vMjU1LCByZ2JbM11dO1xuICAgIH07XG5cbiAgICB2YXIgdW5wYWNrJDkgPSB1dGlscy51bnBhY2s7XG5cbiAgICB2YXIgcmdiMmhjZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICB2YXIgcmVmID0gdW5wYWNrJDkoYXJncywgJ3JnYicpO1xuICAgICAgICB2YXIgciA9IHJlZlswXTtcbiAgICAgICAgdmFyIGcgPSByZWZbMV07XG4gICAgICAgIHZhciBiID0gcmVmWzJdO1xuICAgICAgICB2YXIgbWluID0gTWF0aC5taW4ociwgZywgYik7XG4gICAgICAgIHZhciBtYXggPSBNYXRoLm1heChyLCBnLCBiKTtcbiAgICAgICAgdmFyIGRlbHRhID0gbWF4IC0gbWluO1xuICAgICAgICB2YXIgYyA9IGRlbHRhICogMTAwIC8gMjU1O1xuICAgICAgICB2YXIgX2cgPSBtaW4gLyAoMjU1IC0gZGVsdGEpICogMTAwO1xuICAgICAgICB2YXIgaDtcbiAgICAgICAgaWYgKGRlbHRhID09PSAwKSB7XG4gICAgICAgICAgICBoID0gTnVtYmVyLk5hTjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChyID09PSBtYXgpIHsgaCA9IChnIC0gYikgLyBkZWx0YTsgfVxuICAgICAgICAgICAgaWYgKGcgPT09IG1heCkgeyBoID0gMisoYiAtIHIpIC8gZGVsdGE7IH1cbiAgICAgICAgICAgIGlmIChiID09PSBtYXgpIHsgaCA9IDQrKHIgLSBnKSAvIGRlbHRhOyB9XG4gICAgICAgICAgICBoICo9IDYwO1xuICAgICAgICAgICAgaWYgKGggPCAwKSB7IGggKz0gMzYwOyB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtoLCBjLCBfZ107XG4gICAgfTtcblxuICAgIHZhciByZ2IyaGNnXzEgPSByZ2IyaGNnO1xuXG4gICAgdmFyIHVucGFjayRhID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5cbiAgICAvKlxuICAgICAqIHRoaXMgaXMgYmFzaWNhbGx5IGp1c3QgSFNWIHdpdGggc29tZSBtaW5vciB0d2Vha3NcbiAgICAgKlxuICAgICAqIGh1ZS4uIFswLi4zNjBdXG4gICAgICogY2hyb21hIC4uIFswLi4xXVxuICAgICAqIGdyYXluZXNzIC4uIFswLi4xXVxuICAgICAqL1xuXG4gICAgdmFyIGhjZzJyZ2IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhc3NpZ24sIGFzc2lnbiQxLCBhc3NpZ24kMiwgYXNzaWduJDMsIGFzc2lnbiQ0LCBhc3NpZ24kNTtcblxuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuICAgICAgICBhcmdzID0gdW5wYWNrJGEoYXJncywgJ2hjZycpO1xuICAgICAgICB2YXIgaCA9IGFyZ3NbMF07XG4gICAgICAgIHZhciBjID0gYXJnc1sxXTtcbiAgICAgICAgdmFyIF9nID0gYXJnc1syXTtcbiAgICAgICAgdmFyIHIsZyxiO1xuICAgICAgICBfZyA9IF9nICogMjU1O1xuICAgICAgICB2YXIgX2MgPSBjICogMjU1O1xuICAgICAgICBpZiAoYyA9PT0gMCkge1xuICAgICAgICAgICAgciA9IGcgPSBiID0gX2c7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoaCA9PT0gMzYwKSB7IGggPSAwOyB9XG4gICAgICAgICAgICBpZiAoaCA+IDM2MCkgeyBoIC09IDM2MDsgfVxuICAgICAgICAgICAgaWYgKGggPCAwKSB7IGggKz0gMzYwOyB9XG4gICAgICAgICAgICBoIC89IDYwO1xuICAgICAgICAgICAgdmFyIGkgPSBmbG9vcihoKTtcbiAgICAgICAgICAgIHZhciBmID0gaCAtIGk7XG4gICAgICAgICAgICB2YXIgcCA9IF9nICogKDEgLSBjKTtcbiAgICAgICAgICAgIHZhciBxID0gcCArIF9jICogKDEgLSBmKTtcbiAgICAgICAgICAgIHZhciB0ID0gcCArIF9jICogZjtcbiAgICAgICAgICAgIHZhciB2ID0gcCArIF9jO1xuICAgICAgICAgICAgc3dpdGNoIChpKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiAoYXNzaWduID0gW3YsIHQsIHBdLCByID0gYXNzaWduWzBdLCBnID0gYXNzaWduWzFdLCBiID0gYXNzaWduWzJdKTsgYnJlYWtcbiAgICAgICAgICAgICAgICBjYXNlIDE6IChhc3NpZ24kMSA9IFtxLCB2LCBwXSwgciA9IGFzc2lnbiQxWzBdLCBnID0gYXNzaWduJDFbMV0sIGIgPSBhc3NpZ24kMVsyXSk7IGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSAyOiAoYXNzaWduJDIgPSBbcCwgdiwgdF0sIHIgPSBhc3NpZ24kMlswXSwgZyA9IGFzc2lnbiQyWzFdLCBiID0gYXNzaWduJDJbMl0pOyBicmVha1xuICAgICAgICAgICAgICAgIGNhc2UgMzogKGFzc2lnbiQzID0gW3AsIHEsIHZdLCByID0gYXNzaWduJDNbMF0sIGcgPSBhc3NpZ24kM1sxXSwgYiA9IGFzc2lnbiQzWzJdKTsgYnJlYWtcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IChhc3NpZ24kNCA9IFt0LCBwLCB2XSwgciA9IGFzc2lnbiQ0WzBdLCBnID0gYXNzaWduJDRbMV0sIGIgPSBhc3NpZ24kNFsyXSk7IGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSA1OiAoYXNzaWduJDUgPSBbdiwgcCwgcV0sIHIgPSBhc3NpZ24kNVswXSwgZyA9IGFzc2lnbiQ1WzFdLCBiID0gYXNzaWduJDVbMl0pOyBicmVha1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbciwgZywgYiwgYXJncy5sZW5ndGggPiAzID8gYXJnc1szXSA6IDFdO1xuICAgIH07XG5cbiAgICB2YXIgaGNnMnJnYl8xID0gaGNnMnJnYjtcblxuICAgIHZhciB1bnBhY2skYiA9IHV0aWxzLnVucGFjaztcbiAgICB2YXIgdHlwZSQ0ID0gdXRpbHMudHlwZTtcblxuXG5cblxuXG5cbiAgICBDb2xvcl8xLnByb3RvdHlwZS5oY2cgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHJnYjJoY2dfMSh0aGlzLl9yZ2IpO1xuICAgIH07XG5cbiAgICBjaHJvbWFfMS5oY2cgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgcmV0dXJuIG5ldyAoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuYXBwbHkoIENvbG9yXzEsIFsgbnVsbCBdLmNvbmNhdCggYXJncywgWydoY2cnXSkgKSk7XG4gICAgfTtcblxuICAgIGlucHV0LmZvcm1hdC5oY2cgPSBoY2cycmdiXzE7XG5cbiAgICBpbnB1dC5hdXRvZGV0ZWN0LnB1c2goe1xuICAgICAgICBwOiAxLFxuICAgICAgICB0ZXN0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICAgICAgYXJncyA9IHVucGFjayRiKGFyZ3MsICdoY2cnKTtcbiAgICAgICAgICAgIGlmICh0eXBlJDQoYXJncykgPT09ICdhcnJheScgJiYgYXJncy5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2hjZyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHZhciB1bnBhY2skYyA9IHV0aWxzLnVucGFjaztcbiAgICB2YXIgbGFzdCQ0ID0gdXRpbHMubGFzdDtcbiAgICB2YXIgcm91bmQkMyA9IE1hdGgucm91bmQ7XG5cbiAgICB2YXIgcmdiMmhleCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICB2YXIgcmVmID0gdW5wYWNrJGMoYXJncywgJ3JnYmEnKTtcbiAgICAgICAgdmFyIHIgPSByZWZbMF07XG4gICAgICAgIHZhciBnID0gcmVmWzFdO1xuICAgICAgICB2YXIgYiA9IHJlZlsyXTtcbiAgICAgICAgdmFyIGEgPSByZWZbM107XG4gICAgICAgIHZhciBtb2RlID0gbGFzdCQ0KGFyZ3MpIHx8ICdhdXRvJztcbiAgICAgICAgaWYgKGEgPT09IHVuZGVmaW5lZCkgeyBhID0gMTsgfVxuICAgICAgICBpZiAobW9kZSA9PT0gJ2F1dG8nKSB7XG4gICAgICAgICAgICBtb2RlID0gYSA8IDEgPyAncmdiYScgOiAncmdiJztcbiAgICAgICAgfVxuICAgICAgICByID0gcm91bmQkMyhyKTtcbiAgICAgICAgZyA9IHJvdW5kJDMoZyk7XG4gICAgICAgIGIgPSByb3VuZCQzKGIpO1xuICAgICAgICB2YXIgdSA9IHIgPDwgMTYgfCBnIDw8IDggfCBiO1xuICAgICAgICB2YXIgc3RyID0gXCIwMDAwMDBcIiArIHUudG9TdHJpbmcoMTYpOyAvLyMudG9VcHBlckNhc2UoKTtcbiAgICAgICAgc3RyID0gc3RyLnN1YnN0cihzdHIubGVuZ3RoIC0gNik7XG4gICAgICAgIHZhciBoeGEgPSAnMCcgKyByb3VuZCQzKGEgKiAyNTUpLnRvU3RyaW5nKDE2KTtcbiAgICAgICAgaHhhID0gaHhhLnN1YnN0cihoeGEubGVuZ3RoIC0gMik7XG4gICAgICAgIHN3aXRjaCAobW9kZS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICBjYXNlICdyZ2JhJzogcmV0dXJuIChcIiNcIiArIHN0ciArIGh4YSk7XG4gICAgICAgICAgICBjYXNlICdhcmdiJzogcmV0dXJuIChcIiNcIiArIGh4YSArIHN0cik7XG4gICAgICAgICAgICBkZWZhdWx0OiByZXR1cm4gKFwiI1wiICsgc3RyKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgcmdiMmhleF8xID0gcmdiMmhleDtcblxuICAgIHZhciBSRV9IRVggPSAvXiM/KFtBLUZhLWYwLTldezZ9fFtBLUZhLWYwLTldezN9KSQvO1xuICAgIHZhciBSRV9IRVhBID0gL14jPyhbQS1GYS1mMC05XXs4fXxbQS1GYS1mMC05XXs0fSkkLztcblxuICAgIHZhciBoZXgycmdiID0gZnVuY3Rpb24gKGhleCkge1xuICAgICAgICBpZiAoaGV4Lm1hdGNoKFJFX0hFWCkpIHtcbiAgICAgICAgICAgIC8vIHJlbW92ZSBvcHRpb25hbCBsZWFkaW5nICNcbiAgICAgICAgICAgIGlmIChoZXgubGVuZ3RoID09PSA0IHx8IGhleC5sZW5ndGggPT09IDcpIHtcbiAgICAgICAgICAgICAgICBoZXggPSBoZXguc3Vic3RyKDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gZXhwYW5kIHNob3J0LW5vdGF0aW9uIHRvIGZ1bGwgc2l4LWRpZ2l0XG4gICAgICAgICAgICBpZiAoaGV4Lmxlbmd0aCA9PT0gMykge1xuICAgICAgICAgICAgICAgIGhleCA9IGhleC5zcGxpdCgnJyk7XG4gICAgICAgICAgICAgICAgaGV4ID0gaGV4WzBdK2hleFswXStoZXhbMV0raGV4WzFdK2hleFsyXStoZXhbMl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdSA9IHBhcnNlSW50KGhleCwgMTYpO1xuICAgICAgICAgICAgdmFyIHIgPSB1ID4+IDE2O1xuICAgICAgICAgICAgdmFyIGcgPSB1ID4+IDggJiAweEZGO1xuICAgICAgICAgICAgdmFyIGIgPSB1ICYgMHhGRjtcbiAgICAgICAgICAgIHJldHVybiBbcixnLGIsMV07XG4gICAgICAgIH1cblxuICAgICAgICAvLyBtYXRjaCByZ2JhIGhleCBmb3JtYXQsIGVnICNGRjAwMDA3N1xuICAgICAgICBpZiAoaGV4Lm1hdGNoKFJFX0hFWEEpKSB7XG4gICAgICAgICAgICBpZiAoaGV4Lmxlbmd0aCA9PT0gNSB8fCBoZXgubGVuZ3RoID09PSA5KSB7XG4gICAgICAgICAgICAgICAgLy8gcmVtb3ZlIG9wdGlvbmFsIGxlYWRpbmcgI1xuICAgICAgICAgICAgICAgIGhleCA9IGhleC5zdWJzdHIoMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBleHBhbmQgc2hvcnQtbm90YXRpb24gdG8gZnVsbCBlaWdodC1kaWdpdFxuICAgICAgICAgICAgaWYgKGhleC5sZW5ndGggPT09IDQpIHtcbiAgICAgICAgICAgICAgICBoZXggPSBoZXguc3BsaXQoJycpO1xuICAgICAgICAgICAgICAgIGhleCA9IGhleFswXStoZXhbMF0raGV4WzFdK2hleFsxXStoZXhbMl0raGV4WzJdK2hleFszXStoZXhbM107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdSQxID0gcGFyc2VJbnQoaGV4LCAxNik7XG4gICAgICAgICAgICB2YXIgciQxID0gdSQxID4+IDI0ICYgMHhGRjtcbiAgICAgICAgICAgIHZhciBnJDEgPSB1JDEgPj4gMTYgJiAweEZGO1xuICAgICAgICAgICAgdmFyIGIkMSA9IHUkMSA+PiA4ICYgMHhGRjtcbiAgICAgICAgICAgIHZhciBhID0gTWF0aC5yb3VuZCgodSQxICYgMHhGRikgLyAweEZGICogMTAwKSAvIDEwMDtcbiAgICAgICAgICAgIHJldHVybiBbciQxLGckMSxiJDEsYV07XG4gICAgICAgIH1cblxuICAgICAgICAvLyB3ZSB1c2VkIHRvIGNoZWNrIGZvciBjc3MgY29sb3JzIGhlcmVcbiAgICAgICAgLy8gaWYgX2lucHV0LmNzcz8gYW5kIHJnYiA9IF9pbnB1dC5jc3MgaGV4XG4gICAgICAgIC8vICAgICByZXR1cm4gcmdiXG5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKChcInVua25vd24gaGV4IGNvbG9yOiBcIiArIGhleCkpO1xuICAgIH07XG5cbiAgICB2YXIgaGV4MnJnYl8xID0gaGV4MnJnYjtcblxuICAgIHZhciB0eXBlJDUgPSB1dGlscy50eXBlO1xuXG5cblxuXG4gICAgQ29sb3JfMS5wcm90b3R5cGUuaGV4ID0gZnVuY3Rpb24obW9kZSkge1xuICAgICAgICByZXR1cm4gcmdiMmhleF8xKHRoaXMuX3JnYiwgbW9kZSk7XG4gICAgfTtcblxuICAgIGNocm9tYV8xLmhleCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICByZXR1cm4gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseSggQ29sb3JfMSwgWyBudWxsIF0uY29uY2F0KCBhcmdzLCBbJ2hleCddKSApKTtcbiAgICB9O1xuXG4gICAgaW5wdXQuZm9ybWF0LmhleCA9IGhleDJyZ2JfMTtcbiAgICBpbnB1dC5hdXRvZGV0ZWN0LnB1c2goe1xuICAgICAgICBwOiA0LFxuICAgICAgICB0ZXN0OiBmdW5jdGlvbiAoaCkge1xuICAgICAgICAgICAgdmFyIHJlc3QgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICB3aGlsZSAoIGxlbi0tID4gMCApIHJlc3RbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gKyAxIF07XG5cbiAgICAgICAgICAgIGlmICghcmVzdC5sZW5ndGggJiYgdHlwZSQ1KGgpID09PSAnc3RyaW5nJyAmJiBbMyw0LDUsNiw3LDgsOV0uaW5kZXhPZihoLmxlbmd0aCkgPj0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnaGV4JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIHVucGFjayRkID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciBUV09QSSA9IHV0aWxzLlRXT1BJO1xuICAgIHZhciBtaW4gPSBNYXRoLm1pbjtcbiAgICB2YXIgc3FydCA9IE1hdGguc3FydDtcbiAgICB2YXIgYWNvcyA9IE1hdGguYWNvcztcblxuICAgIHZhciByZ2IyaHNpID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgIC8qXG4gICAgICAgIGJvcnJvd2VkIGZyb20gaGVyZTpcbiAgICAgICAgaHR0cDovL2h1bW1lci5zdGFuZm9yZC5lZHUvbXVzZWluZm8vZG9jL2V4YW1wbGVzL2h1bWRydW0va2V5c2NhcGUyL3JnYjJoc2kuY3BwXG4gICAgICAgICovXG4gICAgICAgIHZhciByZWYgPSB1bnBhY2skZChhcmdzLCAncmdiJyk7XG4gICAgICAgIHZhciByID0gcmVmWzBdO1xuICAgICAgICB2YXIgZyA9IHJlZlsxXTtcbiAgICAgICAgdmFyIGIgPSByZWZbMl07XG4gICAgICAgIHIgLz0gMjU1O1xuICAgICAgICBnIC89IDI1NTtcbiAgICAgICAgYiAvPSAyNTU7XG4gICAgICAgIHZhciBoO1xuICAgICAgICB2YXIgbWluXyA9IG1pbihyLGcsYik7XG4gICAgICAgIHZhciBpID0gKHIrZytiKSAvIDM7XG4gICAgICAgIHZhciBzID0gaSA+IDAgPyAxIC0gbWluXy9pIDogMDtcbiAgICAgICAgaWYgKHMgPT09IDApIHtcbiAgICAgICAgICAgIGggPSBOYU47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoID0gKChyLWcpKyhyLWIpKSAvIDI7XG4gICAgICAgICAgICBoIC89IHNxcnQoKHItZykqKHItZykgKyAoci1iKSooZy1iKSk7XG4gICAgICAgICAgICBoID0gYWNvcyhoKTtcbiAgICAgICAgICAgIGlmIChiID4gZykge1xuICAgICAgICAgICAgICAgIGggPSBUV09QSSAtIGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoIC89IFRXT1BJO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbaCozNjAscyxpXTtcbiAgICB9O1xuXG4gICAgdmFyIHJnYjJoc2lfMSA9IHJnYjJoc2k7XG5cbiAgICB2YXIgdW5wYWNrJGUgPSB1dGlscy51bnBhY2s7XG4gICAgdmFyIGxpbWl0JDEgPSB1dGlscy5saW1pdDtcbiAgICB2YXIgVFdPUEkkMSA9IHV0aWxzLlRXT1BJO1xuICAgIHZhciBQSVRISVJEID0gdXRpbHMuUElUSElSRDtcbiAgICB2YXIgY29zID0gTWF0aC5jb3M7XG5cbiAgICAvKlxuICAgICAqIGh1ZSBbMC4uMzYwXVxuICAgICAqIHNhdHVyYXRpb24gWzAuLjFdXG4gICAgICogaW50ZW5zaXR5IFswLi4xXVxuICAgICAqL1xuICAgIHZhciBoc2kycmdiID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgIC8qXG4gICAgICAgIGJvcnJvd2VkIGZyb20gaGVyZTpcbiAgICAgICAgaHR0cDovL2h1bW1lci5zdGFuZm9yZC5lZHUvbXVzZWluZm8vZG9jL2V4YW1wbGVzL2h1bWRydW0va2V5c2NhcGUyL2hzaTJyZ2IuY3BwXG4gICAgICAgICovXG4gICAgICAgIGFyZ3MgPSB1bnBhY2skZShhcmdzLCAnaHNpJyk7XG4gICAgICAgIHZhciBoID0gYXJnc1swXTtcbiAgICAgICAgdmFyIHMgPSBhcmdzWzFdO1xuICAgICAgICB2YXIgaSA9IGFyZ3NbMl07XG4gICAgICAgIHZhciByLGcsYjtcblxuICAgICAgICBpZiAoaXNOYU4oaCkpIHsgaCA9IDA7IH1cbiAgICAgICAgaWYgKGlzTmFOKHMpKSB7IHMgPSAwOyB9XG4gICAgICAgIC8vIG5vcm1hbGl6ZSBodWVcbiAgICAgICAgaWYgKGggPiAzNjApIHsgaCAtPSAzNjA7IH1cbiAgICAgICAgaWYgKGggPCAwKSB7IGggKz0gMzYwOyB9XG4gICAgICAgIGggLz0gMzYwO1xuICAgICAgICBpZiAoaCA8IDEvMykge1xuICAgICAgICAgICAgYiA9ICgxLXMpLzM7XG4gICAgICAgICAgICByID0gKDErcypjb3MoVFdPUEkkMSpoKS9jb3MoUElUSElSRC1UV09QSSQxKmgpKS8zO1xuICAgICAgICAgICAgZyA9IDEgLSAoYityKTtcbiAgICAgICAgfSBlbHNlIGlmIChoIDwgMi8zKSB7XG4gICAgICAgICAgICBoIC09IDEvMztcbiAgICAgICAgICAgIHIgPSAoMS1zKS8zO1xuICAgICAgICAgICAgZyA9ICgxK3MqY29zKFRXT1BJJDEqaCkvY29zKFBJVEhJUkQtVFdPUEkkMSpoKSkvMztcbiAgICAgICAgICAgIGIgPSAxIC0gKHIrZyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoIC09IDIvMztcbiAgICAgICAgICAgIGcgPSAoMS1zKS8zO1xuICAgICAgICAgICAgYiA9ICgxK3MqY29zKFRXT1BJJDEqaCkvY29zKFBJVEhJUkQtVFdPUEkkMSpoKSkvMztcbiAgICAgICAgICAgIHIgPSAxIC0gKGcrYik7XG4gICAgICAgIH1cbiAgICAgICAgciA9IGxpbWl0JDEoaSpyKjMpO1xuICAgICAgICBnID0gbGltaXQkMShpKmcqMyk7XG4gICAgICAgIGIgPSBsaW1pdCQxKGkqYiozKTtcbiAgICAgICAgcmV0dXJuIFtyKjI1NSwgZyoyNTUsIGIqMjU1LCBhcmdzLmxlbmd0aCA+IDMgPyBhcmdzWzNdIDogMV07XG4gICAgfTtcblxuICAgIHZhciBoc2kycmdiXzEgPSBoc2kycmdiO1xuXG4gICAgdmFyIHVucGFjayRmID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciB0eXBlJDYgPSB1dGlscy50eXBlO1xuXG5cblxuXG5cblxuICAgIENvbG9yXzEucHJvdG90eXBlLmhzaSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmdiMmhzaV8xKHRoaXMuX3JnYik7XG4gICAgfTtcblxuICAgIGNocm9tYV8xLmhzaSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICByZXR1cm4gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseSggQ29sb3JfMSwgWyBudWxsIF0uY29uY2F0KCBhcmdzLCBbJ2hzaSddKSApKTtcbiAgICB9O1xuXG4gICAgaW5wdXQuZm9ybWF0LmhzaSA9IGhzaTJyZ2JfMTtcblxuICAgIGlucHV0LmF1dG9kZXRlY3QucHVzaCh7XG4gICAgICAgIHA6IDIsXG4gICAgICAgIHRlc3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgICAgICBhcmdzID0gdW5wYWNrJGYoYXJncywgJ2hzaScpO1xuICAgICAgICAgICAgaWYgKHR5cGUkNihhcmdzKSA9PT0gJ2FycmF5JyAmJiBhcmdzLmxlbmd0aCA9PT0gMykge1xuICAgICAgICAgICAgICAgIHJldHVybiAnaHNpJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIHVucGFjayRnID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciB0eXBlJDcgPSB1dGlscy50eXBlO1xuXG5cblxuXG5cblxuICAgIENvbG9yXzEucHJvdG90eXBlLmhzbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmdiMmhzbF8xKHRoaXMuX3JnYik7XG4gICAgfTtcblxuICAgIGNocm9tYV8xLmhzbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICByZXR1cm4gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseSggQ29sb3JfMSwgWyBudWxsIF0uY29uY2F0KCBhcmdzLCBbJ2hzbCddKSApKTtcbiAgICB9O1xuXG4gICAgaW5wdXQuZm9ybWF0LmhzbCA9IGhzbDJyZ2JfMTtcblxuICAgIGlucHV0LmF1dG9kZXRlY3QucHVzaCh7XG4gICAgICAgIHA6IDIsXG4gICAgICAgIHRlc3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgICAgICBhcmdzID0gdW5wYWNrJGcoYXJncywgJ2hzbCcpO1xuICAgICAgICAgICAgaWYgKHR5cGUkNyhhcmdzKSA9PT0gJ2FycmF5JyAmJiBhcmdzLmxlbmd0aCA9PT0gMykge1xuICAgICAgICAgICAgICAgIHJldHVybiAnaHNsJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIHVucGFjayRoID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciBtaW4kMSA9IE1hdGgubWluO1xuICAgIHZhciBtYXgkMSA9IE1hdGgubWF4O1xuXG4gICAgLypcbiAgICAgKiBzdXBwb3J0ZWQgYXJndW1lbnRzOlxuICAgICAqIC0gcmdiMmhzdihyLGcsYilcbiAgICAgKiAtIHJnYjJoc3YoW3IsZyxiXSlcbiAgICAgKiAtIHJnYjJoc3Yoe3IsZyxifSlcbiAgICAgKi9cbiAgICB2YXIgcmdiMmhzbCQxID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgIGFyZ3MgPSB1bnBhY2skaChhcmdzLCAncmdiJyk7XG4gICAgICAgIHZhciByID0gYXJnc1swXTtcbiAgICAgICAgdmFyIGcgPSBhcmdzWzFdO1xuICAgICAgICB2YXIgYiA9IGFyZ3NbMl07XG4gICAgICAgIHZhciBtaW5fID0gbWluJDEociwgZywgYik7XG4gICAgICAgIHZhciBtYXhfID0gbWF4JDEociwgZywgYik7XG4gICAgICAgIHZhciBkZWx0YSA9IG1heF8gLSBtaW5fO1xuICAgICAgICB2YXIgaCxzLHY7XG4gICAgICAgIHYgPSBtYXhfIC8gMjU1LjA7XG4gICAgICAgIGlmIChtYXhfID09PSAwKSB7XG4gICAgICAgICAgICBoID0gTnVtYmVyLk5hTjtcbiAgICAgICAgICAgIHMgPSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcyA9IGRlbHRhIC8gbWF4XztcbiAgICAgICAgICAgIGlmIChyID09PSBtYXhfKSB7IGggPSAoZyAtIGIpIC8gZGVsdGE7IH1cbiAgICAgICAgICAgIGlmIChnID09PSBtYXhfKSB7IGggPSAyKyhiIC0gcikgLyBkZWx0YTsgfVxuICAgICAgICAgICAgaWYgKGIgPT09IG1heF8pIHsgaCA9IDQrKHIgLSBnKSAvIGRlbHRhOyB9XG4gICAgICAgICAgICBoICo9IDYwO1xuICAgICAgICAgICAgaWYgKGggPCAwKSB7IGggKz0gMzYwOyB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtoLCBzLCB2XVxuICAgIH07XG5cbiAgICB2YXIgcmdiMmhzdiA9IHJnYjJoc2wkMTtcblxuICAgIHZhciB1bnBhY2skaSA9IHV0aWxzLnVucGFjaztcbiAgICB2YXIgZmxvb3IkMSA9IE1hdGguZmxvb3I7XG5cbiAgICB2YXIgaHN2MnJnYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFzc2lnbiwgYXNzaWduJDEsIGFzc2lnbiQyLCBhc3NpZ24kMywgYXNzaWduJDQsIGFzc2lnbiQ1O1xuXG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG4gICAgICAgIGFyZ3MgPSB1bnBhY2skaShhcmdzLCAnaHN2Jyk7XG4gICAgICAgIHZhciBoID0gYXJnc1swXTtcbiAgICAgICAgdmFyIHMgPSBhcmdzWzFdO1xuICAgICAgICB2YXIgdiA9IGFyZ3NbMl07XG4gICAgICAgIHZhciByLGcsYjtcbiAgICAgICAgdiAqPSAyNTU7XG4gICAgICAgIGlmIChzID09PSAwKSB7XG4gICAgICAgICAgICByID0gZyA9IGIgPSB2O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGggPT09IDM2MCkgeyBoID0gMDsgfVxuICAgICAgICAgICAgaWYgKGggPiAzNjApIHsgaCAtPSAzNjA7IH1cbiAgICAgICAgICAgIGlmIChoIDwgMCkgeyBoICs9IDM2MDsgfVxuICAgICAgICAgICAgaCAvPSA2MDtcblxuICAgICAgICAgICAgdmFyIGkgPSBmbG9vciQxKGgpO1xuICAgICAgICAgICAgdmFyIGYgPSBoIC0gaTtcbiAgICAgICAgICAgIHZhciBwID0gdiAqICgxIC0gcyk7XG4gICAgICAgICAgICB2YXIgcSA9IHYgKiAoMSAtIHMgKiBmKTtcbiAgICAgICAgICAgIHZhciB0ID0gdiAqICgxIC0gcyAqICgxIC0gZikpO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKGkpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IChhc3NpZ24gPSBbdiwgdCwgcF0sIHIgPSBhc3NpZ25bMF0sIGcgPSBhc3NpZ25bMV0sIGIgPSBhc3NpZ25bMl0pOyBicmVha1xuICAgICAgICAgICAgICAgIGNhc2UgMTogKGFzc2lnbiQxID0gW3EsIHYsIHBdLCByID0gYXNzaWduJDFbMF0sIGcgPSBhc3NpZ24kMVsxXSwgYiA9IGFzc2lnbiQxWzJdKTsgYnJlYWtcbiAgICAgICAgICAgICAgICBjYXNlIDI6IChhc3NpZ24kMiA9IFtwLCB2LCB0XSwgciA9IGFzc2lnbiQyWzBdLCBnID0gYXNzaWduJDJbMV0sIGIgPSBhc3NpZ24kMlsyXSk7IGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSAzOiAoYXNzaWduJDMgPSBbcCwgcSwgdl0sIHIgPSBhc3NpZ24kM1swXSwgZyA9IGFzc2lnbiQzWzFdLCBiID0gYXNzaWduJDNbMl0pOyBicmVha1xuICAgICAgICAgICAgICAgIGNhc2UgNDogKGFzc2lnbiQ0ID0gW3QsIHAsIHZdLCByID0gYXNzaWduJDRbMF0sIGcgPSBhc3NpZ24kNFsxXSwgYiA9IGFzc2lnbiQ0WzJdKTsgYnJlYWtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IChhc3NpZ24kNSA9IFt2LCBwLCBxXSwgciA9IGFzc2lnbiQ1WzBdLCBnID0gYXNzaWduJDVbMV0sIGIgPSBhc3NpZ24kNVsyXSk7IGJyZWFrXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtyLGcsYixhcmdzLmxlbmd0aCA+IDM/YXJnc1szXToxXTtcbiAgICB9O1xuXG4gICAgdmFyIGhzdjJyZ2JfMSA9IGhzdjJyZ2I7XG5cbiAgICB2YXIgdW5wYWNrJGogPSB1dGlscy51bnBhY2s7XG4gICAgdmFyIHR5cGUkOCA9IHV0aWxzLnR5cGU7XG5cblxuXG5cblxuXG4gICAgQ29sb3JfMS5wcm90b3R5cGUuaHN2ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZ2IyaHN2KHRoaXMuX3JnYik7XG4gICAgfTtcblxuICAgIGNocm9tYV8xLmhzdiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICByZXR1cm4gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseSggQ29sb3JfMSwgWyBudWxsIF0uY29uY2F0KCBhcmdzLCBbJ2hzdiddKSApKTtcbiAgICB9O1xuXG4gICAgaW5wdXQuZm9ybWF0LmhzdiA9IGhzdjJyZ2JfMTtcblxuICAgIGlucHV0LmF1dG9kZXRlY3QucHVzaCh7XG4gICAgICAgIHA6IDIsXG4gICAgICAgIHRlc3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgICAgICBhcmdzID0gdW5wYWNrJGooYXJncywgJ2hzdicpO1xuICAgICAgICAgICAgaWYgKHR5cGUkOChhcmdzKSA9PT0gJ2FycmF5JyAmJiBhcmdzLmxlbmd0aCA9PT0gMykge1xuICAgICAgICAgICAgICAgIHJldHVybiAnaHN2JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIGxhYkNvbnN0YW50cyA9IHtcbiAgICAgICAgLy8gQ29ycmVzcG9uZHMgcm91Z2hseSB0byBSR0IgYnJpZ2h0ZXIvZGFya2VyXG4gICAgICAgIEtuOiAxOCxcblxuICAgICAgICAvLyBENjUgc3RhbmRhcmQgcmVmZXJlbnRcbiAgICAgICAgWG46IDAuOTUwNDcwLFxuICAgICAgICBZbjogMSxcbiAgICAgICAgWm46IDEuMDg4ODMwLFxuXG4gICAgICAgIHQwOiAwLjEzNzkzMTAzNCwgIC8vIDQgLyAyOVxuICAgICAgICB0MTogMC4yMDY4OTY1NTIsICAvLyA2IC8gMjlcbiAgICAgICAgdDI6IDAuMTI4NDE4NTUsICAgLy8gMyAqIHQxICogdDFcbiAgICAgICAgdDM6IDAuMDA4ODU2NDUyLCAgLy8gdDEgKiB0MSAqIHQxXG4gICAgfTtcblxuICAgIHZhciB1bnBhY2skayA9IHV0aWxzLnVucGFjaztcbiAgICB2YXIgcG93ID0gTWF0aC5wb3c7XG5cbiAgICB2YXIgcmdiMmxhYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICB2YXIgcmVmID0gdW5wYWNrJGsoYXJncywgJ3JnYicpO1xuICAgICAgICB2YXIgciA9IHJlZlswXTtcbiAgICAgICAgdmFyIGcgPSByZWZbMV07XG4gICAgICAgIHZhciBiID0gcmVmWzJdO1xuICAgICAgICB2YXIgcmVmJDEgPSByZ2IyeHl6KHIsZyxiKTtcbiAgICAgICAgdmFyIHggPSByZWYkMVswXTtcbiAgICAgICAgdmFyIHkgPSByZWYkMVsxXTtcbiAgICAgICAgdmFyIHogPSByZWYkMVsyXTtcbiAgICAgICAgdmFyIGwgPSAxMTYgKiB5IC0gMTY7XG4gICAgICAgIHJldHVybiBbbCA8IDAgPyAwIDogbCwgNTAwICogKHggLSB5KSwgMjAwICogKHkgLSB6KV07XG4gICAgfTtcblxuICAgIHZhciByZ2JfeHl6ID0gZnVuY3Rpb24gKHIpIHtcbiAgICAgICAgaWYgKChyIC89IDI1NSkgPD0gMC4wNDA0NSkgeyByZXR1cm4gciAvIDEyLjkyOyB9XG4gICAgICAgIHJldHVybiBwb3coKHIgKyAwLjA1NSkgLyAxLjA1NSwgMi40KTtcbiAgICB9O1xuXG4gICAgdmFyIHh5el9sYWIgPSBmdW5jdGlvbiAodCkge1xuICAgICAgICBpZiAodCA+IGxhYkNvbnN0YW50cy50MykgeyByZXR1cm4gcG93KHQsIDEgLyAzKTsgfVxuICAgICAgICByZXR1cm4gdCAvIGxhYkNvbnN0YW50cy50MiArIGxhYkNvbnN0YW50cy50MDtcbiAgICB9O1xuXG4gICAgdmFyIHJnYjJ4eXogPSBmdW5jdGlvbiAocixnLGIpIHtcbiAgICAgICAgciA9IHJnYl94eXoocik7XG4gICAgICAgIGcgPSByZ2JfeHl6KGcpO1xuICAgICAgICBiID0gcmdiX3h5eihiKTtcbiAgICAgICAgdmFyIHggPSB4eXpfbGFiKCgwLjQxMjQ1NjQgKiByICsgMC4zNTc1NzYxICogZyArIDAuMTgwNDM3NSAqIGIpIC8gbGFiQ29uc3RhbnRzLlhuKTtcbiAgICAgICAgdmFyIHkgPSB4eXpfbGFiKCgwLjIxMjY3MjkgKiByICsgMC43MTUxNTIyICogZyArIDAuMDcyMTc1MCAqIGIpIC8gbGFiQ29uc3RhbnRzLlluKTtcbiAgICAgICAgdmFyIHogPSB4eXpfbGFiKCgwLjAxOTMzMzkgKiByICsgMC4xMTkxOTIwICogZyArIDAuOTUwMzA0MSAqIGIpIC8gbGFiQ29uc3RhbnRzLlpuKTtcbiAgICAgICAgcmV0dXJuIFt4LHksel07XG4gICAgfTtcblxuICAgIHZhciByZ2IybGFiXzEgPSByZ2IybGFiO1xuXG4gICAgdmFyIHVucGFjayRsID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciBwb3ckMSA9IE1hdGgucG93O1xuXG4gICAgLypcbiAgICAgKiBMKiBbMC4uMTAwXVxuICAgICAqIGEgWy0xMDAuLjEwMF1cbiAgICAgKiBiIFstMTAwLi4xMDBdXG4gICAgICovXG4gICAgdmFyIGxhYjJyZ2IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgYXJncyA9IHVucGFjayRsKGFyZ3MsICdsYWInKTtcbiAgICAgICAgdmFyIGwgPSBhcmdzWzBdO1xuICAgICAgICB2YXIgYSA9IGFyZ3NbMV07XG4gICAgICAgIHZhciBiID0gYXJnc1syXTtcbiAgICAgICAgdmFyIHgseSx6LCByLGcsYl87XG5cbiAgICAgICAgeSA9IChsICsgMTYpIC8gMTE2O1xuICAgICAgICB4ID0gaXNOYU4oYSkgPyB5IDogeSArIGEgLyA1MDA7XG4gICAgICAgIHogPSBpc05hTihiKSA/IHkgOiB5IC0gYiAvIDIwMDtcblxuICAgICAgICB5ID0gbGFiQ29uc3RhbnRzLlluICogbGFiX3h5eih5KTtcbiAgICAgICAgeCA9IGxhYkNvbnN0YW50cy5YbiAqIGxhYl94eXooeCk7XG4gICAgICAgIHogPSBsYWJDb25zdGFudHMuWm4gKiBsYWJfeHl6KHopO1xuXG4gICAgICAgIHIgPSB4eXpfcmdiKDMuMjQwNDU0MiAqIHggLSAxLjUzNzEzODUgKiB5IC0gMC40OTg1MzE0ICogeik7ICAvLyBENjUgLT4gc1JHQlxuICAgICAgICBnID0geHl6X3JnYigtMC45NjkyNjYwICogeCArIDEuODc2MDEwOCAqIHkgKyAwLjA0MTU1NjAgKiB6KTtcbiAgICAgICAgYl8gPSB4eXpfcmdiKDAuMDU1NjQzNCAqIHggLSAwLjIwNDAyNTkgKiB5ICsgMS4wNTcyMjUyICogeik7XG5cbiAgICAgICAgcmV0dXJuIFtyLGcsYl8sYXJncy5sZW5ndGggPiAzID8gYXJnc1szXSA6IDFdO1xuICAgIH07XG5cbiAgICB2YXIgeHl6X3JnYiA9IGZ1bmN0aW9uIChyKSB7XG4gICAgICAgIHJldHVybiAyNTUgKiAociA8PSAwLjAwMzA0ID8gMTIuOTIgKiByIDogMS4wNTUgKiBwb3ckMShyLCAxIC8gMi40KSAtIDAuMDU1KVxuICAgIH07XG5cbiAgICB2YXIgbGFiX3h5eiA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHJldHVybiB0ID4gbGFiQ29uc3RhbnRzLnQxID8gdCAqIHQgKiB0IDogbGFiQ29uc3RhbnRzLnQyICogKHQgLSBsYWJDb25zdGFudHMudDApXG4gICAgfTtcblxuICAgIHZhciBsYWIycmdiXzEgPSBsYWIycmdiO1xuXG4gICAgdmFyIHVucGFjayRtID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciB0eXBlJDkgPSB1dGlscy50eXBlO1xuXG5cblxuXG5cblxuICAgIENvbG9yXzEucHJvdG90eXBlLmxhYiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmdiMmxhYl8xKHRoaXMuX3JnYik7XG4gICAgfTtcblxuICAgIGNocm9tYV8xLmxhYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICByZXR1cm4gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseSggQ29sb3JfMSwgWyBudWxsIF0uY29uY2F0KCBhcmdzLCBbJ2xhYiddKSApKTtcbiAgICB9O1xuXG4gICAgaW5wdXQuZm9ybWF0LmxhYiA9IGxhYjJyZ2JfMTtcblxuICAgIGlucHV0LmF1dG9kZXRlY3QucHVzaCh7XG4gICAgICAgIHA6IDIsXG4gICAgICAgIHRlc3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgICAgICBhcmdzID0gdW5wYWNrJG0oYXJncywgJ2xhYicpO1xuICAgICAgICAgICAgaWYgKHR5cGUkOShhcmdzKSA9PT0gJ2FycmF5JyAmJiBhcmdzLmxlbmd0aCA9PT0gMykge1xuICAgICAgICAgICAgICAgIHJldHVybiAnbGFiJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIHVucGFjayRuID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciBSQUQyREVHID0gdXRpbHMuUkFEMkRFRztcbiAgICB2YXIgc3FydCQxID0gTWF0aC5zcXJ0O1xuICAgIHZhciBhdGFuMiA9IE1hdGguYXRhbjI7XG4gICAgdmFyIHJvdW5kJDQgPSBNYXRoLnJvdW5kO1xuXG4gICAgdmFyIGxhYjJsY2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgdmFyIHJlZiA9IHVucGFjayRuKGFyZ3MsICdsYWInKTtcbiAgICAgICAgdmFyIGwgPSByZWZbMF07XG4gICAgICAgIHZhciBhID0gcmVmWzFdO1xuICAgICAgICB2YXIgYiA9IHJlZlsyXTtcbiAgICAgICAgdmFyIGMgPSBzcXJ0JDEoYSAqIGEgKyBiICogYik7XG4gICAgICAgIHZhciBoID0gKGF0YW4yKGIsIGEpICogUkFEMkRFRyArIDM2MCkgJSAzNjA7XG4gICAgICAgIGlmIChyb3VuZCQ0KGMqMTAwMDApID09PSAwKSB7IGggPSBOdW1iZXIuTmFOOyB9XG4gICAgICAgIHJldHVybiBbbCwgYywgaF07XG4gICAgfTtcblxuICAgIHZhciBsYWIybGNoXzEgPSBsYWIybGNoO1xuXG4gICAgdmFyIHVucGFjayRvID0gdXRpbHMudW5wYWNrO1xuXG5cblxuICAgIHZhciByZ2IybGNoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgIHZhciByZWYgPSB1bnBhY2skbyhhcmdzLCAncmdiJyk7XG4gICAgICAgIHZhciByID0gcmVmWzBdO1xuICAgICAgICB2YXIgZyA9IHJlZlsxXTtcbiAgICAgICAgdmFyIGIgPSByZWZbMl07XG4gICAgICAgIHZhciByZWYkMSA9IHJnYjJsYWJfMShyLGcsYik7XG4gICAgICAgIHZhciBsID0gcmVmJDFbMF07XG4gICAgICAgIHZhciBhID0gcmVmJDFbMV07XG4gICAgICAgIHZhciBiXyA9IHJlZiQxWzJdO1xuICAgICAgICByZXR1cm4gbGFiMmxjaF8xKGwsYSxiXyk7XG4gICAgfTtcblxuICAgIHZhciByZ2IybGNoXzEgPSByZ2IybGNoO1xuXG4gICAgdmFyIHVucGFjayRwID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciBERUcyUkFEID0gdXRpbHMuREVHMlJBRDtcbiAgICB2YXIgc2luID0gTWF0aC5zaW47XG4gICAgdmFyIGNvcyQxID0gTWF0aC5jb3M7XG5cbiAgICB2YXIgbGNoMmxhYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICAvKlxuICAgICAgICBDb252ZXJ0IGZyb20gYSBxdWFsaXRhdGl2ZSBwYXJhbWV0ZXIgaCBhbmQgYSBxdWFudGl0YXRpdmUgcGFyYW1ldGVyIGwgdG8gYSAyNC1iaXQgcGl4ZWwuXG4gICAgICAgIFRoZXNlIGZvcm11bGFzIHdlcmUgaW52ZW50ZWQgYnkgRGF2aWQgRGFscnltcGxlIHRvIG9idGFpbiBtYXhpbXVtIGNvbnRyYXN0IHdpdGhvdXQgZ29pbmdcbiAgICAgICAgb3V0IG9mIGdhbXV0IGlmIHRoZSBwYXJhbWV0ZXJzIGFyZSBpbiB0aGUgcmFuZ2UgMC0xLlxuXG4gICAgICAgIEEgc2F0dXJhdGlvbiBtdWx0aXBsaWVyIHdhcyBhZGRlZCBieSBHcmVnb3IgQWlzY2hcbiAgICAgICAgKi9cbiAgICAgICAgdmFyIHJlZiA9IHVucGFjayRwKGFyZ3MsICdsY2gnKTtcbiAgICAgICAgdmFyIGwgPSByZWZbMF07XG4gICAgICAgIHZhciBjID0gcmVmWzFdO1xuICAgICAgICB2YXIgaCA9IHJlZlsyXTtcbiAgICAgICAgaWYgKGlzTmFOKGgpKSB7IGggPSAwOyB9XG4gICAgICAgIGggPSBoICogREVHMlJBRDtcbiAgICAgICAgcmV0dXJuIFtsLCBjb3MkMShoKSAqIGMsIHNpbihoKSAqIGNdXG4gICAgfTtcblxuICAgIHZhciBsY2gybGFiXzEgPSBsY2gybGFiO1xuXG4gICAgdmFyIHVucGFjayRxID0gdXRpbHMudW5wYWNrO1xuXG5cblxuICAgIHZhciBsY2gycmdiID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgIGFyZ3MgPSB1bnBhY2skcShhcmdzLCAnbGNoJyk7XG4gICAgICAgIHZhciBsID0gYXJnc1swXTtcbiAgICAgICAgdmFyIGMgPSBhcmdzWzFdO1xuICAgICAgICB2YXIgaCA9IGFyZ3NbMl07XG4gICAgICAgIHZhciByZWYgPSBsY2gybGFiXzEgKGwsYyxoKTtcbiAgICAgICAgdmFyIEwgPSByZWZbMF07XG4gICAgICAgIHZhciBhID0gcmVmWzFdO1xuICAgICAgICB2YXIgYl8gPSByZWZbMl07XG4gICAgICAgIHZhciByZWYkMSA9IGxhYjJyZ2JfMSAoTCxhLGJfKTtcbiAgICAgICAgdmFyIHIgPSByZWYkMVswXTtcbiAgICAgICAgdmFyIGcgPSByZWYkMVsxXTtcbiAgICAgICAgdmFyIGIgPSByZWYkMVsyXTtcbiAgICAgICAgcmV0dXJuIFtyLCBnLCBiLCBhcmdzLmxlbmd0aCA+IDMgPyBhcmdzWzNdIDogMV07XG4gICAgfTtcblxuICAgIHZhciBsY2gycmdiXzEgPSBsY2gycmdiO1xuXG4gICAgdmFyIHVucGFjayRyID0gdXRpbHMudW5wYWNrO1xuXG5cbiAgICB2YXIgaGNsMnJnYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICB2YXIgaGNsID0gdW5wYWNrJHIoYXJncywgJ2hjbCcpLnJldmVyc2UoKTtcbiAgICAgICAgcmV0dXJuIGxjaDJyZ2JfMS5hcHBseSh2b2lkIDAsIGhjbCk7XG4gICAgfTtcblxuICAgIHZhciBoY2wycmdiXzEgPSBoY2wycmdiO1xuXG4gICAgdmFyIHVucGFjayRzID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciB0eXBlJGEgPSB1dGlscy50eXBlO1xuXG5cblxuXG5cblxuICAgIENvbG9yXzEucHJvdG90eXBlLmxjaCA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gcmdiMmxjaF8xKHRoaXMuX3JnYik7IH07XG4gICAgQ29sb3JfMS5wcm90b3R5cGUuaGNsID0gZnVuY3Rpb24oKSB7IHJldHVybiByZ2IybGNoXzEodGhpcy5fcmdiKS5yZXZlcnNlKCk7IH07XG5cbiAgICBjaHJvbWFfMS5sY2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgcmV0dXJuIG5ldyAoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuYXBwbHkoIENvbG9yXzEsIFsgbnVsbCBdLmNvbmNhdCggYXJncywgWydsY2gnXSkgKSk7XG4gICAgfTtcbiAgICBjaHJvbWFfMS5oY2wgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgcmV0dXJuIG5ldyAoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuYXBwbHkoIENvbG9yXzEsIFsgbnVsbCBdLmNvbmNhdCggYXJncywgWydoY2wnXSkgKSk7XG4gICAgfTtcblxuICAgIGlucHV0LmZvcm1hdC5sY2ggPSBsY2gycmdiXzE7XG4gICAgaW5wdXQuZm9ybWF0LmhjbCA9IGhjbDJyZ2JfMTtcblxuICAgIFsnbGNoJywnaGNsJ10uZm9yRWFjaChmdW5jdGlvbiAobSkgeyByZXR1cm4gaW5wdXQuYXV0b2RldGVjdC5wdXNoKHtcbiAgICAgICAgcDogMixcbiAgICAgICAgdGVzdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgICAgIGFyZ3MgPSB1bnBhY2skcyhhcmdzLCBtKTtcbiAgICAgICAgICAgIGlmICh0eXBlJGEoYXJncykgPT09ICdhcnJheScgJiYgYXJncy5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pOyB9KTtcblxuICAgIC8qKlxuICAgIFx0WDExIGNvbG9yIG5hbWVzXG5cbiAgICBcdGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtY29sb3IvI3N2Zy1jb2xvclxuICAgICovXG5cbiAgICB2YXIgdzNjeDExID0ge1xuICAgICAgICBhbGljZWJsdWU6ICcjZjBmOGZmJyxcbiAgICAgICAgYW50aXF1ZXdoaXRlOiAnI2ZhZWJkNycsXG4gICAgICAgIGFxdWE6ICcjMDBmZmZmJyxcbiAgICAgICAgYXF1YW1hcmluZTogJyM3ZmZmZDQnLFxuICAgICAgICBhenVyZTogJyNmMGZmZmYnLFxuICAgICAgICBiZWlnZTogJyNmNWY1ZGMnLFxuICAgICAgICBiaXNxdWU6ICcjZmZlNGM0JyxcbiAgICAgICAgYmxhY2s6ICcjMDAwMDAwJyxcbiAgICAgICAgYmxhbmNoZWRhbG1vbmQ6ICcjZmZlYmNkJyxcbiAgICAgICAgYmx1ZTogJyMwMDAwZmYnLFxuICAgICAgICBibHVldmlvbGV0OiAnIzhhMmJlMicsXG4gICAgICAgIGJyb3duOiAnI2E1MmEyYScsXG4gICAgICAgIGJ1cmx5d29vZDogJyNkZWI4ODcnLFxuICAgICAgICBjYWRldGJsdWU6ICcjNWY5ZWEwJyxcbiAgICAgICAgY2hhcnRyZXVzZTogJyM3ZmZmMDAnLFxuICAgICAgICBjaG9jb2xhdGU6ICcjZDI2OTFlJyxcbiAgICAgICAgY29yYWw6ICcjZmY3ZjUwJyxcbiAgICAgICAgY29ybmZsb3dlcjogJyM2NDk1ZWQnLFxuICAgICAgICBjb3JuZmxvd2VyYmx1ZTogJyM2NDk1ZWQnLFxuICAgICAgICBjb3Juc2lsazogJyNmZmY4ZGMnLFxuICAgICAgICBjcmltc29uOiAnI2RjMTQzYycsXG4gICAgICAgIGN5YW46ICcjMDBmZmZmJyxcbiAgICAgICAgZGFya2JsdWU6ICcjMDAwMDhiJyxcbiAgICAgICAgZGFya2N5YW46ICcjMDA4YjhiJyxcbiAgICAgICAgZGFya2dvbGRlbnJvZDogJyNiODg2MGInLFxuICAgICAgICBkYXJrZ3JheTogJyNhOWE5YTknLFxuICAgICAgICBkYXJrZ3JlZW46ICcjMDA2NDAwJyxcbiAgICAgICAgZGFya2dyZXk6ICcjYTlhOWE5JyxcbiAgICAgICAgZGFya2toYWtpOiAnI2JkYjc2YicsXG4gICAgICAgIGRhcmttYWdlbnRhOiAnIzhiMDA4YicsXG4gICAgICAgIGRhcmtvbGl2ZWdyZWVuOiAnIzU1NmIyZicsXG4gICAgICAgIGRhcmtvcmFuZ2U6ICcjZmY4YzAwJyxcbiAgICAgICAgZGFya29yY2hpZDogJyM5OTMyY2MnLFxuICAgICAgICBkYXJrcmVkOiAnIzhiMDAwMCcsXG4gICAgICAgIGRhcmtzYWxtb246ICcjZTk5NjdhJyxcbiAgICAgICAgZGFya3NlYWdyZWVuOiAnIzhmYmM4ZicsXG4gICAgICAgIGRhcmtzbGF0ZWJsdWU6ICcjNDgzZDhiJyxcbiAgICAgICAgZGFya3NsYXRlZ3JheTogJyMyZjRmNGYnLFxuICAgICAgICBkYXJrc2xhdGVncmV5OiAnIzJmNGY0ZicsXG4gICAgICAgIGRhcmt0dXJxdW9pc2U6ICcjMDBjZWQxJyxcbiAgICAgICAgZGFya3Zpb2xldDogJyM5NDAwZDMnLFxuICAgICAgICBkZWVwcGluazogJyNmZjE0OTMnLFxuICAgICAgICBkZWVwc2t5Ymx1ZTogJyMwMGJmZmYnLFxuICAgICAgICBkaW1ncmF5OiAnIzY5Njk2OScsXG4gICAgICAgIGRpbWdyZXk6ICcjNjk2OTY5JyxcbiAgICAgICAgZG9kZ2VyYmx1ZTogJyMxZTkwZmYnLFxuICAgICAgICBmaXJlYnJpY2s6ICcjYjIyMjIyJyxcbiAgICAgICAgZmxvcmFsd2hpdGU6ICcjZmZmYWYwJyxcbiAgICAgICAgZm9yZXN0Z3JlZW46ICcjMjI4YjIyJyxcbiAgICAgICAgZnVjaHNpYTogJyNmZjAwZmYnLFxuICAgICAgICBnYWluc2Jvcm86ICcjZGNkY2RjJyxcbiAgICAgICAgZ2hvc3R3aGl0ZTogJyNmOGY4ZmYnLFxuICAgICAgICBnb2xkOiAnI2ZmZDcwMCcsXG4gICAgICAgIGdvbGRlbnJvZDogJyNkYWE1MjAnLFxuICAgICAgICBncmF5OiAnIzgwODA4MCcsXG4gICAgICAgIGdyZWVuOiAnIzAwODAwMCcsXG4gICAgICAgIGdyZWVueWVsbG93OiAnI2FkZmYyZicsXG4gICAgICAgIGdyZXk6ICcjODA4MDgwJyxcbiAgICAgICAgaG9uZXlkZXc6ICcjZjBmZmYwJyxcbiAgICAgICAgaG90cGluazogJyNmZjY5YjQnLFxuICAgICAgICBpbmRpYW5yZWQ6ICcjY2Q1YzVjJyxcbiAgICAgICAgaW5kaWdvOiAnIzRiMDA4MicsXG4gICAgICAgIGl2b3J5OiAnI2ZmZmZmMCcsXG4gICAgICAgIGtoYWtpOiAnI2YwZTY4YycsXG4gICAgICAgIGxhc2VybGVtb246ICcjZmZmZjU0JyxcbiAgICAgICAgbGF2ZW5kZXI6ICcjZTZlNmZhJyxcbiAgICAgICAgbGF2ZW5kZXJibHVzaDogJyNmZmYwZjUnLFxuICAgICAgICBsYXduZ3JlZW46ICcjN2NmYzAwJyxcbiAgICAgICAgbGVtb25jaGlmZm9uOiAnI2ZmZmFjZCcsXG4gICAgICAgIGxpZ2h0Ymx1ZTogJyNhZGQ4ZTYnLFxuICAgICAgICBsaWdodGNvcmFsOiAnI2YwODA4MCcsXG4gICAgICAgIGxpZ2h0Y3lhbjogJyNlMGZmZmYnLFxuICAgICAgICBsaWdodGdvbGRlbnJvZDogJyNmYWZhZDInLFxuICAgICAgICBsaWdodGdvbGRlbnJvZHllbGxvdzogJyNmYWZhZDInLFxuICAgICAgICBsaWdodGdyYXk6ICcjZDNkM2QzJyxcbiAgICAgICAgbGlnaHRncmVlbjogJyM5MGVlOTAnLFxuICAgICAgICBsaWdodGdyZXk6ICcjZDNkM2QzJyxcbiAgICAgICAgbGlnaHRwaW5rOiAnI2ZmYjZjMScsXG4gICAgICAgIGxpZ2h0c2FsbW9uOiAnI2ZmYTA3YScsXG4gICAgICAgIGxpZ2h0c2VhZ3JlZW46ICcjMjBiMmFhJyxcbiAgICAgICAgbGlnaHRza3libHVlOiAnIzg3Y2VmYScsXG4gICAgICAgIGxpZ2h0c2xhdGVncmF5OiAnIzc3ODg5OScsXG4gICAgICAgIGxpZ2h0c2xhdGVncmV5OiAnIzc3ODg5OScsXG4gICAgICAgIGxpZ2h0c3RlZWxibHVlOiAnI2IwYzRkZScsXG4gICAgICAgIGxpZ2h0eWVsbG93OiAnI2ZmZmZlMCcsXG4gICAgICAgIGxpbWU6ICcjMDBmZjAwJyxcbiAgICAgICAgbGltZWdyZWVuOiAnIzMyY2QzMicsXG4gICAgICAgIGxpbmVuOiAnI2ZhZjBlNicsXG4gICAgICAgIG1hZ2VudGE6ICcjZmYwMGZmJyxcbiAgICAgICAgbWFyb29uOiAnIzgwMDAwMCcsXG4gICAgICAgIG1hcm9vbjI6ICcjN2YwMDAwJyxcbiAgICAgICAgbWFyb29uMzogJyNiMDMwNjAnLFxuICAgICAgICBtZWRpdW1hcXVhbWFyaW5lOiAnIzY2Y2RhYScsXG4gICAgICAgIG1lZGl1bWJsdWU6ICcjMDAwMGNkJyxcbiAgICAgICAgbWVkaXVtb3JjaGlkOiAnI2JhNTVkMycsXG4gICAgICAgIG1lZGl1bXB1cnBsZTogJyM5MzcwZGInLFxuICAgICAgICBtZWRpdW1zZWFncmVlbjogJyMzY2IzNzEnLFxuICAgICAgICBtZWRpdW1zbGF0ZWJsdWU6ICcjN2I2OGVlJyxcbiAgICAgICAgbWVkaXVtc3ByaW5nZ3JlZW46ICcjMDBmYTlhJyxcbiAgICAgICAgbWVkaXVtdHVycXVvaXNlOiAnIzQ4ZDFjYycsXG4gICAgICAgIG1lZGl1bXZpb2xldHJlZDogJyNjNzE1ODUnLFxuICAgICAgICBtaWRuaWdodGJsdWU6ICcjMTkxOTcwJyxcbiAgICAgICAgbWludGNyZWFtOiAnI2Y1ZmZmYScsXG4gICAgICAgIG1pc3R5cm9zZTogJyNmZmU0ZTEnLFxuICAgICAgICBtb2NjYXNpbjogJyNmZmU0YjUnLFxuICAgICAgICBuYXZham93aGl0ZTogJyNmZmRlYWQnLFxuICAgICAgICBuYXZ5OiAnIzAwMDA4MCcsXG4gICAgICAgIG9sZGxhY2U6ICcjZmRmNWU2JyxcbiAgICAgICAgb2xpdmU6ICcjODA4MDAwJyxcbiAgICAgICAgb2xpdmVkcmFiOiAnIzZiOGUyMycsXG4gICAgICAgIG9yYW5nZTogJyNmZmE1MDAnLFxuICAgICAgICBvcmFuZ2VyZWQ6ICcjZmY0NTAwJyxcbiAgICAgICAgb3JjaGlkOiAnI2RhNzBkNicsXG4gICAgICAgIHBhbGVnb2xkZW5yb2Q6ICcjZWVlOGFhJyxcbiAgICAgICAgcGFsZWdyZWVuOiAnIzk4ZmI5OCcsXG4gICAgICAgIHBhbGV0dXJxdW9pc2U6ICcjYWZlZWVlJyxcbiAgICAgICAgcGFsZXZpb2xldHJlZDogJyNkYjcwOTMnLFxuICAgICAgICBwYXBheWF3aGlwOiAnI2ZmZWZkNScsXG4gICAgICAgIHBlYWNocHVmZjogJyNmZmRhYjknLFxuICAgICAgICBwZXJ1OiAnI2NkODUzZicsXG4gICAgICAgIHBpbms6ICcjZmZjMGNiJyxcbiAgICAgICAgcGx1bTogJyNkZGEwZGQnLFxuICAgICAgICBwb3dkZXJibHVlOiAnI2IwZTBlNicsXG4gICAgICAgIHB1cnBsZTogJyM4MDAwODAnLFxuICAgICAgICBwdXJwbGUyOiAnIzdmMDA3ZicsXG4gICAgICAgIHB1cnBsZTM6ICcjYTAyMGYwJyxcbiAgICAgICAgcmViZWNjYXB1cnBsZTogJyM2NjMzOTknLFxuICAgICAgICByZWQ6ICcjZmYwMDAwJyxcbiAgICAgICAgcm9zeWJyb3duOiAnI2JjOGY4ZicsXG4gICAgICAgIHJveWFsYmx1ZTogJyM0MTY5ZTEnLFxuICAgICAgICBzYWRkbGVicm93bjogJyM4YjQ1MTMnLFxuICAgICAgICBzYWxtb246ICcjZmE4MDcyJyxcbiAgICAgICAgc2FuZHlicm93bjogJyNmNGE0NjAnLFxuICAgICAgICBzZWFncmVlbjogJyMyZThiNTcnLFxuICAgICAgICBzZWFzaGVsbDogJyNmZmY1ZWUnLFxuICAgICAgICBzaWVubmE6ICcjYTA1MjJkJyxcbiAgICAgICAgc2lsdmVyOiAnI2MwYzBjMCcsXG4gICAgICAgIHNreWJsdWU6ICcjODdjZWViJyxcbiAgICAgICAgc2xhdGVibHVlOiAnIzZhNWFjZCcsXG4gICAgICAgIHNsYXRlZ3JheTogJyM3MDgwOTAnLFxuICAgICAgICBzbGF0ZWdyZXk6ICcjNzA4MDkwJyxcbiAgICAgICAgc25vdzogJyNmZmZhZmEnLFxuICAgICAgICBzcHJpbmdncmVlbjogJyMwMGZmN2YnLFxuICAgICAgICBzdGVlbGJsdWU6ICcjNDY4MmI0JyxcbiAgICAgICAgdGFuOiAnI2QyYjQ4YycsXG4gICAgICAgIHRlYWw6ICcjMDA4MDgwJyxcbiAgICAgICAgdGhpc3RsZTogJyNkOGJmZDgnLFxuICAgICAgICB0b21hdG86ICcjZmY2MzQ3JyxcbiAgICAgICAgdHVycXVvaXNlOiAnIzQwZTBkMCcsXG4gICAgICAgIHZpb2xldDogJyNlZTgyZWUnLFxuICAgICAgICB3aGVhdDogJyNmNWRlYjMnLFxuICAgICAgICB3aGl0ZTogJyNmZmZmZmYnLFxuICAgICAgICB3aGl0ZXNtb2tlOiAnI2Y1ZjVmNScsXG4gICAgICAgIHllbGxvdzogJyNmZmZmMDAnLFxuICAgICAgICB5ZWxsb3dncmVlbjogJyM5YWNkMzInXG4gICAgfTtcblxuICAgIHZhciB3M2N4MTFfMSA9IHczY3gxMTtcblxuICAgIHZhciB0eXBlJGIgPSB1dGlscy50eXBlO1xuXG5cblxuXG5cbiAgICBDb2xvcl8xLnByb3RvdHlwZS5uYW1lID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBoZXggPSByZ2IyaGV4XzEodGhpcy5fcmdiLCAncmdiJyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsaXN0ID0gT2JqZWN0LmtleXModzNjeDExXzEpOyBpIDwgbGlzdC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgdmFyIG4gPSBsaXN0W2ldO1xuXG4gICAgICAgICAgICBpZiAodzNjeDExXzFbbl0gPT09IGhleCkgeyByZXR1cm4gbi50b0xvd2VyQ2FzZSgpOyB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhleDtcbiAgICB9O1xuXG4gICAgaW5wdXQuZm9ybWF0Lm5hbWVkID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgbmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKHczY3gxMV8xW25hbWVdKSB7IHJldHVybiBoZXgycmdiXzEodzNjeDExXzFbbmFtZV0pOyB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBjb2xvciBuYW1lOiAnK25hbWUpO1xuICAgIH07XG5cbiAgICBpbnB1dC5hdXRvZGV0ZWN0LnB1c2goe1xuICAgICAgICBwOiA1LFxuICAgICAgICB0ZXN0OiBmdW5jdGlvbiAoaCkge1xuICAgICAgICAgICAgdmFyIHJlc3QgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICB3aGlsZSAoIGxlbi0tID4gMCApIHJlc3RbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gKyAxIF07XG5cbiAgICAgICAgICAgIGlmICghcmVzdC5sZW5ndGggJiYgdHlwZSRiKGgpID09PSAnc3RyaW5nJyAmJiB3M2N4MTFfMVtoLnRvTG93ZXJDYXNlKCldKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICduYW1lZCc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHZhciB1bnBhY2skdCA9IHV0aWxzLnVucGFjaztcblxuICAgIHZhciByZ2IybnVtID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgIHZhciByZWYgPSB1bnBhY2skdChhcmdzLCAncmdiJyk7XG4gICAgICAgIHZhciByID0gcmVmWzBdO1xuICAgICAgICB2YXIgZyA9IHJlZlsxXTtcbiAgICAgICAgdmFyIGIgPSByZWZbMl07XG4gICAgICAgIHJldHVybiAociA8PCAxNikgKyAoZyA8PCA4KSArIGI7XG4gICAgfTtcblxuICAgIHZhciByZ2IybnVtXzEgPSByZ2IybnVtO1xuXG4gICAgdmFyIHR5cGUkYyA9IHV0aWxzLnR5cGU7XG5cbiAgICB2YXIgbnVtMnJnYiA9IGZ1bmN0aW9uIChudW0pIHtcbiAgICAgICAgaWYgKHR5cGUkYyhudW0pID09IFwibnVtYmVyXCIgJiYgbnVtID49IDAgJiYgbnVtIDw9IDB4RkZGRkZGKSB7XG4gICAgICAgICAgICB2YXIgciA9IG51bSA+PiAxNjtcbiAgICAgICAgICAgIHZhciBnID0gKG51bSA+PiA4KSAmIDB4RkY7XG4gICAgICAgICAgICB2YXIgYiA9IG51bSAmIDB4RkY7XG4gICAgICAgICAgICByZXR1cm4gW3IsZyxiLDFdO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInVua25vd24gbnVtIGNvbG9yOiBcIitudW0pO1xuICAgIH07XG5cbiAgICB2YXIgbnVtMnJnYl8xID0gbnVtMnJnYjtcblxuICAgIHZhciB0eXBlJGQgPSB1dGlscy50eXBlO1xuXG5cblxuICAgIENvbG9yXzEucHJvdG90eXBlLm51bSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmdiMm51bV8xKHRoaXMuX3JnYik7XG4gICAgfTtcblxuICAgIGNocm9tYV8xLm51bSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICByZXR1cm4gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseSggQ29sb3JfMSwgWyBudWxsIF0uY29uY2F0KCBhcmdzLCBbJ251bSddKSApKTtcbiAgICB9O1xuXG4gICAgaW5wdXQuZm9ybWF0Lm51bSA9IG51bTJyZ2JfMTtcblxuICAgIGlucHV0LmF1dG9kZXRlY3QucHVzaCh7XG4gICAgICAgIHA6IDUsXG4gICAgICAgIHRlc3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgICAgICBpZiAoYXJncy5sZW5ndGggPT09IDEgJiYgdHlwZSRkKGFyZ3NbMF0pID09PSAnbnVtYmVyJyAmJiBhcmdzWzBdID49IDAgJiYgYXJnc1swXSA8PSAweEZGRkZGRikge1xuICAgICAgICAgICAgICAgIHJldHVybiAnbnVtJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIHVucGFjayR1ID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciB0eXBlJGUgPSB1dGlscy50eXBlO1xuICAgIHZhciByb3VuZCQ1ID0gTWF0aC5yb3VuZDtcblxuICAgIENvbG9yXzEucHJvdG90eXBlLnJnYiA9IGZ1bmN0aW9uKHJuZCkge1xuICAgICAgICBpZiAoIHJuZCA9PT0gdm9pZCAwICkgcm5kPXRydWU7XG5cbiAgICAgICAgaWYgKHJuZCA9PT0gZmFsc2UpIHsgcmV0dXJuIHRoaXMuX3JnYi5zbGljZSgwLDMpOyB9XG4gICAgICAgIHJldHVybiB0aGlzLl9yZ2Iuc2xpY2UoMCwzKS5tYXAocm91bmQkNSk7XG4gICAgfTtcblxuICAgIENvbG9yXzEucHJvdG90eXBlLnJnYmEgPSBmdW5jdGlvbihybmQpIHtcbiAgICAgICAgaWYgKCBybmQgPT09IHZvaWQgMCApIHJuZD10cnVlO1xuXG4gICAgICAgIHJldHVybiB0aGlzLl9yZ2Iuc2xpY2UoMCw0KS5tYXAoZnVuY3Rpb24gKHYsaSkge1xuICAgICAgICAgICAgcmV0dXJuIGk8MyA/IChybmQgPT09IGZhbHNlID8gdiA6IHJvdW5kJDUodikpIDogdjtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGNocm9tYV8xLnJnYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICByZXR1cm4gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseSggQ29sb3JfMSwgWyBudWxsIF0uY29uY2F0KCBhcmdzLCBbJ3JnYiddKSApKTtcbiAgICB9O1xuXG4gICAgaW5wdXQuZm9ybWF0LnJnYiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICB2YXIgcmdiYSA9IHVucGFjayR1KGFyZ3MsICdyZ2JhJyk7XG4gICAgICAgIGlmIChyZ2JhWzNdID09PSB1bmRlZmluZWQpIHsgcmdiYVszXSA9IDE7IH1cbiAgICAgICAgcmV0dXJuIHJnYmE7XG4gICAgfTtcblxuICAgIGlucHV0LmF1dG9kZXRlY3QucHVzaCh7XG4gICAgICAgIHA6IDMsXG4gICAgICAgIHRlc3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAgICAgICBhcmdzID0gdW5wYWNrJHUoYXJncywgJ3JnYmEnKTtcbiAgICAgICAgICAgIGlmICh0eXBlJGUoYXJncykgPT09ICdhcnJheScgJiYgKGFyZ3MubGVuZ3RoID09PSAzIHx8XG4gICAgICAgICAgICAgICAgYXJncy5sZW5ndGggPT09IDQgJiYgdHlwZSRlKGFyZ3NbM10pID09ICdudW1iZXInICYmIGFyZ3NbM10gPj0gMCAmJiBhcmdzWzNdIDw9IDEpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdyZ2InO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICAvKlxuICAgICAqIEJhc2VkIG9uIGltcGxlbWVudGF0aW9uIGJ5IE5laWwgQmFydGxldHRcbiAgICAgKiBodHRwczovL2dpdGh1Yi5jb20vbmVpbGJhcnRsZXR0L2NvbG9yLXRlbXBlcmF0dXJlXG4gICAgICovXG5cbiAgICB2YXIgbG9nID0gTWF0aC5sb2c7XG5cbiAgICB2YXIgdGVtcGVyYXR1cmUycmdiID0gZnVuY3Rpb24gKGtlbHZpbikge1xuICAgICAgICB2YXIgdGVtcCA9IGtlbHZpbiAvIDEwMDtcbiAgICAgICAgdmFyIHIsZyxiO1xuICAgICAgICBpZiAodGVtcCA8IDY2KSB7XG4gICAgICAgICAgICByID0gMjU1O1xuICAgICAgICAgICAgZyA9IC0xNTUuMjU0ODU1NjI3MDkxNzkgLSAwLjQ0NTk2OTUwNDY5NTc5MTMzICogKGcgPSB0ZW1wLTIpICsgMTA0LjQ5MjE2MTk5MzkzODg4ICogbG9nKGcpO1xuICAgICAgICAgICAgYiA9IHRlbXAgPCAyMCA/IDAgOiAtMjU0Ljc2OTM1MTg0MTIwOTAyICsgMC44Mjc0MDk2MDY0MDA3Mzk1ICogKGIgPSB0ZW1wLTEwKSArIDExNS42Nzk5NDQwMTA2NjE0NyAqIGxvZyhiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHIgPSAzNTEuOTc2OTA1NjY4MDU2OTMgKyAwLjExNDIwNjQ1Mzc4NDE2NSAqIChyID0gdGVtcC01NSkgLSA0MC4yNTM2NjMwOTMzMjEyNyAqIGxvZyhyKTtcbiAgICAgICAgICAgIGcgPSAzMjUuNDQ5NDEyNTcxMTk3NCArIDAuMDc5NDM0NTY1MzY2NjIzNDIgKiAoZyA9IHRlbXAtNTApIC0gMjguMDg1Mjk2MzUwNzk1NyAqIGxvZyhnKTtcbiAgICAgICAgICAgIGIgPSAyNTU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtyLGcsYiwxXTtcbiAgICB9O1xuXG4gICAgdmFyIHRlbXBlcmF0dXJlMnJnYl8xID0gdGVtcGVyYXR1cmUycmdiO1xuXG4gICAgLypcbiAgICAgKiBCYXNlZCBvbiBpbXBsZW1lbnRhdGlvbiBieSBOZWlsIEJhcnRsZXR0XG4gICAgICogaHR0cHM6Ly9naXRodWIuY29tL25laWxiYXJ0bGV0dC9jb2xvci10ZW1wZXJhdHVyZVxuICAgICAqKi9cblxuXG4gICAgdmFyIHVucGFjayR2ID0gdXRpbHMudW5wYWNrO1xuICAgIHZhciByb3VuZCQ2ID0gTWF0aC5yb3VuZDtcblxuICAgIHZhciByZ2IydGVtcGVyYXR1cmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgdmFyIHJnYiA9IHVucGFjayR2KGFyZ3MsICdyZ2InKTtcbiAgICAgICAgdmFyIHIgPSByZ2JbMF0sIGIgPSByZ2JbMl07XG4gICAgICAgIHZhciBtaW5UZW1wID0gMTAwMDtcbiAgICAgICAgdmFyIG1heFRlbXAgPSA0MDAwMDtcbiAgICAgICAgdmFyIGVwcyA9IDAuNDtcbiAgICAgICAgdmFyIHRlbXA7XG4gICAgICAgIHdoaWxlIChtYXhUZW1wIC0gbWluVGVtcCA+IGVwcykge1xuICAgICAgICAgICAgdGVtcCA9IChtYXhUZW1wICsgbWluVGVtcCkgKiAwLjU7XG4gICAgICAgICAgICB2YXIgcmdiJDEgPSB0ZW1wZXJhdHVyZTJyZ2JfMSh0ZW1wKTtcbiAgICAgICAgICAgIGlmICgocmdiJDFbMl0gLyByZ2IkMVswXSkgPj0gKGIgLyByKSkge1xuICAgICAgICAgICAgICAgIG1heFRlbXAgPSB0ZW1wO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtaW5UZW1wID0gdGVtcDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcm91bmQkNih0ZW1wKTtcbiAgICB9O1xuXG4gICAgdmFyIHJnYjJ0ZW1wZXJhdHVyZV8xID0gcmdiMnRlbXBlcmF0dXJlO1xuXG4gICAgQ29sb3JfMS5wcm90b3R5cGUudGVtcCA9XG4gICAgQ29sb3JfMS5wcm90b3R5cGUua2VsdmluID1cbiAgICBDb2xvcl8xLnByb3RvdHlwZS50ZW1wZXJhdHVyZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmdiMnRlbXBlcmF0dXJlXzEodGhpcy5fcmdiKTtcbiAgICB9O1xuXG4gICAgY2hyb21hXzEudGVtcCA9XG4gICAgY2hyb21hXzEua2VsdmluID1cbiAgICBjaHJvbWFfMS50ZW1wZXJhdHVyZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgICByZXR1cm4gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseSggQ29sb3JfMSwgWyBudWxsIF0uY29uY2F0KCBhcmdzLCBbJ3RlbXAnXSkgKSk7XG4gICAgfTtcblxuICAgIGlucHV0LmZvcm1hdC50ZW1wID1cbiAgICBpbnB1dC5mb3JtYXQua2VsdmluID1cbiAgICBpbnB1dC5mb3JtYXQudGVtcGVyYXR1cmUgPSB0ZW1wZXJhdHVyZTJyZ2JfMTtcblxuICAgIHZhciB0eXBlJGYgPSB1dGlscy50eXBlO1xuXG4gICAgQ29sb3JfMS5wcm90b3R5cGUuYWxwaGEgPSBmdW5jdGlvbihhLCBtdXRhdGUpIHtcbiAgICAgICAgaWYgKCBtdXRhdGUgPT09IHZvaWQgMCApIG11dGF0ZT1mYWxzZTtcblxuICAgICAgICBpZiAoYSAhPT0gdW5kZWZpbmVkICYmIHR5cGUkZihhKSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIGlmIChtdXRhdGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9yZ2JbM10gPSBhO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBDb2xvcl8xKFt0aGlzLl9yZ2JbMF0sIHRoaXMuX3JnYlsxXSwgdGhpcy5fcmdiWzJdLCBhXSwgJ3JnYicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9yZ2JbM107XG4gICAgfTtcblxuICAgIENvbG9yXzEucHJvdG90eXBlLmNsaXBwZWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JnYi5fY2xpcHBlZCB8fCBmYWxzZTtcbiAgICB9O1xuXG4gICAgQ29sb3JfMS5wcm90b3R5cGUuZGFya2VuID0gZnVuY3Rpb24oYW1vdW50KSB7XG4gICAgXHRpZiAoIGFtb3VudCA9PT0gdm9pZCAwICkgYW1vdW50PTE7XG5cbiAgICBcdHZhciBtZSA9IHRoaXM7XG4gICAgXHR2YXIgbGFiID0gbWUubGFiKCk7XG4gICAgXHRsYWJbMF0gLT0gbGFiQ29uc3RhbnRzLktuICogYW1vdW50O1xuICAgIFx0cmV0dXJuIG5ldyBDb2xvcl8xKGxhYiwgJ2xhYicpLmFscGhhKG1lLmFscGhhKCksIHRydWUpO1xuICAgIH07XG5cbiAgICBDb2xvcl8xLnByb3RvdHlwZS5icmlnaHRlbiA9IGZ1bmN0aW9uKGFtb3VudCkge1xuICAgIFx0aWYgKCBhbW91bnQgPT09IHZvaWQgMCApIGFtb3VudD0xO1xuXG4gICAgXHRyZXR1cm4gdGhpcy5kYXJrZW4oLWFtb3VudCk7XG4gICAgfTtcblxuICAgIENvbG9yXzEucHJvdG90eXBlLmRhcmtlciA9IENvbG9yXzEucHJvdG90eXBlLmRhcmtlbjtcbiAgICBDb2xvcl8xLnByb3RvdHlwZS5icmlnaHRlciA9IENvbG9yXzEucHJvdG90eXBlLmJyaWdodGVuO1xuXG4gICAgQ29sb3JfMS5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24obWMpIHtcbiAgICAgICAgdmFyIHJlZiA9IG1jLnNwbGl0KCcuJyk7XG4gICAgICAgIHZhciBtb2RlID0gcmVmWzBdO1xuICAgICAgICB2YXIgY2hhbm5lbCA9IHJlZlsxXTtcbiAgICAgICAgdmFyIHNyYyA9IHRoaXNbbW9kZV0oKTtcbiAgICAgICAgaWYgKGNoYW5uZWwpIHtcbiAgICAgICAgICAgIHZhciBpID0gbW9kZS5pbmRleE9mKGNoYW5uZWwpO1xuICAgICAgICAgICAgaWYgKGkgPiAtMSkgeyByZXR1cm4gc3JjW2ldOyB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKFwidW5rbm93biBjaGFubmVsIFwiICsgY2hhbm5lbCArIFwiIGluIG1vZGUgXCIgKyBtb2RlKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gc3JjO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHZhciB0eXBlJGcgPSB1dGlscy50eXBlO1xuICAgIHZhciBwb3ckMiA9IE1hdGgucG93O1xuXG4gICAgdmFyIEVQUyA9IDFlLTc7XG4gICAgdmFyIE1BWF9JVEVSID0gMjA7XG5cbiAgICBDb2xvcl8xLnByb3RvdHlwZS5sdW1pbmFuY2UgPSBmdW5jdGlvbihsdW0pIHtcbiAgICAgICAgaWYgKGx1bSAhPT0gdW5kZWZpbmVkICYmIHR5cGUkZyhsdW0pID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgaWYgKGx1bSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIC8vIHJldHVybiBwdXJlIGJsYWNrXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBDb2xvcl8xKFswLDAsMCx0aGlzLl9yZ2JbM11dLCAncmdiJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobHVtID09PSAxKSB7XG4gICAgICAgICAgICAgICAgLy8gcmV0dXJuIHB1cmUgd2hpdGVcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IENvbG9yXzEoWzI1NSwyNTUsMjU1LHRoaXMuX3JnYlszXV0sICdyZ2InKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGNvbXB1dGUgbmV3IGNvbG9yIHVzaW5nLi4uXG4gICAgICAgICAgICB2YXIgY3VyX2x1bSA9IHRoaXMubHVtaW5hbmNlKCk7XG4gICAgICAgICAgICB2YXIgbW9kZSA9ICdyZ2InO1xuICAgICAgICAgICAgdmFyIG1heF9pdGVyID0gTUFYX0lURVI7XG5cbiAgICAgICAgICAgIHZhciB0ZXN0ID0gZnVuY3Rpb24gKGxvdywgaGlnaCkge1xuICAgICAgICAgICAgICAgIHZhciBtaWQgPSBsb3cuaW50ZXJwb2xhdGUoaGlnaCwgMC41LCBtb2RlKTtcbiAgICAgICAgICAgICAgICB2YXIgbG0gPSBtaWQubHVtaW5hbmNlKCk7XG4gICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKGx1bSAtIGxtKSA8IEVQUyB8fCAhbWF4X2l0ZXItLSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBjbG9zZSBlbm91Z2hcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1pZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxtID4gbHVtID8gdGVzdChsb3csIG1pZCkgOiB0ZXN0KG1pZCwgaGlnaCk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICB2YXIgcmdiID0gKGN1cl9sdW0gPiBsdW0gPyB0ZXN0KG5ldyBDb2xvcl8xKFswLDAsMF0pLCB0aGlzKSA6IHRlc3QodGhpcywgbmV3IENvbG9yXzEoWzI1NSwyNTUsMjU1XSkpKS5yZ2IoKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQ29sb3JfMShyZ2IuY29uY2F0KCBbdGhpcy5fcmdiWzNdXSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZ2IybHVtaW5hbmNlLmFwcGx5KHZvaWQgMCwgKHRoaXMuX3JnYikuc2xpY2UoMCwzKSk7XG4gICAgfTtcblxuXG4gICAgdmFyIHJnYjJsdW1pbmFuY2UgPSBmdW5jdGlvbiAocixnLGIpIHtcbiAgICAgICAgLy8gcmVsYXRpdmUgbHVtaW5hbmNlXG4gICAgICAgIC8vIHNlZSBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDA4L1JFQy1XQ0FHMjAtMjAwODEyMTEvI3JlbGF0aXZlbHVtaW5hbmNlZGVmXG4gICAgICAgIHIgPSBsdW1pbmFuY2VfeChyKTtcbiAgICAgICAgZyA9IGx1bWluYW5jZV94KGcpO1xuICAgICAgICBiID0gbHVtaW5hbmNlX3goYik7XG4gICAgICAgIHJldHVybiAwLjIxMjYgKiByICsgMC43MTUyICogZyArIDAuMDcyMiAqIGI7XG4gICAgfTtcblxuICAgIHZhciBsdW1pbmFuY2VfeCA9IGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHggLz0gMjU1O1xuICAgICAgICByZXR1cm4geCA8PSAwLjAzOTI4ID8geC8xMi45MiA6IHBvdyQyKCh4KzAuMDU1KS8xLjA1NSwgMi40KTtcbiAgICB9O1xuXG4gICAgdmFyIGludGVycG9sYXRvciA9IHt9O1xuXG4gICAgdmFyIHR5cGUkaCA9IHV0aWxzLnR5cGU7XG5cblxuICAgIHZhciBtaXggPSBmdW5jdGlvbiAoY29sMSwgY29sMiwgZikge1xuICAgICAgICBpZiAoIGYgPT09IHZvaWQgMCApIGY9MC41O1xuICAgICAgICB2YXIgcmVzdCA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoIC0gMztcbiAgICAgICAgd2hpbGUgKCBsZW4tLSA+IDAgKSByZXN0WyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuICsgMyBdO1xuXG4gICAgICAgIHZhciBtb2RlID0gcmVzdFswXSB8fCAnbHJnYic7XG4gICAgICAgIGlmICghaW50ZXJwb2xhdG9yW21vZGVdICYmICFyZXN0Lmxlbmd0aCkge1xuICAgICAgICAgICAgLy8gZmFsbCBiYWNrIHRvIHRoZSBmaXJzdCBzdXBwb3J0ZWQgbW9kZVxuICAgICAgICAgICAgbW9kZSA9IE9iamVjdC5rZXlzKGludGVycG9sYXRvcilbMF07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpbnRlcnBvbGF0b3JbbW9kZV0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigoXCJpbnRlcnBvbGF0aW9uIG1vZGUgXCIgKyBtb2RlICsgXCIgaXMgbm90IGRlZmluZWRcIikpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlJGgoY29sMSkgIT09ICdvYmplY3QnKSB7IGNvbDEgPSBuZXcgQ29sb3JfMShjb2wxKTsgfVxuICAgICAgICBpZiAodHlwZSRoKGNvbDIpICE9PSAnb2JqZWN0JykgeyBjb2wyID0gbmV3IENvbG9yXzEoY29sMik7IH1cbiAgICAgICAgcmV0dXJuIGludGVycG9sYXRvclttb2RlXShjb2wxLCBjb2wyLCBmKVxuICAgICAgICAgICAgLmFscGhhKGNvbDEuYWxwaGEoKSArIGYgKiAoY29sMi5hbHBoYSgpIC0gY29sMS5hbHBoYSgpKSk7XG4gICAgfTtcblxuICAgIENvbG9yXzEucHJvdG90eXBlLm1peCA9XG4gICAgQ29sb3JfMS5wcm90b3R5cGUuaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihjb2wyLCBmKSB7XG4gICAgXHRpZiAoIGYgPT09IHZvaWQgMCApIGY9MC41O1xuICAgIFx0dmFyIHJlc3QgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aCAtIDI7XG4gICAgXHR3aGlsZSAoIGxlbi0tID4gMCApIHJlc3RbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gKyAyIF07XG5cbiAgICBcdHJldHVybiBtaXguYXBwbHkodm9pZCAwLCBbIHRoaXMsIGNvbDIsIGYgXS5jb25jYXQoIHJlc3QgKSk7XG4gICAgfTtcblxuICAgIENvbG9yXzEucHJvdG90eXBlLnByZW11bHRpcGx5ID0gZnVuY3Rpb24obXV0YXRlKSB7XG4gICAgXHRpZiAoIG11dGF0ZSA9PT0gdm9pZCAwICkgbXV0YXRlPWZhbHNlO1xuXG4gICAgXHR2YXIgcmdiID0gdGhpcy5fcmdiO1xuICAgIFx0dmFyIGEgPSByZ2JbM107XG4gICAgXHRpZiAobXV0YXRlKSB7XG4gICAgXHRcdHRoaXMuX3JnYiA9IFtyZ2JbMF0qYSwgcmdiWzFdKmEsIHJnYlsyXSphLCBhXTtcbiAgICBcdFx0cmV0dXJuIHRoaXM7XG4gICAgXHR9IGVsc2Uge1xuICAgIFx0XHRyZXR1cm4gbmV3IENvbG9yXzEoW3JnYlswXSphLCByZ2JbMV0qYSwgcmdiWzJdKmEsIGFdLCAncmdiJyk7XG4gICAgXHR9XG4gICAgfTtcblxuICAgIENvbG9yXzEucHJvdG90eXBlLnNhdHVyYXRlID0gZnVuY3Rpb24oYW1vdW50KSB7XG4gICAgXHRpZiAoIGFtb3VudCA9PT0gdm9pZCAwICkgYW1vdW50PTE7XG5cbiAgICBcdHZhciBtZSA9IHRoaXM7XG4gICAgXHR2YXIgbGNoID0gbWUubGNoKCk7XG4gICAgXHRsY2hbMV0gKz0gbGFiQ29uc3RhbnRzLktuICogYW1vdW50O1xuICAgIFx0aWYgKGxjaFsxXSA8IDApIHsgbGNoWzFdID0gMDsgfVxuICAgIFx0cmV0dXJuIG5ldyBDb2xvcl8xKGxjaCwgJ2xjaCcpLmFscGhhKG1lLmFscGhhKCksIHRydWUpO1xuICAgIH07XG5cbiAgICBDb2xvcl8xLnByb3RvdHlwZS5kZXNhdHVyYXRlID0gZnVuY3Rpb24oYW1vdW50KSB7XG4gICAgXHRpZiAoIGFtb3VudCA9PT0gdm9pZCAwICkgYW1vdW50PTE7XG5cbiAgICBcdHJldHVybiB0aGlzLnNhdHVyYXRlKC1hbW91bnQpO1xuICAgIH07XG5cbiAgICB2YXIgdHlwZSRpID0gdXRpbHMudHlwZTtcblxuICAgIENvbG9yXzEucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKG1jLCB2YWx1ZSwgbXV0YXRlKSB7XG4gICAgICAgIGlmICggbXV0YXRlID09PSB2b2lkIDAgKSBtdXRhdGU9ZmFsc2U7XG5cbiAgICAgICAgdmFyIHJlZiA9IG1jLnNwbGl0KCcuJyk7XG4gICAgICAgIHZhciBtb2RlID0gcmVmWzBdO1xuICAgICAgICB2YXIgY2hhbm5lbCA9IHJlZlsxXTtcbiAgICAgICAgdmFyIHNyYyA9IHRoaXNbbW9kZV0oKTtcbiAgICAgICAgaWYgKGNoYW5uZWwpIHtcbiAgICAgICAgICAgIHZhciBpID0gbW9kZS5pbmRleE9mKGNoYW5uZWwpO1xuICAgICAgICAgICAgaWYgKGkgPiAtMSkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlJGkodmFsdWUpID09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCh2YWx1ZS5jaGFyQXQoMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJysnOiBzcmNbaV0gKz0gK3ZhbHVlOyBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJy0nOiBzcmNbaV0gKz0gK3ZhbHVlOyBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJyonOiBzcmNbaV0gKj0gKyh2YWx1ZS5zdWJzdHIoMSkpOyBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJy8nOiBzcmNbaV0gLz0gKyh2YWx1ZS5zdWJzdHIoMSkpOyBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHNyY1tpXSA9ICt2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZSRpKHZhbHVlKSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgc3JjW2ldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidW5zdXBwb3J0ZWQgdmFsdWUgZm9yIENvbG9yLnNldFwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIG91dCA9IG5ldyBDb2xvcl8xKHNyYywgbW9kZSk7XG4gICAgICAgICAgICAgICAgaWYgKG11dGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9yZ2IgPSBvdXQuX3JnYjtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBvdXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKFwidW5rbm93biBjaGFubmVsIFwiICsgY2hhbm5lbCArIFwiIGluIG1vZGUgXCIgKyBtb2RlKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gc3JjO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHZhciByZ2IkMSA9IGZ1bmN0aW9uIChjb2wxLCBjb2wyLCBmKSB7XG4gICAgICAgIHZhciB4eXowID0gY29sMS5fcmdiO1xuICAgICAgICB2YXIgeHl6MSA9IGNvbDIuX3JnYjtcbiAgICAgICAgcmV0dXJuIG5ldyBDb2xvcl8xKFxuICAgICAgICAgICAgeHl6MFswXSArIGYgKiAoeHl6MVswXS14eXowWzBdKSxcbiAgICAgICAgICAgIHh5ejBbMV0gKyBmICogKHh5ejFbMV0teHl6MFsxXSksXG4gICAgICAgICAgICB4eXowWzJdICsgZiAqICh4eXoxWzJdLXh5ejBbMl0pLFxuICAgICAgICAgICAgJ3JnYidcbiAgICAgICAgKVxuICAgIH07XG5cbiAgICAvLyByZWdpc3RlciBpbnRlcnBvbGF0b3JcbiAgICBpbnRlcnBvbGF0b3IucmdiID0gcmdiJDE7XG5cbiAgICB2YXIgc3FydCQyID0gTWF0aC5zcXJ0O1xuICAgIHZhciBwb3ckMyA9IE1hdGgucG93O1xuXG4gICAgdmFyIGxyZ2IgPSBmdW5jdGlvbiAoY29sMSwgY29sMiwgZikge1xuICAgICAgICB2YXIgcmVmID0gY29sMS5fcmdiO1xuICAgICAgICB2YXIgeDEgPSByZWZbMF07XG4gICAgICAgIHZhciB5MSA9IHJlZlsxXTtcbiAgICAgICAgdmFyIHoxID0gcmVmWzJdO1xuICAgICAgICB2YXIgcmVmJDEgPSBjb2wyLl9yZ2I7XG4gICAgICAgIHZhciB4MiA9IHJlZiQxWzBdO1xuICAgICAgICB2YXIgeTIgPSByZWYkMVsxXTtcbiAgICAgICAgdmFyIHoyID0gcmVmJDFbMl07XG4gICAgICAgIHJldHVybiBuZXcgQ29sb3JfMShcbiAgICAgICAgICAgIHNxcnQkMihwb3ckMyh4MSwyKSAqICgxLWYpICsgcG93JDMoeDIsMikgKiBmKSxcbiAgICAgICAgICAgIHNxcnQkMihwb3ckMyh5MSwyKSAqICgxLWYpICsgcG93JDMoeTIsMikgKiBmKSxcbiAgICAgICAgICAgIHNxcnQkMihwb3ckMyh6MSwyKSAqICgxLWYpICsgcG93JDMoejIsMikgKiBmKSxcbiAgICAgICAgICAgICdyZ2InXG4gICAgICAgIClcbiAgICB9O1xuXG4gICAgLy8gcmVnaXN0ZXIgaW50ZXJwb2xhdG9yXG4gICAgaW50ZXJwb2xhdG9yLmxyZ2IgPSBscmdiO1xuXG4gICAgdmFyIGxhYiQxID0gZnVuY3Rpb24gKGNvbDEsIGNvbDIsIGYpIHtcbiAgICAgICAgdmFyIHh5ejAgPSBjb2wxLmxhYigpO1xuICAgICAgICB2YXIgeHl6MSA9IGNvbDIubGFiKCk7XG4gICAgICAgIHJldHVybiBuZXcgQ29sb3JfMShcbiAgICAgICAgICAgIHh5ejBbMF0gKyBmICogKHh5ejFbMF0teHl6MFswXSksXG4gICAgICAgICAgICB4eXowWzFdICsgZiAqICh4eXoxWzFdLXh5ejBbMV0pLFxuICAgICAgICAgICAgeHl6MFsyXSArIGYgKiAoeHl6MVsyXS14eXowWzJdKSxcbiAgICAgICAgICAgICdsYWInXG4gICAgICAgIClcbiAgICB9O1xuXG4gICAgLy8gcmVnaXN0ZXIgaW50ZXJwb2xhdG9yXG4gICAgaW50ZXJwb2xhdG9yLmxhYiA9IGxhYiQxO1xuXG4gICAgdmFyIF9oc3ggPSBmdW5jdGlvbiAoY29sMSwgY29sMiwgZiwgbSkge1xuICAgICAgICB2YXIgYXNzaWduLCBhc3NpZ24kMTtcblxuICAgICAgICB2YXIgeHl6MCwgeHl6MTtcbiAgICAgICAgaWYgKG0gPT09ICdoc2wnKSB7XG4gICAgICAgICAgICB4eXowID0gY29sMS5oc2woKTtcbiAgICAgICAgICAgIHh5ejEgPSBjb2wyLmhzbCgpO1xuICAgICAgICB9IGVsc2UgaWYgKG0gPT09ICdoc3YnKSB7XG4gICAgICAgICAgICB4eXowID0gY29sMS5oc3YoKTtcbiAgICAgICAgICAgIHh5ejEgPSBjb2wyLmhzdigpO1xuICAgICAgICB9IGVsc2UgaWYgKG0gPT09ICdoY2cnKSB7XG4gICAgICAgICAgICB4eXowID0gY29sMS5oY2coKTtcbiAgICAgICAgICAgIHh5ejEgPSBjb2wyLmhjZygpO1xuICAgICAgICB9IGVsc2UgaWYgKG0gPT09ICdoc2knKSB7XG4gICAgICAgICAgICB4eXowID0gY29sMS5oc2koKTtcbiAgICAgICAgICAgIHh5ejEgPSBjb2wyLmhzaSgpO1xuICAgICAgICB9IGVsc2UgaWYgKG0gPT09ICdsY2gnIHx8IG0gPT09ICdoY2wnKSB7XG4gICAgICAgICAgICBtID0gJ2hjbCc7XG4gICAgICAgICAgICB4eXowID0gY29sMS5oY2woKTtcbiAgICAgICAgICAgIHh5ejEgPSBjb2wyLmhjbCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGh1ZTAsIGh1ZTEsIHNhdDAsIHNhdDEsIGxidjAsIGxidjE7XG4gICAgICAgIGlmIChtLnN1YnN0cigwLCAxKSA9PT0gJ2gnKSB7XG4gICAgICAgICAgICAoYXNzaWduID0geHl6MCwgaHVlMCA9IGFzc2lnblswXSwgc2F0MCA9IGFzc2lnblsxXSwgbGJ2MCA9IGFzc2lnblsyXSk7XG4gICAgICAgICAgICAoYXNzaWduJDEgPSB4eXoxLCBodWUxID0gYXNzaWduJDFbMF0sIHNhdDEgPSBhc3NpZ24kMVsxXSwgbGJ2MSA9IGFzc2lnbiQxWzJdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBzYXQsIGh1ZSwgbGJ2LCBkaDtcblxuICAgICAgICBpZiAoIWlzTmFOKGh1ZTApICYmICFpc05hTihodWUxKSkge1xuICAgICAgICAgICAgLy8gYm90aCBjb2xvcnMgaGF2ZSBodWVcbiAgICAgICAgICAgIGlmIChodWUxID4gaHVlMCAmJiBodWUxIC0gaHVlMCA+IDE4MCkge1xuICAgICAgICAgICAgICAgIGRoID0gaHVlMS0oaHVlMCszNjApO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChodWUxIDwgaHVlMCAmJiBodWUwIC0gaHVlMSA+IDE4MCkge1xuICAgICAgICAgICAgICAgIGRoID0gaHVlMSszNjAtaHVlMDtcbiAgICAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgICAgICBkaCA9IGh1ZTEgLSBodWUwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaHVlID0gaHVlMCArIGYgKiBkaDtcbiAgICAgICAgfSBlbHNlIGlmICghaXNOYU4oaHVlMCkpIHtcbiAgICAgICAgICAgIGh1ZSA9IGh1ZTA7XG4gICAgICAgICAgICBpZiAoKGxidjEgPT0gMSB8fCBsYnYxID09IDApICYmIG0gIT0gJ2hzdicpIHsgc2F0ID0gc2F0MDsgfVxuICAgICAgICB9IGVsc2UgaWYgKCFpc05hTihodWUxKSkge1xuICAgICAgICAgICAgaHVlID0gaHVlMTtcbiAgICAgICAgICAgIGlmICgobGJ2MCA9PSAxIHx8IGxidjAgPT0gMCkgJiYgbSAhPSAnaHN2JykgeyBzYXQgPSBzYXQxOyB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBodWUgPSBOdW1iZXIuTmFOO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNhdCA9PT0gdW5kZWZpbmVkKSB7IHNhdCA9IHNhdDAgKyBmICogKHNhdDEgLSBzYXQwKTsgfVxuICAgICAgICBsYnYgPSBsYnYwICsgZiAqIChsYnYxLWxidjApO1xuICAgICAgICByZXR1cm4gbmV3IENvbG9yXzEoW2h1ZSwgc2F0LCBsYnZdLCBtKTtcbiAgICB9O1xuXG4gICAgdmFyIGxjaCQxID0gZnVuY3Rpb24gKGNvbDEsIGNvbDIsIGYpIHtcbiAgICBcdHJldHVybiBfaHN4KGNvbDEsIGNvbDIsIGYsICdsY2gnKTtcbiAgICB9O1xuXG4gICAgLy8gcmVnaXN0ZXIgaW50ZXJwb2xhdG9yXG4gICAgaW50ZXJwb2xhdG9yLmxjaCA9IGxjaCQxO1xuICAgIGludGVycG9sYXRvci5oY2wgPSBsY2gkMTtcblxuICAgIHZhciBudW0kMSA9IGZ1bmN0aW9uIChjb2wxLCBjb2wyLCBmKSB7XG4gICAgICAgIHZhciBjMSA9IGNvbDEubnVtKCk7XG4gICAgICAgIHZhciBjMiA9IGNvbDIubnVtKCk7XG4gICAgICAgIHJldHVybiBuZXcgQ29sb3JfMShjMSArIGYgKiAoYzItYzEpLCAnbnVtJylcbiAgICB9O1xuXG4gICAgLy8gcmVnaXN0ZXIgaW50ZXJwb2xhdG9yXG4gICAgaW50ZXJwb2xhdG9yLm51bSA9IG51bSQxO1xuXG4gICAgdmFyIGhjZyQxID0gZnVuY3Rpb24gKGNvbDEsIGNvbDIsIGYpIHtcbiAgICBcdHJldHVybiBfaHN4KGNvbDEsIGNvbDIsIGYsICdoY2cnKTtcbiAgICB9O1xuXG4gICAgLy8gcmVnaXN0ZXIgaW50ZXJwb2xhdG9yXG4gICAgaW50ZXJwb2xhdG9yLmhjZyA9IGhjZyQxO1xuXG4gICAgdmFyIGhzaSQxID0gZnVuY3Rpb24gKGNvbDEsIGNvbDIsIGYpIHtcbiAgICBcdHJldHVybiBfaHN4KGNvbDEsIGNvbDIsIGYsICdoc2knKTtcbiAgICB9O1xuXG4gICAgLy8gcmVnaXN0ZXIgaW50ZXJwb2xhdG9yXG4gICAgaW50ZXJwb2xhdG9yLmhzaSA9IGhzaSQxO1xuXG4gICAgdmFyIGhzbCQxID0gZnVuY3Rpb24gKGNvbDEsIGNvbDIsIGYpIHtcbiAgICBcdHJldHVybiBfaHN4KGNvbDEsIGNvbDIsIGYsICdoc2wnKTtcbiAgICB9O1xuXG4gICAgLy8gcmVnaXN0ZXIgaW50ZXJwb2xhdG9yXG4gICAgaW50ZXJwb2xhdG9yLmhzbCA9IGhzbCQxO1xuXG4gICAgdmFyIGhzdiQxID0gZnVuY3Rpb24gKGNvbDEsIGNvbDIsIGYpIHtcbiAgICBcdHJldHVybiBfaHN4KGNvbDEsIGNvbDIsIGYsICdoc3YnKTtcbiAgICB9O1xuXG4gICAgLy8gcmVnaXN0ZXIgaW50ZXJwb2xhdG9yXG4gICAgaW50ZXJwb2xhdG9yLmhzdiA9IGhzdiQxO1xuXG4gICAgdmFyIGNsaXBfcmdiJDIgPSB1dGlscy5jbGlwX3JnYjtcbiAgICB2YXIgcG93JDQgPSBNYXRoLnBvdztcbiAgICB2YXIgc3FydCQzID0gTWF0aC5zcXJ0O1xuICAgIHZhciBQSSQxID0gTWF0aC5QSTtcbiAgICB2YXIgY29zJDIgPSBNYXRoLmNvcztcbiAgICB2YXIgc2luJDEgPSBNYXRoLnNpbjtcbiAgICB2YXIgYXRhbjIkMSA9IE1hdGguYXRhbjI7XG5cbiAgICB2YXIgYXZlcmFnZSA9IGZ1bmN0aW9uIChjb2xvcnMsIG1vZGUsIHdlaWdodHMpIHtcbiAgICAgICAgaWYgKCBtb2RlID09PSB2b2lkIDAgKSBtb2RlPSdscmdiJztcbiAgICAgICAgaWYgKCB3ZWlnaHRzID09PSB2b2lkIDAgKSB3ZWlnaHRzPW51bGw7XG5cbiAgICAgICAgdmFyIGwgPSBjb2xvcnMubGVuZ3RoO1xuICAgICAgICBpZiAoIXdlaWdodHMpIHsgd2VpZ2h0cyA9IEFycmF5LmZyb20obmV3IEFycmF5KGwpKS5tYXAoZnVuY3Rpb24gKCkgeyByZXR1cm4gMTsgfSk7IH1cbiAgICAgICAgLy8gbm9ybWFsaXplIHdlaWdodHNcbiAgICAgICAgdmFyIGsgPSBsIC8gd2VpZ2h0cy5yZWR1Y2UoZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gYSArIGI7IH0pO1xuICAgICAgICB3ZWlnaHRzLmZvckVhY2goZnVuY3Rpb24gKHcsaSkgeyB3ZWlnaHRzW2ldICo9IGs7IH0pO1xuICAgICAgICAvLyBjb252ZXJ0IGNvbG9ycyB0byBDb2xvciBvYmplY3RzXG4gICAgICAgIGNvbG9ycyA9IGNvbG9ycy5tYXAoZnVuY3Rpb24gKGMpIHsgcmV0dXJuIG5ldyBDb2xvcl8xKGMpOyB9KTtcbiAgICAgICAgaWYgKG1vZGUgPT09ICdscmdiJykge1xuICAgICAgICAgICAgcmV0dXJuIF9hdmVyYWdlX2xyZ2IoY29sb3JzLCB3ZWlnaHRzKVxuICAgICAgICB9XG4gICAgICAgIHZhciBmaXJzdCA9IGNvbG9ycy5zaGlmdCgpO1xuICAgICAgICB2YXIgeHl6ID0gZmlyc3QuZ2V0KG1vZGUpO1xuICAgICAgICB2YXIgY250ID0gW107XG4gICAgICAgIHZhciBkeCA9IDA7XG4gICAgICAgIHZhciBkeSA9IDA7XG4gICAgICAgIC8vIGluaXRpYWwgY29sb3JcbiAgICAgICAgZm9yICh2YXIgaT0wOyBpPHh5ei5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgeHl6W2ldID0gKHh5eltpXSB8fCAwKSAqIHdlaWdodHNbMF07XG4gICAgICAgICAgICBjbnQucHVzaChpc05hTih4eXpbaV0pID8gMCA6IHdlaWdodHNbMF0pO1xuICAgICAgICAgICAgaWYgKG1vZGUuY2hhckF0KGkpID09PSAnaCcgJiYgIWlzTmFOKHh5eltpXSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgQSA9IHh5eltpXSAvIDE4MCAqIFBJJDE7XG4gICAgICAgICAgICAgICAgZHggKz0gY29zJDIoQSkgKiB3ZWlnaHRzWzBdO1xuICAgICAgICAgICAgICAgIGR5ICs9IHNpbiQxKEEpICogd2VpZ2h0c1swXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBhbHBoYSA9IGZpcnN0LmFscGhhKCkgKiB3ZWlnaHRzWzBdO1xuICAgICAgICBjb2xvcnMuZm9yRWFjaChmdW5jdGlvbiAoYyxjaSkge1xuICAgICAgICAgICAgdmFyIHh5ejIgPSBjLmdldChtb2RlKTtcbiAgICAgICAgICAgIGFscGhhICs9IGMuYWxwaGEoKSAqIHdlaWdodHNbY2krMV07XG4gICAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8eHl6Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFpc05hTih4eXoyW2ldKSkge1xuICAgICAgICAgICAgICAgICAgICBjbnRbaV0gKz0gd2VpZ2h0c1tjaSsxXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1vZGUuY2hhckF0KGkpID09PSAnaCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBBID0geHl6MltpXSAvIDE4MCAqIFBJJDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBkeCArPSBjb3MkMihBKSAqIHdlaWdodHNbY2krMV07XG4gICAgICAgICAgICAgICAgICAgICAgICBkeSArPSBzaW4kMShBKSAqIHdlaWdodHNbY2krMV07XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB4eXpbaV0gKz0geHl6MltpXSAqIHdlaWdodHNbY2krMV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGZvciAodmFyIGkkMT0wOyBpJDE8eHl6Lmxlbmd0aDsgaSQxKyspIHtcbiAgICAgICAgICAgIGlmIChtb2RlLmNoYXJBdChpJDEpID09PSAnaCcpIHtcbiAgICAgICAgICAgICAgICB2YXIgQSQxID0gYXRhbjIkMShkeSAvIGNudFtpJDFdLCBkeCAvIGNudFtpJDFdKSAvIFBJJDEgKiAxODA7XG4gICAgICAgICAgICAgICAgd2hpbGUgKEEkMSA8IDApIHsgQSQxICs9IDM2MDsgfVxuICAgICAgICAgICAgICAgIHdoaWxlIChBJDEgPj0gMzYwKSB7IEEkMSAtPSAzNjA7IH1cbiAgICAgICAgICAgICAgICB4eXpbaSQxXSA9IEEkMTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgeHl6W2kkMV0gPSB4eXpbaSQxXS9jbnRbaSQxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhbHBoYSAvPSBsO1xuICAgICAgICByZXR1cm4gKG5ldyBDb2xvcl8xKHh5eiwgbW9kZSkpLmFscGhhKGFscGhhID4gMC45OTk5OSA/IDEgOiBhbHBoYSwgdHJ1ZSk7XG4gICAgfTtcblxuXG4gICAgdmFyIF9hdmVyYWdlX2xyZ2IgPSBmdW5jdGlvbiAoY29sb3JzLCB3ZWlnaHRzKSB7XG4gICAgICAgIHZhciBsID0gY29sb3JzLmxlbmd0aDtcbiAgICAgICAgdmFyIHh5eiA9IFswLDAsMCwwXTtcbiAgICAgICAgZm9yICh2YXIgaT0wOyBpIDwgY29sb3JzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgY29sID0gY29sb3JzW2ldO1xuICAgICAgICAgICAgdmFyIGYgPSB3ZWlnaHRzW2ldIC8gbDtcbiAgICAgICAgICAgIHZhciByZ2IgPSBjb2wuX3JnYjtcbiAgICAgICAgICAgIHh5elswXSArPSBwb3ckNChyZ2JbMF0sMikgKiBmO1xuICAgICAgICAgICAgeHl6WzFdICs9IHBvdyQ0KHJnYlsxXSwyKSAqIGY7XG4gICAgICAgICAgICB4eXpbMl0gKz0gcG93JDQocmdiWzJdLDIpICogZjtcbiAgICAgICAgICAgIHh5elszXSArPSByZ2JbM10gKiBmO1xuICAgICAgICB9XG4gICAgICAgIHh5elswXSA9IHNxcnQkMyh4eXpbMF0pO1xuICAgICAgICB4eXpbMV0gPSBzcXJ0JDMoeHl6WzFdKTtcbiAgICAgICAgeHl6WzJdID0gc3FydCQzKHh5elsyXSk7XG4gICAgICAgIGlmICh4eXpbM10gPiAwLjk5OTk5OTkpIHsgeHl6WzNdID0gMTsgfVxuICAgICAgICByZXR1cm4gbmV3IENvbG9yXzEoY2xpcF9yZ2IkMih4eXopKTtcbiAgICB9O1xuXG4gICAgLy8gbWluaW1hbCBtdWx0aS1wdXJwb3NlIGludGVyZmFjZVxuXG4gICAgLy8gQHJlcXVpcmVzIHV0aWxzIGNvbG9yIGFuYWx5emVcblxuXG4gICAgdmFyIHR5cGUkaiA9IHV0aWxzLnR5cGU7XG5cbiAgICB2YXIgcG93JDUgPSBNYXRoLnBvdztcblxuICAgIHZhciBzY2FsZSA9IGZ1bmN0aW9uKGNvbG9ycykge1xuXG4gICAgICAgIC8vIGNvbnN0cnVjdG9yXG4gICAgICAgIHZhciBfbW9kZSA9ICdyZ2InO1xuICAgICAgICB2YXIgX25hY29sID0gY2hyb21hXzEoJyNjY2MnKTtcbiAgICAgICAgdmFyIF9zcHJlYWQgPSAwO1xuICAgICAgICAvLyBjb25zdCBfZml4ZWQgPSBmYWxzZTtcbiAgICAgICAgdmFyIF9kb21haW4gPSBbMCwgMV07XG4gICAgICAgIHZhciBfcG9zID0gW107XG4gICAgICAgIHZhciBfcGFkZGluZyA9IFswLDBdO1xuICAgICAgICB2YXIgX2NsYXNzZXMgPSBmYWxzZTtcbiAgICAgICAgdmFyIF9jb2xvcnMgPSBbXTtcbiAgICAgICAgdmFyIF9vdXQgPSBmYWxzZTtcbiAgICAgICAgdmFyIF9taW4gPSAwO1xuICAgICAgICB2YXIgX21heCA9IDE7XG4gICAgICAgIHZhciBfY29ycmVjdExpZ2h0bmVzcyA9IGZhbHNlO1xuICAgICAgICB2YXIgX2NvbG9yQ2FjaGUgPSB7fTtcbiAgICAgICAgdmFyIF91c2VDYWNoZSA9IHRydWU7XG4gICAgICAgIHZhciBfZ2FtbWEgPSAxO1xuXG4gICAgICAgIC8vIHByaXZhdGUgbWV0aG9kc1xuXG4gICAgICAgIHZhciBzZXRDb2xvcnMgPSBmdW5jdGlvbihjb2xvcnMpIHtcbiAgICAgICAgICAgIGNvbG9ycyA9IGNvbG9ycyB8fCBbJyNmZmYnLCAnIzAwMCddO1xuICAgICAgICAgICAgaWYgKGNvbG9ycyAmJiB0eXBlJGooY29sb3JzKSA9PT0gJ3N0cmluZycgJiYgY2hyb21hXzEuYnJld2VyICYmXG4gICAgICAgICAgICAgICAgY2hyb21hXzEuYnJld2VyW2NvbG9ycy50b0xvd2VyQ2FzZSgpXSkge1xuICAgICAgICAgICAgICAgIGNvbG9ycyA9IGNocm9tYV8xLmJyZXdlcltjb2xvcnMudG9Mb3dlckNhc2UoKV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZSRqKGNvbG9ycykgPT09ICdhcnJheScpIHtcbiAgICAgICAgICAgICAgICAvLyBoYW5kbGUgc2luZ2xlIGNvbG9yXG4gICAgICAgICAgICAgICAgaWYgKGNvbG9ycy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3JzID0gW2NvbG9yc1swXSwgY29sb3JzWzBdXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gbWFrZSBhIGNvcHkgb2YgdGhlIGNvbG9yc1xuICAgICAgICAgICAgICAgIGNvbG9ycyA9IGNvbG9ycy5zbGljZSgwKTtcbiAgICAgICAgICAgICAgICAvLyBjb252ZXJ0IHRvIGNocm9tYSBjbGFzc2VzXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgYz0wOyBjPGNvbG9ycy5sZW5ndGg7IGMrKykge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcnNbY10gPSBjaHJvbWFfMShjb2xvcnNbY10pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBhdXRvLWZpbGwgY29sb3IgcG9zaXRpb25cbiAgICAgICAgICAgICAgICBfcG9zLmxlbmd0aCA9IDA7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgYyQxPTA7IGMkMTxjb2xvcnMubGVuZ3RoOyBjJDErKykge1xuICAgICAgICAgICAgICAgICAgICBfcG9zLnB1c2goYyQxLyhjb2xvcnMubGVuZ3RoLTEpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXNldENhY2hlKCk7XG4gICAgICAgICAgICByZXR1cm4gX2NvbG9ycyA9IGNvbG9ycztcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgZ2V0Q2xhc3MgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKF9jbGFzc2VzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB2YXIgbiA9IF9jbGFzc2VzLmxlbmd0aC0xO1xuICAgICAgICAgICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgICAgICAgICB3aGlsZSAoaSA8IG4gJiYgdmFsdWUgPj0gX2NsYXNzZXNbaV0pIHtcbiAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gaS0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIHRNYXBMaWdodG5lc3MgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdDsgfTtcbiAgICAgICAgdmFyIHRNYXBEb21haW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdDsgfTtcblxuICAgICAgICAvLyBjb25zdCBjbGFzc2lmeVZhbHVlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgLy8gICAgIGxldCB2YWwgPSB2YWx1ZTtcbiAgICAgICAgLy8gICAgIGlmIChfY2xhc3Nlcy5sZW5ndGggPiAyKSB7XG4gICAgICAgIC8vICAgICAgICAgY29uc3QgbiA9IF9jbGFzc2VzLmxlbmd0aC0xO1xuICAgICAgICAvLyAgICAgICAgIGNvbnN0IGkgPSBnZXRDbGFzcyh2YWx1ZSk7XG4gICAgICAgIC8vICAgICAgICAgY29uc3QgbWluYyA9IF9jbGFzc2VzWzBdICsgKChfY2xhc3Nlc1sxXS1fY2xhc3Nlc1swXSkgKiAoMCArIChfc3ByZWFkICogMC41KSkpOyAgLy8gY2VudGVyIG9mIDFzdCBjbGFzc1xuICAgICAgICAvLyAgICAgICAgIGNvbnN0IG1heGMgPSBfY2xhc3Nlc1tuLTFdICsgKChfY2xhc3Nlc1tuXS1fY2xhc3Nlc1tuLTFdKSAqICgxIC0gKF9zcHJlYWQgKiAwLjUpKSk7ICAvLyBjZW50ZXIgb2YgbGFzdCBjbGFzc1xuICAgICAgICAvLyAgICAgICAgIHZhbCA9IF9taW4gKyAoKCgoX2NsYXNzZXNbaV0gKyAoKF9jbGFzc2VzW2krMV0gLSBfY2xhc3Nlc1tpXSkgKiAwLjUpKSAtIG1pbmMpIC8gKG1heGMtbWluYykpICogKF9tYXggLSBfbWluKSk7XG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vICAgICByZXR1cm4gdmFsO1xuICAgICAgICAvLyB9O1xuXG4gICAgICAgIHZhciBnZXRDb2xvciA9IGZ1bmN0aW9uKHZhbCwgYnlwYXNzTWFwKSB7XG4gICAgICAgICAgICB2YXIgY29sLCB0O1xuICAgICAgICAgICAgaWYgKGJ5cGFzc01hcCA9PSBudWxsKSB7IGJ5cGFzc01hcCA9IGZhbHNlOyB9XG4gICAgICAgICAgICBpZiAoaXNOYU4odmFsKSB8fCAodmFsID09PSBudWxsKSkgeyByZXR1cm4gX25hY29sOyB9XG4gICAgICAgICAgICBpZiAoIWJ5cGFzc01hcCkge1xuICAgICAgICAgICAgICAgIGlmIChfY2xhc3NlcyAmJiAoX2NsYXNzZXMubGVuZ3RoID4gMikpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZmluZCB0aGUgY2xhc3NcbiAgICAgICAgICAgICAgICAgICAgdmFyIGMgPSBnZXRDbGFzcyh2YWwpO1xuICAgICAgICAgICAgICAgICAgICB0ID0gYyAvIChfY2xhc3Nlcy5sZW5ndGgtMik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChfbWF4ICE9PSBfbWluKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGp1c3QgaW50ZXJwb2xhdGUgYmV0d2VlbiBtaW4vbWF4XG4gICAgICAgICAgICAgICAgICAgIHQgPSAodmFsIC0gX21pbikgLyAoX21heCAtIF9taW4pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHQgPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdCA9IHZhbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gZG9tYWluIG1hcFxuICAgICAgICAgICAgdCA9IHRNYXBEb21haW4odCk7XG5cbiAgICAgICAgICAgIGlmICghYnlwYXNzTWFwKSB7XG4gICAgICAgICAgICAgICAgdCA9IHRNYXBMaWdodG5lc3ModCk7ICAvLyBsaWdodG5lc3MgY29ycmVjdGlvblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoX2dhbW1hICE9PSAxKSB7IHQgPSBwb3ckNSh0LCBfZ2FtbWEpOyB9XG5cbiAgICAgICAgICAgIHQgPSBfcGFkZGluZ1swXSArICh0ICogKDEgLSBfcGFkZGluZ1swXSAtIF9wYWRkaW5nWzFdKSk7XG5cbiAgICAgICAgICAgIHQgPSBNYXRoLm1pbigxLCBNYXRoLm1heCgwLCB0KSk7XG5cbiAgICAgICAgICAgIHZhciBrID0gTWF0aC5mbG9vcih0ICogMTAwMDApO1xuXG4gICAgICAgICAgICBpZiAoX3VzZUNhY2hlICYmIF9jb2xvckNhY2hlW2tdKSB7XG4gICAgICAgICAgICAgICAgY29sID0gX2NvbG9yQ2FjaGVba107XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlJGooX2NvbG9ycykgPT09ICdhcnJheScpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9mb3IgaSBpbiBbMC4uX3Bvcy5sZW5ndGgtMV1cbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaT0wOyBpPF9wb3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwID0gX3Bvc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0IDw9IHApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2wgPSBfY29sb3JzW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCh0ID49IHApICYmIChpID09PSAoX3Bvcy5sZW5ndGgtMSkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sID0gX2NvbG9yc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ID4gcCAmJiB0IDwgX3Bvc1tpKzFdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdCA9ICh0LXApLyhfcG9zW2krMV0tcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sID0gY2hyb21hXzEuaW50ZXJwb2xhdGUoX2NvbG9yc1tpXSwgX2NvbG9yc1tpKzFdLCB0LCBfbW9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGUkaihfY29sb3JzKSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBjb2wgPSBfY29sb3JzKHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoX3VzZUNhY2hlKSB7IF9jb2xvckNhY2hlW2tdID0gY29sOyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY29sO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZhciByZXNldENhY2hlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX2NvbG9yQ2FjaGUgPSB7fTsgfTtcblxuICAgICAgICBzZXRDb2xvcnMoY29sb3JzKTtcblxuICAgICAgICAvLyBwdWJsaWMgaW50ZXJmYWNlXG5cbiAgICAgICAgdmFyIGYgPSBmdW5jdGlvbih2KSB7XG4gICAgICAgICAgICB2YXIgYyA9IGNocm9tYV8xKGdldENvbG9yKHYpKTtcbiAgICAgICAgICAgIGlmIChfb3V0ICYmIGNbX291dF0pIHsgcmV0dXJuIGNbX291dF0oKTsgfSBlbHNlIHsgcmV0dXJuIGM7IH1cbiAgICAgICAgfTtcblxuICAgICAgICBmLmNsYXNzZXMgPSBmdW5jdGlvbihjbGFzc2VzKSB7XG4gICAgICAgICAgICBpZiAoY2xhc3NlcyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGUkaihjbGFzc2VzKSA9PT0gJ2FycmF5Jykge1xuICAgICAgICAgICAgICAgICAgICBfY2xhc3NlcyA9IGNsYXNzZXM7XG4gICAgICAgICAgICAgICAgICAgIF9kb21haW4gPSBbY2xhc3Nlc1swXSwgY2xhc3Nlc1tjbGFzc2VzLmxlbmd0aC0xXV07XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGQgPSBjaHJvbWFfMS5hbmFseXplKF9kb21haW4pO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2xhc3NlcyA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX2NsYXNzZXMgPSBbZC5taW4sIGQubWF4XTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jbGFzc2VzID0gY2hyb21hXzEubGltaXRzKGQsICdlJywgY2xhc3Nlcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGY7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gX2NsYXNzZXM7XG4gICAgICAgIH07XG5cblxuICAgICAgICBmLmRvbWFpbiA9IGZ1bmN0aW9uKGRvbWFpbikge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9kb21haW47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfbWluID0gZG9tYWluWzBdO1xuICAgICAgICAgICAgX21heCA9IGRvbWFpbltkb21haW4ubGVuZ3RoLTFdO1xuICAgICAgICAgICAgX3BvcyA9IFtdO1xuICAgICAgICAgICAgdmFyIGsgPSBfY29sb3JzLmxlbmd0aDtcbiAgICAgICAgICAgIGlmICgoZG9tYWluLmxlbmd0aCA9PT0gaykgJiYgKF9taW4gIT09IF9tYXgpKSB7XG4gICAgICAgICAgICAgICAgLy8gdXBkYXRlIHBvc2l0aW9uc1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsaXN0ID0gQXJyYXkuZnJvbShkb21haW4pOyBpIDwgbGlzdC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZCA9IGxpc3RbaV07XG5cbiAgICAgICAgICAgICAgICAgIF9wb3MucHVzaCgoZC1fbWluKSAvIChfbWF4LV9taW4pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGM9MDsgYzxrOyBjKyspIHtcbiAgICAgICAgICAgICAgICAgICAgX3Bvcy5wdXNoKGMvKGstMSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZG9tYWluLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gc2V0IGRvbWFpbiBtYXBcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRPdXQgPSBkb21haW4ubWFwKGZ1bmN0aW9uIChkLGkpIHsgcmV0dXJuIGkvKGRvbWFpbi5sZW5ndGgtMSk7IH0pO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdEJyZWFrcyA9IGRvbWFpbi5tYXAoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIChkIC0gX21pbikgLyAoX21heCAtIF9taW4pOyB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0QnJlYWtzLmV2ZXJ5KGZ1bmN0aW9uICh2YWwsIGkpIHsgcmV0dXJuIHRPdXRbaV0gPT09IHZhbDsgfSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRNYXBEb21haW4gPSBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0IDw9IDAgfHwgdCA+PSAxKSB7IHJldHVybiB0OyB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICh0ID49IHRCcmVha3NbaSsxXSkgeyBpKys7IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZiA9ICh0IC0gdEJyZWFrc1tpXSkgLyAodEJyZWFrc1tpKzFdIC0gdEJyZWFrc1tpXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG91dCA9IHRPdXRbaV0gKyBmICogKHRPdXRbaSsxXSAtIHRPdXRbaV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvdXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfZG9tYWluID0gW19taW4sIF9tYXhdO1xuICAgICAgICAgICAgcmV0dXJuIGY7XG4gICAgICAgIH07XG5cbiAgICAgICAgZi5tb2RlID0gZnVuY3Rpb24oX20pIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfbW9kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9tb2RlID0gX207XG4gICAgICAgICAgICByZXNldENhY2hlKCk7XG4gICAgICAgICAgICByZXR1cm4gZjtcbiAgICAgICAgfTtcblxuICAgICAgICBmLnJhbmdlID0gZnVuY3Rpb24oY29sb3JzLCBfcG9zKSB7XG4gICAgICAgICAgICBzZXRDb2xvcnMoY29sb3JzLCBfcG9zKTtcbiAgICAgICAgICAgIHJldHVybiBmO1xuICAgICAgICB9O1xuXG4gICAgICAgIGYub3V0ID0gZnVuY3Rpb24oX28pIHtcbiAgICAgICAgICAgIF9vdXQgPSBfbztcbiAgICAgICAgICAgIHJldHVybiBmO1xuICAgICAgICB9O1xuXG4gICAgICAgIGYuc3ByZWFkID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3NwcmVhZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9zcHJlYWQgPSB2YWw7XG4gICAgICAgICAgICByZXR1cm4gZjtcbiAgICAgICAgfTtcblxuICAgICAgICBmLmNvcnJlY3RMaWdodG5lc3MgPSBmdW5jdGlvbih2KSB7XG4gICAgICAgICAgICBpZiAodiA9PSBudWxsKSB7IHYgPSB0cnVlOyB9XG4gICAgICAgICAgICBfY29ycmVjdExpZ2h0bmVzcyA9IHY7XG4gICAgICAgICAgICByZXNldENhY2hlKCk7XG4gICAgICAgICAgICBpZiAoX2NvcnJlY3RMaWdodG5lc3MpIHtcbiAgICAgICAgICAgICAgICB0TWFwTGlnaHRuZXNzID0gZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgTDAgPSBnZXRDb2xvcigwLCB0cnVlKS5sYWIoKVswXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIEwxID0gZ2V0Q29sb3IoMSwgdHJ1ZSkubGFiKClbMF07XG4gICAgICAgICAgICAgICAgICAgIHZhciBwb2wgPSBMMCA+IEwxO1xuICAgICAgICAgICAgICAgICAgICB2YXIgTF9hY3R1YWwgPSBnZXRDb2xvcih0LCB0cnVlKS5sYWIoKVswXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIExfaWRlYWwgPSBMMCArICgoTDEgLSBMMCkgKiB0KTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIExfZGlmZiA9IExfYWN0dWFsIC0gTF9pZGVhbDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHQwID0gMDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHQxID0gMTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1heF9pdGVyID0gMjA7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICgoTWF0aC5hYnMoTF9kaWZmKSA+IDFlLTIpICYmIChtYXhfaXRlci0tID4gMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocG9sKSB7IExfZGlmZiAqPSAtMTsgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChMX2RpZmYgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQwID0gdDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdCArPSAodDEgLSB0KSAqIDAuNTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0MSA9IHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQgKz0gKHQwIC0gdCkgKiAwLjU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExfYWN0dWFsID0gZ2V0Q29sb3IodCwgdHJ1ZSkubGFiKClbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIExfZGlmZiA9IExfYWN0dWFsIC0gTF9pZGVhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHQ7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdE1hcExpZ2h0bmVzcyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0OyB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGY7XG4gICAgICAgIH07XG5cbiAgICAgICAgZi5wYWRkaW5nID0gZnVuY3Rpb24ocCkge1xuICAgICAgICAgICAgaWYgKHAgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlJGoocCkgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgICAgIHAgPSBbcCxwXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgX3BhZGRpbmcgPSBwO1xuICAgICAgICAgICAgICAgIHJldHVybiBmO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3BhZGRpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgZi5jb2xvcnMgPSBmdW5jdGlvbihudW1Db2xvcnMsIG91dCkge1xuICAgICAgICAgICAgLy8gSWYgbm8gYXJndW1lbnRzIGFyZSBnaXZlbiwgcmV0dXJuIHRoZSBvcmlnaW5hbCBjb2xvcnMgdGhhdCB3ZXJlIHByb3ZpZGVkXG4gICAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHsgb3V0ID0gJ2hleCc7IH1cbiAgICAgICAgICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29sb3JzLnNsaWNlKDApO1xuXG4gICAgICAgICAgICB9IGVsc2UgaWYgKG51bUNvbG9ycyA9PT0gMSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IFtmKDAuNSldO1xuXG4gICAgICAgICAgICB9IGVsc2UgaWYgKG51bUNvbG9ycyA+IDEpIHtcbiAgICAgICAgICAgICAgICB2YXIgZG0gPSBfZG9tYWluWzBdO1xuICAgICAgICAgICAgICAgIHZhciBkZCA9IF9kb21haW5bMV0gLSBkbTtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBfX3JhbmdlX18oMCwgbnVtQ29sb3JzLCBmYWxzZSkubWFwKGZ1bmN0aW9uIChpKSB7IHJldHVybiBmKCBkbSArICgoaS8obnVtQ29sb3JzLTEpKSAqIGRkKSApOyB9KTtcblxuICAgICAgICAgICAgfSBlbHNlIHsgLy8gcmV0dXJucyBhbGwgY29sb3JzIGJhc2VkIG9uIHRoZSBkZWZpbmVkIGNsYXNzZXNcbiAgICAgICAgICAgICAgICBjb2xvcnMgPSBbXTtcbiAgICAgICAgICAgICAgICB2YXIgc2FtcGxlcyA9IFtdO1xuICAgICAgICAgICAgICAgIGlmIChfY2xhc3NlcyAmJiAoX2NsYXNzZXMubGVuZ3RoID4gMikpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDEsIGVuZCA9IF9jbGFzc2VzLmxlbmd0aCwgYXNjID0gMSA8PSBlbmQ7IGFzYyA/IGkgPCBlbmQgOiBpID4gZW5kOyBhc2MgPyBpKysgOiBpLS0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNhbXBsZXMucHVzaCgoX2NsYXNzZXNbaS0xXStfY2xhc3Nlc1tpXSkqMC41KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHNhbXBsZXMgPSBfZG9tYWluO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXN1bHQgPSBzYW1wbGVzLm1hcChmdW5jdGlvbiAodikgeyByZXR1cm4gZih2KTsgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjaHJvbWFfMVtvdXRdKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0Lm1hcChmdW5jdGlvbiAoYykgeyByZXR1cm4gY1tvdXRdKCk7IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfTtcblxuICAgICAgICBmLmNhY2hlID0gZnVuY3Rpb24oYykge1xuICAgICAgICAgICAgaWYgKGMgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIF91c2VDYWNoZSA9IGM7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGY7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdXNlQ2FjaGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgZi5nYW1tYSA9IGZ1bmN0aW9uKGcpIHtcbiAgICAgICAgICAgIGlmIChnICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBfZ2FtbWEgPSBnO1xuICAgICAgICAgICAgICAgIHJldHVybiBmO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2dhbW1hO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGYubm9kYXRhID0gZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgaWYgKGQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIF9uYWNvbCA9IGNocm9tYV8xKGQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX25hY29sO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBmO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBfX3JhbmdlX18obGVmdCwgcmlnaHQsIGluY2x1c2l2ZSkge1xuICAgICAgdmFyIHJhbmdlID0gW107XG4gICAgICB2YXIgYXNjZW5kaW5nID0gbGVmdCA8IHJpZ2h0O1xuICAgICAgdmFyIGVuZCA9ICFpbmNsdXNpdmUgPyByaWdodCA6IGFzY2VuZGluZyA/IHJpZ2h0ICsgMSA6IHJpZ2h0IC0gMTtcbiAgICAgIGZvciAodmFyIGkgPSBsZWZ0OyBhc2NlbmRpbmcgPyBpIDwgZW5kIDogaSA+IGVuZDsgYXNjZW5kaW5nID8gaSsrIDogaS0tKSB7XG4gICAgICAgIHJhbmdlLnB1c2goaSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmFuZ2U7XG4gICAgfVxuXG4gICAgLy9cbiAgICAvLyBpbnRlcnBvbGF0ZXMgYmV0d2VlbiBhIHNldCBvZiBjb2xvcnMgdXppbmcgYSBiZXppZXIgc3BsaW5lXG4gICAgLy9cblxuICAgIC8vIEByZXF1aXJlcyB1dGlscyBsYWJcblxuXG5cblxuICAgIHZhciBiZXppZXIgPSBmdW5jdGlvbihjb2xvcnMpIHtcbiAgICAgICAgdmFyIGFzc2lnbiwgYXNzaWduJDEsIGFzc2lnbiQyO1xuXG4gICAgICAgIHZhciBJLCBsYWIwLCBsYWIxLCBsYWIyO1xuICAgICAgICBjb2xvcnMgPSBjb2xvcnMubWFwKGZ1bmN0aW9uIChjKSB7IHJldHVybiBuZXcgQ29sb3JfMShjKTsgfSk7XG4gICAgICAgIGlmIChjb2xvcnMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICAvLyBsaW5lYXIgaW50ZXJwb2xhdGlvblxuICAgICAgICAgICAgKGFzc2lnbiA9IGNvbG9ycy5tYXAoZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGMubGFiKCk7IH0pLCBsYWIwID0gYXNzaWduWzBdLCBsYWIxID0gYXNzaWduWzFdKTtcbiAgICAgICAgICAgIEkgPSBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICAgICAgdmFyIGxhYiA9IChbMCwgMSwgMl0ubWFwKGZ1bmN0aW9uIChpKSB7IHJldHVybiBsYWIwW2ldICsgKHQgKiAobGFiMVtpXSAtIGxhYjBbaV0pKTsgfSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ29sb3JfMShsYWIsICdsYWInKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAoY29sb3JzLmxlbmd0aCA9PT0gMykge1xuICAgICAgICAgICAgLy8gcXVhZHJhdGljIGJlemllciBpbnRlcnBvbGF0aW9uXG4gICAgICAgICAgICAoYXNzaWduJDEgPSBjb2xvcnMubWFwKGZ1bmN0aW9uIChjKSB7IHJldHVybiBjLmxhYigpOyB9KSwgbGFiMCA9IGFzc2lnbiQxWzBdLCBsYWIxID0gYXNzaWduJDFbMV0sIGxhYjIgPSBhc3NpZ24kMVsyXSk7XG4gICAgICAgICAgICBJID0gZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgICAgIHZhciBsYWIgPSAoWzAsIDEsIDJdLm1hcChmdW5jdGlvbiAoaSkgeyByZXR1cm4gKCgxLXQpKigxLXQpICogbGFiMFtpXSkgKyAoMiAqICgxLXQpICogdCAqIGxhYjFbaV0pICsgKHQgKiB0ICogbGFiMltpXSk7IH0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IENvbG9yXzEobGFiLCAnbGFiJyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2UgaWYgKGNvbG9ycy5sZW5ndGggPT09IDQpIHtcbiAgICAgICAgICAgIC8vIGN1YmljIGJlemllciBpbnRlcnBvbGF0aW9uXG4gICAgICAgICAgICB2YXIgbGFiMztcbiAgICAgICAgICAgIChhc3NpZ24kMiA9IGNvbG9ycy5tYXAoZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGMubGFiKCk7IH0pLCBsYWIwID0gYXNzaWduJDJbMF0sIGxhYjEgPSBhc3NpZ24kMlsxXSwgbGFiMiA9IGFzc2lnbiQyWzJdLCBsYWIzID0gYXNzaWduJDJbM10pO1xuICAgICAgICAgICAgSSA9IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbGFiID0gKFswLCAxLCAyXS5tYXAoZnVuY3Rpb24gKGkpIHsgcmV0dXJuICgoMS10KSooMS10KSooMS10KSAqIGxhYjBbaV0pICsgKDMgKiAoMS10KSAqICgxLXQpICogdCAqIGxhYjFbaV0pICsgKDMgKiAoMS10KSAqIHQgKiB0ICogbGFiMltpXSkgKyAodCp0KnQgKiBsYWIzW2ldKTsgfSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ29sb3JfMShsYWIsICdsYWInKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAoY29sb3JzLmxlbmd0aCA9PT0gNSkge1xuICAgICAgICAgICAgdmFyIEkwID0gYmV6aWVyKGNvbG9ycy5zbGljZSgwLCAzKSk7XG4gICAgICAgICAgICB2YXIgSTEgPSBiZXppZXIoY29sb3JzLnNsaWNlKDIsIDUpKTtcbiAgICAgICAgICAgIEkgPSBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHQgPCAwLjUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEkwKHQqMik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEkxKCh0LTAuNSkqMik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gSTtcbiAgICB9O1xuXG4gICAgdmFyIGJlemllcl8xID0gZnVuY3Rpb24gKGNvbG9ycykge1xuICAgICAgICB2YXIgZiA9IGJlemllcihjb2xvcnMpO1xuICAgICAgICBmLnNjYWxlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gc2NhbGUoZik7IH07XG4gICAgICAgIHJldHVybiBmO1xuICAgIH07XG5cbiAgICAvKlxuICAgICAqIGludGVycG9sYXRlcyBiZXR3ZWVuIGEgc2V0IG9mIGNvbG9ycyB1emluZyBhIGJlemllciBzcGxpbmVcbiAgICAgKiBibGVuZCBtb2RlIGZvcm11bGFzIHRha2VuIGZyb20gaHR0cDovL3d3dy52ZW50dXJlLXdhcmUuY29tL2tldmluL2NvZGluZy9sZXRzLWxlYXJuLW1hdGgtcGhvdG9zaG9wLWJsZW5kLW1vZGVzL1xuICAgICAqL1xuXG5cblxuXG4gICAgdmFyIGJsZW5kID0gZnVuY3Rpb24gKGJvdHRvbSwgdG9wLCBtb2RlKSB7XG4gICAgICAgIGlmICghYmxlbmRbbW9kZV0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBibGVuZCBtb2RlICcgKyBtb2RlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYmxlbmRbbW9kZV0oYm90dG9tLCB0b3ApO1xuICAgIH07XG5cbiAgICB2YXIgYmxlbmRfZiA9IGZ1bmN0aW9uIChmKSB7IHJldHVybiBmdW5jdGlvbiAoYm90dG9tLHRvcCkge1xuICAgICAgICAgICAgdmFyIGMwID0gY2hyb21hXzEodG9wKS5yZ2IoKTtcbiAgICAgICAgICAgIHZhciBjMSA9IGNocm9tYV8xKGJvdHRvbSkucmdiKCk7XG4gICAgICAgICAgICByZXR1cm4gY2hyb21hXzEucmdiKGYoYzAsIGMxKSk7XG4gICAgICAgIH07IH07XG5cbiAgICB2YXIgZWFjaCA9IGZ1bmN0aW9uIChmKSB7IHJldHVybiBmdW5jdGlvbiAoYzAsIGMxKSB7XG4gICAgICAgICAgICB2YXIgb3V0ID0gW107XG4gICAgICAgICAgICBvdXRbMF0gPSBmKGMwWzBdLCBjMVswXSk7XG4gICAgICAgICAgICBvdXRbMV0gPSBmKGMwWzFdLCBjMVsxXSk7XG4gICAgICAgICAgICBvdXRbMl0gPSBmKGMwWzJdLCBjMVsyXSk7XG4gICAgICAgICAgICByZXR1cm4gb3V0O1xuICAgICAgICB9OyB9O1xuXG4gICAgdmFyIG5vcm1hbCA9IGZ1bmN0aW9uIChhKSB7IHJldHVybiBhOyB9O1xuICAgIHZhciBtdWx0aXBseSA9IGZ1bmN0aW9uIChhLGIpIHsgcmV0dXJuIGEgKiBiIC8gMjU1OyB9O1xuICAgIHZhciBkYXJrZW4kMSA9IGZ1bmN0aW9uIChhLGIpIHsgcmV0dXJuIGEgPiBiID8gYiA6IGE7IH07XG4gICAgdmFyIGxpZ2h0ZW4gPSBmdW5jdGlvbiAoYSxiKSB7IHJldHVybiBhID4gYiA/IGEgOiBiOyB9O1xuICAgIHZhciBzY3JlZW4gPSBmdW5jdGlvbiAoYSxiKSB7IHJldHVybiAyNTUgKiAoMSAtICgxLWEvMjU1KSAqICgxLWIvMjU1KSk7IH07XG4gICAgdmFyIG92ZXJsYXkgPSBmdW5jdGlvbiAoYSxiKSB7IHJldHVybiBiIDwgMTI4ID8gMiAqIGEgKiBiIC8gMjU1IDogMjU1ICogKDEgLSAyICogKDEgLSBhIC8gMjU1ICkgKiAoIDEgLSBiIC8gMjU1ICkpOyB9O1xuICAgIHZhciBidXJuID0gZnVuY3Rpb24gKGEsYikgeyByZXR1cm4gMjU1ICogKDEgLSAoMSAtIGIgLyAyNTUpIC8gKGEvMjU1KSk7IH07XG4gICAgdmFyIGRvZGdlID0gZnVuY3Rpb24gKGEsYikge1xuICAgICAgICBpZiAoYSA9PT0gMjU1KSB7IHJldHVybiAyNTU7IH1cbiAgICAgICAgYSA9IDI1NSAqIChiIC8gMjU1KSAvICgxIC0gYSAvIDI1NSk7XG4gICAgICAgIHJldHVybiBhID4gMjU1ID8gMjU1IDogYVxuICAgIH07XG5cbiAgICAvLyAjIGFkZCA9IChhLGIpIC0+XG4gICAgLy8gIyAgICAgaWYgKGEgKyBiID4gMjU1KSB0aGVuIDI1NSBlbHNlIGEgKyBiXG5cbiAgICBibGVuZC5ub3JtYWwgPSBibGVuZF9mKGVhY2gobm9ybWFsKSk7XG4gICAgYmxlbmQubXVsdGlwbHkgPSBibGVuZF9mKGVhY2gobXVsdGlwbHkpKTtcbiAgICBibGVuZC5zY3JlZW4gPSBibGVuZF9mKGVhY2goc2NyZWVuKSk7XG4gICAgYmxlbmQub3ZlcmxheSA9IGJsZW5kX2YoZWFjaChvdmVybGF5KSk7XG4gICAgYmxlbmQuZGFya2VuID0gYmxlbmRfZihlYWNoKGRhcmtlbiQxKSk7XG4gICAgYmxlbmQubGlnaHRlbiA9IGJsZW5kX2YoZWFjaChsaWdodGVuKSk7XG4gICAgYmxlbmQuZG9kZ2UgPSBibGVuZF9mKGVhY2goZG9kZ2UpKTtcbiAgICBibGVuZC5idXJuID0gYmxlbmRfZihlYWNoKGJ1cm4pKTtcbiAgICAvLyBibGVuZC5hZGQgPSBibGVuZF9mKGVhY2goYWRkKSk7XG5cbiAgICB2YXIgYmxlbmRfMSA9IGJsZW5kO1xuXG4gICAgLy8gY3ViZWhlbGl4IGludGVycG9sYXRpb25cbiAgICAvLyBiYXNlZCBvbiBELkEuIEdyZWVuIFwiQSBjb2xvdXIgc2NoZW1lIGZvciB0aGUgZGlzcGxheSBvZiBhc3Ryb25vbWljYWwgaW50ZW5zaXR5IGltYWdlc1wiXG4gICAgLy8gaHR0cDovL2FzdHJvbi1zb2MuaW4vYnVsbGV0aW4vMTFKdW5lLzI4OTM5MjAxMS5wZGZcblxuICAgIHZhciB0eXBlJGsgPSB1dGlscy50eXBlO1xuICAgIHZhciBjbGlwX3JnYiQzID0gdXRpbHMuY2xpcF9yZ2I7XG4gICAgdmFyIFRXT1BJJDIgPSB1dGlscy5UV09QSTtcbiAgICB2YXIgcG93JDYgPSBNYXRoLnBvdztcbiAgICB2YXIgc2luJDIgPSBNYXRoLnNpbjtcbiAgICB2YXIgY29zJDMgPSBNYXRoLmNvcztcblxuXG4gICAgdmFyIGN1YmVoZWxpeCA9IGZ1bmN0aW9uKHN0YXJ0LCByb3RhdGlvbnMsIGh1ZSwgZ2FtbWEsIGxpZ2h0bmVzcykge1xuICAgICAgICBpZiAoIHN0YXJ0ID09PSB2b2lkIDAgKSBzdGFydD0zMDA7XG4gICAgICAgIGlmICggcm90YXRpb25zID09PSB2b2lkIDAgKSByb3RhdGlvbnM9LTEuNTtcbiAgICAgICAgaWYgKCBodWUgPT09IHZvaWQgMCApIGh1ZT0xO1xuICAgICAgICBpZiAoIGdhbW1hID09PSB2b2lkIDAgKSBnYW1tYT0xO1xuICAgICAgICBpZiAoIGxpZ2h0bmVzcyA9PT0gdm9pZCAwICkgbGlnaHRuZXNzPVswLDFdO1xuXG4gICAgICAgIHZhciBkaCA9IDAsIGRsO1xuICAgICAgICBpZiAodHlwZSRrKGxpZ2h0bmVzcykgPT09ICdhcnJheScpIHtcbiAgICAgICAgICAgIGRsID0gbGlnaHRuZXNzWzFdIC0gbGlnaHRuZXNzWzBdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGwgPSAwO1xuICAgICAgICAgICAgbGlnaHRuZXNzID0gW2xpZ2h0bmVzcywgbGlnaHRuZXNzXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBmID0gZnVuY3Rpb24oZnJhY3QpIHtcbiAgICAgICAgICAgIHZhciBhID0gVFdPUEkkMiAqICgoKHN0YXJ0KzEyMCkvMzYwKSArIChyb3RhdGlvbnMgKiBmcmFjdCkpO1xuICAgICAgICAgICAgdmFyIGwgPSBwb3ckNihsaWdodG5lc3NbMF0gKyAoZGwgKiBmcmFjdCksIGdhbW1hKTtcbiAgICAgICAgICAgIHZhciBoID0gZGggIT09IDAgPyBodWVbMF0gKyAoZnJhY3QgKiBkaCkgOiBodWU7XG4gICAgICAgICAgICB2YXIgYW1wID0gKGggKiBsICogKDEtbCkpIC8gMjtcbiAgICAgICAgICAgIHZhciBjb3NfYSA9IGNvcyQzKGEpO1xuICAgICAgICAgICAgdmFyIHNpbl9hID0gc2luJDIoYSk7XG4gICAgICAgICAgICB2YXIgciA9IGwgKyAoYW1wICogKCgtMC4xNDg2MSAqIGNvc19hKSArICgxLjc4Mjc3KiBzaW5fYSkpKTtcbiAgICAgICAgICAgIHZhciBnID0gbCArIChhbXAgKiAoKC0wLjI5MjI3ICogY29zX2EpIC0gKDAuOTA2NDkqIHNpbl9hKSkpO1xuICAgICAgICAgICAgdmFyIGIgPSBsICsgKGFtcCAqICgrMS45NzI5NCAqIGNvc19hKSk7XG4gICAgICAgICAgICByZXR1cm4gY2hyb21hXzEoY2xpcF9yZ2IkMyhbcioyNTUsZyoyNTUsYioyNTUsMV0pKTtcbiAgICAgICAgfTtcblxuICAgICAgICBmLnN0YXJ0ID0gZnVuY3Rpb24ocykge1xuICAgICAgICAgICAgaWYgKChzID09IG51bGwpKSB7IHJldHVybiBzdGFydDsgfVxuICAgICAgICAgICAgc3RhcnQgPSBzO1xuICAgICAgICAgICAgcmV0dXJuIGY7XG4gICAgICAgIH07XG5cbiAgICAgICAgZi5yb3RhdGlvbnMgPSBmdW5jdGlvbihyKSB7XG4gICAgICAgICAgICBpZiAoKHIgPT0gbnVsbCkpIHsgcmV0dXJuIHJvdGF0aW9uczsgfVxuICAgICAgICAgICAgcm90YXRpb25zID0gcjtcbiAgICAgICAgICAgIHJldHVybiBmO1xuICAgICAgICB9O1xuXG4gICAgICAgIGYuZ2FtbWEgPSBmdW5jdGlvbihnKSB7XG4gICAgICAgICAgICBpZiAoKGcgPT0gbnVsbCkpIHsgcmV0dXJuIGdhbW1hOyB9XG4gICAgICAgICAgICBnYW1tYSA9IGc7XG4gICAgICAgICAgICByZXR1cm4gZjtcbiAgICAgICAgfTtcblxuICAgICAgICBmLmh1ZSA9IGZ1bmN0aW9uKGgpIHtcbiAgICAgICAgICAgIGlmICgoaCA9PSBudWxsKSkgeyByZXR1cm4gaHVlOyB9XG4gICAgICAgICAgICBodWUgPSBoO1xuICAgICAgICAgICAgaWYgKHR5cGUkayhodWUpID09PSAnYXJyYXknKSB7XG4gICAgICAgICAgICAgICAgZGggPSBodWVbMV0gLSBodWVbMF07XG4gICAgICAgICAgICAgICAgaWYgKGRoID09PSAwKSB7IGh1ZSA9IGh1ZVsxXTsgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBkaCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZjtcbiAgICAgICAgfTtcblxuICAgICAgICBmLmxpZ2h0bmVzcyA9IGZ1bmN0aW9uKGgpIHtcbiAgICAgICAgICAgIGlmICgoaCA9PSBudWxsKSkgeyByZXR1cm4gbGlnaHRuZXNzOyB9XG4gICAgICAgICAgICBpZiAodHlwZSRrKGgpID09PSAnYXJyYXknKSB7XG4gICAgICAgICAgICAgICAgbGlnaHRuZXNzID0gaDtcbiAgICAgICAgICAgICAgICBkbCA9IGhbMV0gLSBoWzBdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBsaWdodG5lc3MgPSBbaCxoXTtcbiAgICAgICAgICAgICAgICBkbCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZjtcbiAgICAgICAgfTtcblxuICAgICAgICBmLnNjYWxlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY2hyb21hXzEuc2NhbGUoZik7IH07XG5cbiAgICAgICAgZi5odWUoaHVlKTtcblxuICAgICAgICByZXR1cm4gZjtcbiAgICB9O1xuXG4gICAgdmFyIGRpZ2l0cyA9ICcwMTIzNDU2Nzg5YWJjZGVmJztcblxuICAgIHZhciBmbG9vciQyID0gTWF0aC5mbG9vcjtcbiAgICB2YXIgcmFuZG9tID0gTWF0aC5yYW5kb207XG5cbiAgICB2YXIgcmFuZG9tXzEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjb2RlID0gJyMnO1xuICAgICAgICBmb3IgKHZhciBpPTA7IGk8NjsgaSsrKSB7XG4gICAgICAgICAgICBjb2RlICs9IGRpZ2l0cy5jaGFyQXQoZmxvb3IkMihyYW5kb20oKSAqIDE2KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBDb2xvcl8xKGNvZGUsICdoZXgnKTtcbiAgICB9O1xuXG4gICAgdmFyIGxvZyQxID0gTWF0aC5sb2c7XG4gICAgdmFyIHBvdyQ3ID0gTWF0aC5wb3c7XG4gICAgdmFyIGZsb29yJDMgPSBNYXRoLmZsb29yO1xuICAgIHZhciBhYnMgPSBNYXRoLmFicztcblxuXG4gICAgdmFyIGFuYWx5emUgPSBmdW5jdGlvbiAoZGF0YSwga2V5KSB7XG4gICAgICAgIGlmICgga2V5ID09PSB2b2lkIDAgKSBrZXk9bnVsbDtcblxuICAgICAgICB2YXIgciA9IHtcbiAgICAgICAgICAgIG1pbjogTnVtYmVyLk1BWF9WQUxVRSxcbiAgICAgICAgICAgIG1heDogTnVtYmVyLk1BWF9WQUxVRSotMSxcbiAgICAgICAgICAgIHN1bTogMCxcbiAgICAgICAgICAgIHZhbHVlczogW10sXG4gICAgICAgICAgICBjb3VudDogMFxuICAgICAgICB9O1xuICAgICAgICBpZiAodHlwZShkYXRhKSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGRhdGEgPSBPYmplY3QudmFsdWVzKGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGRhdGEuZm9yRWFjaChmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICBpZiAoa2V5ICYmIHR5cGUodmFsKSA9PT0gJ29iamVjdCcpIHsgdmFsID0gdmFsW2tleV07IH1cbiAgICAgICAgICAgIGlmICh2YWwgIT09IHVuZGVmaW5lZCAmJiB2YWwgIT09IG51bGwgJiYgIWlzTmFOKHZhbCkpIHtcbiAgICAgICAgICAgICAgICByLnZhbHVlcy5wdXNoKHZhbCk7XG4gICAgICAgICAgICAgICAgci5zdW0gKz0gdmFsO1xuICAgICAgICAgICAgICAgIGlmICh2YWwgPCByLm1pbikgeyByLm1pbiA9IHZhbDsgfVxuICAgICAgICAgICAgICAgIGlmICh2YWwgPiByLm1heCkgeyByLm1heCA9IHZhbDsgfVxuICAgICAgICAgICAgICAgIHIuY291bnQgKz0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgci5kb21haW4gPSBbci5taW4sIHIubWF4XTtcblxuICAgICAgICByLmxpbWl0cyA9IGZ1bmN0aW9uIChtb2RlLCBudW0pIHsgcmV0dXJuIGxpbWl0cyhyLCBtb2RlLCBudW0pOyB9O1xuXG4gICAgICAgIHJldHVybiByO1xuICAgIH07XG5cblxuICAgIHZhciBsaW1pdHMgPSBmdW5jdGlvbiAoZGF0YSwgbW9kZSwgbnVtKSB7XG4gICAgICAgIGlmICggbW9kZSA9PT0gdm9pZCAwICkgbW9kZT0nZXF1YWwnO1xuICAgICAgICBpZiAoIG51bSA9PT0gdm9pZCAwICkgbnVtPTc7XG5cbiAgICAgICAgaWYgKHR5cGUoZGF0YSkgPT0gJ2FycmF5Jykge1xuICAgICAgICAgICAgZGF0YSA9IGFuYWx5emUoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1pbiA9IGRhdGEubWluO1xuICAgICAgICB2YXIgbWF4ID0gZGF0YS5tYXg7XG4gICAgICAgIHZhciB2YWx1ZXMgPSBkYXRhLnZhbHVlcy5zb3J0KGZ1bmN0aW9uIChhLGIpIHsgcmV0dXJuIGEtYjsgfSk7XG5cbiAgICAgICAgaWYgKG51bSA9PT0gMSkgeyByZXR1cm4gW21pbixtYXhdOyB9XG5cbiAgICAgICAgdmFyIGxpbWl0cyA9IFtdO1xuXG4gICAgICAgIGlmIChtb2RlLnN1YnN0cigwLDEpID09PSAnYycpIHsgLy8gY29udGludW91c1xuICAgICAgICAgICAgbGltaXRzLnB1c2gobWluKTtcbiAgICAgICAgICAgIGxpbWl0cy5wdXNoKG1heCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobW9kZS5zdWJzdHIoMCwxKSA9PT0gJ2UnKSB7IC8vIGVxdWFsIGludGVydmFsXG4gICAgICAgICAgICBsaW1pdHMucHVzaChtaW4pO1xuICAgICAgICAgICAgZm9yICh2YXIgaT0xOyBpPG51bTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgbGltaXRzLnB1c2gobWluKygoaS9udW0pKihtYXgtbWluKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGltaXRzLnB1c2gobWF4KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGVsc2UgaWYgKG1vZGUuc3Vic3RyKDAsMSkgPT09ICdsJykgeyAvLyBsb2cgc2NhbGVcbiAgICAgICAgICAgIGlmIChtaW4gPD0gMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTG9nYXJpdGhtaWMgc2NhbGVzIGFyZSBvbmx5IHBvc3NpYmxlIGZvciB2YWx1ZXMgPiAwJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgbWluX2xvZyA9IE1hdGguTE9HMTBFICogbG9nJDEobWluKTtcbiAgICAgICAgICAgIHZhciBtYXhfbG9nID0gTWF0aC5MT0cxMEUgKiBsb2ckMShtYXgpO1xuICAgICAgICAgICAgbGltaXRzLnB1c2gobWluKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkkMT0xOyBpJDE8bnVtOyBpJDErKykge1xuICAgICAgICAgICAgICAgIGxpbWl0cy5wdXNoKHBvdyQ3KDEwLCBtaW5fbG9nICsgKChpJDEvbnVtKSAqIChtYXhfbG9nIC0gbWluX2xvZykpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaW1pdHMucHVzaChtYXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgZWxzZSBpZiAobW9kZS5zdWJzdHIoMCwxKSA9PT0gJ3EnKSB7IC8vIHF1YW50aWxlIHNjYWxlXG4gICAgICAgICAgICBsaW1pdHMucHVzaChtaW4pO1xuICAgICAgICAgICAgZm9yICh2YXIgaSQyPTE7IGkkMjxudW07IGkkMisrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHAgPSAoKHZhbHVlcy5sZW5ndGgtMSkgKiBpJDIpL251bTtcbiAgICAgICAgICAgICAgICB2YXIgcGIgPSBmbG9vciQzKHApO1xuICAgICAgICAgICAgICAgIGlmIChwYiA9PT0gcCkge1xuICAgICAgICAgICAgICAgICAgICBsaW1pdHMucHVzaCh2YWx1ZXNbcGJdKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgeyAvLyBwID4gcGJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByID0gcCAtIHBiO1xuICAgICAgICAgICAgICAgICAgICBsaW1pdHMucHVzaCgodmFsdWVzW3BiXSooMS1wcikpICsgKHZhbHVlc1twYisxXSpwcikpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpbWl0cy5wdXNoKG1heCk7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIGVsc2UgaWYgKG1vZGUuc3Vic3RyKDAsMSkgPT09ICdrJykgeyAvLyBrLW1lYW5zIGNsdXN0ZXJpbmdcbiAgICAgICAgICAgIC8qXG4gICAgICAgICAgICBpbXBsZW1lbnRhdGlvbiBiYXNlZCBvblxuICAgICAgICAgICAgaHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL2ZpZ3VlL3NvdXJjZS9icm93c2UvdHJ1bmsvZmlndWUuanMjMzM2XG4gICAgICAgICAgICBzaW1wbGlmaWVkIGZvciAxLWQgaW5wdXQgdmFsdWVzXG4gICAgICAgICAgICAqL1xuICAgICAgICAgICAgdmFyIGNsdXN0ZXI7XG4gICAgICAgICAgICB2YXIgbiA9IHZhbHVlcy5sZW5ndGg7XG4gICAgICAgICAgICB2YXIgYXNzaWdubWVudHMgPSBuZXcgQXJyYXkobik7XG4gICAgICAgICAgICB2YXIgY2x1c3RlclNpemVzID0gbmV3IEFycmF5KG51bSk7XG4gICAgICAgICAgICB2YXIgcmVwZWF0ID0gdHJ1ZTtcbiAgICAgICAgICAgIHZhciBuYl9pdGVycyA9IDA7XG4gICAgICAgICAgICB2YXIgY2VudHJvaWRzID0gbnVsbDtcblxuICAgICAgICAgICAgLy8gZ2V0IHNlZWQgdmFsdWVzXG4gICAgICAgICAgICBjZW50cm9pZHMgPSBbXTtcbiAgICAgICAgICAgIGNlbnRyb2lkcy5wdXNoKG1pbik7XG4gICAgICAgICAgICBmb3IgKHZhciBpJDM9MTsgaSQzPG51bTsgaSQzKyspIHtcbiAgICAgICAgICAgICAgICBjZW50cm9pZHMucHVzaChtaW4gKyAoKGkkMy9udW0pICogKG1heC1taW4pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjZW50cm9pZHMucHVzaChtYXgpO1xuXG4gICAgICAgICAgICB3aGlsZSAocmVwZWF0KSB7XG4gICAgICAgICAgICAgICAgLy8gYXNzaWdubWVudCBzdGVwXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaj0wOyBqPG51bTsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsdXN0ZXJTaXplc1tqXSA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkkND0wOyBpJDQ8bjsgaSQ0KyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gdmFsdWVzW2kkNF07XG4gICAgICAgICAgICAgICAgICAgIHZhciBtaW5kaXN0ID0gTnVtYmVyLk1BWF9WQUxVRTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJlc3QgPSAodm9pZCAwKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiQxPTA7IGokMTxudW07IGokMSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGlzdCA9IGFicyhjZW50cm9pZHNbaiQxXS12YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGlzdCA8IG1pbmRpc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5kaXN0ID0gZGlzdDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZXN0ID0gaiQxO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2x1c3RlclNpemVzW2Jlc3RdKys7XG4gICAgICAgICAgICAgICAgICAgICAgICBhc3NpZ25tZW50c1tpJDRdID0gYmVzdDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIHVwZGF0ZSBjZW50cm9pZHMgc3RlcFxuICAgICAgICAgICAgICAgIHZhciBuZXdDZW50cm9pZHMgPSBuZXcgQXJyYXkobnVtKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqJDI9MDsgaiQyPG51bTsgaiQyKyspIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3Q2VudHJvaWRzW2okMl0gPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpJDU9MDsgaSQ1PG47IGkkNSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsdXN0ZXIgPSBhc3NpZ25tZW50c1tpJDVdO1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV3Q2VudHJvaWRzW2NsdXN0ZXJdID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDZW50cm9pZHNbY2x1c3Rlcl0gPSB2YWx1ZXNbaSQ1XTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NlbnRyb2lkc1tjbHVzdGVyXSArPSB2YWx1ZXNbaSQ1XTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqJDM9MDsgaiQzPG51bTsgaiQzKyspIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3Q2VudHJvaWRzW2okM10gKj0gMS9jbHVzdGVyU2l6ZXNbaiQzXTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBjaGVjayBjb252ZXJnZW5jZVxuICAgICAgICAgICAgICAgIHJlcGVhdCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGokND0wOyBqJDQ8bnVtOyBqJDQrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV3Q2VudHJvaWRzW2okNF0gIT09IGNlbnRyb2lkc1tqJDRdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXBlYXQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjZW50cm9pZHMgPSBuZXdDZW50cm9pZHM7XG4gICAgICAgICAgICAgICAgbmJfaXRlcnMrKztcblxuICAgICAgICAgICAgICAgIGlmIChuYl9pdGVycyA+IDIwMCkge1xuICAgICAgICAgICAgICAgICAgICByZXBlYXQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGZpbmlzaGVkIGstbWVhbnMgY2x1c3RlcmluZ1xuICAgICAgICAgICAgLy8gdGhlIG5leHQgcGFydCBpcyBib3Jyb3dlZCBmcm9tIGdhYnJpZWxmbG9yLml0XG4gICAgICAgICAgICB2YXIga0NsdXN0ZXJzID0ge307XG4gICAgICAgICAgICBmb3IgKHZhciBqJDU9MDsgaiQ1PG51bTsgaiQ1KyspIHtcbiAgICAgICAgICAgICAgICBrQ2x1c3RlcnNbaiQ1XSA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgaSQ2PTA7IGkkNjxuOyBpJDYrKykge1xuICAgICAgICAgICAgICAgIGNsdXN0ZXIgPSBhc3NpZ25tZW50c1tpJDZdO1xuICAgICAgICAgICAgICAgIGtDbHVzdGVyc1tjbHVzdGVyXS5wdXNoKHZhbHVlc1tpJDZdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB0bXBLTWVhbnNCcmVha3MgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGokNj0wOyBqJDY8bnVtOyBqJDYrKykge1xuICAgICAgICAgICAgICAgIHRtcEtNZWFuc0JyZWFrcy5wdXNoKGtDbHVzdGVyc1tqJDZdWzBdKTtcbiAgICAgICAgICAgICAgICB0bXBLTWVhbnNCcmVha3MucHVzaChrQ2x1c3RlcnNbaiQ2XVtrQ2x1c3RlcnNbaiQ2XS5sZW5ndGgtMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdG1wS01lYW5zQnJlYWtzID0gdG1wS01lYW5zQnJlYWtzLnNvcnQoZnVuY3Rpb24gKGEsYil7IHJldHVybiBhLWI7IH0pO1xuICAgICAgICAgICAgbGltaXRzLnB1c2godG1wS01lYW5zQnJlYWtzWzBdKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkkNz0xOyBpJDcgPCB0bXBLTWVhbnNCcmVha3MubGVuZ3RoOyBpJDcrPSAyKSB7XG4gICAgICAgICAgICAgICAgdmFyIHYgPSB0bXBLTWVhbnNCcmVha3NbaSQ3XTtcbiAgICAgICAgICAgICAgICBpZiAoIWlzTmFOKHYpICYmIChsaW1pdHMuaW5kZXhPZih2KSA9PT0gLTEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpbWl0cy5wdXNoKHYpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbGltaXRzO1xuICAgIH07XG5cbiAgICB2YXIgYW5hbHl6ZV8xID0ge2FuYWx5emU6IGFuYWx5emUsIGxpbWl0czogbGltaXRzfTtcblxuICAgIHZhciBjb250cmFzdCA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgIC8vIFdDQUcgY29udHJhc3QgcmF0aW9cbiAgICAgICAgLy8gc2VlIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMDgvUkVDLVdDQUcyMC0yMDA4MTIxMS8jY29udHJhc3QtcmF0aW9kZWZcbiAgICAgICAgYSA9IG5ldyBDb2xvcl8xKGEpO1xuICAgICAgICBiID0gbmV3IENvbG9yXzEoYik7XG4gICAgICAgIHZhciBsMSA9IGEubHVtaW5hbmNlKCk7XG4gICAgICAgIHZhciBsMiA9IGIubHVtaW5hbmNlKCk7XG4gICAgICAgIHJldHVybiBsMSA+IGwyID8gKGwxICsgMC4wNSkgLyAobDIgKyAwLjA1KSA6IChsMiArIDAuMDUpIC8gKGwxICsgMC4wNSk7XG4gICAgfTtcblxuICAgIHZhciBzcXJ0JDQgPSBNYXRoLnNxcnQ7XG4gICAgdmFyIGF0YW4yJDIgPSBNYXRoLmF0YW4yO1xuICAgIHZhciBhYnMkMSA9IE1hdGguYWJzO1xuICAgIHZhciBjb3MkNCA9IE1hdGguY29zO1xuICAgIHZhciBQSSQyID0gTWF0aC5QSTtcblxuICAgIHZhciBkZWx0YUUgPSBmdW5jdGlvbihhLCBiLCBMLCBDKSB7XG4gICAgICAgIGlmICggTCA9PT0gdm9pZCAwICkgTD0xO1xuICAgICAgICBpZiAoIEMgPT09IHZvaWQgMCApIEM9MTtcblxuICAgICAgICAvLyBEZWx0YSBFIChDTUMpXG4gICAgICAgIC8vIHNlZSBodHRwOi8vd3d3LmJydWNlbGluZGJsb29tLmNvbS9pbmRleC5odG1sP0Vxbl9EZWx0YUVfQ01DLmh0bWxcbiAgICAgICAgYSA9IG5ldyBDb2xvcl8xKGEpO1xuICAgICAgICBiID0gbmV3IENvbG9yXzEoYik7XG4gICAgICAgIHZhciByZWYgPSBBcnJheS5mcm9tKGEubGFiKCkpO1xuICAgICAgICB2YXIgTDEgPSByZWZbMF07XG4gICAgICAgIHZhciBhMSA9IHJlZlsxXTtcbiAgICAgICAgdmFyIGIxID0gcmVmWzJdO1xuICAgICAgICB2YXIgcmVmJDEgPSBBcnJheS5mcm9tKGIubGFiKCkpO1xuICAgICAgICB2YXIgTDIgPSByZWYkMVswXTtcbiAgICAgICAgdmFyIGEyID0gcmVmJDFbMV07XG4gICAgICAgIHZhciBiMiA9IHJlZiQxWzJdO1xuICAgICAgICB2YXIgYzEgPSBzcXJ0JDQoKGExICogYTEpICsgKGIxICogYjEpKTtcbiAgICAgICAgdmFyIGMyID0gc3FydCQ0KChhMiAqIGEyKSArIChiMiAqIGIyKSk7XG4gICAgICAgIHZhciBzbCA9IEwxIDwgMTYuMCA/IDAuNTExIDogKDAuMDQwOTc1ICogTDEpIC8gKDEuMCArICgwLjAxNzY1ICogTDEpKTtcbiAgICAgICAgdmFyIHNjID0gKCgwLjA2MzggKiBjMSkgLyAoMS4wICsgKDAuMDEzMSAqIGMxKSkpICsgMC42Mzg7XG4gICAgICAgIHZhciBoMSA9IGMxIDwgMC4wMDAwMDEgPyAwLjAgOiAoYXRhbjIkMihiMSwgYTEpICogMTgwLjApIC8gUEkkMjtcbiAgICAgICAgd2hpbGUgKGgxIDwgMCkgeyBoMSArPSAzNjA7IH1cbiAgICAgICAgd2hpbGUgKGgxID49IDM2MCkgeyBoMSAtPSAzNjA7IH1cbiAgICAgICAgdmFyIHQgPSAoaDEgPj0gMTY0LjApICYmIChoMSA8PSAzNDUuMCkgPyAoMC41NiArIGFicyQxKDAuMiAqIGNvcyQ0KChQSSQyICogKGgxICsgMTY4LjApKSAvIDE4MC4wKSkpIDogKDAuMzYgKyBhYnMkMSgwLjQgKiBjb3MkNCgoUEkkMiAqIChoMSArIDM1LjApKSAvIDE4MC4wKSkpO1xuICAgICAgICB2YXIgYzQgPSBjMSAqIGMxICogYzEgKiBjMTtcbiAgICAgICAgdmFyIGYgPSBzcXJ0JDQoYzQgLyAoYzQgKyAxOTAwLjApKTtcbiAgICAgICAgdmFyIHNoID0gc2MgKiAoKChmICogdCkgKyAxLjApIC0gZik7XG4gICAgICAgIHZhciBkZWxMID0gTDEgLSBMMjtcbiAgICAgICAgdmFyIGRlbEMgPSBjMSAtIGMyO1xuICAgICAgICB2YXIgZGVsQSA9IGExIC0gYTI7XG4gICAgICAgIHZhciBkZWxCID0gYjEgLSBiMjtcbiAgICAgICAgdmFyIGRIMiA9ICgoZGVsQSAqIGRlbEEpICsgKGRlbEIgKiBkZWxCKSkgLSAoZGVsQyAqIGRlbEMpO1xuICAgICAgICB2YXIgdjEgPSBkZWxMIC8gKEwgKiBzbCk7XG4gICAgICAgIHZhciB2MiA9IGRlbEMgLyAoQyAqIHNjKTtcbiAgICAgICAgdmFyIHYzID0gc2g7XG4gICAgICAgIHJldHVybiBzcXJ0JDQoKHYxICogdjEpICsgKHYyICogdjIpICsgKGRIMiAvICh2MyAqIHYzKSkpO1xuICAgIH07XG5cbiAgICAvLyBzaW1wbGUgRXVjbGlkZWFuIGRpc3RhbmNlXG4gICAgdmFyIGRpc3RhbmNlID0gZnVuY3Rpb24oYSwgYiwgbW9kZSkge1xuICAgICAgICBpZiAoIG1vZGUgPT09IHZvaWQgMCApIG1vZGU9J2xhYic7XG5cbiAgICAgICAgLy8gRGVsdGEgRSAoQ0lFIDE5NzYpXG4gICAgICAgIC8vIHNlZSBodHRwOi8vd3d3LmJydWNlbGluZGJsb29tLmNvbS9pbmRleC5odG1sP0VxdWF0aW9ucy5odG1sXG4gICAgICAgIGEgPSBuZXcgQ29sb3JfMShhKTtcbiAgICAgICAgYiA9IG5ldyBDb2xvcl8xKGIpO1xuICAgICAgICB2YXIgbDEgPSBhLmdldChtb2RlKTtcbiAgICAgICAgdmFyIGwyID0gYi5nZXQobW9kZSk7XG4gICAgICAgIHZhciBzdW1fc3EgPSAwO1xuICAgICAgICBmb3IgKHZhciBpIGluIGwxKSB7XG4gICAgICAgICAgICB2YXIgZCA9IChsMVtpXSB8fCAwKSAtIChsMltpXSB8fCAwKTtcbiAgICAgICAgICAgIHN1bV9zcSArPSBkKmQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE1hdGguc3FydChzdW1fc3EpO1xuICAgIH07XG5cbiAgICB2YXIgdmFsaWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIG5ldyAoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuYXBwbHkoIENvbG9yXzEsIFsgbnVsbCBdLmNvbmNhdCggYXJncykgKSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIHNvbWUgcHJlLWRlZmluZWQgY29sb3Igc2NhbGVzOlxuXG5cblxuXG4gICAgdmFyIHNjYWxlcyA9IHtcbiAgICBcdGNvb2w6IGZ1bmN0aW9uIGNvb2woKSB7IHJldHVybiBzY2FsZShbY2hyb21hXzEuaHNsKDE4MCwxLC45KSwgY2hyb21hXzEuaHNsKDI1MCwuNywuNCldKSB9LFxuICAgIFx0aG90OiBmdW5jdGlvbiBob3QoKSB7IHJldHVybiBzY2FsZShbJyMwMDAnLCcjZjAwJywnI2ZmMCcsJyNmZmYnXSwgWzAsLjI1LC43NSwxXSkubW9kZSgncmdiJykgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgICAgQ29sb3JCcmV3ZXIgY29sb3JzIGZvciBjaHJvbWEuanNcblxuICAgICAgICBDb3B5cmlnaHQgKGMpIDIwMDIgQ3ludGhpYSBCcmV3ZXIsIE1hcmsgSGFycm93ZXIsIGFuZCBUaGVcbiAgICAgICAgUGVubnN5bHZhbmlhIFN0YXRlIFVuaXZlcnNpdHkuXG5cbiAgICAgICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAgICAgICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICAgICAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAgICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiAgICAgICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZSBkaXN0cmlidXRlZFxuICAgICAgICB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUlxuICAgICAgICBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICAgICAgICBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICAgICovXG5cbiAgICB2YXIgY29sb3JicmV3ZXIgPSB7XG4gICAgICAgIC8vIHNlcXVlbnRpYWxcbiAgICAgICAgT3JSZDogWycjZmZmN2VjJywgJyNmZWU4YzgnLCAnI2ZkZDQ5ZScsICcjZmRiYjg0JywgJyNmYzhkNTknLCAnI2VmNjU0OCcsICcjZDczMDFmJywgJyNiMzAwMDAnLCAnIzdmMDAwMCddLFxuICAgICAgICBQdUJ1OiBbJyNmZmY3ZmInLCAnI2VjZTdmMicsICcjZDBkMWU2JywgJyNhNmJkZGInLCAnIzc0YTljZicsICcjMzY5MGMwJywgJyMwNTcwYjAnLCAnIzA0NWE4ZCcsICcjMDIzODU4J10sXG4gICAgICAgIEJ1UHU6IFsnI2Y3ZmNmZCcsICcjZTBlY2Y0JywgJyNiZmQzZTYnLCAnIzllYmNkYScsICcjOGM5NmM2JywgJyM4YzZiYjEnLCAnIzg4NDE5ZCcsICcjODEwZjdjJywgJyM0ZDAwNGInXSxcbiAgICAgICAgT3JhbmdlczogWycjZmZmNWViJywgJyNmZWU2Y2UnLCAnI2ZkZDBhMicsICcjZmRhZTZiJywgJyNmZDhkM2MnLCAnI2YxNjkxMycsICcjZDk0ODAxJywgJyNhNjM2MDMnLCAnIzdmMjcwNCddLFxuICAgICAgICBCdUduOiBbJyNmN2ZjZmQnLCAnI2U1ZjVmOScsICcjY2NlY2U2JywgJyM5OWQ4YzknLCAnIzY2YzJhNCcsICcjNDFhZTc2JywgJyMyMzhiNDUnLCAnIzAwNmQyYycsICcjMDA0NDFiJ10sXG4gICAgICAgIFlsT3JCcjogWycjZmZmZmU1JywgJyNmZmY3YmMnLCAnI2ZlZTM5MScsICcjZmVjNDRmJywgJyNmZTk5MjknLCAnI2VjNzAxNCcsICcjY2M0YzAyJywgJyM5OTM0MDQnLCAnIzY2MjUwNiddLFxuICAgICAgICBZbEduOiBbJyNmZmZmZTUnLCAnI2Y3ZmNiOScsICcjZDlmMGEzJywgJyNhZGRkOGUnLCAnIzc4YzY3OScsICcjNDFhYjVkJywgJyMyMzg0NDMnLCAnIzAwNjgzNycsICcjMDA0NTI5J10sXG4gICAgICAgIFJlZHM6IFsnI2ZmZjVmMCcsICcjZmVlMGQyJywgJyNmY2JiYTEnLCAnI2ZjOTI3MicsICcjZmI2YTRhJywgJyNlZjNiMmMnLCAnI2NiMTgxZCcsICcjYTUwZjE1JywgJyM2NzAwMGQnXSxcbiAgICAgICAgUmRQdTogWycjZmZmN2YzJywgJyNmZGUwZGQnLCAnI2ZjYzVjMCcsICcjZmE5ZmI1JywgJyNmNzY4YTEnLCAnI2RkMzQ5NycsICcjYWUwMTdlJywgJyM3YTAxNzcnLCAnIzQ5MDA2YSddLFxuICAgICAgICBHcmVlbnM6IFsnI2Y3ZmNmNScsICcjZTVmNWUwJywgJyNjN2U5YzAnLCAnI2ExZDk5YicsICcjNzRjNDc2JywgJyM0MWFiNWQnLCAnIzIzOGI0NScsICcjMDA2ZDJjJywgJyMwMDQ0MWInXSxcbiAgICAgICAgWWxHbkJ1OiBbJyNmZmZmZDknLCAnI2VkZjhiMScsICcjYzdlOWI0JywgJyM3ZmNkYmInLCAnIzQxYjZjNCcsICcjMWQ5MWMwJywgJyMyMjVlYTgnLCAnIzI1MzQ5NCcsICcjMDgxZDU4J10sXG4gICAgICAgIFB1cnBsZXM6IFsnI2ZjZmJmZCcsICcjZWZlZGY1JywgJyNkYWRhZWInLCAnI2JjYmRkYycsICcjOWU5YWM4JywgJyM4MDdkYmEnLCAnIzZhNTFhMycsICcjNTQyNzhmJywgJyMzZjAwN2QnXSxcbiAgICAgICAgR25CdTogWycjZjdmY2YwJywgJyNlMGYzZGInLCAnI2NjZWJjNScsICcjYThkZGI1JywgJyM3YmNjYzQnLCAnIzRlYjNkMycsICcjMmI4Y2JlJywgJyMwODY4YWMnLCAnIzA4NDA4MSddLFxuICAgICAgICBHcmV5czogWycjZmZmZmZmJywgJyNmMGYwZjAnLCAnI2Q5ZDlkOScsICcjYmRiZGJkJywgJyM5Njk2OTYnLCAnIzczNzM3MycsICcjNTI1MjUyJywgJyMyNTI1MjUnLCAnIzAwMDAwMCddLFxuICAgICAgICBZbE9yUmQ6IFsnI2ZmZmZjYycsICcjZmZlZGEwJywgJyNmZWQ5NzYnLCAnI2ZlYjI0YycsICcjZmQ4ZDNjJywgJyNmYzRlMmEnLCAnI2UzMWExYycsICcjYmQwMDI2JywgJyM4MDAwMjYnXSxcbiAgICAgICAgUHVSZDogWycjZjdmNGY5JywgJyNlN2UxZWYnLCAnI2Q0YjlkYScsICcjYzk5NGM3JywgJyNkZjY1YjAnLCAnI2U3Mjk4YScsICcjY2UxMjU2JywgJyM5ODAwNDMnLCAnIzY3MDAxZiddLFxuICAgICAgICBCbHVlczogWycjZjdmYmZmJywgJyNkZWViZjcnLCAnI2M2ZGJlZicsICcjOWVjYWUxJywgJyM2YmFlZDYnLCAnIzQyOTJjNicsICcjMjE3MWI1JywgJyMwODUxOWMnLCAnIzA4MzA2YiddLFxuICAgICAgICBQdUJ1R246IFsnI2ZmZjdmYicsICcjZWNlMmYwJywgJyNkMGQxZTYnLCAnI2E2YmRkYicsICcjNjdhOWNmJywgJyMzNjkwYzAnLCAnIzAyODE4YScsICcjMDE2YzU5JywgJyMwMTQ2MzYnXSxcbiAgICAgICAgVmlyaWRpczogWycjNDQwMTU0JywgJyM0ODI3NzcnLCAnIzNmNGE4YScsICcjMzE2NzhlJywgJyMyNjgzOGYnLCAnIzFmOWQ4YScsICcjNmNjZTVhJywgJyNiNmRlMmInLCAnI2ZlZTgyNSddLFxuXG4gICAgICAgIC8vIGRpdmVyZ2luZ1xuXG4gICAgICAgIFNwZWN0cmFsOiBbJyM5ZTAxNDInLCAnI2Q1M2U0ZicsICcjZjQ2ZDQzJywgJyNmZGFlNjEnLCAnI2ZlZTA4YicsICcjZmZmZmJmJywgJyNlNmY1OTgnLCAnI2FiZGRhNCcsICcjNjZjMmE1JywgJyMzMjg4YmQnLCAnIzVlNGZhMiddLFxuICAgICAgICBSZFlsR246IFsnI2E1MDAyNicsICcjZDczMDI3JywgJyNmNDZkNDMnLCAnI2ZkYWU2MScsICcjZmVlMDhiJywgJyNmZmZmYmYnLCAnI2Q5ZWY4YicsICcjYTZkOTZhJywgJyM2NmJkNjMnLCAnIzFhOTg1MCcsICcjMDA2ODM3J10sXG4gICAgICAgIFJkQnU6IFsnIzY3MDAxZicsICcjYjIxODJiJywgJyNkNjYwNGQnLCAnI2Y0YTU4MicsICcjZmRkYmM3JywgJyNmN2Y3ZjcnLCAnI2QxZTVmMCcsICcjOTJjNWRlJywgJyM0MzkzYzMnLCAnIzIxNjZhYycsICcjMDUzMDYxJ10sXG4gICAgICAgIFBpWUc6IFsnIzhlMDE1MicsICcjYzUxYjdkJywgJyNkZTc3YWUnLCAnI2YxYjZkYScsICcjZmRlMGVmJywgJyNmN2Y3ZjcnLCAnI2U2ZjVkMCcsICcjYjhlMTg2JywgJyM3ZmJjNDEnLCAnIzRkOTIyMScsICcjMjc2NDE5J10sXG4gICAgICAgIFBSR246IFsnIzQwMDA0YicsICcjNzYyYTgzJywgJyM5OTcwYWInLCAnI2MyYTVjZicsICcjZTdkNGU4JywgJyNmN2Y3ZjcnLCAnI2Q5ZjBkMycsICcjYTZkYmEwJywgJyM1YWFlNjEnLCAnIzFiNzgzNycsICcjMDA0NDFiJ10sXG4gICAgICAgIFJkWWxCdTogWycjYTUwMDI2JywgJyNkNzMwMjcnLCAnI2Y0NmQ0MycsICcjZmRhZTYxJywgJyNmZWUwOTAnLCAnI2ZmZmZiZicsICcjZTBmM2Y4JywgJyNhYmQ5ZTknLCAnIzc0YWRkMScsICcjNDU3NWI0JywgJyMzMTM2OTUnXSxcbiAgICAgICAgQnJCRzogWycjNTQzMDA1JywgJyM4YzUxMGEnLCAnI2JmODEyZCcsICcjZGZjMjdkJywgJyNmNmU4YzMnLCAnI2Y1ZjVmNScsICcjYzdlYWU1JywgJyM4MGNkYzEnLCAnIzM1OTc4ZicsICcjMDE2NjVlJywgJyMwMDNjMzAnXSxcbiAgICAgICAgUmRHeTogWycjNjcwMDFmJywgJyNiMjE4MmInLCAnI2Q2NjA0ZCcsICcjZjRhNTgyJywgJyNmZGRiYzcnLCAnI2ZmZmZmZicsICcjZTBlMGUwJywgJyNiYWJhYmEnLCAnIzg3ODc4NycsICcjNGQ0ZDRkJywgJyMxYTFhMWEnXSxcbiAgICAgICAgUHVPcjogWycjN2YzYjA4JywgJyNiMzU4MDYnLCAnI2UwODIxNCcsICcjZmRiODYzJywgJyNmZWUwYjYnLCAnI2Y3ZjdmNycsICcjZDhkYWViJywgJyNiMmFiZDInLCAnIzgwNzNhYycsICcjNTQyNzg4JywgJyMyZDAwNGInXSxcblxuICAgICAgICAvLyBxdWFsaXRhdGl2ZVxuXG4gICAgICAgIFNldDI6IFsnIzY2YzJhNScsICcjZmM4ZDYyJywgJyM4ZGEwY2InLCAnI2U3OGFjMycsICcjYTZkODU0JywgJyNmZmQ5MmYnLCAnI2U1YzQ5NCcsICcjYjNiM2IzJ10sXG4gICAgICAgIEFjY2VudDogWycjN2ZjOTdmJywgJyNiZWFlZDQnLCAnI2ZkYzA4NicsICcjZmZmZjk5JywgJyMzODZjYjAnLCAnI2YwMDI3ZicsICcjYmY1YjE3JywgJyM2NjY2NjYnXSxcbiAgICAgICAgU2V0MTogWycjZTQxYTFjJywgJyMzNzdlYjgnLCAnIzRkYWY0YScsICcjOTg0ZWEzJywgJyNmZjdmMDAnLCAnI2ZmZmYzMycsICcjYTY1NjI4JywgJyNmNzgxYmYnLCAnIzk5OTk5OSddLFxuICAgICAgICBTZXQzOiBbJyM4ZGQzYzcnLCAnI2ZmZmZiMycsICcjYmViYWRhJywgJyNmYjgwNzInLCAnIzgwYjFkMycsICcjZmRiNDYyJywgJyNiM2RlNjknLCAnI2ZjY2RlNScsICcjZDlkOWQ5JywgJyNiYzgwYmQnLCAnI2NjZWJjNScsICcjZmZlZDZmJ10sXG4gICAgICAgIERhcmsyOiBbJyMxYjllNzcnLCAnI2Q5NWYwMicsICcjNzU3MGIzJywgJyNlNzI5OGEnLCAnIzY2YTYxZScsICcjZTZhYjAyJywgJyNhNjc2MWQnLCAnIzY2NjY2NiddLFxuICAgICAgICBQYWlyZWQ6IFsnI2E2Y2VlMycsICcjMWY3OGI0JywgJyNiMmRmOGEnLCAnIzMzYTAyYycsICcjZmI5YTk5JywgJyNlMzFhMWMnLCAnI2ZkYmY2ZicsICcjZmY3ZjAwJywgJyNjYWIyZDYnLCAnIzZhM2Q5YScsICcjZmZmZjk5JywgJyNiMTU5MjgnXSxcbiAgICAgICAgUGFzdGVsMjogWycjYjNlMmNkJywgJyNmZGNkYWMnLCAnI2NiZDVlOCcsICcjZjRjYWU0JywgJyNlNmY1YzknLCAnI2ZmZjJhZScsICcjZjFlMmNjJywgJyNjY2NjY2MnXSxcbiAgICAgICAgUGFzdGVsMTogWycjZmJiNGFlJywgJyNiM2NkZTMnLCAnI2NjZWJjNScsICcjZGVjYmU0JywgJyNmZWQ5YTYnLCAnI2ZmZmZjYycsICcjZTVkOGJkJywgJyNmZGRhZWMnLCAnI2YyZjJmMiddLFxuICAgIH07XG5cbiAgICAvLyBhZGQgbG93ZXJjYXNlIGFsaWFzZXMgZm9yIGNhc2UtaW5zZW5zaXRpdmUgbWF0Y2hlc1xuICAgIGZvciAodmFyIGkkMSA9IDAsIGxpc3QkMSA9IE9iamVjdC5rZXlzKGNvbG9yYnJld2VyKTsgaSQxIDwgbGlzdCQxLmxlbmd0aDsgaSQxICs9IDEpIHtcbiAgICAgICAgdmFyIGtleSA9IGxpc3QkMVtpJDFdO1xuXG4gICAgICAgIGNvbG9yYnJld2VyW2tleS50b0xvd2VyQ2FzZSgpXSA9IGNvbG9yYnJld2VyW2tleV07XG4gICAgfVxuXG4gICAgdmFyIGNvbG9yYnJld2VyXzEgPSBjb2xvcmJyZXdlcjtcblxuICAgIC8vIGZlZWwgZnJlZSB0byBjb21tZW50IG91dCBhbnl0aGluZyB0byByb2xsdXBcbiAgICAvLyBhIHNtYWxsZXIgY2hyb21hLmpzIGJ1aWx0XG5cbiAgICAvLyBpbyAtLT4gY29udmVydCBjb2xvcnNcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAvLyBvcGVyYXRvcnMgLS0+IG1vZGlmeSBleGlzdGluZyBDb2xvcnNcblxuXG5cblxuXG5cblxuXG5cblxuICAgIC8vIGludGVycG9sYXRvcnNcblxuXG5cblxuXG5cblxuXG5cblxuICAgIC8vIGdlbmVyYXRvcnMgLS0gPiBjcmVhdGUgbmV3IGNvbG9yc1xuICAgIGNocm9tYV8xLmF2ZXJhZ2UgPSBhdmVyYWdlO1xuICAgIGNocm9tYV8xLmJlemllciA9IGJlemllcl8xO1xuICAgIGNocm9tYV8xLmJsZW5kID0gYmxlbmRfMTtcbiAgICBjaHJvbWFfMS5jdWJlaGVsaXggPSBjdWJlaGVsaXg7XG4gICAgY2hyb21hXzEubWl4ID0gY2hyb21hXzEuaW50ZXJwb2xhdGUgPSBtaXg7XG4gICAgY2hyb21hXzEucmFuZG9tID0gcmFuZG9tXzE7XG4gICAgY2hyb21hXzEuc2NhbGUgPSBzY2FsZTtcblxuICAgIC8vIG90aGVyIHV0aWxpdHkgbWV0aG9kc1xuICAgIGNocm9tYV8xLmFuYWx5emUgPSBhbmFseXplXzEuYW5hbHl6ZTtcbiAgICBjaHJvbWFfMS5jb250cmFzdCA9IGNvbnRyYXN0O1xuICAgIGNocm9tYV8xLmRlbHRhRSA9IGRlbHRhRTtcbiAgICBjaHJvbWFfMS5kaXN0YW5jZSA9IGRpc3RhbmNlO1xuICAgIGNocm9tYV8xLmxpbWl0cyA9IGFuYWx5emVfMS5saW1pdHM7XG4gICAgY2hyb21hXzEudmFsaWQgPSB2YWxpZDtcblxuICAgIC8vIHNjYWxlXG4gICAgY2hyb21hXzEuc2NhbGVzID0gc2NhbGVzO1xuXG4gICAgLy8gY29sb3JzXG4gICAgY2hyb21hXzEuY29sb3JzID0gdzNjeDExXzE7XG4gICAgY2hyb21hXzEuYnJld2VyID0gY29sb3JicmV3ZXJfMTtcblxuICAgIHZhciBjaHJvbWFfanMgPSBjaHJvbWFfMTtcblxuICAgIHJldHVybiBjaHJvbWFfanM7XG5cbn0pKSk7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXRpbHNcIikpO1xuXG52YXIgX2RlZXBDbG9uZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIm1vdXQvbGFuZy9kZWVwQ2xvbmVcIikpO1xuXG52YXIgX2RlZXBFcXVhbHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJtb3V0L2xhbmcvZGVlcEVxdWFsc1wiKSk7XG5cbnZhciBfY2hyb21hSnMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJjaHJvbWEtanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIobykgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBvW1N5bWJvbC5pdGVyYXRvcl0gPT0gbnVsbCkgeyBpZiAoQXJyYXkuaXNBcnJheShvKSB8fCAobyA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvKSkpIHsgdmFyIGkgPSAwOyB2YXIgRiA9IGZ1bmN0aW9uIEYoKSB7fTsgcmV0dXJuIHsgczogRiwgbjogZnVuY3Rpb24gbigpIHsgaWYgKGkgPj0gby5sZW5ndGgpIHJldHVybiB7IGRvbmU6IHRydWUgfTsgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlOiBvW2krK10gfTsgfSwgZTogZnVuY3Rpb24gZShfZSkgeyB0aHJvdyBfZTsgfSwgZjogRiB9OyB9IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfSB2YXIgaXQsIG5vcm1hbENvbXBsZXRpb24gPSB0cnVlLCBkaWRFcnIgPSBmYWxzZSwgZXJyOyByZXR1cm4geyBzOiBmdW5jdGlvbiBzKCkgeyBpdCA9IG9bU3ltYm9sLml0ZXJhdG9yXSgpOyB9LCBuOiBmdW5jdGlvbiBuKCkgeyB2YXIgc3RlcCA9IGl0Lm5leHQoKTsgbm9ybWFsQ29tcGxldGlvbiA9IHN0ZXAuZG9uZTsgcmV0dXJuIHN0ZXA7IH0sIGU6IGZ1bmN0aW9uIGUoX2UyKSB7IGRpZEVyciA9IHRydWU7IGVyciA9IF9lMjsgfSwgZjogZnVuY3Rpb24gZigpIHsgdHJ5IHsgaWYgKCFub3JtYWxDb21wbGV0aW9uICYmIGl0W1wicmV0dXJuXCJdICE9IG51bGwpIGl0W1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChkaWRFcnIpIHRocm93IGVycjsgfSB9IH07IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShuKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxudmFyIGRlZmF1bHRzID0ge1xuICBjb3VudDogNSxcbiAgaHVlTWluOiAwLFxuICBodWVNYXg6IDM2MCxcbiAgY2hyb21hTWluOiAwLFxuICBjaHJvbWFNYXg6IDEwMCxcbiAgbGlnaHRNaW46IDAsXG4gIGxpZ2h0TWF4OiAxMDAsXG4gIHF1YWxpdHk6IDUwLFxuICBzYW1wbGVzOiA4MDBcbn07XG5cbnZhciBnZXRDbG9zZXN0SW5kZXggPSBmdW5jdGlvbiBnZXRDbG9zZXN0SW5kZXgoY29sb3JzLCBjb2xvcikge1xuICB2YXIgbWluRGlzdCA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuICB2YXIgbmVhcmVzdCA9IDA7XG5cbiAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwgY29sb3JzLmxlbmd0aDsgaWR4ICs9IDEpIHtcbiAgICB2YXIgc2FtcGxlID0gY29sb3JzW2lkeF07XG4gICAgdmFyIGRpc3QgPSBNYXRoLnNxcnQoTWF0aC5wb3coTWF0aC5hYnMoc2FtcGxlWzBdIC0gY29sb3JbMF0pLCAyKSArIE1hdGgucG93KE1hdGguYWJzKHNhbXBsZVsxXSAtIGNvbG9yWzFdKSwgMikgKyBNYXRoLnBvdyhNYXRoLmFicyhzYW1wbGVbMl0gLSBjb2xvclsyXSksIDIpKTtcblxuICAgIGlmIChkaXN0IDwgbWluRGlzdCkge1xuICAgICAgbWluRGlzdCA9IGRpc3Q7XG4gICAgICBuZWFyZXN0ID0gaWR4O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZWFyZXN0O1xufTtcblxudmFyIGNoZWNrQ29sb3IgPSBmdW5jdGlvbiBjaGVja0NvbG9yKGxhYiwgb3B0aW9ucykge1xuICB2YXIgY29sb3IgPSBfY2hyb21hSnNbXCJkZWZhdWx0XCJdLmxhYihsYWIpO1xuXG4gIHZhciBoY2wgPSBjb2xvci5oY2woKTtcbiAgdmFyIHJnYiA9IGNvbG9yLnJnYigpO1xuXG4gIHZhciBjb21wTGFiID0gX2Nocm9tYUpzW1wiZGVmYXVsdFwiXS5yZ2IocmdiKS5sYWIoKTtcblxuICB2YXIgbGFiVG9sZXJhbmNlID0gMjtcbiAgcmV0dXJuIGhjbFswXSA+PSBvcHRpb25zLmh1ZU1pbiAmJiBoY2xbMF0gPD0gb3B0aW9ucy5odWVNYXggJiYgaGNsWzFdID49IG9wdGlvbnMuY2hyb21hTWluICYmIGhjbFsxXSA8PSBvcHRpb25zLmNocm9tYU1heCAmJiBoY2xbMl0gPj0gb3B0aW9ucy5saWdodE1pbiAmJiBoY2xbMl0gPD0gb3B0aW9ucy5saWdodE1heCAmJiBjb21wTGFiWzBdID49IGxhYlswXSAtIGxhYlRvbGVyYW5jZSAmJiBjb21wTGFiWzBdIDw9IGxhYlswXSArIGxhYlRvbGVyYW5jZSAmJiBjb21wTGFiWzFdID49IGxhYlsxXSAtIGxhYlRvbGVyYW5jZSAmJiBjb21wTGFiWzFdIDw9IGxhYlsxXSArIGxhYlRvbGVyYW5jZSAmJiBjb21wTGFiWzJdID49IGxhYlsyXSAtIGxhYlRvbGVyYW5jZSAmJiBjb21wTGFiWzJdIDw9IGxhYlsyXSArIGxhYlRvbGVyYW5jZTtcbn07XG5cbnZhciBzb3J0QnlDb250cmFzdCA9IGZ1bmN0aW9uIHNvcnRCeUNvbnRyYXN0KGNvbG9yTGlzdCkge1xuICB2YXIgdW5zb3J0ZWRDb2xvcnMgPSBjb2xvckxpc3Quc2xpY2UoMCk7XG4gIHZhciBzb3J0ZWRDb2xvcnMgPSBbdW5zb3J0ZWRDb2xvcnMuc2hpZnQoKV07XG5cbiAgd2hpbGUgKHVuc29ydGVkQ29sb3JzLmxlbmd0aCA+IDApIHtcbiAgICB2YXIgbGFzdENvbG9yID0gc29ydGVkQ29sb3JzW3NvcnRlZENvbG9ycy5sZW5ndGggLSAxXTtcbiAgICB2YXIgbmVhcmVzdCA9IDA7XG4gICAgdmFyIG1heERpc3QgPSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUjtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdW5zb3J0ZWRDb2xvcnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBkaXN0ID0gTWF0aC5zcXJ0KE1hdGgucG93KE1hdGguYWJzKGxhc3RDb2xvclswXSAtIHVuc29ydGVkQ29sb3JzW2ldWzBdKSwgMikgKyBNYXRoLnBvdyhNYXRoLmFicyhsYXN0Q29sb3JbMV0gLSB1bnNvcnRlZENvbG9yc1tpXVsxXSksIDIpICsgTWF0aC5wb3coTWF0aC5hYnMobGFzdENvbG9yWzJdIC0gdW5zb3J0ZWRDb2xvcnNbaV1bMl0pLCAyKSk7XG5cbiAgICAgIGlmIChkaXN0ID4gbWF4RGlzdCkge1xuICAgICAgICBtYXhEaXN0ID0gZGlzdDtcbiAgICAgICAgbmVhcmVzdCA9IGk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc29ydGVkQ29sb3JzLnB1c2godW5zb3J0ZWRDb2xvcnMuc3BsaWNlKG5lYXJlc3QsIDEpWzBdKTtcbiAgfVxuXG4gIHJldHVybiBzb3J0ZWRDb2xvcnM7XG59O1xuXG52YXIgZGlzdGluY3RDb2xvcnMgPSBmdW5jdGlvbiBkaXN0aW5jdENvbG9ycygpIHtcbiAgdmFyIG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIHZhciBvcHRpb25zID0gX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdHMsIHt9LCBvcHRzKTtcblxuICBpZiAob3B0aW9ucy5jb3VudCA8PSAwKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuc2FtcGxlcyA8IG9wdGlvbnMuY291bnQgKiAzKSB7XG4gICAgb3B0aW9ucy5zYW1wbGVzID0gTWF0aC5jZWlsKG9wdGlvbnMuY291bnQgKiAzKTtcbiAgfVxuXG4gIHZhciBjb2xvcnMgPSBbXTtcbiAgdmFyIHpvbmVzUHJvdG8gPSBbXTtcbiAgdmFyIHNhbXBsZXMgPSBuZXcgU2V0KCk7XG4gIHZhciByYW5nZURpdmlkZXIgPSBNYXRoLmNlaWwoTWF0aC5jYnJ0KG9wdGlvbnMuc2FtcGxlcykpO1xuICB2YXIgaFN0ZXAgPSAob3B0aW9ucy5odWVNYXggLSBvcHRpb25zLmh1ZU1pbikgLyByYW5nZURpdmlkZXI7XG4gIHZhciBjU3RlcCA9IChvcHRpb25zLmNocm9tYU1heCAtIG9wdGlvbnMuY2hyb21hTWluKSAvIHJhbmdlRGl2aWRlcjtcbiAgdmFyIGxTdGVwID0gKG9wdGlvbnMubGlnaHRNYXggLSBvcHRpb25zLmxpZ2h0TWluKSAvIHJhbmdlRGl2aWRlcjtcblxuICBpZiAoaFN0ZXAgPD0gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignaHVlTWF4IG11c3QgYmUgZ3JlYXRlciB0aGFuIGh1ZU1pbiEnKTtcbiAgfVxuXG4gIGlmIChjU3RlcCA8PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjaHJvbWFNYXggbXVzdCBiZSBncmVhdGVyIHRoYW4gY2hyb21hTWluIScpO1xuICB9XG5cbiAgaWYgKGxTdGVwIDw9IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2xpZ2h0TWF4IG11c3QgYmUgZ3JlYXRlciB0aGFuIGxpZ2h0TWluIScpO1xuICB9XG5cbiAgZm9yICh2YXIgaCA9IG9wdGlvbnMuaHVlTWluICsgaFN0ZXAgLyAyOyBoIDw9IG9wdGlvbnMuaHVlTWF4OyBoICs9IGhTdGVwKSB7XG4gICAgZm9yICh2YXIgYyA9IG9wdGlvbnMuY2hyb21hTWluICsgY1N0ZXAgLyAyOyBjIDw9IG9wdGlvbnMuY2hyb21hTWF4OyBjICs9IGNTdGVwKSB7XG4gICAgICBmb3IgKHZhciBsID0gb3B0aW9ucy5saWdodE1pbiArIGxTdGVwIC8gMjsgbCA8PSBvcHRpb25zLmxpZ2h0TWF4OyBsICs9IGxTdGVwKSB7XG4gICAgICAgIHZhciBjb2xvciA9IF9jaHJvbWFKc1tcImRlZmF1bHRcIl0uaGNsKGgsIGMsIGwpLmxhYigpO1xuXG4gICAgICAgIGlmIChjaGVja0NvbG9yKGNvbG9yLCBvcHRpb25zKSkge1xuICAgICAgICAgIHNhbXBsZXMuYWRkKGNvbG9yLnRvU3RyaW5nKCkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgc2FtcGxlcyA9IEFycmF5LmZyb20oc2FtcGxlcyk7XG4gIHNhbXBsZXMgPSBzYW1wbGVzLm1hcChmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBpLnNwbGl0KCcsJykubWFwKGZ1bmN0aW9uIChqKSB7XG4gICAgICByZXR1cm4gcGFyc2VGbG9hdChqKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgaWYgKHNhbXBsZXMubGVuZ3RoIDwgb3B0aW9ucy5jb3VudCkge1xuICAgIHRocm93IG5ldyBFcnJvcignTm90IGVub3VnaCBzYW1wbGVzIHRvIGdlbmVyYXRlIHBhbGV0dGUsIGluY3JlYXNlIHNhbXBsZSBjb3VudC4nKTtcbiAgfVxuXG4gIHZhciBzbGljZVNpemUgPSBNYXRoLmZsb29yKHNhbXBsZXMubGVuZ3RoIC8gb3B0aW9ucy5jb3VudCk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzYW1wbGVzLmxlbmd0aDsgaSArPSBzbGljZVNpemUpIHtcbiAgICBjb2xvcnMucHVzaChzYW1wbGVzW2ldKTtcbiAgICB6b25lc1Byb3RvLnB1c2goW10pO1xuXG4gICAgaWYgKGNvbG9ycy5sZW5ndGggPj0gb3B0aW9ucy5jb3VudCkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgZm9yICh2YXIgc3RlcCA9IDE7IHN0ZXAgPD0gb3B0aW9ucy5xdWFsaXR5OyBzdGVwICs9IDEpIHtcbiAgICB2YXIgem9uZXMgPSAoMCwgX2RlZXBDbG9uZVtcImRlZmF1bHRcIl0pKHpvbmVzUHJvdG8pO1xuICAgIHZhciBzYW1wbGVMaXN0ID0gKDAsIF9kZWVwQ2xvbmVbXCJkZWZhdWx0XCJdKShzYW1wbGVzKTsgLy8gSW1tZWRpYXRlbHkgYWRkIHRoZSBjbG9zZXN0IHNhbXBsZSBmb3IgZWFjaCBjb2xvclxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGNvbG9ycy5sZW5ndGg7IF9pICs9IDEpIHtcbiAgICAgIHZhciBpZHggPSBnZXRDbG9zZXN0SW5kZXgoc2FtcGxlTGlzdCwgY29sb3JzW19pXSk7XG5cbiAgICAgIHpvbmVzW19pXS5wdXNoKHNhbXBsZUxpc3RbaWR4XSk7XG5cbiAgICAgIHNhbXBsZUxpc3Quc3BsaWNlKGlkeCwgMSk7XG4gICAgfSAvLyBGaW5kIGNsb3Nlc3QgY29sb3IgZm9yIGVhY2ggcmVtYWluaW5nIHNhbXBsZVxuXG5cbiAgICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBzYW1wbGVMaXN0Lmxlbmd0aDsgX2kyICs9IDEpIHtcbiAgICAgIHZhciBzYW1wbGUgPSBzYW1wbGVzW19pMl07XG4gICAgICB2YXIgbmVhcmVzdCA9IGdldENsb3Nlc3RJbmRleChjb2xvcnMsIHNhbXBsZSk7XG4gICAgICB6b25lc1tuZWFyZXN0XS5wdXNoKHNhbXBsZXNbX2kyXSk7XG4gICAgfVxuXG4gICAgdmFyIGxhc3RDb2xvcnMgPSAoMCwgX2RlZXBDbG9uZVtcImRlZmF1bHRcIl0pKGNvbG9ycyk7XG5cbiAgICBmb3IgKHZhciBfaTMgPSAwOyBfaTMgPCB6b25lcy5sZW5ndGg7IF9pMyArPSAxKSB7XG4gICAgICB2YXIgem9uZSA9IHpvbmVzW19pM107XG4gICAgICB2YXIgc2l6ZSA9IHpvbmUubGVuZ3RoO1xuICAgICAgdmFyIExzID0gW107XG4gICAgICB2YXIgQXMgPSBbXTtcbiAgICAgIHZhciBCcyA9IFtdO1xuXG4gICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoem9uZSksXG4gICAgICAgICAgX3N0ZXA7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgdmFyIF9zYW1wbGUgPSBfc3RlcC52YWx1ZTtcbiAgICAgICAgICBMcy5wdXNoKF9zYW1wbGVbMF0pO1xuICAgICAgICAgIEFzLnB1c2goX3NhbXBsZVsxXSk7XG4gICAgICAgICAgQnMucHVzaChfc2FtcGxlWzJdKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9pdGVyYXRvci5lKGVycik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBfaXRlcmF0b3IuZigpO1xuICAgICAgfVxuXG4gICAgICB2YXIgbEF2ZyA9IF91dGlsc1tcImRlZmF1bHRcIl0uc3VtKExzKSAvIHNpemU7XG4gICAgICB2YXIgYUF2ZyA9IF91dGlsc1tcImRlZmF1bHRcIl0uc3VtKEFzKSAvIHNpemU7XG4gICAgICB2YXIgYkF2ZyA9IF91dGlsc1tcImRlZmF1bHRcIl0uc3VtKEJzKSAvIHNpemU7XG4gICAgICBjb2xvcnNbX2kzXSA9IFtsQXZnLCBhQXZnLCBiQXZnXTtcbiAgICB9XG5cbiAgICBpZiAoKDAsIF9kZWVwRXF1YWxzW1wiZGVmYXVsdFwiXSkobGFzdENvbG9ycywgY29sb3JzKSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgY29sb3JzID0gc29ydEJ5Q29udHJhc3QoY29sb3JzKTtcbiAgcmV0dXJuIGNvbG9ycy5tYXAoZnVuY3Rpb24gKGxhYikge1xuICAgIHJldHVybiBfY2hyb21hSnNbXCJkZWZhdWx0XCJdLmxhYihsYWIpO1xuICB9KTtcbn07XG5cbnZhciBfZGVmYXVsdCA9IGRpc3RpbmN0Q29sb3JzO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBfZGVmYXVsdDsiLCAiLyohIGh0dHBzOi8vbXRocy5iZS9oZSB2MS4yLjAgYnkgQG1hdGhpYXMgfCBNSVQgbGljZW5zZSAqL1xuOyhmdW5jdGlvbihyb290KSB7XG5cblx0Ly8gRGV0ZWN0IGZyZWUgdmFyaWFibGVzIGBleHBvcnRzYC5cblx0dmFyIGZyZWVFeHBvcnRzID0gdHlwZW9mIGV4cG9ydHMgPT0gJ29iamVjdCcgJiYgZXhwb3J0cztcblxuXHQvLyBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgbW9kdWxlYC5cblx0dmFyIGZyZWVNb2R1bGUgPSB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJlxuXHRcdG1vZHVsZS5leHBvcnRzID09IGZyZWVFeHBvcnRzICYmIG1vZHVsZTtcblxuXHQvLyBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCwgZnJvbSBOb2RlLmpzIG9yIEJyb3dzZXJpZmllZCBjb2RlLFxuXHQvLyBhbmQgdXNlIGl0IGFzIGByb290YC5cblx0dmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbDtcblx0aWYgKGZyZWVHbG9iYWwuZ2xvYmFsID09PSBmcmVlR2xvYmFsIHx8IGZyZWVHbG9iYWwud2luZG93ID09PSBmcmVlR2xvYmFsKSB7XG5cdFx0cm9vdCA9IGZyZWVHbG9iYWw7XG5cdH1cblxuXHQvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuXHQvLyBBbGwgYXN0cmFsIHN5bWJvbHMuXG5cdHZhciByZWdleEFzdHJhbFN5bWJvbHMgPSAvW1xcdUQ4MDAtXFx1REJGRl1bXFx1REMwMC1cXHVERkZGXS9nO1xuXHQvLyBBbGwgQVNDSUkgc3ltYm9scyAobm90IGp1c3QgcHJpbnRhYmxlIEFTQ0lJKSBleGNlcHQgdGhvc2UgbGlzdGVkIGluIHRoZVxuXHQvLyBmaXJzdCBjb2x1bW4gb2YgdGhlIG92ZXJyaWRlcyB0YWJsZS5cblx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjdGFibGUtY2hhcnJlZi1vdmVycmlkZXNcblx0dmFyIHJlZ2V4QXNjaWlXaGl0ZWxpc3QgPSAvW1xceDAxLVxceDdGXS9nO1xuXHQvLyBBbGwgQk1QIHN5bWJvbHMgdGhhdCBhcmUgbm90IEFTQ0lJIG5ld2xpbmVzLCBwcmludGFibGUgQVNDSUkgc3ltYm9scywgb3Jcblx0Ly8gY29kZSBwb2ludHMgbGlzdGVkIGluIHRoZSBmaXJzdCBjb2x1bW4gb2YgdGhlIG92ZXJyaWRlcyB0YWJsZSBvblxuXHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zeW50YXguaHRtbCN0YWJsZS1jaGFycmVmLW92ZXJyaWRlcy5cblx0dmFyIHJlZ2V4Qm1wV2hpdGVsaXN0ID0gL1tcXHgwMS1cXHRcXHgwQlxcZlxceDBFLVxceDFGXFx4N0ZcXHg4MVxceDhEXFx4OEZcXHg5MFxceDlEXFx4QTAtXFx1RkZGRl0vZztcblxuXHR2YXIgcmVnZXhFbmNvZGVOb25Bc2NpaSA9IC88XFx1MjBEMnw9XFx1MjBFNXw+XFx1MjBEMnxcXHUyMDVGXFx1MjAwQXxcXHUyMTlEXFx1MDMzOHxcXHUyMjAyXFx1MDMzOHxcXHUyMjIwXFx1MjBEMnxcXHUyMjI5XFx1RkUwMHxcXHUyMjJBXFx1RkUwMHxcXHUyMjNDXFx1MjBEMnxcXHUyMjNEXFx1MDMzMXxcXHUyMjNFXFx1MDMzM3xcXHUyMjQyXFx1MDMzOHxcXHUyMjRCXFx1MDMzOHxcXHUyMjREXFx1MjBEMnxcXHUyMjRFXFx1MDMzOHxcXHUyMjRGXFx1MDMzOHxcXHUyMjUwXFx1MDMzOHxcXHUyMjYxXFx1MjBFNXxcXHUyMjY0XFx1MjBEMnxcXHUyMjY1XFx1MjBEMnxcXHUyMjY2XFx1MDMzOHxcXHUyMjY3XFx1MDMzOHxcXHUyMjY4XFx1RkUwMHxcXHUyMjY5XFx1RkUwMHxcXHUyMjZBXFx1MDMzOHxcXHUyMjZBXFx1MjBEMnxcXHUyMjZCXFx1MDMzOHxcXHUyMjZCXFx1MjBEMnxcXHUyMjdGXFx1MDMzOHxcXHUyMjgyXFx1MjBEMnxcXHUyMjgzXFx1MjBEMnxcXHUyMjhBXFx1RkUwMHxcXHUyMjhCXFx1RkUwMHxcXHUyMjhGXFx1MDMzOHxcXHUyMjkwXFx1MDMzOHxcXHUyMjkzXFx1RkUwMHxcXHUyMjk0XFx1RkUwMHxcXHUyMkI0XFx1MjBEMnxcXHUyMkI1XFx1MjBEMnxcXHUyMkQ4XFx1MDMzOHxcXHUyMkQ5XFx1MDMzOHxcXHUyMkRBXFx1RkUwMHxcXHUyMkRCXFx1RkUwMHxcXHUyMkY1XFx1MDMzOHxcXHUyMkY5XFx1MDMzOHxcXHUyOTMzXFx1MDMzOHxcXHUyOUNGXFx1MDMzOHxcXHUyOUQwXFx1MDMzOHxcXHUyQTZEXFx1MDMzOHxcXHUyQTcwXFx1MDMzOHxcXHUyQTdEXFx1MDMzOHxcXHUyQTdFXFx1MDMzOHxcXHUyQUExXFx1MDMzOHxcXHUyQUEyXFx1MDMzOHxcXHUyQUFDXFx1RkUwMHxcXHUyQUFEXFx1RkUwMHxcXHUyQUFGXFx1MDMzOHxcXHUyQUIwXFx1MDMzOHxcXHUyQUM1XFx1MDMzOHxcXHUyQUM2XFx1MDMzOHxcXHUyQUNCXFx1RkUwMHxcXHUyQUNDXFx1RkUwMHxcXHUyQUZEXFx1MjBFNXxbXFx4QTAtXFx1MDExM1xcdTAxMTYtXFx1MDEyMlxcdTAxMjQtXFx1MDEyQlxcdTAxMkUtXFx1MDE0RFxcdTAxNTAtXFx1MDE3RVxcdTAxOTJcXHUwMUI1XFx1MDFGNVxcdTAyMzdcXHUwMkM2XFx1MDJDN1xcdTAyRDgtXFx1MDJERFxcdTAzMTFcXHUwMzkxLVxcdTAzQTFcXHUwM0EzLVxcdTAzQTlcXHUwM0IxLVxcdTAzQzlcXHUwM0QxXFx1MDNEMlxcdTAzRDVcXHUwM0Q2XFx1MDNEQ1xcdTAzRERcXHUwM0YwXFx1MDNGMVxcdTAzRjVcXHUwM0Y2XFx1MDQwMS1cXHUwNDBDXFx1MDQwRS1cXHUwNDRGXFx1MDQ1MS1cXHUwNDVDXFx1MDQ1RVxcdTA0NUZcXHUyMDAyLVxcdTIwMDVcXHUyMDA3LVxcdTIwMTBcXHUyMDEzLVxcdTIwMTZcXHUyMDE4LVxcdTIwMUFcXHUyMDFDLVxcdTIwMUVcXHUyMDIwLVxcdTIwMjJcXHUyMDI1XFx1MjAyNlxcdTIwMzAtXFx1MjAzNVxcdTIwMzlcXHUyMDNBXFx1MjAzRVxcdTIwNDFcXHUyMDQzXFx1MjA0NFxcdTIwNEZcXHUyMDU3XFx1MjA1Ri1cXHUyMDYzXFx1MjBBQ1xcdTIwREJcXHUyMERDXFx1MjEwMlxcdTIxMDVcXHUyMTBBLVxcdTIxMTNcXHUyMTE1LVxcdTIxMUVcXHUyMTIyXFx1MjEyNFxcdTIxMjctXFx1MjEyOVxcdTIxMkNcXHUyMTJEXFx1MjEyRi1cXHUyMTMxXFx1MjEzMy1cXHUyMTM4XFx1MjE0NS1cXHUyMTQ4XFx1MjE1My1cXHUyMTVFXFx1MjE5MC1cXHUyMTlCXFx1MjE5RC1cXHUyMUE3XFx1MjFBOS1cXHUyMUFFXFx1MjFCMC1cXHUyMUIzXFx1MjFCNS1cXHUyMUI3XFx1MjFCQS1cXHUyMURCXFx1MjFERFxcdTIxRTRcXHUyMUU1XFx1MjFGNVxcdTIxRkQtXFx1MjIwNVxcdTIyMDctXFx1MjIwOVxcdTIyMEJcXHUyMjBDXFx1MjIwRi1cXHUyMjE0XFx1MjIxNi1cXHUyMjE4XFx1MjIxQVxcdTIyMUQtXFx1MjIzOFxcdTIyM0EtXFx1MjI1N1xcdTIyNTlcXHUyMjVBXFx1MjI1Q1xcdTIyNUYtXFx1MjI2MlxcdTIyNjQtXFx1MjI4QlxcdTIyOEQtXFx1MjI5QlxcdTIyOUQtXFx1MjJBNVxcdTIyQTctXFx1MjJCMFxcdTIyQjItXFx1MjJCQlxcdTIyQkQtXFx1MjJEQlxcdTIyREUtXFx1MjJFM1xcdTIyRTYtXFx1MjJGN1xcdTIyRjktXFx1MjJGRVxcdTIzMDVcXHUyMzA2XFx1MjMwOC1cXHUyMzEwXFx1MjMxMlxcdTIzMTNcXHUyMzE1XFx1MjMxNlxcdTIzMUMtXFx1MjMxRlxcdTIzMjJcXHUyMzIzXFx1MjMyRFxcdTIzMkVcXHUyMzM2XFx1MjMzRFxcdTIzM0ZcXHUyMzdDXFx1MjNCMFxcdTIzQjFcXHUyM0I0LVxcdTIzQjZcXHUyM0RDLVxcdTIzREZcXHUyM0UyXFx1MjNFN1xcdTI0MjNcXHUyNEM4XFx1MjUwMFxcdTI1MDJcXHUyNTBDXFx1MjUxMFxcdTI1MTRcXHUyNTE4XFx1MjUxQ1xcdTI1MjRcXHUyNTJDXFx1MjUzNFxcdTI1M0NcXHUyNTUwLVxcdTI1NkNcXHUyNTgwXFx1MjU4NFxcdTI1ODhcXHUyNTkxLVxcdTI1OTNcXHUyNUExXFx1MjVBQVxcdTI1QUJcXHUyNUFEXFx1MjVBRVxcdTI1QjFcXHUyNUIzLVxcdTI1QjVcXHUyNUI4XFx1MjVCOVxcdTI1QkQtXFx1MjVCRlxcdTI1QzJcXHUyNUMzXFx1MjVDQVxcdTI1Q0JcXHUyNUVDXFx1MjVFRlxcdTI1RjgtXFx1MjVGQ1xcdTI2MDVcXHUyNjA2XFx1MjYwRVxcdTI2NDBcXHUyNjQyXFx1MjY2MFxcdTI2NjNcXHUyNjY1XFx1MjY2NlxcdTI2NkFcXHUyNjZELVxcdTI2NkZcXHUyNzEzXFx1MjcxN1xcdTI3MjBcXHUyNzM2XFx1Mjc1OFxcdTI3NzJcXHUyNzczXFx1MjdDOFxcdTI3QzlcXHUyN0U2LVxcdTI3RURcXHUyN0Y1LVxcdTI3RkFcXHUyN0ZDXFx1MjdGRlxcdTI5MDItXFx1MjkwNVxcdTI5MEMtXFx1MjkxM1xcdTI5MTZcXHUyOTE5LVxcdTI5MjBcXHUyOTIzLVxcdTI5MkFcXHUyOTMzXFx1MjkzNS1cXHUyOTM5XFx1MjkzQ1xcdTI5M0RcXHUyOTQ1XFx1Mjk0OC1cXHUyOTRCXFx1Mjk0RS1cXHUyOTc2XFx1Mjk3OFxcdTI5NzlcXHUyOTdCLVxcdTI5N0ZcXHUyOTg1XFx1Mjk4NlxcdTI5OEItXFx1Mjk5NlxcdTI5OUFcXHUyOTlDXFx1Mjk5RFxcdTI5QTQtXFx1MjlCN1xcdTI5QjlcXHUyOUJCXFx1MjlCQ1xcdTI5QkUtXFx1MjlDNVxcdTI5QzlcXHUyOUNELVxcdTI5RDBcXHUyOURDLVxcdTI5REVcXHUyOUUzLVxcdTI5RTVcXHUyOUVCXFx1MjlGNFxcdTI5RjZcXHUyQTAwLVxcdTJBMDJcXHUyQTA0XFx1MkEwNlxcdTJBMENcXHUyQTBEXFx1MkExMC1cXHUyQTE3XFx1MkEyMi1cXHUyQTI3XFx1MkEyOVxcdTJBMkFcXHUyQTJELVxcdTJBMzFcXHUyQTMzLVxcdTJBM0NcXHUyQTNGXFx1MkE0MFxcdTJBNDItXFx1MkE0RFxcdTJBNTBcXHUyQTUzLVxcdTJBNThcXHUyQTVBLVxcdTJBNURcXHUyQTVGXFx1MkE2NlxcdTJBNkFcXHUyQTZELVxcdTJBNzVcXHUyQTc3LVxcdTJBOUFcXHUyQTlELVxcdTJBQTJcXHUyQUE0LVxcdTJBQjBcXHUyQUIzLVxcdTJBQzhcXHUyQUNCXFx1MkFDQ1xcdTJBQ0YtXFx1MkFEQlxcdTJBRTRcXHUyQUU2LVxcdTJBRTlcXHUyQUVCLVxcdTJBRjNcXHUyQUZEXFx1RkIwMC1cXHVGQjA0XXxcXHVEODM1W1xcdURDOUNcXHVEQzlFXFx1REM5RlxcdURDQTJcXHVEQ0E1XFx1RENBNlxcdURDQTktXFx1RENBQ1xcdURDQUUtXFx1RENCOVxcdURDQkJcXHVEQ0JELVxcdURDQzNcXHVEQ0M1LVxcdURDQ0ZcXHVERDA0XFx1REQwNVxcdUREMDctXFx1REQwQVxcdUREMEQtXFx1REQxNFxcdUREMTYtXFx1REQxQ1xcdUREMUUtXFx1REQzOVxcdUREM0ItXFx1REQzRVxcdURENDAtXFx1REQ0NFxcdURENDZcXHVERDRBLVxcdURENTBcXHVERDUyLVxcdURENkJdL2c7XG5cdHZhciBlbmNvZGVNYXAgPSB7J1xceEFEJzonc2h5JywnXFx1MjAwQyc6J3p3bmonLCdcXHUyMDBEJzonendqJywnXFx1MjAwRSc6J2xybScsJ1xcdTIwNjMnOidpYycsJ1xcdTIwNjInOidpdCcsJ1xcdTIwNjEnOidhZicsJ1xcdTIwMEYnOidybG0nLCdcXHUyMDBCJzonWmVyb1dpZHRoU3BhY2UnLCdcXHUyMDYwJzonTm9CcmVhaycsJ1xcdTAzMTEnOidEb3duQnJldmUnLCdcXHUyMERCJzondGRvdCcsJ1xcdTIwREMnOidEb3REb3QnLCdcXHQnOidUYWInLCdcXG4nOidOZXdMaW5lJywnXFx1MjAwOCc6J3B1bmNzcCcsJ1xcdTIwNUYnOidNZWRpdW1TcGFjZScsJ1xcdTIwMDknOid0aGluc3AnLCdcXHUyMDBBJzonaGFpcnNwJywnXFx1MjAwNCc6J2Vtc3AxMycsJ1xcdTIwMDInOidlbnNwJywnXFx1MjAwNSc6J2Vtc3AxNCcsJ1xcdTIwMDMnOidlbXNwJywnXFx1MjAwNyc6J251bXNwJywnXFx4QTAnOiduYnNwJywnXFx1MjA1RlxcdTIwMEEnOidUaGlja1NwYWNlJywnXFx1MjAzRSc6J29saW5lJywnXyc6J2xvd2JhcicsJ1xcdTIwMTAnOidkYXNoJywnXFx1MjAxMyc6J25kYXNoJywnXFx1MjAxNCc6J21kYXNoJywnXFx1MjAxNSc6J2hvcmJhcicsJywnOidjb21tYScsJzsnOidzZW1pJywnXFx1MjA0Ric6J2JzZW1pJywnOic6J2NvbG9uJywnXFx1MkE3NCc6J0NvbG9uZScsJyEnOidleGNsJywnXFx4QTEnOidpZXhjbCcsJz8nOidxdWVzdCcsJ1xceEJGJzonaXF1ZXN0JywnLic6J3BlcmlvZCcsJ1xcdTIwMjUnOidubGRyJywnXFx1MjAyNic6J21sZHInLCdcXHhCNyc6J21pZGRvdCcsJ1xcJyc6J2Fwb3MnLCdcXHUyMDE4JzonbHNxdW8nLCdcXHUyMDE5JzoncnNxdW8nLCdcXHUyMDFBJzonc2JxdW8nLCdcXHUyMDM5JzonbHNhcXVvJywnXFx1MjAzQSc6J3JzYXF1bycsJ1wiJzoncXVvdCcsJ1xcdTIwMUMnOidsZHF1bycsJ1xcdTIwMUQnOidyZHF1bycsJ1xcdTIwMUUnOidiZHF1bycsJ1xceEFCJzonbGFxdW8nLCdcXHhCQic6J3JhcXVvJywnKCc6J2xwYXInLCcpJzoncnBhcicsJ1snOidsc3FiJywnXSc6J3JzcWInLCd7JzonbGN1YicsJ30nOidyY3ViJywnXFx1MjMwOCc6J2xjZWlsJywnXFx1MjMwOSc6J3JjZWlsJywnXFx1MjMwQSc6J2xmbG9vcicsJ1xcdTIzMEInOidyZmxvb3InLCdcXHUyOTg1JzonbG9wYXInLCdcXHUyOTg2Jzoncm9wYXInLCdcXHUyOThCJzonbGJya2UnLCdcXHUyOThDJzoncmJya2UnLCdcXHUyOThEJzonbGJya3NsdScsJ1xcdTI5OEUnOidyYnJrc2xkJywnXFx1Mjk4Ric6J2xicmtzbGQnLCdcXHUyOTkwJzoncmJya3NsdScsJ1xcdTI5OTEnOidsYW5nZCcsJ1xcdTI5OTInOidyYW5nZCcsJ1xcdTI5OTMnOidscGFybHQnLCdcXHUyOTk0JzoncnBhcmd0JywnXFx1Mjk5NSc6J2d0bFBhcicsJ1xcdTI5OTYnOidsdHJQYXInLCdcXHUyN0U2JzonbG9icmsnLCdcXHUyN0U3Jzoncm9icmsnLCdcXHUyN0U4JzonbGFuZycsJ1xcdTI3RTknOidyYW5nJywnXFx1MjdFQSc6J0xhbmcnLCdcXHUyN0VCJzonUmFuZycsJ1xcdTI3RUMnOidsb2FuZycsJ1xcdTI3RUQnOidyb2FuZycsJ1xcdTI3NzInOidsYmJyaycsJ1xcdTI3NzMnOidyYmJyaycsJ1xcdTIwMTYnOidWZXJ0JywnXFx4QTcnOidzZWN0JywnXFx4QjYnOidwYXJhJywnQCc6J2NvbW1hdCcsJyonOidhc3QnLCcvJzonc29sJywndW5kZWZpbmVkJzpudWxsLCcmJzonYW1wJywnIyc6J251bScsJyUnOidwZXJjbnQnLCdcXHUyMDMwJzoncGVybWlsJywnXFx1MjAzMSc6J3BlcnRlbmsnLCdcXHUyMDIwJzonZGFnZ2VyJywnXFx1MjAyMSc6J0RhZ2dlcicsJ1xcdTIwMjInOididWxsJywnXFx1MjA0Myc6J2h5YnVsbCcsJ1xcdTIwMzInOidwcmltZScsJ1xcdTIwMzMnOidQcmltZScsJ1xcdTIwMzQnOid0cHJpbWUnLCdcXHUyMDU3JzoncXByaW1lJywnXFx1MjAzNSc6J2JwcmltZScsJ1xcdTIwNDEnOidjYXJldCcsJ2AnOidncmF2ZScsJ1xceEI0JzonYWN1dGUnLCdcXHUwMkRDJzondGlsZGUnLCdeJzonSGF0JywnXFx4QUYnOidtYWNyJywnXFx1MDJEOCc6J2JyZXZlJywnXFx1MDJEOSc6J2RvdCcsJ1xceEE4JzonZGllJywnXFx1MDJEQSc6J3JpbmcnLCdcXHUwMkREJzonZGJsYWMnLCdcXHhCOCc6J2NlZGlsJywnXFx1MDJEQic6J29nb24nLCdcXHUwMkM2JzonY2lyYycsJ1xcdTAyQzcnOidjYXJvbicsJ1xceEIwJzonZGVnJywnXFx4QTknOidjb3B5JywnXFx4QUUnOidyZWcnLCdcXHUyMTE3JzonY29weXNyJywnXFx1MjExOCc6J3dwJywnXFx1MjExRSc6J3J4JywnXFx1MjEyNyc6J21obycsJ1xcdTIxMjknOidpaW90YScsJ1xcdTIxOTAnOidsYXJyJywnXFx1MjE5QSc6J25sYXJyJywnXFx1MjE5Mic6J3JhcnInLCdcXHUyMTlCJzonbnJhcnInLCdcXHUyMTkxJzondWFycicsJ1xcdTIxOTMnOidkYXJyJywnXFx1MjE5NCc6J2hhcnInLCdcXHUyMUFFJzonbmhhcnInLCdcXHUyMTk1JzondmFycicsJ1xcdTIxOTYnOidud2FycicsJ1xcdTIxOTcnOiduZWFycicsJ1xcdTIxOTgnOidzZWFycicsJ1xcdTIxOTknOidzd2FycicsJ1xcdTIxOUQnOidyYXJydycsJ1xcdTIxOURcXHUwMzM4JzonbnJhcnJ3JywnXFx1MjE5RSc6J0xhcnInLCdcXHUyMTlGJzonVWFycicsJ1xcdTIxQTAnOidSYXJyJywnXFx1MjFBMSc6J0RhcnInLCdcXHUyMUEyJzonbGFycnRsJywnXFx1MjFBMyc6J3JhcnJ0bCcsJ1xcdTIxQTQnOidtYXBzdG9sZWZ0JywnXFx1MjFBNSc6J21hcHN0b3VwJywnXFx1MjFBNic6J21hcCcsJ1xcdTIxQTcnOidtYXBzdG9kb3duJywnXFx1MjFBOSc6J2xhcnJoaycsJ1xcdTIxQUEnOidyYXJyaGsnLCdcXHUyMUFCJzonbGFycmxwJywnXFx1MjFBQyc6J3JhcnJscCcsJ1xcdTIxQUQnOidoYXJydycsJ1xcdTIxQjAnOidsc2gnLCdcXHUyMUIxJzoncnNoJywnXFx1MjFCMic6J2xkc2gnLCdcXHUyMUIzJzoncmRzaCcsJ1xcdTIxQjUnOidjcmFycicsJ1xcdTIxQjYnOidjdWxhcnInLCdcXHUyMUI3JzonY3VyYXJyJywnXFx1MjFCQSc6J29sYXJyJywnXFx1MjFCQic6J29yYXJyJywnXFx1MjFCQyc6J2xoYXJ1JywnXFx1MjFCRCc6J2xoYXJkJywnXFx1MjFCRSc6J3VoYXJyJywnXFx1MjFCRic6J3VoYXJsJywnXFx1MjFDMCc6J3JoYXJ1JywnXFx1MjFDMSc6J3JoYXJkJywnXFx1MjFDMic6J2RoYXJyJywnXFx1MjFDMyc6J2RoYXJsJywnXFx1MjFDNCc6J3JsYXJyJywnXFx1MjFDNSc6J3VkYXJyJywnXFx1MjFDNic6J2xyYXJyJywnXFx1MjFDNyc6J2xsYXJyJywnXFx1MjFDOCc6J3V1YXJyJywnXFx1MjFDOSc6J3JyYXJyJywnXFx1MjFDQSc6J2RkYXJyJywnXFx1MjFDQic6J2xyaGFyJywnXFx1MjFDQyc6J3JsaGFyJywnXFx1MjFEMCc6J2xBcnInLCdcXHUyMUNEJzonbmxBcnInLCdcXHUyMUQxJzondUFycicsJ1xcdTIxRDInOidyQXJyJywnXFx1MjFDRic6J25yQXJyJywnXFx1MjFEMyc6J2RBcnInLCdcXHUyMUQ0JzonaWZmJywnXFx1MjFDRSc6J25oQXJyJywnXFx1MjFENSc6J3ZBcnInLCdcXHUyMUQ2JzonbndBcnInLCdcXHUyMUQ3JzonbmVBcnInLCdcXHUyMUQ4Jzonc2VBcnInLCdcXHUyMUQ5Jzonc3dBcnInLCdcXHUyMURBJzonbEFhcnInLCdcXHUyMURCJzonckFhcnInLCdcXHUyMUREJzonemlncmFycicsJ1xcdTIxRTQnOidsYXJyYicsJ1xcdTIxRTUnOidyYXJyYicsJ1xcdTIxRjUnOidkdWFycicsJ1xcdTIxRkQnOidsb2FycicsJ1xcdTIxRkUnOidyb2FycicsJ1xcdTIxRkYnOidob2FycicsJ1xcdTIyMDAnOidmb3JhbGwnLCdcXHUyMjAxJzonY29tcCcsJ1xcdTIyMDInOidwYXJ0JywnXFx1MjIwMlxcdTAzMzgnOiducGFydCcsJ1xcdTIyMDMnOidleGlzdCcsJ1xcdTIyMDQnOiduZXhpc3QnLCdcXHUyMjA1JzonZW1wdHknLCdcXHUyMjA3JzonRGVsJywnXFx1MjIwOCc6J2luJywnXFx1MjIwOSc6J25vdGluJywnXFx1MjIwQic6J25pJywnXFx1MjIwQyc6J25vdG5pJywnXFx1MDNGNic6J2JlcHNpJywnXFx1MjIwRic6J3Byb2QnLCdcXHUyMjEwJzonY29wcm9kJywnXFx1MjIxMSc6J3N1bScsJysnOidwbHVzJywnXFx4QjEnOidwbScsJ1xceEY3JzonZGl2JywnXFx4RDcnOid0aW1lcycsJzwnOidsdCcsJ1xcdTIyNkUnOidubHQnLCc8XFx1MjBEMic6J252bHQnLCc9JzonZXF1YWxzJywnXFx1MjI2MCc6J25lJywnPVxcdTIwRTUnOidibmUnLCdcXHUyQTc1JzonRXF1YWwnLCc+JzonZ3QnLCdcXHUyMjZGJzonbmd0JywnPlxcdTIwRDInOidudmd0JywnXFx4QUMnOidub3QnLCd8JzondmVydCcsJ1xceEE2JzonYnJ2YmFyJywnXFx1MjIxMic6J21pbnVzJywnXFx1MjIxMyc6J21wJywnXFx1MjIxNCc6J3BsdXNkbycsJ1xcdTIwNDQnOidmcmFzbCcsJ1xcdTIyMTYnOidzZXRtbicsJ1xcdTIyMTcnOidsb3dhc3QnLCdcXHUyMjE4JzonY29tcGZuJywnXFx1MjIxQSc6J1NxcnQnLCdcXHUyMjFEJzoncHJvcCcsJ1xcdTIyMUUnOidpbmZpbicsJ1xcdTIyMUYnOidhbmdydCcsJ1xcdTIyMjAnOidhbmcnLCdcXHUyMjIwXFx1MjBEMic6J25hbmcnLCdcXHUyMjIxJzonYW5nbXNkJywnXFx1MjIyMic6J2FuZ3NwaCcsJ1xcdTIyMjMnOidtaWQnLCdcXHUyMjI0Jzonbm1pZCcsJ1xcdTIyMjUnOidwYXInLCdcXHUyMjI2JzonbnBhcicsJ1xcdTIyMjcnOidhbmQnLCdcXHUyMjI4Jzonb3InLCdcXHUyMjI5JzonY2FwJywnXFx1MjIyOVxcdUZFMDAnOidjYXBzJywnXFx1MjIyQSc6J2N1cCcsJ1xcdTIyMkFcXHVGRTAwJzonY3VwcycsJ1xcdTIyMkInOidpbnQnLCdcXHUyMjJDJzonSW50JywnXFx1MjIyRCc6J3RpbnQnLCdcXHUyQTBDJzoncWludCcsJ1xcdTIyMkUnOidvaW50JywnXFx1MjIyRic6J0NvbmludCcsJ1xcdTIyMzAnOidDY29uaW50JywnXFx1MjIzMSc6J2N3aW50JywnXFx1MjIzMic6J2N3Y29uaW50JywnXFx1MjIzMyc6J2F3Y29uaW50JywnXFx1MjIzNCc6J3RoZXJlNCcsJ1xcdTIyMzUnOidiZWNhdXMnLCdcXHUyMjM2JzoncmF0aW8nLCdcXHUyMjM3JzonQ29sb24nLCdcXHUyMjM4JzonbWludXNkJywnXFx1MjIzQSc6J21ERG90JywnXFx1MjIzQic6J2hvbXRodCcsJ1xcdTIyM0MnOidzaW0nLCdcXHUyMjQxJzonbnNpbScsJ1xcdTIyM0NcXHUyMEQyJzonbnZzaW0nLCdcXHUyMjNEJzonYnNpbScsJ1xcdTIyM0RcXHUwMzMxJzoncmFjZScsJ1xcdTIyM0UnOidhYycsJ1xcdTIyM0VcXHUwMzMzJzonYWNFJywnXFx1MjIzRic6J2FjZCcsJ1xcdTIyNDAnOid3cicsJ1xcdTIyNDInOidlc2ltJywnXFx1MjI0MlxcdTAzMzgnOiduZXNpbScsJ1xcdTIyNDMnOidzaW1lJywnXFx1MjI0NCc6J25zaW1lJywnXFx1MjI0NSc6J2NvbmcnLCdcXHUyMjQ3JzonbmNvbmcnLCdcXHUyMjQ2Jzonc2ltbmUnLCdcXHUyMjQ4JzonYXAnLCdcXHUyMjQ5JzonbmFwJywnXFx1MjI0QSc6J2FwZScsJ1xcdTIyNEInOidhcGlkJywnXFx1MjI0QlxcdTAzMzgnOiduYXBpZCcsJ1xcdTIyNEMnOidiY29uZycsJ1xcdTIyNEQnOidDdXBDYXAnLCdcXHUyMjZEJzonTm90Q3VwQ2FwJywnXFx1MjI0RFxcdTIwRDInOidudmFwJywnXFx1MjI0RSc6J2J1bXAnLCdcXHUyMjRFXFx1MDMzOCc6J25idW1wJywnXFx1MjI0Ric6J2J1bXBlJywnXFx1MjI0RlxcdTAzMzgnOiduYnVtcGUnLCdcXHUyMjUwJzonZG90ZXEnLCdcXHUyMjUwXFx1MDMzOCc6J25lZG90JywnXFx1MjI1MSc6J2VEb3QnLCdcXHUyMjUyJzonZWZEb3QnLCdcXHUyMjUzJzonZXJEb3QnLCdcXHUyMjU0JzonY29sb25lJywnXFx1MjI1NSc6J2Vjb2xvbicsJ1xcdTIyNTYnOidlY2lyJywnXFx1MjI1Nyc6J2NpcmUnLCdcXHUyMjU5Jzond2VkZ2VxJywnXFx1MjI1QSc6J3ZlZWVxJywnXFx1MjI1Qyc6J3RyaWUnLCdcXHUyMjVGJzonZXF1ZXN0JywnXFx1MjI2MSc6J2VxdWl2JywnXFx1MjI2Mic6J25lcXVpdicsJ1xcdTIyNjFcXHUyMEU1JzonYm5lcXVpdicsJ1xcdTIyNjQnOidsZScsJ1xcdTIyNzAnOidubGUnLCdcXHUyMjY0XFx1MjBEMic6J252bGUnLCdcXHUyMjY1JzonZ2UnLCdcXHUyMjcxJzonbmdlJywnXFx1MjI2NVxcdTIwRDInOidudmdlJywnXFx1MjI2Nic6J2xFJywnXFx1MjI2NlxcdTAzMzgnOidubEUnLCdcXHUyMjY3JzonZ0UnLCdcXHUyMjY3XFx1MDMzOCc6J25nRScsJ1xcdTIyNjhcXHVGRTAwJzonbHZuRScsJ1xcdTIyNjgnOidsbkUnLCdcXHUyMjY5JzonZ25FJywnXFx1MjI2OVxcdUZFMDAnOidndm5FJywnXFx1MjI2QSc6J2xsJywnXFx1MjI2QVxcdTAzMzgnOiduTHR2JywnXFx1MjI2QVxcdTIwRDInOiduTHQnLCdcXHUyMjZCJzonZ2cnLCdcXHUyMjZCXFx1MDMzOCc6J25HdHYnLCdcXHUyMjZCXFx1MjBEMic6J25HdCcsJ1xcdTIyNkMnOid0d2l4dCcsJ1xcdTIyNzInOidsc2ltJywnXFx1MjI3NCc6J25sc2ltJywnXFx1MjI3Myc6J2dzaW0nLCdcXHUyMjc1JzonbmdzaW0nLCdcXHUyMjc2JzonbGcnLCdcXHUyMjc4JzonbnRsZycsJ1xcdTIyNzcnOidnbCcsJ1xcdTIyNzknOidudGdsJywnXFx1MjI3QSc6J3ByJywnXFx1MjI4MCc6J25wcicsJ1xcdTIyN0InOidzYycsJ1xcdTIyODEnOiduc2MnLCdcXHUyMjdDJzoncHJjdWUnLCdcXHUyMkUwJzonbnByY3VlJywnXFx1MjI3RCc6J3NjY3VlJywnXFx1MjJFMSc6J25zY2N1ZScsJ1xcdTIyN0UnOidwcnNpbScsJ1xcdTIyN0YnOidzY3NpbScsJ1xcdTIyN0ZcXHUwMzM4JzonTm90U3VjY2VlZHNUaWxkZScsJ1xcdTIyODInOidzdWInLCdcXHUyMjg0JzonbnN1YicsJ1xcdTIyODJcXHUyMEQyJzondm5zdWInLCdcXHUyMjgzJzonc3VwJywnXFx1MjI4NSc6J25zdXAnLCdcXHUyMjgzXFx1MjBEMic6J3Zuc3VwJywnXFx1MjI4Nic6J3N1YmUnLCdcXHUyMjg4JzonbnN1YmUnLCdcXHUyMjg3Jzonc3VwZScsJ1xcdTIyODknOiduc3VwZScsJ1xcdTIyOEFcXHVGRTAwJzondnN1Ym5lJywnXFx1MjI4QSc6J3N1Ym5lJywnXFx1MjI4QlxcdUZFMDAnOid2c3VwbmUnLCdcXHUyMjhCJzonc3VwbmUnLCdcXHUyMjhEJzonY3VwZG90JywnXFx1MjI4RSc6J3VwbHVzJywnXFx1MjI4Ric6J3Nxc3ViJywnXFx1MjI4RlxcdTAzMzgnOidOb3RTcXVhcmVTdWJzZXQnLCdcXHUyMjkwJzonc3FzdXAnLCdcXHUyMjkwXFx1MDMzOCc6J05vdFNxdWFyZVN1cGVyc2V0JywnXFx1MjI5MSc6J3Nxc3ViZScsJ1xcdTIyRTInOiduc3FzdWJlJywnXFx1MjI5Mic6J3Nxc3VwZScsJ1xcdTIyRTMnOiduc3FzdXBlJywnXFx1MjI5Myc6J3NxY2FwJywnXFx1MjI5M1xcdUZFMDAnOidzcWNhcHMnLCdcXHUyMjk0Jzonc3FjdXAnLCdcXHUyMjk0XFx1RkUwMCc6J3NxY3VwcycsJ1xcdTIyOTUnOidvcGx1cycsJ1xcdTIyOTYnOidvbWludXMnLCdcXHUyMjk3Jzonb3RpbWVzJywnXFx1MjI5OCc6J29zb2wnLCdcXHUyMjk5Jzonb2RvdCcsJ1xcdTIyOUEnOidvY2lyJywnXFx1MjI5Qic6J29hc3QnLCdcXHUyMjlEJzonb2Rhc2gnLCdcXHUyMjlFJzoncGx1c2InLCdcXHUyMjlGJzonbWludXNiJywnXFx1MjJBMCc6J3RpbWVzYicsJ1xcdTIyQTEnOidzZG90YicsJ1xcdTIyQTInOid2ZGFzaCcsJ1xcdTIyQUMnOidudmRhc2gnLCdcXHUyMkEzJzonZGFzaHYnLCdcXHUyMkE0JzondG9wJywnXFx1MjJBNSc6J2JvdCcsJ1xcdTIyQTcnOidtb2RlbHMnLCdcXHUyMkE4JzondkRhc2gnLCdcXHUyMkFEJzonbnZEYXNoJywnXFx1MjJBOSc6J1ZkYXNoJywnXFx1MjJBRSc6J25WZGFzaCcsJ1xcdTIyQUEnOidWdmRhc2gnLCdcXHUyMkFCJzonVkRhc2gnLCdcXHUyMkFGJzonblZEYXNoJywnXFx1MjJCMCc6J3BydXJlbCcsJ1xcdTIyQjInOid2bHRyaScsJ1xcdTIyRUEnOidubHRyaScsJ1xcdTIyQjMnOid2cnRyaScsJ1xcdTIyRUInOiducnRyaScsJ1xcdTIyQjQnOidsdHJpZScsJ1xcdTIyRUMnOidubHRyaWUnLCdcXHUyMkI0XFx1MjBEMic6J252bHRyaWUnLCdcXHUyMkI1JzoncnRyaWUnLCdcXHUyMkVEJzonbnJ0cmllJywnXFx1MjJCNVxcdTIwRDInOidudnJ0cmllJywnXFx1MjJCNic6J29yaWdvZicsJ1xcdTIyQjcnOidpbW9mJywnXFx1MjJCOCc6J211bWFwJywnXFx1MjJCOSc6J2hlcmNvbicsJ1xcdTIyQkEnOidpbnRjYWwnLCdcXHUyMkJCJzondmVlYmFyJywnXFx1MjJCRCc6J2JhcnZlZScsJ1xcdTIyQkUnOidhbmdydHZiJywnXFx1MjJCRic6J2xydHJpJywnXFx1MjJDMCc6J1dlZGdlJywnXFx1MjJDMSc6J1ZlZScsJ1xcdTIyQzInOid4Y2FwJywnXFx1MjJDMyc6J3hjdXAnLCdcXHUyMkM0JzonZGlhbScsJ1xcdTIyQzUnOidzZG90JywnXFx1MjJDNic6J1N0YXInLCdcXHUyMkM3JzonZGl2b254JywnXFx1MjJDOCc6J2Jvd3RpZScsJ1xcdTIyQzknOidsdGltZXMnLCdcXHUyMkNBJzoncnRpbWVzJywnXFx1MjJDQic6J2x0aHJlZScsJ1xcdTIyQ0MnOidydGhyZWUnLCdcXHUyMkNEJzonYnNpbWUnLCdcXHUyMkNFJzonY3V2ZWUnLCdcXHUyMkNGJzonY3V3ZWQnLCdcXHUyMkQwJzonU3ViJywnXFx1MjJEMSc6J1N1cCcsJ1xcdTIyRDInOidDYXAnLCdcXHUyMkQzJzonQ3VwJywnXFx1MjJENCc6J2ZvcmsnLCdcXHUyMkQ1JzonZXBhcicsJ1xcdTIyRDYnOidsdGRvdCcsJ1xcdTIyRDcnOidndGRvdCcsJ1xcdTIyRDgnOidMbCcsJ1xcdTIyRDhcXHUwMzM4JzonbkxsJywnXFx1MjJEOSc6J0dnJywnXFx1MjJEOVxcdTAzMzgnOiduR2cnLCdcXHUyMkRBXFx1RkUwMCc6J2xlc2cnLCdcXHUyMkRBJzonbGVnJywnXFx1MjJEQic6J2dlbCcsJ1xcdTIyREJcXHVGRTAwJzonZ2VzbCcsJ1xcdTIyREUnOidjdWVwcicsJ1xcdTIyREYnOidjdWVzYycsJ1xcdTIyRTYnOidsbnNpbScsJ1xcdTIyRTcnOidnbnNpbScsJ1xcdTIyRTgnOidwcm5zaW0nLCdcXHUyMkU5Jzonc2Nuc2ltJywnXFx1MjJFRSc6J3ZlbGxpcCcsJ1xcdTIyRUYnOidjdGRvdCcsJ1xcdTIyRjAnOid1dGRvdCcsJ1xcdTIyRjEnOidkdGRvdCcsJ1xcdTIyRjInOidkaXNpbicsJ1xcdTIyRjMnOidpc2luc3YnLCdcXHUyMkY0JzonaXNpbnMnLCdcXHUyMkY1JzonaXNpbmRvdCcsJ1xcdTIyRjVcXHUwMzM4Jzonbm90aW5kb3QnLCdcXHUyMkY2Jzonbm90aW52YycsJ1xcdTIyRjcnOidub3RpbnZiJywnXFx1MjJGOSc6J2lzaW5FJywnXFx1MjJGOVxcdTAzMzgnOidub3RpbkUnLCdcXHUyMkZBJzonbmlzZCcsJ1xcdTIyRkInOid4bmlzJywnXFx1MjJGQyc6J25pcycsJ1xcdTIyRkQnOidub3RuaXZjJywnXFx1MjJGRSc6J25vdG5pdmInLCdcXHUyMzA1JzonYmFyd2VkJywnXFx1MjMwNic6J0JhcndlZCcsJ1xcdTIzMEMnOidkcmNyb3AnLCdcXHUyMzBEJzonZGxjcm9wJywnXFx1MjMwRSc6J3VyY3JvcCcsJ1xcdTIzMEYnOid1bGNyb3AnLCdcXHUyMzEwJzonYm5vdCcsJ1xcdTIzMTInOidwcm9mbGluZScsJ1xcdTIzMTMnOidwcm9mc3VyZicsJ1xcdTIzMTUnOid0ZWxyZWMnLCdcXHUyMzE2JzondGFyZ2V0JywnXFx1MjMxQyc6J3VsY29ybicsJ1xcdTIzMUQnOid1cmNvcm4nLCdcXHUyMzFFJzonZGxjb3JuJywnXFx1MjMxRic6J2RyY29ybicsJ1xcdTIzMjInOidmcm93bicsJ1xcdTIzMjMnOidzbWlsZScsJ1xcdTIzMkQnOidjeWxjdHknLCdcXHUyMzJFJzoncHJvZmFsYXInLCdcXHUyMzM2JzondG9wYm90JywnXFx1MjMzRCc6J292YmFyJywnXFx1MjMzRic6J3NvbGJhcicsJ1xcdTIzN0MnOidhbmd6YXJyJywnXFx1MjNCMCc6J2xtb3VzdCcsJ1xcdTIzQjEnOidybW91c3QnLCdcXHUyM0I0JzondGJyaycsJ1xcdTIzQjUnOidiYnJrJywnXFx1MjNCNic6J2Jicmt0YnJrJywnXFx1MjNEQyc6J092ZXJQYXJlbnRoZXNpcycsJ1xcdTIzREQnOidVbmRlclBhcmVudGhlc2lzJywnXFx1MjNERSc6J092ZXJCcmFjZScsJ1xcdTIzREYnOidVbmRlckJyYWNlJywnXFx1MjNFMic6J3RycGV6aXVtJywnXFx1MjNFNyc6J2VsaW50ZXJzJywnXFx1MjQyMyc6J2JsYW5rJywnXFx1MjUwMCc6J2JveGgnLCdcXHUyNTAyJzonYm94dicsJ1xcdTI1MEMnOidib3hkcicsJ1xcdTI1MTAnOidib3hkbCcsJ1xcdTI1MTQnOidib3h1cicsJ1xcdTI1MTgnOidib3h1bCcsJ1xcdTI1MUMnOidib3h2cicsJ1xcdTI1MjQnOidib3h2bCcsJ1xcdTI1MkMnOidib3hoZCcsJ1xcdTI1MzQnOidib3hodScsJ1xcdTI1M0MnOidib3h2aCcsJ1xcdTI1NTAnOidib3hIJywnXFx1MjU1MSc6J2JveFYnLCdcXHUyNTUyJzonYm94ZFInLCdcXHUyNTUzJzonYm94RHInLCdcXHUyNTU0JzonYm94RFInLCdcXHUyNTU1JzonYm94ZEwnLCdcXHUyNTU2JzonYm94RGwnLCdcXHUyNTU3JzonYm94REwnLCdcXHUyNTU4JzonYm94dVInLCdcXHUyNTU5JzonYm94VXInLCdcXHUyNTVBJzonYm94VVInLCdcXHUyNTVCJzonYm94dUwnLCdcXHUyNTVDJzonYm94VWwnLCdcXHUyNTVEJzonYm94VUwnLCdcXHUyNTVFJzonYm94dlInLCdcXHUyNTVGJzonYm94VnInLCdcXHUyNTYwJzonYm94VlInLCdcXHUyNTYxJzonYm94dkwnLCdcXHUyNTYyJzonYm94VmwnLCdcXHUyNTYzJzonYm94VkwnLCdcXHUyNTY0JzonYm94SGQnLCdcXHUyNTY1JzonYm94aEQnLCdcXHUyNTY2JzonYm94SEQnLCdcXHUyNTY3JzonYm94SHUnLCdcXHUyNTY4JzonYm94aFUnLCdcXHUyNTY5JzonYm94SFUnLCdcXHUyNTZBJzonYm94dkgnLCdcXHUyNTZCJzonYm94VmgnLCdcXHUyNTZDJzonYm94VkgnLCdcXHUyNTgwJzondWhibGsnLCdcXHUyNTg0JzonbGhibGsnLCdcXHUyNTg4JzonYmxvY2snLCdcXHUyNTkxJzonYmxrMTQnLCdcXHUyNTkyJzonYmxrMTInLCdcXHUyNTkzJzonYmxrMzQnLCdcXHUyNUExJzonc3F1JywnXFx1MjVBQSc6J3NxdWYnLCdcXHUyNUFCJzonRW1wdHlWZXJ5U21hbGxTcXVhcmUnLCdcXHUyNUFEJzoncmVjdCcsJ1xcdTI1QUUnOidtYXJrZXInLCdcXHUyNUIxJzonZmx0bnMnLCdcXHUyNUIzJzoneHV0cmknLCdcXHUyNUI0JzondXRyaWYnLCdcXHUyNUI1JzondXRyaScsJ1xcdTI1QjgnOidydHJpZicsJ1xcdTI1QjknOidydHJpJywnXFx1MjVCRCc6J3hkdHJpJywnXFx1MjVCRSc6J2R0cmlmJywnXFx1MjVCRic6J2R0cmknLCdcXHUyNUMyJzonbHRyaWYnLCdcXHUyNUMzJzonbHRyaScsJ1xcdTI1Q0EnOidsb3onLCdcXHUyNUNCJzonY2lyJywnXFx1MjVFQyc6J3RyaWRvdCcsJ1xcdTI1RUYnOid4Y2lyYycsJ1xcdTI1RjgnOid1bHRyaScsJ1xcdTI1RjknOid1cnRyaScsJ1xcdTI1RkEnOidsbHRyaScsJ1xcdTI1RkInOidFbXB0eVNtYWxsU3F1YXJlJywnXFx1MjVGQyc6J0ZpbGxlZFNtYWxsU3F1YXJlJywnXFx1MjYwNSc6J3N0YXJmJywnXFx1MjYwNic6J3N0YXInLCdcXHUyNjBFJzoncGhvbmUnLCdcXHUyNjQwJzonZmVtYWxlJywnXFx1MjY0Mic6J21hbGUnLCdcXHUyNjYwJzonc3BhZGVzJywnXFx1MjY2Myc6J2NsdWJzJywnXFx1MjY2NSc6J2hlYXJ0cycsJ1xcdTI2NjYnOidkaWFtcycsJ1xcdTI2NkEnOidzdW5nJywnXFx1MjcxMyc6J2NoZWNrJywnXFx1MjcxNyc6J2Nyb3NzJywnXFx1MjcyMCc6J21hbHQnLCdcXHUyNzM2Jzonc2V4dCcsJ1xcdTI3NTgnOidWZXJ0aWNhbFNlcGFyYXRvcicsJ1xcdTI3QzgnOidic29saHN1YicsJ1xcdTI3QzknOidzdXBoc29sJywnXFx1MjdGNSc6J3hsYXJyJywnXFx1MjdGNic6J3hyYXJyJywnXFx1MjdGNyc6J3hoYXJyJywnXFx1MjdGOCc6J3hsQXJyJywnXFx1MjdGOSc6J3hyQXJyJywnXFx1MjdGQSc6J3hoQXJyJywnXFx1MjdGQyc6J3htYXAnLCdcXHUyN0ZGJzonZHppZ3JhcnInLCdcXHUyOTAyJzonbnZsQXJyJywnXFx1MjkwMyc6J252ckFycicsJ1xcdTI5MDQnOidudkhhcnInLCdcXHUyOTA1JzonTWFwJywnXFx1MjkwQyc6J2xiYXJyJywnXFx1MjkwRCc6J3JiYXJyJywnXFx1MjkwRSc6J2xCYXJyJywnXFx1MjkwRic6J3JCYXJyJywnXFx1MjkxMCc6J1JCYXJyJywnXFx1MjkxMSc6J0REb3RyYWhkJywnXFx1MjkxMic6J1VwQXJyb3dCYXInLCdcXHUyOTEzJzonRG93bkFycm93QmFyJywnXFx1MjkxNic6J1JhcnJ0bCcsJ1xcdTI5MTknOidsYXRhaWwnLCdcXHUyOTFBJzoncmF0YWlsJywnXFx1MjkxQic6J2xBdGFpbCcsJ1xcdTI5MUMnOidyQXRhaWwnLCdcXHUyOTFEJzonbGFycmZzJywnXFx1MjkxRSc6J3JhcnJmcycsJ1xcdTI5MUYnOidsYXJyYmZzJywnXFx1MjkyMCc6J3JhcnJiZnMnLCdcXHUyOTIzJzonbndhcmhrJywnXFx1MjkyNCc6J25lYXJoaycsJ1xcdTI5MjUnOidzZWFyaGsnLCdcXHUyOTI2Jzonc3dhcmhrJywnXFx1MjkyNyc6J253bmVhcicsJ1xcdTI5MjgnOid0b2VhJywnXFx1MjkyOSc6J3Rvc2EnLCdcXHUyOTJBJzonc3dud2FyJywnXFx1MjkzMyc6J3JhcnJjJywnXFx1MjkzM1xcdTAzMzgnOiducmFycmMnLCdcXHUyOTM1JzonY3VkYXJycicsJ1xcdTI5MzYnOidsZGNhJywnXFx1MjkzNyc6J3JkY2EnLCdcXHUyOTM4JzonY3VkYXJybCcsJ1xcdTI5MzknOidsYXJycGwnLCdcXHUyOTNDJzonY3VyYXJybScsJ1xcdTI5M0QnOidjdWxhcnJwJywnXFx1Mjk0NSc6J3JhcnJwbCcsJ1xcdTI5NDgnOidoYXJyY2lyJywnXFx1Mjk0OSc6J1VhcnJvY2lyJywnXFx1Mjk0QSc6J2x1cmRzaGFyJywnXFx1Mjk0Qic6J2xkcnVzaGFyJywnXFx1Mjk0RSc6J0xlZnRSaWdodFZlY3RvcicsJ1xcdTI5NEYnOidSaWdodFVwRG93blZlY3RvcicsJ1xcdTI5NTAnOidEb3duTGVmdFJpZ2h0VmVjdG9yJywnXFx1Mjk1MSc6J0xlZnRVcERvd25WZWN0b3InLCdcXHUyOTUyJzonTGVmdFZlY3RvckJhcicsJ1xcdTI5NTMnOidSaWdodFZlY3RvckJhcicsJ1xcdTI5NTQnOidSaWdodFVwVmVjdG9yQmFyJywnXFx1Mjk1NSc6J1JpZ2h0RG93blZlY3RvckJhcicsJ1xcdTI5NTYnOidEb3duTGVmdFZlY3RvckJhcicsJ1xcdTI5NTcnOidEb3duUmlnaHRWZWN0b3JCYXInLCdcXHUyOTU4JzonTGVmdFVwVmVjdG9yQmFyJywnXFx1Mjk1OSc6J0xlZnREb3duVmVjdG9yQmFyJywnXFx1Mjk1QSc6J0xlZnRUZWVWZWN0b3InLCdcXHUyOTVCJzonUmlnaHRUZWVWZWN0b3InLCdcXHUyOTVDJzonUmlnaHRVcFRlZVZlY3RvcicsJ1xcdTI5NUQnOidSaWdodERvd25UZWVWZWN0b3InLCdcXHUyOTVFJzonRG93bkxlZnRUZWVWZWN0b3InLCdcXHUyOTVGJzonRG93blJpZ2h0VGVlVmVjdG9yJywnXFx1Mjk2MCc6J0xlZnRVcFRlZVZlY3RvcicsJ1xcdTI5NjEnOidMZWZ0RG93blRlZVZlY3RvcicsJ1xcdTI5NjInOidsSGFyJywnXFx1Mjk2Myc6J3VIYXInLCdcXHUyOTY0JzonckhhcicsJ1xcdTI5NjUnOidkSGFyJywnXFx1Mjk2Nic6J2x1cnVoYXInLCdcXHUyOTY3JzonbGRyZGhhcicsJ1xcdTI5NjgnOidydWx1aGFyJywnXFx1Mjk2OSc6J3JkbGRoYXInLCdcXHUyOTZBJzonbGhhcnVsJywnXFx1Mjk2Qic6J2xsaGFyZCcsJ1xcdTI5NkMnOidyaGFydWwnLCdcXHUyOTZEJzonbHJoYXJkJywnXFx1Mjk2RSc6J3VkaGFyJywnXFx1Mjk2Ric6J2R1aGFyJywnXFx1Mjk3MCc6J1JvdW5kSW1wbGllcycsJ1xcdTI5NzEnOidlcmFycicsJ1xcdTI5NzInOidzaW1yYXJyJywnXFx1Mjk3Myc6J2xhcnJzaW0nLCdcXHUyOTc0JzoncmFycnNpbScsJ1xcdTI5NzUnOidyYXJyYXAnLCdcXHUyOTc2JzonbHRsYXJyJywnXFx1Mjk3OCc6J2d0cmFycicsJ1xcdTI5NzknOidzdWJyYXJyJywnXFx1Mjk3Qic6J3N1cGxhcnInLCdcXHUyOTdDJzonbGZpc2h0JywnXFx1Mjk3RCc6J3JmaXNodCcsJ1xcdTI5N0UnOid1ZmlzaHQnLCdcXHUyOTdGJzonZGZpc2h0JywnXFx1Mjk5QSc6J3Z6aWd6YWcnLCdcXHUyOTlDJzondmFuZ3J0JywnXFx1Mjk5RCc6J2FuZ3J0dmJkJywnXFx1MjlBNCc6J2FuZ2UnLCdcXHUyOUE1JzoncmFuZ2UnLCdcXHUyOUE2JzonZHdhbmdsZScsJ1xcdTI5QTcnOid1d2FuZ2xlJywnXFx1MjlBOCc6J2FuZ21zZGFhJywnXFx1MjlBOSc6J2FuZ21zZGFiJywnXFx1MjlBQSc6J2FuZ21zZGFjJywnXFx1MjlBQic6J2FuZ21zZGFkJywnXFx1MjlBQyc6J2FuZ21zZGFlJywnXFx1MjlBRCc6J2FuZ21zZGFmJywnXFx1MjlBRSc6J2FuZ21zZGFnJywnXFx1MjlBRic6J2FuZ21zZGFoJywnXFx1MjlCMCc6J2JlbXB0eXYnLCdcXHUyOUIxJzonZGVtcHR5dicsJ1xcdTI5QjInOidjZW1wdHl2JywnXFx1MjlCMyc6J3JhZW1wdHl2JywnXFx1MjlCNCc6J2xhZW1wdHl2JywnXFx1MjlCNSc6J29oYmFyJywnXFx1MjlCNic6J29taWQnLCdcXHUyOUI3Jzonb3BhcicsJ1xcdTI5QjknOidvcGVycCcsJ1xcdTI5QkInOidvbGNyb3NzJywnXFx1MjlCQyc6J29kc29sZCcsJ1xcdTI5QkUnOidvbGNpcicsJ1xcdTI5QkYnOidvZmNpcicsJ1xcdTI5QzAnOidvbHQnLCdcXHUyOUMxJzonb2d0JywnXFx1MjlDMic6J2NpcnNjaXInLCdcXHUyOUMzJzonY2lyRScsJ1xcdTI5QzQnOidzb2xiJywnXFx1MjlDNSc6J2Jzb2xiJywnXFx1MjlDOSc6J2JveGJveCcsJ1xcdTI5Q0QnOid0cmlzYicsJ1xcdTI5Q0UnOidydHJpbHRyaScsJ1xcdTI5Q0YnOidMZWZ0VHJpYW5nbGVCYXInLCdcXHUyOUNGXFx1MDMzOCc6J05vdExlZnRUcmlhbmdsZUJhcicsJ1xcdTI5RDAnOidSaWdodFRyaWFuZ2xlQmFyJywnXFx1MjlEMFxcdTAzMzgnOidOb3RSaWdodFRyaWFuZ2xlQmFyJywnXFx1MjlEQyc6J2lpbmZpbicsJ1xcdTI5REQnOidpbmZpbnRpZScsJ1xcdTI5REUnOidudmluZmluJywnXFx1MjlFMyc6J2VwYXJzbCcsJ1xcdTI5RTQnOidzbWVwYXJzbCcsJ1xcdTI5RTUnOidlcXZwYXJzbCcsJ1xcdTI5RUInOidsb3pmJywnXFx1MjlGNCc6J1J1bGVEZWxheWVkJywnXFx1MjlGNic6J2Rzb2wnLCdcXHUyQTAwJzoneG9kb3QnLCdcXHUyQTAxJzoneG9wbHVzJywnXFx1MkEwMic6J3hvdGltZScsJ1xcdTJBMDQnOid4dXBsdXMnLCdcXHUyQTA2JzoneHNxY3VwJywnXFx1MkEwRCc6J2ZwYXJ0aW50JywnXFx1MkExMCc6J2NpcmZuaW50JywnXFx1MkExMSc6J2F3aW50JywnXFx1MkExMic6J3JwcG9saW50JywnXFx1MkExMyc6J3NjcG9saW50JywnXFx1MkExNCc6J25wb2xpbnQnLCdcXHUyQTE1JzoncG9pbnRpbnQnLCdcXHUyQTE2JzoncXVhdGludCcsJ1xcdTJBMTcnOidpbnRsYXJoaycsJ1xcdTJBMjInOidwbHVzY2lyJywnXFx1MkEyMyc6J3BsdXNhY2lyJywnXFx1MkEyNCc6J3NpbXBsdXMnLCdcXHUyQTI1JzoncGx1c2R1JywnXFx1MkEyNic6J3BsdXNzaW0nLCdcXHUyQTI3JzoncGx1c3R3bycsJ1xcdTJBMjknOidtY29tbWEnLCdcXHUyQTJBJzonbWludXNkdScsJ1xcdTJBMkQnOidsb3BsdXMnLCdcXHUyQTJFJzoncm9wbHVzJywnXFx1MkEyRic6J0Nyb3NzJywnXFx1MkEzMCc6J3RpbWVzZCcsJ1xcdTJBMzEnOid0aW1lc2JhcicsJ1xcdTJBMzMnOidzbWFzaHAnLCdcXHUyQTM0JzonbG90aW1lcycsJ1xcdTJBMzUnOidyb3RpbWVzJywnXFx1MkEzNic6J290aW1lc2FzJywnXFx1MkEzNyc6J090aW1lcycsJ1xcdTJBMzgnOidvZGl2JywnXFx1MkEzOSc6J3RyaXBsdXMnLCdcXHUyQTNBJzondHJpbWludXMnLCdcXHUyQTNCJzondHJpdGltZScsJ1xcdTJBM0MnOidpcHJvZCcsJ1xcdTJBM0YnOidhbWFsZycsJ1xcdTJBNDAnOidjYXBkb3QnLCdcXHUyQTQyJzonbmN1cCcsJ1xcdTJBNDMnOiduY2FwJywnXFx1MkE0NCc6J2NhcGFuZCcsJ1xcdTJBNDUnOidjdXBvcicsJ1xcdTJBNDYnOidjdXBjYXAnLCdcXHUyQTQ3JzonY2FwY3VwJywnXFx1MkE0OCc6J2N1cGJyY2FwJywnXFx1MkE0OSc6J2NhcGJyY3VwJywnXFx1MkE0QSc6J2N1cGN1cCcsJ1xcdTJBNEInOidjYXBjYXAnLCdcXHUyQTRDJzonY2N1cHMnLCdcXHUyQTREJzonY2NhcHMnLCdcXHUyQTUwJzonY2N1cHNzbScsJ1xcdTJBNTMnOidBbmQnLCdcXHUyQTU0JzonT3InLCdcXHUyQTU1JzonYW5kYW5kJywnXFx1MkE1Nic6J29yb3InLCdcXHUyQTU3Jzonb3JzbG9wZScsJ1xcdTJBNTgnOidhbmRzbG9wZScsJ1xcdTJBNUEnOidhbmR2JywnXFx1MkE1Qic6J29ydicsJ1xcdTJBNUMnOidhbmRkJywnXFx1MkE1RCc6J29yZCcsJ1xcdTJBNUYnOid3ZWRiYXInLCdcXHUyQTY2Jzonc2RvdGUnLCdcXHUyQTZBJzonc2ltZG90JywnXFx1MkE2RCc6J2Nvbmdkb3QnLCdcXHUyQTZEXFx1MDMzOCc6J25jb25nZG90JywnXFx1MkE2RSc6J2Vhc3RlcicsJ1xcdTJBNkYnOidhcGFjaXInLCdcXHUyQTcwJzonYXBFJywnXFx1MkE3MFxcdTAzMzgnOiduYXBFJywnXFx1MkE3MSc6J2VwbHVzJywnXFx1MkE3Mic6J3BsdXNlJywnXFx1MkE3Myc6J0VzaW0nLCdcXHUyQTc3JzonZUREb3QnLCdcXHUyQTc4JzonZXF1aXZERCcsJ1xcdTJBNzknOidsdGNpcicsJ1xcdTJBN0EnOidndGNpcicsJ1xcdTJBN0InOidsdHF1ZXN0JywnXFx1MkE3Qyc6J2d0cXVlc3QnLCdcXHUyQTdEJzonbGVzJywnXFx1MkE3RFxcdTAzMzgnOidubGVzJywnXFx1MkE3RSc6J2dlcycsJ1xcdTJBN0VcXHUwMzM4JzonbmdlcycsJ1xcdTJBN0YnOidsZXNkb3QnLCdcXHUyQTgwJzonZ2VzZG90JywnXFx1MkE4MSc6J2xlc2RvdG8nLCdcXHUyQTgyJzonZ2VzZG90bycsJ1xcdTJBODMnOidsZXNkb3RvcicsJ1xcdTJBODQnOidnZXNkb3RvbCcsJ1xcdTJBODUnOidsYXAnLCdcXHUyQTg2JzonZ2FwJywnXFx1MkE4Nyc6J2xuZScsJ1xcdTJBODgnOidnbmUnLCdcXHUyQTg5JzonbG5hcCcsJ1xcdTJBOEEnOidnbmFwJywnXFx1MkE4Qic6J2xFZycsJ1xcdTJBOEMnOidnRWwnLCdcXHUyQThEJzonbHNpbWUnLCdcXHUyQThFJzonZ3NpbWUnLCdcXHUyQThGJzonbHNpbWcnLCdcXHUyQTkwJzonZ3NpbWwnLCdcXHUyQTkxJzonbGdFJywnXFx1MkE5Mic6J2dsRScsJ1xcdTJBOTMnOidsZXNnZXMnLCdcXHUyQTk0JzonZ2VzbGVzJywnXFx1MkE5NSc6J2VscycsJ1xcdTJBOTYnOidlZ3MnLCdcXHUyQTk3JzonZWxzZG90JywnXFx1MkE5OCc6J2Vnc2RvdCcsJ1xcdTJBOTknOidlbCcsJ1xcdTJBOUEnOidlZycsJ1xcdTJBOUQnOidzaW1sJywnXFx1MkE5RSc6J3NpbWcnLCdcXHUyQTlGJzonc2ltbEUnLCdcXHUyQUEwJzonc2ltZ0UnLCdcXHUyQUExJzonTGVzc0xlc3MnLCdcXHUyQUExXFx1MDMzOCc6J05vdE5lc3RlZExlc3NMZXNzJywnXFx1MkFBMic6J0dyZWF0ZXJHcmVhdGVyJywnXFx1MkFBMlxcdTAzMzgnOidOb3ROZXN0ZWRHcmVhdGVyR3JlYXRlcicsJ1xcdTJBQTQnOidnbGonLCdcXHUyQUE1JzonZ2xhJywnXFx1MkFBNic6J2x0Y2MnLCdcXHUyQUE3JzonZ3RjYycsJ1xcdTJBQTgnOidsZXNjYycsJ1xcdTJBQTknOidnZXNjYycsJ1xcdTJBQUEnOidzbXQnLCdcXHUyQUFCJzonbGF0JywnXFx1MkFBQyc6J3NtdGUnLCdcXHUyQUFDXFx1RkUwMCc6J3NtdGVzJywnXFx1MkFBRCc6J2xhdGUnLCdcXHUyQUFEXFx1RkUwMCc6J2xhdGVzJywnXFx1MkFBRSc6J2J1bXBFJywnXFx1MkFBRic6J3ByZScsJ1xcdTJBQUZcXHUwMzM4JzonbnByZScsJ1xcdTJBQjAnOidzY2UnLCdcXHUyQUIwXFx1MDMzOCc6J25zY2UnLCdcXHUyQUIzJzoncHJFJywnXFx1MkFCNCc6J3NjRScsJ1xcdTJBQjUnOidwcm5FJywnXFx1MkFCNic6J3NjbkUnLCdcXHUyQUI3JzoncHJhcCcsJ1xcdTJBQjgnOidzY2FwJywnXFx1MkFCOSc6J3BybmFwJywnXFx1MkFCQSc6J3NjbmFwJywnXFx1MkFCQic6J1ByJywnXFx1MkFCQyc6J1NjJywnXFx1MkFCRCc6J3N1YmRvdCcsJ1xcdTJBQkUnOidzdXBkb3QnLCdcXHUyQUJGJzonc3VicGx1cycsJ1xcdTJBQzAnOidzdXBwbHVzJywnXFx1MkFDMSc6J3N1Ym11bHQnLCdcXHUyQUMyJzonc3VwbXVsdCcsJ1xcdTJBQzMnOidzdWJlZG90JywnXFx1MkFDNCc6J3N1cGVkb3QnLCdcXHUyQUM1Jzonc3ViRScsJ1xcdTJBQzVcXHUwMzM4JzonbnN1YkUnLCdcXHUyQUM2Jzonc3VwRScsJ1xcdTJBQzZcXHUwMzM4JzonbnN1cEUnLCdcXHUyQUM3Jzonc3Vic2ltJywnXFx1MkFDOCc6J3N1cHNpbScsJ1xcdTJBQ0JcXHVGRTAwJzondnN1Ym5FJywnXFx1MkFDQic6J3N1Ym5FJywnXFx1MkFDQ1xcdUZFMDAnOid2c3VwbkUnLCdcXHUyQUNDJzonc3VwbkUnLCdcXHUyQUNGJzonY3N1YicsJ1xcdTJBRDAnOidjc3VwJywnXFx1MkFEMSc6J2NzdWJlJywnXFx1MkFEMic6J2NzdXBlJywnXFx1MkFEMyc6J3N1YnN1cCcsJ1xcdTJBRDQnOidzdXBzdWInLCdcXHUyQUQ1Jzonc3Vic3ViJywnXFx1MkFENic6J3N1cHN1cCcsJ1xcdTJBRDcnOidzdXBoc3ViJywnXFx1MkFEOCc6J3N1cGRzdWInLCdcXHUyQUQ5JzonZm9ya3YnLCdcXHUyQURBJzondG9wZm9yaycsJ1xcdTJBREInOidtbGNwJywnXFx1MkFFNCc6J0Rhc2h2JywnXFx1MkFFNic6J1ZkYXNobCcsJ1xcdTJBRTcnOidCYXJ2JywnXFx1MkFFOCc6J3ZCYXInLCdcXHUyQUU5JzondkJhcnYnLCdcXHUyQUVCJzonVmJhcicsJ1xcdTJBRUMnOidOb3QnLCdcXHUyQUVEJzonYk5vdCcsJ1xcdTJBRUUnOidybm1pZCcsJ1xcdTJBRUYnOidjaXJtaWQnLCdcXHUyQUYwJzonbWlkY2lyJywnXFx1MkFGMSc6J3RvcGNpcicsJ1xcdTJBRjInOiduaHBhcicsJ1xcdTJBRjMnOidwYXJzaW0nLCdcXHUyQUZEJzoncGFyc2wnLCdcXHUyQUZEXFx1MjBFNSc6J25wYXJzbCcsJ1xcdTI2NkQnOidmbGF0JywnXFx1MjY2RSc6J25hdHVyJywnXFx1MjY2Ric6J3NoYXJwJywnXFx4QTQnOidjdXJyZW4nLCdcXHhBMic6J2NlbnQnLCckJzonZG9sbGFyJywnXFx4QTMnOidwb3VuZCcsJ1xceEE1JzoneWVuJywnXFx1MjBBQyc6J2V1cm8nLCdcXHhCOSc6J3N1cDEnLCdcXHhCRCc6J2hhbGYnLCdcXHUyMTUzJzonZnJhYzEzJywnXFx4QkMnOidmcmFjMTQnLCdcXHUyMTU1JzonZnJhYzE1JywnXFx1MjE1OSc6J2ZyYWMxNicsJ1xcdTIxNUInOidmcmFjMTgnLCdcXHhCMic6J3N1cDInLCdcXHUyMTU0JzonZnJhYzIzJywnXFx1MjE1Nic6J2ZyYWMyNScsJ1xceEIzJzonc3VwMycsJ1xceEJFJzonZnJhYzM0JywnXFx1MjE1Nyc6J2ZyYWMzNScsJ1xcdTIxNUMnOidmcmFjMzgnLCdcXHUyMTU4JzonZnJhYzQ1JywnXFx1MjE1QSc6J2ZyYWM1NicsJ1xcdTIxNUQnOidmcmFjNTgnLCdcXHUyMTVFJzonZnJhYzc4JywnXFx1RDgzNVxcdURDQjYnOidhc2NyJywnXFx1RDgzNVxcdURENTInOidhb3BmJywnXFx1RDgzNVxcdUREMUUnOidhZnInLCdcXHVEODM1XFx1REQzOCc6J0FvcGYnLCdcXHVEODM1XFx1REQwNCc6J0FmcicsJ1xcdUQ4MzVcXHVEQzlDJzonQXNjcicsJ1xceEFBJzonb3JkZicsJ1xceEUxJzonYWFjdXRlJywnXFx4QzEnOidBYWN1dGUnLCdcXHhFMCc6J2FncmF2ZScsJ1xceEMwJzonQWdyYXZlJywnXFx1MDEwMyc6J2FicmV2ZScsJ1xcdTAxMDInOidBYnJldmUnLCdcXHhFMic6J2FjaXJjJywnXFx4QzInOidBY2lyYycsJ1xceEU1JzonYXJpbmcnLCdcXHhDNSc6J2FuZ3N0JywnXFx4RTQnOidhdW1sJywnXFx4QzQnOidBdW1sJywnXFx4RTMnOidhdGlsZGUnLCdcXHhDMyc6J0F0aWxkZScsJ1xcdTAxMDUnOidhb2dvbicsJ1xcdTAxMDQnOidBb2dvbicsJ1xcdTAxMDEnOidhbWFjcicsJ1xcdTAxMDAnOidBbWFjcicsJ1xceEU2JzonYWVsaWcnLCdcXHhDNic6J0FFbGlnJywnXFx1RDgzNVxcdURDQjcnOidic2NyJywnXFx1RDgzNVxcdURENTMnOidib3BmJywnXFx1RDgzNVxcdUREMUYnOidiZnInLCdcXHVEODM1XFx1REQzOSc6J0JvcGYnLCdcXHUyMTJDJzonQnNjcicsJ1xcdUQ4MzVcXHVERDA1JzonQmZyJywnXFx1RDgzNVxcdUREMjAnOidjZnInLCdcXHVEODM1XFx1RENCOCc6J2NzY3InLCdcXHVEODM1XFx1REQ1NCc6J2NvcGYnLCdcXHUyMTJEJzonQ2ZyJywnXFx1RDgzNVxcdURDOUUnOidDc2NyJywnXFx1MjEwMic6J0NvcGYnLCdcXHUwMTA3JzonY2FjdXRlJywnXFx1MDEwNic6J0NhY3V0ZScsJ1xcdTAxMDknOidjY2lyYycsJ1xcdTAxMDgnOidDY2lyYycsJ1xcdTAxMEQnOidjY2Fyb24nLCdcXHUwMTBDJzonQ2Nhcm9uJywnXFx1MDEwQic6J2Nkb3QnLCdcXHUwMTBBJzonQ2RvdCcsJ1xceEU3JzonY2NlZGlsJywnXFx4QzcnOidDY2VkaWwnLCdcXHUyMTA1JzonaW5jYXJlJywnXFx1RDgzNVxcdUREMjEnOidkZnInLCdcXHUyMTQ2JzonZGQnLCdcXHVEODM1XFx1REQ1NSc6J2RvcGYnLCdcXHVEODM1XFx1RENCOSc6J2RzY3InLCdcXHVEODM1XFx1REM5Ric6J0RzY3InLCdcXHVEODM1XFx1REQwNyc6J0RmcicsJ1xcdTIxNDUnOidERCcsJ1xcdUQ4MzVcXHVERDNCJzonRG9wZicsJ1xcdTAxMEYnOidkY2Fyb24nLCdcXHUwMTBFJzonRGNhcm9uJywnXFx1MDExMSc6J2RzdHJvaycsJ1xcdTAxMTAnOidEc3Ryb2snLCdcXHhGMCc6J2V0aCcsJ1xceEQwJzonRVRIJywnXFx1MjE0Nyc6J2VlJywnXFx1MjEyRic6J2VzY3InLCdcXHVEODM1XFx1REQyMic6J2VmcicsJ1xcdUQ4MzVcXHVERDU2JzonZW9wZicsJ1xcdTIxMzAnOidFc2NyJywnXFx1RDgzNVxcdUREMDgnOidFZnInLCdcXHVEODM1XFx1REQzQyc6J0VvcGYnLCdcXHhFOSc6J2VhY3V0ZScsJ1xceEM5JzonRWFjdXRlJywnXFx4RTgnOidlZ3JhdmUnLCdcXHhDOCc6J0VncmF2ZScsJ1xceEVBJzonZWNpcmMnLCdcXHhDQSc6J0VjaXJjJywnXFx1MDExQic6J2VjYXJvbicsJ1xcdTAxMUEnOidFY2Fyb24nLCdcXHhFQic6J2V1bWwnLCdcXHhDQic6J0V1bWwnLCdcXHUwMTE3JzonZWRvdCcsJ1xcdTAxMTYnOidFZG90JywnXFx1MDExOSc6J2VvZ29uJywnXFx1MDExOCc6J0VvZ29uJywnXFx1MDExMyc6J2VtYWNyJywnXFx1MDExMic6J0VtYWNyJywnXFx1RDgzNVxcdUREMjMnOidmZnInLCdcXHVEODM1XFx1REQ1Nyc6J2ZvcGYnLCdcXHVEODM1XFx1RENCQic6J2ZzY3InLCdcXHVEODM1XFx1REQwOSc6J0ZmcicsJ1xcdUQ4MzVcXHVERDNEJzonRm9wZicsJ1xcdTIxMzEnOidGc2NyJywnXFx1RkIwMCc6J2ZmbGlnJywnXFx1RkIwMyc6J2ZmaWxpZycsJ1xcdUZCMDQnOidmZmxsaWcnLCdcXHVGQjAxJzonZmlsaWcnLCdmaic6J2ZqbGlnJywnXFx1RkIwMic6J2ZsbGlnJywnXFx1MDE5Mic6J2Zub2YnLCdcXHUyMTBBJzonZ3NjcicsJ1xcdUQ4MzVcXHVERDU4JzonZ29wZicsJ1xcdUQ4MzVcXHVERDI0JzonZ2ZyJywnXFx1RDgzNVxcdURDQTInOidHc2NyJywnXFx1RDgzNVxcdUREM0UnOidHb3BmJywnXFx1RDgzNVxcdUREMEEnOidHZnInLCdcXHUwMUY1JzonZ2FjdXRlJywnXFx1MDExRic6J2dicmV2ZScsJ1xcdTAxMUUnOidHYnJldmUnLCdcXHUwMTFEJzonZ2NpcmMnLCdcXHUwMTFDJzonR2NpcmMnLCdcXHUwMTIxJzonZ2RvdCcsJ1xcdTAxMjAnOidHZG90JywnXFx1MDEyMic6J0djZWRpbCcsJ1xcdUQ4MzVcXHVERDI1JzonaGZyJywnXFx1MjEwRSc6J3BsYW5ja2gnLCdcXHVEODM1XFx1RENCRCc6J2hzY3InLCdcXHVEODM1XFx1REQ1OSc6J2hvcGYnLCdcXHUyMTBCJzonSHNjcicsJ1xcdTIxMEMnOidIZnInLCdcXHUyMTBEJzonSG9wZicsJ1xcdTAxMjUnOidoY2lyYycsJ1xcdTAxMjQnOidIY2lyYycsJ1xcdTIxMEYnOidoYmFyJywnXFx1MDEyNyc6J2hzdHJvaycsJ1xcdTAxMjYnOidIc3Ryb2snLCdcXHVEODM1XFx1REQ1QSc6J2lvcGYnLCdcXHVEODM1XFx1REQyNic6J2lmcicsJ1xcdUQ4MzVcXHVEQ0JFJzonaXNjcicsJ1xcdTIxNDgnOidpaScsJ1xcdUQ4MzVcXHVERDQwJzonSW9wZicsJ1xcdTIxMTAnOidJc2NyJywnXFx1MjExMSc6J0ltJywnXFx4RUQnOidpYWN1dGUnLCdcXHhDRCc6J0lhY3V0ZScsJ1xceEVDJzonaWdyYXZlJywnXFx4Q0MnOidJZ3JhdmUnLCdcXHhFRSc6J2ljaXJjJywnXFx4Q0UnOidJY2lyYycsJ1xceEVGJzonaXVtbCcsJ1xceENGJzonSXVtbCcsJ1xcdTAxMjknOidpdGlsZGUnLCdcXHUwMTI4JzonSXRpbGRlJywnXFx1MDEzMCc6J0lkb3QnLCdcXHUwMTJGJzonaW9nb24nLCdcXHUwMTJFJzonSW9nb24nLCdcXHUwMTJCJzonaW1hY3InLCdcXHUwMTJBJzonSW1hY3InLCdcXHUwMTMzJzonaWpsaWcnLCdcXHUwMTMyJzonSUpsaWcnLCdcXHUwMTMxJzonaW1hdGgnLCdcXHVEODM1XFx1RENCRic6J2pzY3InLCdcXHVEODM1XFx1REQ1Qic6J2pvcGYnLCdcXHVEODM1XFx1REQyNyc6J2pmcicsJ1xcdUQ4MzVcXHVEQ0E1JzonSnNjcicsJ1xcdUQ4MzVcXHVERDBEJzonSmZyJywnXFx1RDgzNVxcdURENDEnOidKb3BmJywnXFx1MDEzNSc6J2pjaXJjJywnXFx1MDEzNCc6J0pjaXJjJywnXFx1MDIzNyc6J2ptYXRoJywnXFx1RDgzNVxcdURENUMnOidrb3BmJywnXFx1RDgzNVxcdURDQzAnOidrc2NyJywnXFx1RDgzNVxcdUREMjgnOidrZnInLCdcXHVEODM1XFx1RENBNic6J0tzY3InLCdcXHVEODM1XFx1REQ0Mic6J0tvcGYnLCdcXHVEODM1XFx1REQwRSc6J0tmcicsJ1xcdTAxMzcnOidrY2VkaWwnLCdcXHUwMTM2JzonS2NlZGlsJywnXFx1RDgzNVxcdUREMjknOidsZnInLCdcXHVEODM1XFx1RENDMSc6J2xzY3InLCdcXHUyMTEzJzonZWxsJywnXFx1RDgzNVxcdURENUQnOidsb3BmJywnXFx1MjExMic6J0xzY3InLCdcXHVEODM1XFx1REQwRic6J0xmcicsJ1xcdUQ4MzVcXHVERDQzJzonTG9wZicsJ1xcdTAxM0EnOidsYWN1dGUnLCdcXHUwMTM5JzonTGFjdXRlJywnXFx1MDEzRSc6J2xjYXJvbicsJ1xcdTAxM0QnOidMY2Fyb24nLCdcXHUwMTNDJzonbGNlZGlsJywnXFx1MDEzQic6J0xjZWRpbCcsJ1xcdTAxNDInOidsc3Ryb2snLCdcXHUwMTQxJzonTHN0cm9rJywnXFx1MDE0MCc6J2xtaWRvdCcsJ1xcdTAxM0YnOidMbWlkb3QnLCdcXHVEODM1XFx1REQyQSc6J21mcicsJ1xcdUQ4MzVcXHVERDVFJzonbW9wZicsJ1xcdUQ4MzVcXHVEQ0MyJzonbXNjcicsJ1xcdUQ4MzVcXHVERDEwJzonTWZyJywnXFx1RDgzNVxcdURENDQnOidNb3BmJywnXFx1MjEzMyc6J01zY3InLCdcXHVEODM1XFx1REQyQic6J25mcicsJ1xcdUQ4MzVcXHVERDVGJzonbm9wZicsJ1xcdUQ4MzVcXHVEQ0MzJzonbnNjcicsJ1xcdTIxMTUnOidOb3BmJywnXFx1RDgzNVxcdURDQTknOidOc2NyJywnXFx1RDgzNVxcdUREMTEnOidOZnInLCdcXHUwMTQ0JzonbmFjdXRlJywnXFx1MDE0Myc6J05hY3V0ZScsJ1xcdTAxNDgnOiduY2Fyb24nLCdcXHUwMTQ3JzonTmNhcm9uJywnXFx4RjEnOidudGlsZGUnLCdcXHhEMSc6J050aWxkZScsJ1xcdTAxNDYnOiduY2VkaWwnLCdcXHUwMTQ1JzonTmNlZGlsJywnXFx1MjExNic6J251bWVybycsJ1xcdTAxNEInOidlbmcnLCdcXHUwMTRBJzonRU5HJywnXFx1RDgzNVxcdURENjAnOidvb3BmJywnXFx1RDgzNVxcdUREMkMnOidvZnInLCdcXHUyMTM0Jzonb3NjcicsJ1xcdUQ4MzVcXHVEQ0FBJzonT3NjcicsJ1xcdUQ4MzVcXHVERDEyJzonT2ZyJywnXFx1RDgzNVxcdURENDYnOidPb3BmJywnXFx4QkEnOidvcmRtJywnXFx4RjMnOidvYWN1dGUnLCdcXHhEMyc6J09hY3V0ZScsJ1xceEYyJzonb2dyYXZlJywnXFx4RDInOidPZ3JhdmUnLCdcXHhGNCc6J29jaXJjJywnXFx4RDQnOidPY2lyYycsJ1xceEY2Jzonb3VtbCcsJ1xceEQ2JzonT3VtbCcsJ1xcdTAxNTEnOidvZGJsYWMnLCdcXHUwMTUwJzonT2RibGFjJywnXFx4RjUnOidvdGlsZGUnLCdcXHhENSc6J090aWxkZScsJ1xceEY4Jzonb3NsYXNoJywnXFx4RDgnOidPc2xhc2gnLCdcXHUwMTREJzonb21hY3InLCdcXHUwMTRDJzonT21hY3InLCdcXHUwMTUzJzonb2VsaWcnLCdcXHUwMTUyJzonT0VsaWcnLCdcXHVEODM1XFx1REQyRCc6J3BmcicsJ1xcdUQ4MzVcXHVEQ0M1JzoncHNjcicsJ1xcdUQ4MzVcXHVERDYxJzoncG9wZicsJ1xcdTIxMTknOidQb3BmJywnXFx1RDgzNVxcdUREMTMnOidQZnInLCdcXHVEODM1XFx1RENBQic6J1BzY3InLCdcXHVEODM1XFx1REQ2Mic6J3FvcGYnLCdcXHVEODM1XFx1REQyRSc6J3FmcicsJ1xcdUQ4MzVcXHVEQ0M2JzoncXNjcicsJ1xcdUQ4MzVcXHVEQ0FDJzonUXNjcicsJ1xcdUQ4MzVcXHVERDE0JzonUWZyJywnXFx1MjExQSc6J1FvcGYnLCdcXHUwMTM4Jzona2dyZWVuJywnXFx1RDgzNVxcdUREMkYnOidyZnInLCdcXHVEODM1XFx1REQ2Myc6J3JvcGYnLCdcXHVEODM1XFx1RENDNyc6J3JzY3InLCdcXHUyMTFCJzonUnNjcicsJ1xcdTIxMUMnOidSZScsJ1xcdTIxMUQnOidSb3BmJywnXFx1MDE1NSc6J3JhY3V0ZScsJ1xcdTAxNTQnOidSYWN1dGUnLCdcXHUwMTU5JzoncmNhcm9uJywnXFx1MDE1OCc6J1JjYXJvbicsJ1xcdTAxNTcnOidyY2VkaWwnLCdcXHUwMTU2JzonUmNlZGlsJywnXFx1RDgzNVxcdURENjQnOidzb3BmJywnXFx1RDgzNVxcdURDQzgnOidzc2NyJywnXFx1RDgzNVxcdUREMzAnOidzZnInLCdcXHVEODM1XFx1REQ0QSc6J1NvcGYnLCdcXHVEODM1XFx1REQxNic6J1NmcicsJ1xcdUQ4MzVcXHVEQ0FFJzonU3NjcicsJ1xcdTI0QzgnOidvUycsJ1xcdTAxNUInOidzYWN1dGUnLCdcXHUwMTVBJzonU2FjdXRlJywnXFx1MDE1RCc6J3NjaXJjJywnXFx1MDE1Qyc6J1NjaXJjJywnXFx1MDE2MSc6J3NjYXJvbicsJ1xcdTAxNjAnOidTY2Fyb24nLCdcXHUwMTVGJzonc2NlZGlsJywnXFx1MDE1RSc6J1NjZWRpbCcsJ1xceERGJzonc3psaWcnLCdcXHVEODM1XFx1REQzMSc6J3RmcicsJ1xcdUQ4MzVcXHVEQ0M5JzondHNjcicsJ1xcdUQ4MzVcXHVERDY1JzondG9wZicsJ1xcdUQ4MzVcXHVEQ0FGJzonVHNjcicsJ1xcdUQ4MzVcXHVERDE3JzonVGZyJywnXFx1RDgzNVxcdURENEInOidUb3BmJywnXFx1MDE2NSc6J3RjYXJvbicsJ1xcdTAxNjQnOidUY2Fyb24nLCdcXHUwMTYzJzondGNlZGlsJywnXFx1MDE2Mic6J1RjZWRpbCcsJ1xcdTIxMjInOid0cmFkZScsJ1xcdTAxNjcnOid0c3Ryb2snLCdcXHUwMTY2JzonVHN0cm9rJywnXFx1RDgzNVxcdURDQ0EnOid1c2NyJywnXFx1RDgzNVxcdURENjYnOid1b3BmJywnXFx1RDgzNVxcdUREMzInOid1ZnInLCdcXHVEODM1XFx1REQ0Qyc6J1VvcGYnLCdcXHVEODM1XFx1REQxOCc6J1VmcicsJ1xcdUQ4MzVcXHVEQ0IwJzonVXNjcicsJ1xceEZBJzondWFjdXRlJywnXFx4REEnOidVYWN1dGUnLCdcXHhGOSc6J3VncmF2ZScsJ1xceEQ5JzonVWdyYXZlJywnXFx1MDE2RCc6J3VicmV2ZScsJ1xcdTAxNkMnOidVYnJldmUnLCdcXHhGQic6J3VjaXJjJywnXFx4REInOidVY2lyYycsJ1xcdTAxNkYnOid1cmluZycsJ1xcdTAxNkUnOidVcmluZycsJ1xceEZDJzondXVtbCcsJ1xceERDJzonVXVtbCcsJ1xcdTAxNzEnOid1ZGJsYWMnLCdcXHUwMTcwJzonVWRibGFjJywnXFx1MDE2OSc6J3V0aWxkZScsJ1xcdTAxNjgnOidVdGlsZGUnLCdcXHUwMTczJzondW9nb24nLCdcXHUwMTcyJzonVW9nb24nLCdcXHUwMTZCJzondW1hY3InLCdcXHUwMTZBJzonVW1hY3InLCdcXHVEODM1XFx1REQzMyc6J3ZmcicsJ1xcdUQ4MzVcXHVERDY3Jzondm9wZicsJ1xcdUQ4MzVcXHVEQ0NCJzondnNjcicsJ1xcdUQ4MzVcXHVERDE5JzonVmZyJywnXFx1RDgzNVxcdURENEQnOidWb3BmJywnXFx1RDgzNVxcdURDQjEnOidWc2NyJywnXFx1RDgzNVxcdURENjgnOid3b3BmJywnXFx1RDgzNVxcdURDQ0MnOid3c2NyJywnXFx1RDgzNVxcdUREMzQnOid3ZnInLCdcXHVEODM1XFx1RENCMic6J1dzY3InLCdcXHVEODM1XFx1REQ0RSc6J1dvcGYnLCdcXHVEODM1XFx1REQxQSc6J1dmcicsJ1xcdTAxNzUnOid3Y2lyYycsJ1xcdTAxNzQnOidXY2lyYycsJ1xcdUQ4MzVcXHVERDM1JzoneGZyJywnXFx1RDgzNVxcdURDQ0QnOid4c2NyJywnXFx1RDgzNVxcdURENjknOid4b3BmJywnXFx1RDgzNVxcdURENEYnOidYb3BmJywnXFx1RDgzNVxcdUREMUInOidYZnInLCdcXHVEODM1XFx1RENCMyc6J1hzY3InLCdcXHVEODM1XFx1REQzNic6J3lmcicsJ1xcdUQ4MzVcXHVEQ0NFJzoneXNjcicsJ1xcdUQ4MzVcXHVERDZBJzoneW9wZicsJ1xcdUQ4MzVcXHVEQ0I0JzonWXNjcicsJ1xcdUQ4MzVcXHVERDFDJzonWWZyJywnXFx1RDgzNVxcdURENTAnOidZb3BmJywnXFx4RkQnOid5YWN1dGUnLCdcXHhERCc6J1lhY3V0ZScsJ1xcdTAxNzcnOid5Y2lyYycsJ1xcdTAxNzYnOidZY2lyYycsJ1xceEZGJzoneXVtbCcsJ1xcdTAxNzgnOidZdW1sJywnXFx1RDgzNVxcdURDQ0YnOid6c2NyJywnXFx1RDgzNVxcdUREMzcnOid6ZnInLCdcXHVEODM1XFx1REQ2Qic6J3pvcGYnLCdcXHUyMTI4JzonWmZyJywnXFx1MjEyNCc6J1pvcGYnLCdcXHVEODM1XFx1RENCNSc6J1pzY3InLCdcXHUwMTdBJzonemFjdXRlJywnXFx1MDE3OSc6J1phY3V0ZScsJ1xcdTAxN0UnOid6Y2Fyb24nLCdcXHUwMTdEJzonWmNhcm9uJywnXFx1MDE3Qyc6J3pkb3QnLCdcXHUwMTdCJzonWmRvdCcsJ1xcdTAxQjUnOidpbXBlZCcsJ1xceEZFJzondGhvcm4nLCdcXHhERSc6J1RIT1JOJywnXFx1MDE0OSc6J25hcG9zJywnXFx1MDNCMSc6J2FscGhhJywnXFx1MDM5MSc6J0FscGhhJywnXFx1MDNCMic6J2JldGEnLCdcXHUwMzkyJzonQmV0YScsJ1xcdTAzQjMnOidnYW1tYScsJ1xcdTAzOTMnOidHYW1tYScsJ1xcdTAzQjQnOidkZWx0YScsJ1xcdTAzOTQnOidEZWx0YScsJ1xcdTAzQjUnOidlcHNpJywnXFx1MDNGNSc6J2Vwc2l2JywnXFx1MDM5NSc6J0Vwc2lsb24nLCdcXHUwM0REJzonZ2FtbWFkJywnXFx1MDNEQyc6J0dhbW1hZCcsJ1xcdTAzQjYnOid6ZXRhJywnXFx1MDM5Nic6J1pldGEnLCdcXHUwM0I3JzonZXRhJywnXFx1MDM5Nyc6J0V0YScsJ1xcdTAzQjgnOid0aGV0YScsJ1xcdTAzRDEnOid0aGV0YXYnLCdcXHUwMzk4JzonVGhldGEnLCdcXHUwM0I5JzonaW90YScsJ1xcdTAzOTknOidJb3RhJywnXFx1MDNCQSc6J2thcHBhJywnXFx1MDNGMCc6J2thcHBhdicsJ1xcdTAzOUEnOidLYXBwYScsJ1xcdTAzQkInOidsYW1iZGEnLCdcXHUwMzlCJzonTGFtYmRhJywnXFx1MDNCQyc6J211JywnXFx4QjUnOidtaWNybycsJ1xcdTAzOUMnOidNdScsJ1xcdTAzQkQnOidudScsJ1xcdTAzOUQnOidOdScsJ1xcdTAzQkUnOid4aScsJ1xcdTAzOUUnOidYaScsJ1xcdTAzQkYnOidvbWljcm9uJywnXFx1MDM5Ric6J09taWNyb24nLCdcXHUwM0MwJzoncGknLCdcXHUwM0Q2JzoncGl2JywnXFx1MDNBMCc6J1BpJywnXFx1MDNDMSc6J3JobycsJ1xcdTAzRjEnOidyaG92JywnXFx1MDNBMSc6J1JobycsJ1xcdTAzQzMnOidzaWdtYScsJ1xcdTAzQTMnOidTaWdtYScsJ1xcdTAzQzInOidzaWdtYWYnLCdcXHUwM0M0JzondGF1JywnXFx1MDNBNCc6J1RhdScsJ1xcdTAzQzUnOid1cHNpJywnXFx1MDNBNSc6J1Vwc2lsb24nLCdcXHUwM0QyJzonVXBzaScsJ1xcdTAzQzYnOidwaGknLCdcXHUwM0Q1JzoncGhpdicsJ1xcdTAzQTYnOidQaGknLCdcXHUwM0M3JzonY2hpJywnXFx1MDNBNyc6J0NoaScsJ1xcdTAzQzgnOidwc2knLCdcXHUwM0E4JzonUHNpJywnXFx1MDNDOSc6J29tZWdhJywnXFx1MDNBOSc6J29obScsJ1xcdTA0MzAnOidhY3knLCdcXHUwNDEwJzonQWN5JywnXFx1MDQzMSc6J2JjeScsJ1xcdTA0MTEnOidCY3knLCdcXHUwNDMyJzondmN5JywnXFx1MDQxMic6J1ZjeScsJ1xcdTA0MzMnOidnY3knLCdcXHUwNDEzJzonR2N5JywnXFx1MDQ1Myc6J2dqY3knLCdcXHUwNDAzJzonR0pjeScsJ1xcdTA0MzQnOidkY3knLCdcXHUwNDE0JzonRGN5JywnXFx1MDQ1Mic6J2RqY3knLCdcXHUwNDAyJzonREpjeScsJ1xcdTA0MzUnOidpZWN5JywnXFx1MDQxNSc6J0lFY3knLCdcXHUwNDUxJzonaW9jeScsJ1xcdTA0MDEnOidJT2N5JywnXFx1MDQ1NCc6J2p1a2N5JywnXFx1MDQwNCc6J0p1a2N5JywnXFx1MDQzNic6J3poY3knLCdcXHUwNDE2JzonWkhjeScsJ1xcdTA0MzcnOid6Y3knLCdcXHUwNDE3JzonWmN5JywnXFx1MDQ1NSc6J2RzY3knLCdcXHUwNDA1JzonRFNjeScsJ1xcdTA0MzgnOidpY3knLCdcXHUwNDE4JzonSWN5JywnXFx1MDQ1Nic6J2l1a2N5JywnXFx1MDQwNic6J0l1a2N5JywnXFx1MDQ1Nyc6J3lpY3knLCdcXHUwNDA3JzonWUljeScsJ1xcdTA0MzknOidqY3knLCdcXHUwNDE5JzonSmN5JywnXFx1MDQ1OCc6J2pzZXJjeScsJ1xcdTA0MDgnOidKc2VyY3knLCdcXHUwNDNBJzona2N5JywnXFx1MDQxQSc6J0tjeScsJ1xcdTA0NUMnOidramN5JywnXFx1MDQwQyc6J0tKY3knLCdcXHUwNDNCJzonbGN5JywnXFx1MDQxQic6J0xjeScsJ1xcdTA0NTknOidsamN5JywnXFx1MDQwOSc6J0xKY3knLCdcXHUwNDNDJzonbWN5JywnXFx1MDQxQyc6J01jeScsJ1xcdTA0M0QnOiduY3knLCdcXHUwNDFEJzonTmN5JywnXFx1MDQ1QSc6J25qY3knLCdcXHUwNDBBJzonTkpjeScsJ1xcdTA0M0UnOidvY3knLCdcXHUwNDFFJzonT2N5JywnXFx1MDQzRic6J3BjeScsJ1xcdTA0MUYnOidQY3knLCdcXHUwNDQwJzoncmN5JywnXFx1MDQyMCc6J1JjeScsJ1xcdTA0NDEnOidzY3knLCdcXHUwNDIxJzonU2N5JywnXFx1MDQ0Mic6J3RjeScsJ1xcdTA0MjInOidUY3knLCdcXHUwNDVCJzondHNoY3knLCdcXHUwNDBCJzonVFNIY3knLCdcXHUwNDQzJzondWN5JywnXFx1MDQyMyc6J1VjeScsJ1xcdTA0NUUnOid1YnJjeScsJ1xcdTA0MEUnOidVYnJjeScsJ1xcdTA0NDQnOidmY3knLCdcXHUwNDI0JzonRmN5JywnXFx1MDQ0NSc6J2toY3knLCdcXHUwNDI1JzonS0hjeScsJ1xcdTA0NDYnOid0c2N5JywnXFx1MDQyNic6J1RTY3knLCdcXHUwNDQ3JzonY2hjeScsJ1xcdTA0MjcnOidDSGN5JywnXFx1MDQ1Ric6J2R6Y3knLCdcXHUwNDBGJzonRFpjeScsJ1xcdTA0NDgnOidzaGN5JywnXFx1MDQyOCc6J1NIY3knLCdcXHUwNDQ5Jzonc2hjaGN5JywnXFx1MDQyOSc6J1NIQ0hjeScsJ1xcdTA0NEEnOidoYXJkY3knLCdcXHUwNDJBJzonSEFSRGN5JywnXFx1MDQ0Qic6J3ljeScsJ1xcdTA0MkInOidZY3knLCdcXHUwNDRDJzonc29mdGN5JywnXFx1MDQyQyc6J1NPRlRjeScsJ1xcdTA0NEQnOidlY3knLCdcXHUwNDJEJzonRWN5JywnXFx1MDQ0RSc6J3l1Y3knLCdcXHUwNDJFJzonWVVjeScsJ1xcdTA0NEYnOid5YWN5JywnXFx1MDQyRic6J1lBY3knLCdcXHUyMTM1JzonYWxlcGgnLCdcXHUyMTM2JzonYmV0aCcsJ1xcdTIxMzcnOidnaW1lbCcsJ1xcdTIxMzgnOidkYWxldGgnfTtcblxuXHR2YXIgcmVnZXhFc2NhcGUgPSAvW1wiJic8PmBdL2c7XG5cdHZhciBlc2NhcGVNYXAgPSB7XG5cdFx0J1wiJzogJyZxdW90OycsXG5cdFx0JyYnOiAnJmFtcDsnLFxuXHRcdCdcXCcnOiAnJiN4Mjc7Jyxcblx0XHQnPCc6ICcmbHQ7Jyxcblx0XHQvLyBTZWUgaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2FtYmlndW91cy1hbXBlcnNhbmRzOiBpbiBIVE1MLCB0aGVcblx0XHQvLyBmb2xsb3dpbmcgaXMgbm90IHN0cmljdGx5IG5lY2Vzc2FyeSB1bmxlc3MgaXRcdTIwMTlzIHBhcnQgb2YgYSB0YWcgb3IgYW5cblx0XHQvLyB1bnF1b3RlZCBhdHRyaWJ1dGUgdmFsdWUuIFdlXHUyMDE5cmUgb25seSBlc2NhcGluZyBpdCB0byBzdXBwb3J0IHRob3NlXG5cdFx0Ly8gc2l0dWF0aW9ucywgYW5kIGZvciBYTUwgc3VwcG9ydC5cblx0XHQnPic6ICcmZ3Q7Jyxcblx0XHQvLyBJbiBJbnRlcm5ldCBFeHBsb3JlciBcdTIyNjQgOCwgdGhlIGJhY2t0aWNrIGNoYXJhY3RlciBjYW4gYmUgdXNlZFxuXHRcdC8vIHRvIGJyZWFrIG91dCBvZiAodW4pcXVvdGVkIGF0dHJpYnV0ZSB2YWx1ZXMgb3IgSFRNTCBjb21tZW50cy5cblx0XHQvLyBTZWUgaHR0cDovL2h0bWw1c2VjLm9yZy8jMTAyLCBodHRwOi8vaHRtbDVzZWMub3JnLyMxMDgsIGFuZFxuXHRcdC8vIGh0dHA6Ly9odG1sNXNlYy5vcmcvIzEzMy5cblx0XHQnYCc6ICcmI3g2MDsnXG5cdH07XG5cblx0dmFyIHJlZ2V4SW52YWxpZEVudGl0eSA9IC8mIyg/Olt4WF1bXmEtZkEtRjAtOV18W14wLTl4WF0pLztcblx0dmFyIHJlZ2V4SW52YWxpZFJhd0NvZGVQb2ludCA9IC9bXFwwLVxceDA4XFx4MEJcXHgwRS1cXHgxRlxceDdGLVxceDlGXFx1RkREMC1cXHVGREVGXFx1RkZGRVxcdUZGRkZdfFtcXHVEODNGXFx1RDg3RlxcdUQ4QkZcXHVEOEZGXFx1RDkzRlxcdUQ5N0ZcXHVEOUJGXFx1RDlGRlxcdURBM0ZcXHVEQTdGXFx1REFCRlxcdURBRkZcXHVEQjNGXFx1REI3RlxcdURCQkZcXHVEQkZGXVtcXHVERkZFXFx1REZGRl18W1xcdUQ4MDAtXFx1REJGRl0oPyFbXFx1REMwMC1cXHVERkZGXSl8KD86W15cXHVEODAwLVxcdURCRkZdfF4pW1xcdURDMDAtXFx1REZGRl0vO1xuXHR2YXIgcmVnZXhEZWNvZGUgPSAvJihDb3VudGVyQ2xvY2t3aXNlQ29udG91ckludGVncmFsfERvdWJsZUxvbmdMZWZ0UmlnaHRBcnJvd3xDbG9ja3dpc2VDb250b3VySW50ZWdyYWx8Tm90TmVzdGVkR3JlYXRlckdyZWF0ZXJ8Tm90U3F1YXJlU3VwZXJzZXRFcXVhbHxEaWFjcml0aWNhbERvdWJsZUFjdXRlfE5vdFJpZ2h0VHJpYW5nbGVFcXVhbHxOb3RTdWNjZWVkc1NsYW50RXF1YWx8Tm90UHJlY2VkZXNTbGFudEVxdWFsfENsb3NlQ3VybHlEb3VibGVRdW90ZXxOZWdhdGl2ZVZlcnlUaGluU3BhY2V8RG91YmxlQ29udG91ckludGVncmFsfEZpbGxlZFZlcnlTbWFsbFNxdWFyZXxDYXBpdGFsRGlmZmVyZW50aWFsRHxPcGVuQ3VybHlEb3VibGVRdW90ZXxFbXB0eVZlcnlTbWFsbFNxdWFyZXxOZXN0ZWRHcmVhdGVyR3JlYXRlcnxEb3VibGVMb25nUmlnaHRBcnJvd3xOb3RMZWZ0VHJpYW5nbGVFcXVhbHxOb3RHcmVhdGVyU2xhbnRFcXVhbHxSZXZlcnNlVXBFcXVpbGlicml1bXxEb3VibGVMZWZ0UmlnaHRBcnJvd3xOb3RTcXVhcmVTdWJzZXRFcXVhbHxOb3REb3VibGVWZXJ0aWNhbEJhcnxSaWdodEFycm93TGVmdEFycm93fE5vdEdyZWF0ZXJGdWxsRXF1YWx8Tm90UmlnaHRUcmlhbmdsZUJhcnxTcXVhcmVTdXBlcnNldEVxdWFsfERvd25MZWZ0UmlnaHRWZWN0b3J8RG91YmxlTG9uZ0xlZnRBcnJvd3xsZWZ0cmlnaHRzcXVpZ2Fycm93fExlZnRBcnJvd1JpZ2h0QXJyb3d8TmVnYXRpdmVNZWRpdW1TcGFjZXxibGFja3RyaWFuZ2xlcmlnaHR8UmlnaHREb3duVmVjdG9yQmFyfFByZWNlZGVzU2xhbnRFcXVhbHxSaWdodERvdWJsZUJyYWNrZXR8U3VjY2VlZHNTbGFudEVxdWFsfE5vdExlZnRUcmlhbmdsZUJhcnxSaWdodFRyaWFuZ2xlRXF1YWx8U3F1YXJlSW50ZXJzZWN0aW9ufFJpZ2h0RG93blRlZVZlY3RvcnxSZXZlcnNlRXF1aWxpYnJpdW18TmVnYXRpdmVUaGlja1NwYWNlfGxvbmdsZWZ0cmlnaHRhcnJvd3xMb25nbGVmdHJpZ2h0YXJyb3d8TG9uZ0xlZnRSaWdodEFycm93fERvd25SaWdodFRlZVZlY3RvcnxEb3duUmlnaHRWZWN0b3JCYXJ8R3JlYXRlclNsYW50RXF1YWx8U3F1YXJlU3Vic2V0RXF1YWx8TGVmdERvd25WZWN0b3JCYXJ8TGVmdERvdWJsZUJyYWNrZXR8VmVydGljYWxTZXBhcmF0b3J8cmlnaHRsZWZ0aGFycG9vbnN8Tm90R3JlYXRlckdyZWF0ZXJ8Tm90U3F1YXJlU3VwZXJzZXR8YmxhY2t0cmlhbmdsZWxlZnR8YmxhY2t0cmlhbmdsZWRvd258TmVnYXRpdmVUaGluU3BhY2V8TGVmdERvd25UZWVWZWN0b3J8Tm90TGVzc1NsYW50RXF1YWx8bGVmdHJpZ2h0aGFycG9vbnN8RG91YmxlVXBEb3duQXJyb3d8RG91YmxlVmVydGljYWxCYXJ8TGVmdFRyaWFuZ2xlRXF1YWx8RmlsbGVkU21hbGxTcXVhcmV8dHdvaGVhZHJpZ2h0YXJyb3d8Tm90TmVzdGVkTGVzc0xlc3N8RG93bkxlZnRUZWVWZWN0b3J8RG93bkxlZnRWZWN0b3JCYXJ8UmlnaHRBbmdsZUJyYWNrZXR8Tm90VGlsZGVGdWxsRXF1YWx8Tm90UmV2ZXJzZUVsZW1lbnR8UmlnaHRVcERvd25WZWN0b3J8RGlhY3JpdGljYWxUaWxkZXxOb3RTdWNjZWVkc1RpbGRlfGNpcmNsZWFycm93cmlnaHR8Tm90UHJlY2VkZXNFcXVhbHxyaWdodGhhcnBvb25kb3dufERvdWJsZVJpZ2h0QXJyb3d8Tm90U3VjY2VlZHNFcXVhbHxOb25CcmVha2luZ1NwYWNlfE5vdFJpZ2h0VHJpYW5nbGV8TGVzc0VxdWFsR3JlYXRlcnxSaWdodFVwVGVlVmVjdG9yfExlZnRBbmdsZUJyYWNrZXR8R3JlYXRlckZ1bGxFcXVhbHxEb3duQXJyb3dVcEFycm93fFJpZ2h0VXBWZWN0b3JCYXJ8dHdvaGVhZGxlZnRhcnJvd3xHcmVhdGVyRXF1YWxMZXNzfGRvd25oYXJwb29ucmlnaHR8UmlnaHRUcmlhbmdsZUJhcnxudHJpYW5nbGVyaWdodGVxfE5vdFN1cGVyc2V0RXF1YWx8TGVmdFVwRG93blZlY3RvcnxEaWFjcml0aWNhbEFjdXRlfHJpZ2h0cmlnaHRhcnJvd3N8dmFydHJpYW5nbGVyaWdodHxVcEFycm93RG93bkFycm93fERpYWNyaXRpY2FsR3JhdmV8VW5kZXJQYXJlbnRoZXNpc3xFbXB0eVNtYWxsU3F1YXJlfExlZnRVcFZlY3RvckJhcnxsZWZ0cmlnaHRhcnJvd3N8RG93blJpZ2h0VmVjdG9yfGRvd25oYXJwb29ubGVmdHx0cmlhbmdsZXJpZ2h0ZXF8U2hvcnRSaWdodEFycm93fE92ZXJQYXJlbnRoZXNpc3xEb3VibGVMZWZ0QXJyb3d8RG91YmxlRG93bkFycm93fE5vdFNxdWFyZVN1YnNldHxiaWd0cmlhbmdsZWRvd258bnRyaWFuZ2xlbGVmdGVxfFVwcGVyUmlnaHRBcnJvd3xjdXJ2ZWFycm93cmlnaHR8dmFydHJpYW5nbGVsZWZ0fE5vdExlZnRUcmlhbmdsZXxubGVmdHJpZ2h0YXJyb3d8TG93ZXJSaWdodEFycm93fE5vdEh1bXBEb3duSHVtcHxOb3RHcmVhdGVyVGlsZGV8cmlnaHR0aHJlZXRpbWVzfExlZnRVcFRlZVZlY3RvcnxOb3RHcmVhdGVyRXF1YWx8c3RyYWlnaHRlcHNpbG9ufExlZnRUcmlhbmdsZUJhcnxyaWdodHNxdWlnYXJyb3d8Q29udG91ckludGVncmFsfHJpZ2h0bGVmdGFycm93c3xDbG9zZUN1cmx5UXVvdGV8UmlnaHREb3duVmVjdG9yfExlZnRSaWdodFZlY3RvcnxuTGVmdHJpZ2h0YXJyb3d8bGVmdGhhcnBvb25kb3dufGNpcmNsZWFycm93bGVmdHxTcXVhcmVTdXBlcnNldHxPcGVuQ3VybHlRdW90ZXxob29rcmlnaHRhcnJvd3xIb3Jpem9udGFsTGluZXxEaWFjcml0aWNhbERvdHxOb3RMZXNzR3JlYXRlcnxudHJpYW5nbGVyaWdodHxEb3VibGVSaWdodFRlZXxJbnZpc2libGVDb21tYXxJbnZpc2libGVUaW1lc3xMb3dlckxlZnRBcnJvd3xEb3duTGVmdFZlY3RvcnxOb3RTdWJzZXRFcXVhbHxjdXJ2ZWFycm93bGVmdHx0cmlhbmdsZWxlZnRlcXxOb3RWZXJ0aWNhbEJhcnxUaWxkZUZ1bGxFcXVhbHxkb3duZG93bmFycm93c3xOb3RHcmVhdGVyTGVzc3xSaWdodFRlZVZlY3RvcnxaZXJvV2lkdGhTcGFjZXxsb29wYXJyb3dyaWdodHxMb25nUmlnaHRBcnJvd3xkb3VibGViYXJ3ZWRnZXxTaG9ydExlZnRBcnJvd3xTaG9ydERvd25BcnJvd3xSaWdodFZlY3RvckJhcnxHcmVhdGVyR3JlYXRlcnxSZXZlcnNlRWxlbWVudHxyaWdodGhhcnBvb251cHxMZXNzU2xhbnRFcXVhbHxsZWZ0dGhyZWV0aW1lc3x1cGhhcnBvb25yaWdodHxyaWdodGFycm93dGFpbHxMZWZ0RG93blZlY3RvcnxMb25ncmlnaHRhcnJvd3xOZXN0ZWRMZXNzTGVzc3xVcHBlckxlZnRBcnJvd3xuc2hvcnRwYXJhbGxlbHxsZWZ0bGVmdGFycm93c3xsZWZ0cmlnaHRhcnJvd3xMZWZ0cmlnaHRhcnJvd3xMZWZ0UmlnaHRBcnJvd3xsb25ncmlnaHRhcnJvd3x1cGhhcnBvb25sZWZ0fFJpZ2h0QXJyb3dCYXJ8QXBwbHlGdW5jdGlvbnxMZWZ0VGVlVmVjdG9yfGxlZnRhcnJvd3RhaWx8Tm90RXF1YWxUaWxkZXx2YXJzdWJzZXRuZXFxfHZhcnN1cHNldG5lcXF8UmlnaHRUZWVBcnJvd3xTdWNjZWVkc0VxdWFsfFN1Y2NlZWRzVGlsZGV8TGVmdFZlY3RvckJhcnxTdXBlcnNldEVxdWFsfGhvb2tsZWZ0YXJyb3d8RGlmZmVyZW50aWFsRHxWZXJ0aWNhbFRpbGRlfFZlcnlUaGluU3BhY2V8YmxhY2t0cmlhbmdsZXxiaWd0cmlhbmdsZXVwfExlc3NGdWxsRXF1YWx8ZGl2aWRlb250aW1lc3xsZWZ0aGFycG9vbnVwfFVwRXF1aWxpYnJpdW18bnRyaWFuZ2xlbGVmdHxSaWdodFRyaWFuZ2xlfG1lYXN1cmVkYW5nbGV8c2hvcnRwYXJhbGxlbHxsb25nbGVmdGFycm93fExvbmdsZWZ0YXJyb3d8TG9uZ0xlZnRBcnJvd3xEb3VibGVMZWZ0VGVlfFBvaW5jYXJlcGxhbmV8UHJlY2VkZXNFcXVhbHx0cmlhbmdsZXJpZ2h0fERvdWJsZVVwQXJyb3d8UmlnaHRVcFZlY3RvcnxmYWxsaW5nZG90c2VxfGxvb3BhcnJvd2xlZnR8UHJlY2VkZXNUaWxkZXxOb3RUaWxkZUVxdWFsfE5vdFRpbGRlVGlsZGV8c21hbGxzZXRtaW51c3xQcm9wb3J0aW9uYWx8dHJpYW5nbGVsZWZ0fHRyaWFuZ2xlZG93bnxVbmRlckJyYWNrZXR8Tm90SHVtcEVxdWFsfGV4cG9uZW50aWFsZXxFeHBvbmVudGlhbEV8Tm90TGVzc1RpbGRlfEhpbGJlcnRTcGFjZXxSaWdodENlaWxpbmd8YmxhY2tsb3plbmdlfHZhcnN1cHNldG5lcXxIdW1wRG93bkh1bXB8R3JlYXRlckVxdWFsfFZlcnRpY2FsTGluZXxMZWZ0VGVlQXJyb3d8Tm90TGVzc0VxdWFsfERvd25UZWVBcnJvd3xMZWZ0VHJpYW5nbGV8dmFyc3Vic2V0bmVxfEludGVyc2VjdGlvbnxOb3RDb25ncnVlbnR8RG93bkFycm93QmFyfExlZnRVcFZlY3RvcnxMZWZ0QXJyb3dCYXJ8cmlzaW5nZG90c2VxfEdyZWF0ZXJUaWxkZXxSb3VuZEltcGxpZXN8U3F1YXJlU3Vic2V0fFNob3J0VXBBcnJvd3xOb3RTdXBlcnNldHxxdWF0ZXJuaW9uc3xwcmVjbmFwcHJveHxiYWNrZXBzaWxvbnxwcmVjY3VybHllcXxPdmVyQnJhY2tldHxibGFja3NxdWFyZXxNZWRpdW1TcGFjZXxWZXJ0aWNhbEJhcnxjaXJjbGVkY2lyY3xjaXJjbGVkZGFzaHxDaXJjbGVNaW51c3xDaXJjbGVUaW1lc3xMZXNzR3JlYXRlcnxjdXJseWVxcHJlY3xjdXJseWVxc3VjY3xkaWFtb25kc3VpdHxVcERvd25BcnJvd3xVcGRvd25hcnJvd3xSdWxlRGVsYXllZHxScmlnaHRhcnJvd3x1cGRvd25hcnJvd3xSaWdodFZlY3RvcnxuUmlnaHRhcnJvd3xucmlnaHRhcnJvd3xlcXNsYW50bGVzc3xMZWZ0Q2VpbGluZ3xFcXVpbGlicml1bXxTbWFsbENpcmNsZXxleHBlY3RhdGlvbnxOb3RTdWNjZWVkc3x0aGlja2FwcHJveHxHcmVhdGVyTGVzc3xTcXVhcmVVbmlvbnxOb3RQcmVjZWRlc3xOb3RMZXNzTGVzc3xzdHJhaWdodHBoaXxzdWNjbmFwcHJveHxzdWNjY3VybHllcXxTdWJzZXRFcXVhbHxzcXN1cHNldGVxfFByb3BvcnRpb258TGFwbGFjZXRyZnxJbWFnaW5hcnlJfHN1cHNldG5lcXF8Tm90R3JlYXRlcnxndHJlcXFsZXNzfE5vdEVsZW1lbnR8VGhpY2tTcGFjZXxUaWxkZUVxdWFsfFRpbGRlVGlsZGV8Rm91cmllcnRyZnxybW91c3RhY2hlfEVxdWFsVGlsZGV8ZXFzbGFudGd0cnxVbmRlckJyYWNlfExlZnRWZWN0b3J8VXBBcnJvd0JhcnxuTGVmdGFycm93fG5zdWJzZXRlcXF8c3Vic2V0bmVxcXxuc3Vwc2V0ZXFxfG5sZWZ0YXJyb3d8c3VjY2FwcHJveHxsZXNzYXBwcm94fFVwVGVlQXJyb3d8dXB1cGFycm93c3xjdXJseXdlZGdlfGxlc3NlcXFndHJ8dmFyZXBzaWxvbnx2YXJub3RoaW5nfFJpZ2h0Rmxvb3J8Y29tcGxlbWVudHxDaXJjbGVQbHVzfHNxc3Vic2V0ZXF8TGxlZnRhcnJvd3xjaXJjbGVkYXN0fFJpZ2h0QXJyb3d8UmlnaHRhcnJvd3xyaWdodGFycm93fGxtb3VzdGFjaGV8QmVybm91bGxpc3xwcmVjYXBwcm94fG1hcHN0b2xlZnR8bWFwc3RvZG93bnxsb25nbWFwc3RvfGRvdHNxdWFyZXxkb3duYXJyb3d8RG91YmxlRG90fG5zdWJzZXRlcXxzdXBzZXRuZXF8bGVmdGFycm93fG5zdXBzZXRlcXxzdWJzZXRuZXF8VGhpblNwYWNlfG5nZXFzbGFudHxzdWJzZXRlcXF8SHVtcEVxdWFsfE5vdFN1YnNldHx0cmlhbmdsZXF8Tm90Q3VwQ2FwfGxlc3NlcWd0cnxoZWFydHN1aXR8VHJpcGxlRG90fExlZnRhcnJvd3xDb3Byb2R1Y3R8Q29uZ3J1ZW50fHZhcnByb3B0b3xjb21wbGV4ZXN8Z3ZlcnRuZXFxfExlZnRBcnJvd3xMZXNzVGlsZGV8c3Vwc2V0ZXFxfE1pbnVzUGx1c3xDaXJjbGVEb3R8bmxlcXNsYW50fE5vdEV4aXN0c3xndHJlcWxlc3N8bnBhcmFsbGVsfFVuaW9uUGx1c3xMZWZ0Rmxvb3J8Y2hlY2ttYXJrfENlbnRlckRvdHxjZW50ZXJkb3R8TWVsbGludHJmfGd0cmFwcHJveHxiaWdvdGltZXN8T3ZlckJyYWNlfHNwYWRlc3VpdHx0aGVyZWZvcmV8cGl0Y2hmb3JrfHJhdGlvbmFsc3xQbHVzTWludXN8QmFja3NsYXNofFRoZXJlZm9yZXxEb3duQnJldmV8YmFja3NpbWVxfGJhY2twcmltZXxEb3duQXJyb3d8bnNob3J0bWlkfERvd25hcnJvd3xsdmVydG5lcXF8ZXF2cGFyc2x8aW1hZ2xpbmV8aW1hZ3BhcnR8aW5maW50aWV8aW50ZWdlcnN8SW50ZWdyYWx8aW50ZXJjYWx8TGVzc0xlc3N8VWFycm9jaXJ8aW50bGFyaGt8c3FzdXBzZXR8YW5nbXNkYWZ8c3FzdWJzZXR8bGxjb3JuZXJ8dmFydGhldGF8Y3VwYnJjYXB8bG5hcHByb3h8U3VwZXJzZXR8U3VjaFRoYXR8c3VjY25zaW18c3VjY25lcXF8YW5nbXNkYWd8YmlndXBsdXN8Y3VybHl2ZWV8dHJwZXppdW18U3VjY2VlZHN8Tm90VGlsZGV8Ymlnd2VkZ2V8YW5nbXNkYWh8YW5ncnR2YmR8dHJpbWludXN8Y3djb25pbnR8ZnBhcnRpbnR8bHJjb3JuZXJ8c21lcGFyc2x8c3Vic2V0ZXF8dXJjb3JuZXJ8bHVyZHNoYXJ8bGFlbXB0eXZ8RERvdHJhaGR8YXBwcm94ZXF8bGRydXNoYXJ8YXdjb25pbnR8bWFwc3RvdXB8YmFja2Nvbmd8c2hvcnRtaWR8dHJpYW5nbGV8Z2Vxc2xhbnR8Z2VzZG90b2x8dGltZXNiYXJ8Y2lyY2xlZFJ8Y2lyY2xlZFN8c2V0bWludXN8bXVsdGltYXB8bmF0dXJhbHN8c2Nwb2xpbnR8bmNvbmdkb3R8UmlnaHRUZWV8Ym94bWludXN8Z25hcHByb3h8Ym94dGltZXN8YW5kc2xvcGV8dGhpY2tzaW18YW5nbXNkYWF8dmFyc2lnbWF8Y2lyZm5pbnR8cnRyaWx0cml8YW5nbXNkYWJ8cnBwb2xpbnR8YW5nbXNkYWN8YmFyd2VkZ2V8ZHJia2Fyb3d8Y2x1YnN1aXR8dGhldGFzeW18YnNvbGhzdWJ8Y2FwYnJjdXB8ZHppZ3JhcnJ8ZG90ZXFkb3R8RG90RXF1YWx8ZG90bWludXN8VW5kZXJCYXJ8Tm90RXF1YWx8cmVhbHBhcnR8b3RpbWVzYXN8dWxjb3JuZXJ8aGtzZWFyb3d8aGtzd2Fyb3d8cGFyYWxsZWx8UGFydGlhbER8ZWxpbnRlcnN8ZW1wdHlzZXR8cGx1c2FjaXJ8YmJya3Ricmt8YW5nbXNkYWR8cG9pbnRpbnR8Ymlnb3BsdXN8YW5nbXNkYWV8UHJlY2VkZXN8Ymlnc3FjdXB8dmFya2FwcGF8bm90aW5kb3R8c3Vwc2V0ZXF8cHJlY25lcXF8cHJlY25zaW18cHJvZmFsYXJ8cHJvZmxpbmV8cHJvZnN1cmZ8bGVxc2xhbnR8bGVzZG90b3J8cmFlbXB0eXZ8c3VicGx1c3xub3RuaXZifG5vdG5pdmN8c3VicmFycnx6aWdyYXJyfHZ6aWd6YWd8c3VibXVsdHxzdWJlZG90fEVsZW1lbnR8YmV0d2VlbnxjaXJzY2lyfGxhcnJiZnN8bGFycnNpbXxsb3RpbWVzfGxicmtzbGR8bGJya3NsdXxsb3plbmdlfGxkcmRoYXJ8ZGJrYXJvd3xiaWdjaXJjfGVwc2lsb258c2ltcmFycnxzaW1wbHVzfGx0cXVlc3R8RXBzaWxvbnxsdXJ1aGFyfGd0cXVlc3R8bWFsdGVzZXxucG9saW50fGVxY29sb258bnByZWNlcXxiaWdvZG90fGRkYWdnZXJ8Z3RybGVzc3xibmVxdWl2fGhhcnJjaXJ8ZGRvdHNlcXxlcXVpdkREfGJhY2tzaW18ZGVtcHR5dnxuc3FzdWJlfG5zcXN1cGV8VXBzaWxvbnxuc3Vic2V0fHVwc2lsb258bWludXNkdXxuc3VjY2VxfHN3YXJyb3d8bnN1cHNldHxjb2xvbmVxfHNlYXJyb3d8Ym94cGx1c3xuYXBwcm94fG5hdHVyYWx8YXN5bXBlcXxhbGVmc3ltfGNvbmdkb3R8bmVhcnJvd3xiaWdzdGFyfGRpYW1vbmR8c3VwcGx1c3x0cml0aW1lfExlZnRUZWV8bnZpbmZpbnx0cmlwbHVzfE5ld0xpbmV8bnZsdHJpZXxudnJ0cmllfG53YXJyb3d8bmV4aXN0c3xEaWFtb25kfHJ1bHVoYXJ8SW1wbGllc3xzdXBtdWx0fGFuZ3phcnJ8c3VwbGFycnxzdXBoc3VifHF1ZXN0ZXF8YmVjYXVzZXxkaWdhbW1hfEJlY2F1c2V8b2xjcm9zc3xiZW1wdHl2fG9taWNyb258T21pY3Jvbnxyb3RpbWVzfE5vQnJlYWt8aW50cHJvZHxhbmdydHZifG9yZGVyb2Z8dXdhbmdsZXxzdXBoc29sfGxlc2RvdG98b3JzbG9wZXxEb3duVGVlfHJlYWxpbmV8Y3VkYXJybHxyZGxkaGFyfE92ZXJCYXJ8c3VwZWRvdHxsZXNzZG90fHN1cGRzdWJ8dG9wZm9ya3xzdWNjc2ltfHJicmtzbHV8cmJya3NsZHxwZXJ0ZW5rfGN1ZGFycnJ8aXNpbmRvdHxwbGFuY2tofGxlc3NndHJ8cGx1c2NpcnxnZXNkb3RvfHBsdXNzaW18cGx1c3R3b3xsZXNzc2ltfGN1bGFycnB8cmFycnNpbXxDYXlsZXlzfG5vdGludmF8bm90aW52Ynxub3RpbnZjfFVwQXJyb3d8VXBhcnJvd3x1cGFycm93fE5vdExlc3N8ZHdhbmdsZXxwcmVjc2ltfFByb2R1Y3R8Y3VyYXJybXxDY29uaW50fGRvdHBsdXN8cmFycmJmc3xjY3Vwc3NtfENlZGlsbGF8Y2VtcHR5dnxub3RuaXZhfHF1YXRpbnR8ZnJhYzM1fGZyYWMzOHxmcmFjNDV8ZnJhYzU2fGZyYWM1OHxmcmFjNzh8dHJpZG90fHhvcGx1c3xnYWN1dGV8Z2FtbWFkfEdhbW1hZHxsZmlzaHR8bGZsb29yfGJpZ2N1cHxzcXN1cGV8Z2JyZXZlfEdicmV2ZXxsaGFydWx8c3FzdWJlfHNxY3Vwc3xHY2VkaWx8YXBhY2lyfGxsaGFyZHxsbWlkb3R8TG1pZG90fGxtb3VzdHxhbmRhbmR8c3FjYXBzfGFwcHJveHxBYnJldmV8c3BhZGVzfGNpcmNlcXx0cHJpbWV8ZGl2aWRlfHRvcGNpcnxBc3NpZ258dG9wYm90fGdlc2RvdHxkaXZvbnh8eHVwbHVzfHRpbWVzZHxnZXNsZXN8YXRpbGRlfHNvbGJhcnxTT0ZUY3l8bG9wbHVzfHRpbWVzYnxsb3dhc3R8bG93YmFyfGRsY29ybnxkbGNyb3B8c29mdGN5fGRvbGxhcnxscGFybHR8dGhrc2ltfGxyaGFyZHxBdGlsZGV8bHNhcXVvfHNtYXNocHxiaWd2ZWV8dGhpbnNwfHdyZWF0aHxia2Fyb3d8bHNxdW9yfGxzdHJva3xMc3Ryb2t8bHRocmVlfGx0aW1lc3xsdGxhcnJ8RG90RG90fHNpbWRvdHxsdHJQYXJ8d2VpZXJwfHhzcWN1cHxhbmdtc2R8c2lnbWF2fHNpZ21hZnx6ZWV0cmZ8WmNhcm9ufHpjYXJvbnxtYXBzdG98dnN1cG5lfHRoZXRhdnxjaXJtaWR8bWFya2VyfG1jb21tYXxaYWN1dGV8dnN1Ym5FfHRoZXJlNHxndGxQYXJ8dnN1Ym5lfGJvdHRvbXxndHJhcnJ8U0hDSGN5fHNoY2hjeXxtaWRhc3R8bWlkY2lyfG1pZGRvdHxtaW51c2J8bWludXNkfGd0cmRvdHxib3d0aWV8c2Zyb3dufG1ucGx1c3xtb2RlbHN8Y29sb25lfHNlc3dhcnxDb2xvbmV8bXN0cG9zfHNlYXJoa3xndHJzaW18bmFjdXRlfE5hY3V0ZXxib3hib3h8dGVscmVjfGhhaXJzcHxUY2VkaWx8bmJ1bXBlfHNjbnNpbXxuY2Fyb258TmNhcm9ufG5jZWRpbHxOY2VkaWx8aGFtaWx0fFNjZWRpbHxuZWFyaGt8aGFyZGN5fEhBUkRjeXx0Y2VkaWx8VGNhcm9ufGNvbW1hdHxuZXF1aXZ8bmVzZWFyfHRjYXJvbnx0YXJnZXR8aGVhcnRzfG5leGlzdHx2YXJyaG98c2NlZGlsfFNjYXJvbnxzY2Fyb258aGVsbGlwfFNhY3V0ZXxzYWN1dGV8aGVyY29ufHN3bndhcnxjb21wZm58cnRpbWVzfHJ0aHJlZXxyc3F1b3J8cnNhcXVvfHphY3V0ZXx3ZWRnZXF8aG9tdGh0fGJhcnZlZXxiYXJ3ZWR8QmFyd2VkfHJwYXJndHxob3JiYXJ8Y29uaW50fHN3YXJoa3xyb3BsdXN8bmx0cmllfGhzbGFzaHxoc3Ryb2t8SHN0cm9rfHJtb3VzdHxDb25pbnR8YnByaW1lfGh5YnVsbHxoeXBoZW58aWFjdXRlfElhY3V0ZXxzdXBzdXB8c3Vwc3VifHN1cHNpbXx2YXJwaGl8Y29wcm9kfGJydmJhcnxhZ3JhdmV8U3Vwc2V0fHN1cHNldHxpZ3JhdmV8SWdyYXZlfG5vdGluRXxBZ3JhdmV8aWlpaW50fGlpbmZpbnxjb3B5c3J8d2VkYmFyfFZlcmJhcnx2YW5ncnR8YmVjYXVzfGluY2FyZXx2ZXJiYXJ8aW5vZG90fGJ1bGxldHxkcmNvcm58aW50Y2FsfGRyY3JvcHxjdWxhcnJ8dmVsbGlwfFV0aWxkZXxidW1wZXF8Y3VwY2FwfGRzdHJva3xEc3Ryb2t8Q3VwQ2FwfGN1cGN1cHxjdXBkb3R8ZWFjdXRlfEVhY3V0ZXxzdXBkb3R8aXF1ZXN0fGVhc3RlcnxlY2Fyb258RWNhcm9ufGVjb2xvbnxpc2luc3Z8dXRpbGRlfGl0aWxkZXxJdGlsZGV8Y3VyYXJyfHN1Y2NlcXxCdW1wZXF8Y2FjdXRlfHVsY3JvcHxucGFyc2x8Q2FjdXRlfG5wcmN1ZXxlZ3JhdmV8RWdyYXZlfG5yYXJyY3xucmFycnd8c3Vic3VwfHN1YnN1YnxucnRyaWV8anNlcmN5fG5zY2N1ZXxKc2VyY3l8a2FwcGF2fGtjZWRpbHxLY2VkaWx8c3Vic2ltfHVsY29ybnxuc2ltZXF8ZWdzZG90fHZlZWJhcnxrZ3JlZW58Y2FwYW5kfGVsc2RvdHxTdWJzZXR8c3Vic2V0fGN1cnJlbnxhYWN1dGV8bGFjdXRlfExhY3V0ZXxlbXB0eXZ8bnRpbGRlfE50aWxkZXxsYWdyYW58bGFtYmRhfExhbWJkYXxjYXBjYXB8VWdyYXZlfGxhbmdsZXxzdWJkb3R8ZW1zcDEzfG51bWVyb3xlbXNwMTR8bnZkYXNofG52RGFzaHxuVmRhc2h8blZEYXNofHVncmF2ZXx1ZmlzaHR8bnZIYXJyfGxhcnJmc3xudmxBcnJ8bGFycmhrfGxhcnJscHxsYXJycGx8bnZyQXJyfFVkYmxhY3xud2FyaGt8bGFycnRsfG53bmVhcnxvYWN1dGV8T2FjdXRlfGxhdGFpbHxsQXRhaWx8c3N0YXJmfGxicmFjZXxvZGJsYWN8T2RibGFjfGxicmFja3x1ZGJsYWN8b2Rzb2xkfGVwYXJzbHxsY2Fyb258TGNhcm9ufG9ncmF2ZXxPZ3JhdmV8bGNlZGlsfExjZWRpbHxBYWN1dGV8c3NtaWxlfHNzZXRtbnxzcXVhcmZ8bGRxdW9yfGNhcGN1cHxvbWludXN8Y3lsY3R5fHJoYXJ1bHxlcWNpcmN8ZGFnZ2VyfHJmbG9vcnxyZmlzaHR8RGFnZ2VyfGRhbGV0aHxlcXVhbHN8b3JpZ29mfGNhcGRvdHxlcXVlc3R8ZGNhcm9ufERjYXJvbnxyZHF1b3J8b3NsYXNofE9zbGFzaHxvdGlsZGV8T3RpbGRlfG90aW1lc3xPdGltZXN8dXJjcm9wfFVicmV2ZXx1YnJldmV8WWFjdXRlfFVhY3V0ZXx1YWN1dGV8UmNlZGlsfHJjZWRpbHx1cmNvcm58cGFyc2ltfFJjYXJvbnxWZGFzaGx8cmNhcm9ufFRzdHJva3xwZXJjbnR8cGVyaW9kfHBlcm1pbHxFeGlzdHN8eWFjdXRlfHJicmFja3xyYnJhY2V8cGhtbWF0fGNjYXJvbnxDY2Fyb258cGxhbmNrfGNjZWRpbHxwbGFua3Z8dHN0cm9rfGZlbWFsZXxwbHVzZG98cGx1c2R1fGZmaWxpZ3xwbHVzbW58ZmZsbGlnfENjZWRpbHxyQXRhaWx8ZGZpc2h0fGJlcm5vdXxyYXRhaWx8UmFycnRsfHJhcnJ0bHxhbmdzcGh8cmFycnBsfHJhcnJscHxyYXJyaGt8eHdlZGdlfHhvdGltZXxmb3JhbGx8Rm9yQWxsfFZ2ZGFzaHx2c3VwbkV8cHJlY2VxfGJpZ2NhcHxmcmFjMTJ8ZnJhYzEzfGZyYWMxNHxwcmltZXN8cmFycmZzfHBybnNpbXxmcmFjMTV8U3F1YXJlfGZyYWMxNnxzcXVhcmV8bGVzZG90fGZyYWMxOHxmcmFjMjN8cHJvcHRvfHBydXJlbHxyYXJyYXB8cmFuZ2xlfHB1bmNzcHxmcmFjMjV8UmFjdXRlfHFwcmltZXxyYWN1dGV8bGVzZ2VzfGZyYWMzNHxhYnJldmV8QUVsaWd8ZXFzaW18dXRkb3R8c2V0bW58dXJ0cml8RXF1YWx8VXJpbmd8c2VBcnJ8dXJpbmd8c2VhcnJ8ZGFzaHZ8RGFzaHZ8bXVtYXB8bmFibGF8aW9nb258SW9nb258c2RvdGV8c2RvdGJ8c2NzaW18bmFwaWR8bmFwb3N8ZXF1aXZ8bmF0dXJ8QWNpcmN8ZGJsYWN8ZXJhcnJ8bmJ1bXB8aXByb2R8ZXJEb3R8dWNpcmN8YXdpbnR8ZXNkb3R8YW5ncnR8bmNvbmd8aXNpbkV8c2NuYXB8U2NpcmN8c2NpcmN8bmRhc2h8aXNpbnN8VWJyY3l8bmVhcnJ8bmVBcnJ8aXNpbnZ8bmVkb3R8dWJyY3l8YWN1dGV8WWNpcmN8aXVrY3l8SXVrY3l8eHV0cml8bmVzaW18Y2FyZXR8amNpcmN8SmNpcmN8Y2Fyb258dHdpeHR8ZGRhcnJ8c2NjdWV8ZXhpc3R8am1hdGh8c2JxdW98bmdlcXF8YW5nc3R8Y2NhcHN8bGNlaWx8bmdzaW18VXBUZWV8ZGVsdGF8RGVsdGF8cnRyaWZ8bmhhcnJ8bmhBcnJ8bmhwYXJ8cnRyaWV8anVrY3l8SnVrY3l8a2FwcGF8cnNxdW98S2FwcGF8bmxhcnJ8bmxBcnJ8VFNIY3l8cnJhcnJ8YW9nb258QW9nb258ZmZsaWd8eHJhcnJ8dHNoY3l8Y2NpcmN8bmxlcXF8ZmlsaWd8dXBzaWh8bmxlc3N8ZGhhcmx8bmxzaW18ZmpsaWd8cm9wYXJ8bmx0cml8ZGhhcnJ8cm9icmt8cm9hcnJ8ZmxsaWd8Zmx0bnN8cm9hbmd8cm5taWR8c3VibkV8c3VibmV8bEFhcnJ8dHJpc2J8Q2NpcmN8YWNpcmN8Y2N1cHN8Ymxhbmt8VkRhc2h8Zm9ya3Z8VmRhc2h8bGFuZ2R8Y2VkaWx8YmxrMTJ8YmxrMTR8bGFxdW98c3RybnN8ZGlhbXN8bm90aW58dkRhc2h8bGFycmJ8YmxrMzR8YmxvY2t8ZGlzaW58dXBsdXN8dmRhc2h8dkJhcnZ8YWVsaWd8c3RhcmZ8V2VkZ2V8Y2hlY2t8eHJBcnJ8bGF0ZXN8bGJhcnJ8bEJhcnJ8bm90bml8bGJicmt8YmNvbmd8ZnJhc2x8bGJya2V8ZnJvd258dnJ0cml8dnByb3B8dm5zdXB8Z2FtbWF8R2FtbWF8d2VkZ2V8eG9kb3R8YmRxdW98c3JhcnJ8ZG90ZXF8bGRxdW98Ym94ZGx8Ym94ZEx8Z2NpcmN8R2NpcmN8Ym94RGx8Ym94REx8Ym94ZHJ8Ym94ZFJ8Ym94RHJ8VFJBREV8dHJhZGV8cmxoYXJ8Ym94RFJ8dm5zdWJ8bnBhcnR8dmx0cml8cmxhcnJ8Ym94aGR8Ym94aER8bnByZWN8Z2VzY2N8bnJhcnJ8bnJBcnJ8Ym94SGR8Ym94SER8Ym94aHV8Ym94aFV8bnJ0cml8Ym94SHV8Y2x1YnN8Ym94SFV8dGltZXN8Y29sb258Q29sb258Z2ltZWx8eGxBcnJ8VGlsZGV8bnNpbWV8dGlsZGV8bnNtaWR8bnNwYXJ8VEhPUk58dGhvcm58eGxhcnJ8bnN1YmV8bnN1YkV8dGhrYXB8eGhBcnJ8Y29tbWF8bnN1Y2N8Ym94dWx8Ym94dUx8bnN1cGV8bnN1cEV8Z25lcXF8Z25zaW18Ym94VWx8Ym94VUx8Z3JhdmV8Ym94dXJ8Ym94dVJ8Ym94VXJ8Ym94VVJ8bGVzY2N8YW5nbGV8YmVwc2l8Ym94dmh8dmFycGl8Ym94dkh8bnVtc3B8VGhldGF8Z3NpbWV8Z3NpbWx8dGhldGF8Ym94Vmh8Ym94Vkh8Ym94dmx8Z3RjaXJ8Z3Rkb3R8Ym94dkx8Ym94Vmx8Ym94Vkx8Y3JhcnJ8Y3Jvc3N8Q3Jvc3N8bnZzaW18Ym94dnJ8bndhcnJ8bndBcnJ8c3FzdXB8ZHRkb3R8VW9nb258bGhhcmR8bGhhcnV8ZHRyaWZ8b2NpcmN8T2NpcmN8bGhibGt8ZHVhcnJ8b2Rhc2h8c3FzdWJ8SGFjZWt8c3FjdXB8bGxhcnJ8ZHVoYXJ8b2VsaWd8T0VsaWd8b2ZjaXJ8Ym94dlJ8dW9nb258bGx0cml8Ym94VnJ8Y3N1YmV8dXVhcnJ8b2hiYXJ8Y3N1cGV8Y3Rkb3R8b2xhcnJ8b2xjaXJ8aGFycnd8b2xpbmV8c3FjYXB8b21hY3J8T21hY3J8b21lZ2F8T21lZ2F8Ym94VlJ8YWxlcGh8bG5lcXF8bG5zaW18bG9hbmd8bG9hcnJ8cmhhcnV8bG9icmt8aGNpcmN8b3BlcnB8b3BsdXN8cmhhcmR8SGNpcmN8b3JhcnJ8VW5pb258b3JkZXJ8ZWNpcmN8RWNpcmN8Y3VlcHJ8c3psaWd8Y3Vlc2N8YnJldmV8cmVhbHN8ZUREb3R8QnJldmV8aG9hcnJ8bG9wYXJ8dXRyaWZ8cmRxdW98VW1hY3J8dW1hY3J8ZWZEb3R8c3dBcnJ8dWx0cml8YWxwaGF8cmNlaWx8b3ZiYXJ8c3dhcnJ8V2NpcmN8d2NpcmN8c210ZXN8c21pbGV8YnNlbWl8bHJhcnJ8YXJpbmd8cGFyc2x8bHJoYXJ8YnNpbWV8dWhibGt8bHJ0cml8Y3Vwb3J8QXJpbmd8dWhhcnJ8dWhhcmx8c2xhcnJ8cmJya2V8YnNvbGJ8bHNpbWV8cmJicmt8UkJhcnJ8bHNpbWd8cGhvbmV8ckJhcnJ8cmJhcnJ8aWNpcmN8bHNxdW98SWNpcmN8ZW1hY3J8RW1hY3J8cmF0aW98c2ltbmV8cGx1c2J8c2ltbEV8c2ltZ0V8c2ltZXF8cGx1c2V8bHRjaXJ8bHRkb3R8ZW1wdHl8eGhhcnJ8eGR0cml8aWV4Y2x8QWxwaGF8bHRyaWV8cmFycnd8cG91bmR8bHRyaWZ8eGNpcmN8YnVtcGV8cHJjdWV8YnVtcEV8YXN5bXB8YW1hY3J8Y3V2ZWV8U2lnbWF8c2lnbWF8aWlpbnR8dWRoYXJ8aWlvdGF8aWpsaWd8SUpsaWd8c3VwbkV8aW1hY3J8SW1hY3J8cHJpbWV8UHJpbWV8aW1hZ2V8cHJuYXB8ZW9nb258RW9nb258cmFycmN8bWRhc2h8bUREb3R8Y3V3ZWR8aW1hdGh8c3VwbmV8aW1wZWR8QW1hY3J8dWRhcnJ8cHJzaW18bWljcm98cmFycmJ8Y3dpbnR8cmFxdW98aW5maW58ZXBsdXN8cmFuZ2V8cmFuZ2R8VWNpcmN8cmFkaWN8bWludXN8YW1hbGd8dmVlZXF8ckFhcnJ8ZXBzaXZ8eWNpcmN8cXVlc3R8c2hhcnB8cXVvdHx6d25qfFFzY3J8cmFjZXxxc2NyfFFvcGZ8cW9wZnxxaW50fHJhbmd8UmFuZ3xac2NyfHpzY3J8Wm9wZnx6b3BmfHJhcnJ8ckFycnxSYXJyfFBzY3J8cHNjcnxwcm9wfHByb2R8cHJuRXxwcmVjfFpIY3l8emhjeXxwcmFwfFpldGF8emV0YXxQb3BmfHBvcGZ8WmRvdHxwbHVzfHpkb3R8WXVtbHx5dW1sfHBoaXZ8WVVjeXx5dWN5fFlzY3J8eXNjcnxwZXJwfFlvcGZ8eW9wZnxwYXJ0fHBhcmF8WUljeXxPdW1sfHJjdWJ8eWljeXxZQWN5fHJkY2F8b3VtbHxvc29sfE9zY3J8cmRzaHx5YWN5fHJlYWx8b3Njcnx4dmVlfGFuZGR8cmVjdHxhbmR2fFhzY3J8b3JvcnxvcmRtfG9yZGZ8eHNjcnxhbmdlfGFvcGZ8QW9wZnxySGFyfFhvcGZ8b3BhcnxPb3BmfHhvcGZ8eG5pc3xyaG92fG9vcGZ8b21pZHx4bWFwfG9pbnR8YXBpZHxhcG9zfG9nb258YXNjcnxBc2NyfG9kb3R8b2Rpdnx4Y3VwfHhjYXB8b2NpcnxvYXN0fG52bHR8bnZsZXxudmd0fG52Z2V8bnZhcHxXc2NyfHdzY3J8YXVtbHxudGxnfG50Z2x8bnN1cHxuc3VifG5zaW18TnNjcnxuc2NyfG5zY2V8V29wZnxyaW5nfG5wcmV8d29wZnxucGFyfEF1bWx8QmFydnxiYnJrfE5vcGZ8bm9wZnxubWlkfG5MdHZ8YmV0YXxyb3BmfFJvcGZ8QmV0YXxiZXRofG5sZXN8cnBhcnxubGVxfGJub3R8Yk5vdHxubGRyfE5KY3l8cnNjcnxSc2NyfFZzY3J8dnNjcnxyc3FifG5qY3l8Ym9wZnxuaXNkfEJvcGZ8cnRyaXxWb3BmfG5HdHZ8bmd0cnx2b3BmfGJveGh8Ym94SHxib3h2fG5nZXN8bmdlcXxib3hWfGJzY3J8c2NhcHxCc2NyfGJzaW18VmVydHx2ZXJ0fGJzb2x8YnVsbHxidW1wfGNhcHN8Y2RvdHxuY3VwfHNjbkV8bmNhcHxuYnNwfG5hcEV8Q2RvdHxjZW50fHNkb3R8VmJhcnxuYW5nfHZCYXJ8Y2hjeXxNc2NyfG1zY3J8c2VjdHxzZW1pfENIY3l8TW9wZnxtb3BmfHNleHR8Y2lyY3xjaXJlfG1sZHJ8bWxjcHxjaXJFfGNvbXB8c2hjeXxTSGN5fHZBcnJ8dmFycnxjb25nfGNvcGZ8Q29wZnxjb3B5fENPUFl8bWFsdHxtYWxlfG1hY3J8bHZuRXxjc2NyfGx0cml8c2ltZXxsdGNjfHNpbWd8Q3NjcnxzaW1sfGNzdWJ8VXVtbHxsc3FifGxzaW18dXVtbHxjc3VwfExzY3J8bHNjcnx1dHJpfHNtaWR8bHBhcnxjdXBzfHNtdGV8bG96ZnxkYXJyfExvcGZ8VXNjcnxzb2xifGxvcGZ8c29wZnxTb3BmfGxuZXF8dXNjcnxzcGFyfGRBcnJ8bG5hcHxEYXJyfGRhc2h8U3FydHxMSmN5fGxqY3l8bEhhcnxkSGFyfFVwc2l8dXBzaXxkaWFtfGxlc2d8ZGpjeXxESmN5fGxlcXF8ZG9wZnxEb3BmfGRzY3J8RHNjcnxkc2N5fGxkc2h8bGRjYXxzcXVmfERTY3l8c3NjcnxTc2NyfGRzb2x8bGN1YnxsYXRlfHN0YXJ8U3RhcnxVb3BmfExhcnJ8bEFycnxsYXJyfHVvcGZ8ZHRyaXxkemN5fHN1YmV8c3ViRXxMYW5nfGxhbmd8S3Njcnxrc2NyfEtvcGZ8a29wZnxLSmN5fGtqY3l8S0hjeXxraGN5fERaY3l8ZWNpcnxlZG90fGVEb3R8SnNjcnxqc2NyfHN1Y2N8Sm9wZnxqb3BmfEVkb3R8dUhhcnxlbXNwfGVuc3B8SXVtbHxpdW1sfGVvcGZ8aXNpbnxJc2NyfGlzY3J8RW9wZnxlcGFyfHN1bmd8ZXBzaXxlc2NyfHN1cDF8c3VwMnxzdXAzfElvdGF8aW90YXxzdXBlfHN1cEV8SW9wZnxpb3BmfElPY3l8aW9jeXxFc2NyfGVzaW18RXNpbXxpbW9mfFVhcnJ8UVVPVHx1QXJyfHVhcnJ8ZXVtbHxJRWN5fGllY3l8SWRvdHxFdW1sfGV1cm98ZXhjbHxIc2NyfGhzY3J8SG9wZnxob3BmfFRTY3l8dHNjeXxUc2NyfGhiYXJ8dHNjcnxmbGF0fHRicmt8Zm5vZnxoQXJyfGhhcnJ8aGFsZnxmb3BmfEZvcGZ8dGRvdHxndm5FfGZvcmt8dHJpZXxndGNjfGZzY3J8RnNjcnxnZG90fGdzaW18R3Njcnxnc2NyfEdvcGZ8Z29wZnxnbmVxfEdkb3R8dG9zYXxnbmFwfFRvcGZ8dG9wZnxnZXFxfHRvZWF8R0pjeXxnamN5fHRpbnR8Z2VzbHxtaWR8U2ZyfGdnZ3x0b3B8Z2VzfGdsYXxnbEV8Z2xqfGdlcXxnbmV8Z0VsfGdlbHxnbkV8R2N5fGdjeXxnYXB8VGZyfHRmcnxUY3l8dGN5fEhhdHxUYXV8RmZyfHRhdXxUYWJ8aGZyfEhmcnxmZnJ8RmN5fGZjeXxpY3l8SWN5fGlmZnxFVEh8ZXRofGlmcnxJZnJ8RXRhfGV0YXxpbnR8SW50fFN1cHxzdXB8dWN5fFVjeXxTdW18c3VtfGpjeXxFTkd8dWZyfFVmcnxlbmd8SmN5fGpmcnxlbHN8ZWxsfGVnc3xFZnJ8ZWZyfEpmcnx1bWx8a2N5fEtjeXxFY3l8ZWN5fGtmcnxLZnJ8bGFwfFN1YnxzdWJ8bGF0fGxjeXxMY3l8bGVnfERvdHxkb3R8bEVnfGxlcXxsZXN8c3F1fGRpdnxkaWV8bGZyfExmcnxsZ0V8RGZyfGRmcnxEZWx8ZGVnfERjeXxkY3l8bG5lfGxuRXxzb2x8bG96fHNtdHxDdXB8bHJtfGN1cHxsc2h8THNofHNpbXxzaHl8bWFwfE1hcHxtY3l8TWN5fG1mcnxNZnJ8bWhvfGdmcnxHZnJ8c2ZyfGNpcnxDaGl8Y2hpfG5hcHxDZnJ8dmN5fFZjeXxjZnJ8U2N5fHNjeXxuY3l8TmN5fHZlZXxWZWV8Q2FwfGNhcHxuZnJ8c2NFfHNjZXxOZnJ8bmdlfG5nRXxuR2d8dmZyfFZmcnxuZ3R8Ym90fG5HdHxuaXN8bml2fFJzaHxyc2h8bmxlfG5sRXxibmV8QmZyfGJmcnxuTGx8bmx0fG5MdHxCY3l8YmN5fG5vdHxOb3R8cmxtfHdmcnxXZnJ8bnByfG5zY3xudW18b2N5fGFzdHxPY3l8b2ZyfHhmcnxYZnJ8T2ZyfG9ndHxvaG18YXBFfG9sdHxSaG98YXBlfHJob3xSZnJ8cmZyfG9yZHxSRUd8YW5nfHJlZ3xvcnZ8QW5kfGFuZHxBTVB8UmN5fGFtcHxBZnJ8eWN5fFljeXx5ZW58eWZyfFlmcnxyY3l8cGFyfHBjeXxQY3l8cGZyfFBmcnxwaGl8UGhpfGFmcnxBY3l8YWN5fHpjeXxaY3l8cGl2fGFjRXxhY2R8emZyfFpmcnxwcmV8cHJFfHBzaXxQc2l8cWZyfFFmcnx6d2p8T3J8Z2V8R2d8Z3R8Z2d8ZWx8b1N8bHR8THR8TFR8UmV8bGd8Z2x8ZWd8bmV8SW18aXR8bGV8RER8d3B8d3J8bnV8TnV8ZGR8bEV8U2N8c2N8cGl8UGl8ZWV8YWZ8bGx8TGx8cnh8Z0V8eGl8cG18WGl8aWN8cHJ8UHJ8aW58bml8bXB8bXV8YWN8TXV8b3J8YXB8R3R8R1R8aWkpO3wmKEFhY3V0ZXxBZ3JhdmV8QXRpbGRlfENjZWRpbHxFYWN1dGV8RWdyYXZlfElhY3V0ZXxJZ3JhdmV8TnRpbGRlfE9hY3V0ZXxPZ3JhdmV8T3NsYXNofE90aWxkZXxVYWN1dGV8VWdyYXZlfFlhY3V0ZXxhYWN1dGV8YWdyYXZlfGF0aWxkZXxicnZiYXJ8Y2NlZGlsfGN1cnJlbnxkaXZpZGV8ZWFjdXRlfGVncmF2ZXxmcmFjMTJ8ZnJhYzE0fGZyYWMzNHxpYWN1dGV8aWdyYXZlfGlxdWVzdHxtaWRkb3R8bnRpbGRlfG9hY3V0ZXxvZ3JhdmV8b3NsYXNofG90aWxkZXxwbHVzbW58dWFjdXRlfHVncmF2ZXx5YWN1dGV8QUVsaWd8QWNpcmN8QXJpbmd8RWNpcmN8SWNpcmN8T2NpcmN8VEhPUk58VWNpcmN8YWNpcmN8YWN1dGV8YWVsaWd8YXJpbmd8Y2VkaWx8ZWNpcmN8aWNpcmN8aWV4Y2x8bGFxdW98bWljcm98b2NpcmN8cG91bmR8cmFxdW98c3psaWd8dGhvcm58dGltZXN8dWNpcmN8QXVtbHxDT1BZfEV1bWx8SXVtbHxPdW1sfFFVT1R8VXVtbHxhdW1sfGNlbnR8Y29weXxldW1sfGl1bWx8bWFjcnxuYnNwfG9yZGZ8b3JkbXxvdW1sfHBhcmF8cXVvdHxzZWN0fHN1cDF8c3VwMnxzdXAzfHV1bWx8eXVtbHxBTVB8RVRIfFJFR3xhbXB8ZGVnfGV0aHxub3R8cmVnfHNoeXx1bWx8eWVufEdUfExUfGd0fGx0KSg/ITspKFs9YS16QS1aMC05XT8pfCYjKFswLTldKykoOz8pfCYjW3hYXShbYS1mQS1GMC05XSspKDs/KXwmKFswLTlhLXpBLVpdKykvZztcblx0dmFyIGRlY29kZU1hcCA9IHsnYWFjdXRlJzonXFx4RTEnLCdBYWN1dGUnOidcXHhDMScsJ2FicmV2ZSc6J1xcdTAxMDMnLCdBYnJldmUnOidcXHUwMTAyJywnYWMnOidcXHUyMjNFJywnYWNkJzonXFx1MjIzRicsJ2FjRSc6J1xcdTIyM0VcXHUwMzMzJywnYWNpcmMnOidcXHhFMicsJ0FjaXJjJzonXFx4QzInLCdhY3V0ZSc6J1xceEI0JywnYWN5JzonXFx1MDQzMCcsJ0FjeSc6J1xcdTA0MTAnLCdhZWxpZyc6J1xceEU2JywnQUVsaWcnOidcXHhDNicsJ2FmJzonXFx1MjA2MScsJ2Fmcic6J1xcdUQ4MzVcXHVERDFFJywnQWZyJzonXFx1RDgzNVxcdUREMDQnLCdhZ3JhdmUnOidcXHhFMCcsJ0FncmF2ZSc6J1xceEMwJywnYWxlZnN5bSc6J1xcdTIxMzUnLCdhbGVwaCc6J1xcdTIxMzUnLCdhbHBoYSc6J1xcdTAzQjEnLCdBbHBoYSc6J1xcdTAzOTEnLCdhbWFjcic6J1xcdTAxMDEnLCdBbWFjcic6J1xcdTAxMDAnLCdhbWFsZyc6J1xcdTJBM0YnLCdhbXAnOicmJywnQU1QJzonJicsJ2FuZCc6J1xcdTIyMjcnLCdBbmQnOidcXHUyQTUzJywnYW5kYW5kJzonXFx1MkE1NScsJ2FuZGQnOidcXHUyQTVDJywnYW5kc2xvcGUnOidcXHUyQTU4JywnYW5kdic6J1xcdTJBNUEnLCdhbmcnOidcXHUyMjIwJywnYW5nZSc6J1xcdTI5QTQnLCdhbmdsZSc6J1xcdTIyMjAnLCdhbmdtc2QnOidcXHUyMjIxJywnYW5nbXNkYWEnOidcXHUyOUE4JywnYW5nbXNkYWInOidcXHUyOUE5JywnYW5nbXNkYWMnOidcXHUyOUFBJywnYW5nbXNkYWQnOidcXHUyOUFCJywnYW5nbXNkYWUnOidcXHUyOUFDJywnYW5nbXNkYWYnOidcXHUyOUFEJywnYW5nbXNkYWcnOidcXHUyOUFFJywnYW5nbXNkYWgnOidcXHUyOUFGJywnYW5ncnQnOidcXHUyMjFGJywnYW5ncnR2Yic6J1xcdTIyQkUnLCdhbmdydHZiZCc6J1xcdTI5OUQnLCdhbmdzcGgnOidcXHUyMjIyJywnYW5nc3QnOidcXHhDNScsJ2FuZ3phcnInOidcXHUyMzdDJywnYW9nb24nOidcXHUwMTA1JywnQW9nb24nOidcXHUwMTA0JywnYW9wZic6J1xcdUQ4MzVcXHVERDUyJywnQW9wZic6J1xcdUQ4MzVcXHVERDM4JywnYXAnOidcXHUyMjQ4JywnYXBhY2lyJzonXFx1MkE2RicsJ2FwZSc6J1xcdTIyNEEnLCdhcEUnOidcXHUyQTcwJywnYXBpZCc6J1xcdTIyNEInLCdhcG9zJzonXFwnJywnQXBwbHlGdW5jdGlvbic6J1xcdTIwNjEnLCdhcHByb3gnOidcXHUyMjQ4JywnYXBwcm94ZXEnOidcXHUyMjRBJywnYXJpbmcnOidcXHhFNScsJ0FyaW5nJzonXFx4QzUnLCdhc2NyJzonXFx1RDgzNVxcdURDQjYnLCdBc2NyJzonXFx1RDgzNVxcdURDOUMnLCdBc3NpZ24nOidcXHUyMjU0JywnYXN0JzonKicsJ2FzeW1wJzonXFx1MjI0OCcsJ2FzeW1wZXEnOidcXHUyMjREJywnYXRpbGRlJzonXFx4RTMnLCdBdGlsZGUnOidcXHhDMycsJ2F1bWwnOidcXHhFNCcsJ0F1bWwnOidcXHhDNCcsJ2F3Y29uaW50JzonXFx1MjIzMycsJ2F3aW50JzonXFx1MkExMScsJ2JhY2tjb25nJzonXFx1MjI0QycsJ2JhY2tlcHNpbG9uJzonXFx1MDNGNicsJ2JhY2twcmltZSc6J1xcdTIwMzUnLCdiYWNrc2ltJzonXFx1MjIzRCcsJ2JhY2tzaW1lcSc6J1xcdTIyQ0QnLCdCYWNrc2xhc2gnOidcXHUyMjE2JywnQmFydic6J1xcdTJBRTcnLCdiYXJ2ZWUnOidcXHUyMkJEJywnYmFyd2VkJzonXFx1MjMwNScsJ0JhcndlZCc6J1xcdTIzMDYnLCdiYXJ3ZWRnZSc6J1xcdTIzMDUnLCdiYnJrJzonXFx1MjNCNScsJ2Jicmt0YnJrJzonXFx1MjNCNicsJ2Jjb25nJzonXFx1MjI0QycsJ2JjeSc6J1xcdTA0MzEnLCdCY3knOidcXHUwNDExJywnYmRxdW8nOidcXHUyMDFFJywnYmVjYXVzJzonXFx1MjIzNScsJ2JlY2F1c2UnOidcXHUyMjM1JywnQmVjYXVzZSc6J1xcdTIyMzUnLCdiZW1wdHl2JzonXFx1MjlCMCcsJ2JlcHNpJzonXFx1MDNGNicsJ2Jlcm5vdSc6J1xcdTIxMkMnLCdCZXJub3VsbGlzJzonXFx1MjEyQycsJ2JldGEnOidcXHUwM0IyJywnQmV0YSc6J1xcdTAzOTInLCdiZXRoJzonXFx1MjEzNicsJ2JldHdlZW4nOidcXHUyMjZDJywnYmZyJzonXFx1RDgzNVxcdUREMUYnLCdCZnInOidcXHVEODM1XFx1REQwNScsJ2JpZ2NhcCc6J1xcdTIyQzInLCdiaWdjaXJjJzonXFx1MjVFRicsJ2JpZ2N1cCc6J1xcdTIyQzMnLCdiaWdvZG90JzonXFx1MkEwMCcsJ2JpZ29wbHVzJzonXFx1MkEwMScsJ2JpZ290aW1lcyc6J1xcdTJBMDInLCdiaWdzcWN1cCc6J1xcdTJBMDYnLCdiaWdzdGFyJzonXFx1MjYwNScsJ2JpZ3RyaWFuZ2xlZG93bic6J1xcdTI1QkQnLCdiaWd0cmlhbmdsZXVwJzonXFx1MjVCMycsJ2JpZ3VwbHVzJzonXFx1MkEwNCcsJ2JpZ3ZlZSc6J1xcdTIyQzEnLCdiaWd3ZWRnZSc6J1xcdTIyQzAnLCdia2Fyb3cnOidcXHUyOTBEJywnYmxhY2tsb3plbmdlJzonXFx1MjlFQicsJ2JsYWNrc3F1YXJlJzonXFx1MjVBQScsJ2JsYWNrdHJpYW5nbGUnOidcXHUyNUI0JywnYmxhY2t0cmlhbmdsZWRvd24nOidcXHUyNUJFJywnYmxhY2t0cmlhbmdsZWxlZnQnOidcXHUyNUMyJywnYmxhY2t0cmlhbmdsZXJpZ2h0JzonXFx1MjVCOCcsJ2JsYW5rJzonXFx1MjQyMycsJ2JsazEyJzonXFx1MjU5MicsJ2JsazE0JzonXFx1MjU5MScsJ2JsazM0JzonXFx1MjU5MycsJ2Jsb2NrJzonXFx1MjU4OCcsJ2JuZSc6Jz1cXHUyMEU1JywnYm5lcXVpdic6J1xcdTIyNjFcXHUyMEU1JywnYm5vdCc6J1xcdTIzMTAnLCdiTm90JzonXFx1MkFFRCcsJ2JvcGYnOidcXHVEODM1XFx1REQ1MycsJ0JvcGYnOidcXHVEODM1XFx1REQzOScsJ2JvdCc6J1xcdTIyQTUnLCdib3R0b20nOidcXHUyMkE1JywnYm93dGllJzonXFx1MjJDOCcsJ2JveGJveCc6J1xcdTI5QzknLCdib3hkbCc6J1xcdTI1MTAnLCdib3hkTCc6J1xcdTI1NTUnLCdib3hEbCc6J1xcdTI1NTYnLCdib3hETCc6J1xcdTI1NTcnLCdib3hkcic6J1xcdTI1MEMnLCdib3hkUic6J1xcdTI1NTInLCdib3hEcic6J1xcdTI1NTMnLCdib3hEUic6J1xcdTI1NTQnLCdib3hoJzonXFx1MjUwMCcsJ2JveEgnOidcXHUyNTUwJywnYm94aGQnOidcXHUyNTJDJywnYm94aEQnOidcXHUyNTY1JywnYm94SGQnOidcXHUyNTY0JywnYm94SEQnOidcXHUyNTY2JywnYm94aHUnOidcXHUyNTM0JywnYm94aFUnOidcXHUyNTY4JywnYm94SHUnOidcXHUyNTY3JywnYm94SFUnOidcXHUyNTY5JywnYm94bWludXMnOidcXHUyMjlGJywnYm94cGx1cyc6J1xcdTIyOUUnLCdib3h0aW1lcyc6J1xcdTIyQTAnLCdib3h1bCc6J1xcdTI1MTgnLCdib3h1TCc6J1xcdTI1NUInLCdib3hVbCc6J1xcdTI1NUMnLCdib3hVTCc6J1xcdTI1NUQnLCdib3h1cic6J1xcdTI1MTQnLCdib3h1Uic6J1xcdTI1NTgnLCdib3hVcic6J1xcdTI1NTknLCdib3hVUic6J1xcdTI1NUEnLCdib3h2JzonXFx1MjUwMicsJ2JveFYnOidcXHUyNTUxJywnYm94dmgnOidcXHUyNTNDJywnYm94dkgnOidcXHUyNTZBJywnYm94VmgnOidcXHUyNTZCJywnYm94VkgnOidcXHUyNTZDJywnYm94dmwnOidcXHUyNTI0JywnYm94dkwnOidcXHUyNTYxJywnYm94VmwnOidcXHUyNTYyJywnYm94VkwnOidcXHUyNTYzJywnYm94dnInOidcXHUyNTFDJywnYm94dlInOidcXHUyNTVFJywnYm94VnInOidcXHUyNTVGJywnYm94VlInOidcXHUyNTYwJywnYnByaW1lJzonXFx1MjAzNScsJ2JyZXZlJzonXFx1MDJEOCcsJ0JyZXZlJzonXFx1MDJEOCcsJ2JydmJhcic6J1xceEE2JywnYnNjcic6J1xcdUQ4MzVcXHVEQ0I3JywnQnNjcic6J1xcdTIxMkMnLCdic2VtaSc6J1xcdTIwNEYnLCdic2ltJzonXFx1MjIzRCcsJ2JzaW1lJzonXFx1MjJDRCcsJ2Jzb2wnOidcXFxcJywnYnNvbGInOidcXHUyOUM1JywnYnNvbGhzdWInOidcXHUyN0M4JywnYnVsbCc6J1xcdTIwMjInLCdidWxsZXQnOidcXHUyMDIyJywnYnVtcCc6J1xcdTIyNEUnLCdidW1wZSc6J1xcdTIyNEYnLCdidW1wRSc6J1xcdTJBQUUnLCdidW1wZXEnOidcXHUyMjRGJywnQnVtcGVxJzonXFx1MjI0RScsJ2NhY3V0ZSc6J1xcdTAxMDcnLCdDYWN1dGUnOidcXHUwMTA2JywnY2FwJzonXFx1MjIyOScsJ0NhcCc6J1xcdTIyRDInLCdjYXBhbmQnOidcXHUyQTQ0JywnY2FwYnJjdXAnOidcXHUyQTQ5JywnY2FwY2FwJzonXFx1MkE0QicsJ2NhcGN1cCc6J1xcdTJBNDcnLCdjYXBkb3QnOidcXHUyQTQwJywnQ2FwaXRhbERpZmZlcmVudGlhbEQnOidcXHUyMTQ1JywnY2Fwcyc6J1xcdTIyMjlcXHVGRTAwJywnY2FyZXQnOidcXHUyMDQxJywnY2Fyb24nOidcXHUwMkM3JywnQ2F5bGV5cyc6J1xcdTIxMkQnLCdjY2Fwcyc6J1xcdTJBNEQnLCdjY2Fyb24nOidcXHUwMTBEJywnQ2Nhcm9uJzonXFx1MDEwQycsJ2NjZWRpbCc6J1xceEU3JywnQ2NlZGlsJzonXFx4QzcnLCdjY2lyYyc6J1xcdTAxMDknLCdDY2lyYyc6J1xcdTAxMDgnLCdDY29uaW50JzonXFx1MjIzMCcsJ2NjdXBzJzonXFx1MkE0QycsJ2NjdXBzc20nOidcXHUyQTUwJywnY2RvdCc6J1xcdTAxMEInLCdDZG90JzonXFx1MDEwQScsJ2NlZGlsJzonXFx4QjgnLCdDZWRpbGxhJzonXFx4QjgnLCdjZW1wdHl2JzonXFx1MjlCMicsJ2NlbnQnOidcXHhBMicsJ2NlbnRlcmRvdCc6J1xceEI3JywnQ2VudGVyRG90JzonXFx4QjcnLCdjZnInOidcXHVEODM1XFx1REQyMCcsJ0Nmcic6J1xcdTIxMkQnLCdjaGN5JzonXFx1MDQ0NycsJ0NIY3knOidcXHUwNDI3JywnY2hlY2snOidcXHUyNzEzJywnY2hlY2ttYXJrJzonXFx1MjcxMycsJ2NoaSc6J1xcdTAzQzcnLCdDaGknOidcXHUwM0E3JywnY2lyJzonXFx1MjVDQicsJ2NpcmMnOidcXHUwMkM2JywnY2lyY2VxJzonXFx1MjI1NycsJ2NpcmNsZWFycm93bGVmdCc6J1xcdTIxQkEnLCdjaXJjbGVhcnJvd3JpZ2h0JzonXFx1MjFCQicsJ2NpcmNsZWRhc3QnOidcXHUyMjlCJywnY2lyY2xlZGNpcmMnOidcXHUyMjlBJywnY2lyY2xlZGRhc2gnOidcXHUyMjlEJywnQ2lyY2xlRG90JzonXFx1MjI5OScsJ2NpcmNsZWRSJzonXFx4QUUnLCdjaXJjbGVkUyc6J1xcdTI0QzgnLCdDaXJjbGVNaW51cyc6J1xcdTIyOTYnLCdDaXJjbGVQbHVzJzonXFx1MjI5NScsJ0NpcmNsZVRpbWVzJzonXFx1MjI5NycsJ2NpcmUnOidcXHUyMjU3JywnY2lyRSc6J1xcdTI5QzMnLCdjaXJmbmludCc6J1xcdTJBMTAnLCdjaXJtaWQnOidcXHUyQUVGJywnY2lyc2Npcic6J1xcdTI5QzInLCdDbG9ja3dpc2VDb250b3VySW50ZWdyYWwnOidcXHUyMjMyJywnQ2xvc2VDdXJseURvdWJsZVF1b3RlJzonXFx1MjAxRCcsJ0Nsb3NlQ3VybHlRdW90ZSc6J1xcdTIwMTknLCdjbHVicyc6J1xcdTI2NjMnLCdjbHVic3VpdCc6J1xcdTI2NjMnLCdjb2xvbic6JzonLCdDb2xvbic6J1xcdTIyMzcnLCdjb2xvbmUnOidcXHUyMjU0JywnQ29sb25lJzonXFx1MkE3NCcsJ2NvbG9uZXEnOidcXHUyMjU0JywnY29tbWEnOicsJywnY29tbWF0JzonQCcsJ2NvbXAnOidcXHUyMjAxJywnY29tcGZuJzonXFx1MjIxOCcsJ2NvbXBsZW1lbnQnOidcXHUyMjAxJywnY29tcGxleGVzJzonXFx1MjEwMicsJ2NvbmcnOidcXHUyMjQ1JywnY29uZ2RvdCc6J1xcdTJBNkQnLCdDb25ncnVlbnQnOidcXHUyMjYxJywnY29uaW50JzonXFx1MjIyRScsJ0NvbmludCc6J1xcdTIyMkYnLCdDb250b3VySW50ZWdyYWwnOidcXHUyMjJFJywnY29wZic6J1xcdUQ4MzVcXHVERDU0JywnQ29wZic6J1xcdTIxMDInLCdjb3Byb2QnOidcXHUyMjEwJywnQ29wcm9kdWN0JzonXFx1MjIxMCcsJ2NvcHknOidcXHhBOScsJ0NPUFknOidcXHhBOScsJ2NvcHlzcic6J1xcdTIxMTcnLCdDb3VudGVyQ2xvY2t3aXNlQ29udG91ckludGVncmFsJzonXFx1MjIzMycsJ2NyYXJyJzonXFx1MjFCNScsJ2Nyb3NzJzonXFx1MjcxNycsJ0Nyb3NzJzonXFx1MkEyRicsJ2NzY3InOidcXHVEODM1XFx1RENCOCcsJ0NzY3InOidcXHVEODM1XFx1REM5RScsJ2NzdWInOidcXHUyQUNGJywnY3N1YmUnOidcXHUyQUQxJywnY3N1cCc6J1xcdTJBRDAnLCdjc3VwZSc6J1xcdTJBRDInLCdjdGRvdCc6J1xcdTIyRUYnLCdjdWRhcnJsJzonXFx1MjkzOCcsJ2N1ZGFycnInOidcXHUyOTM1JywnY3VlcHInOidcXHUyMkRFJywnY3Vlc2MnOidcXHUyMkRGJywnY3VsYXJyJzonXFx1MjFCNicsJ2N1bGFycnAnOidcXHUyOTNEJywnY3VwJzonXFx1MjIyQScsJ0N1cCc6J1xcdTIyRDMnLCdjdXBicmNhcCc6J1xcdTJBNDgnLCdjdXBjYXAnOidcXHUyQTQ2JywnQ3VwQ2FwJzonXFx1MjI0RCcsJ2N1cGN1cCc6J1xcdTJBNEEnLCdjdXBkb3QnOidcXHUyMjhEJywnY3Vwb3InOidcXHUyQTQ1JywnY3Vwcyc6J1xcdTIyMkFcXHVGRTAwJywnY3VyYXJyJzonXFx1MjFCNycsJ2N1cmFycm0nOidcXHUyOTNDJywnY3VybHllcXByZWMnOidcXHUyMkRFJywnY3VybHllcXN1Y2MnOidcXHUyMkRGJywnY3VybHl2ZWUnOidcXHUyMkNFJywnY3VybHl3ZWRnZSc6J1xcdTIyQ0YnLCdjdXJyZW4nOidcXHhBNCcsJ2N1cnZlYXJyb3dsZWZ0JzonXFx1MjFCNicsJ2N1cnZlYXJyb3dyaWdodCc6J1xcdTIxQjcnLCdjdXZlZSc6J1xcdTIyQ0UnLCdjdXdlZCc6J1xcdTIyQ0YnLCdjd2NvbmludCc6J1xcdTIyMzInLCdjd2ludCc6J1xcdTIyMzEnLCdjeWxjdHknOidcXHUyMzJEJywnZGFnZ2VyJzonXFx1MjAyMCcsJ0RhZ2dlcic6J1xcdTIwMjEnLCdkYWxldGgnOidcXHUyMTM4JywnZGFycic6J1xcdTIxOTMnLCdkQXJyJzonXFx1MjFEMycsJ0RhcnInOidcXHUyMUExJywnZGFzaCc6J1xcdTIwMTAnLCdkYXNodic6J1xcdTIyQTMnLCdEYXNodic6J1xcdTJBRTQnLCdkYmthcm93JzonXFx1MjkwRicsJ2RibGFjJzonXFx1MDJERCcsJ2RjYXJvbic6J1xcdTAxMEYnLCdEY2Fyb24nOidcXHUwMTBFJywnZGN5JzonXFx1MDQzNCcsJ0RjeSc6J1xcdTA0MTQnLCdkZCc6J1xcdTIxNDYnLCdERCc6J1xcdTIxNDUnLCdkZGFnZ2VyJzonXFx1MjAyMScsJ2RkYXJyJzonXFx1MjFDQScsJ0REb3RyYWhkJzonXFx1MjkxMScsJ2Rkb3RzZXEnOidcXHUyQTc3JywnZGVnJzonXFx4QjAnLCdEZWwnOidcXHUyMjA3JywnZGVsdGEnOidcXHUwM0I0JywnRGVsdGEnOidcXHUwMzk0JywnZGVtcHR5dic6J1xcdTI5QjEnLCdkZmlzaHQnOidcXHUyOTdGJywnZGZyJzonXFx1RDgzNVxcdUREMjEnLCdEZnInOidcXHVEODM1XFx1REQwNycsJ2RIYXInOidcXHUyOTY1JywnZGhhcmwnOidcXHUyMUMzJywnZGhhcnInOidcXHUyMUMyJywnRGlhY3JpdGljYWxBY3V0ZSc6J1xceEI0JywnRGlhY3JpdGljYWxEb3QnOidcXHUwMkQ5JywnRGlhY3JpdGljYWxEb3VibGVBY3V0ZSc6J1xcdTAyREQnLCdEaWFjcml0aWNhbEdyYXZlJzonYCcsJ0RpYWNyaXRpY2FsVGlsZGUnOidcXHUwMkRDJywnZGlhbSc6J1xcdTIyQzQnLCdkaWFtb25kJzonXFx1MjJDNCcsJ0RpYW1vbmQnOidcXHUyMkM0JywnZGlhbW9uZHN1aXQnOidcXHUyNjY2JywnZGlhbXMnOidcXHUyNjY2JywnZGllJzonXFx4QTgnLCdEaWZmZXJlbnRpYWxEJzonXFx1MjE0NicsJ2RpZ2FtbWEnOidcXHUwM0REJywnZGlzaW4nOidcXHUyMkYyJywnZGl2JzonXFx4RjcnLCdkaXZpZGUnOidcXHhGNycsJ2RpdmlkZW9udGltZXMnOidcXHUyMkM3JywnZGl2b254JzonXFx1MjJDNycsJ2RqY3knOidcXHUwNDUyJywnREpjeSc6J1xcdTA0MDInLCdkbGNvcm4nOidcXHUyMzFFJywnZGxjcm9wJzonXFx1MjMwRCcsJ2RvbGxhcic6JyQnLCdkb3BmJzonXFx1RDgzNVxcdURENTUnLCdEb3BmJzonXFx1RDgzNVxcdUREM0InLCdkb3QnOidcXHUwMkQ5JywnRG90JzonXFx4QTgnLCdEb3REb3QnOidcXHUyMERDJywnZG90ZXEnOidcXHUyMjUwJywnZG90ZXFkb3QnOidcXHUyMjUxJywnRG90RXF1YWwnOidcXHUyMjUwJywnZG90bWludXMnOidcXHUyMjM4JywnZG90cGx1cyc6J1xcdTIyMTQnLCdkb3RzcXVhcmUnOidcXHUyMkExJywnZG91YmxlYmFyd2VkZ2UnOidcXHUyMzA2JywnRG91YmxlQ29udG91ckludGVncmFsJzonXFx1MjIyRicsJ0RvdWJsZURvdCc6J1xceEE4JywnRG91YmxlRG93bkFycm93JzonXFx1MjFEMycsJ0RvdWJsZUxlZnRBcnJvdyc6J1xcdTIxRDAnLCdEb3VibGVMZWZ0UmlnaHRBcnJvdyc6J1xcdTIxRDQnLCdEb3VibGVMZWZ0VGVlJzonXFx1MkFFNCcsJ0RvdWJsZUxvbmdMZWZ0QXJyb3cnOidcXHUyN0Y4JywnRG91YmxlTG9uZ0xlZnRSaWdodEFycm93JzonXFx1MjdGQScsJ0RvdWJsZUxvbmdSaWdodEFycm93JzonXFx1MjdGOScsJ0RvdWJsZVJpZ2h0QXJyb3cnOidcXHUyMUQyJywnRG91YmxlUmlnaHRUZWUnOidcXHUyMkE4JywnRG91YmxlVXBBcnJvdyc6J1xcdTIxRDEnLCdEb3VibGVVcERvd25BcnJvdyc6J1xcdTIxRDUnLCdEb3VibGVWZXJ0aWNhbEJhcic6J1xcdTIyMjUnLCdkb3duYXJyb3cnOidcXHUyMTkzJywnRG93bmFycm93JzonXFx1MjFEMycsJ0Rvd25BcnJvdyc6J1xcdTIxOTMnLCdEb3duQXJyb3dCYXInOidcXHUyOTEzJywnRG93bkFycm93VXBBcnJvdyc6J1xcdTIxRjUnLCdEb3duQnJldmUnOidcXHUwMzExJywnZG93bmRvd25hcnJvd3MnOidcXHUyMUNBJywnZG93bmhhcnBvb25sZWZ0JzonXFx1MjFDMycsJ2Rvd25oYXJwb29ucmlnaHQnOidcXHUyMUMyJywnRG93bkxlZnRSaWdodFZlY3Rvcic6J1xcdTI5NTAnLCdEb3duTGVmdFRlZVZlY3Rvcic6J1xcdTI5NUUnLCdEb3duTGVmdFZlY3Rvcic6J1xcdTIxQkQnLCdEb3duTGVmdFZlY3RvckJhcic6J1xcdTI5NTYnLCdEb3duUmlnaHRUZWVWZWN0b3InOidcXHUyOTVGJywnRG93blJpZ2h0VmVjdG9yJzonXFx1MjFDMScsJ0Rvd25SaWdodFZlY3RvckJhcic6J1xcdTI5NTcnLCdEb3duVGVlJzonXFx1MjJBNCcsJ0Rvd25UZWVBcnJvdyc6J1xcdTIxQTcnLCdkcmJrYXJvdyc6J1xcdTI5MTAnLCdkcmNvcm4nOidcXHUyMzFGJywnZHJjcm9wJzonXFx1MjMwQycsJ2RzY3InOidcXHVEODM1XFx1RENCOScsJ0RzY3InOidcXHVEODM1XFx1REM5RicsJ2RzY3knOidcXHUwNDU1JywnRFNjeSc6J1xcdTA0MDUnLCdkc29sJzonXFx1MjlGNicsJ2RzdHJvayc6J1xcdTAxMTEnLCdEc3Ryb2snOidcXHUwMTEwJywnZHRkb3QnOidcXHUyMkYxJywnZHRyaSc6J1xcdTI1QkYnLCdkdHJpZic6J1xcdTI1QkUnLCdkdWFycic6J1xcdTIxRjUnLCdkdWhhcic6J1xcdTI5NkYnLCdkd2FuZ2xlJzonXFx1MjlBNicsJ2R6Y3knOidcXHUwNDVGJywnRFpjeSc6J1xcdTA0MEYnLCdkemlncmFycic6J1xcdTI3RkYnLCdlYWN1dGUnOidcXHhFOScsJ0VhY3V0ZSc6J1xceEM5JywnZWFzdGVyJzonXFx1MkE2RScsJ2VjYXJvbic6J1xcdTAxMUInLCdFY2Fyb24nOidcXHUwMTFBJywnZWNpcic6J1xcdTIyNTYnLCdlY2lyYyc6J1xceEVBJywnRWNpcmMnOidcXHhDQScsJ2Vjb2xvbic6J1xcdTIyNTUnLCdlY3knOidcXHUwNDREJywnRWN5JzonXFx1MDQyRCcsJ2VERG90JzonXFx1MkE3NycsJ2Vkb3QnOidcXHUwMTE3JywnZURvdCc6J1xcdTIyNTEnLCdFZG90JzonXFx1MDExNicsJ2VlJzonXFx1MjE0NycsJ2VmRG90JzonXFx1MjI1MicsJ2Vmcic6J1xcdUQ4MzVcXHVERDIyJywnRWZyJzonXFx1RDgzNVxcdUREMDgnLCdlZyc6J1xcdTJBOUEnLCdlZ3JhdmUnOidcXHhFOCcsJ0VncmF2ZSc6J1xceEM4JywnZWdzJzonXFx1MkE5NicsJ2Vnc2RvdCc6J1xcdTJBOTgnLCdlbCc6J1xcdTJBOTknLCdFbGVtZW50JzonXFx1MjIwOCcsJ2VsaW50ZXJzJzonXFx1MjNFNycsJ2VsbCc6J1xcdTIxMTMnLCdlbHMnOidcXHUyQTk1JywnZWxzZG90JzonXFx1MkE5NycsJ2VtYWNyJzonXFx1MDExMycsJ0VtYWNyJzonXFx1MDExMicsJ2VtcHR5JzonXFx1MjIwNScsJ2VtcHR5c2V0JzonXFx1MjIwNScsJ0VtcHR5U21hbGxTcXVhcmUnOidcXHUyNUZCJywnZW1wdHl2JzonXFx1MjIwNScsJ0VtcHR5VmVyeVNtYWxsU3F1YXJlJzonXFx1MjVBQicsJ2Vtc3AnOidcXHUyMDAzJywnZW1zcDEzJzonXFx1MjAwNCcsJ2Vtc3AxNCc6J1xcdTIwMDUnLCdlbmcnOidcXHUwMTRCJywnRU5HJzonXFx1MDE0QScsJ2Vuc3AnOidcXHUyMDAyJywnZW9nb24nOidcXHUwMTE5JywnRW9nb24nOidcXHUwMTE4JywnZW9wZic6J1xcdUQ4MzVcXHVERDU2JywnRW9wZic6J1xcdUQ4MzVcXHVERDNDJywnZXBhcic6J1xcdTIyRDUnLCdlcGFyc2wnOidcXHUyOUUzJywnZXBsdXMnOidcXHUyQTcxJywnZXBzaSc6J1xcdTAzQjUnLCdlcHNpbG9uJzonXFx1MDNCNScsJ0Vwc2lsb24nOidcXHUwMzk1JywnZXBzaXYnOidcXHUwM0Y1JywnZXFjaXJjJzonXFx1MjI1NicsJ2VxY29sb24nOidcXHUyMjU1JywnZXFzaW0nOidcXHUyMjQyJywnZXFzbGFudGd0cic6J1xcdTJBOTYnLCdlcXNsYW50bGVzcyc6J1xcdTJBOTUnLCdFcXVhbCc6J1xcdTJBNzUnLCdlcXVhbHMnOic9JywnRXF1YWxUaWxkZSc6J1xcdTIyNDInLCdlcXVlc3QnOidcXHUyMjVGJywnRXF1aWxpYnJpdW0nOidcXHUyMUNDJywnZXF1aXYnOidcXHUyMjYxJywnZXF1aXZERCc6J1xcdTJBNzgnLCdlcXZwYXJzbCc6J1xcdTI5RTUnLCdlcmFycic6J1xcdTI5NzEnLCdlckRvdCc6J1xcdTIyNTMnLCdlc2NyJzonXFx1MjEyRicsJ0VzY3InOidcXHUyMTMwJywnZXNkb3QnOidcXHUyMjUwJywnZXNpbSc6J1xcdTIyNDInLCdFc2ltJzonXFx1MkE3MycsJ2V0YSc6J1xcdTAzQjcnLCdFdGEnOidcXHUwMzk3JywnZXRoJzonXFx4RjAnLCdFVEgnOidcXHhEMCcsJ2V1bWwnOidcXHhFQicsJ0V1bWwnOidcXHhDQicsJ2V1cm8nOidcXHUyMEFDJywnZXhjbCc6JyEnLCdleGlzdCc6J1xcdTIyMDMnLCdFeGlzdHMnOidcXHUyMjAzJywnZXhwZWN0YXRpb24nOidcXHUyMTMwJywnZXhwb25lbnRpYWxlJzonXFx1MjE0NycsJ0V4cG9uZW50aWFsRSc6J1xcdTIxNDcnLCdmYWxsaW5nZG90c2VxJzonXFx1MjI1MicsJ2ZjeSc6J1xcdTA0NDQnLCdGY3knOidcXHUwNDI0JywnZmVtYWxlJzonXFx1MjY0MCcsJ2ZmaWxpZyc6J1xcdUZCMDMnLCdmZmxpZyc6J1xcdUZCMDAnLCdmZmxsaWcnOidcXHVGQjA0JywnZmZyJzonXFx1RDgzNVxcdUREMjMnLCdGZnInOidcXHVEODM1XFx1REQwOScsJ2ZpbGlnJzonXFx1RkIwMScsJ0ZpbGxlZFNtYWxsU3F1YXJlJzonXFx1MjVGQycsJ0ZpbGxlZFZlcnlTbWFsbFNxdWFyZSc6J1xcdTI1QUEnLCdmamxpZyc6J2ZqJywnZmxhdCc6J1xcdTI2NkQnLCdmbGxpZyc6J1xcdUZCMDInLCdmbHRucyc6J1xcdTI1QjEnLCdmbm9mJzonXFx1MDE5MicsJ2ZvcGYnOidcXHVEODM1XFx1REQ1NycsJ0ZvcGYnOidcXHVEODM1XFx1REQzRCcsJ2ZvcmFsbCc6J1xcdTIyMDAnLCdGb3JBbGwnOidcXHUyMjAwJywnZm9yayc6J1xcdTIyRDQnLCdmb3Jrdic6J1xcdTJBRDknLCdGb3VyaWVydHJmJzonXFx1MjEzMScsJ2ZwYXJ0aW50JzonXFx1MkEwRCcsJ2ZyYWMxMic6J1xceEJEJywnZnJhYzEzJzonXFx1MjE1MycsJ2ZyYWMxNCc6J1xceEJDJywnZnJhYzE1JzonXFx1MjE1NScsJ2ZyYWMxNic6J1xcdTIxNTknLCdmcmFjMTgnOidcXHUyMTVCJywnZnJhYzIzJzonXFx1MjE1NCcsJ2ZyYWMyNSc6J1xcdTIxNTYnLCdmcmFjMzQnOidcXHhCRScsJ2ZyYWMzNSc6J1xcdTIxNTcnLCdmcmFjMzgnOidcXHUyMTVDJywnZnJhYzQ1JzonXFx1MjE1OCcsJ2ZyYWM1Nic6J1xcdTIxNUEnLCdmcmFjNTgnOidcXHUyMTVEJywnZnJhYzc4JzonXFx1MjE1RScsJ2ZyYXNsJzonXFx1MjA0NCcsJ2Zyb3duJzonXFx1MjMyMicsJ2ZzY3InOidcXHVEODM1XFx1RENCQicsJ0ZzY3InOidcXHUyMTMxJywnZ2FjdXRlJzonXFx1MDFGNScsJ2dhbW1hJzonXFx1MDNCMycsJ0dhbW1hJzonXFx1MDM5MycsJ2dhbW1hZCc6J1xcdTAzREQnLCdHYW1tYWQnOidcXHUwM0RDJywnZ2FwJzonXFx1MkE4NicsJ2dicmV2ZSc6J1xcdTAxMUYnLCdHYnJldmUnOidcXHUwMTFFJywnR2NlZGlsJzonXFx1MDEyMicsJ2djaXJjJzonXFx1MDExRCcsJ0djaXJjJzonXFx1MDExQycsJ2djeSc6J1xcdTA0MzMnLCdHY3knOidcXHUwNDEzJywnZ2RvdCc6J1xcdTAxMjEnLCdHZG90JzonXFx1MDEyMCcsJ2dlJzonXFx1MjI2NScsJ2dFJzonXFx1MjI2NycsJ2dlbCc6J1xcdTIyREInLCdnRWwnOidcXHUyQThDJywnZ2VxJzonXFx1MjI2NScsJ2dlcXEnOidcXHUyMjY3JywnZ2Vxc2xhbnQnOidcXHUyQTdFJywnZ2VzJzonXFx1MkE3RScsJ2dlc2NjJzonXFx1MkFBOScsJ2dlc2RvdCc6J1xcdTJBODAnLCdnZXNkb3RvJzonXFx1MkE4MicsJ2dlc2RvdG9sJzonXFx1MkE4NCcsJ2dlc2wnOidcXHUyMkRCXFx1RkUwMCcsJ2dlc2xlcyc6J1xcdTJBOTQnLCdnZnInOidcXHVEODM1XFx1REQyNCcsJ0dmcic6J1xcdUQ4MzVcXHVERDBBJywnZ2cnOidcXHUyMjZCJywnR2cnOidcXHUyMkQ5JywnZ2dnJzonXFx1MjJEOScsJ2dpbWVsJzonXFx1MjEzNycsJ2dqY3knOidcXHUwNDUzJywnR0pjeSc6J1xcdTA0MDMnLCdnbCc6J1xcdTIyNzcnLCdnbGEnOidcXHUyQUE1JywnZ2xFJzonXFx1MkE5MicsJ2dsaic6J1xcdTJBQTQnLCdnbmFwJzonXFx1MkE4QScsJ2duYXBwcm94JzonXFx1MkE4QScsJ2duZSc6J1xcdTJBODgnLCdnbkUnOidcXHUyMjY5JywnZ25lcSc6J1xcdTJBODgnLCdnbmVxcSc6J1xcdTIyNjknLCdnbnNpbSc6J1xcdTIyRTcnLCdnb3BmJzonXFx1RDgzNVxcdURENTgnLCdHb3BmJzonXFx1RDgzNVxcdUREM0UnLCdncmF2ZSc6J2AnLCdHcmVhdGVyRXF1YWwnOidcXHUyMjY1JywnR3JlYXRlckVxdWFsTGVzcyc6J1xcdTIyREInLCdHcmVhdGVyRnVsbEVxdWFsJzonXFx1MjI2NycsJ0dyZWF0ZXJHcmVhdGVyJzonXFx1MkFBMicsJ0dyZWF0ZXJMZXNzJzonXFx1MjI3NycsJ0dyZWF0ZXJTbGFudEVxdWFsJzonXFx1MkE3RScsJ0dyZWF0ZXJUaWxkZSc6J1xcdTIyNzMnLCdnc2NyJzonXFx1MjEwQScsJ0dzY3InOidcXHVEODM1XFx1RENBMicsJ2dzaW0nOidcXHUyMjczJywnZ3NpbWUnOidcXHUyQThFJywnZ3NpbWwnOidcXHUyQTkwJywnZ3QnOic+JywnR3QnOidcXHUyMjZCJywnR1QnOic+JywnZ3RjYyc6J1xcdTJBQTcnLCdndGNpcic6J1xcdTJBN0EnLCdndGRvdCc6J1xcdTIyRDcnLCdndGxQYXInOidcXHUyOTk1JywnZ3RxdWVzdCc6J1xcdTJBN0MnLCdndHJhcHByb3gnOidcXHUyQTg2JywnZ3RyYXJyJzonXFx1Mjk3OCcsJ2d0cmRvdCc6J1xcdTIyRDcnLCdndHJlcWxlc3MnOidcXHUyMkRCJywnZ3RyZXFxbGVzcyc6J1xcdTJBOEMnLCdndHJsZXNzJzonXFx1MjI3NycsJ2d0cnNpbSc6J1xcdTIyNzMnLCdndmVydG5lcXEnOidcXHUyMjY5XFx1RkUwMCcsJ2d2bkUnOidcXHUyMjY5XFx1RkUwMCcsJ0hhY2VrJzonXFx1MDJDNycsJ2hhaXJzcCc6J1xcdTIwMEEnLCdoYWxmJzonXFx4QkQnLCdoYW1pbHQnOidcXHUyMTBCJywnaGFyZGN5JzonXFx1MDQ0QScsJ0hBUkRjeSc6J1xcdTA0MkEnLCdoYXJyJzonXFx1MjE5NCcsJ2hBcnInOidcXHUyMUQ0JywnaGFycmNpcic6J1xcdTI5NDgnLCdoYXJydyc6J1xcdTIxQUQnLCdIYXQnOideJywnaGJhcic6J1xcdTIxMEYnLCdoY2lyYyc6J1xcdTAxMjUnLCdIY2lyYyc6J1xcdTAxMjQnLCdoZWFydHMnOidcXHUyNjY1JywnaGVhcnRzdWl0JzonXFx1MjY2NScsJ2hlbGxpcCc6J1xcdTIwMjYnLCdoZXJjb24nOidcXHUyMkI5JywnaGZyJzonXFx1RDgzNVxcdUREMjUnLCdIZnInOidcXHUyMTBDJywnSGlsYmVydFNwYWNlJzonXFx1MjEwQicsJ2hrc2Vhcm93JzonXFx1MjkyNScsJ2hrc3dhcm93JzonXFx1MjkyNicsJ2hvYXJyJzonXFx1MjFGRicsJ2hvbXRodCc6J1xcdTIyM0InLCdob29rbGVmdGFycm93JzonXFx1MjFBOScsJ2hvb2tyaWdodGFycm93JzonXFx1MjFBQScsJ2hvcGYnOidcXHVEODM1XFx1REQ1OScsJ0hvcGYnOidcXHUyMTBEJywnaG9yYmFyJzonXFx1MjAxNScsJ0hvcml6b250YWxMaW5lJzonXFx1MjUwMCcsJ2hzY3InOidcXHVEODM1XFx1RENCRCcsJ0hzY3InOidcXHUyMTBCJywnaHNsYXNoJzonXFx1MjEwRicsJ2hzdHJvayc6J1xcdTAxMjcnLCdIc3Ryb2snOidcXHUwMTI2JywnSHVtcERvd25IdW1wJzonXFx1MjI0RScsJ0h1bXBFcXVhbCc6J1xcdTIyNEYnLCdoeWJ1bGwnOidcXHUyMDQzJywnaHlwaGVuJzonXFx1MjAxMCcsJ2lhY3V0ZSc6J1xceEVEJywnSWFjdXRlJzonXFx4Q0QnLCdpYyc6J1xcdTIwNjMnLCdpY2lyYyc6J1xceEVFJywnSWNpcmMnOidcXHhDRScsJ2ljeSc6J1xcdTA0MzgnLCdJY3knOidcXHUwNDE4JywnSWRvdCc6J1xcdTAxMzAnLCdpZWN5JzonXFx1MDQzNScsJ0lFY3knOidcXHUwNDE1JywnaWV4Y2wnOidcXHhBMScsJ2lmZic6J1xcdTIxRDQnLCdpZnInOidcXHVEODM1XFx1REQyNicsJ0lmcic6J1xcdTIxMTEnLCdpZ3JhdmUnOidcXHhFQycsJ0lncmF2ZSc6J1xceENDJywnaWknOidcXHUyMTQ4JywnaWlpaW50JzonXFx1MkEwQycsJ2lpaW50JzonXFx1MjIyRCcsJ2lpbmZpbic6J1xcdTI5REMnLCdpaW90YSc6J1xcdTIxMjknLCdpamxpZyc6J1xcdTAxMzMnLCdJSmxpZyc6J1xcdTAxMzInLCdJbSc6J1xcdTIxMTEnLCdpbWFjcic6J1xcdTAxMkInLCdJbWFjcic6J1xcdTAxMkEnLCdpbWFnZSc6J1xcdTIxMTEnLCdJbWFnaW5hcnlJJzonXFx1MjE0OCcsJ2ltYWdsaW5lJzonXFx1MjExMCcsJ2ltYWdwYXJ0JzonXFx1MjExMScsJ2ltYXRoJzonXFx1MDEzMScsJ2ltb2YnOidcXHUyMkI3JywnaW1wZWQnOidcXHUwMUI1JywnSW1wbGllcyc6J1xcdTIxRDInLCdpbic6J1xcdTIyMDgnLCdpbmNhcmUnOidcXHUyMTA1JywnaW5maW4nOidcXHUyMjFFJywnaW5maW50aWUnOidcXHUyOUREJywnaW5vZG90JzonXFx1MDEzMScsJ2ludCc6J1xcdTIyMkInLCdJbnQnOidcXHUyMjJDJywnaW50Y2FsJzonXFx1MjJCQScsJ2ludGVnZXJzJzonXFx1MjEyNCcsJ0ludGVncmFsJzonXFx1MjIyQicsJ2ludGVyY2FsJzonXFx1MjJCQScsJ0ludGVyc2VjdGlvbic6J1xcdTIyQzInLCdpbnRsYXJoayc6J1xcdTJBMTcnLCdpbnRwcm9kJzonXFx1MkEzQycsJ0ludmlzaWJsZUNvbW1hJzonXFx1MjA2MycsJ0ludmlzaWJsZVRpbWVzJzonXFx1MjA2MicsJ2lvY3knOidcXHUwNDUxJywnSU9jeSc6J1xcdTA0MDEnLCdpb2dvbic6J1xcdTAxMkYnLCdJb2dvbic6J1xcdTAxMkUnLCdpb3BmJzonXFx1RDgzNVxcdURENUEnLCdJb3BmJzonXFx1RDgzNVxcdURENDAnLCdpb3RhJzonXFx1MDNCOScsJ0lvdGEnOidcXHUwMzk5JywnaXByb2QnOidcXHUyQTNDJywnaXF1ZXN0JzonXFx4QkYnLCdpc2NyJzonXFx1RDgzNVxcdURDQkUnLCdJc2NyJzonXFx1MjExMCcsJ2lzaW4nOidcXHUyMjA4JywnaXNpbmRvdCc6J1xcdTIyRjUnLCdpc2luRSc6J1xcdTIyRjknLCdpc2lucyc6J1xcdTIyRjQnLCdpc2luc3YnOidcXHUyMkYzJywnaXNpbnYnOidcXHUyMjA4JywnaXQnOidcXHUyMDYyJywnaXRpbGRlJzonXFx1MDEyOScsJ0l0aWxkZSc6J1xcdTAxMjgnLCdpdWtjeSc6J1xcdTA0NTYnLCdJdWtjeSc6J1xcdTA0MDYnLCdpdW1sJzonXFx4RUYnLCdJdW1sJzonXFx4Q0YnLCdqY2lyYyc6J1xcdTAxMzUnLCdKY2lyYyc6J1xcdTAxMzQnLCdqY3knOidcXHUwNDM5JywnSmN5JzonXFx1MDQxOScsJ2pmcic6J1xcdUQ4MzVcXHVERDI3JywnSmZyJzonXFx1RDgzNVxcdUREMEQnLCdqbWF0aCc6J1xcdTAyMzcnLCdqb3BmJzonXFx1RDgzNVxcdURENUInLCdKb3BmJzonXFx1RDgzNVxcdURENDEnLCdqc2NyJzonXFx1RDgzNVxcdURDQkYnLCdKc2NyJzonXFx1RDgzNVxcdURDQTUnLCdqc2VyY3knOidcXHUwNDU4JywnSnNlcmN5JzonXFx1MDQwOCcsJ2p1a2N5JzonXFx1MDQ1NCcsJ0p1a2N5JzonXFx1MDQwNCcsJ2thcHBhJzonXFx1MDNCQScsJ0thcHBhJzonXFx1MDM5QScsJ2thcHBhdic6J1xcdTAzRjAnLCdrY2VkaWwnOidcXHUwMTM3JywnS2NlZGlsJzonXFx1MDEzNicsJ2tjeSc6J1xcdTA0M0EnLCdLY3knOidcXHUwNDFBJywna2ZyJzonXFx1RDgzNVxcdUREMjgnLCdLZnInOidcXHVEODM1XFx1REQwRScsJ2tncmVlbic6J1xcdTAxMzgnLCdraGN5JzonXFx1MDQ0NScsJ0tIY3knOidcXHUwNDI1Jywna2pjeSc6J1xcdTA0NUMnLCdLSmN5JzonXFx1MDQwQycsJ2tvcGYnOidcXHVEODM1XFx1REQ1QycsJ0tvcGYnOidcXHVEODM1XFx1REQ0MicsJ2tzY3InOidcXHVEODM1XFx1RENDMCcsJ0tzY3InOidcXHVEODM1XFx1RENBNicsJ2xBYXJyJzonXFx1MjFEQScsJ2xhY3V0ZSc6J1xcdTAxM0EnLCdMYWN1dGUnOidcXHUwMTM5JywnbGFlbXB0eXYnOidcXHUyOUI0JywnbGFncmFuJzonXFx1MjExMicsJ2xhbWJkYSc6J1xcdTAzQkInLCdMYW1iZGEnOidcXHUwMzlCJywnbGFuZyc6J1xcdTI3RTgnLCdMYW5nJzonXFx1MjdFQScsJ2xhbmdkJzonXFx1Mjk5MScsJ2xhbmdsZSc6J1xcdTI3RTgnLCdsYXAnOidcXHUyQTg1JywnTGFwbGFjZXRyZic6J1xcdTIxMTInLCdsYXF1byc6J1xceEFCJywnbGFycic6J1xcdTIxOTAnLCdsQXJyJzonXFx1MjFEMCcsJ0xhcnInOidcXHUyMTlFJywnbGFycmInOidcXHUyMUU0JywnbGFycmJmcyc6J1xcdTI5MUYnLCdsYXJyZnMnOidcXHUyOTFEJywnbGFycmhrJzonXFx1MjFBOScsJ2xhcnJscCc6J1xcdTIxQUInLCdsYXJycGwnOidcXHUyOTM5JywnbGFycnNpbSc6J1xcdTI5NzMnLCdsYXJydGwnOidcXHUyMUEyJywnbGF0JzonXFx1MkFBQicsJ2xhdGFpbCc6J1xcdTI5MTknLCdsQXRhaWwnOidcXHUyOTFCJywnbGF0ZSc6J1xcdTJBQUQnLCdsYXRlcyc6J1xcdTJBQURcXHVGRTAwJywnbGJhcnInOidcXHUyOTBDJywnbEJhcnInOidcXHUyOTBFJywnbGJicmsnOidcXHUyNzcyJywnbGJyYWNlJzoneycsJ2xicmFjayc6J1snLCdsYnJrZSc6J1xcdTI5OEInLCdsYnJrc2xkJzonXFx1Mjk4RicsJ2xicmtzbHUnOidcXHUyOThEJywnbGNhcm9uJzonXFx1MDEzRScsJ0xjYXJvbic6J1xcdTAxM0QnLCdsY2VkaWwnOidcXHUwMTNDJywnTGNlZGlsJzonXFx1MDEzQicsJ2xjZWlsJzonXFx1MjMwOCcsJ2xjdWInOid7JywnbGN5JzonXFx1MDQzQicsJ0xjeSc6J1xcdTA0MUInLCdsZGNhJzonXFx1MjkzNicsJ2xkcXVvJzonXFx1MjAxQycsJ2xkcXVvcic6J1xcdTIwMUUnLCdsZHJkaGFyJzonXFx1Mjk2NycsJ2xkcnVzaGFyJzonXFx1Mjk0QicsJ2xkc2gnOidcXHUyMUIyJywnbGUnOidcXHUyMjY0JywnbEUnOidcXHUyMjY2JywnTGVmdEFuZ2xlQnJhY2tldCc6J1xcdTI3RTgnLCdsZWZ0YXJyb3cnOidcXHUyMTkwJywnTGVmdGFycm93JzonXFx1MjFEMCcsJ0xlZnRBcnJvdyc6J1xcdTIxOTAnLCdMZWZ0QXJyb3dCYXInOidcXHUyMUU0JywnTGVmdEFycm93UmlnaHRBcnJvdyc6J1xcdTIxQzYnLCdsZWZ0YXJyb3d0YWlsJzonXFx1MjFBMicsJ0xlZnRDZWlsaW5nJzonXFx1MjMwOCcsJ0xlZnREb3VibGVCcmFja2V0JzonXFx1MjdFNicsJ0xlZnREb3duVGVlVmVjdG9yJzonXFx1Mjk2MScsJ0xlZnREb3duVmVjdG9yJzonXFx1MjFDMycsJ0xlZnREb3duVmVjdG9yQmFyJzonXFx1Mjk1OScsJ0xlZnRGbG9vcic6J1xcdTIzMEEnLCdsZWZ0aGFycG9vbmRvd24nOidcXHUyMUJEJywnbGVmdGhhcnBvb251cCc6J1xcdTIxQkMnLCdsZWZ0bGVmdGFycm93cyc6J1xcdTIxQzcnLCdsZWZ0cmlnaHRhcnJvdyc6J1xcdTIxOTQnLCdMZWZ0cmlnaHRhcnJvdyc6J1xcdTIxRDQnLCdMZWZ0UmlnaHRBcnJvdyc6J1xcdTIxOTQnLCdsZWZ0cmlnaHRhcnJvd3MnOidcXHUyMUM2JywnbGVmdHJpZ2h0aGFycG9vbnMnOidcXHUyMUNCJywnbGVmdHJpZ2h0c3F1aWdhcnJvdyc6J1xcdTIxQUQnLCdMZWZ0UmlnaHRWZWN0b3InOidcXHUyOTRFJywnTGVmdFRlZSc6J1xcdTIyQTMnLCdMZWZ0VGVlQXJyb3cnOidcXHUyMUE0JywnTGVmdFRlZVZlY3Rvcic6J1xcdTI5NUEnLCdsZWZ0dGhyZWV0aW1lcyc6J1xcdTIyQ0InLCdMZWZ0VHJpYW5nbGUnOidcXHUyMkIyJywnTGVmdFRyaWFuZ2xlQmFyJzonXFx1MjlDRicsJ0xlZnRUcmlhbmdsZUVxdWFsJzonXFx1MjJCNCcsJ0xlZnRVcERvd25WZWN0b3InOidcXHUyOTUxJywnTGVmdFVwVGVlVmVjdG9yJzonXFx1Mjk2MCcsJ0xlZnRVcFZlY3Rvcic6J1xcdTIxQkYnLCdMZWZ0VXBWZWN0b3JCYXInOidcXHUyOTU4JywnTGVmdFZlY3Rvcic6J1xcdTIxQkMnLCdMZWZ0VmVjdG9yQmFyJzonXFx1Mjk1MicsJ2xlZyc6J1xcdTIyREEnLCdsRWcnOidcXHUyQThCJywnbGVxJzonXFx1MjI2NCcsJ2xlcXEnOidcXHUyMjY2JywnbGVxc2xhbnQnOidcXHUyQTdEJywnbGVzJzonXFx1MkE3RCcsJ2xlc2NjJzonXFx1MkFBOCcsJ2xlc2RvdCc6J1xcdTJBN0YnLCdsZXNkb3RvJzonXFx1MkE4MScsJ2xlc2RvdG9yJzonXFx1MkE4MycsJ2xlc2cnOidcXHUyMkRBXFx1RkUwMCcsJ2xlc2dlcyc6J1xcdTJBOTMnLCdsZXNzYXBwcm94JzonXFx1MkE4NScsJ2xlc3Nkb3QnOidcXHUyMkQ2JywnbGVzc2VxZ3RyJzonXFx1MjJEQScsJ2xlc3NlcXFndHInOidcXHUyQThCJywnTGVzc0VxdWFsR3JlYXRlcic6J1xcdTIyREEnLCdMZXNzRnVsbEVxdWFsJzonXFx1MjI2NicsJ0xlc3NHcmVhdGVyJzonXFx1MjI3NicsJ2xlc3NndHInOidcXHUyMjc2JywnTGVzc0xlc3MnOidcXHUyQUExJywnbGVzc3NpbSc6J1xcdTIyNzInLCdMZXNzU2xhbnRFcXVhbCc6J1xcdTJBN0QnLCdMZXNzVGlsZGUnOidcXHUyMjcyJywnbGZpc2h0JzonXFx1Mjk3QycsJ2xmbG9vcic6J1xcdTIzMEEnLCdsZnInOidcXHVEODM1XFx1REQyOScsJ0xmcic6J1xcdUQ4MzVcXHVERDBGJywnbGcnOidcXHUyMjc2JywnbGdFJzonXFx1MkE5MScsJ2xIYXInOidcXHUyOTYyJywnbGhhcmQnOidcXHUyMUJEJywnbGhhcnUnOidcXHUyMUJDJywnbGhhcnVsJzonXFx1Mjk2QScsJ2xoYmxrJzonXFx1MjU4NCcsJ2xqY3knOidcXHUwNDU5JywnTEpjeSc6J1xcdTA0MDknLCdsbCc6J1xcdTIyNkEnLCdMbCc6J1xcdTIyRDgnLCdsbGFycic6J1xcdTIxQzcnLCdsbGNvcm5lcic6J1xcdTIzMUUnLCdMbGVmdGFycm93JzonXFx1MjFEQScsJ2xsaGFyZCc6J1xcdTI5NkInLCdsbHRyaSc6J1xcdTI1RkEnLCdsbWlkb3QnOidcXHUwMTQwJywnTG1pZG90JzonXFx1MDEzRicsJ2xtb3VzdCc6J1xcdTIzQjAnLCdsbW91c3RhY2hlJzonXFx1MjNCMCcsJ2xuYXAnOidcXHUyQTg5JywnbG5hcHByb3gnOidcXHUyQTg5JywnbG5lJzonXFx1MkE4NycsJ2xuRSc6J1xcdTIyNjgnLCdsbmVxJzonXFx1MkE4NycsJ2xuZXFxJzonXFx1MjI2OCcsJ2xuc2ltJzonXFx1MjJFNicsJ2xvYW5nJzonXFx1MjdFQycsJ2xvYXJyJzonXFx1MjFGRCcsJ2xvYnJrJzonXFx1MjdFNicsJ2xvbmdsZWZ0YXJyb3cnOidcXHUyN0Y1JywnTG9uZ2xlZnRhcnJvdyc6J1xcdTI3RjgnLCdMb25nTGVmdEFycm93JzonXFx1MjdGNScsJ2xvbmdsZWZ0cmlnaHRhcnJvdyc6J1xcdTI3RjcnLCdMb25nbGVmdHJpZ2h0YXJyb3cnOidcXHUyN0ZBJywnTG9uZ0xlZnRSaWdodEFycm93JzonXFx1MjdGNycsJ2xvbmdtYXBzdG8nOidcXHUyN0ZDJywnbG9uZ3JpZ2h0YXJyb3cnOidcXHUyN0Y2JywnTG9uZ3JpZ2h0YXJyb3cnOidcXHUyN0Y5JywnTG9uZ1JpZ2h0QXJyb3cnOidcXHUyN0Y2JywnbG9vcGFycm93bGVmdCc6J1xcdTIxQUInLCdsb29wYXJyb3dyaWdodCc6J1xcdTIxQUMnLCdsb3Bhcic6J1xcdTI5ODUnLCdsb3BmJzonXFx1RDgzNVxcdURENUQnLCdMb3BmJzonXFx1RDgzNVxcdURENDMnLCdsb3BsdXMnOidcXHUyQTJEJywnbG90aW1lcyc6J1xcdTJBMzQnLCdsb3dhc3QnOidcXHUyMjE3JywnbG93YmFyJzonXycsJ0xvd2VyTGVmdEFycm93JzonXFx1MjE5OScsJ0xvd2VyUmlnaHRBcnJvdyc6J1xcdTIxOTgnLCdsb3onOidcXHUyNUNBJywnbG96ZW5nZSc6J1xcdTI1Q0EnLCdsb3pmJzonXFx1MjlFQicsJ2xwYXInOicoJywnbHBhcmx0JzonXFx1Mjk5MycsJ2xyYXJyJzonXFx1MjFDNicsJ2xyY29ybmVyJzonXFx1MjMxRicsJ2xyaGFyJzonXFx1MjFDQicsJ2xyaGFyZCc6J1xcdTI5NkQnLCdscm0nOidcXHUyMDBFJywnbHJ0cmknOidcXHUyMkJGJywnbHNhcXVvJzonXFx1MjAzOScsJ2xzY3InOidcXHVEODM1XFx1RENDMScsJ0xzY3InOidcXHUyMTEyJywnbHNoJzonXFx1MjFCMCcsJ0xzaCc6J1xcdTIxQjAnLCdsc2ltJzonXFx1MjI3MicsJ2xzaW1lJzonXFx1MkE4RCcsJ2xzaW1nJzonXFx1MkE4RicsJ2xzcWInOidbJywnbHNxdW8nOidcXHUyMDE4JywnbHNxdW9yJzonXFx1MjAxQScsJ2xzdHJvayc6J1xcdTAxNDInLCdMc3Ryb2snOidcXHUwMTQxJywnbHQnOic8JywnTHQnOidcXHUyMjZBJywnTFQnOic8JywnbHRjYyc6J1xcdTJBQTYnLCdsdGNpcic6J1xcdTJBNzknLCdsdGRvdCc6J1xcdTIyRDYnLCdsdGhyZWUnOidcXHUyMkNCJywnbHRpbWVzJzonXFx1MjJDOScsJ2x0bGFycic6J1xcdTI5NzYnLCdsdHF1ZXN0JzonXFx1MkE3QicsJ2x0cmknOidcXHUyNUMzJywnbHRyaWUnOidcXHUyMkI0JywnbHRyaWYnOidcXHUyNUMyJywnbHRyUGFyJzonXFx1Mjk5NicsJ2x1cmRzaGFyJzonXFx1Mjk0QScsJ2x1cnVoYXInOidcXHUyOTY2JywnbHZlcnRuZXFxJzonXFx1MjI2OFxcdUZFMDAnLCdsdm5FJzonXFx1MjI2OFxcdUZFMDAnLCdtYWNyJzonXFx4QUYnLCdtYWxlJzonXFx1MjY0MicsJ21hbHQnOidcXHUyNzIwJywnbWFsdGVzZSc6J1xcdTI3MjAnLCdtYXAnOidcXHUyMUE2JywnTWFwJzonXFx1MjkwNScsJ21hcHN0byc6J1xcdTIxQTYnLCdtYXBzdG9kb3duJzonXFx1MjFBNycsJ21hcHN0b2xlZnQnOidcXHUyMUE0JywnbWFwc3RvdXAnOidcXHUyMUE1JywnbWFya2VyJzonXFx1MjVBRScsJ21jb21tYSc6J1xcdTJBMjknLCdtY3knOidcXHUwNDNDJywnTWN5JzonXFx1MDQxQycsJ21kYXNoJzonXFx1MjAxNCcsJ21ERG90JzonXFx1MjIzQScsJ21lYXN1cmVkYW5nbGUnOidcXHUyMjIxJywnTWVkaXVtU3BhY2UnOidcXHUyMDVGJywnTWVsbGludHJmJzonXFx1MjEzMycsJ21mcic6J1xcdUQ4MzVcXHVERDJBJywnTWZyJzonXFx1RDgzNVxcdUREMTAnLCdtaG8nOidcXHUyMTI3JywnbWljcm8nOidcXHhCNScsJ21pZCc6J1xcdTIyMjMnLCdtaWRhc3QnOicqJywnbWlkY2lyJzonXFx1MkFGMCcsJ21pZGRvdCc6J1xceEI3JywnbWludXMnOidcXHUyMjEyJywnbWludXNiJzonXFx1MjI5RicsJ21pbnVzZCc6J1xcdTIyMzgnLCdtaW51c2R1JzonXFx1MkEyQScsJ01pbnVzUGx1cyc6J1xcdTIyMTMnLCdtbGNwJzonXFx1MkFEQicsJ21sZHInOidcXHUyMDI2JywnbW5wbHVzJzonXFx1MjIxMycsJ21vZGVscyc6J1xcdTIyQTcnLCdtb3BmJzonXFx1RDgzNVxcdURENUUnLCdNb3BmJzonXFx1RDgzNVxcdURENDQnLCdtcCc6J1xcdTIyMTMnLCdtc2NyJzonXFx1RDgzNVxcdURDQzInLCdNc2NyJzonXFx1MjEzMycsJ21zdHBvcyc6J1xcdTIyM0UnLCdtdSc6J1xcdTAzQkMnLCdNdSc6J1xcdTAzOUMnLCdtdWx0aW1hcCc6J1xcdTIyQjgnLCdtdW1hcCc6J1xcdTIyQjgnLCduYWJsYSc6J1xcdTIyMDcnLCduYWN1dGUnOidcXHUwMTQ0JywnTmFjdXRlJzonXFx1MDE0MycsJ25hbmcnOidcXHUyMjIwXFx1MjBEMicsJ25hcCc6J1xcdTIyNDknLCduYXBFJzonXFx1MkE3MFxcdTAzMzgnLCduYXBpZCc6J1xcdTIyNEJcXHUwMzM4JywnbmFwb3MnOidcXHUwMTQ5JywnbmFwcHJveCc6J1xcdTIyNDknLCduYXR1cic6J1xcdTI2NkUnLCduYXR1cmFsJzonXFx1MjY2RScsJ25hdHVyYWxzJzonXFx1MjExNScsJ25ic3AnOidcXHhBMCcsJ25idW1wJzonXFx1MjI0RVxcdTAzMzgnLCduYnVtcGUnOidcXHUyMjRGXFx1MDMzOCcsJ25jYXAnOidcXHUyQTQzJywnbmNhcm9uJzonXFx1MDE0OCcsJ05jYXJvbic6J1xcdTAxNDcnLCduY2VkaWwnOidcXHUwMTQ2JywnTmNlZGlsJzonXFx1MDE0NScsJ25jb25nJzonXFx1MjI0NycsJ25jb25nZG90JzonXFx1MkE2RFxcdTAzMzgnLCduY3VwJzonXFx1MkE0MicsJ25jeSc6J1xcdTA0M0QnLCdOY3knOidcXHUwNDFEJywnbmRhc2gnOidcXHUyMDEzJywnbmUnOidcXHUyMjYwJywnbmVhcmhrJzonXFx1MjkyNCcsJ25lYXJyJzonXFx1MjE5NycsJ25lQXJyJzonXFx1MjFENycsJ25lYXJyb3cnOidcXHUyMTk3JywnbmVkb3QnOidcXHUyMjUwXFx1MDMzOCcsJ05lZ2F0aXZlTWVkaXVtU3BhY2UnOidcXHUyMDBCJywnTmVnYXRpdmVUaGlja1NwYWNlJzonXFx1MjAwQicsJ05lZ2F0aXZlVGhpblNwYWNlJzonXFx1MjAwQicsJ05lZ2F0aXZlVmVyeVRoaW5TcGFjZSc6J1xcdTIwMEInLCduZXF1aXYnOidcXHUyMjYyJywnbmVzZWFyJzonXFx1MjkyOCcsJ25lc2ltJzonXFx1MjI0MlxcdTAzMzgnLCdOZXN0ZWRHcmVhdGVyR3JlYXRlcic6J1xcdTIyNkInLCdOZXN0ZWRMZXNzTGVzcyc6J1xcdTIyNkEnLCdOZXdMaW5lJzonXFxuJywnbmV4aXN0JzonXFx1MjIwNCcsJ25leGlzdHMnOidcXHUyMjA0JywnbmZyJzonXFx1RDgzNVxcdUREMkInLCdOZnInOidcXHVEODM1XFx1REQxMScsJ25nZSc6J1xcdTIyNzEnLCduZ0UnOidcXHUyMjY3XFx1MDMzOCcsJ25nZXEnOidcXHUyMjcxJywnbmdlcXEnOidcXHUyMjY3XFx1MDMzOCcsJ25nZXFzbGFudCc6J1xcdTJBN0VcXHUwMzM4Jywnbmdlcyc6J1xcdTJBN0VcXHUwMzM4JywnbkdnJzonXFx1MjJEOVxcdTAzMzgnLCduZ3NpbSc6J1xcdTIyNzUnLCduZ3QnOidcXHUyMjZGJywnbkd0JzonXFx1MjI2QlxcdTIwRDInLCduZ3RyJzonXFx1MjI2RicsJ25HdHYnOidcXHUyMjZCXFx1MDMzOCcsJ25oYXJyJzonXFx1MjFBRScsJ25oQXJyJzonXFx1MjFDRScsJ25ocGFyJzonXFx1MkFGMicsJ25pJzonXFx1MjIwQicsJ25pcyc6J1xcdTIyRkMnLCduaXNkJzonXFx1MjJGQScsJ25pdic6J1xcdTIyMEInLCduamN5JzonXFx1MDQ1QScsJ05KY3knOidcXHUwNDBBJywnbmxhcnInOidcXHUyMTlBJywnbmxBcnInOidcXHUyMUNEJywnbmxkcic6J1xcdTIwMjUnLCdubGUnOidcXHUyMjcwJywnbmxFJzonXFx1MjI2NlxcdTAzMzgnLCdubGVmdGFycm93JzonXFx1MjE5QScsJ25MZWZ0YXJyb3cnOidcXHUyMUNEJywnbmxlZnRyaWdodGFycm93JzonXFx1MjFBRScsJ25MZWZ0cmlnaHRhcnJvdyc6J1xcdTIxQ0UnLCdubGVxJzonXFx1MjI3MCcsJ25sZXFxJzonXFx1MjI2NlxcdTAzMzgnLCdubGVxc2xhbnQnOidcXHUyQTdEXFx1MDMzOCcsJ25sZXMnOidcXHUyQTdEXFx1MDMzOCcsJ25sZXNzJzonXFx1MjI2RScsJ25MbCc6J1xcdTIyRDhcXHUwMzM4JywnbmxzaW0nOidcXHUyMjc0Jywnbmx0JzonXFx1MjI2RScsJ25MdCc6J1xcdTIyNkFcXHUyMEQyJywnbmx0cmknOidcXHUyMkVBJywnbmx0cmllJzonXFx1MjJFQycsJ25MdHYnOidcXHUyMjZBXFx1MDMzOCcsJ25taWQnOidcXHUyMjI0JywnTm9CcmVhayc6J1xcdTIwNjAnLCdOb25CcmVha2luZ1NwYWNlJzonXFx4QTAnLCdub3BmJzonXFx1RDgzNVxcdURENUYnLCdOb3BmJzonXFx1MjExNScsJ25vdCc6J1xceEFDJywnTm90JzonXFx1MkFFQycsJ05vdENvbmdydWVudCc6J1xcdTIyNjInLCdOb3RDdXBDYXAnOidcXHUyMjZEJywnTm90RG91YmxlVmVydGljYWxCYXInOidcXHUyMjI2JywnTm90RWxlbWVudCc6J1xcdTIyMDknLCdOb3RFcXVhbCc6J1xcdTIyNjAnLCdOb3RFcXVhbFRpbGRlJzonXFx1MjI0MlxcdTAzMzgnLCdOb3RFeGlzdHMnOidcXHUyMjA0JywnTm90R3JlYXRlcic6J1xcdTIyNkYnLCdOb3RHcmVhdGVyRXF1YWwnOidcXHUyMjcxJywnTm90R3JlYXRlckZ1bGxFcXVhbCc6J1xcdTIyNjdcXHUwMzM4JywnTm90R3JlYXRlckdyZWF0ZXInOidcXHUyMjZCXFx1MDMzOCcsJ05vdEdyZWF0ZXJMZXNzJzonXFx1MjI3OScsJ05vdEdyZWF0ZXJTbGFudEVxdWFsJzonXFx1MkE3RVxcdTAzMzgnLCdOb3RHcmVhdGVyVGlsZGUnOidcXHUyMjc1JywnTm90SHVtcERvd25IdW1wJzonXFx1MjI0RVxcdTAzMzgnLCdOb3RIdW1wRXF1YWwnOidcXHUyMjRGXFx1MDMzOCcsJ25vdGluJzonXFx1MjIwOScsJ25vdGluZG90JzonXFx1MjJGNVxcdTAzMzgnLCdub3RpbkUnOidcXHUyMkY5XFx1MDMzOCcsJ25vdGludmEnOidcXHUyMjA5Jywnbm90aW52Yic6J1xcdTIyRjcnLCdub3RpbnZjJzonXFx1MjJGNicsJ05vdExlZnRUcmlhbmdsZSc6J1xcdTIyRUEnLCdOb3RMZWZ0VHJpYW5nbGVCYXInOidcXHUyOUNGXFx1MDMzOCcsJ05vdExlZnRUcmlhbmdsZUVxdWFsJzonXFx1MjJFQycsJ05vdExlc3MnOidcXHUyMjZFJywnTm90TGVzc0VxdWFsJzonXFx1MjI3MCcsJ05vdExlc3NHcmVhdGVyJzonXFx1MjI3OCcsJ05vdExlc3NMZXNzJzonXFx1MjI2QVxcdTAzMzgnLCdOb3RMZXNzU2xhbnRFcXVhbCc6J1xcdTJBN0RcXHUwMzM4JywnTm90TGVzc1RpbGRlJzonXFx1MjI3NCcsJ05vdE5lc3RlZEdyZWF0ZXJHcmVhdGVyJzonXFx1MkFBMlxcdTAzMzgnLCdOb3ROZXN0ZWRMZXNzTGVzcyc6J1xcdTJBQTFcXHUwMzM4Jywnbm90bmknOidcXHUyMjBDJywnbm90bml2YSc6J1xcdTIyMEMnLCdub3RuaXZiJzonXFx1MjJGRScsJ25vdG5pdmMnOidcXHUyMkZEJywnTm90UHJlY2VkZXMnOidcXHUyMjgwJywnTm90UHJlY2VkZXNFcXVhbCc6J1xcdTJBQUZcXHUwMzM4JywnTm90UHJlY2VkZXNTbGFudEVxdWFsJzonXFx1MjJFMCcsJ05vdFJldmVyc2VFbGVtZW50JzonXFx1MjIwQycsJ05vdFJpZ2h0VHJpYW5nbGUnOidcXHUyMkVCJywnTm90UmlnaHRUcmlhbmdsZUJhcic6J1xcdTI5RDBcXHUwMzM4JywnTm90UmlnaHRUcmlhbmdsZUVxdWFsJzonXFx1MjJFRCcsJ05vdFNxdWFyZVN1YnNldCc6J1xcdTIyOEZcXHUwMzM4JywnTm90U3F1YXJlU3Vic2V0RXF1YWwnOidcXHUyMkUyJywnTm90U3F1YXJlU3VwZXJzZXQnOidcXHUyMjkwXFx1MDMzOCcsJ05vdFNxdWFyZVN1cGVyc2V0RXF1YWwnOidcXHUyMkUzJywnTm90U3Vic2V0JzonXFx1MjI4MlxcdTIwRDInLCdOb3RTdWJzZXRFcXVhbCc6J1xcdTIyODgnLCdOb3RTdWNjZWVkcyc6J1xcdTIyODEnLCdOb3RTdWNjZWVkc0VxdWFsJzonXFx1MkFCMFxcdTAzMzgnLCdOb3RTdWNjZWVkc1NsYW50RXF1YWwnOidcXHUyMkUxJywnTm90U3VjY2VlZHNUaWxkZSc6J1xcdTIyN0ZcXHUwMzM4JywnTm90U3VwZXJzZXQnOidcXHUyMjgzXFx1MjBEMicsJ05vdFN1cGVyc2V0RXF1YWwnOidcXHUyMjg5JywnTm90VGlsZGUnOidcXHUyMjQxJywnTm90VGlsZGVFcXVhbCc6J1xcdTIyNDQnLCdOb3RUaWxkZUZ1bGxFcXVhbCc6J1xcdTIyNDcnLCdOb3RUaWxkZVRpbGRlJzonXFx1MjI0OScsJ05vdFZlcnRpY2FsQmFyJzonXFx1MjIyNCcsJ25wYXInOidcXHUyMjI2JywnbnBhcmFsbGVsJzonXFx1MjIyNicsJ25wYXJzbCc6J1xcdTJBRkRcXHUyMEU1JywnbnBhcnQnOidcXHUyMjAyXFx1MDMzOCcsJ25wb2xpbnQnOidcXHUyQTE0JywnbnByJzonXFx1MjI4MCcsJ25wcmN1ZSc6J1xcdTIyRTAnLCducHJlJzonXFx1MkFBRlxcdTAzMzgnLCducHJlYyc6J1xcdTIyODAnLCducHJlY2VxJzonXFx1MkFBRlxcdTAzMzgnLCducmFycic6J1xcdTIxOUInLCduckFycic6J1xcdTIxQ0YnLCducmFycmMnOidcXHUyOTMzXFx1MDMzOCcsJ25yYXJydyc6J1xcdTIxOURcXHUwMzM4JywnbnJpZ2h0YXJyb3cnOidcXHUyMTlCJywnblJpZ2h0YXJyb3cnOidcXHUyMUNGJywnbnJ0cmknOidcXHUyMkVCJywnbnJ0cmllJzonXFx1MjJFRCcsJ25zYyc6J1xcdTIyODEnLCduc2NjdWUnOidcXHUyMkUxJywnbnNjZSc6J1xcdTJBQjBcXHUwMzM4JywnbnNjcic6J1xcdUQ4MzVcXHVEQ0MzJywnTnNjcic6J1xcdUQ4MzVcXHVEQ0E5JywnbnNob3J0bWlkJzonXFx1MjIyNCcsJ25zaG9ydHBhcmFsbGVsJzonXFx1MjIyNicsJ25zaW0nOidcXHUyMjQxJywnbnNpbWUnOidcXHUyMjQ0JywnbnNpbWVxJzonXFx1MjI0NCcsJ25zbWlkJzonXFx1MjIyNCcsJ25zcGFyJzonXFx1MjIyNicsJ25zcXN1YmUnOidcXHUyMkUyJywnbnNxc3VwZSc6J1xcdTIyRTMnLCduc3ViJzonXFx1MjI4NCcsJ25zdWJlJzonXFx1MjI4OCcsJ25zdWJFJzonXFx1MkFDNVxcdTAzMzgnLCduc3Vic2V0JzonXFx1MjI4MlxcdTIwRDInLCduc3Vic2V0ZXEnOidcXHUyMjg4JywnbnN1YnNldGVxcSc6J1xcdTJBQzVcXHUwMzM4JywnbnN1Y2MnOidcXHUyMjgxJywnbnN1Y2NlcSc6J1xcdTJBQjBcXHUwMzM4JywnbnN1cCc6J1xcdTIyODUnLCduc3VwZSc6J1xcdTIyODknLCduc3VwRSc6J1xcdTJBQzZcXHUwMzM4JywnbnN1cHNldCc6J1xcdTIyODNcXHUyMEQyJywnbnN1cHNldGVxJzonXFx1MjI4OScsJ25zdXBzZXRlcXEnOidcXHUyQUM2XFx1MDMzOCcsJ250Z2wnOidcXHUyMjc5JywnbnRpbGRlJzonXFx4RjEnLCdOdGlsZGUnOidcXHhEMScsJ250bGcnOidcXHUyMjc4JywnbnRyaWFuZ2xlbGVmdCc6J1xcdTIyRUEnLCdudHJpYW5nbGVsZWZ0ZXEnOidcXHUyMkVDJywnbnRyaWFuZ2xlcmlnaHQnOidcXHUyMkVCJywnbnRyaWFuZ2xlcmlnaHRlcSc6J1xcdTIyRUQnLCdudSc6J1xcdTAzQkQnLCdOdSc6J1xcdTAzOUQnLCdudW0nOicjJywnbnVtZXJvJzonXFx1MjExNicsJ251bXNwJzonXFx1MjAwNycsJ252YXAnOidcXHUyMjREXFx1MjBEMicsJ252ZGFzaCc6J1xcdTIyQUMnLCdudkRhc2gnOidcXHUyMkFEJywnblZkYXNoJzonXFx1MjJBRScsJ25WRGFzaCc6J1xcdTIyQUYnLCdudmdlJzonXFx1MjI2NVxcdTIwRDInLCdudmd0JzonPlxcdTIwRDInLCdudkhhcnInOidcXHUyOTA0JywnbnZpbmZpbic6J1xcdTI5REUnLCdudmxBcnInOidcXHUyOTAyJywnbnZsZSc6J1xcdTIyNjRcXHUyMEQyJywnbnZsdCc6JzxcXHUyMEQyJywnbnZsdHJpZSc6J1xcdTIyQjRcXHUyMEQyJywnbnZyQXJyJzonXFx1MjkwMycsJ252cnRyaWUnOidcXHUyMkI1XFx1MjBEMicsJ252c2ltJzonXFx1MjIzQ1xcdTIwRDInLCdud2FyaGsnOidcXHUyOTIzJywnbndhcnInOidcXHUyMTk2JywnbndBcnInOidcXHUyMUQ2JywnbndhcnJvdyc6J1xcdTIxOTYnLCdud25lYXInOidcXHUyOTI3Jywnb2FjdXRlJzonXFx4RjMnLCdPYWN1dGUnOidcXHhEMycsJ29hc3QnOidcXHUyMjlCJywnb2Npcic6J1xcdTIyOUEnLCdvY2lyYyc6J1xceEY0JywnT2NpcmMnOidcXHhENCcsJ29jeSc6J1xcdTA0M0UnLCdPY3knOidcXHUwNDFFJywnb2Rhc2gnOidcXHUyMjlEJywnb2RibGFjJzonXFx1MDE1MScsJ09kYmxhYyc6J1xcdTAxNTAnLCdvZGl2JzonXFx1MkEzOCcsJ29kb3QnOidcXHUyMjk5Jywnb2Rzb2xkJzonXFx1MjlCQycsJ29lbGlnJzonXFx1MDE1MycsJ09FbGlnJzonXFx1MDE1MicsJ29mY2lyJzonXFx1MjlCRicsJ29mcic6J1xcdUQ4MzVcXHVERDJDJywnT2ZyJzonXFx1RDgzNVxcdUREMTInLCdvZ29uJzonXFx1MDJEQicsJ29ncmF2ZSc6J1xceEYyJywnT2dyYXZlJzonXFx4RDInLCdvZ3QnOidcXHUyOUMxJywnb2hiYXInOidcXHUyOUI1Jywnb2htJzonXFx1MDNBOScsJ29pbnQnOidcXHUyMjJFJywnb2xhcnInOidcXHUyMUJBJywnb2xjaXInOidcXHUyOUJFJywnb2xjcm9zcyc6J1xcdTI5QkInLCdvbGluZSc6J1xcdTIwM0UnLCdvbHQnOidcXHUyOUMwJywnb21hY3InOidcXHUwMTREJywnT21hY3InOidcXHUwMTRDJywnb21lZ2EnOidcXHUwM0M5JywnT21lZ2EnOidcXHUwM0E5Jywnb21pY3Jvbic6J1xcdTAzQkYnLCdPbWljcm9uJzonXFx1MDM5RicsJ29taWQnOidcXHUyOUI2Jywnb21pbnVzJzonXFx1MjI5NicsJ29vcGYnOidcXHVEODM1XFx1REQ2MCcsJ09vcGYnOidcXHVEODM1XFx1REQ0NicsJ29wYXInOidcXHUyOUI3JywnT3BlbkN1cmx5RG91YmxlUXVvdGUnOidcXHUyMDFDJywnT3BlbkN1cmx5UXVvdGUnOidcXHUyMDE4Jywnb3BlcnAnOidcXHUyOUI5Jywnb3BsdXMnOidcXHUyMjk1Jywnb3InOidcXHUyMjI4JywnT3InOidcXHUyQTU0Jywnb3JhcnInOidcXHUyMUJCJywnb3JkJzonXFx1MkE1RCcsJ29yZGVyJzonXFx1MjEzNCcsJ29yZGVyb2YnOidcXHUyMTM0Jywnb3JkZic6J1xceEFBJywnb3JkbSc6J1xceEJBJywnb3JpZ29mJzonXFx1MjJCNicsJ29yb3InOidcXHUyQTU2Jywnb3JzbG9wZSc6J1xcdTJBNTcnLCdvcnYnOidcXHUyQTVCJywnb1MnOidcXHUyNEM4Jywnb3Njcic6J1xcdTIxMzQnLCdPc2NyJzonXFx1RDgzNVxcdURDQUEnLCdvc2xhc2gnOidcXHhGOCcsJ09zbGFzaCc6J1xceEQ4Jywnb3NvbCc6J1xcdTIyOTgnLCdvdGlsZGUnOidcXHhGNScsJ090aWxkZSc6J1xceEQ1Jywnb3RpbWVzJzonXFx1MjI5NycsJ090aW1lcyc6J1xcdTJBMzcnLCdvdGltZXNhcyc6J1xcdTJBMzYnLCdvdW1sJzonXFx4RjYnLCdPdW1sJzonXFx4RDYnLCdvdmJhcic6J1xcdTIzM0QnLCdPdmVyQmFyJzonXFx1MjAzRScsJ092ZXJCcmFjZSc6J1xcdTIzREUnLCdPdmVyQnJhY2tldCc6J1xcdTIzQjQnLCdPdmVyUGFyZW50aGVzaXMnOidcXHUyM0RDJywncGFyJzonXFx1MjIyNScsJ3BhcmEnOidcXHhCNicsJ3BhcmFsbGVsJzonXFx1MjIyNScsJ3BhcnNpbSc6J1xcdTJBRjMnLCdwYXJzbCc6J1xcdTJBRkQnLCdwYXJ0JzonXFx1MjIwMicsJ1BhcnRpYWxEJzonXFx1MjIwMicsJ3BjeSc6J1xcdTA0M0YnLCdQY3knOidcXHUwNDFGJywncGVyY250JzonJScsJ3BlcmlvZCc6Jy4nLCdwZXJtaWwnOidcXHUyMDMwJywncGVycCc6J1xcdTIyQTUnLCdwZXJ0ZW5rJzonXFx1MjAzMScsJ3Bmcic6J1xcdUQ4MzVcXHVERDJEJywnUGZyJzonXFx1RDgzNVxcdUREMTMnLCdwaGknOidcXHUwM0M2JywnUGhpJzonXFx1MDNBNicsJ3BoaXYnOidcXHUwM0Q1JywncGhtbWF0JzonXFx1MjEzMycsJ3Bob25lJzonXFx1MjYwRScsJ3BpJzonXFx1MDNDMCcsJ1BpJzonXFx1MDNBMCcsJ3BpdGNoZm9yayc6J1xcdTIyRDQnLCdwaXYnOidcXHUwM0Q2JywncGxhbmNrJzonXFx1MjEwRicsJ3BsYW5ja2gnOidcXHUyMTBFJywncGxhbmt2JzonXFx1MjEwRicsJ3BsdXMnOicrJywncGx1c2FjaXInOidcXHUyQTIzJywncGx1c2InOidcXHUyMjlFJywncGx1c2Npcic6J1xcdTJBMjInLCdwbHVzZG8nOidcXHUyMjE0JywncGx1c2R1JzonXFx1MkEyNScsJ3BsdXNlJzonXFx1MkE3MicsJ1BsdXNNaW51cyc6J1xceEIxJywncGx1c21uJzonXFx4QjEnLCdwbHVzc2ltJzonXFx1MkEyNicsJ3BsdXN0d28nOidcXHUyQTI3JywncG0nOidcXHhCMScsJ1BvaW5jYXJlcGxhbmUnOidcXHUyMTBDJywncG9pbnRpbnQnOidcXHUyQTE1JywncG9wZic6J1xcdUQ4MzVcXHVERDYxJywnUG9wZic6J1xcdTIxMTknLCdwb3VuZCc6J1xceEEzJywncHInOidcXHUyMjdBJywnUHInOidcXHUyQUJCJywncHJhcCc6J1xcdTJBQjcnLCdwcmN1ZSc6J1xcdTIyN0MnLCdwcmUnOidcXHUyQUFGJywncHJFJzonXFx1MkFCMycsJ3ByZWMnOidcXHUyMjdBJywncHJlY2FwcHJveCc6J1xcdTJBQjcnLCdwcmVjY3VybHllcSc6J1xcdTIyN0MnLCdQcmVjZWRlcyc6J1xcdTIyN0EnLCdQcmVjZWRlc0VxdWFsJzonXFx1MkFBRicsJ1ByZWNlZGVzU2xhbnRFcXVhbCc6J1xcdTIyN0MnLCdQcmVjZWRlc1RpbGRlJzonXFx1MjI3RScsJ3ByZWNlcSc6J1xcdTJBQUYnLCdwcmVjbmFwcHJveCc6J1xcdTJBQjknLCdwcmVjbmVxcSc6J1xcdTJBQjUnLCdwcmVjbnNpbSc6J1xcdTIyRTgnLCdwcmVjc2ltJzonXFx1MjI3RScsJ3ByaW1lJzonXFx1MjAzMicsJ1ByaW1lJzonXFx1MjAzMycsJ3ByaW1lcyc6J1xcdTIxMTknLCdwcm5hcCc6J1xcdTJBQjknLCdwcm5FJzonXFx1MkFCNScsJ3BybnNpbSc6J1xcdTIyRTgnLCdwcm9kJzonXFx1MjIwRicsJ1Byb2R1Y3QnOidcXHUyMjBGJywncHJvZmFsYXInOidcXHUyMzJFJywncHJvZmxpbmUnOidcXHUyMzEyJywncHJvZnN1cmYnOidcXHUyMzEzJywncHJvcCc6J1xcdTIyMUQnLCdQcm9wb3J0aW9uJzonXFx1MjIzNycsJ1Byb3BvcnRpb25hbCc6J1xcdTIyMUQnLCdwcm9wdG8nOidcXHUyMjFEJywncHJzaW0nOidcXHUyMjdFJywncHJ1cmVsJzonXFx1MjJCMCcsJ3BzY3InOidcXHVEODM1XFx1RENDNScsJ1BzY3InOidcXHVEODM1XFx1RENBQicsJ3BzaSc6J1xcdTAzQzgnLCdQc2knOidcXHUwM0E4JywncHVuY3NwJzonXFx1MjAwOCcsJ3Fmcic6J1xcdUQ4MzVcXHVERDJFJywnUWZyJzonXFx1RDgzNVxcdUREMTQnLCdxaW50JzonXFx1MkEwQycsJ3FvcGYnOidcXHVEODM1XFx1REQ2MicsJ1FvcGYnOidcXHUyMTFBJywncXByaW1lJzonXFx1MjA1NycsJ3FzY3InOidcXHVEODM1XFx1RENDNicsJ1FzY3InOidcXHVEODM1XFx1RENBQycsJ3F1YXRlcm5pb25zJzonXFx1MjEwRCcsJ3F1YXRpbnQnOidcXHUyQTE2JywncXVlc3QnOic/JywncXVlc3RlcSc6J1xcdTIyNUYnLCdxdW90JzonXCInLCdRVU9UJzonXCInLCdyQWFycic6J1xcdTIxREInLCdyYWNlJzonXFx1MjIzRFxcdTAzMzEnLCdyYWN1dGUnOidcXHUwMTU1JywnUmFjdXRlJzonXFx1MDE1NCcsJ3JhZGljJzonXFx1MjIxQScsJ3JhZW1wdHl2JzonXFx1MjlCMycsJ3JhbmcnOidcXHUyN0U5JywnUmFuZyc6J1xcdTI3RUInLCdyYW5nZCc6J1xcdTI5OTInLCdyYW5nZSc6J1xcdTI5QTUnLCdyYW5nbGUnOidcXHUyN0U5JywncmFxdW8nOidcXHhCQicsJ3JhcnInOidcXHUyMTkyJywnckFycic6J1xcdTIxRDInLCdSYXJyJzonXFx1MjFBMCcsJ3JhcnJhcCc6J1xcdTI5NzUnLCdyYXJyYic6J1xcdTIxRTUnLCdyYXJyYmZzJzonXFx1MjkyMCcsJ3JhcnJjJzonXFx1MjkzMycsJ3JhcnJmcyc6J1xcdTI5MUUnLCdyYXJyaGsnOidcXHUyMUFBJywncmFycmxwJzonXFx1MjFBQycsJ3JhcnJwbCc6J1xcdTI5NDUnLCdyYXJyc2ltJzonXFx1Mjk3NCcsJ3JhcnJ0bCc6J1xcdTIxQTMnLCdSYXJydGwnOidcXHUyOTE2JywncmFycncnOidcXHUyMTlEJywncmF0YWlsJzonXFx1MjkxQScsJ3JBdGFpbCc6J1xcdTI5MUMnLCdyYXRpbyc6J1xcdTIyMzYnLCdyYXRpb25hbHMnOidcXHUyMTFBJywncmJhcnInOidcXHUyOTBEJywnckJhcnInOidcXHUyOTBGJywnUkJhcnInOidcXHUyOTEwJywncmJicmsnOidcXHUyNzczJywncmJyYWNlJzonfScsJ3JicmFjayc6J10nLCdyYnJrZSc6J1xcdTI5OEMnLCdyYnJrc2xkJzonXFx1Mjk4RScsJ3JicmtzbHUnOidcXHUyOTkwJywncmNhcm9uJzonXFx1MDE1OScsJ1JjYXJvbic6J1xcdTAxNTgnLCdyY2VkaWwnOidcXHUwMTU3JywnUmNlZGlsJzonXFx1MDE1NicsJ3JjZWlsJzonXFx1MjMwOScsJ3JjdWInOid9JywncmN5JzonXFx1MDQ0MCcsJ1JjeSc6J1xcdTA0MjAnLCdyZGNhJzonXFx1MjkzNycsJ3JkbGRoYXInOidcXHUyOTY5JywncmRxdW8nOidcXHUyMDFEJywncmRxdW9yJzonXFx1MjAxRCcsJ3Jkc2gnOidcXHUyMUIzJywnUmUnOidcXHUyMTFDJywncmVhbCc6J1xcdTIxMUMnLCdyZWFsaW5lJzonXFx1MjExQicsJ3JlYWxwYXJ0JzonXFx1MjExQycsJ3JlYWxzJzonXFx1MjExRCcsJ3JlY3QnOidcXHUyNUFEJywncmVnJzonXFx4QUUnLCdSRUcnOidcXHhBRScsJ1JldmVyc2VFbGVtZW50JzonXFx1MjIwQicsJ1JldmVyc2VFcXVpbGlicml1bSc6J1xcdTIxQ0InLCdSZXZlcnNlVXBFcXVpbGlicml1bSc6J1xcdTI5NkYnLCdyZmlzaHQnOidcXHUyOTdEJywncmZsb29yJzonXFx1MjMwQicsJ3Jmcic6J1xcdUQ4MzVcXHVERDJGJywnUmZyJzonXFx1MjExQycsJ3JIYXInOidcXHUyOTY0JywncmhhcmQnOidcXHUyMUMxJywncmhhcnUnOidcXHUyMUMwJywncmhhcnVsJzonXFx1Mjk2QycsJ3Jobyc6J1xcdTAzQzEnLCdSaG8nOidcXHUwM0ExJywncmhvdic6J1xcdTAzRjEnLCdSaWdodEFuZ2xlQnJhY2tldCc6J1xcdTI3RTknLCdyaWdodGFycm93JzonXFx1MjE5MicsJ1JpZ2h0YXJyb3cnOidcXHUyMUQyJywnUmlnaHRBcnJvdyc6J1xcdTIxOTInLCdSaWdodEFycm93QmFyJzonXFx1MjFFNScsJ1JpZ2h0QXJyb3dMZWZ0QXJyb3cnOidcXHUyMUM0JywncmlnaHRhcnJvd3RhaWwnOidcXHUyMUEzJywnUmlnaHRDZWlsaW5nJzonXFx1MjMwOScsJ1JpZ2h0RG91YmxlQnJhY2tldCc6J1xcdTI3RTcnLCdSaWdodERvd25UZWVWZWN0b3InOidcXHUyOTVEJywnUmlnaHREb3duVmVjdG9yJzonXFx1MjFDMicsJ1JpZ2h0RG93blZlY3RvckJhcic6J1xcdTI5NTUnLCdSaWdodEZsb29yJzonXFx1MjMwQicsJ3JpZ2h0aGFycG9vbmRvd24nOidcXHUyMUMxJywncmlnaHRoYXJwb29udXAnOidcXHUyMUMwJywncmlnaHRsZWZ0YXJyb3dzJzonXFx1MjFDNCcsJ3JpZ2h0bGVmdGhhcnBvb25zJzonXFx1MjFDQycsJ3JpZ2h0cmlnaHRhcnJvd3MnOidcXHUyMUM5JywncmlnaHRzcXVpZ2Fycm93JzonXFx1MjE5RCcsJ1JpZ2h0VGVlJzonXFx1MjJBMicsJ1JpZ2h0VGVlQXJyb3cnOidcXHUyMUE2JywnUmlnaHRUZWVWZWN0b3InOidcXHUyOTVCJywncmlnaHR0aHJlZXRpbWVzJzonXFx1MjJDQycsJ1JpZ2h0VHJpYW5nbGUnOidcXHUyMkIzJywnUmlnaHRUcmlhbmdsZUJhcic6J1xcdTI5RDAnLCdSaWdodFRyaWFuZ2xlRXF1YWwnOidcXHUyMkI1JywnUmlnaHRVcERvd25WZWN0b3InOidcXHUyOTRGJywnUmlnaHRVcFRlZVZlY3Rvcic6J1xcdTI5NUMnLCdSaWdodFVwVmVjdG9yJzonXFx1MjFCRScsJ1JpZ2h0VXBWZWN0b3JCYXInOidcXHUyOTU0JywnUmlnaHRWZWN0b3InOidcXHUyMUMwJywnUmlnaHRWZWN0b3JCYXInOidcXHUyOTUzJywncmluZyc6J1xcdTAyREEnLCdyaXNpbmdkb3RzZXEnOidcXHUyMjUzJywncmxhcnInOidcXHUyMUM0JywncmxoYXInOidcXHUyMUNDJywncmxtJzonXFx1MjAwRicsJ3Jtb3VzdCc6J1xcdTIzQjEnLCdybW91c3RhY2hlJzonXFx1MjNCMScsJ3JubWlkJzonXFx1MkFFRScsJ3JvYW5nJzonXFx1MjdFRCcsJ3JvYXJyJzonXFx1MjFGRScsJ3JvYnJrJzonXFx1MjdFNycsJ3JvcGFyJzonXFx1Mjk4NicsJ3JvcGYnOidcXHVEODM1XFx1REQ2MycsJ1JvcGYnOidcXHUyMTFEJywncm9wbHVzJzonXFx1MkEyRScsJ3JvdGltZXMnOidcXHUyQTM1JywnUm91bmRJbXBsaWVzJzonXFx1Mjk3MCcsJ3JwYXInOicpJywncnBhcmd0JzonXFx1Mjk5NCcsJ3JwcG9saW50JzonXFx1MkExMicsJ3JyYXJyJzonXFx1MjFDOScsJ1JyaWdodGFycm93JzonXFx1MjFEQicsJ3JzYXF1byc6J1xcdTIwM0EnLCdyc2NyJzonXFx1RDgzNVxcdURDQzcnLCdSc2NyJzonXFx1MjExQicsJ3JzaCc6J1xcdTIxQjEnLCdSc2gnOidcXHUyMUIxJywncnNxYic6J10nLCdyc3F1byc6J1xcdTIwMTknLCdyc3F1b3InOidcXHUyMDE5JywncnRocmVlJzonXFx1MjJDQycsJ3J0aW1lcyc6J1xcdTIyQ0EnLCdydHJpJzonXFx1MjVCOScsJ3J0cmllJzonXFx1MjJCNScsJ3J0cmlmJzonXFx1MjVCOCcsJ3J0cmlsdHJpJzonXFx1MjlDRScsJ1J1bGVEZWxheWVkJzonXFx1MjlGNCcsJ3J1bHVoYXInOidcXHUyOTY4JywncngnOidcXHUyMTFFJywnc2FjdXRlJzonXFx1MDE1QicsJ1NhY3V0ZSc6J1xcdTAxNUEnLCdzYnF1byc6J1xcdTIwMUEnLCdzYyc6J1xcdTIyN0InLCdTYyc6J1xcdTJBQkMnLCdzY2FwJzonXFx1MkFCOCcsJ3NjYXJvbic6J1xcdTAxNjEnLCdTY2Fyb24nOidcXHUwMTYwJywnc2NjdWUnOidcXHUyMjdEJywnc2NlJzonXFx1MkFCMCcsJ3NjRSc6J1xcdTJBQjQnLCdzY2VkaWwnOidcXHUwMTVGJywnU2NlZGlsJzonXFx1MDE1RScsJ3NjaXJjJzonXFx1MDE1RCcsJ1NjaXJjJzonXFx1MDE1QycsJ3NjbmFwJzonXFx1MkFCQScsJ3NjbkUnOidcXHUyQUI2Jywnc2Nuc2ltJzonXFx1MjJFOScsJ3NjcG9saW50JzonXFx1MkExMycsJ3Njc2ltJzonXFx1MjI3RicsJ3NjeSc6J1xcdTA0NDEnLCdTY3knOidcXHUwNDIxJywnc2RvdCc6J1xcdTIyQzUnLCdzZG90Yic6J1xcdTIyQTEnLCdzZG90ZSc6J1xcdTJBNjYnLCdzZWFyaGsnOidcXHUyOTI1Jywnc2VhcnInOidcXHUyMTk4Jywnc2VBcnInOidcXHUyMUQ4Jywnc2VhcnJvdyc6J1xcdTIxOTgnLCdzZWN0JzonXFx4QTcnLCdzZW1pJzonOycsJ3Nlc3dhcic6J1xcdTI5MjknLCdzZXRtaW51cyc6J1xcdTIyMTYnLCdzZXRtbic6J1xcdTIyMTYnLCdzZXh0JzonXFx1MjczNicsJ3Nmcic6J1xcdUQ4MzVcXHVERDMwJywnU2ZyJzonXFx1RDgzNVxcdUREMTYnLCdzZnJvd24nOidcXHUyMzIyJywnc2hhcnAnOidcXHUyNjZGJywnc2hjaGN5JzonXFx1MDQ0OScsJ1NIQ0hjeSc6J1xcdTA0MjknLCdzaGN5JzonXFx1MDQ0OCcsJ1NIY3knOidcXHUwNDI4JywnU2hvcnREb3duQXJyb3cnOidcXHUyMTkzJywnU2hvcnRMZWZ0QXJyb3cnOidcXHUyMTkwJywnc2hvcnRtaWQnOidcXHUyMjIzJywnc2hvcnRwYXJhbGxlbCc6J1xcdTIyMjUnLCdTaG9ydFJpZ2h0QXJyb3cnOidcXHUyMTkyJywnU2hvcnRVcEFycm93JzonXFx1MjE5MScsJ3NoeSc6J1xceEFEJywnc2lnbWEnOidcXHUwM0MzJywnU2lnbWEnOidcXHUwM0EzJywnc2lnbWFmJzonXFx1MDNDMicsJ3NpZ21hdic6J1xcdTAzQzInLCdzaW0nOidcXHUyMjNDJywnc2ltZG90JzonXFx1MkE2QScsJ3NpbWUnOidcXHUyMjQzJywnc2ltZXEnOidcXHUyMjQzJywnc2ltZyc6J1xcdTJBOUUnLCdzaW1nRSc6J1xcdTJBQTAnLCdzaW1sJzonXFx1MkE5RCcsJ3NpbWxFJzonXFx1MkE5RicsJ3NpbW5lJzonXFx1MjI0NicsJ3NpbXBsdXMnOidcXHUyQTI0Jywnc2ltcmFycic6J1xcdTI5NzInLCdzbGFycic6J1xcdTIxOTAnLCdTbWFsbENpcmNsZSc6J1xcdTIyMTgnLCdzbWFsbHNldG1pbnVzJzonXFx1MjIxNicsJ3NtYXNocCc6J1xcdTJBMzMnLCdzbWVwYXJzbCc6J1xcdTI5RTQnLCdzbWlkJzonXFx1MjIyMycsJ3NtaWxlJzonXFx1MjMyMycsJ3NtdCc6J1xcdTJBQUEnLCdzbXRlJzonXFx1MkFBQycsJ3NtdGVzJzonXFx1MkFBQ1xcdUZFMDAnLCdzb2Z0Y3knOidcXHUwNDRDJywnU09GVGN5JzonXFx1MDQyQycsJ3NvbCc6Jy8nLCdzb2xiJzonXFx1MjlDNCcsJ3NvbGJhcic6J1xcdTIzM0YnLCdzb3BmJzonXFx1RDgzNVxcdURENjQnLCdTb3BmJzonXFx1RDgzNVxcdURENEEnLCdzcGFkZXMnOidcXHUyNjYwJywnc3BhZGVzdWl0JzonXFx1MjY2MCcsJ3NwYXInOidcXHUyMjI1Jywnc3FjYXAnOidcXHUyMjkzJywnc3FjYXBzJzonXFx1MjI5M1xcdUZFMDAnLCdzcWN1cCc6J1xcdTIyOTQnLCdzcWN1cHMnOidcXHUyMjk0XFx1RkUwMCcsJ1NxcnQnOidcXHUyMjFBJywnc3FzdWInOidcXHUyMjhGJywnc3FzdWJlJzonXFx1MjI5MScsJ3Nxc3Vic2V0JzonXFx1MjI4RicsJ3Nxc3Vic2V0ZXEnOidcXHUyMjkxJywnc3FzdXAnOidcXHUyMjkwJywnc3FzdXBlJzonXFx1MjI5MicsJ3Nxc3Vwc2V0JzonXFx1MjI5MCcsJ3Nxc3Vwc2V0ZXEnOidcXHUyMjkyJywnc3F1JzonXFx1MjVBMScsJ3NxdWFyZSc6J1xcdTI1QTEnLCdTcXVhcmUnOidcXHUyNUExJywnU3F1YXJlSW50ZXJzZWN0aW9uJzonXFx1MjI5MycsJ1NxdWFyZVN1YnNldCc6J1xcdTIyOEYnLCdTcXVhcmVTdWJzZXRFcXVhbCc6J1xcdTIyOTEnLCdTcXVhcmVTdXBlcnNldCc6J1xcdTIyOTAnLCdTcXVhcmVTdXBlcnNldEVxdWFsJzonXFx1MjI5MicsJ1NxdWFyZVVuaW9uJzonXFx1MjI5NCcsJ3NxdWFyZic6J1xcdTI1QUEnLCdzcXVmJzonXFx1MjVBQScsJ3NyYXJyJzonXFx1MjE5MicsJ3NzY3InOidcXHVEODM1XFx1RENDOCcsJ1NzY3InOidcXHVEODM1XFx1RENBRScsJ3NzZXRtbic6J1xcdTIyMTYnLCdzc21pbGUnOidcXHUyMzIzJywnc3N0YXJmJzonXFx1MjJDNicsJ3N0YXInOidcXHUyNjA2JywnU3Rhcic6J1xcdTIyQzYnLCdzdGFyZic6J1xcdTI2MDUnLCdzdHJhaWdodGVwc2lsb24nOidcXHUwM0Y1Jywnc3RyYWlnaHRwaGknOidcXHUwM0Q1Jywnc3RybnMnOidcXHhBRicsJ3N1Yic6J1xcdTIyODInLCdTdWInOidcXHUyMkQwJywnc3ViZG90JzonXFx1MkFCRCcsJ3N1YmUnOidcXHUyMjg2Jywnc3ViRSc6J1xcdTJBQzUnLCdzdWJlZG90JzonXFx1MkFDMycsJ3N1Ym11bHQnOidcXHUyQUMxJywnc3VibmUnOidcXHUyMjhBJywnc3VibkUnOidcXHUyQUNCJywnc3VicGx1cyc6J1xcdTJBQkYnLCdzdWJyYXJyJzonXFx1Mjk3OScsJ3N1YnNldCc6J1xcdTIyODInLCdTdWJzZXQnOidcXHUyMkQwJywnc3Vic2V0ZXEnOidcXHUyMjg2Jywnc3Vic2V0ZXFxJzonXFx1MkFDNScsJ1N1YnNldEVxdWFsJzonXFx1MjI4NicsJ3N1YnNldG5lcSc6J1xcdTIyOEEnLCdzdWJzZXRuZXFxJzonXFx1MkFDQicsJ3N1YnNpbSc6J1xcdTJBQzcnLCdzdWJzdWInOidcXHUyQUQ1Jywnc3Vic3VwJzonXFx1MkFEMycsJ3N1Y2MnOidcXHUyMjdCJywnc3VjY2FwcHJveCc6J1xcdTJBQjgnLCdzdWNjY3VybHllcSc6J1xcdTIyN0QnLCdTdWNjZWVkcyc6J1xcdTIyN0InLCdTdWNjZWVkc0VxdWFsJzonXFx1MkFCMCcsJ1N1Y2NlZWRzU2xhbnRFcXVhbCc6J1xcdTIyN0QnLCdTdWNjZWVkc1RpbGRlJzonXFx1MjI3RicsJ3N1Y2NlcSc6J1xcdTJBQjAnLCdzdWNjbmFwcHJveCc6J1xcdTJBQkEnLCdzdWNjbmVxcSc6J1xcdTJBQjYnLCdzdWNjbnNpbSc6J1xcdTIyRTknLCdzdWNjc2ltJzonXFx1MjI3RicsJ1N1Y2hUaGF0JzonXFx1MjIwQicsJ3N1bSc6J1xcdTIyMTEnLCdTdW0nOidcXHUyMjExJywnc3VuZyc6J1xcdTI2NkEnLCdzdXAnOidcXHUyMjgzJywnU3VwJzonXFx1MjJEMScsJ3N1cDEnOidcXHhCOScsJ3N1cDInOidcXHhCMicsJ3N1cDMnOidcXHhCMycsJ3N1cGRvdCc6J1xcdTJBQkUnLCdzdXBkc3ViJzonXFx1MkFEOCcsJ3N1cGUnOidcXHUyMjg3Jywnc3VwRSc6J1xcdTJBQzYnLCdzdXBlZG90JzonXFx1MkFDNCcsJ1N1cGVyc2V0JzonXFx1MjI4MycsJ1N1cGVyc2V0RXF1YWwnOidcXHUyMjg3Jywnc3VwaHNvbCc6J1xcdTI3QzknLCdzdXBoc3ViJzonXFx1MkFENycsJ3N1cGxhcnInOidcXHUyOTdCJywnc3VwbXVsdCc6J1xcdTJBQzInLCdzdXBuZSc6J1xcdTIyOEInLCdzdXBuRSc6J1xcdTJBQ0MnLCdzdXBwbHVzJzonXFx1MkFDMCcsJ3N1cHNldCc6J1xcdTIyODMnLCdTdXBzZXQnOidcXHUyMkQxJywnc3Vwc2V0ZXEnOidcXHUyMjg3Jywnc3Vwc2V0ZXFxJzonXFx1MkFDNicsJ3N1cHNldG5lcSc6J1xcdTIyOEInLCdzdXBzZXRuZXFxJzonXFx1MkFDQycsJ3N1cHNpbSc6J1xcdTJBQzgnLCdzdXBzdWInOidcXHUyQUQ0Jywnc3Vwc3VwJzonXFx1MkFENicsJ3N3YXJoayc6J1xcdTI5MjYnLCdzd2Fycic6J1xcdTIxOTknLCdzd0Fycic6J1xcdTIxRDknLCdzd2Fycm93JzonXFx1MjE5OScsJ3N3bndhcic6J1xcdTI5MkEnLCdzemxpZyc6J1xceERGJywnVGFiJzonXFx0JywndGFyZ2V0JzonXFx1MjMxNicsJ3RhdSc6J1xcdTAzQzQnLCdUYXUnOidcXHUwM0E0JywndGJyayc6J1xcdTIzQjQnLCd0Y2Fyb24nOidcXHUwMTY1JywnVGNhcm9uJzonXFx1MDE2NCcsJ3RjZWRpbCc6J1xcdTAxNjMnLCdUY2VkaWwnOidcXHUwMTYyJywndGN5JzonXFx1MDQ0MicsJ1RjeSc6J1xcdTA0MjInLCd0ZG90JzonXFx1MjBEQicsJ3RlbHJlYyc6J1xcdTIzMTUnLCd0ZnInOidcXHVEODM1XFx1REQzMScsJ1Rmcic6J1xcdUQ4MzVcXHVERDE3JywndGhlcmU0JzonXFx1MjIzNCcsJ3RoZXJlZm9yZSc6J1xcdTIyMzQnLCdUaGVyZWZvcmUnOidcXHUyMjM0JywndGhldGEnOidcXHUwM0I4JywnVGhldGEnOidcXHUwMzk4JywndGhldGFzeW0nOidcXHUwM0QxJywndGhldGF2JzonXFx1MDNEMScsJ3RoaWNrYXBwcm94JzonXFx1MjI0OCcsJ3RoaWNrc2ltJzonXFx1MjIzQycsJ1RoaWNrU3BhY2UnOidcXHUyMDVGXFx1MjAwQScsJ3RoaW5zcCc6J1xcdTIwMDknLCdUaGluU3BhY2UnOidcXHUyMDA5JywndGhrYXAnOidcXHUyMjQ4JywndGhrc2ltJzonXFx1MjIzQycsJ3Rob3JuJzonXFx4RkUnLCdUSE9STic6J1xceERFJywndGlsZGUnOidcXHUwMkRDJywnVGlsZGUnOidcXHUyMjNDJywnVGlsZGVFcXVhbCc6J1xcdTIyNDMnLCdUaWxkZUZ1bGxFcXVhbCc6J1xcdTIyNDUnLCdUaWxkZVRpbGRlJzonXFx1MjI0OCcsJ3RpbWVzJzonXFx4RDcnLCd0aW1lc2InOidcXHUyMkEwJywndGltZXNiYXInOidcXHUyQTMxJywndGltZXNkJzonXFx1MkEzMCcsJ3RpbnQnOidcXHUyMjJEJywndG9lYSc6J1xcdTI5MjgnLCd0b3AnOidcXHUyMkE0JywndG9wYm90JzonXFx1MjMzNicsJ3RvcGNpcic6J1xcdTJBRjEnLCd0b3BmJzonXFx1RDgzNVxcdURENjUnLCdUb3BmJzonXFx1RDgzNVxcdURENEInLCd0b3Bmb3JrJzonXFx1MkFEQScsJ3Rvc2EnOidcXHUyOTI5JywndHByaW1lJzonXFx1MjAzNCcsJ3RyYWRlJzonXFx1MjEyMicsJ1RSQURFJzonXFx1MjEyMicsJ3RyaWFuZ2xlJzonXFx1MjVCNScsJ3RyaWFuZ2xlZG93bic6J1xcdTI1QkYnLCd0cmlhbmdsZWxlZnQnOidcXHUyNUMzJywndHJpYW5nbGVsZWZ0ZXEnOidcXHUyMkI0JywndHJpYW5nbGVxJzonXFx1MjI1QycsJ3RyaWFuZ2xlcmlnaHQnOidcXHUyNUI5JywndHJpYW5nbGVyaWdodGVxJzonXFx1MjJCNScsJ3RyaWRvdCc6J1xcdTI1RUMnLCd0cmllJzonXFx1MjI1QycsJ3RyaW1pbnVzJzonXFx1MkEzQScsJ1RyaXBsZURvdCc6J1xcdTIwREInLCd0cmlwbHVzJzonXFx1MkEzOScsJ3RyaXNiJzonXFx1MjlDRCcsJ3RyaXRpbWUnOidcXHUyQTNCJywndHJwZXppdW0nOidcXHUyM0UyJywndHNjcic6J1xcdUQ4MzVcXHVEQ0M5JywnVHNjcic6J1xcdUQ4MzVcXHVEQ0FGJywndHNjeSc6J1xcdTA0NDYnLCdUU2N5JzonXFx1MDQyNicsJ3RzaGN5JzonXFx1MDQ1QicsJ1RTSGN5JzonXFx1MDQwQicsJ3RzdHJvayc6J1xcdTAxNjcnLCdUc3Ryb2snOidcXHUwMTY2JywndHdpeHQnOidcXHUyMjZDJywndHdvaGVhZGxlZnRhcnJvdyc6J1xcdTIxOUUnLCd0d29oZWFkcmlnaHRhcnJvdyc6J1xcdTIxQTAnLCd1YWN1dGUnOidcXHhGQScsJ1VhY3V0ZSc6J1xceERBJywndWFycic6J1xcdTIxOTEnLCd1QXJyJzonXFx1MjFEMScsJ1VhcnInOidcXHUyMTlGJywnVWFycm9jaXInOidcXHUyOTQ5JywndWJyY3knOidcXHUwNDVFJywnVWJyY3knOidcXHUwNDBFJywndWJyZXZlJzonXFx1MDE2RCcsJ1VicmV2ZSc6J1xcdTAxNkMnLCd1Y2lyYyc6J1xceEZCJywnVWNpcmMnOidcXHhEQicsJ3VjeSc6J1xcdTA0NDMnLCdVY3knOidcXHUwNDIzJywndWRhcnInOidcXHUyMUM1JywndWRibGFjJzonXFx1MDE3MScsJ1VkYmxhYyc6J1xcdTAxNzAnLCd1ZGhhcic6J1xcdTI5NkUnLCd1ZmlzaHQnOidcXHUyOTdFJywndWZyJzonXFx1RDgzNVxcdUREMzInLCdVZnInOidcXHVEODM1XFx1REQxOCcsJ3VncmF2ZSc6J1xceEY5JywnVWdyYXZlJzonXFx4RDknLCd1SGFyJzonXFx1Mjk2MycsJ3VoYXJsJzonXFx1MjFCRicsJ3VoYXJyJzonXFx1MjFCRScsJ3VoYmxrJzonXFx1MjU4MCcsJ3VsY29ybic6J1xcdTIzMUMnLCd1bGNvcm5lcic6J1xcdTIzMUMnLCd1bGNyb3AnOidcXHUyMzBGJywndWx0cmknOidcXHUyNUY4JywndW1hY3InOidcXHUwMTZCJywnVW1hY3InOidcXHUwMTZBJywndW1sJzonXFx4QTgnLCdVbmRlckJhcic6J18nLCdVbmRlckJyYWNlJzonXFx1MjNERicsJ1VuZGVyQnJhY2tldCc6J1xcdTIzQjUnLCdVbmRlclBhcmVudGhlc2lzJzonXFx1MjNERCcsJ1VuaW9uJzonXFx1MjJDMycsJ1VuaW9uUGx1cyc6J1xcdTIyOEUnLCd1b2dvbic6J1xcdTAxNzMnLCdVb2dvbic6J1xcdTAxNzInLCd1b3BmJzonXFx1RDgzNVxcdURENjYnLCdVb3BmJzonXFx1RDgzNVxcdURENEMnLCd1cGFycm93JzonXFx1MjE5MScsJ1VwYXJyb3cnOidcXHUyMUQxJywnVXBBcnJvdyc6J1xcdTIxOTEnLCdVcEFycm93QmFyJzonXFx1MjkxMicsJ1VwQXJyb3dEb3duQXJyb3cnOidcXHUyMUM1JywndXBkb3duYXJyb3cnOidcXHUyMTk1JywnVXBkb3duYXJyb3cnOidcXHUyMUQ1JywnVXBEb3duQXJyb3cnOidcXHUyMTk1JywnVXBFcXVpbGlicml1bSc6J1xcdTI5NkUnLCd1cGhhcnBvb25sZWZ0JzonXFx1MjFCRicsJ3VwaGFycG9vbnJpZ2h0JzonXFx1MjFCRScsJ3VwbHVzJzonXFx1MjI4RScsJ1VwcGVyTGVmdEFycm93JzonXFx1MjE5NicsJ1VwcGVyUmlnaHRBcnJvdyc6J1xcdTIxOTcnLCd1cHNpJzonXFx1MDNDNScsJ1Vwc2knOidcXHUwM0QyJywndXBzaWgnOidcXHUwM0QyJywndXBzaWxvbic6J1xcdTAzQzUnLCdVcHNpbG9uJzonXFx1MDNBNScsJ1VwVGVlJzonXFx1MjJBNScsJ1VwVGVlQXJyb3cnOidcXHUyMUE1JywndXB1cGFycm93cyc6J1xcdTIxQzgnLCd1cmNvcm4nOidcXHUyMzFEJywndXJjb3JuZXInOidcXHUyMzFEJywndXJjcm9wJzonXFx1MjMwRScsJ3VyaW5nJzonXFx1MDE2RicsJ1VyaW5nJzonXFx1MDE2RScsJ3VydHJpJzonXFx1MjVGOScsJ3VzY3InOidcXHVEODM1XFx1RENDQScsJ1VzY3InOidcXHVEODM1XFx1RENCMCcsJ3V0ZG90JzonXFx1MjJGMCcsJ3V0aWxkZSc6J1xcdTAxNjknLCdVdGlsZGUnOidcXHUwMTY4JywndXRyaSc6J1xcdTI1QjUnLCd1dHJpZic6J1xcdTI1QjQnLCd1dWFycic6J1xcdTIxQzgnLCd1dW1sJzonXFx4RkMnLCdVdW1sJzonXFx4REMnLCd1d2FuZ2xlJzonXFx1MjlBNycsJ3ZhbmdydCc6J1xcdTI5OUMnLCd2YXJlcHNpbG9uJzonXFx1MDNGNScsJ3ZhcmthcHBhJzonXFx1MDNGMCcsJ3Zhcm5vdGhpbmcnOidcXHUyMjA1JywndmFycGhpJzonXFx1MDNENScsJ3ZhcnBpJzonXFx1MDNENicsJ3ZhcnByb3B0byc6J1xcdTIyMUQnLCd2YXJyJzonXFx1MjE5NScsJ3ZBcnInOidcXHUyMUQ1JywndmFycmhvJzonXFx1MDNGMScsJ3ZhcnNpZ21hJzonXFx1MDNDMicsJ3ZhcnN1YnNldG5lcSc6J1xcdTIyOEFcXHVGRTAwJywndmFyc3Vic2V0bmVxcSc6J1xcdTJBQ0JcXHVGRTAwJywndmFyc3Vwc2V0bmVxJzonXFx1MjI4QlxcdUZFMDAnLCd2YXJzdXBzZXRuZXFxJzonXFx1MkFDQ1xcdUZFMDAnLCd2YXJ0aGV0YSc6J1xcdTAzRDEnLCd2YXJ0cmlhbmdsZWxlZnQnOidcXHUyMkIyJywndmFydHJpYW5nbGVyaWdodCc6J1xcdTIyQjMnLCd2QmFyJzonXFx1MkFFOCcsJ1ZiYXInOidcXHUyQUVCJywndkJhcnYnOidcXHUyQUU5JywndmN5JzonXFx1MDQzMicsJ1ZjeSc6J1xcdTA0MTInLCd2ZGFzaCc6J1xcdTIyQTInLCd2RGFzaCc6J1xcdTIyQTgnLCdWZGFzaCc6J1xcdTIyQTknLCdWRGFzaCc6J1xcdTIyQUInLCdWZGFzaGwnOidcXHUyQUU2JywndmVlJzonXFx1MjIyOCcsJ1ZlZSc6J1xcdTIyQzEnLCd2ZWViYXInOidcXHUyMkJCJywndmVlZXEnOidcXHUyMjVBJywndmVsbGlwJzonXFx1MjJFRScsJ3ZlcmJhcic6J3wnLCdWZXJiYXInOidcXHUyMDE2JywndmVydCc6J3wnLCdWZXJ0JzonXFx1MjAxNicsJ1ZlcnRpY2FsQmFyJzonXFx1MjIyMycsJ1ZlcnRpY2FsTGluZSc6J3wnLCdWZXJ0aWNhbFNlcGFyYXRvcic6J1xcdTI3NTgnLCdWZXJ0aWNhbFRpbGRlJzonXFx1MjI0MCcsJ1ZlcnlUaGluU3BhY2UnOidcXHUyMDBBJywndmZyJzonXFx1RDgzNVxcdUREMzMnLCdWZnInOidcXHVEODM1XFx1REQxOScsJ3ZsdHJpJzonXFx1MjJCMicsJ3Zuc3ViJzonXFx1MjI4MlxcdTIwRDInLCd2bnN1cCc6J1xcdTIyODNcXHUyMEQyJywndm9wZic6J1xcdUQ4MzVcXHVERDY3JywnVm9wZic6J1xcdUQ4MzVcXHVERDREJywndnByb3AnOidcXHUyMjFEJywndnJ0cmknOidcXHUyMkIzJywndnNjcic6J1xcdUQ4MzVcXHVEQ0NCJywnVnNjcic6J1xcdUQ4MzVcXHVEQ0IxJywndnN1Ym5lJzonXFx1MjI4QVxcdUZFMDAnLCd2c3VibkUnOidcXHUyQUNCXFx1RkUwMCcsJ3ZzdXBuZSc6J1xcdTIyOEJcXHVGRTAwJywndnN1cG5FJzonXFx1MkFDQ1xcdUZFMDAnLCdWdmRhc2gnOidcXHUyMkFBJywndnppZ3phZyc6J1xcdTI5OUEnLCd3Y2lyYyc6J1xcdTAxNzUnLCdXY2lyYyc6J1xcdTAxNzQnLCd3ZWRiYXInOidcXHUyQTVGJywnd2VkZ2UnOidcXHUyMjI3JywnV2VkZ2UnOidcXHUyMkMwJywnd2VkZ2VxJzonXFx1MjI1OScsJ3dlaWVycCc6J1xcdTIxMTgnLCd3ZnInOidcXHVEODM1XFx1REQzNCcsJ1dmcic6J1xcdUQ4MzVcXHVERDFBJywnd29wZic6J1xcdUQ4MzVcXHVERDY4JywnV29wZic6J1xcdUQ4MzVcXHVERDRFJywnd3AnOidcXHUyMTE4Jywnd3InOidcXHUyMjQwJywnd3JlYXRoJzonXFx1MjI0MCcsJ3dzY3InOidcXHVEODM1XFx1RENDQycsJ1dzY3InOidcXHVEODM1XFx1RENCMicsJ3hjYXAnOidcXHUyMkMyJywneGNpcmMnOidcXHUyNUVGJywneGN1cCc6J1xcdTIyQzMnLCd4ZHRyaSc6J1xcdTI1QkQnLCd4ZnInOidcXHVEODM1XFx1REQzNScsJ1hmcic6J1xcdUQ4MzVcXHVERDFCJywneGhhcnInOidcXHUyN0Y3JywneGhBcnInOidcXHUyN0ZBJywneGknOidcXHUwM0JFJywnWGknOidcXHUwMzlFJywneGxhcnInOidcXHUyN0Y1JywneGxBcnInOidcXHUyN0Y4JywneG1hcCc6J1xcdTI3RkMnLCd4bmlzJzonXFx1MjJGQicsJ3hvZG90JzonXFx1MkEwMCcsJ3hvcGYnOidcXHVEODM1XFx1REQ2OScsJ1hvcGYnOidcXHVEODM1XFx1REQ0RicsJ3hvcGx1cyc6J1xcdTJBMDEnLCd4b3RpbWUnOidcXHUyQTAyJywneHJhcnInOidcXHUyN0Y2JywneHJBcnInOidcXHUyN0Y5JywneHNjcic6J1xcdUQ4MzVcXHVEQ0NEJywnWHNjcic6J1xcdUQ4MzVcXHVEQ0IzJywneHNxY3VwJzonXFx1MkEwNicsJ3h1cGx1cyc6J1xcdTJBMDQnLCd4dXRyaSc6J1xcdTI1QjMnLCd4dmVlJzonXFx1MjJDMScsJ3h3ZWRnZSc6J1xcdTIyQzAnLCd5YWN1dGUnOidcXHhGRCcsJ1lhY3V0ZSc6J1xceEREJywneWFjeSc6J1xcdTA0NEYnLCdZQWN5JzonXFx1MDQyRicsJ3ljaXJjJzonXFx1MDE3NycsJ1ljaXJjJzonXFx1MDE3NicsJ3ljeSc6J1xcdTA0NEInLCdZY3knOidcXHUwNDJCJywneWVuJzonXFx4QTUnLCd5ZnInOidcXHVEODM1XFx1REQzNicsJ1lmcic6J1xcdUQ4MzVcXHVERDFDJywneWljeSc6J1xcdTA0NTcnLCdZSWN5JzonXFx1MDQwNycsJ3lvcGYnOidcXHVEODM1XFx1REQ2QScsJ1lvcGYnOidcXHVEODM1XFx1REQ1MCcsJ3lzY3InOidcXHVEODM1XFx1RENDRScsJ1lzY3InOidcXHVEODM1XFx1RENCNCcsJ3l1Y3knOidcXHUwNDRFJywnWVVjeSc6J1xcdTA0MkUnLCd5dW1sJzonXFx4RkYnLCdZdW1sJzonXFx1MDE3OCcsJ3phY3V0ZSc6J1xcdTAxN0EnLCdaYWN1dGUnOidcXHUwMTc5JywnemNhcm9uJzonXFx1MDE3RScsJ1pjYXJvbic6J1xcdTAxN0QnLCd6Y3knOidcXHUwNDM3JywnWmN5JzonXFx1MDQxNycsJ3pkb3QnOidcXHUwMTdDJywnWmRvdCc6J1xcdTAxN0InLCd6ZWV0cmYnOidcXHUyMTI4JywnWmVyb1dpZHRoU3BhY2UnOidcXHUyMDBCJywnemV0YSc6J1xcdTAzQjYnLCdaZXRhJzonXFx1MDM5NicsJ3pmcic6J1xcdUQ4MzVcXHVERDM3JywnWmZyJzonXFx1MjEyOCcsJ3poY3knOidcXHUwNDM2JywnWkhjeSc6J1xcdTA0MTYnLCd6aWdyYXJyJzonXFx1MjFERCcsJ3pvcGYnOidcXHVEODM1XFx1REQ2QicsJ1pvcGYnOidcXHUyMTI0JywnenNjcic6J1xcdUQ4MzVcXHVEQ0NGJywnWnNjcic6J1xcdUQ4MzVcXHVEQ0I1JywnendqJzonXFx1MjAwRCcsJ3p3bmonOidcXHUyMDBDJ307XG5cdHZhciBkZWNvZGVNYXBMZWdhY3kgPSB7J2FhY3V0ZSc6J1xceEUxJywnQWFjdXRlJzonXFx4QzEnLCdhY2lyYyc6J1xceEUyJywnQWNpcmMnOidcXHhDMicsJ2FjdXRlJzonXFx4QjQnLCdhZWxpZyc6J1xceEU2JywnQUVsaWcnOidcXHhDNicsJ2FncmF2ZSc6J1xceEUwJywnQWdyYXZlJzonXFx4QzAnLCdhbXAnOicmJywnQU1QJzonJicsJ2FyaW5nJzonXFx4RTUnLCdBcmluZyc6J1xceEM1JywnYXRpbGRlJzonXFx4RTMnLCdBdGlsZGUnOidcXHhDMycsJ2F1bWwnOidcXHhFNCcsJ0F1bWwnOidcXHhDNCcsJ2JydmJhcic6J1xceEE2JywnY2NlZGlsJzonXFx4RTcnLCdDY2VkaWwnOidcXHhDNycsJ2NlZGlsJzonXFx4QjgnLCdjZW50JzonXFx4QTInLCdjb3B5JzonXFx4QTknLCdDT1BZJzonXFx4QTknLCdjdXJyZW4nOidcXHhBNCcsJ2RlZyc6J1xceEIwJywnZGl2aWRlJzonXFx4RjcnLCdlYWN1dGUnOidcXHhFOScsJ0VhY3V0ZSc6J1xceEM5JywnZWNpcmMnOidcXHhFQScsJ0VjaXJjJzonXFx4Q0EnLCdlZ3JhdmUnOidcXHhFOCcsJ0VncmF2ZSc6J1xceEM4JywnZXRoJzonXFx4RjAnLCdFVEgnOidcXHhEMCcsJ2V1bWwnOidcXHhFQicsJ0V1bWwnOidcXHhDQicsJ2ZyYWMxMic6J1xceEJEJywnZnJhYzE0JzonXFx4QkMnLCdmcmFjMzQnOidcXHhCRScsJ2d0JzonPicsJ0dUJzonPicsJ2lhY3V0ZSc6J1xceEVEJywnSWFjdXRlJzonXFx4Q0QnLCdpY2lyYyc6J1xceEVFJywnSWNpcmMnOidcXHhDRScsJ2lleGNsJzonXFx4QTEnLCdpZ3JhdmUnOidcXHhFQycsJ0lncmF2ZSc6J1xceENDJywnaXF1ZXN0JzonXFx4QkYnLCdpdW1sJzonXFx4RUYnLCdJdW1sJzonXFx4Q0YnLCdsYXF1byc6J1xceEFCJywnbHQnOic8JywnTFQnOic8JywnbWFjcic6J1xceEFGJywnbWljcm8nOidcXHhCNScsJ21pZGRvdCc6J1xceEI3JywnbmJzcCc6J1xceEEwJywnbm90JzonXFx4QUMnLCdudGlsZGUnOidcXHhGMScsJ050aWxkZSc6J1xceEQxJywnb2FjdXRlJzonXFx4RjMnLCdPYWN1dGUnOidcXHhEMycsJ29jaXJjJzonXFx4RjQnLCdPY2lyYyc6J1xceEQ0Jywnb2dyYXZlJzonXFx4RjInLCdPZ3JhdmUnOidcXHhEMicsJ29yZGYnOidcXHhBQScsJ29yZG0nOidcXHhCQScsJ29zbGFzaCc6J1xceEY4JywnT3NsYXNoJzonXFx4RDgnLCdvdGlsZGUnOidcXHhGNScsJ090aWxkZSc6J1xceEQ1Jywnb3VtbCc6J1xceEY2JywnT3VtbCc6J1xceEQ2JywncGFyYSc6J1xceEI2JywncGx1c21uJzonXFx4QjEnLCdwb3VuZCc6J1xceEEzJywncXVvdCc6J1wiJywnUVVPVCc6J1wiJywncmFxdW8nOidcXHhCQicsJ3JlZyc6J1xceEFFJywnUkVHJzonXFx4QUUnLCdzZWN0JzonXFx4QTcnLCdzaHknOidcXHhBRCcsJ3N1cDEnOidcXHhCOScsJ3N1cDInOidcXHhCMicsJ3N1cDMnOidcXHhCMycsJ3N6bGlnJzonXFx4REYnLCd0aG9ybic6J1xceEZFJywnVEhPUk4nOidcXHhERScsJ3RpbWVzJzonXFx4RDcnLCd1YWN1dGUnOidcXHhGQScsJ1VhY3V0ZSc6J1xceERBJywndWNpcmMnOidcXHhGQicsJ1VjaXJjJzonXFx4REInLCd1Z3JhdmUnOidcXHhGOScsJ1VncmF2ZSc6J1xceEQ5JywndW1sJzonXFx4QTgnLCd1dW1sJzonXFx4RkMnLCdVdW1sJzonXFx4REMnLCd5YWN1dGUnOidcXHhGRCcsJ1lhY3V0ZSc6J1xceEREJywneWVuJzonXFx4QTUnLCd5dW1sJzonXFx4RkYnfTtcblx0dmFyIGRlY29kZU1hcE51bWVyaWMgPSB7JzAnOidcXHVGRkZEJywnMTI4JzonXFx1MjBBQycsJzEzMCc6J1xcdTIwMUEnLCcxMzEnOidcXHUwMTkyJywnMTMyJzonXFx1MjAxRScsJzEzMyc6J1xcdTIwMjYnLCcxMzQnOidcXHUyMDIwJywnMTM1JzonXFx1MjAyMScsJzEzNic6J1xcdTAyQzYnLCcxMzcnOidcXHUyMDMwJywnMTM4JzonXFx1MDE2MCcsJzEzOSc6J1xcdTIwMzknLCcxNDAnOidcXHUwMTUyJywnMTQyJzonXFx1MDE3RCcsJzE0NSc6J1xcdTIwMTgnLCcxNDYnOidcXHUyMDE5JywnMTQ3JzonXFx1MjAxQycsJzE0OCc6J1xcdTIwMUQnLCcxNDknOidcXHUyMDIyJywnMTUwJzonXFx1MjAxMycsJzE1MSc6J1xcdTIwMTQnLCcxNTInOidcXHUwMkRDJywnMTUzJzonXFx1MjEyMicsJzE1NCc6J1xcdTAxNjEnLCcxNTUnOidcXHUyMDNBJywnMTU2JzonXFx1MDE1MycsJzE1OCc6J1xcdTAxN0UnLCcxNTknOidcXHUwMTc4J307XG5cdHZhciBpbnZhbGlkUmVmZXJlbmNlQ29kZVBvaW50cyA9IFsxLDIsMyw0LDUsNiw3LDgsMTEsMTMsMTQsMTUsMTYsMTcsMTgsMTksMjAsMjEsMjIsMjMsMjQsMjUsMjYsMjcsMjgsMjksMzAsMzEsMTI3LDEyOCwxMjksMTMwLDEzMSwxMzIsMTMzLDEzNCwxMzUsMTM2LDEzNywxMzgsMTM5LDE0MCwxNDEsMTQyLDE0MywxNDQsMTQ1LDE0NiwxNDcsMTQ4LDE0OSwxNTAsMTUxLDE1MiwxNTMsMTU0LDE1NSwxNTYsMTU3LDE1OCwxNTksNjQ5NzYsNjQ5NzcsNjQ5NzgsNjQ5NzksNjQ5ODAsNjQ5ODEsNjQ5ODIsNjQ5ODMsNjQ5ODQsNjQ5ODUsNjQ5ODYsNjQ5ODcsNjQ5ODgsNjQ5ODksNjQ5OTAsNjQ5OTEsNjQ5OTIsNjQ5OTMsNjQ5OTQsNjQ5OTUsNjQ5OTYsNjQ5OTcsNjQ5OTgsNjQ5OTksNjUwMDAsNjUwMDEsNjUwMDIsNjUwMDMsNjUwMDQsNjUwMDUsNjUwMDYsNjUwMDcsNjU1MzQsNjU1MzUsMTMxMDcwLDEzMTA3MSwxOTY2MDYsMTk2NjA3LDI2MjE0MiwyNjIxNDMsMzI3Njc4LDMyNzY3OSwzOTMyMTQsMzkzMjE1LDQ1ODc1MCw0NTg3NTEsNTI0Mjg2LDUyNDI4Nyw1ODk4MjIsNTg5ODIzLDY1NTM1OCw2NTUzNTksNzIwODk0LDcyMDg5NSw3ODY0MzAsNzg2NDMxLDg1MTk2Niw4NTE5NjcsOTE3NTAyLDkxNzUwMyw5ODMwMzgsOTgzMDM5LDEwNDg1NzQsMTA0ODU3NSwxMTE0MTEwLDExMTQxMTFdO1xuXG5cdC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5cdHZhciBzdHJpbmdGcm9tQ2hhckNvZGUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlO1xuXG5cdHZhciBvYmplY3QgPSB7fTtcblx0dmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0Lmhhc093blByb3BlcnR5O1xuXHR2YXIgaGFzID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eU5hbWUpIHtcblx0XHRyZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5TmFtZSk7XG5cdH07XG5cblx0dmFyIGNvbnRhaW5zID0gZnVuY3Rpb24oYXJyYXksIHZhbHVlKSB7XG5cdFx0dmFyIGluZGV4ID0gLTE7XG5cdFx0dmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcblx0XHR3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuXHRcdFx0aWYgKGFycmF5W2luZGV4XSA9PSB2YWx1ZSkge1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xuXG5cdHZhciBtZXJnZSA9IGZ1bmN0aW9uKG9wdGlvbnMsIGRlZmF1bHRzKSB7XG5cdFx0aWYgKCFvcHRpb25zKSB7XG5cdFx0XHRyZXR1cm4gZGVmYXVsdHM7XG5cdFx0fVxuXHRcdHZhciByZXN1bHQgPSB7fTtcblx0XHR2YXIga2V5O1xuXHRcdGZvciAoa2V5IGluIGRlZmF1bHRzKSB7XG5cdFx0XHQvLyBBIGBoYXNPd25Qcm9wZXJ0eWAgY2hlY2sgaXMgbm90IG5lZWRlZCBoZXJlLCBzaW5jZSBvbmx5IHJlY29nbml6ZWRcblx0XHRcdC8vIG9wdGlvbiBuYW1lcyBhcmUgdXNlZCBhbnl3YXkuIEFueSBvdGhlcnMgYXJlIGlnbm9yZWQuXG5cdFx0XHRyZXN1bHRba2V5XSA9IGhhcyhvcHRpb25zLCBrZXkpID8gb3B0aW9uc1trZXldIDogZGVmYXVsdHNba2V5XTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fTtcblxuXHQvLyBNb2RpZmllZCB2ZXJzaW9uIG9mIGB1Y3MyZW5jb2RlYDsgc2VlIGh0dHBzOi8vbXRocy5iZS9wdW55Y29kZS5cblx0dmFyIGNvZGVQb2ludFRvU3ltYm9sID0gZnVuY3Rpb24oY29kZVBvaW50LCBzdHJpY3QpIHtcblx0XHR2YXIgb3V0cHV0ID0gJyc7XG5cdFx0aWYgKChjb2RlUG9pbnQgPj0gMHhEODAwICYmIGNvZGVQb2ludCA8PSAweERGRkYpIHx8IGNvZGVQb2ludCA+IDB4MTBGRkZGKSB7XG5cdFx0XHQvLyBTZWUgaXNzdWUgIzQ6XG5cdFx0XHQvLyBcdTIwMUNPdGhlcndpc2UsIGlmIHRoZSBudW1iZXIgaXMgaW4gdGhlIHJhbmdlIDB4RDgwMCB0byAweERGRkYgb3IgaXNcblx0XHRcdC8vIGdyZWF0ZXIgdGhhbiAweDEwRkZGRiwgdGhlbiB0aGlzIGlzIGEgcGFyc2UgZXJyb3IuIFJldHVybiBhIFUrRkZGRFxuXHRcdFx0Ly8gUkVQTEFDRU1FTlQgQ0hBUkFDVEVSLlx1MjAxRFxuXHRcdFx0aWYgKHN0cmljdCkge1xuXHRcdFx0XHRwYXJzZUVycm9yKCdjaGFyYWN0ZXIgcmVmZXJlbmNlIG91dHNpZGUgdGhlIHBlcm1pc3NpYmxlIFVuaWNvZGUgcmFuZ2UnKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiAnXFx1RkZGRCc7XG5cdFx0fVxuXHRcdGlmIChoYXMoZGVjb2RlTWFwTnVtZXJpYywgY29kZVBvaW50KSkge1xuXHRcdFx0aWYgKHN0cmljdCkge1xuXHRcdFx0XHRwYXJzZUVycm9yKCdkaXNhbGxvd2VkIGNoYXJhY3RlciByZWZlcmVuY2UnKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBkZWNvZGVNYXBOdW1lcmljW2NvZGVQb2ludF07XG5cdFx0fVxuXHRcdGlmIChzdHJpY3QgJiYgY29udGFpbnMoaW52YWxpZFJlZmVyZW5jZUNvZGVQb2ludHMsIGNvZGVQb2ludCkpIHtcblx0XHRcdHBhcnNlRXJyb3IoJ2Rpc2FsbG93ZWQgY2hhcmFjdGVyIHJlZmVyZW5jZScpO1xuXHRcdH1cblx0XHRpZiAoY29kZVBvaW50ID4gMHhGRkZGKSB7XG5cdFx0XHRjb2RlUG9pbnQgLT0gMHgxMDAwMDtcblx0XHRcdG91dHB1dCArPSBzdHJpbmdGcm9tQ2hhckNvZGUoY29kZVBvaW50ID4+PiAxMCAmIDB4M0ZGIHwgMHhEODAwKTtcblx0XHRcdGNvZGVQb2ludCA9IDB4REMwMCB8IGNvZGVQb2ludCAmIDB4M0ZGO1xuXHRcdH1cblx0XHRvdXRwdXQgKz0gc3RyaW5nRnJvbUNoYXJDb2RlKGNvZGVQb2ludCk7XG5cdFx0cmV0dXJuIG91dHB1dDtcblx0fTtcblxuXHR2YXIgaGV4RXNjYXBlID0gZnVuY3Rpb24oY29kZVBvaW50KSB7XG5cdFx0cmV0dXJuICcmI3gnICsgY29kZVBvaW50LnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpICsgJzsnO1xuXHR9O1xuXG5cdHZhciBkZWNFc2NhcGUgPSBmdW5jdGlvbihjb2RlUG9pbnQpIHtcblx0XHRyZXR1cm4gJyYjJyArIGNvZGVQb2ludCArICc7Jztcblx0fTtcblxuXHR2YXIgcGFyc2VFcnJvciA9IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcblx0XHR0aHJvdyBFcnJvcignUGFyc2UgZXJyb3I6ICcgKyBtZXNzYWdlKTtcblx0fTtcblxuXHQvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuXHR2YXIgZW5jb2RlID0gZnVuY3Rpb24oc3RyaW5nLCBvcHRpb25zKSB7XG5cdFx0b3B0aW9ucyA9IG1lcmdlKG9wdGlvbnMsIGVuY29kZS5vcHRpb25zKTtcblx0XHR2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3Q7XG5cdFx0aWYgKHN0cmljdCAmJiByZWdleEludmFsaWRSYXdDb2RlUG9pbnQudGVzdChzdHJpbmcpKSB7XG5cdFx0XHRwYXJzZUVycm9yKCdmb3JiaWRkZW4gY29kZSBwb2ludCcpO1xuXHRcdH1cblx0XHR2YXIgZW5jb2RlRXZlcnl0aGluZyA9IG9wdGlvbnMuZW5jb2RlRXZlcnl0aGluZztcblx0XHR2YXIgdXNlTmFtZWRSZWZlcmVuY2VzID0gb3B0aW9ucy51c2VOYW1lZFJlZmVyZW5jZXM7XG5cdFx0dmFyIGFsbG93VW5zYWZlU3ltYm9scyA9IG9wdGlvbnMuYWxsb3dVbnNhZmVTeW1ib2xzO1xuXHRcdHZhciBlc2NhcGVDb2RlUG9pbnQgPSBvcHRpb25zLmRlY2ltYWwgPyBkZWNFc2NhcGUgOiBoZXhFc2NhcGU7XG5cblx0XHR2YXIgZXNjYXBlQm1wU3ltYm9sID0gZnVuY3Rpb24oc3ltYm9sKSB7XG5cdFx0XHRyZXR1cm4gZXNjYXBlQ29kZVBvaW50KHN5bWJvbC5jaGFyQ29kZUF0KDApKTtcblx0XHR9O1xuXG5cdFx0aWYgKGVuY29kZUV2ZXJ5dGhpbmcpIHtcblx0XHRcdC8vIEVuY29kZSBBU0NJSSBzeW1ib2xzLlxuXHRcdFx0c3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocmVnZXhBc2NpaVdoaXRlbGlzdCwgZnVuY3Rpb24oc3ltYm9sKSB7XG5cdFx0XHRcdC8vIFVzZSBuYW1lZCByZWZlcmVuY2VzIGlmIHJlcXVlc3RlZCAmIHBvc3NpYmxlLlxuXHRcdFx0XHRpZiAodXNlTmFtZWRSZWZlcmVuY2VzICYmIGhhcyhlbmNvZGVNYXAsIHN5bWJvbCkpIHtcblx0XHRcdFx0XHRyZXR1cm4gJyYnICsgZW5jb2RlTWFwW3N5bWJvbF0gKyAnOyc7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGVzY2FwZUJtcFN5bWJvbChzeW1ib2wpO1xuXHRcdFx0fSk7XG5cdFx0XHQvLyBTaG9ydGVuIGEgZmV3IGVzY2FwZXMgdGhhdCByZXByZXNlbnQgdHdvIHN5bWJvbHMsIG9mIHdoaWNoIGF0IGxlYXN0IG9uZVxuXHRcdFx0Ly8gaXMgd2l0aGluIHRoZSBBU0NJSSByYW5nZS5cblx0XHRcdGlmICh1c2VOYW1lZFJlZmVyZW5jZXMpIHtcblx0XHRcdFx0c3RyaW5nID0gc3RyaW5nXG5cdFx0XHRcdFx0LnJlcGxhY2UoLyZndDtcXHUyMEQyL2csICcmbnZndDsnKVxuXHRcdFx0XHRcdC5yZXBsYWNlKC8mbHQ7XFx1MjBEMi9nLCAnJm52bHQ7Jylcblx0XHRcdFx0XHQucmVwbGFjZSgvJiN4NjY7JiN4NkE7L2csICcmZmpsaWc7Jyk7XG5cdFx0XHR9XG5cdFx0XHQvLyBFbmNvZGUgbm9uLUFTQ0lJIHN5bWJvbHMuXG5cdFx0XHRpZiAodXNlTmFtZWRSZWZlcmVuY2VzKSB7XG5cdFx0XHRcdC8vIEVuY29kZSBub24tQVNDSUkgc3ltYm9scyB0aGF0IGNhbiBiZSByZXBsYWNlZCB3aXRoIGEgbmFtZWQgcmVmZXJlbmNlLlxuXHRcdFx0XHRzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShyZWdleEVuY29kZU5vbkFzY2lpLCBmdW5jdGlvbihzdHJpbmcpIHtcblx0XHRcdFx0XHQvLyBOb3RlOiB0aGVyZSBpcyBubyBuZWVkIHRvIGNoZWNrIGBoYXMoZW5jb2RlTWFwLCBzdHJpbmcpYCBoZXJlLlxuXHRcdFx0XHRcdHJldHVybiAnJicgKyBlbmNvZGVNYXBbc3RyaW5nXSArICc7Jztcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0XHQvLyBOb3RlOiBhbnkgcmVtYWluaW5nIG5vbi1BU0NJSSBzeW1ib2xzIGFyZSBoYW5kbGVkIG91dHNpZGUgb2YgdGhlIGBpZmAuXG5cdFx0fSBlbHNlIGlmICh1c2VOYW1lZFJlZmVyZW5jZXMpIHtcblx0XHRcdC8vIEFwcGx5IG5hbWVkIGNoYXJhY3RlciByZWZlcmVuY2VzLlxuXHRcdFx0Ly8gRW5jb2RlIGA8PlwiJyZgIHVzaW5nIG5hbWVkIGNoYXJhY3RlciByZWZlcmVuY2VzLlxuXHRcdFx0aWYgKCFhbGxvd1Vuc2FmZVN5bWJvbHMpIHtcblx0XHRcdFx0c3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocmVnZXhFc2NhcGUsIGZ1bmN0aW9uKHN0cmluZykge1xuXHRcdFx0XHRcdHJldHVybiAnJicgKyBlbmNvZGVNYXBbc3RyaW5nXSArICc7JzsgLy8gbm8gbmVlZCB0byBjaGVjayBgaGFzKClgIGhlcmVcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0XHQvLyBTaG9ydGVuIGVzY2FwZXMgdGhhdCByZXByZXNlbnQgdHdvIHN5bWJvbHMsIG9mIHdoaWNoIGF0IGxlYXN0IG9uZSBpc1xuXHRcdFx0Ly8gYDw+XCInJmAuXG5cdFx0XHRzdHJpbmcgPSBzdHJpbmdcblx0XHRcdFx0LnJlcGxhY2UoLyZndDtcXHUyMEQyL2csICcmbnZndDsnKVxuXHRcdFx0XHQucmVwbGFjZSgvJmx0O1xcdTIwRDIvZywgJyZudmx0OycpO1xuXHRcdFx0Ly8gRW5jb2RlIG5vbi1BU0NJSSBzeW1ib2xzIHRoYXQgY2FuIGJlIHJlcGxhY2VkIHdpdGggYSBuYW1lZCByZWZlcmVuY2UuXG5cdFx0XHRzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShyZWdleEVuY29kZU5vbkFzY2lpLCBmdW5jdGlvbihzdHJpbmcpIHtcblx0XHRcdFx0Ly8gTm90ZTogdGhlcmUgaXMgbm8gbmVlZCB0byBjaGVjayBgaGFzKGVuY29kZU1hcCwgc3RyaW5nKWAgaGVyZS5cblx0XHRcdFx0cmV0dXJuICcmJyArIGVuY29kZU1hcFtzdHJpbmddICsgJzsnO1xuXHRcdFx0fSk7XG5cdFx0fSBlbHNlIGlmICghYWxsb3dVbnNhZmVTeW1ib2xzKSB7XG5cdFx0XHQvLyBFbmNvZGUgYDw+XCInJmAgdXNpbmcgaGV4YWRlY2ltYWwgZXNjYXBlcywgbm93IHRoYXQgdGhleVx1MjAxOXJlIG5vdCBoYW5kbGVkXG5cdFx0XHQvLyB1c2luZyBuYW1lZCBjaGFyYWN0ZXIgcmVmZXJlbmNlcy5cblx0XHRcdHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHJlZ2V4RXNjYXBlLCBlc2NhcGVCbXBTeW1ib2wpO1xuXHRcdH1cblx0XHRyZXR1cm4gc3RyaW5nXG5cdFx0XHQvLyBFbmNvZGUgYXN0cmFsIHN5bWJvbHMuXG5cdFx0XHQucmVwbGFjZShyZWdleEFzdHJhbFN5bWJvbHMsIGZ1bmN0aW9uKCQwKSB7XG5cdFx0XHRcdC8vIGh0dHBzOi8vbWF0aGlhc2J5bmVucy5iZS9ub3Rlcy9qYXZhc2NyaXB0LWVuY29kaW5nI3N1cnJvZ2F0ZS1mb3JtdWxhZVxuXHRcdFx0XHR2YXIgaGlnaCA9ICQwLmNoYXJDb2RlQXQoMCk7XG5cdFx0XHRcdHZhciBsb3cgPSAkMC5jaGFyQ29kZUF0KDEpO1xuXHRcdFx0XHR2YXIgY29kZVBvaW50ID0gKGhpZ2ggLSAweEQ4MDApICogMHg0MDAgKyBsb3cgLSAweERDMDAgKyAweDEwMDAwO1xuXHRcdFx0XHRyZXR1cm4gZXNjYXBlQ29kZVBvaW50KGNvZGVQb2ludCk7XG5cdFx0XHR9KVxuXHRcdFx0Ly8gRW5jb2RlIGFueSByZW1haW5pbmcgQk1QIHN5bWJvbHMgdGhhdCBhcmUgbm90IHByaW50YWJsZSBBU0NJSSBzeW1ib2xzXG5cdFx0XHQvLyB1c2luZyBhIGhleGFkZWNpbWFsIGVzY2FwZS5cblx0XHRcdC5yZXBsYWNlKHJlZ2V4Qm1wV2hpdGVsaXN0LCBlc2NhcGVCbXBTeW1ib2wpO1xuXHR9O1xuXHQvLyBFeHBvc2UgZGVmYXVsdCBvcHRpb25zIChzbyB0aGV5IGNhbiBiZSBvdmVycmlkZGVuIGdsb2JhbGx5KS5cblx0ZW5jb2RlLm9wdGlvbnMgPSB7XG5cdFx0J2FsbG93VW5zYWZlU3ltYm9scyc6IGZhbHNlLFxuXHRcdCdlbmNvZGVFdmVyeXRoaW5nJzogZmFsc2UsXG5cdFx0J3N0cmljdCc6IGZhbHNlLFxuXHRcdCd1c2VOYW1lZFJlZmVyZW5jZXMnOiBmYWxzZSxcblx0XHQnZGVjaW1hbCcgOiBmYWxzZVxuXHR9O1xuXG5cdHZhciBkZWNvZGUgPSBmdW5jdGlvbihodG1sLCBvcHRpb25zKSB7XG5cdFx0b3B0aW9ucyA9IG1lcmdlKG9wdGlvbnMsIGRlY29kZS5vcHRpb25zKTtcblx0XHR2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3Q7XG5cdFx0aWYgKHN0cmljdCAmJiByZWdleEludmFsaWRFbnRpdHkudGVzdChodG1sKSkge1xuXHRcdFx0cGFyc2VFcnJvcignbWFsZm9ybWVkIGNoYXJhY3RlciByZWZlcmVuY2UnKTtcblx0XHR9XG5cdFx0cmV0dXJuIGh0bWwucmVwbGFjZShyZWdleERlY29kZSwgZnVuY3Rpb24oJDAsICQxLCAkMiwgJDMsICQ0LCAkNSwgJDYsICQ3LCAkOCkge1xuXHRcdFx0dmFyIGNvZGVQb2ludDtcblx0XHRcdHZhciBzZW1pY29sb247XG5cdFx0XHR2YXIgZGVjRGlnaXRzO1xuXHRcdFx0dmFyIGhleERpZ2l0cztcblx0XHRcdHZhciByZWZlcmVuY2U7XG5cdFx0XHR2YXIgbmV4dDtcblxuXHRcdFx0aWYgKCQxKSB7XG5cdFx0XHRcdHJlZmVyZW5jZSA9ICQxO1xuXHRcdFx0XHQvLyBOb3RlOiB0aGVyZSBpcyBubyBuZWVkIHRvIGNoZWNrIGBoYXMoZGVjb2RlTWFwLCByZWZlcmVuY2UpYC5cblx0XHRcdFx0cmV0dXJuIGRlY29kZU1hcFtyZWZlcmVuY2VdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoJDIpIHtcblx0XHRcdFx0Ly8gRGVjb2RlIG5hbWVkIGNoYXJhY3RlciByZWZlcmVuY2VzIHdpdGhvdXQgdHJhaWxpbmcgYDtgLCBlLmcuIGAmYW1wYC5cblx0XHRcdFx0Ly8gVGhpcyBpcyBvbmx5IGEgcGFyc2UgZXJyb3IgaWYgaXQgZ2V0cyBjb252ZXJ0ZWQgdG8gYCZgLCBvciBpZiBpdCBpc1xuXHRcdFx0XHQvLyBmb2xsb3dlZCBieSBgPWAgaW4gYW4gYXR0cmlidXRlIGNvbnRleHQuXG5cdFx0XHRcdHJlZmVyZW5jZSA9ICQyO1xuXHRcdFx0XHRuZXh0ID0gJDM7XG5cdFx0XHRcdGlmIChuZXh0ICYmIG9wdGlvbnMuaXNBdHRyaWJ1dGVWYWx1ZSkge1xuXHRcdFx0XHRcdGlmIChzdHJpY3QgJiYgbmV4dCA9PSAnPScpIHtcblx0XHRcdFx0XHRcdHBhcnNlRXJyb3IoJ2AmYCBkaWQgbm90IHN0YXJ0IGEgY2hhcmFjdGVyIHJlZmVyZW5jZScpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gJDA7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0aWYgKHN0cmljdCkge1xuXHRcdFx0XHRcdFx0cGFyc2VFcnJvcihcblx0XHRcdFx0XHRcdFx0J25hbWVkIGNoYXJhY3RlciByZWZlcmVuY2Ugd2FzIG5vdCB0ZXJtaW5hdGVkIGJ5IGEgc2VtaWNvbG9uJ1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Ly8gTm90ZTogdGhlcmUgaXMgbm8gbmVlZCB0byBjaGVjayBgaGFzKGRlY29kZU1hcExlZ2FjeSwgcmVmZXJlbmNlKWAuXG5cdFx0XHRcdFx0cmV0dXJuIGRlY29kZU1hcExlZ2FjeVtyZWZlcmVuY2VdICsgKG5leHQgfHwgJycpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICgkNCkge1xuXHRcdFx0XHQvLyBEZWNvZGUgZGVjaW1hbCBlc2NhcGVzLCBlLmcuIGAmIzExOTU1ODtgLlxuXHRcdFx0XHRkZWNEaWdpdHMgPSAkNDtcblx0XHRcdFx0c2VtaWNvbG9uID0gJDU7XG5cdFx0XHRcdGlmIChzdHJpY3QgJiYgIXNlbWljb2xvbikge1xuXHRcdFx0XHRcdHBhcnNlRXJyb3IoJ2NoYXJhY3RlciByZWZlcmVuY2Ugd2FzIG5vdCB0ZXJtaW5hdGVkIGJ5IGEgc2VtaWNvbG9uJyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29kZVBvaW50ID0gcGFyc2VJbnQoZGVjRGlnaXRzLCAxMCk7XG5cdFx0XHRcdHJldHVybiBjb2RlUG9pbnRUb1N5bWJvbChjb2RlUG9pbnQsIHN0cmljdCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICgkNikge1xuXHRcdFx0XHQvLyBEZWNvZGUgaGV4YWRlY2ltYWwgZXNjYXBlcywgZS5nLiBgJiN4MUQzMDY7YC5cblx0XHRcdFx0aGV4RGlnaXRzID0gJDY7XG5cdFx0XHRcdHNlbWljb2xvbiA9ICQ3O1xuXHRcdFx0XHRpZiAoc3RyaWN0ICYmICFzZW1pY29sb24pIHtcblx0XHRcdFx0XHRwYXJzZUVycm9yKCdjaGFyYWN0ZXIgcmVmZXJlbmNlIHdhcyBub3QgdGVybWluYXRlZCBieSBhIHNlbWljb2xvbicpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvZGVQb2ludCA9IHBhcnNlSW50KGhleERpZ2l0cywgMTYpO1xuXHRcdFx0XHRyZXR1cm4gY29kZVBvaW50VG9TeW1ib2woY29kZVBvaW50LCBzdHJpY3QpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiB3ZVx1MjAxOXJlIHN0aWxsIGhlcmUsIGBpZiAoJDcpYCBpcyBpbXBsaWVkOyBpdFx1MjAxOXMgYW4gYW1iaWd1b3VzXG5cdFx0XHQvLyBhbXBlcnNhbmQgZm9yIHN1cmUuIGh0dHBzOi8vbXRocy5iZS9ub3Rlcy9hbWJpZ3VvdXMtYW1wZXJzYW5kc1xuXHRcdFx0aWYgKHN0cmljdCkge1xuXHRcdFx0XHRwYXJzZUVycm9yKFxuXHRcdFx0XHRcdCduYW1lZCBjaGFyYWN0ZXIgcmVmZXJlbmNlIHdhcyBub3QgdGVybWluYXRlZCBieSBhIHNlbWljb2xvbidcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHRcdHJldHVybiAkMDtcblx0XHR9KTtcblx0fTtcblx0Ly8gRXhwb3NlIGRlZmF1bHQgb3B0aW9ucyAoc28gdGhleSBjYW4gYmUgb3ZlcnJpZGRlbiBnbG9iYWxseSkuXG5cdGRlY29kZS5vcHRpb25zID0ge1xuXHRcdCdpc0F0dHJpYnV0ZVZhbHVlJzogZmFsc2UsXG5cdFx0J3N0cmljdCc6IGZhbHNlXG5cdH07XG5cblx0dmFyIGVzY2FwZSA9IGZ1bmN0aW9uKHN0cmluZykge1xuXHRcdHJldHVybiBzdHJpbmcucmVwbGFjZShyZWdleEVzY2FwZSwgZnVuY3Rpb24oJDApIHtcblx0XHRcdC8vIE5vdGU6IHRoZXJlIGlzIG5vIG5lZWQgdG8gY2hlY2sgYGhhcyhlc2NhcGVNYXAsICQwKWAgaGVyZS5cblx0XHRcdHJldHVybiBlc2NhcGVNYXBbJDBdO1xuXHRcdH0pO1xuXHR9O1xuXG5cdC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5cdHZhciBoZSA9IHtcblx0XHQndmVyc2lvbic6ICcxLjIuMCcsXG5cdFx0J2VuY29kZSc6IGVuY29kZSxcblx0XHQnZGVjb2RlJzogZGVjb2RlLFxuXHRcdCdlc2NhcGUnOiBlc2NhcGUsXG5cdFx0J3VuZXNjYXBlJzogZGVjb2RlXG5cdH07XG5cblx0Ly8gU29tZSBBTUQgYnVpbGQgb3B0aW1pemVycywgbGlrZSByLmpzLCBjaGVjayBmb3Igc3BlY2lmaWMgY29uZGl0aW9uIHBhdHRlcm5zXG5cdC8vIGxpa2UgdGhlIGZvbGxvd2luZzpcblx0aWYgKFxuXHRcdHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJlxuXHRcdHR5cGVvZiBkZWZpbmUuYW1kID09ICdvYmplY3QnICYmXG5cdFx0ZGVmaW5lLmFtZFxuXHQpIHtcblx0XHRkZWZpbmUoZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gaGU7XG5cdFx0fSk7XG5cdH1cdGVsc2UgaWYgKGZyZWVFeHBvcnRzICYmICFmcmVlRXhwb3J0cy5ub2RlVHlwZSkge1xuXHRcdGlmIChmcmVlTW9kdWxlKSB7IC8vIGluIE5vZGUuanMsIGlvLmpzLCBvciBSaW5nb0pTIHYwLjguMCtcblx0XHRcdGZyZWVNb2R1bGUuZXhwb3J0cyA9IGhlO1xuXHRcdH0gZWxzZSB7IC8vIGluIE5hcndoYWwgb3IgUmluZ29KUyB2MC43LjAtXG5cdFx0XHRmb3IgKHZhciBrZXkgaW4gaGUpIHtcblx0XHRcdFx0aGFzKGhlLCBrZXkpICYmIChmcmVlRXhwb3J0c1trZXldID0gaGVba2V5XSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9IGVsc2UgeyAvLyBpbiBSaGlubyBvciBhIHdlYiBicm93c2VyXG5cdFx0cm9vdC5oZSA9IGhlO1xuXHR9XG5cbn0odGhpcykpO1xuIiwgIi8vIHJhbmRvbUNvbG9yIGJ5IERhdmlkIE1lcmZpZWxkIHVuZGVyIHRoZSBDQzAgbGljZW5zZVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2RhdmlkbWVyZmllbGQvcmFuZG9tQ29sb3IvXG5cbjsoZnVuY3Rpb24ocm9vdCwgZmFjdG9yeSkge1xuXG4gIC8vIFN1cHBvcnQgQ29tbW9uSlNcbiAgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgIHZhciByYW5kb21Db2xvciA9IGZhY3RvcnkoKTtcblxuICAgIC8vIFN1cHBvcnQgTm9kZUpTICYgQ29tcG9uZW50LCB3aGljaCBhbGxvdyBtb2R1bGUuZXhwb3J0cyB0byBiZSBhIGZ1bmN0aW9uXG4gICAgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZSAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgICAgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmFuZG9tQ29sb3I7XG4gICAgfVxuXG4gICAgLy8gU3VwcG9ydCBDb21tb25KUyAxLjEuMSBzcGVjXG4gICAgZXhwb3J0cy5yYW5kb21Db2xvciA9IHJhbmRvbUNvbG9yO1xuXG4gIC8vIFN1cHBvcnQgQU1EXG4gIH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtdLCBmYWN0b3J5KTtcblxuICAvLyBTdXBwb3J0IHZhbmlsbGEgc2NyaXB0IGxvYWRpbmdcbiAgfSBlbHNlIHtcbiAgICByb290LnJhbmRvbUNvbG9yID0gZmFjdG9yeSgpO1xuICB9XG5cbn0odGhpcywgZnVuY3Rpb24oKSB7XG5cbiAgLy8gU2VlZCB0byBnZXQgcmVwZWF0YWJsZSBjb2xvcnNcbiAgdmFyIHNlZWQgPSBudWxsO1xuXG4gIC8vIFNoYXJlZCBjb2xvciBkaWN0aW9uYXJ5XG4gIHZhciBjb2xvckRpY3Rpb25hcnkgPSB7fTtcblxuICAvLyBQb3B1bGF0ZSB0aGUgY29sb3IgZGljdGlvbmFyeVxuICBsb2FkQ29sb3JCb3VuZHMoKTtcblxuICAvLyBjaGVjayBpZiBhIHJhbmdlIGlzIHRha2VuXG4gIHZhciBjb2xvclJhbmdlcyA9IFtdO1xuXG4gIHZhciByYW5kb21Db2xvciA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAgIC8vIENoZWNrIGlmIHRoZXJlIGlzIGEgc2VlZCBhbmQgZW5zdXJlIGl0J3MgYW5cbiAgICAvLyBpbnRlZ2VyLiBPdGhlcndpc2UsIHJlc2V0IHRoZSBzZWVkIHZhbHVlLlxuICAgIGlmIChvcHRpb25zLnNlZWQgIT09IHVuZGVmaW5lZCAmJiBvcHRpb25zLnNlZWQgIT09IG51bGwgJiYgb3B0aW9ucy5zZWVkID09PSBwYXJzZUludChvcHRpb25zLnNlZWQsIDEwKSkge1xuICAgICAgc2VlZCA9IG9wdGlvbnMuc2VlZDtcblxuICAgIC8vIEEgc3RyaW5nIHdhcyBwYXNzZWQgYXMgYSBzZWVkXG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5zZWVkID09PSAnc3RyaW5nJykge1xuICAgICAgc2VlZCA9IHN0cmluZ1RvSW50ZWdlcihvcHRpb25zLnNlZWQpO1xuXG4gICAgLy8gU29tZXRoaW5nIHdhcyBwYXNzZWQgYXMgYSBzZWVkIGJ1dCBpdCB3YXNuJ3QgYW4gaW50ZWdlciBvciBzdHJpbmdcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMuc2VlZCAhPT0gdW5kZWZpbmVkICYmIG9wdGlvbnMuc2VlZCAhPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIHNlZWQgdmFsdWUgbXVzdCBiZSBhbiBpbnRlZ2VyIG9yIHN0cmluZycpO1xuXG4gICAgLy8gTm8gc2VlZCwgcmVzZXQgdGhlIHZhbHVlIG91dHNpZGUuXG4gICAgfSBlbHNlIHtcbiAgICAgIHNlZWQgPSBudWxsO1xuICAgIH1cblxuICAgIHZhciBILFMsQjtcblxuICAgIC8vIENoZWNrIGlmIHdlIG5lZWQgdG8gZ2VuZXJhdGUgbXVsdGlwbGUgY29sb3JzXG4gICAgaWYgKG9wdGlvbnMuY291bnQgIT09IG51bGwgJiYgb3B0aW9ucy5jb3VudCAhPT0gdW5kZWZpbmVkKSB7XG5cbiAgICAgIHZhciB0b3RhbENvbG9ycyA9IG9wdGlvbnMuY291bnQsXG4gICAgICAgICAgY29sb3JzID0gW107XG4gICAgICAvLyBWYWx1ZSBmYWxzZSBhdCBpbmRleCBpIG1lYW5zIHRoZSByYW5nZSBpIGlzIG5vdCB0YWtlbiB5ZXQuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9wdGlvbnMuY291bnQ7IGkrKykge1xuICAgICAgICBjb2xvclJhbmdlcy5wdXNoKGZhbHNlKVxuICAgICAgICB9XG4gICAgICBvcHRpb25zLmNvdW50ID0gbnVsbDtcblxuICAgICAgd2hpbGUgKHRvdGFsQ29sb3JzID4gY29sb3JzLmxlbmd0aCkge1xuXG4gICAgICAgIHZhciBjb2xvciA9IHJhbmRvbUNvbG9yKG9wdGlvbnMpO1xuXG4gICAgICAgIGlmIChzZWVkICE9PSBudWxsKSB7XG4gICAgICAgICAgb3B0aW9ucy5zZWVkID0gc2VlZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbG9ycy5wdXNoKGNvbG9yKTtcbiAgICAgIH1cblxuICAgICAgb3B0aW9ucy5jb3VudCA9IHRvdGFsQ29sb3JzO1xuXG4gICAgICByZXR1cm4gY29sb3JzO1xuICAgIH1cblxuICAgIC8vIEZpcnN0IHdlIHBpY2sgYSBodWUgKEgpXG4gICAgSCA9IHBpY2tIdWUob3B0aW9ucyk7XG5cbiAgICAvLyBUaGVuIHVzZSBIIHRvIGRldGVybWluZSBzYXR1cmF0aW9uIChTKVxuICAgIFMgPSBwaWNrU2F0dXJhdGlvbihILCBvcHRpb25zKTtcblxuICAgIC8vIFRoZW4gdXNlIFMgYW5kIEggdG8gZGV0ZXJtaW5lIGJyaWdodG5lc3MgKEIpLlxuICAgIEIgPSBwaWNrQnJpZ2h0bmVzcyhILCBTLCBvcHRpb25zKTtcblxuICAgIC8vIFRoZW4gd2UgcmV0dXJuIHRoZSBIU0IgY29sb3IgaW4gdGhlIGRlc2lyZWQgZm9ybWF0XG4gICAgcmV0dXJuIHNldEZvcm1hdChbSCxTLEJdLCBvcHRpb25zKTtcbiAgfTtcblxuICBmdW5jdGlvbiBwaWNrSHVlKG9wdGlvbnMpIHtcbiAgICBpZiAoY29sb3JSYW5nZXMubGVuZ3RoID4gMCkge1xuICAgICAgdmFyIGh1ZVJhbmdlID0gZ2V0UmVhbEh1ZVJhbmdlKG9wdGlvbnMuaHVlKVxuXG4gICAgICB2YXIgaHVlID0gcmFuZG9tV2l0aGluKGh1ZVJhbmdlKVxuXG4gICAgICAvL0VhY2ggb2YgY29sb3JSYW5nZXMubGVuZ3RoIHJhbmdlcyBoYXMgYSBsZW5ndGggZXF1YWwgYXBwcm94aW1hdGVsbHkgb25lIHN0ZXBcbiAgICAgIHZhciBzdGVwID0gKGh1ZVJhbmdlWzFdIC0gaHVlUmFuZ2VbMF0pIC8gY29sb3JSYW5nZXMubGVuZ3RoXG5cbiAgICAgIHZhciBqID0gcGFyc2VJbnQoKGh1ZSAtIGh1ZVJhbmdlWzBdKSAvIHN0ZXApXG5cbiAgICAgIC8vQ2hlY2sgaWYgdGhlIHJhbmdlIGogaXMgdGFrZW5cbiAgICAgIGlmIChjb2xvclJhbmdlc1tqXSA9PT0gdHJ1ZSkge1xuICAgICAgICBqID0gKGogKyAyKSAlIGNvbG9yUmFuZ2VzLmxlbmd0aFxuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIGNvbG9yUmFuZ2VzW2pdID0gdHJ1ZVxuICAgICAgICAgICB9XG5cbiAgICAgIHZhciBtaW4gPSAoaHVlUmFuZ2VbMF0gKyBqICogc3RlcCkgJSAzNTksXG4gICAgICAgICAgbWF4ID0gKGh1ZVJhbmdlWzBdICsgKGogKyAxKSAqIHN0ZXApICUgMzU5O1xuXG4gICAgICBodWVSYW5nZSA9IFttaW4sIG1heF1cblxuICAgICAgaHVlID0gcmFuZG9tV2l0aGluKGh1ZVJhbmdlKVxuXG4gICAgICBpZiAoaHVlIDwgMCkge2h1ZSA9IDM2MCArIGh1ZTt9XG4gICAgICByZXR1cm4gaHVlXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdmFyIGh1ZVJhbmdlID0gZ2V0SHVlUmFuZ2Uob3B0aW9ucy5odWUpXG5cbiAgICAgIGh1ZSA9IHJhbmRvbVdpdGhpbihodWVSYW5nZSk7XG4gICAgICAvLyBJbnN0ZWFkIG9mIHN0b3JpbmcgcmVkIGFzIHR3byBzZXBlcmF0ZSByYW5nZXMsXG4gICAgICAvLyB3ZSBncm91cCB0aGVtLCB1c2luZyBuZWdhdGl2ZSBudW1iZXJzXG4gICAgICBpZiAoaHVlIDwgMCkge1xuICAgICAgICBodWUgPSAzNjAgKyBodWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBodWU7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcGlja1NhdHVyYXRpb24gKGh1ZSwgb3B0aW9ucykge1xuXG4gICAgaWYgKG9wdGlvbnMuaHVlID09PSAnbW9ub2Nocm9tZScpIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLmx1bWlub3NpdHkgPT09ICdyYW5kb20nKSB7XG4gICAgICByZXR1cm4gcmFuZG9tV2l0aGluKFswLDEwMF0pO1xuICAgIH1cblxuICAgIHZhciBzYXR1cmF0aW9uUmFuZ2UgPSBnZXRTYXR1cmF0aW9uUmFuZ2UoaHVlKTtcblxuICAgIHZhciBzTWluID0gc2F0dXJhdGlvblJhbmdlWzBdLFxuICAgICAgICBzTWF4ID0gc2F0dXJhdGlvblJhbmdlWzFdO1xuXG4gICAgc3dpdGNoIChvcHRpb25zLmx1bWlub3NpdHkpIHtcblxuICAgICAgY2FzZSAnYnJpZ2h0JzpcbiAgICAgICAgc01pbiA9IDU1O1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnZGFyayc6XG4gICAgICAgIHNNaW4gPSBzTWF4IC0gMTA7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdsaWdodCc6XG4gICAgICAgIHNNYXggPSA1NTtcbiAgICAgICAgYnJlYWs7XG4gICB9XG5cbiAgICByZXR1cm4gcmFuZG9tV2l0aGluKFtzTWluLCBzTWF4XSk7XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIHBpY2tCcmlnaHRuZXNzIChILCBTLCBvcHRpb25zKSB7XG5cbiAgICB2YXIgYk1pbiA9IGdldE1pbmltdW1CcmlnaHRuZXNzKEgsIFMpLFxuICAgICAgICBiTWF4ID0gMTAwO1xuXG4gICAgc3dpdGNoIChvcHRpb25zLmx1bWlub3NpdHkpIHtcblxuICAgICAgY2FzZSAnZGFyayc6XG4gICAgICAgIGJNYXggPSBiTWluICsgMjA7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdsaWdodCc6XG4gICAgICAgIGJNaW4gPSAoYk1heCArIGJNaW4pLzI7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdyYW5kb20nOlxuICAgICAgICBiTWluID0gMDtcbiAgICAgICAgYk1heCA9IDEwMDtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJhbmRvbVdpdGhpbihbYk1pbiwgYk1heF0pO1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0Rm9ybWF0IChoc3YsIG9wdGlvbnMpIHtcblxuICAgIHN3aXRjaCAob3B0aW9ucy5mb3JtYXQpIHtcblxuICAgICAgY2FzZSAnaHN2QXJyYXknOlxuICAgICAgICByZXR1cm4gaHN2O1xuXG4gICAgICBjYXNlICdoc2xBcnJheSc6XG4gICAgICAgIHJldHVybiBIU1Z0b0hTTChoc3YpO1xuXG4gICAgICBjYXNlICdoc2wnOlxuICAgICAgICB2YXIgaHNsID0gSFNWdG9IU0woaHN2KTtcbiAgICAgICAgcmV0dXJuICdoc2woJytoc2xbMF0rJywgJytoc2xbMV0rJyUsICcraHNsWzJdKyclKSc7XG5cbiAgICAgIGNhc2UgJ2hzbGEnOlxuICAgICAgICB2YXIgaHNsQ29sb3IgPSBIU1Z0b0hTTChoc3YpO1xuICAgICAgICB2YXIgYWxwaGEgPSBvcHRpb25zLmFscGhhIHx8IE1hdGgucmFuZG9tKCk7XG4gICAgICAgIHJldHVybiAnaHNsYSgnK2hzbENvbG9yWzBdKycsICcraHNsQ29sb3JbMV0rJyUsICcraHNsQ29sb3JbMl0rJyUsICcgKyBhbHBoYSArICcpJztcblxuICAgICAgY2FzZSAncmdiQXJyYXknOlxuICAgICAgICByZXR1cm4gSFNWdG9SR0IoaHN2KTtcblxuICAgICAgY2FzZSAncmdiJzpcbiAgICAgICAgdmFyIHJnYiA9IEhTVnRvUkdCKGhzdik7XG4gICAgICAgIHJldHVybiAncmdiKCcgKyByZ2Iuam9pbignLCAnKSArICcpJztcblxuICAgICAgY2FzZSAncmdiYSc6XG4gICAgICAgIHZhciByZ2JDb2xvciA9IEhTVnRvUkdCKGhzdik7XG4gICAgICAgIHZhciBhbHBoYSA9IG9wdGlvbnMuYWxwaGEgfHwgTWF0aC5yYW5kb20oKTtcbiAgICAgICAgcmV0dXJuICdyZ2JhKCcgKyByZ2JDb2xvci5qb2luKCcsICcpICsgJywgJyArIGFscGhhICsgJyknO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gSFNWdG9IZXgoaHN2KTtcbiAgICB9XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE1pbmltdW1CcmlnaHRuZXNzKEgsIFMpIHtcblxuICAgIHZhciBsb3dlckJvdW5kcyA9IGdldENvbG9ySW5mbyhIKS5sb3dlckJvdW5kcztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbG93ZXJCb3VuZHMubGVuZ3RoIC0gMTsgaSsrKSB7XG5cbiAgICAgIHZhciBzMSA9IGxvd2VyQm91bmRzW2ldWzBdLFxuICAgICAgICAgIHYxID0gbG93ZXJCb3VuZHNbaV1bMV07XG5cbiAgICAgIHZhciBzMiA9IGxvd2VyQm91bmRzW2krMV1bMF0sXG4gICAgICAgICAgdjIgPSBsb3dlckJvdW5kc1tpKzFdWzFdO1xuXG4gICAgICBpZiAoUyA+PSBzMSAmJiBTIDw9IHMyKSB7XG5cbiAgICAgICAgIHZhciBtID0gKHYyIC0gdjEpLyhzMiAtIHMxKSxcbiAgICAgICAgICAgICBiID0gdjEgLSBtKnMxO1xuXG4gICAgICAgICByZXR1cm4gbSpTICsgYjtcbiAgICAgIH1cblxuICAgIH1cblxuICAgIHJldHVybiAwO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0SHVlUmFuZ2UgKGNvbG9ySW5wdXQpIHtcblxuICAgIGlmICh0eXBlb2YgcGFyc2VJbnQoY29sb3JJbnB1dCkgPT09ICdudW1iZXInKSB7XG5cbiAgICAgIHZhciBudW1iZXIgPSBwYXJzZUludChjb2xvcklucHV0KTtcblxuICAgICAgaWYgKG51bWJlciA8IDM2MCAmJiBudW1iZXIgPiAwKSB7XG4gICAgICAgIHJldHVybiBbbnVtYmVyLCBudW1iZXJdO1xuICAgICAgfVxuXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBjb2xvcklucHV0ID09PSAnc3RyaW5nJykge1xuXG4gICAgICBpZiAoY29sb3JEaWN0aW9uYXJ5W2NvbG9ySW5wdXRdKSB7XG4gICAgICAgIHZhciBjb2xvciA9IGNvbG9yRGljdGlvbmFyeVtjb2xvcklucHV0XTtcbiAgICAgICAgaWYgKGNvbG9yLmh1ZVJhbmdlKSB7cmV0dXJuIGNvbG9yLmh1ZVJhbmdlO31cbiAgICAgIH0gZWxzZSBpZiAoY29sb3JJbnB1dC5tYXRjaCgvXiM/KFswLTlBLUZdezN9fFswLTlBLUZdezZ9KSQvaSkpIHtcbiAgICAgICAgdmFyIGh1ZSA9IEhleFRvSFNCKGNvbG9ySW5wdXQpWzBdO1xuICAgICAgICByZXR1cm4gWyBodWUsIGh1ZSBdO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbMCwzNjBdO1xuXG4gIH1cblxuICBmdW5jdGlvbiBnZXRTYXR1cmF0aW9uUmFuZ2UgKGh1ZSkge1xuICAgIHJldHVybiBnZXRDb2xvckluZm8oaHVlKS5zYXR1cmF0aW9uUmFuZ2U7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDb2xvckluZm8gKGh1ZSkge1xuXG4gICAgLy8gTWFwcyByZWQgY29sb3JzIHRvIG1ha2UgcGlja2luZyBodWUgZWFzaWVyXG4gICAgaWYgKGh1ZSA+PSAzMzQgJiYgaHVlIDw9IDM2MCkge1xuICAgICAgaHVlLT0gMzYwO1xuICAgIH1cblxuICAgIGZvciAodmFyIGNvbG9yTmFtZSBpbiBjb2xvckRpY3Rpb25hcnkpIHtcbiAgICAgICB2YXIgY29sb3IgPSBjb2xvckRpY3Rpb25hcnlbY29sb3JOYW1lXTtcbiAgICAgICBpZiAoY29sb3IuaHVlUmFuZ2UgJiZcbiAgICAgICAgICAgaHVlID49IGNvbG9yLmh1ZVJhbmdlWzBdICYmXG4gICAgICAgICAgIGh1ZSA8PSBjb2xvci5odWVSYW5nZVsxXSkge1xuICAgICAgICAgIHJldHVybiBjb2xvckRpY3Rpb25hcnlbY29sb3JOYW1lXTtcbiAgICAgICB9XG4gICAgfSByZXR1cm4gJ0NvbG9yIG5vdCBmb3VuZCc7XG4gIH1cblxuICBmdW5jdGlvbiByYW5kb21XaXRoaW4gKHJhbmdlKSB7XG4gICAgaWYgKHNlZWQgPT09IG51bGwpIHtcbiAgICAgIC8vZ2VuZXJhdGUgcmFuZG9tIGV2ZW5seSBkZXN0aW5jdCBudW1iZXIgZnJvbSA6IGh0dHBzOi8vbWFydGluLmFua2VybC5jb20vMjAwOS8xMi8wOS9ob3ctdG8tY3JlYXRlLXJhbmRvbS1jb2xvcnMtcHJvZ3JhbW1hdGljYWxseS9cbiAgICAgIHZhciBnb2xkZW5fcmF0aW8gPSAwLjYxODAzMzk4ODc0OTg5NVxuICAgICAgdmFyIHI9TWF0aC5yYW5kb20oKVxuICAgICAgciArPSBnb2xkZW5fcmF0aW9cbiAgICAgIHIgJT0gMVxuICAgICAgcmV0dXJuIE1hdGguZmxvb3IocmFuZ2VbMF0gKyByKihyYW5nZVsxXSArIDEgLSByYW5nZVswXSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvL1NlZWRlZCByYW5kb20gYWxnb3JpdGhtIGZyb20gaHR0cDovL2luZGllZ2Ftci5jb20vZ2VuZXJhdGUtcmVwZWF0YWJsZS1yYW5kb20tbnVtYmVycy1pbi1qcy9cbiAgICAgIHZhciBtYXggPSByYW5nZVsxXSB8fCAxO1xuICAgICAgdmFyIG1pbiA9IHJhbmdlWzBdIHx8IDA7XG4gICAgICBzZWVkID0gKHNlZWQgKiA5MzAxICsgNDkyOTcpICUgMjMzMjgwO1xuICAgICAgdmFyIHJuZCA9IHNlZWQgLyAyMzMyODAuMDtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKG1pbiArIHJuZCAqIChtYXggLSBtaW4pKTtcbn1cbiAgfVxuXG4gIGZ1bmN0aW9uIEhTVnRvSGV4IChoc3Ype1xuXG4gICAgdmFyIHJnYiA9IEhTVnRvUkdCKGhzdik7XG5cbiAgICBmdW5jdGlvbiBjb21wb25lbnRUb0hleChjKSB7XG4gICAgICAgIHZhciBoZXggPSBjLnRvU3RyaW5nKDE2KTtcbiAgICAgICAgcmV0dXJuIGhleC5sZW5ndGggPT0gMSA/ICcwJyArIGhleCA6IGhleDtcbiAgICB9XG5cbiAgICB2YXIgaGV4ID0gJyMnICsgY29tcG9uZW50VG9IZXgocmdiWzBdKSArIGNvbXBvbmVudFRvSGV4KHJnYlsxXSkgKyBjb21wb25lbnRUb0hleChyZ2JbMl0pO1xuXG4gICAgcmV0dXJuIGhleDtcblxuICB9XG5cbiAgZnVuY3Rpb24gZGVmaW5lQ29sb3IgKG5hbWUsIGh1ZVJhbmdlLCBsb3dlckJvdW5kcykge1xuXG4gICAgdmFyIHNNaW4gPSBsb3dlckJvdW5kc1swXVswXSxcbiAgICAgICAgc01heCA9IGxvd2VyQm91bmRzW2xvd2VyQm91bmRzLmxlbmd0aCAtIDFdWzBdLFxuXG4gICAgICAgIGJNaW4gPSBsb3dlckJvdW5kc1tsb3dlckJvdW5kcy5sZW5ndGggLSAxXVsxXSxcbiAgICAgICAgYk1heCA9IGxvd2VyQm91bmRzWzBdWzFdO1xuXG4gICAgY29sb3JEaWN0aW9uYXJ5W25hbWVdID0ge1xuICAgICAgaHVlUmFuZ2U6IGh1ZVJhbmdlLFxuICAgICAgbG93ZXJCb3VuZHM6IGxvd2VyQm91bmRzLFxuICAgICAgc2F0dXJhdGlvblJhbmdlOiBbc01pbiwgc01heF0sXG4gICAgICBicmlnaHRuZXNzUmFuZ2U6IFtiTWluLCBiTWF4XVxuICAgIH07XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRDb2xvckJvdW5kcyAoKSB7XG5cbiAgICBkZWZpbmVDb2xvcihcbiAgICAgICdtb25vY2hyb21lJyxcbiAgICAgIG51bGwsXG4gICAgICBbWzAsMF0sWzEwMCwwXV1cbiAgICApO1xuXG4gICAgZGVmaW5lQ29sb3IoXG4gICAgICAncmVkJyxcbiAgICAgIFstMjYsMThdLFxuICAgICAgW1syMCwxMDBdLFszMCw5Ml0sWzQwLDg5XSxbNTAsODVdLFs2MCw3OF0sWzcwLDcwXSxbODAsNjBdLFs5MCw1NV0sWzEwMCw1MF1dXG4gICAgKTtcblxuICAgIGRlZmluZUNvbG9yKFxuICAgICAgJ29yYW5nZScsXG4gICAgICBbMTgsNDZdLFxuICAgICAgW1syMCwxMDBdLFszMCw5M10sWzQwLDg4XSxbNTAsODZdLFs2MCw4NV0sWzcwLDcwXSxbMTAwLDcwXV1cbiAgICApO1xuXG4gICAgZGVmaW5lQ29sb3IoXG4gICAgICAneWVsbG93JyxcbiAgICAgIFs0Niw2Ml0sXG4gICAgICBbWzI1LDEwMF0sWzQwLDk0XSxbNTAsODldLFs2MCw4Nl0sWzcwLDg0XSxbODAsODJdLFs5MCw4MF0sWzEwMCw3NV1dXG4gICAgKTtcblxuICAgIGRlZmluZUNvbG9yKFxuICAgICAgJ2dyZWVuJyxcbiAgICAgIFs2MiwxNzhdLFxuICAgICAgW1szMCwxMDBdLFs0MCw5MF0sWzUwLDg1XSxbNjAsODFdLFs3MCw3NF0sWzgwLDY0XSxbOTAsNTBdLFsxMDAsNDBdXVxuICAgICk7XG5cbiAgICBkZWZpbmVDb2xvcihcbiAgICAgICdibHVlJyxcbiAgICAgIFsxNzgsIDI1N10sXG4gICAgICBbWzIwLDEwMF0sWzMwLDg2XSxbNDAsODBdLFs1MCw3NF0sWzYwLDYwXSxbNzAsNTJdLFs4MCw0NF0sWzkwLDM5XSxbMTAwLDM1XV1cbiAgICApO1xuXG4gICAgZGVmaW5lQ29sb3IoXG4gICAgICAncHVycGxlJyxcbiAgICAgIFsyNTcsIDI4Ml0sXG4gICAgICBbWzIwLDEwMF0sWzMwLDg3XSxbNDAsNzldLFs1MCw3MF0sWzYwLDY1XSxbNzAsNTldLFs4MCw1Ml0sWzkwLDQ1XSxbMTAwLDQyXV1cbiAgICApO1xuXG4gICAgZGVmaW5lQ29sb3IoXG4gICAgICAncGluaycsXG4gICAgICBbMjgyLCAzMzRdLFxuICAgICAgW1syMCwxMDBdLFszMCw5MF0sWzQwLDg2XSxbNjAsODRdLFs4MCw4MF0sWzkwLDc1XSxbMTAwLDczXV1cbiAgICApO1xuXG4gIH1cblxuICBmdW5jdGlvbiBIU1Z0b1JHQiAoaHN2KSB7XG5cbiAgICAvLyB0aGlzIGRvZXNuJ3Qgd29yayBmb3IgdGhlIHZhbHVlcyBvZiAwIGFuZCAzNjBcbiAgICAvLyBoZXJlJ3MgdGhlIGhhY2t5IGZpeFxuICAgIHZhciBoID0gaHN2WzBdO1xuICAgIGlmIChoID09PSAwKSB7aCA9IDE7fVxuICAgIGlmIChoID09PSAzNjApIHtoID0gMzU5O31cblxuICAgIC8vIFJlYmFzZSB0aGUgaCxzLHYgdmFsdWVzXG4gICAgaCA9IGgvMzYwO1xuICAgIHZhciBzID0gaHN2WzFdLzEwMCxcbiAgICAgICAgdiA9IGhzdlsyXS8xMDA7XG5cbiAgICB2YXIgaF9pID0gTWF0aC5mbG9vcihoKjYpLFxuICAgICAgZiA9IGggKiA2IC0gaF9pLFxuICAgICAgcCA9IHYgKiAoMSAtIHMpLFxuICAgICAgcSA9IHYgKiAoMSAtIGYqcyksXG4gICAgICB0ID0gdiAqICgxIC0gKDEgLSBmKSpzKSxcbiAgICAgIHIgPSAyNTYsXG4gICAgICBnID0gMjU2LFxuICAgICAgYiA9IDI1NjtcblxuICAgIHN3aXRjaChoX2kpIHtcbiAgICAgIGNhc2UgMDogciA9IHY7IGcgPSB0OyBiID0gcDsgIGJyZWFrO1xuICAgICAgY2FzZSAxOiByID0gcTsgZyA9IHY7IGIgPSBwOyAgYnJlYWs7XG4gICAgICBjYXNlIDI6IHIgPSBwOyBnID0gdjsgYiA9IHQ7ICBicmVhaztcbiAgICAgIGNhc2UgMzogciA9IHA7IGcgPSBxOyBiID0gdjsgIGJyZWFrO1xuICAgICAgY2FzZSA0OiByID0gdDsgZyA9IHA7IGIgPSB2OyAgYnJlYWs7XG4gICAgICBjYXNlIDU6IHIgPSB2OyBnID0gcDsgYiA9IHE7ICBicmVhaztcbiAgICB9XG5cbiAgICB2YXIgcmVzdWx0ID0gW01hdGguZmxvb3IocioyNTUpLCBNYXRoLmZsb29yKGcqMjU1KSwgTWF0aC5mbG9vcihiKjI1NSldO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiBIZXhUb0hTQiAoaGV4KSB7XG4gICAgaGV4ID0gaGV4LnJlcGxhY2UoL14jLywgJycpO1xuICAgIGhleCA9IGhleC5sZW5ndGggPT09IDMgPyBoZXgucmVwbGFjZSgvKC4pL2csICckMSQxJykgOiBoZXg7XG5cbiAgICB2YXIgcmVkID0gcGFyc2VJbnQoaGV4LnN1YnN0cigwLCAyKSwgMTYpIC8gMjU1LFxuICAgICAgICAgIGdyZWVuID0gcGFyc2VJbnQoaGV4LnN1YnN0cigyLCAyKSwgMTYpIC8gMjU1LFxuICAgICAgICAgIGJsdWUgPSBwYXJzZUludChoZXguc3Vic3RyKDQsIDIpLCAxNikgLyAyNTU7XG5cbiAgICB2YXIgY01heCA9IE1hdGgubWF4KHJlZCwgZ3JlZW4sIGJsdWUpLFxuICAgICAgICAgIGRlbHRhID0gY01heCAtIE1hdGgubWluKHJlZCwgZ3JlZW4sIGJsdWUpLFxuICAgICAgICAgIHNhdHVyYXRpb24gPSBjTWF4ID8gKGRlbHRhIC8gY01heCkgOiAwO1xuXG4gICAgc3dpdGNoIChjTWF4KSB7XG4gICAgICBjYXNlIHJlZDogcmV0dXJuIFsgNjAgKiAoKChncmVlbiAtIGJsdWUpIC8gZGVsdGEpICUgNikgfHwgMCwgc2F0dXJhdGlvbiwgY01heCBdO1xuICAgICAgY2FzZSBncmVlbjogcmV0dXJuIFsgNjAgKiAoKChibHVlIC0gcmVkKSAvIGRlbHRhKSArIDIpIHx8IDAsIHNhdHVyYXRpb24sIGNNYXggXTtcbiAgICAgIGNhc2UgYmx1ZTogcmV0dXJuIFsgNjAgKiAoKChyZWQgLSBncmVlbikgLyBkZWx0YSkgKyA0KSB8fCAwLCBzYXR1cmF0aW9uLCBjTWF4IF07XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gSFNWdG9IU0wgKGhzdikge1xuICAgIHZhciBoID0gaHN2WzBdLFxuICAgICAgcyA9IGhzdlsxXS8xMDAsXG4gICAgICB2ID0gaHN2WzJdLzEwMCxcbiAgICAgIGsgPSAoMi1zKSp2O1xuXG4gICAgcmV0dXJuIFtcbiAgICAgIGgsXG4gICAgICBNYXRoLnJvdW5kKHMqdiAvIChrPDEgPyBrIDogMi1rKSAqIDEwMDAwKSAvIDEwMCxcbiAgICAgIGsvMiAqIDEwMFxuICAgIF07XG4gIH1cblxuICBmdW5jdGlvbiBzdHJpbmdUb0ludGVnZXIgKHN0cmluZykge1xuICAgIHZhciB0b3RhbCA9IDBcbiAgICBmb3IgKHZhciBpID0gMDsgaSAhPT0gc3RyaW5nLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodG90YWwgPj0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpIGJyZWFrO1xuICAgICAgdG90YWwgKz0gc3RyaW5nLmNoYXJDb2RlQXQoaSlcbiAgICB9XG4gICAgcmV0dXJuIHRvdGFsXG4gIH1cblxuICAvLyBnZXQgVGhlIHJhbmdlIG9mIGdpdmVuIGh1ZSB3aGVuIG9wdGlvbnMuY291bnQhPTBcbiAgZnVuY3Rpb24gZ2V0UmVhbEh1ZVJhbmdlKGNvbG9ySHVlKVxuICB7IGlmICghaXNOYU4oY29sb3JIdWUpKSB7XG4gICAgdmFyIG51bWJlciA9IHBhcnNlSW50KGNvbG9ySHVlKTtcblxuICAgIGlmIChudW1iZXIgPCAzNjAgJiYgbnVtYmVyID4gMCkge1xuICAgICAgcmV0dXJuIGdldENvbG9ySW5mbyhjb2xvckh1ZSkuaHVlUmFuZ2VcbiAgICB9XG4gIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgY29sb3JIdWUgPT09ICdzdHJpbmcnKSB7XG5cbiAgICAgIGlmIChjb2xvckRpY3Rpb25hcnlbY29sb3JIdWVdKSB7XG4gICAgICAgIHZhciBjb2xvciA9IGNvbG9yRGljdGlvbmFyeVtjb2xvckh1ZV07XG5cbiAgICAgICAgaWYgKGNvbG9yLmh1ZVJhbmdlKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbG9yLmh1ZVJhbmdlXG4gICAgICAgfVxuICAgIH0gZWxzZSBpZiAoY29sb3JIdWUubWF0Y2goL14jPyhbMC05QS1GXXszfXxbMC05QS1GXXs2fSkkL2kpKSB7XG4gICAgICAgIHZhciBodWUgPSBIZXhUb0hTQihjb2xvckh1ZSlbMF1cbiAgICAgICAgcmV0dXJuIGdldENvbG9ySW5mbyhodWUpLmh1ZVJhbmdlXG4gICAgfVxuICB9XG5cbiAgICByZXR1cm4gWzAsMzYwXVxufVxuICByZXR1cm4gcmFuZG9tQ29sb3I7XG59KSk7XG4iLCAiaW1wb3J0IHsgTm90aWNlLCBQbGF0Zm9ybSwgUGx1Z2luLCBXb3Jrc3BhY2VMZWFmIH0gZnJvbSBcIm9ic2lkaWFuXCI7XG5cbmltcG9ydCBGYW50YXN5Q2FsZW5kYXJTZXR0aW5ncyBmcm9tIFwiLi9zZXR0aW5ncy9zZXR0aW5nc1wiO1xuXG5pbXBvcnQgdHlwZSB7IENhbGVuZGFyLCBGYW50YXN5Q2FsZW5kYXJEYXRhIH0gZnJvbSBcIi4vQHR5cGVzXCI7XG5cbmltcG9ydCBGYW50YXN5Q2FsZW5kYXJWaWV3LCB7XG4gICAgVklFV19UWVBFLFxuICAgIEZVTExfVklFV1xuICAgIC8qIEZ1bGxDYWxlbmRhclZpZXcgKi9cbn0gZnJvbSBcIi4vdmlldy92aWV3XCI7XG5cbmltcG9ydCB7IENhbGVuZGFyRXZlbnRUcmVlLCBXYXRjaGVyIH0gZnJvbSBcIi4vd2F0Y2hlci93YXRjaGVyXCI7XG5pbXBvcnQgeyBBUEkgfSBmcm9tIFwiLi9hcGkvYXBpXCI7XG5pbXBvcnQgY29weSBmcm9tIFwiZmFzdC1jb3B5XCI7XG5cbmRlY2xhcmUgbW9kdWxlIFwib2JzaWRpYW5cIiB7XG4gICAgaW50ZXJmYWNlIFdvcmtzcGFjZSB7XG4gICAgICAgIG9uKG5hbWU6IFwiZmFudGFzeS1jYWxlbmRhcnMtdXBkYXRlZFwiLCBjYWxsYmFjazogKCkgPT4gYW55KTogRXZlbnRSZWY7XG4gICAgICAgIG9uKFxuICAgICAgICAgICAgbmFtZTogXCJmYW50YXN5LWNhbGVuZGFycy1ldmVudC11cGRhdGVcIixcbiAgICAgICAgICAgIGNhbGxiYWNrOiAodHJlZTogQ2FsZW5kYXJFdmVudFRyZWUpID0+IGFueVxuICAgICAgICApOiBFdmVudFJlZjtcbiAgICAgICAgb24oXG4gICAgICAgICAgICBuYW1lOiBcImZhbnRhc3ktY2FsZW5kYXItc2V0dGluZ3MtY2hhbmdlXCIsXG4gICAgICAgICAgICBjYWxsYmFjazogKCkgPT4gYW55XG4gICAgICAgICk6IEV2ZW50UmVmO1xuICAgICAgICB0cmlnZ2VyKG5hbWU6IFwiZmFudGFzeS1jYWxlbmRhcnMtdXBkYXRlZFwiKTogdm9pZDtcbiAgICAgICAgdHJpZ2dlcihuYW1lOiBcImZhbnRhc3ktY2FsZW5kYXItc2V0dGluZ3MtY2hhbmdlXCIpOiB2b2lkO1xuICAgICAgICB0cmlnZ2VyKFxuICAgICAgICAgICAgbmFtZTogXCJmYW50YXN5LWNhbGVuZGFycy1ldmVudC11cGRhdGVcIixcbiAgICAgICAgICAgIHRyZWU6IENhbGVuZGFyRXZlbnRUcmVlXG4gICAgICAgICk6IHZvaWQ7XG4gICAgICAgIHRyaWdnZXIoXG4gICAgICAgICAgICBuYW1lOiBcImxpbmstaG92ZXJcIixcbiAgICAgICAgICAgIHBvcG92ZXI6IGFueSwgLy9ob3ZlciBwb3BvdmVyLCBidXQgZG9uJ3QgbmVlZFxuICAgICAgICAgICAgdGFyZ2V0OiBIVE1MRWxlbWVudCwgLy90YXJnZXRFbFxuICAgICAgICAgICAgbm90ZTogc3RyaW5nLCAvL2xpbmtUZXh0XG4gICAgICAgICAgICBzb3VyY2U6IHN0cmluZyAvL3NvdXJjZVxuICAgICAgICApOiB2b2lkO1xuICAgICAgICB0cmlnZ2VyKG5hbWU6IFwiZmFudGFzeS1jYWxlbmRhcnMtc2V0dGluZ3MtbG9hZGVkXCIpOiB2b2lkO1xuICAgICAgICBvbihcbiAgICAgICAgICAgIG5hbWU6IFwiZmFudGFzeS1jYWxlbmRhcnMtc2V0dGluZ3MtbG9hZGVkXCIsXG4gICAgICAgICAgICBjYWxsYmFjazogKCkgPT4gYW55XG4gICAgICAgICk6IEV2ZW50UmVmO1xuICAgIH1cbiAgICBpbnRlcmZhY2UgQXBwIHtcbiAgICAgICAgcGx1Z2luczoge1xuICAgICAgICAgICAgZ2V0UGx1Z2luKHBsdWdpbjogXCJvYnNpZGlhbi10aW1lbGluZXNcIik6IHtcbiAgICAgICAgICAgICAgICBzZXR0aW5nczoge1xuICAgICAgICAgICAgICAgICAgICB0aW1lbGluZVRhZzogc3RyaW5nO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IE1PRElGSUVSX0tFWSA9IFBsYXRmb3JtLmlzTWFjT1MgPyBcIk1ldGFcIiA6IFwiQ29udHJvbFwiO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9DQUxFTkRBUjogQ2FsZW5kYXIgPSB7XG4gICAgbmFtZTogbnVsbCxcbiAgICBkZXNjcmlwdGlvbjogbnVsbCxcbiAgICBpZDogbnVsbCxcbiAgICBzdGF0aWM6IHtcbiAgICAgICAgaW5jcmVtZW50RGF5OiBmYWxzZSxcbiAgICAgICAgZmlyc3RXZWVrRGF5OiBudWxsLFxuICAgICAgICBvdmVyZmxvdzogdHJ1ZSxcbiAgICAgICAgd2Vla2RheXM6IFtdLFxuICAgICAgICBtb250aHM6IFtdLFxuXG4gICAgICAgIG1vb25zOiBbXSxcbiAgICAgICAgZGlzcGxheU1vb25zOiB0cnVlLFxuICAgICAgICBkaXNwbGF5RGF5TnVtYmVyOiBmYWxzZSxcbiAgICAgICAgbGVhcERheXM6IFtdLFxuICAgICAgICBlcmFzOiBbXVxuICAgIH0sXG4gICAgY3VycmVudDoge1xuICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICBtb250aDogbnVsbCxcbiAgICAgICAgZGF5OiBudWxsXG4gICAgfSxcbiAgICBldmVudHM6IFtdLFxuICAgIGNhdGVnb3JpZXM6IFtdXG59O1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9EQVRBOiBGYW50YXN5Q2FsZW5kYXJEYXRhID0ge1xuICAgIGNhbGVuZGFyczogW10sXG4gICAgY3VycmVudENhbGVuZGFyOiBudWxsLFxuICAgIGRlZmF1bHRDYWxlbmRhcjogbnVsbCxcbiAgICBldmVudFByZXZpZXc6IGZhbHNlLFxuICAgIGNvbmZpZ0RpcmVjdG9yeTogbnVsbCxcbiAgICBwYXRoOiBcIi9cIixcbiAgICBwYXJzZURhdGVzOiBmYWxzZSxcbiAgICBkYXRlRm9ybWF0OiBcIllZWVktTU0tRERcIixcbiAgICBkYWlseU5vdGVzOiBmYWxzZSxcbiAgICB2ZXJzaW9uOiB7XG4gICAgICAgIG1ham9yOiBudWxsLFxuICAgICAgICBtaW5vcjogbnVsbCxcbiAgICAgICAgcGF0Y2g6IG51bGxcbiAgICB9LFxuICAgIHN1cHBvcnRUaW1lbGluZXM6IGZhbHNlLFxuICAgIHRpbWVsaW5lVGFnOiBcIiN0aW1lbGluZVwiLFxuICAgIHN5bmNUaW1lbGluZXM6IHRydWUsXG4gICAgYXV0b1BhcnNlOiB0cnVlLFxuICAgIHNldHRpbmdzVG9nZ2xlU3RhdGU6IHtcbiAgICAgICAgY2FsZW5kYXJzOiBmYWxzZSxcbiAgICAgICAgZXZlbnRzOiBmYWxzZVxuICAgIH0sXG4gICAgZXhpdFdpdGhvdXRTYXZpbmc6IGZhbHNlXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGYW50YXN5Q2FsZW5kYXIgZXh0ZW5kcyBQbHVnaW4ge1xuICAgIGFwaSA9IG5ldyBBUEkodGhpcyk7XG4gICAgc2V0dGluZ3NMb2FkZWQ6IGJvb2xlYW47XG4gICAgYXN5bmMgYWRkTmV3Q2FsZW5kYXIoY2FsZW5kYXI6IENhbGVuZGFyKSB7XG4gICAgICAgIHRoaXMuZGF0YS5jYWxlbmRhcnMucHVzaCh7IC4uLmNhbGVuZGFyIH0pO1xuICAgICAgICBpZiAoIXRoaXMuZGF0YS5kZWZhdWx0Q2FsZW5kYXIpIHtcbiAgICAgICAgICAgIHRoaXMuZGF0YS5kZWZhdWx0Q2FsZW5kYXIgPSBjYWxlbmRhci5pZDtcbiAgICAgICAgfVxuICAgICAgICBhd2FpdCB0aGlzLnNhdmVDYWxlbmRhcigpO1xuICAgICAgICAvKiB0aGlzLndhdGNoZXIucmVnaXN0ZXJDYWxlbmRhcihjYWxlbmRhcik7ICovXG4gICAgfVxuICAgIGRhdGE6IEZhbnRhc3lDYWxlbmRhckRhdGE7XG4gICAgd2F0Y2hlciA9IG5ldyBXYXRjaGVyKHRoaXMpO1xuICAgIGdldCBjdXJyZW50Q2FsZW5kYXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGEuY2FsZW5kYXJzLmZpbmQoXG4gICAgICAgICAgICAoYykgPT4gYy5pZCA9PSB0aGlzLmRhdGEuY3VycmVudENhbGVuZGFyXG4gICAgICAgICk7XG4gICAgfVxuICAgIGdldCBjYW5Vc2VEYWlseU5vdGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYWlseU5vdGVzLl9sb2FkZWQ7XG4gICAgfVxuICAgIGdldCBkYWlseU5vdGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hcHAuaW50ZXJuYWxQbHVnaW5zLmdldFBsdWdpbkJ5SWQoXCJkYWlseS1ub3Rlc1wiKTtcbiAgICB9XG4gICAgZ2V0IGNhblVzZVRpbWVsaW5lcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXBwLnBsdWdpbnMuZ2V0UGx1Z2luKFwib2JzaWRpYW4tdGltZWxpbmVzXCIpICE9IG51bGw7XG4gICAgfVxuICAgIGdldCBzeW5jVGltZWxpbmVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhLnN5bmNUaW1lbGluZXMgJiYgdGhpcy5jYW5Vc2VUaW1lbGluZXM7XG4gICAgfVxuICAgIGdldCB0aW1lbGluZVRhZygpIHtcbiAgICAgICAgaWYgKHRoaXMuc3luY1RpbWVsaW5lcykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXBwLnBsdWdpbnMuZ2V0UGx1Z2luKFwib2JzaWRpYW4tdGltZWxpbmVzXCIpLnNldHRpbmdzXG4gICAgICAgICAgICAgICAgLnRpbWVsaW5lVGFnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS50aW1lbGluZVRhZztcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgZm9ybWF0KCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgKHRoaXMuZGF0YS5kYWlseU5vdGVzICYmIHRoaXMuY2FuVXNlRGFpbHlOb3Rlc1xuICAgICAgICAgICAgICAgID8gdGhpcy5kYWlseU5vdGVzLmluc3RhbmNlLm9wdGlvbnMuZm9ybWF0XG4gICAgICAgICAgICAgICAgOiB0aGlzLmRhdGEuZGF0ZUZvcm1hdCkgPz8gXCJZWVlZLU1NLUREXCJcbiAgICAgICAgKTtcbiAgICB9XG4gICAgZ2V0IGRlZmF1bHRDYWxlbmRhcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIHRoaXMuZGF0YS5jYWxlbmRhcnMuZmluZChcbiAgICAgICAgICAgICAgICAoYykgPT4gYy5pZCA9PSB0aGlzLmRhdGEuZGVmYXVsdENhbGVuZGFyXG4gICAgICAgICAgICApID8/IHRoaXMuZGF0YS5jYWxlbmRhcnNbMF1cbiAgICAgICAgKTtcbiAgICB9XG4gICAgZ2V0IHZpZXcoKSB7XG4gICAgICAgIGNvbnN0IGxlYXZlcyA9IHRoaXMuYXBwLndvcmtzcGFjZS5nZXRMZWF2ZXNPZlR5cGUoVklFV19UWVBFKTtcbiAgICAgICAgY29uc3QgbGVhZiA9IGxlYXZlcy5sZW5ndGggPyBsZWF2ZXNbMF0gOiBudWxsO1xuICAgICAgICBpZiAobGVhZiAmJiBsZWFmLnZpZXcgJiYgbGVhZi52aWV3IGluc3RhbmNlb2YgRmFudGFzeUNhbGVuZGFyVmlldylcbiAgICAgICAgICAgIHJldHVybiBsZWFmLnZpZXc7XG4gICAgfVxuICAgIGdldCBmdWxsKCkge1xuICAgICAgICBjb25zdCBsZWF2ZXMgPSB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0TGVhdmVzT2ZUeXBlKEZVTExfVklFVyk7XG4gICAgICAgIGNvbnN0IGxlYWYgPSBsZWF2ZXMubGVuZ3RoID8gbGVhdmVzWzBdIDogbnVsbDtcbiAgICAgICAgaWYgKGxlYWYgJiYgbGVhZi52aWV3ICYmIGxlYWYudmlldyBpbnN0YW5jZW9mIEZhbnRhc3lDYWxlbmRhclZpZXcpXG4gICAgICAgICAgICByZXR1cm4gbGVhZi52aWV3O1xuICAgIH1cbiAgICBhc3luYyBvbmxvYWQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiTG9hZGluZyBGYW50YXN5IENhbGVuZGFycyB2XCIgKyB0aGlzLm1hbmlmZXN0LnZlcnNpb24pO1xuXG4gICAgICAgIHRoaXMucmVnaXN0ZXJWaWV3KFxuICAgICAgICAgICAgVklFV19UWVBFLFxuICAgICAgICAgICAgKGxlYWY6IFdvcmtzcGFjZUxlYWYpID0+IG5ldyBGYW50YXN5Q2FsZW5kYXJWaWV3KHRoaXMsIGxlYWYpXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJWaWV3KEZVTExfVklFVywgKGxlYWY6IFdvcmtzcGFjZUxlYWYpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRmFudGFzeUNhbGVuZGFyVmlldyh0aGlzLCBsZWFmLCB7IGZ1bGw6IHRydWUgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmFwcC53b3Jrc3BhY2Uub25MYXlvdXRSZWFkeShhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmxvYWRTZXR0aW5ncygpO1xuXG4gICAgICAgICAgICB0aGlzLndhdGNoZXIubG9hZCgpO1xuXG4gICAgICAgICAgICB0aGlzLmFkZENvbW1hbmRzKCk7XG5cbiAgICAgICAgICAgIHRoaXMuYWRkU2V0dGluZ1RhYihuZXcgRmFudGFzeUNhbGVuZGFyU2V0dGluZ3ModGhpcykpO1xuXG4gICAgICAgICAgICB0aGlzLmFkZENhbGVuZGFyVmlldyh0cnVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYWRkUmliYm9uSWNvbihWSUVXX1RZUEUsIFwiT3BlbiBMYXJnZSBGYW50YXN5IENhbGVuZGFyXCIsIChldnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuYXBwLndvcmtzcGFjZVxuICAgICAgICAgICAgICAgIC5nZXRMZWFmKGV2dC5nZXRNb2RpZmllclN0YXRlKE1PRElGSUVSX0tFWSkpXG4gICAgICAgICAgICAgICAgLnNldFZpZXdTdGF0ZSh7IHR5cGU6IEZVTExfVklFVyB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgYXN5bmMgb251bmxvYWQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiVW5sb2FkaW5nIEZhbnRhc3kgQ2FsZW5kYXJzIHZcIiArIHRoaXMubWFuaWZlc3QudmVyc2lvbik7XG4gICAgICAgIHRoaXMuYXBwLndvcmtzcGFjZVxuICAgICAgICAgICAgLmdldExlYXZlc09mVHlwZShWSUVXX1RZUEUpXG4gICAgICAgICAgICAuZm9yRWFjaCgobGVhZikgPT4gbGVhZi5kZXRhY2goKSk7XG4gICAgICAgIHRoaXMuYXBwLndvcmtzcGFjZVxuICAgICAgICAgICAgLmdldExlYXZlc09mVHlwZShGVUxMX1ZJRVcpXG4gICAgICAgICAgICAuZm9yRWFjaCgobGVhZikgPT4gbGVhZi5kZXRhY2goKSk7XG4gICAgICAgIHRoaXMud2F0Y2hlci51bmxvYWQoKTtcbiAgICB9XG5cbiAgICBhZGRDb21tYW5kcygpIHtcbiAgICAgICAgdGhpcy5hZGRDb21tYW5kKHtcbiAgICAgICAgICAgIGlkOiBcIm9wZW4tZmFudGFzeS1jYWxlbmRhclwiLFxuICAgICAgICAgICAgbmFtZTogXCJPcGVuIEZhbnRhc3kgQ2FsZW5kYXJcIixcbiAgICAgICAgICAgIGNhbGxiYWNrOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRDYWxlbmRhclZpZXcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5hZGRDb21tYW5kKHtcbiAgICAgICAgICAgIGlkOiBcIm9wZW4tYmlnLWZhbnRhc3ktY2FsZW5kYXJcIixcbiAgICAgICAgICAgIG5hbWU6IFwiT3BlbiBMYXJnZSBGYW50YXN5IENhbGVuZGFyXCIsXG4gICAgICAgICAgICBjYWxsYmFjazogKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkRnVsbENhbGVuZGFyVmlldygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmFkZENvbW1hbmQoe1xuICAgICAgICAgICAgaWQ6IFwidG9nZ2xlLW1vb25zXCIsXG4gICAgICAgICAgICBuYW1lOiBcIlRvZ2dsZSBNb29uc1wiLFxuICAgICAgICAgICAgY2hlY2tDYWxsYmFjazogKGNoZWNraW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3Qgdmlld3MgPSB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0TGVhdmVzT2ZUeXBlKFZJRVdfVFlQRSk7XG4gICAgICAgICAgICAgICAgaWYgKHZpZXdzICYmIHZpZXdzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWNoZWNraW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAodmlld3NbMF0udmlldyBhcyBGYW50YXN5Q2FsZW5kYXJWaWV3KS50b2dnbGVNb29ucygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYWRkQ29tbWFuZCh7XG4gICAgICAgICAgICBpZDogXCJ2aWV3LWRhdGVcIixcbiAgICAgICAgICAgIG5hbWU6IFwiVmlldyBEYXRlXCIsXG4gICAgICAgICAgICBjaGVja0NhbGxiYWNrOiAoY2hlY2tpbmcpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2aWV3cyA9IHRoaXMuYXBwLndvcmtzcGFjZS5nZXRMZWF2ZXNPZlR5cGUoVklFV19UWVBFKTtcbiAgICAgICAgICAgICAgICBpZiAodmlld3MgJiYgdmlld3MubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghY2hlY2tpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICh2aWV3c1swXS52aWV3IGFzIEZhbnRhc3lDYWxlbmRhclZpZXcpLm9wZW5EYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hZGRDb21tYW5kKHtcbiAgICAgICAgICAgIGlkOiBcInZpZXctZGF0ZVwiLFxuICAgICAgICAgICAgbmFtZTogXCJWaWV3IE5vdGUgRXZlbnRcIixcbiAgICAgICAgICAgIGNoZWNrQ2FsbGJhY2s6IChjaGVja2luZykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZpZXdzID0gdGhpcy5hcHAud29ya3NwYWNlLmdldExlYXZlc09mVHlwZShWSUVXX1RZUEUpO1xuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgdmlld3MgJiZcbiAgICAgICAgICAgICAgICAgICAgdmlld3MubGVuZ3RoICYmXG4gICAgICAgICAgICAgICAgICAgIHZpZXdzWzBdLnZpZXcgaW5zdGFuY2VvZiBGYW50YXN5Q2FsZW5kYXJWaWV3XG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpbGUgPSB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0QWN0aXZlRmlsZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnQgPSB2aWV3c1swXS52aWV3LmNhbGVuZGFyLmV2ZW50cy5maW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChlKSA9PiBlLm5vdGUgPT0gZmlsZS5wYXRoXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGVja2luZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3c1swXS52aWV3Lm9wZW5EYXkoZXZlbnQuZGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBhc3luYyBhZGRDYWxlbmRhclZpZXcoc3RhcnR1cDogYm9vbGVhbiA9IGZhbHNlKSB7XG4gICAgICAgIGlmIChzdGFydHVwICYmIHRoaXMuYXBwLndvcmtzcGFjZS5nZXRMZWF2ZXNPZlR5cGUoVklFV19UWVBFKT8ubGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBhd2FpdCB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0UmlnaHRMZWFmKGZhbHNlKS5zZXRWaWV3U3RhdGUoe1xuICAgICAgICAgICAgdHlwZTogVklFV19UWVBFXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodGhpcy52aWV3KSB0aGlzLmFwcC53b3Jrc3BhY2UucmV2ZWFsTGVhZih0aGlzLnZpZXcubGVhZik7XG4gICAgfVxuICAgIGFzeW5jIGFkZEZ1bGxDYWxlbmRhclZpZXcoc3RhcnR1cDogYm9vbGVhbiA9IGZhbHNlKSB7XG4gICAgICAgIGlmIChzdGFydHVwICYmIHRoaXMuYXBwLndvcmtzcGFjZS5nZXRMZWF2ZXNPZlR5cGUoRlVMTF9WSUVXKT8ubGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0TGVhZihmYWxzZSkuc2V0Vmlld1N0YXRlKHsgdHlwZTogRlVMTF9WSUVXIH0pO1xuICAgICAgICBpZiAodGhpcy5mdWxsKSB0aGlzLmFwcC53b3Jrc3BhY2UucmV2ZWFsTGVhZih0aGlzLmZ1bGwubGVhZik7XG4gICAgfVxuICAgIGFzeW5jIGxvYWRTZXR0aW5ncygpIHtcbiAgICAgICAgdGhpcy5kYXRhID0ge1xuICAgICAgICAgICAgLi4uY29weShERUZBVUxUX0RBVEEpLFxuICAgICAgICAgICAgLi4uKGF3YWl0IHRoaXMubG9hZERhdGEoKSlcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgdGhpcy5jb25maWdEaXJlY3RvcnkgJiZcbiAgICAgICAgICAgIChhd2FpdCB0aGlzLmFwcC52YXVsdC5hZGFwdGVyLmV4aXN0cyh0aGlzLmNvbmZpZ0ZpbGVQYXRoKSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGEgPSBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgICAgIHt9LFxuICAgICAgICAgICAgICAgIHRoaXMuZGF0YSxcbiAgICAgICAgICAgICAgICBKU09OLnBhcnNlKFxuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmFwcC52YXVsdC5hZGFwdGVyLnJlYWQodGhpcy5jb25maWdGaWxlUGF0aClcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5kYXRhLmRlZmF1bHRDYWxlbmRhciAmJiB0aGlzLmRhdGEuY2FsZW5kYXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5kYXRhLmRlZmF1bHRDYWxlbmRhciA9IHRoaXMuZGF0YS5jYWxlbmRhcnNbMF0uaWQ7XG4gICAgICAgIH1cbiAgICAgICAgLyogaWYgKCh0aGlzLmRhdGEudmVyc2lvbj8ubWFqb3IgPz8gMCkgPCAyICYmIHRoaXMuZGF0YS5jYWxlbmRhcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICBuZXcgTm90aWNlKFxuICAgICAgICAgICAgICAgIFwiRmFudGFzeSBDYWxlbmRhciBjYW4gbm93IHBhcnNlIG5vdGUgdGl0bGVzIGZvciBldmVudHMuIFNlZSB0aGUgUmVhZE1lIGZvciBtb3JlIGluZm8hXCJcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdmVyc2lvbiA9IHRoaXMubWFuaWZlc3QudmVyc2lvbi5zcGxpdChcIi5cIikubWFwKCh2KSA9PiBOdW1iZXIodikpO1xuICAgICAgICB0aGlzLmRhdGEudmVyc2lvbiA9IHtcbiAgICAgICAgICAgIG1ham9yOiB2ZXJzaW9uWzBdLFxuICAgICAgICAgICAgbWlub3I6IHZlcnNpb25bMV0sXG4gICAgICAgICAgICBwYXRjaDogdmVyc2lvblsyXVxuICAgICAgICB9OyAqL1xuICAgICAgICB0aGlzLnNldHRpbmdzTG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5hcHAud29ya3NwYWNlLnRyaWdnZXIoXCJmYW50YXN5LWNhbGVuZGFycy1zZXR0aW5ncy1sb2FkZWRcIik7XG4gICAgfVxuICAgIG9uU2V0dGluZ3NMb2FkKGNhbGxiYWNrOiAoKSA9PiBhbnkpIHtcbiAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3NMb2FkZWQpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmFwcC53b3Jrc3BhY2Uub24oXCJmYW50YXN5LWNhbGVuZGFycy1zZXR0aW5ncy1sb2FkZWRcIiwgKCkgPT5cbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYXN5bmMgc2F2ZUNhbGVuZGFyKCkge1xuICAgICAgICB0aGlzLmFwcC53b3Jrc3BhY2UudHJpZ2dlcihcImZhbnRhc3ktY2FsZW5kYXJzLXVwZGF0ZWRcIik7XG4gICAgfVxuICAgIGdldCBjb25maWdEaXJlY3RvcnkoKSB7XG4gICAgICAgIGlmICghdGhpcy5kYXRhIHx8ICF0aGlzLmRhdGEuY29uZmlnRGlyZWN0b3J5KSByZXR1cm47XG4gICAgICAgIHJldHVybiBgJHt0aGlzLmRhdGEuY29uZmlnRGlyZWN0b3J5fS9wbHVnaW5zL2ZhbnRhc3ktY2FsZW5kYXJgO1xuICAgIH1cbiAgICBnZXQgY29uZmlnRmlsZVBhdGgoKSB7XG4gICAgICAgIGlmICghdGhpcy5kYXRhLmNvbmZpZ0RpcmVjdG9yeSkgcmV0dXJuO1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5jb25maWdEaXJlY3Rvcnl9L2RhdGEuanNvbmA7XG4gICAgfVxuICAgIGFzeW5jIHNhdmVTZXR0aW5ncygpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5zYXZlRGF0YSh0aGlzLmRhdGEpO1xuICAgICAgICB0aGlzLmFwcC53b3Jrc3BhY2UudHJpZ2dlcihcImZhbnRhc3ktY2FsZW5kYXItc2V0dGluZ3MtY2hhbmdlXCIpO1xuICAgIH1cbiAgICBhc3luYyBzYXZlRGF0YShkYXRhOiBGYW50YXN5Q2FsZW5kYXJEYXRhKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbmZpZ0RpcmVjdG9yeSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICEoYXdhaXQgdGhpcy5hcHAudmF1bHQuYWRhcHRlci5leGlzdHModGhpcy5jb25maWdEaXJlY3RvcnkpKVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmFwcC52YXVsdC5hZGFwdGVyLm1rZGlyKHRoaXMuY29uZmlnRGlyZWN0b3J5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5hcHAudmF1bHQuYWRhcHRlci53cml0ZShcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maWdGaWxlUGF0aCxcbiAgICAgICAgICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkoZGF0YSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgbmV3IE5vdGljZShcbiAgICAgICAgICAgICAgICAgICAgXCJUaGVyZSB3YXMgYW4gZXJyb3Igc2F2aW5nIGludG8gdGhlIGNvbmZpZ3VyZWQgZGlyZWN0b3J5LlwiXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhd2FpdCBzdXBlci5zYXZlRGF0YShkYXRhKTtcbiAgICB9XG59XG4iLCAiaW1wb3J0IHtcbiAgICBhZGRJY29uLFxuICAgIEJ1dHRvbkNvbXBvbmVudCxcbiAgICBub3JtYWxpemVQYXRoLFxuICAgIE5vdGljZSxcbiAgICBQbHVnaW5TZXR0aW5nVGFiLFxuICAgIHNldEljb24sXG4gICAgU2V0dGluZyxcbiAgICBURm9sZGVyXG59IGZyb20gXCJvYnNpZGlhblwiO1xuXG5pbXBvcnQgY29weSBmcm9tIFwiZmFzdC1jb3B5XCI7XG5cbmltcG9ydCB7IERFRkFVTFRfQ0FMRU5EQVIgfSBmcm9tIFwiLi4vbWFpblwiO1xuaW1wb3J0IHR5cGUgRmFudGFzeUNhbGVuZGFyIGZyb20gXCIuLi9tYWluXCI7XG5pbXBvcnQgSW1wb3J0ZXIgZnJvbSBcIi4vaW1wb3J0L2ltcG9ydGVyXCI7XG5cbmltcG9ydCBDYWxlbmRhckNyZWF0b3IgZnJvbSBcIi4vY3JlYXRvci9DcmVhdG9yLnN2ZWx0ZVwiO1xuXG5pbXBvcnQgdHlwZSB7IENhbGVuZGFyIH0gZnJvbSBcInNyYy9AdHlwZXNcIjtcblxuaW1wb3J0IHsgY29uZmlybVdpdGhNb2RhbCB9IGZyb20gXCIuL21vZGFscy9jb25maXJtXCI7XG5pbXBvcnQgeyBGb2xkZXJTdWdnZXN0aW9uTW9kYWwgfSBmcm9tIFwic3JjL3N1Z2dlc3Rlci9mb2xkZXJcIjtcblxuZXhwb3J0IGVudW0gUmVjdXJyaW5nIHtcbiAgICBub25lID0gXCJOb25lXCIsXG4gICAgbW9udGhseSA9IFwiTW9udGhseVwiLFxuICAgIHllYXJseSA9IFwiWWVhcmx5XCJcbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJvYnNpZGlhblwiIHtcbiAgICBpbnRlcmZhY2UgQXBwIHtcbiAgICAgICAgaW50ZXJuYWxQbHVnaW5zOiB7XG4gICAgICAgICAgICBnZXRQbHVnaW5CeUlkKGlkOiBcImRhaWx5LW5vdGVzXCIpOiB7XG4gICAgICAgICAgICAgICAgX2xvYWRlZDogYm9vbGVhbjtcbiAgICAgICAgICAgICAgICBpbnN0YW5jZToge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IHN0cmluZztcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbmFkZEljb24oXG4gICAgXCJmYW50YXN5LWNhbGVuZGFyLWdyaXBcIixcbiAgICBgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgZm9jdXNhYmxlPVwiZmFsc2VcIiBkYXRhLXByZWZpeD1cImZhc1wiIGRhdGEtaWNvbj1cImdyaXAtbGluZXNcIiBjbGFzcz1cInN2Zy1pbmxpbmUtLWZhIGZhLWdyaXAtbGluZXMgZmEtdy0xNlwiIHJvbGU9XCJpbWdcIiB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIj48cGF0aCBmaWxsPVwiY3VycmVudENvbG9yXCIgZD1cIk00OTYgMjg4SDE2Yy04LjggMC0xNiA3LjItMTYgMTZ2MzJjMCA4LjggNy4yIDE2IDE2IDE2aDQ4MGM4LjggMCAxNi03LjIgMTYtMTZ2LTMyYzAtOC44LTcuMi0xNi0xNi0xNnptMC0xMjhIMTZjLTguOCAwLTE2IDcuMi0xNiAxNnYzMmMwIDguOCA3LjIgMTYgMTYgMTZoNDgwYzguOCAwIDE2LTcuMiAxNi0xNnYtMzJjMC04LjgtNy4yLTE2LTE2LTE2elwiLz48L3N2Zz5gXG4pO1xuXG5hZGRJY29uKFxuICAgIFwiZmFudGFzeS1jYWxlbmRhci13YXJuaW5nXCIsXG4gICAgYDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgZm9jdXNhYmxlPVwiZmFsc2VcIiBkYXRhLXByZWZpeD1cImZhc1wiIGRhdGEtaWNvbj1cImV4Y2xhbWF0aW9uLXRyaWFuZ2xlXCIgY2xhc3M9XCJzdmctaW5saW5lLS1mYSBmYS1leGNsYW1hdGlvbi10cmlhbmdsZSBmYS13LTE4XCIgcm9sZT1cImltZ1wiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDU3NiA1MTJcIj48cGF0aCBmaWxsPVwiY3VycmVudENvbG9yXCIgZD1cIk01NjkuNTE3IDQ0MC4wMTNDNTg3Ljk3NSA0NzIuMDA3IDU2NC44MDYgNTEyIDUyNy45NCA1MTJINDguMDU0Yy0zNi45MzcgMC01OS45OTktNDAuMDU1LTQxLjU3Ny03MS45ODdMMjQ2LjQyMyAyMy45ODVjMTguNDY3LTMyLjAwOSA2NC43Mi0zMS45NTEgODMuMTU0IDBsMjM5Ljk0IDQxNi4wMjh6TTI4OCAzNTRjLTI1LjQwNSAwLTQ2IDIwLjU5NS00NiA0NnMyMC41OTUgNDYgNDYgNDYgNDYtMjAuNTk1IDQ2LTQ2LTIwLjU5NS00Ni00Ni00NnptLTQzLjY3My0xNjUuMzQ2bDcuNDE4IDEzNmMuMzQ3IDYuMzY0IDUuNjA5IDExLjM0NiAxMS45ODIgMTEuMzQ2aDQ4LjU0NmM2LjM3MyAwIDExLjYzNS00Ljk4MiAxMS45ODItMTEuMzQ2bDcuNDE4LTEzNmMuMzc1LTYuODc0LTUuMDk4LTEyLjY1NC0xMS45ODItMTIuNjU0aC02My4zODNjLTYuODg0IDAtMTIuMzU2IDUuNzgtMTEuOTgxIDEyLjY1NHpcIj48L3BhdGg+PC9zdmc+YFxuKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmFudGFzeUNhbGVuZGFyU2V0dGluZ3MgZXh0ZW5kcyBQbHVnaW5TZXR0aW5nVGFiIHtcbiAgICBjb250ZW50RWw6IEhUTUxEaXZFbGVtZW50O1xuICAgIGdldCBkYXRhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wbHVnaW4uZGF0YTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHVibGljIHBsdWdpbjogRmFudGFzeUNhbGVuZGFyKSB7XG4gICAgICAgIHN1cGVyKHBsdWdpbi5hcHAsIHBsdWdpbik7XG4gICAgfVxuICAgIGFzeW5jIGRpc3BsYXkoKSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyRWwuZW1wdHkoKTtcbiAgICAgICAgdGhpcy5jb250YWluZXJFbC5jcmVhdGVFbChcImgyXCIsIHsgdGV4dDogXCJGYW50YXN5IENhbGVuZGFyc1wiIH0pO1xuICAgICAgICB0aGlzLmNvbnRhaW5lckVsLmFkZENsYXNzKFwiZmFudGFzeS1jYWxlbmRhci1zZXR0aW5nc1wiKTtcbiAgICAgICAgdGhpcy5jb250ZW50RWwgPSB0aGlzLmNvbnRhaW5lckVsLmNyZWF0ZURpdihcbiAgICAgICAgICAgIFwiZmFudGFzeS1jYWxlbmRhci1zZXR0aW5ncy1jb250ZW50XCJcbiAgICAgICAgKTtcblxuICAgICAgICB0aGlzLmJ1aWxkSW5mbyhcbiAgICAgICAgICAgIHRoaXMuY29udGVudEVsLmNyZWF0ZURpdihcImZhbnRhc3ktY2FsZW5kYXItbmVzdGVkLXNldHRpbmdzXCIpXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuYnVpbGRDYWxlbmRhcnMoXG4gICAgICAgICAgICB0aGlzLmNvbnRlbnRFbC5jcmVhdGVFbChcImRldGFpbHNcIiwge1xuICAgICAgICAgICAgICAgIGNsczogXCJmYW50YXN5LWNhbGVuZGFyLW5lc3RlZC1zZXR0aW5nc1wiLFxuICAgICAgICAgICAgICAgIGF0dHI6IHtcbiAgICAgICAgICAgICAgICAgICAgLi4uKHRoaXMuZGF0YS5zZXR0aW5nc1RvZ2dsZVN0YXRlLmNhbGVuZGFyc1xuICAgICAgICAgICAgICAgICAgICAgICAgPyB7IG9wZW46IGBvcGVuYCB9XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHt9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuYnVpbGRFdmVudHMoXG4gICAgICAgICAgICB0aGlzLmNvbnRlbnRFbC5jcmVhdGVFbChcImRldGFpbHNcIiwge1xuICAgICAgICAgICAgICAgIGNsczogXCJmYW50YXN5LWNhbGVuZGFyLW5lc3RlZC1zZXR0aW5nc1wiLFxuICAgICAgICAgICAgICAgIGF0dHI6IHtcbiAgICAgICAgICAgICAgICAgICAgLi4uKHRoaXMuZGF0YS5zZXR0aW5nc1RvZ2dsZVN0YXRlLmV2ZW50c1xuICAgICAgICAgICAgICAgICAgICAgICAgPyB7IG9wZW46IGBvcGVuYCB9XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHt9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgfVxuICAgIGJ1aWxkSW5mbyhjb250YWluZXJFbDogSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgY29udGFpbmVyRWwuZW1wdHkoKTtcblxuICAgICAgICBuZXcgU2V0dGluZyhjb250YWluZXJFbClcbiAgICAgICAgICAgIC5zZXROYW1lKFxuICAgICAgICAgICAgICAgIGNyZWF0ZUZyYWdtZW50KChlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNwYW4gPSBlLmNyZWF0ZVNwYW4oXCJmYW50YXN5LWNhbGVuZGFyLXdhcm5pbmdcIik7XG4gICAgICAgICAgICAgICAgICAgIHNldEljb24oXG4gICAgICAgICAgICAgICAgICAgICAgICBzcGFuLmNyZWF0ZVNwYW4oXCJmYW50YXN5LWNhbGVuZGFyLXdhcm5pbmdcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZhbnRhc3ktY2FsZW5kYXItd2FybmluZ1wiXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uY3JlYXRlU3Bhbih7IHRleHQ6IFwiRGVmYXVsdCBDb25maWcgRGlyZWN0b3J5XCIgfSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIC5zZXREZXNjKFxuICAgICAgICAgICAgICAgIGNyZWF0ZUZyYWdtZW50KChlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGUuY3JlYXRlU3Bhbih7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIlBsZWFzZSBiYWNrIHVwIHlvdXIgZGF0YSBiZWZvcmUgY2hhbmdpbmcgdGhpcyBzZXR0aW5nLiBIaWRkZW4gZGlyZWN0b3JpZXMgbXVzdCBiZSBtYW51YWxseSBlbnRlcmVkLlwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBlLmNyZWF0ZUVsKFwiYnJcIik7XG4gICAgICAgICAgICAgICAgICAgIGUuY3JlYXRlU3Bhbih7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBgQ3VycmVudCBkaXJlY3Rvcnk6IGBcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpZ0RpcmVjdG9yeSA9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGEuY29uZmlnRGlyZWN0b3J5ID8/IHRoaXMuYXBwLnZhdWx0LmNvbmZpZ0RpcjtcbiAgICAgICAgICAgICAgICAgICAgZS5jcmVhdGVFbChcImNvZGVcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogY29uZmlnRGlyZWN0b3J5XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuYWRkVGV4dChhc3luYyAodGV4dCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBmb2xkZXJzID0gdGhpcy5hcHAudmF1bHRcbiAgICAgICAgICAgICAgICAgICAgLmdldEFsbExvYWRlZEZpbGVzKClcbiAgICAgICAgICAgICAgICAgICAgLmZpbHRlcigoZikgPT4gZiBpbnN0YW5jZW9mIFRGb2xkZXIpO1xuXG4gICAgICAgICAgICAgICAgdGV4dC5zZXRQbGFjZWhvbGRlcihcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLmNvbmZpZ0RpcmVjdG9yeSA/PyB0aGlzLmFwcC52YXVsdC5jb25maWdEaXJcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1vZGFsID0gbmV3IEZvbGRlclN1Z2dlc3Rpb25Nb2RhbCh0aGlzLmFwcCwgdGV4dCwgW1xuICAgICAgICAgICAgICAgICAgICAuLi4oZm9sZGVycyBhcyBURm9sZGVyW10pXG4gICAgICAgICAgICAgICAgXSk7XG5cbiAgICAgICAgICAgICAgICBtb2RhbC5vbkNsb3NlID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXRleHQuaW5wdXRFbC52YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLmNvbmZpZ0RpcmVjdG9yeSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBleGlzdHMgPSBhd2FpdCB0aGlzLmFwcC52YXVsdC5hZGFwdGVyLmV4aXN0cyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LmlucHV0RWwudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZXhpc3RzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLmNvbmZpZ0RpcmVjdG9yeSA9IHRleHQuaW5wdXRFbC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICB0ZXh0LmlucHV0RWwub25ibHVyID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXRleHQuaW5wdXRFbC52YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0cyA9IGF3YWl0IHRoaXMuYXBwLnZhdWx0LmFkYXB0ZXIuZXhpc3RzKFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC5pbnB1dEVsLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLmNvbmZpZ0RpcmVjdG9yeSA9IHRleHQuaW5wdXRFbC52YWx1ZTtcblxuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXNwbGF5KCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuYWRkRXh0cmFCdXR0b24oKGIpID0+IHtcbiAgICAgICAgICAgICAgICBiLnNldFRvb2x0aXAoXCJSZXNldCB0byBEZWZhdWx0XCIpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRJY29uKFwicmVzZXRcIilcbiAgICAgICAgICAgICAgICAgICAgLm9uQ2xpY2soYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLmNvbmZpZ0RpcmVjdG9yeSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzcGxheSgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cbiAgICBidWlsZENhbGVuZGFycyhjb250YWluZXJFbDogSFRNTERldGFpbHNFbGVtZW50KSB7XG4gICAgICAgIGNvbnRhaW5lckVsLmVtcHR5KCk7XG4gICAgICAgIGNvbnRhaW5lckVsLm9udG9nZ2xlID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5kYXRhLnNldHRpbmdzVG9nZ2xlU3RhdGUuY2FsZW5kYXJzID0gY29udGFpbmVyRWwub3BlbjtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgc3VtbWFyeSA9IGNvbnRhaW5lckVsLmNyZWF0ZUVsKFwic3VtbWFyeVwiKTtcbiAgICAgICAgbmV3IFNldHRpbmcoc3VtbWFyeSkuc2V0SGVhZGluZygpLnNldE5hbWUoXCJDYWxlbmRhciBNYW5hZ2VtZW50XCIpO1xuXG4gICAgICAgIHN1bW1hcnkuY3JlYXRlRGl2KFwiY29sbGFwc2VyXCIpLmNyZWF0ZURpdihcImhhbmRsZVwiKTtcblxuICAgICAgICBuZXcgU2V0dGluZyhjb250YWluZXJFbClcbiAgICAgICAgICAgIC5zZXROYW1lKFwiRGVmYXVsdCBDYWxlbmRhclwiKVxuICAgICAgICAgICAgLnNldERlc2MoXCJWaWV3cyB3aWxsIG9wZW4gdG8gdGhpcyBjYWxlbmRhciBieSBkZWZhdWx0LlwiKVxuICAgICAgICAgICAgLmFkZERyb3Bkb3duKChkKSA9PiB7XG4gICAgICAgICAgICAgICAgZC5hZGRPcHRpb24oXCJub25lXCIsIFwiTm9uZVwiKTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBjYWxlbmRhciBvZiB0aGlzLmRhdGEuY2FsZW5kYXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIGQuYWRkT3B0aW9uKGNhbGVuZGFyLmlkLCBjYWxlbmRhci5uYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZC5zZXRWYWx1ZSh0aGlzLnBsdWdpbi5kYXRhLmRlZmF1bHRDYWxlbmRhcik7XG4gICAgICAgICAgICAgICAgZC5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAodiA9PT0gXCJub25lXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLmRhdGEuZGVmYXVsdENhbGVuZGFyID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLnNhdmVTZXR0aW5ncygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbHVnaW4uZGF0YS5kZWZhdWx0Q2FsZW5kYXIgPSB2O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBuZXcgU2V0dGluZyhjb250YWluZXJFbClcbiAgICAgICAgICAgIC5zZXROYW1lKFwiSW1wb3J0IENhbGVuZGFyXCIpXG4gICAgICAgICAgICAuc2V0RGVzYyhcbiAgICAgICAgICAgICAgICBjcmVhdGVGcmFnbWVudCgoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBlLmNyZWF0ZVNwYW4oe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogXCJJbXBvcnQgY2FsZW5kYXIgZnJvbSBcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZS5jcmVhdGVFbChcImFcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogXCJodHRwczovL2FwcC5mYW50YXN5LWNhbGVuZGFyLmNvbVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogXCJGYW50YXN5IENhbGVuZGFyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbHM6IFwiZXh0ZXJuYWwtbGlua1wiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuYWRkQnV0dG9uKChiKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5wdXQgPSBjcmVhdGVFbChcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgYXR0cjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJmaWxlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1lcmdlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NlcHQ6IFwiLmpzb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IFwiZGlzcGxheTogbm9uZTtcIlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaW5wdXQub25jaGFuZ2UgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgZmlsZXMgfSA9IGlucHV0O1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghZmlsZXMubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBmaWxlIG9mIEFycmF5LmZyb20oZmlsZXMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5wdXNoKEpTT04ucGFyc2UoYXdhaXQgZmlsZS50ZXh0KCkpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhbGVuZGFycyA9IEltcG9ydGVyLmltcG9ydChkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLmRhdGEuY2FsZW5kYXJzLnB1c2goLi4uY2FsZW5kYXJzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMucGx1Z2luLnNhdmVDYWxlbmRhcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Q2FsZW5kYXJzKGV4aXN0aW5nKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IE5vdGljZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBgVGhlcmUgd2FzIGFuIGVycm9yIHdoaWxlIGltcG9ydGluZyB0aGUgY2FsZW5kYXIke1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlcy5sZW5ndGggPT0gMSA/IFwiXCIgOiBcInNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0uYFxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpbnB1dC52YWx1ZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBiLnNldEJ1dHRvblRleHQoXCJDaG9vc2UgRmlsZXNcIik7XG4gICAgICAgICAgICAgICAgYi5idXR0b25FbC5hZGRDbGFzcyhcImNhbGVuZGFyLWZpbGUtdXBsb2FkXCIpO1xuICAgICAgICAgICAgICAgIGIuYnV0dG9uRWwuYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgICAgICAgICAgICAgIGIub25DbGljaygoKSA9PiBpbnB1dC5jbGljaygpKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIG5ldyBTZXR0aW5nKGNvbnRhaW5lckVsKVxuICAgICAgICAgICAgLnNldE5hbWUoXCJDcmVhdGUgTmV3IENhbGVuZGFyXCIpXG4gICAgICAgICAgICAuYWRkQnV0dG9uKChidXR0b246IEJ1dHRvbkNvbXBvbmVudCkgPT5cbiAgICAgICAgICAgICAgICBidXR0b25cbiAgICAgICAgICAgICAgICAgICAgLnNldFRvb2x0aXAoXCJMYXVuY2ggQ2FsZW5kYXIgQ3JlYXRvclwiKVxuICAgICAgICAgICAgICAgICAgICAuc2V0SWNvbihcInBsdXMtd2l0aC1jaXJjbGVcIilcbiAgICAgICAgICAgICAgICAgICAgLm9uQ2xpY2soYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FsZW5kYXIgPSBhd2FpdCB0aGlzLmxhdW5jaENhbGVuZGFyQ3JlYXRvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcdUQ4M0RcdURFODAgfiBmaWxlOiBzZXR0aW5ncy50cyB+IGxpbmUgMjY2IH4gY2FsZW5kYXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxlbmRhclxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLyogY29uc3QgbW9kYWwgPSBuZXcgQ3JlYXRlQ2FsZW5kYXJNb2RhbCh0aGlzLnBsdWdpbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RhbC5vbkNsb3NlID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbW9kYWwuc2F2ZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjYWxlbmRhciA9IGNvcHkobW9kYWwuY2FsZW5kYXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY2FsZW5kYXIuY3VycmVudC55ZWFyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGVuZGFyLmN1cnJlbnQueWVhciA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMucGx1Z2luLmFkZE5ld0NhbGVuZGFyKGNhbGVuZGFyKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0NhbGVuZGFycyhleGlzdGluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kYWwub3BlbigpOyAqL1xuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcblxuICAgICAgICBjb25zdCBleGlzdGluZyA9IGNvbnRhaW5lckVsLmNyZWF0ZURpdihcImV4aXN0aW5nLWNhbGVuZGFyc1wiKTtcblxuICAgICAgICB0aGlzLnNob3dDYWxlbmRhcnMoZXhpc3RpbmcpO1xuICAgIH1cbiAgICBzaG93Q2FsZW5kYXJzKGVsZW1lbnQ6IEhUTUxFbGVtZW50KSB7XG4gICAgICAgIGVsZW1lbnQuZW1wdHkoKTtcbiAgICAgICAgaWYgKCF0aGlzLmRhdGEuY2FsZW5kYXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgZWxlbWVudC5jcmVhdGVTcGFuKHtcbiAgICAgICAgICAgICAgICB0ZXh0OiBcIk5vIGNhbGVuZGFycyBjcmVhdGVkISBDcmVhdGUgYSBjYWxlbmRhciB0byBzZWUgaXQgaGVyZS5cIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgY2FsZW5kYXIgb2YgdGhpcy5kYXRhLmNhbGVuZGFycykge1xuICAgICAgICAgICAgbmV3IFNldHRpbmcoZWxlbWVudClcbiAgICAgICAgICAgICAgICAuc2V0TmFtZShjYWxlbmRhci5uYW1lKVxuICAgICAgICAgICAgICAgIC5zZXREZXNjKGNhbGVuZGFyLmRlc2NyaXB0aW9uID8/IFwiXCIpXG4gICAgICAgICAgICAgICAgLmFkZEV4dHJhQnV0dG9uKChiKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGIuc2V0SWNvbihcInBlbmNpbFwiKS5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubGF1bmNoQ2FsZW5kYXJDcmVhdG9yKGNhbGVuZGFyKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuYWRkRXh0cmFCdXR0b24oKGIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgYi5zZXRJY29uKFwidHJhc2hcIikub25DbGljayhhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIShhd2FpdCBjb25maXJtV2l0aE1vZGFsKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFwcCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIHRoaXMgY2FsZW5kYXI/XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN0YTogXCJEZWxldGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZGFyeTogXCJDYW5jZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5kYXRhLmNhbGVuZGFycyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wbHVnaW4uZGF0YS5jYWxlbmRhcnMuZmlsdGVyKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYykgPT4gYy5pZCAhPSBjYWxlbmRhci5pZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnBsdWdpbi5zYXZlQ2FsZW5kYXIoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGVuZGFyLm5hbWUgPT0gdGhpcy5wbHVnaW4uZGF0YS5kZWZhdWx0Q2FsZW5kYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3BsYXkoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Q2FsZW5kYXJzKGVsZW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGJ1aWxkRXZlbnRzKGNvbnRhaW5lckVsOiBIVE1MRGV0YWlsc0VsZW1lbnQpIHtcbiAgICAgICAgY29udGFpbmVyRWwuZW1wdHkoKTtcbiAgICAgICAgY29udGFpbmVyRWwub250b2dnbGUgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRhdGEuc2V0dGluZ3NUb2dnbGVTdGF0ZS5ldmVudHMgPSBjb250YWluZXJFbC5vcGVuO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBzdW1tYXJ5ID0gY29udGFpbmVyRWwuY3JlYXRlRWwoXCJzdW1tYXJ5XCIpO1xuICAgICAgICBuZXcgU2V0dGluZyhzdW1tYXJ5KS5zZXRIZWFkaW5nKCkuc2V0TmFtZShcIkV2ZW50c1wiKTtcblxuICAgICAgICBzdW1tYXJ5LmNyZWF0ZURpdihcImNvbGxhcHNlclwiKS5jcmVhdGVEaXYoXCJoYW5kbGVcIik7XG5cbiAgICAgICAgbmV3IFNldHRpbmcoY29udGFpbmVyRWwpXG4gICAgICAgICAgICAuc2V0TmFtZShcIkRpc3BsYXkgRXZlbnQgUHJldmlld3NcIilcbiAgICAgICAgICAgIC5zZXREZXNjKFxuICAgICAgICAgICAgICAgIFwiVXNlIHRoZSBjb3JlIE5vdGUgUHJldmlldyBwbHVnaW4gdG8gZGlzcGxheSBldmVudCBub3RlcyB3aGVuIGhvdmVyZWQuXCJcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIC5hZGRUb2dnbGUoKHQpID0+IHtcbiAgICAgICAgICAgICAgICB0LnNldFZhbHVlKHRoaXMuZGF0YS5ldmVudFByZXZpZXcpLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5ldmVudFByZXZpZXcgPSB2O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBuZXcgU2V0dGluZyhjb250YWluZXJFbClcbiAgICAgICAgICAgIC5zZXROYW1lKFwiQXV0b21hdGljYWxseSBQYXJzZSBmb3IgRXZlbnRzXCIpXG4gICAgICAgICAgICAuc2V0RGVzYyhcbiAgICAgICAgICAgICAgICBcIlRoZSBwbHVnaW4gd2lsbCBhdXRvbWF0aWNhbGx5IHBhcnNlIGZpbGVzIGluIHRoZSB2YXVsdCBmb3IgZXZlbnRzLlwiXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuYWRkVG9nZ2xlKCh0KSA9PiB7XG4gICAgICAgICAgICAgICAgdC5zZXRWYWx1ZSh0aGlzLmRhdGEuYXV0b1BhcnNlKS5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGEuYXV0b1BhcnNlID0gdjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgbmV3IFNldHRpbmcoY29udGFpbmVyRWwpXG4gICAgICAgICAgICAuc2V0TmFtZShcIkV2ZW50cyBGb2xkZXJcIilcbiAgICAgICAgICAgIC5zZXREZXNjKFwiVGhlIHBsdWdpbiB3aWxsIG9ubHkgd2F0Y2ggZm9yIGNoYW5nZXMgaW4gdGhpcyBmb2xkZXIuXCIpXG4gICAgICAgICAgICAuYWRkVGV4dCgodGV4dCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBmb2xkZXJzID0gdGhpcy5hcHAudmF1bHRcbiAgICAgICAgICAgICAgICAgICAgLmdldEFsbExvYWRlZEZpbGVzKClcbiAgICAgICAgICAgICAgICAgICAgLmZpbHRlcigoZikgPT4gZiBpbnN0YW5jZW9mIFRGb2xkZXIpO1xuXG4gICAgICAgICAgICAgICAgdGV4dC5zZXRQbGFjZWhvbGRlcih0aGlzLnBsdWdpbi5kYXRhLnBhdGggPz8gXCIvXCIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1vZGFsID0gbmV3IEZvbGRlclN1Z2dlc3Rpb25Nb2RhbCh0aGlzLmFwcCwgdGV4dCwgW1xuICAgICAgICAgICAgICAgICAgICAuLi4oZm9sZGVycyBhcyBURm9sZGVyW10pXG4gICAgICAgICAgICAgICAgXSk7XG5cbiAgICAgICAgICAgICAgICBtb2RhbC5vbkNsb3NlID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2ID0gdGV4dC5pbnB1dEVsLnZhbHVlPy50cmltKClcbiAgICAgICAgICAgICAgICAgICAgICAgID8gdGV4dC5pbnB1dEVsLnZhbHVlLnRyaW0oKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBcIi9cIjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbHVnaW4uZGF0YS5wYXRoID0gbm9ybWFsaXplUGF0aCh2KTtcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgdGV4dC5pbnB1dEVsLm9uYmx1ciA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdiA9IHRleHQuaW5wdXRFbC52YWx1ZT8udHJpbSgpXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHRleHQuaW5wdXRFbC52YWx1ZS50cmltKClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogXCIvXCI7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLmRhdGEucGF0aCA9IG5vcm1hbGl6ZVBhdGgodik7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBuZXcgU2V0dGluZyhjb250YWluZXJFbClcbiAgICAgICAgICAgIC5zZXROYW1lKFwiUGFyc2UgTm90ZSBUaXRsZXMgZm9yIEV2ZW50IERhdGVzXCIpXG4gICAgICAgICAgICAuc2V0RGVzYyhcIlRoZSBwbHVnaW4gd2lsbCBwYXJzZSBub3RlIHRpdGxlcyBmb3IgZXZlbnQgZGF0ZXMuXCIpXG4gICAgICAgICAgICAuYWRkVG9nZ2xlKCh0KSA9PiB7XG4gICAgICAgICAgICAgICAgdC5zZXRWYWx1ZSh0aGlzLmRhdGEucGFyc2VEYXRlcykub25DaGFuZ2UoKHYpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLnBhcnNlRGF0ZXMgPSB2O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBuZXcgU2V0dGluZyhjb250YWluZXJFbClcbiAgICAgICAgICAgIC5zZXROYW1lKFwiRGF0ZSBGb3JtYXRcIilcbiAgICAgICAgICAgIC5zZXRDbGFzcyh0aGlzLmRhdGEuZGFpbHlOb3RlcyA/IFwiZGFpbHktbm90ZXNcIiA6IFwibm8tZGFpbHktbm90ZXNcIilcbiAgICAgICAgICAgIC5zZXREZXNjKFxuICAgICAgICAgICAgICAgIGNyZWF0ZUZyYWdtZW50KChlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGUuY3JlYXRlU3Bhbih7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIkV2ZW50IGRhdGVzIHdpbGwgYmUgcGFyc2VkIHVzaW5nIHRoaXMgZm9ybWF0LlwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBlLmNyZWF0ZVNwYW4oeyB0ZXh0OiBcIk9ubHkgdGhlIFwiIH0pO1xuICAgICAgICAgICAgICAgICAgICBlLmNyZWF0ZUVsKFwiY29kZVwiLCB7IHRleHQ6IFwiWVwiIH0pO1xuICAgICAgICAgICAgICAgICAgICBlLmNyZWF0ZVNwYW4oe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogXCIsIFwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBlLmNyZWF0ZUVsKFwiY29kZVwiLCB7IHRleHQ6IFwiTVwiIH0pO1xuICAgICAgICAgICAgICAgICAgICBlLmNyZWF0ZVNwYW4oe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogXCIsIGFuZCBcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZS5jcmVhdGVFbChcImNvZGVcIiwgeyB0ZXh0OiBcIkRcIiB9KTtcbiAgICAgICAgICAgICAgICAgICAgZS5jcmVhdGVFbChcImFcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogXCJ0b2tlbnNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9tb21lbnRqcy5jb20vZG9jcy8jL2Rpc3BsYXlpbmcvZm9ybWF0L1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xzOiBcImV4dGVybmFsLWxpbmtcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZS5jcmVhdGVTcGFuKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IFwiIGFyZSBzdXBwb3J0ZWQuXCJcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIFtcIllcIiwgXCJNXCIsIFwiRFwiXS5zb21lKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICh0b2tlbikgPT4gIXRoaXMuZGF0YS5kYXRlRm9ybWF0LmluY2x1ZGVzKHRva2VuKVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUuY3JlYXRlRWwoXCJiclwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNwYW4gPSBlLmNyZWF0ZVNwYW4oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsczogXCJmYW50YXN5LWNhbGVuZGFyLXdhcm5pbmcgZGF0ZS1mb3JtYXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJY29uKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4uY3JlYXRlU3BhbihcImZhbnRhc3ktY2FsZW5kYXItd2FybmluZ1wiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImZhbnRhc3ktY2FsZW5kYXItd2FybmluZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG1pc3NpbmcgPSBbXCJZXCIsIFwiTVwiLCBcIkRcIl0uZmlsdGVyKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICh0b2tlbikgPT4gIXRoaXMuZGF0YS5kYXRlRm9ybWF0LmluY2x1ZGVzKHRva2VuKVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4uY3JlYXRlU3Bhbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogYCBEYXRlIGZvcm1hdCBpcyBtaXNzaW5nOiAke21pc3NpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmpvaW4oXCIsIFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvLCAoW14sXSopJC8sIFwiIGFuZCAkMVwiKX1gXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuYWRkVGV4dCgodCkgPT4ge1xuICAgICAgICAgICAgICAgIHQuc2V0RGlzYWJsZWQodGhpcy5kYXRhLmRhaWx5Tm90ZXMpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRWYWx1ZSh0aGlzLnBsdWdpbi5mb3JtYXQpXG4gICAgICAgICAgICAgICAgICAgIC5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLmRhdGVGb3JtYXQgPSB2O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHQuaW5wdXRFbC5vbmJsdXIgPSAoKSA9PiB0aGlzLmJ1aWxkRXZlbnRzKGNvbnRhaW5lckVsKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuYWRkRXh0cmFCdXR0b24oKGIpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMucGx1Z2luLmNhblVzZURhaWx5Tm90ZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgYi5leHRyYVNldHRpbmdzRWwuZGV0YWNoKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZGF0YS5kYWlseU5vdGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGIuc2V0SWNvbihcImNoZWNrbWFya1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldFRvb2x0aXAoXCJVbmxpbmsgZnJvbSBEYWlseSBOb3Rlc1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5kYWlseU5vdGVzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idWlsZEV2ZW50cyhjb250YWluZXJFbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBiLnNldEljb24oXCJzeW5jXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAuc2V0VG9vbHRpcChcIkxpbmsgd2l0aCBEYWlseSBOb3Rlc1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5kYWlseU5vdGVzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1aWxkRXZlbnRzKGNvbnRhaW5lckVsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIG5ldyBTZXR0aW5nKGNvbnRhaW5lckVsKVxuICAgICAgICAgICAgLnNldE5hbWUoXCJTdXBwb3J0IFRpbWVsaW5lcyBFdmVudHNcIilcbiAgICAgICAgICAgIC5zZXREZXNjKFxuICAgICAgICAgICAgICAgIGNyZWF0ZUZyYWdtZW50KChlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGUuY3JlYXRlU3Bhbih7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIlN1cHBvcnQgPHNwYW4+IGVsZW1lbnRzIHVzZWQgYnkgdGhlIFwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBlLmNyZWF0ZUVsKFwiYVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIk9ic2lkaWFuIFRpbWVsaW5lc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogXCJvYnNpZGlhbjovL3Nob3ctcGx1Z2luP2lkPW9ic2lkaWFuLXRpbWVsaW5lc1wiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBlLmNyZWF0ZVNwYW4oe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogXCIgcGx1Z2luIChieSBEYXJha2FoKS5cIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLmFkZFRvZ2dsZSgodCkgPT4ge1xuICAgICAgICAgICAgICAgIHQuc2V0VmFsdWUodGhpcy5kYXRhLnN1cHBvcnRUaW1lbGluZXMpLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5zdXBwb3J0VGltZWxpbmVzID0gdjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBuZXcgU2V0dGluZyhjb250YWluZXJFbClcbiAgICAgICAgICAgIC5zZXROYW1lKFwiRGVmYXVsdCB0YWcgbWFya2luZyBwYWdlcyBjb250YWluaW5nIFRpbWVsaW5lcyBkYXRhXCIpXG4gICAgICAgICAgICAuc2V0RGVzYyhcbiAgICAgICAgICAgICAgICBcIlRhZyB0byBzcGVjaWZ5IHdoaWNoIG5vdGVzIHRvIGluY2x1ZGUgaW4gY3JlYXRlZCB0aW1lbGluZXMgZS5nLiB0aW1lbGluZSB0byB1c2UgdGhlICN0aW1lbGluZSB0YWdcIlxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLmFkZFRleHQoKHRleHQpID0+XG4gICAgICAgICAgICAgICAgdGV4dFxuICAgICAgICAgICAgICAgICAgICAuc2V0UGxhY2Vob2xkZXIodGhpcy5kYXRhLnRpbWVsaW5lVGFnKVxuICAgICAgICAgICAgICAgICAgICAuc2V0VmFsdWUodGhpcy5kYXRhLnRpbWVsaW5lVGFnLnJlcGxhY2UoXCIjXCIsIFwiXCIpKVxuICAgICAgICAgICAgICAgICAgICAuc2V0RGlzYWJsZWQodGhpcy5wbHVnaW4uc3luY1RpbWVsaW5lcylcbiAgICAgICAgICAgICAgICAgICAgLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGEudGltZWxpbmVUYWcgPSB2LnN0YXJ0c1dpdGgoXCIjXCIpID8gdiA6IGAjJHt2fWA7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIC5hZGRFeHRyYUJ1dHRvbigoYikgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5wbHVnaW4uY2FuVXNlVGltZWxpbmVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5zeW5jVGltZWxpbmVzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGIuZXh0cmFTZXR0aW5nc0VsLmRldGFjaCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmRhdGEuc3luY1RpbWVsaW5lcykge1xuICAgICAgICAgICAgICAgICAgICBiLnNldEljb24oXCJjaGVja21hcmtcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zZXRUb29sdGlwKFwiVW5zeW5jIGZyb20gVGltZWxpbmVzIFBsdWdpblwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLm9uQ2xpY2soYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5zeW5jVGltZWxpbmVzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idWlsZEV2ZW50cyhjb250YWluZXJFbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBiLnNldEljb24oXCJzeW5jXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAuc2V0VG9vbHRpcChcIlN5bmMgd2l0aCBUaW1lbGluZXMgUGx1Z2luXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAub25DbGljayhhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLnN5bmNUaW1lbGluZXMgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS50aW1lbGluZVRhZyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLmFwcC5wbHVnaW5zLmdldFBsdWdpbihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwib2JzaWRpYW4tdGltZWxpbmVzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKS5zZXR0aW5ncy50aW1lbGluZVRhZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1aWxkRXZlbnRzKGNvbnRhaW5lckVsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIGxhdW5jaENhbGVuZGFyQ3JlYXRvcihjYWxlbmRhcjogQ2FsZW5kYXIgPSBERUZBVUxUX0NBTEVOREFSKSB7XG4gICAgICAgIC8qIHRoaXMuY29udGFpbmVyRWwuZW1wdHkoKTsgKi9cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjbG9uZSA9IGNvcHkoY2FsZW5kYXIpO1xuXG4gICAgICAgICAgICBjb25zdCB0b3AgPVxuICAgICAgICAgICAgICAgIC0xICpcbiAgICAgICAgICAgICAgICBOdW1iZXIoXG4gICAgICAgICAgICAgICAgICAgIGdldENvbXB1dGVkU3R5bGUodGhpcy5jb250YWluZXJFbCkucGFkZGluZ1RvcC5yZXBsYWNlKFxuICAgICAgICAgICAgICAgICAgICAgICAgL1teXFxkXS9nLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJcIlxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY29uc3QgJGFwcCA9IG5ldyBDYWxlbmRhckNyZWF0b3Ioe1xuICAgICAgICAgICAgICAgIHRhcmdldDogdGhpcy5jb250YWluZXJFbCxcbiAgICAgICAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgICAgICAgICBjYWxlbmRhcjogY2xvbmUsXG4gICAgICAgICAgICAgICAgICAgIHBsdWdpbjogdGhpcy5wbHVnaW4sXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiB0aGlzLmNvbnRlbnRFbC5jbGllbnRXaWR0aCxcbiAgICAgICAgICAgICAgICAgICAgdG9wXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcigoKSA9PiB7XG4gICAgICAgICAgICAgICAgJGFwcC4kc2V0KHsgd2lkdGg6IHRoaXMuY29udGVudEVsLmNsaWVudFdpZHRoIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKHRoaXMuY29udGVudEVsKTtcbiAgICAgICAgICAgICRhcHAuJG9uKFxuICAgICAgICAgICAgICAgIFwiZXhpdFwiLFxuICAgICAgICAgICAgICAgIChldnQ6IEN1c3RvbUV2ZW50PHsgc2F2ZWQ6IGJvb2xlYW47IGNhbGVuZGFyOiBDYWxlbmRhciB9PikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3BsYXkoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV2dC5kZXRhaWwuc2F2ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGVuZGFyID0gY29weShldnQuZGV0YWlsLmNhbGVuZGFyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoY2FsZW5kYXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICRhcHAuJG9uKFwiZGVzdHJveVwiLCAoZXZ0OiBDdXN0b21FdmVudDxib29sZWFuPikgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzcGxheSgpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2dC5kZXRhaWwpO1xuICAgICAgICAgICAgICAgIGlmIChldnQuZGV0YWlsKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgY2FsZW5kYXIgPSBjb3B5KGNsb25lKTtcbiAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGNhbGVuZGFyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIHtcbiAgICBDYWxlbmRhcixcbiAgICBFcmEsXG4gICAgRXZlbnQsXG4gICAgRXZlbnRDYXRlZ29yeSxcbiAgICBMZWFwRGF5LFxuICAgIE1vbnRoLFxuICAgIE1vb24sXG4gICAgU3RhdGljQ2FsZW5kYXJEYXRhLFxuICAgIFdlZWtcbn0gZnJvbSBcIi4uLy4uL0B0eXBlc1wiO1xuaW1wb3J0IGRpc3RpbmN0IGZyb20gXCJkaXN0aW5jdC1jb2xvcnNcIjtcbmltcG9ydCB7IG5hbm9pZCB9IGZyb20gXCIuLi8uLi91dGlscy9mdW5jdGlvbnNcIjtcblxuaW1wb3J0IHsgZGVjb2RlIH0gZnJvbSBcImhlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEltcG9ydCB7XG4gICAgc3RhdGljIGltcG9ydChvYmplY3RzOiBhbnlbXSkge1xuICAgICAgICBjb25zdCBjYWxlbmRhcnM6IENhbGVuZGFyW10gPSBbXTtcbiAgICAgICAgZm9yIChsZXQgZGF0YSBvZiBvYmplY3RzKSB7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0gZGF0YS5uYW1lID8/IFwiSW1wb3J0ZWQgQ2FsZW5kYXJcIjtcbiAgICAgICAgICAgIGNvbnN0IHN0YXRpY19kYXRhID0gZGF0YS5zdGF0aWNfZGF0YTtcblxuICAgICAgICAgICAgaWYgKCFzdGF0aWNfZGF0YSkgY29udGludWU7XG5cbiAgICAgICAgICAgIGNvbnN0IHllYXJfZGF0YSA9IHN0YXRpY19kYXRhLnllYXJfZGF0YTtcblxuICAgICAgICAgICAgaWYgKCF5ZWFyX2RhdGEpIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICBjb25zdCBmaXJzdFdlZWtEYXkgPSB5ZWFyX2RhdGEuZmlyc3RfZGF5IC0gMSA/PyAwO1xuICAgICAgICAgICAgY29uc3Qgb3ZlcmZsb3cgPSB5ZWFyX2RhdGEub3ZlcmZsb3cgPz8gdHJ1ZTtcbiAgICAgICAgICAgIGNvbnN0IGdsb2JhbF93ZWVrID0geWVhcl9kYXRhLmdsb2JhbF93ZWVrO1xuXG4gICAgICAgICAgICBpZiAoIWdsb2JhbF93ZWVrKSBjb250aW51ZTtcblxuICAgICAgICAgICAgY29uc3Qgd2Vla2RheXM6IFdlZWsgPSBnbG9iYWxfd2Vlay5tYXAoKG46IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IG4sXG4gICAgICAgICAgICAgICAgICAgIGlkOiBuYW5vaWQoNilcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnN0IHRpbWVzcGFucyA9IHllYXJfZGF0YS50aW1lc3BhbnM7XG5cbiAgICAgICAgICAgIGlmICghdGltZXNwYW5zKSBjb250aW51ZTtcblxuICAgICAgICAgICAgLyogICAgICAgICAgICAgY29uc3QgbW9udGhfc3BhbnMgPSB0aW1lc3BhbnMuZmlsdGVyKCh0OiBhbnkpID0+IHQudHlwZSA9PSBcIm1vbnRoXCIpO1xuXG4gICAgICAgICAgICBpZiAoIW1vbnRoX3NwYW5zIHx8ICFtb250aF9zcGFucy5sZW5ndGgpIGNvbnRpbnVlOyAqL1xuXG4gICAgICAgICAgICBjb25zdCBtb250aHM6IE1vbnRoW10gPSB0aW1lc3BhbnMubWFwKChtOiBhbnkpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBkZWNvZGUobS5uYW1lKSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogbS50eXBlLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IG0ubGVuZ3RoLFxuICAgICAgICAgICAgICAgICAgICBpZDogbmFub2lkKDYpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjb25zdCBhdmdMZW5ndGggPSBtb250aHMucmVkdWNlKChhLCBiKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGIudHlwZSA9PSBcIm1vbnRoXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGEgKyBiLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGE7XG4gICAgICAgICAgICB9LCAwKTtcblxuICAgICAgICAgICAgY29uc3QgbGVhcERheXM6IExlYXBEYXlbXSA9IFtdO1xuXG4gICAgICAgICAgICBpZiAoXCJsZWFwX2RheXNcIiBpbiB5ZWFyX2RhdGEpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBsZWFwIG9mIHllYXJfZGF0YVtcImxlYXBfZGF5c1wiXSkge1xuICAgICAgICAgICAgICAgICAgICAvL2J1aWxkIGludGVydmFsXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGludGVydmFsOiBzdHJpbmdbXSA9IGxlYXAuaW50ZXJ2YWwuc3BsaXQoXCIsXCIpID8/IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiMVwiXG4gICAgICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGludGVydmFscyA9IGludGVydmFsLm1hcCgoaSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaWdub3JlID0gL1xcKy8udGVzdChpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4Y2x1c2l2ZSA9IC9cXCEvLnRlc3QoaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnRlcnZhbCA9IGkubWF0Y2goLyhcXGQrKS8pLmZpcnN0KCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWdub3JlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2x1c2l2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDogTnVtYmVyKGludGVydmFsKVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGxlYXBEYXlzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbGVhcC5uYW1lID8/IGBMZWFwIERheSAke2xlYXBEYXlzLmxlbmd0aCArIDF9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibGVhcGRheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWw6IGludGVydmFscyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzcGFuOiBsZWFwLnRpbWVzcGFuID8/IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRlcmNhbGFyeTogbGVhcC5pbnRlcmNhbGFyeSA/PyBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldDogbGVhcC5vZmZzZXQgPz8gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBuYW5vaWQoNilcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgbW9vbnM6IE1vb25bXSA9IFtdO1xuXG4gICAgICAgICAgICBpZiAoXCJtb29uc1wiIGluIHN0YXRpY19kYXRhKSB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgbW9vbiBvZiBzdGF0aWNfZGF0YVtcIm1vb25zXCJdKSB7XG4gICAgICAgICAgICAgICAgICAgIG1vb25zLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbW9vbi5uYW1lID8/IGBNb29uICR7bW9vbnMubGVuZ3RoICsgMX1gLFxuICAgICAgICAgICAgICAgICAgICAgICAgY3ljbGU6IE51bWJlcihtb29uLmN5Y2xlKSA/PyBhdmdMZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IG1vb24uc2hpZnQgPz8gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhY2VDb2xvcjogbW9vbi5jb2xvciA/PyBcIiNmZmZmZmZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiBtb29uLnNoYWRvd19jb2xvciA/PyBcIiMwMDAwMDBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBuYW5vaWQoNilcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBlcmFzOiBFcmFbXSA9IFtdO1xuICAgICAgICAgICAgaWYgKFwiZXJhc1wiIGluIHN0YXRpY19kYXRhKSB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgZXJhIG9mIHN0YXRpY19kYXRhW1wiZXJhc1wiXSkge1xuICAgICAgICAgICAgICAgICAgICBlcmFzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZXJhLm5hbWUgPz8gYEVyYSAke2VyYXMubGVuZ3RoICsgMX1gLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGVyYS5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcmEuZm9ybWF0dGluZyA/PyBcIlllYXIge3t5ZWFyfX0gLSB7e2VyYV9uYW1lfX1cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogZXJhLmRhdGU/LnllYXIgPz8gMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb250aDogZXJhLmRhdGU/LnRpbWVzcGFuID8/IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiBlcmEuZGF0ZT8uZGF5ID8/IDBcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgc3RhdGljRGF0YTogU3RhdGljQ2FsZW5kYXJEYXRhID0ge1xuICAgICAgICAgICAgICAgIGZpcnN0V2Vla0RheSxcbiAgICAgICAgICAgICAgICBvdmVyZmxvdyxcbiAgICAgICAgICAgICAgICB3ZWVrZGF5cyxcbiAgICAgICAgICAgICAgICBtb250aHMsXG4gICAgICAgICAgICAgICAgbW9vbnMsXG4gICAgICAgICAgICAgICAgbGVhcERheXMsXG4gICAgICAgICAgICAgICAgZXJhcyxcbiAgICAgICAgICAgICAgICBkaXNwbGF5TW9vbnM6IHRydWUsXG4gICAgICAgICAgICAgICAgaW5jcmVtZW50RGF5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkaXNwbGF5RGF5TnVtYmVyOiBmYWxzZVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgY29uc3QgZHluYW1pY0RhdGEgPSB7XG4gICAgICAgICAgICAgICAgeWVhcjogMSxcbiAgICAgICAgICAgICAgICBkYXk6IDEsXG4gICAgICAgICAgICAgICAgbW9udGg6IDBcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoZGF0YS5keW5hbWljX2RhdGEpIHtcbiAgICAgICAgICAgICAgICBkeW5hbWljRGF0YS55ZWFyID0gZGF0YS5keW5hbWljX2RhdGEueWVhciA/PyBkeW5hbWljRGF0YS55ZWFyO1xuICAgICAgICAgICAgICAgIGR5bmFtaWNEYXRhLmRheSA9IGRhdGEuZHluYW1pY19kYXRhLmRheSA/PyBkeW5hbWljRGF0YS5kYXk7XG4gICAgICAgICAgICAgICAgZHluYW1pY0RhdGEubW9udGggPVxuICAgICAgICAgICAgICAgICAgICBkYXRhLmR5bmFtaWNfZGF0YS5tb250aCA/PyBkeW5hbWljRGF0YS5tb250aDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgZXZlbnRzOiBFdmVudFtdID0gW107XG5cbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nQ2F0ZWdvcmllczogTWFwPHN0cmluZywgRXZlbnRDYXRlZ29yeT4gPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICBpZiAoXCJjYXRlZ29yaWVzXCIgaW4gZGF0YSkge1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGNhdGVnb3J5IG9mIGRhdGEuY2F0ZWdvcmllcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gY2F0ZWdvcnkubmFtZTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT8uc3BsaXQoXCIgXCIpLmpvaW4oXCItXCIpLnRvTG93ZXJDYXNlKCkgPz8gbmFub2lkKDYpO1xuICAgICAgICAgICAgICAgICAgICBsZXQgY29sb3IgPSBjYXRlZ29yeS5ldmVudF9zZXR0aW5ncy5jb2xvcjtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoIShjb2xvciBpbiBGYW50YXN5Q2FsZW5kYXJDb2xvck1hcCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yID0gY29sb3Iuc3BsaXQoXCItXCIpLmpvaW4oXCJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjYW52YXMgPSBjcmVhdGVFbChcImNhbnZhc1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gY29sb3I7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvciA9IGN0eC5maWxsU3R5bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYW52YXMuZGV0YWNoKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvciA9IEZhbnRhc3lDYWxlbmRhckNvbG9yTWFwW2NvbG9yXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0NhdGVnb3JpZXMuc2V0KGlkLCB7IG5hbWUsIGlkLCBjb2xvciB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBkYXRhLmV2ZW50cyAmJlxuICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoZGF0YS5ldmVudHMpICYmXG4gICAgICAgICAgICAgICAgZGF0YS5ldmVudHMubGVuZ3RoXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBldmVudCBvZiBkYXRhLmV2ZW50cykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlOiBhbnkgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5kYXRhICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5kYXRhLmRhdGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoZXZlbnQuZGF0YT8uZGF0ZSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LmRhdGEuZGF0ZS5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlLmRheSA9IGV2ZW50LmRhdGEuZGF0ZVsyXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGUubW9udGggPSBldmVudC5kYXRhLmRhdGVbMV07XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlLnllYXIgPSBldmVudC5kYXRhLmRhdGVbMF07XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5kYXRhICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5kYXRhLmNvbmRpdGlvbnMgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoZXZlbnQuZGF0YS5jb25kaXRpb25zKVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbmRpdGlvbnMgPSBldmVudC5kYXRhLmNvbmRpdGlvbnM7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHllYXIgPSBjb25kaXRpb25zLmZpbmQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjOiBhbnkpID0+IGNbMF0gPT09IFwiWWVhclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtb250aCA9IGNvbmRpdGlvbnMuZmluZChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGM6IGFueSkgPT4gY1swXSA9PT0gXCJNb250aFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXkgPSBjb25kaXRpb25zLmZpbmQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjOiBhbnkpID0+IGNbMF0gPT09IFwiRGF5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHllYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZS55ZWFyID0gTnVtYmVyKHllYXJbMl1bMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobW9udGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZS5tb250aCA9IE51bWJlcihtb250aFsyXVswXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZS5kYXkgPSBOdW1iZXIoZGF5WzJdWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgICAgICAgICAgICAgICAgIGlmIChldmVudC5kZXNjcmlwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVzY3JpcHRpb25FbCA9IGNyZWF0ZURpdigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25FbC5pbm5lckhUTUwgPSBldmVudC5kZXNjcmlwdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb25FbC50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGV2ZW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogZXZlbnQuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nQ2F0ZWdvcmllcy5nZXQoZXZlbnQuZXZlbnRfY2F0ZWdvcnlfaWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8uaWQgPz8gbnVsbFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGNvbG9ycyA9IGRpc3RpbmN0KHtcbiAgICAgICAgICAgICAgICBjb3VudDogZXhpc3RpbmdDYXRlZ29yaWVzLnNpemVcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBmb3IgKGxldCBpZCBvZiBleGlzdGluZ0NhdGVnb3JpZXMua2V5cygpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2F0ZWdvcnkgPSBleGlzdGluZ0NhdGVnb3JpZXMuZ2V0KGlkKTtcbiAgICAgICAgICAgICAgICBpZiAoY2F0ZWdvcnkuY29sb3IpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNhdGVnb3J5LmNvbG9yID0gY29sb3JzLnNoaWZ0KCkuaGV4KCk7XG4gICAgICAgICAgICAgICAgZXhpc3RpbmdDYXRlZ29yaWVzLnNldChpZCwgY2F0ZWdvcnkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBjYWxlbmRhckRhdGE6IENhbGVuZGFyID0ge1xuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IG51bGwsXG4gICAgICAgICAgICAgICAgc3RhdGljOiBzdGF0aWNEYXRhLFxuICAgICAgICAgICAgICAgIGN1cnJlbnQ6IGR5bmFtaWNEYXRhLFxuICAgICAgICAgICAgICAgIGV2ZW50cyxcbiAgICAgICAgICAgICAgICBpZDogbmFub2lkKDYpLFxuICAgICAgICAgICAgICAgIGNhdGVnb3JpZXM6IEFycmF5LmZyb20oZXhpc3RpbmdDYXRlZ29yaWVzLnZhbHVlcygpKVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgY2FsZW5kYXJzLnB1c2goY2FsZW5kYXJEYXRhKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2FsZW5kYXJzO1xuICAgIH1cbn1cblxuY29uc3QgRmFudGFzeUNhbGVuZGFyQ29sb3JNYXA6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gICAgXCJEYXJrLVNvbGlkXCI6IFwiIzAwMDAwMFwiLFxuICAgIFJlZDogXCIjOWIyYzJjXCIsXG4gICAgUGluazogXCIjODgwRTRGXCIsXG4gICAgUHVycGxlOiBcIiM0QTE0OENcIixcbiAgICBcIkRlZXAtUHVycGxlXCI6IFwiIzMxMUI5MlwiLFxuICAgIEJsdWU6IFwiIzBENDdBMVwiLFxuICAgIFwiTGlnaHQtQmx1ZVwiOiBcIiMwMjg4RDFcIixcbiAgICBDeWFuOiBcIiMwMDYwNjRcIixcbiAgICBUZWFsOiBcIiMwMDRENDBcIixcbiAgICBHcmVlbjogXCIjMkU3RDMyXCIsXG4gICAgXCJMaWdodC1HcmVlblwiOiBcIiM3Q0IzNDJcIixcbiAgICBMaW1lOiBcIiM5ZTlkMjRcIixcbiAgICBZZWxsb3c6IFwiI0ZGRUIzQlwiLFxuICAgIE9yYW5nZTogXCIjRkY5MTAwXCIsXG4gICAgXCJCbHVlLUdyZXlcIjogXCIjNDU1QTY0XCJcbn07XG4iLCAiaW1wb3J0IHR5cGUgeyBDYWxlbmRhciwgQ3VycmVudENhbGVuZGFyRGF0YSwgTGVhcERheSwgTW9udGggfSBmcm9tIFwiLi4vQHR5cGVzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBkYXlzQmV0d2VlbihkYXRlMTogRGF0ZSwgZGF0ZTI6IERhdGUpIHtcbiAgICBjb25zdCBkMSA9IHdpbmRvdy5tb21lbnQoZGF0ZTEpO1xuICAgIGNvbnN0IGQyID0gd2luZG93Lm1vbWVudChkYXRlMik7XG5cbiAgICBsZXQgZGF5cyA9IGQyLmRpZmYoZDEsIFwiZGF5c1wiKTtcblxuICAgIGlmIChcbiAgICAgICAgKGQxLnllYXIoKSA8IGQyLnllYXIoKSB8fCBkMS5kYXlPZlllYXIoKSA8IGQyLmRheU9mWWVhcigpKSAmJlxuICAgICAgICAoZDEuaG91cigpID4gZDIuaG91cigpIHx8XG4gICAgICAgICAgICBkMS5taW51dGUoKSA+IGQyLm1pbnV0ZSgpIHx8XG4gICAgICAgICAgICBkMS5zZWNvbmQoKSA+IGQyLnNlY29uZCgpIHx8XG4gICAgICAgICAgICBkMS5taWxsaXNlY29uZCgpID4gZDIubWlsbGlzZWNvbmQoKSlcbiAgICApIHtcbiAgICAgICAgZGF5cyArPSAxO1xuICAgIH1cbiAgICByZXR1cm4gZGF5cztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdyYXAodmFsdWU6IG51bWJlciwgc2l6ZTogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gKCh2YWx1ZSAlIHNpemUpICsgc2l6ZSkgJSBzaXplO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbmFub2lkKGxlbjogbnVtYmVyKSB7XG4gICAgcmV0dXJuIFwiSURfeHl4eXh5eHl4eXh5XCIucmVwbGFjZSgvW3h5XS9nLCBmdW5jdGlvbiAoYykge1xuICAgICAgICB2YXIgciA9IChNYXRoLnJhbmRvbSgpICogMTYpIHwgMCxcbiAgICAgICAgICAgIHYgPSBjID09IFwieFwiID8gciA6IChyICYgMHgzKSB8IDB4ODtcbiAgICAgICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpO1xuICAgIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SW50ZXJ2YWxEZXNjcmlwdGlvbihsZWFwZGF5OiBMZWFwRGF5KSB7XG4gICAgaWYgKCFsZWFwZGF5LmludGVydmFsPy5sZW5ndGgpIHJldHVybiBcIlwiO1xuICAgIGNvbnN0IGludGVydmFscyA9IGxlYXBkYXkuaW50ZXJ2YWwuc29ydCgoYSwgYikgPT4gYS5pbnRlcnZhbCAtIGIuaW50ZXJ2YWwpO1xuICAgIGxldCBkZXNjcmlwdGlvbiA9IFtdO1xuICAgIGZvciAobGV0IGludGVydmFsIG9mIGludGVydmFscykge1xuICAgICAgICBjb25zdCBsZW5ndGggPVxuICAgICAgICAgICAgaW50ZXJ2YWwuaW50ZXJ2YWwgKyAoaW50ZXJ2YWwuaWdub3JlID8gMCA6IGxlYXBkYXkub2Zmc2V0KTtcbiAgICAgICAgaWYgKGludGVydmFsLmV4Y2x1c2l2ZSkge1xuICAgICAgICAgICAgZGVzY3JpcHRpb24ucHVzaChgbm90IGV2ZXJ5ICR7b3JkaW5hbChsZW5ndGgpfSB5ZWFyYCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IGludGVydmFscy5pbmRleE9mKGludGVydmFsKTtcbiAgICAgICAgICAgIGNvbnN0IGFsc28gPSBpbmRleCA+IDAgJiYgaW50ZXJ2YWxzW2luZGV4IC0gMV0uZXhjbHVzaXZlO1xuICAgICAgICAgICAgZGVzY3JpcHRpb24ucHVzaChcbiAgICAgICAgICAgICAgICBgJHthbHNvID8gXCJhbHNvIFwiIDogXCJcIn1ldmVyeSAke29yZGluYWwobGVuZ3RoKX0geWVhcmBcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qgam9pbiA9IGRlc2NyaXB0aW9uLmpvaW4oXCIsIGJ1dCBcIik7XG4gICAgcmV0dXJuIGpvaW5bMF0udG9VcHBlckNhc2UoKSArIGpvaW4uc2xpY2UoMSkudG9Mb3dlckNhc2UoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9yZGluYWwoaTogbnVtYmVyKSB7XG4gICAgY29uc3QgaiA9IGkgJSAxMCxcbiAgICAgICAgayA9IGkgJSAxMDA7XG4gICAgaWYgKGogPT0gMSAmJiBrICE9IDExKSB7XG4gICAgICAgIHJldHVybiBpICsgXCJzdFwiO1xuICAgIH1cbiAgICBpZiAoaiA9PSAyICYmIGsgIT0gMTIpIHtcbiAgICAgICAgcmV0dXJuIGkgKyBcIm5kXCI7XG4gICAgfVxuICAgIGlmIChqID09IDMgJiYgayAhPSAxMykge1xuICAgICAgICByZXR1cm4gaSArIFwicmRcIjtcbiAgICB9XG4gICAgcmV0dXJuIGkgKyBcInRoXCI7XG59XG5leHBvcnQgZnVuY3Rpb24gZGF0ZVN0cmluZyhcbiAgICBkYXRlOiBDdXJyZW50Q2FsZW5kYXJEYXRhLFxuICAgIG1vbnRoczogTW9udGhbXSxcbiAgICBlbmQ/OiBDdXJyZW50Q2FsZW5kYXJEYXRhXG4pIHtcbiAgICBpZiAoIWRhdGUgfHwgZGF0ZS5kYXkgPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbiAgICBjb25zdCB7IGRheSwgbW9udGgsIHllYXIgfSA9IGRhdGU7XG4gICAgaWYgKG1vbnRoICE9IHVuZGVmaW5lZCAmJiAhbW9udGhzW21vbnRoXSkgcmV0dXJuIFwiSW52YWxpZCBEYXRlXCI7XG5cbiAgICBpZiAoZW5kICYmIGVuZC5kYXkpIHtcbiAgICAgICAgY29uc3QgZW5kRGF5ID0gZW5kLmRheTtcbiAgICAgICAgY29uc3QgZW5kTW9udGggPSBlbmQubW9udGg7XG4gICAgICAgIGNvbnN0IGVuZFllYXIgPSBlbmQueWVhcjtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBlbmRNb250aCAhPSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIGVuZFllYXIgIT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBtb250aCAhPSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHllYXIgIT0gdW5kZWZpbmVkXG4gICAgICAgICkge1xuICAgICAgICAgICAgaWYgKHllYXIgIT0gZW5kWWVhcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBgJHttb250aHNbbW9udGhdLm5hbWV9ICR7b3JkaW5hbChkYXkpfSwgJHt5ZWFyfSAtICR7XG4gICAgICAgICAgICAgICAgICAgIG1vbnRoc1tlbmRNb250aF0ubmFtZVxuICAgICAgICAgICAgICAgIH0gJHtvcmRpbmFsKGVuZERheSl9LCAke2VuZFllYXJ9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlbmRNb250aCA9PSBtb250aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBgJHttb250aHNbbW9udGhdLm5hbWV9ICR7b3JkaW5hbChkYXkpfS0ke29yZGluYWwoXG4gICAgICAgICAgICAgICAgICAgIGVuZERheVxuICAgICAgICAgICAgICAgICl9LCAke3llYXJ9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtb250aCAhPSB1bmRlZmluZWQgJiYgeWVhciAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7bW9udGhzW21vbnRoXS5uYW1lfSAke29yZGluYWwoZGF5KX0tJHtcbiAgICAgICAgICAgICAgICAgICAgbW9udGhzW2VuZE1vbnRoXS5uYW1lXG4gICAgICAgICAgICAgICAgfSAke29yZGluYWwoZW5kRGF5KX0sICR7eWVhcn1gO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1vbnRoICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBgJHttb250aHNbbW9udGhdLm5hbWV9ICR7b3JkaW5hbChkYXkpfS0ke1xuICAgICAgICAgICAgICAgICAgICBtb250aHNbZW5kTW9udGhdLm5hbWVcbiAgICAgICAgICAgICAgICB9ICR7b3JkaW5hbChlbmREYXkpfSBvZiBldmVyeSB5ZWFyYDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBgJHtvcmRpbmFsKGRheSl9LSR7b3JkaW5hbChlbmREYXkpfSBvZiBldmVyeSBtb250aGA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAobW9udGggIT0gdW5kZWZpbmVkICYmIHllYXIgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBgJHttb250aHNbbW9udGhdLm5hbWV9ICR7b3JkaW5hbChkYXkpfSwgJHt5ZWFyfWA7XG4gICAgfVxuICAgIGlmIChtb250aCAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGAke21vbnRoc1ttb250aF0ubmFtZX0gJHtvcmRpbmFsKGRheSl9IG9mIGV2ZXJ5IHllYXJgO1xuICAgIH1cbiAgICByZXR1cm4gYCR7b3JkaW5hbChkYXkpfSBvZiBldmVyeSBtb250aGA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkRGF5KGRheTogbnVtYmVyLCBjYWxlbmRhcjogQ2FsZW5kYXIpIHtcbiAgICBpZiAoZGF5ID09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoY2FsZW5kYXI/LmN1cnJlbnQ/Lm1vbnRoID09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoZGF5IDwgMSkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChcbiAgICAgICAgZGF5IDwgMSB8fFxuICAgICAgICBkYXkgPiBjYWxlbmRhcj8uc3RhdGljPy5tb250aHNbY2FsZW5kYXIuY3VycmVudD8ubW9udGhdPy5sZW5ndGggfHxcbiAgICAgICAgIWNhbGVuZGFyPy5zdGF0aWM/Lm1vbnRoc1tjYWxlbmRhci5jdXJyZW50Py5tb250aF0/Lmxlbmd0aFxuICAgIClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZE1vbnRoKG1vbnRoOiBudW1iZXIsIGNhbGVuZGFyOiBDYWxlbmRhcikge1xuICAgIGlmIChtb250aCA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFjYWxlbmRhcj8uc3RhdGljPy5tb250aHM/Lmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChtb250aCA8IDAgfHwgbW9udGggPj0gY2FsZW5kYXI/LnN0YXRpYz8ubW9udGhzPy5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRZZWFyKHllYXI6IG51bWJlciwgY2FsZW5kYXI6IENhbGVuZGFyKSB7XG4gICAgaWYgKHllYXIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh5ZWFyIDwgMSAmJiAhY2FsZW5kYXIuc3RhdGljPy51c2VDdXN0b21ZZWFycykgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChjYWxlbmRhcj8uc3RhdGljPy51c2VDdXN0b21ZZWFycykge1xuICAgICAgICBpZiAoIWNhbGVuZGFyPy5zdGF0aWM/LnllYXJzPy5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKHllYXIgPCAwIHx8IHllYXIgPj0gY2FsZW5kYXI/LnN0YXRpYz8ueWVhcnM/Lmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbiIsICJmdW5jdGlvbiBub29wKCkgeyB9XG5jb25zdCBpZGVudGl0eSA9IHggPT4geDtcbmZ1bmN0aW9uIGFzc2lnbih0YXIsIHNyYykge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBmb3IgKGNvbnN0IGsgaW4gc3JjKVxuICAgICAgICB0YXJba10gPSBzcmNba107XG4gICAgcmV0dXJuIHRhcjtcbn1cbmZ1bmN0aW9uIGlzX3Byb21pc2UodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdmFsdWUudGhlbiA9PT0gJ2Z1bmN0aW9uJztcbn1cbmZ1bmN0aW9uIGFkZF9sb2NhdGlvbihlbGVtZW50LCBmaWxlLCBsaW5lLCBjb2x1bW4sIGNoYXIpIHtcbiAgICBlbGVtZW50Ll9fc3ZlbHRlX21ldGEgPSB7XG4gICAgICAgIGxvYzogeyBmaWxlLCBsaW5lLCBjb2x1bW4sIGNoYXIgfVxuICAgIH07XG59XG5mdW5jdGlvbiBydW4oZm4pIHtcbiAgICByZXR1cm4gZm4oKTtcbn1cbmZ1bmN0aW9uIGJsYW5rX29iamVjdCgpIHtcbiAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZShudWxsKTtcbn1cbmZ1bmN0aW9uIHJ1bl9hbGwoZm5zKSB7XG4gICAgZm5zLmZvckVhY2gocnVuKTtcbn1cbmZ1bmN0aW9uIGlzX2Z1bmN0aW9uKHRoaW5nKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0aGluZyA9PT0gJ2Z1bmN0aW9uJztcbn1cbmZ1bmN0aW9uIHNhZmVfbm90X2VxdWFsKGEsIGIpIHtcbiAgICByZXR1cm4gYSAhPSBhID8gYiA9PSBiIDogYSAhPT0gYiB8fCAoKGEgJiYgdHlwZW9mIGEgPT09ICdvYmplY3QnKSB8fCB0eXBlb2YgYSA9PT0gJ2Z1bmN0aW9uJyk7XG59XG5sZXQgc3JjX3VybF9lcXVhbF9hbmNob3I7XG5mdW5jdGlvbiBzcmNfdXJsX2VxdWFsKGVsZW1lbnRfc3JjLCB1cmwpIHtcbiAgICBpZiAoIXNyY191cmxfZXF1YWxfYW5jaG9yKSB7XG4gICAgICAgIHNyY191cmxfZXF1YWxfYW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgIH1cbiAgICBzcmNfdXJsX2VxdWFsX2FuY2hvci5ocmVmID0gdXJsO1xuICAgIHJldHVybiBlbGVtZW50X3NyYyA9PT0gc3JjX3VybF9lcXVhbF9hbmNob3IuaHJlZjtcbn1cbmZ1bmN0aW9uIG5vdF9lcXVhbChhLCBiKSB7XG4gICAgcmV0dXJuIGEgIT0gYSA/IGIgPT0gYiA6IGEgIT09IGI7XG59XG5mdW5jdGlvbiBpc19lbXB0eShvYmopIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5sZW5ndGggPT09IDA7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZV9zdG9yZShzdG9yZSwgbmFtZSkge1xuICAgIGlmIChzdG9yZSAhPSBudWxsICYmIHR5cGVvZiBzdG9yZS5zdWJzY3JpYmUgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAnJHtuYW1lfScgaXMgbm90IGEgc3RvcmUgd2l0aCBhICdzdWJzY3JpYmUnIG1ldGhvZGApO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHN1YnNjcmliZShzdG9yZSwgLi4uY2FsbGJhY2tzKSB7XG4gICAgaWYgKHN0b3JlID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfVxuICAgIGNvbnN0IHVuc3ViID0gc3RvcmUuc3Vic2NyaWJlKC4uLmNhbGxiYWNrcyk7XG4gICAgcmV0dXJuIHVuc3ViLnVuc3Vic2NyaWJlID8gKCkgPT4gdW5zdWIudW5zdWJzY3JpYmUoKSA6IHVuc3ViO1xufVxuZnVuY3Rpb24gZ2V0X3N0b3JlX3ZhbHVlKHN0b3JlKSB7XG4gICAgbGV0IHZhbHVlO1xuICAgIHN1YnNjcmliZShzdG9yZSwgXyA9PiB2YWx1ZSA9IF8pKCk7XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuZnVuY3Rpb24gY29tcG9uZW50X3N1YnNjcmliZShjb21wb25lbnQsIHN0b3JlLCBjYWxsYmFjaykge1xuICAgIGNvbXBvbmVudC4kJC5vbl9kZXN0cm95LnB1c2goc3Vic2NyaWJlKHN0b3JlLCBjYWxsYmFjaykpO1xufVxuZnVuY3Rpb24gY3JlYXRlX3Nsb3QoZGVmaW5pdGlvbiwgY3R4LCAkJHNjb3BlLCBmbikge1xuICAgIGlmIChkZWZpbml0aW9uKSB7XG4gICAgICAgIGNvbnN0IHNsb3RfY3R4ID0gZ2V0X3Nsb3RfY29udGV4dChkZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIGZuKTtcbiAgICAgICAgcmV0dXJuIGRlZmluaXRpb25bMF0oc2xvdF9jdHgpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGdldF9zbG90X2NvbnRleHQoZGVmaW5pdGlvbiwgY3R4LCAkJHNjb3BlLCBmbikge1xuICAgIHJldHVybiBkZWZpbml0aW9uWzFdICYmIGZuXG4gICAgICAgID8gYXNzaWduKCQkc2NvcGUuY3R4LnNsaWNlKCksIGRlZmluaXRpb25bMV0oZm4oY3R4KSkpXG4gICAgICAgIDogJCRzY29wZS5jdHg7XG59XG5mdW5jdGlvbiBnZXRfc2xvdF9jaGFuZ2VzKGRlZmluaXRpb24sICQkc2NvcGUsIGRpcnR5LCBmbikge1xuICAgIGlmIChkZWZpbml0aW9uWzJdICYmIGZuKSB7XG4gICAgICAgIGNvbnN0IGxldHMgPSBkZWZpbml0aW9uWzJdKGZuKGRpcnR5KSk7XG4gICAgICAgIGlmICgkJHNjb3BlLmRpcnR5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBsZXRzO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgbGV0cyA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lcmdlZCA9IFtdO1xuICAgICAgICAgICAgY29uc3QgbGVuID0gTWF0aC5tYXgoJCRzY29wZS5kaXJ0eS5sZW5ndGgsIGxldHMubGVuZ3RoKTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICAgICAgICAgICAgICBtZXJnZWRbaV0gPSAkJHNjb3BlLmRpcnR5W2ldIHwgbGV0c1tpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBtZXJnZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICQkc2NvcGUuZGlydHkgfCBsZXRzO1xuICAgIH1cbiAgICByZXR1cm4gJCRzY29wZS5kaXJ0eTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZV9zbG90X2Jhc2Uoc2xvdCwgc2xvdF9kZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIHNsb3RfY2hhbmdlcywgZ2V0X3Nsb3RfY29udGV4dF9mbikge1xuICAgIGlmIChzbG90X2NoYW5nZXMpIHtcbiAgICAgICAgY29uc3Qgc2xvdF9jb250ZXh0ID0gZ2V0X3Nsb3RfY29udGV4dChzbG90X2RlZmluaXRpb24sIGN0eCwgJCRzY29wZSwgZ2V0X3Nsb3RfY29udGV4dF9mbik7XG4gICAgICAgIHNsb3QucChzbG90X2NvbnRleHQsIHNsb3RfY2hhbmdlcyk7XG4gICAgfVxufVxuZnVuY3Rpb24gdXBkYXRlX3Nsb3Qoc2xvdCwgc2xvdF9kZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIGRpcnR5LCBnZXRfc2xvdF9jaGFuZ2VzX2ZuLCBnZXRfc2xvdF9jb250ZXh0X2ZuKSB7XG4gICAgY29uc3Qgc2xvdF9jaGFuZ2VzID0gZ2V0X3Nsb3RfY2hhbmdlcyhzbG90X2RlZmluaXRpb24sICQkc2NvcGUsIGRpcnR5LCBnZXRfc2xvdF9jaGFuZ2VzX2ZuKTtcbiAgICB1cGRhdGVfc2xvdF9iYXNlKHNsb3QsIHNsb3RfZGVmaW5pdGlvbiwgY3R4LCAkJHNjb3BlLCBzbG90X2NoYW5nZXMsIGdldF9zbG90X2NvbnRleHRfZm4pO1xufVxuZnVuY3Rpb24gZ2V0X2FsbF9kaXJ0eV9mcm9tX3Njb3BlKCQkc2NvcGUpIHtcbiAgICBpZiAoJCRzY29wZS5jdHgubGVuZ3RoID4gMzIpIHtcbiAgICAgICAgY29uc3QgZGlydHkgPSBbXTtcbiAgICAgICAgY29uc3QgbGVuZ3RoID0gJCRzY29wZS5jdHgubGVuZ3RoIC8gMzI7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGRpcnR5W2ldID0gLTE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRpcnR5O1xuICAgIH1cbiAgICByZXR1cm4gLTE7XG59XG5mdW5jdGlvbiBleGNsdWRlX2ludGVybmFsX3Byb3BzKHByb3BzKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgZm9yIChjb25zdCBrIGluIHByb3BzKVxuICAgICAgICBpZiAoa1swXSAhPT0gJyQnKVxuICAgICAgICAgICAgcmVzdWx0W2tdID0gcHJvcHNba107XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGNvbXB1dGVfcmVzdF9wcm9wcyhwcm9wcywga2V5cykge1xuICAgIGNvbnN0IHJlc3QgPSB7fTtcbiAgICBrZXlzID0gbmV3IFNldChrZXlzKTtcbiAgICBmb3IgKGNvbnN0IGsgaW4gcHJvcHMpXG4gICAgICAgIGlmICgha2V5cy5oYXMoaykgJiYga1swXSAhPT0gJyQnKVxuICAgICAgICAgICAgcmVzdFtrXSA9IHByb3BzW2tdO1xuICAgIHJldHVybiByZXN0O1xufVxuZnVuY3Rpb24gY29tcHV0ZV9zbG90cyhzbG90cykge1xuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIHNsb3RzKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG9uY2UoZm4pIHtcbiAgICBsZXQgcmFuID0gZmFsc2U7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgIGlmIChyYW4pXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHJhbiA9IHRydWU7XG4gICAgICAgIGZuLmNhbGwodGhpcywgLi4uYXJncyk7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIG51bGxfdG9fZW1wdHkodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/ICcnIDogdmFsdWU7XG59XG5mdW5jdGlvbiBzZXRfc3RvcmVfdmFsdWUoc3RvcmUsIHJldCwgdmFsdWUpIHtcbiAgICBzdG9yZS5zZXQodmFsdWUpO1xuICAgIHJldHVybiByZXQ7XG59XG5jb25zdCBoYXNfcHJvcCA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApO1xuZnVuY3Rpb24gYWN0aW9uX2Rlc3Ryb3llcihhY3Rpb25fcmVzdWx0KSB7XG4gICAgcmV0dXJuIGFjdGlvbl9yZXN1bHQgJiYgaXNfZnVuY3Rpb24oYWN0aW9uX3Jlc3VsdC5kZXN0cm95KSA/IGFjdGlvbl9yZXN1bHQuZGVzdHJveSA6IG5vb3A7XG59XG5cbmNvbnN0IGlzX2NsaWVudCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnO1xubGV0IG5vdyA9IGlzX2NsaWVudFxuICAgID8gKCkgPT4gd2luZG93LnBlcmZvcm1hbmNlLm5vdygpXG4gICAgOiAoKSA9PiBEYXRlLm5vdygpO1xubGV0IHJhZiA9IGlzX2NsaWVudCA/IGNiID0+IHJlcXVlc3RBbmltYXRpb25GcmFtZShjYikgOiBub29wO1xuLy8gdXNlZCBpbnRlcm5hbGx5IGZvciB0ZXN0aW5nXG5mdW5jdGlvbiBzZXRfbm93KGZuKSB7XG4gICAgbm93ID0gZm47XG59XG5mdW5jdGlvbiBzZXRfcmFmKGZuKSB7XG4gICAgcmFmID0gZm47XG59XG5cbmNvbnN0IHRhc2tzID0gbmV3IFNldCgpO1xuZnVuY3Rpb24gcnVuX3Rhc2tzKG5vdykge1xuICAgIHRhc2tzLmZvckVhY2godGFzayA9PiB7XG4gICAgICAgIGlmICghdGFzay5jKG5vdykpIHtcbiAgICAgICAgICAgIHRhc2tzLmRlbGV0ZSh0YXNrKTtcbiAgICAgICAgICAgIHRhc2suZigpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHRhc2tzLnNpemUgIT09IDApXG4gICAgICAgIHJhZihydW5fdGFza3MpO1xufVxuLyoqXG4gKiBGb3IgdGVzdGluZyBwdXJwb3NlcyBvbmx5IVxuICovXG5mdW5jdGlvbiBjbGVhcl9sb29wcygpIHtcbiAgICB0YXNrcy5jbGVhcigpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHRhc2sgdGhhdCBydW5zIG9uIGVhY2ggcmFmIGZyYW1lXG4gKiB1bnRpbCBpdCByZXR1cm5zIGEgZmFsc3kgdmFsdWUgb3IgaXMgYWJvcnRlZFxuICovXG5mdW5jdGlvbiBsb29wKGNhbGxiYWNrKSB7XG4gICAgbGV0IHRhc2s7XG4gICAgaWYgKHRhc2tzLnNpemUgPT09IDApXG4gICAgICAgIHJhZihydW5fdGFza3MpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb21pc2U6IG5ldyBQcm9taXNlKGZ1bGZpbGwgPT4ge1xuICAgICAgICAgICAgdGFza3MuYWRkKHRhc2sgPSB7IGM6IGNhbGxiYWNrLCBmOiBmdWxmaWxsIH0pO1xuICAgICAgICB9KSxcbiAgICAgICAgYWJvcnQoKSB7XG4gICAgICAgICAgICB0YXNrcy5kZWxldGUodGFzayk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyBUcmFjayB3aGljaCBub2RlcyBhcmUgY2xhaW1lZCBkdXJpbmcgaHlkcmF0aW9uLiBVbmNsYWltZWQgbm9kZXMgY2FuIHRoZW4gYmUgcmVtb3ZlZCBmcm9tIHRoZSBET01cbi8vIGF0IHRoZSBlbmQgb2YgaHlkcmF0aW9uIHdpdGhvdXQgdG91Y2hpbmcgdGhlIHJlbWFpbmluZyBub2Rlcy5cbmxldCBpc19oeWRyYXRpbmcgPSBmYWxzZTtcbmZ1bmN0aW9uIHN0YXJ0X2h5ZHJhdGluZygpIHtcbiAgICBpc19oeWRyYXRpbmcgPSB0cnVlO1xufVxuZnVuY3Rpb24gZW5kX2h5ZHJhdGluZygpIHtcbiAgICBpc19oeWRyYXRpbmcgPSBmYWxzZTtcbn1cbmZ1bmN0aW9uIHVwcGVyX2JvdW5kKGxvdywgaGlnaCwga2V5LCB2YWx1ZSkge1xuICAgIC8vIFJldHVybiBmaXJzdCBpbmRleCBvZiB2YWx1ZSBsYXJnZXIgdGhhbiBpbnB1dCB2YWx1ZSBpbiB0aGUgcmFuZ2UgW2xvdywgaGlnaClcbiAgICB3aGlsZSAobG93IDwgaGlnaCkge1xuICAgICAgICBjb25zdCBtaWQgPSBsb3cgKyAoKGhpZ2ggLSBsb3cpID4+IDEpO1xuICAgICAgICBpZiAoa2V5KG1pZCkgPD0gdmFsdWUpIHtcbiAgICAgICAgICAgIGxvdyA9IG1pZCArIDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBoaWdoID0gbWlkO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBsb3c7XG59XG5mdW5jdGlvbiBpbml0X2h5ZHJhdGUodGFyZ2V0KSB7XG4gICAgaWYgKHRhcmdldC5oeWRyYXRlX2luaXQpXG4gICAgICAgIHJldHVybjtcbiAgICB0YXJnZXQuaHlkcmF0ZV9pbml0ID0gdHJ1ZTtcbiAgICAvLyBXZSBrbm93IHRoYXQgYWxsIGNoaWxkcmVuIGhhdmUgY2xhaW1fb3JkZXIgdmFsdWVzIHNpbmNlIHRoZSB1bmNsYWltZWQgaGF2ZSBiZWVuIGRldGFjaGVkIGlmIHRhcmdldCBpcyBub3QgPGhlYWQ+XG4gICAgbGV0IGNoaWxkcmVuID0gdGFyZ2V0LmNoaWxkTm9kZXM7XG4gICAgLy8gSWYgdGFyZ2V0IGlzIDxoZWFkPiwgdGhlcmUgbWF5IGJlIGNoaWxkcmVuIHdpdGhvdXQgY2xhaW1fb3JkZXJcbiAgICBpZiAodGFyZ2V0Lm5vZGVOYW1lID09PSAnSEVBRCcpIHtcbiAgICAgICAgY29uc3QgbXlDaGlsZHJlbiA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBub2RlID0gY2hpbGRyZW5baV07XG4gICAgICAgICAgICBpZiAobm9kZS5jbGFpbV9vcmRlciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgbXlDaGlsZHJlbi5wdXNoKG5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNoaWxkcmVuID0gbXlDaGlsZHJlbjtcbiAgICB9XG4gICAgLypcbiAgICAqIFJlb3JkZXIgY2xhaW1lZCBjaGlsZHJlbiBvcHRpbWFsbHkuXG4gICAgKiBXZSBjYW4gcmVvcmRlciBjbGFpbWVkIGNoaWxkcmVuIG9wdGltYWxseSBieSBmaW5kaW5nIHRoZSBsb25nZXN0IHN1YnNlcXVlbmNlIG9mXG4gICAgKiBub2RlcyB0aGF0IGFyZSBhbHJlYWR5IGNsYWltZWQgaW4gb3JkZXIgYW5kIG9ubHkgbW92aW5nIHRoZSByZXN0LiBUaGUgbG9uZ2VzdFxuICAgICogc3Vic2VxdWVuY2Ugc3Vic2VxdWVuY2Ugb2Ygbm9kZXMgdGhhdCBhcmUgY2xhaW1lZCBpbiBvcmRlciBjYW4gYmUgZm91bmQgYnlcbiAgICAqIGNvbXB1dGluZyB0aGUgbG9uZ2VzdCBpbmNyZWFzaW5nIHN1YnNlcXVlbmNlIG9mIC5jbGFpbV9vcmRlciB2YWx1ZXMuXG4gICAgKlxuICAgICogVGhpcyBhbGdvcml0aG0gaXMgb3B0aW1hbCBpbiBnZW5lcmF0aW5nIHRoZSBsZWFzdCBhbW91bnQgb2YgcmVvcmRlciBvcGVyYXRpb25zXG4gICAgKiBwb3NzaWJsZS5cbiAgICAqXG4gICAgKiBQcm9vZjpcbiAgICAqIFdlIGtub3cgdGhhdCwgZ2l2ZW4gYSBzZXQgb2YgcmVvcmRlcmluZyBvcGVyYXRpb25zLCB0aGUgbm9kZXMgdGhhdCBkbyBub3QgbW92ZVxuICAgICogYWx3YXlzIGZvcm0gYW4gaW5jcmVhc2luZyBzdWJzZXF1ZW5jZSwgc2luY2UgdGhleSBkbyBub3QgbW92ZSBhbW9uZyBlYWNoIG90aGVyXG4gICAgKiBtZWFuaW5nIHRoYXQgdGhleSBtdXN0IGJlIGFscmVhZHkgb3JkZXJlZCBhbW9uZyBlYWNoIG90aGVyLiBUaHVzLCB0aGUgbWF4aW1hbFxuICAgICogc2V0IG9mIG5vZGVzIHRoYXQgZG8gbm90IG1vdmUgZm9ybSBhIGxvbmdlc3QgaW5jcmVhc2luZyBzdWJzZXF1ZW5jZS5cbiAgICAqL1xuICAgIC8vIENvbXB1dGUgbG9uZ2VzdCBpbmNyZWFzaW5nIHN1YnNlcXVlbmNlXG4gICAgLy8gbTogc3Vic2VxdWVuY2UgbGVuZ3RoIGogPT4gaW5kZXggayBvZiBzbWFsbGVzdCB2YWx1ZSB0aGF0IGVuZHMgYW4gaW5jcmVhc2luZyBzdWJzZXF1ZW5jZSBvZiBsZW5ndGggalxuICAgIGNvbnN0IG0gPSBuZXcgSW50MzJBcnJheShjaGlsZHJlbi5sZW5ndGggKyAxKTtcbiAgICAvLyBQcmVkZWNlc3NvciBpbmRpY2VzICsgMVxuICAgIGNvbnN0IHAgPSBuZXcgSW50MzJBcnJheShjaGlsZHJlbi5sZW5ndGgpO1xuICAgIG1bMF0gPSAtMTtcbiAgICBsZXQgbG9uZ2VzdCA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBjdXJyZW50ID0gY2hpbGRyZW5baV0uY2xhaW1fb3JkZXI7XG4gICAgICAgIC8vIEZpbmQgdGhlIGxhcmdlc3Qgc3Vic2VxdWVuY2UgbGVuZ3RoIHN1Y2ggdGhhdCBpdCBlbmRzIGluIGEgdmFsdWUgbGVzcyB0aGFuIG91ciBjdXJyZW50IHZhbHVlXG4gICAgICAgIC8vIHVwcGVyX2JvdW5kIHJldHVybnMgZmlyc3QgZ3JlYXRlciB2YWx1ZSwgc28gd2Ugc3VidHJhY3Qgb25lXG4gICAgICAgIC8vIHdpdGggZmFzdCBwYXRoIGZvciB3aGVuIHdlIGFyZSBvbiB0aGUgY3VycmVudCBsb25nZXN0IHN1YnNlcXVlbmNlXG4gICAgICAgIGNvbnN0IHNlcUxlbiA9ICgobG9uZ2VzdCA+IDAgJiYgY2hpbGRyZW5bbVtsb25nZXN0XV0uY2xhaW1fb3JkZXIgPD0gY3VycmVudCkgPyBsb25nZXN0ICsgMSA6IHVwcGVyX2JvdW5kKDEsIGxvbmdlc3QsIGlkeCA9PiBjaGlsZHJlblttW2lkeF1dLmNsYWltX29yZGVyLCBjdXJyZW50KSkgLSAxO1xuICAgICAgICBwW2ldID0gbVtzZXFMZW5dICsgMTtcbiAgICAgICAgY29uc3QgbmV3TGVuID0gc2VxTGVuICsgMTtcbiAgICAgICAgLy8gV2UgY2FuIGd1YXJhbnRlZSB0aGF0IGN1cnJlbnQgaXMgdGhlIHNtYWxsZXN0IHZhbHVlLiBPdGhlcndpc2UsIHdlIHdvdWxkIGhhdmUgZ2VuZXJhdGVkIGEgbG9uZ2VyIHNlcXVlbmNlLlxuICAgICAgICBtW25ld0xlbl0gPSBpO1xuICAgICAgICBsb25nZXN0ID0gTWF0aC5tYXgobmV3TGVuLCBsb25nZXN0KTtcbiAgICB9XG4gICAgLy8gVGhlIGxvbmdlc3QgaW5jcmVhc2luZyBzdWJzZXF1ZW5jZSBvZiBub2RlcyAoaW5pdGlhbGx5IHJldmVyc2VkKVxuICAgIGNvbnN0IGxpcyA9IFtdO1xuICAgIC8vIFRoZSByZXN0IG9mIHRoZSBub2Rlcywgbm9kZXMgdGhhdCB3aWxsIGJlIG1vdmVkXG4gICAgY29uc3QgdG9Nb3ZlID0gW107XG4gICAgbGV0IGxhc3QgPSBjaGlsZHJlbi5sZW5ndGggLSAxO1xuICAgIGZvciAobGV0IGN1ciA9IG1bbG9uZ2VzdF0gKyAxOyBjdXIgIT0gMDsgY3VyID0gcFtjdXIgLSAxXSkge1xuICAgICAgICBsaXMucHVzaChjaGlsZHJlbltjdXIgLSAxXSk7XG4gICAgICAgIGZvciAoOyBsYXN0ID49IGN1cjsgbGFzdC0tKSB7XG4gICAgICAgICAgICB0b01vdmUucHVzaChjaGlsZHJlbltsYXN0XSk7XG4gICAgICAgIH1cbiAgICAgICAgbGFzdC0tO1xuICAgIH1cbiAgICBmb3IgKDsgbGFzdCA+PSAwOyBsYXN0LS0pIHtcbiAgICAgICAgdG9Nb3ZlLnB1c2goY2hpbGRyZW5bbGFzdF0pO1xuICAgIH1cbiAgICBsaXMucmV2ZXJzZSgpO1xuICAgIC8vIFdlIHNvcnQgdGhlIG5vZGVzIGJlaW5nIG1vdmVkIHRvIGd1YXJhbnRlZSB0aGF0IHRoZWlyIGluc2VydGlvbiBvcmRlciBtYXRjaGVzIHRoZSBjbGFpbSBvcmRlclxuICAgIHRvTW92ZS5zb3J0KChhLCBiKSA9PiBhLmNsYWltX29yZGVyIC0gYi5jbGFpbV9vcmRlcik7XG4gICAgLy8gRmluYWxseSwgd2UgbW92ZSB0aGUgbm9kZXNcbiAgICBmb3IgKGxldCBpID0gMCwgaiA9IDA7IGkgPCB0b01vdmUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgd2hpbGUgKGogPCBsaXMubGVuZ3RoICYmIHRvTW92ZVtpXS5jbGFpbV9vcmRlciA+PSBsaXNbal0uY2xhaW1fb3JkZXIpIHtcbiAgICAgICAgICAgIGorKztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhbmNob3IgPSBqIDwgbGlzLmxlbmd0aCA/IGxpc1tqXSA6IG51bGw7XG4gICAgICAgIHRhcmdldC5pbnNlcnRCZWZvcmUodG9Nb3ZlW2ldLCBhbmNob3IpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGFwcGVuZCh0YXJnZXQsIG5vZGUpIHtcbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQobm9kZSk7XG59XG5mdW5jdGlvbiBhcHBlbmRfc3R5bGVzKHRhcmdldCwgc3R5bGVfc2hlZXRfaWQsIHN0eWxlcykge1xuICAgIGNvbnN0IGFwcGVuZF9zdHlsZXNfdG8gPSBnZXRfcm9vdF9mb3Jfc3R5bGUodGFyZ2V0KTtcbiAgICBpZiAoIWFwcGVuZF9zdHlsZXNfdG8uZ2V0RWxlbWVudEJ5SWQoc3R5bGVfc2hlZXRfaWQpKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlID0gZWxlbWVudCgnc3R5bGUnKTtcbiAgICAgICAgc3R5bGUuaWQgPSBzdHlsZV9zaGVldF9pZDtcbiAgICAgICAgc3R5bGUudGV4dENvbnRlbnQgPSBzdHlsZXM7XG4gICAgICAgIGFwcGVuZF9zdHlsZXNoZWV0KGFwcGVuZF9zdHlsZXNfdG8sIHN0eWxlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRfcm9vdF9mb3Jfc3R5bGUobm9kZSkge1xuICAgIGlmICghbm9kZSlcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50O1xuICAgIGNvbnN0IHJvb3QgPSBub2RlLmdldFJvb3ROb2RlID8gbm9kZS5nZXRSb290Tm9kZSgpIDogbm9kZS5vd25lckRvY3VtZW50O1xuICAgIGlmIChyb290ICYmIHJvb3QuaG9zdCkge1xuICAgICAgICByZXR1cm4gcm9vdDtcbiAgICB9XG4gICAgcmV0dXJuIG5vZGUub3duZXJEb2N1bWVudDtcbn1cbmZ1bmN0aW9uIGFwcGVuZF9lbXB0eV9zdHlsZXNoZWV0KG5vZGUpIHtcbiAgICBjb25zdCBzdHlsZV9lbGVtZW50ID0gZWxlbWVudCgnc3R5bGUnKTtcbiAgICBhcHBlbmRfc3R5bGVzaGVldChnZXRfcm9vdF9mb3Jfc3R5bGUobm9kZSksIHN0eWxlX2VsZW1lbnQpO1xuICAgIHJldHVybiBzdHlsZV9lbGVtZW50LnNoZWV0O1xufVxuZnVuY3Rpb24gYXBwZW5kX3N0eWxlc2hlZXQobm9kZSwgc3R5bGUpIHtcbiAgICBhcHBlbmQobm9kZS5oZWFkIHx8IG5vZGUsIHN0eWxlKTtcbn1cbmZ1bmN0aW9uIGFwcGVuZF9oeWRyYXRpb24odGFyZ2V0LCBub2RlKSB7XG4gICAgaWYgKGlzX2h5ZHJhdGluZykge1xuICAgICAgICBpbml0X2h5ZHJhdGUodGFyZ2V0KTtcbiAgICAgICAgaWYgKCh0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCA9PT0gdW5kZWZpbmVkKSB8fCAoKHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkICE9PSBudWxsKSAmJiAodGFyZ2V0LmFjdHVhbF9lbmRfY2hpbGQucGFyZW50RWxlbWVudCAhPT0gdGFyZ2V0KSkpIHtcbiAgICAgICAgICAgIHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkID0gdGFyZ2V0LmZpcnN0Q2hpbGQ7XG4gICAgICAgIH1cbiAgICAgICAgLy8gU2tpcCBub2RlcyBvZiB1bmRlZmluZWQgb3JkZXJpbmdcbiAgICAgICAgd2hpbGUgKCh0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCAhPT0gbnVsbCkgJiYgKHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkLmNsYWltX29yZGVyID09PSB1bmRlZmluZWQpKSB7XG4gICAgICAgICAgICB0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCA9IHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkLm5leHRTaWJsaW5nO1xuICAgICAgICB9XG4gICAgICAgIGlmIChub2RlICE9PSB0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCkge1xuICAgICAgICAgICAgLy8gV2Ugb25seSBpbnNlcnQgaWYgdGhlIG9yZGVyaW5nIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUgbW9kaWZpZWQgb3IgdGhlIHBhcmVudCBub2RlIGlzIG5vdCB0YXJnZXRcbiAgICAgICAgICAgIGlmIChub2RlLmNsYWltX29yZGVyICE9PSB1bmRlZmluZWQgfHwgbm9kZS5wYXJlbnROb2RlICE9PSB0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXQuaW5zZXJ0QmVmb3JlKG5vZGUsIHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChub2RlLnBhcmVudE5vZGUgIT09IHRhcmdldCB8fCBub2RlLm5leHRTaWJsaW5nICE9PSBudWxsKSB7XG4gICAgICAgIHRhcmdldC5hcHBlbmRDaGlsZChub2RlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBpbnNlcnQodGFyZ2V0LCBub2RlLCBhbmNob3IpIHtcbiAgICB0YXJnZXQuaW5zZXJ0QmVmb3JlKG5vZGUsIGFuY2hvciB8fCBudWxsKTtcbn1cbmZ1bmN0aW9uIGluc2VydF9oeWRyYXRpb24odGFyZ2V0LCBub2RlLCBhbmNob3IpIHtcbiAgICBpZiAoaXNfaHlkcmF0aW5nICYmICFhbmNob3IpIHtcbiAgICAgICAgYXBwZW5kX2h5ZHJhdGlvbih0YXJnZXQsIG5vZGUpO1xuICAgIH1cbiAgICBlbHNlIGlmIChub2RlLnBhcmVudE5vZGUgIT09IHRhcmdldCB8fCBub2RlLm5leHRTaWJsaW5nICE9IGFuY2hvcikge1xuICAgICAgICB0YXJnZXQuaW5zZXJ0QmVmb3JlKG5vZGUsIGFuY2hvciB8fCBudWxsKTtcbiAgICB9XG59XG5mdW5jdGlvbiBkZXRhY2gobm9kZSkge1xuICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbn1cbmZ1bmN0aW9uIGRlc3Ryb3lfZWFjaChpdGVyYXRpb25zLCBkZXRhY2hpbmcpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGl0ZXJhdGlvbnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKGl0ZXJhdGlvbnNbaV0pXG4gICAgICAgICAgICBpdGVyYXRpb25zW2ldLmQoZGV0YWNoaW5nKTtcbiAgICB9XG59XG5mdW5jdGlvbiBlbGVtZW50KG5hbWUpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKTtcbn1cbmZ1bmN0aW9uIGVsZW1lbnRfaXMobmFtZSwgaXMpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lLCB7IGlzIH0pO1xufVxuZnVuY3Rpb24gb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllcyhvYmosIGV4Y2x1ZGUpIHtcbiAgICBjb25zdCB0YXJnZXQgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGsgaW4gb2JqKSB7XG4gICAgICAgIGlmIChoYXNfcHJvcChvYmosIGspXG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICAmJiBleGNsdWRlLmluZGV4T2YoaykgPT09IC0xKSB7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICB0YXJnZXRba10gPSBvYmpba107XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmZ1bmN0aW9uIHN2Z19lbGVtZW50KG5hbWUpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsIG5hbWUpO1xufVxuZnVuY3Rpb24gdGV4dChkYXRhKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGRhdGEpO1xufVxuZnVuY3Rpb24gc3BhY2UoKSB7XG4gICAgcmV0dXJuIHRleHQoJyAnKTtcbn1cbmZ1bmN0aW9uIGVtcHR5KCkge1xuICAgIHJldHVybiB0ZXh0KCcnKTtcbn1cbmZ1bmN0aW9uIGxpc3Rlbihub2RlLCBldmVudCwgaGFuZGxlciwgb3B0aW9ucykge1xuICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgb3B0aW9ucyk7XG4gICAgcmV0dXJuICgpID0+IG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgb3B0aW9ucyk7XG59XG5mdW5jdGlvbiBwcmV2ZW50X2RlZmF1bHQoZm4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgcmV0dXJuIGZuLmNhbGwodGhpcywgZXZlbnQpO1xuICAgIH07XG59XG5mdW5jdGlvbiBzdG9wX3Byb3BhZ2F0aW9uKGZuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICByZXR1cm4gZm4uY2FsbCh0aGlzLCBldmVudCk7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIHNlbGYoZm4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gdGhpcylcbiAgICAgICAgICAgIGZuLmNhbGwodGhpcywgZXZlbnQpO1xuICAgIH07XG59XG5mdW5jdGlvbiB0cnVzdGVkKGZuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGlmIChldmVudC5pc1RydXN0ZWQpXG4gICAgICAgICAgICBmbi5jYWxsKHRoaXMsIGV2ZW50KTtcbiAgICB9O1xufVxuZnVuY3Rpb24gYXR0cihub2RlLCBhdHRyaWJ1dGUsIHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09IG51bGwpXG4gICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZSk7XG4gICAgZWxzZSBpZiAobm9kZS5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlKSAhPT0gdmFsdWUpXG4gICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZSwgdmFsdWUpO1xufVxuZnVuY3Rpb24gc2V0X2F0dHJpYnV0ZXMobm9kZSwgYXR0cmlidXRlcykge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBjb25zdCBkZXNjcmlwdG9ycyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG5vZGUuX19wcm90b19fKTtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgICAgIGlmIChhdHRyaWJ1dGVzW2tleV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoa2V5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXkgPT09ICdzdHlsZScpIHtcbiAgICAgICAgICAgIG5vZGUuc3R5bGUuY3NzVGV4dCA9IGF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXkgPT09ICdfX3ZhbHVlJykge1xuICAgICAgICAgICAgbm9kZS52YWx1ZSA9IG5vZGVba2V5XSA9IGF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChkZXNjcmlwdG9yc1trZXldICYmIGRlc2NyaXB0b3JzW2tleV0uc2V0KSB7XG4gICAgICAgICAgICBub2RlW2tleV0gPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhdHRyKG5vZGUsIGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIHNldF9zdmdfYXR0cmlidXRlcyhub2RlLCBhdHRyaWJ1dGVzKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gYXR0cmlidXRlcykge1xuICAgICAgICBhdHRyKG5vZGUsIGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgICB9XG59XG5mdW5jdGlvbiBzZXRfY3VzdG9tX2VsZW1lbnRfZGF0YShub2RlLCBwcm9wLCB2YWx1ZSkge1xuICAgIGlmIChwcm9wIGluIG5vZGUpIHtcbiAgICAgICAgbm9kZVtwcm9wXSA9IHR5cGVvZiBub2RlW3Byb3BdID09PSAnYm9vbGVhbicgJiYgdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgYXR0cihub2RlLCBwcm9wLCB2YWx1ZSk7XG4gICAgfVxufVxuZnVuY3Rpb24geGxpbmtfYXR0cihub2RlLCBhdHRyaWJ1dGUsIHZhbHVlKSB7XG4gICAgbm9kZS5zZXRBdHRyaWJ1dGVOUygnaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycsIGF0dHJpYnV0ZSwgdmFsdWUpO1xufVxuZnVuY3Rpb24gZ2V0X2JpbmRpbmdfZ3JvdXBfdmFsdWUoZ3JvdXAsIF9fdmFsdWUsIGNoZWNrZWQpIHtcbiAgICBjb25zdCB2YWx1ZSA9IG5ldyBTZXQoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGdyb3VwLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGlmIChncm91cFtpXS5jaGVja2VkKVxuICAgICAgICAgICAgdmFsdWUuYWRkKGdyb3VwW2ldLl9fdmFsdWUpO1xuICAgIH1cbiAgICBpZiAoIWNoZWNrZWQpIHtcbiAgICAgICAgdmFsdWUuZGVsZXRlKF9fdmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gQXJyYXkuZnJvbSh2YWx1ZSk7XG59XG5mdW5jdGlvbiB0b19udW1iZXIodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09ICcnID8gbnVsbCA6ICt2YWx1ZTtcbn1cbmZ1bmN0aW9uIHRpbWVfcmFuZ2VzX3RvX2FycmF5KHJhbmdlcykge1xuICAgIGNvbnN0IGFycmF5ID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCByYW5nZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgYXJyYXkucHVzaCh7IHN0YXJ0OiByYW5nZXMuc3RhcnQoaSksIGVuZDogcmFuZ2VzLmVuZChpKSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5O1xufVxuZnVuY3Rpb24gY2hpbGRyZW4oZWxlbWVudCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKGVsZW1lbnQuY2hpbGROb2Rlcyk7XG59XG5mdW5jdGlvbiBpbml0X2NsYWltX2luZm8obm9kZXMpIHtcbiAgICBpZiAobm9kZXMuY2xhaW1faW5mbyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG5vZGVzLmNsYWltX2luZm8gPSB7IGxhc3RfaW5kZXg6IDAsIHRvdGFsX2NsYWltZWQ6IDAgfTtcbiAgICB9XG59XG5mdW5jdGlvbiBjbGFpbV9ub2RlKG5vZGVzLCBwcmVkaWNhdGUsIHByb2Nlc3NOb2RlLCBjcmVhdGVOb2RlLCBkb250VXBkYXRlTGFzdEluZGV4ID0gZmFsc2UpIHtcbiAgICAvLyBUcnkgdG8gZmluZCBub2RlcyBpbiBhbiBvcmRlciBzdWNoIHRoYXQgd2UgbGVuZ3RoZW4gdGhlIGxvbmdlc3QgaW5jcmVhc2luZyBzdWJzZXF1ZW5jZVxuICAgIGluaXRfY2xhaW1faW5mbyhub2Rlcyk7XG4gICAgY29uc3QgcmVzdWx0Tm9kZSA9ICgoKSA9PiB7XG4gICAgICAgIC8vIFdlIGZpcnN0IHRyeSB0byBmaW5kIGFuIGVsZW1lbnQgYWZ0ZXIgdGhlIHByZXZpb3VzIG9uZVxuICAgICAgICBmb3IgKGxldCBpID0gbm9kZXMuY2xhaW1faW5mby5sYXN0X2luZGV4OyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IG5vZGUgPSBub2Rlc1tpXTtcbiAgICAgICAgICAgIGlmIChwcmVkaWNhdGUobm9kZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXBsYWNlbWVudCA9IHByb2Nlc3NOb2RlKG5vZGUpO1xuICAgICAgICAgICAgICAgIGlmIChyZXBsYWNlbWVudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzW2ldID0gcmVwbGFjZW1lbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghZG9udFVwZGF0ZUxhc3RJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICBub2Rlcy5jbGFpbV9pbmZvLmxhc3RfaW5kZXggPSBpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBPdGhlcndpc2UsIHdlIHRyeSB0byBmaW5kIG9uZSBiZWZvcmVcbiAgICAgICAgLy8gV2UgaXRlcmF0ZSBpbiByZXZlcnNlIHNvIHRoYXQgd2UgZG9uJ3QgZ28gdG9vIGZhciBiYWNrXG4gICAgICAgIGZvciAobGV0IGkgPSBub2Rlcy5jbGFpbV9pbmZvLmxhc3RfaW5kZXggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgY29uc3Qgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICAgICAgaWYgKHByZWRpY2F0ZShub2RlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlcGxhY2VtZW50ID0gcHJvY2Vzc05vZGUobm9kZSk7XG4gICAgICAgICAgICAgICAgaWYgKHJlcGxhY2VtZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZXMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZXNbaV0gPSByZXBsYWNlbWVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFkb250VXBkYXRlTGFzdEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzLmNsYWltX2luZm8ubGFzdF9pbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHJlcGxhY2VtZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2luY2Ugd2Ugc3BsaWNlZCBiZWZvcmUgdGhlIGxhc3RfaW5kZXgsIHdlIGRlY3JlYXNlIGl0XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzLmNsYWltX2luZm8ubGFzdF9pbmRleC0tO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB3ZSBjYW4ndCBmaW5kIGFueSBtYXRjaGluZyBub2RlLCB3ZSBjcmVhdGUgYSBuZXcgb25lXG4gICAgICAgIHJldHVybiBjcmVhdGVOb2RlKCk7XG4gICAgfSkoKTtcbiAgICByZXN1bHROb2RlLmNsYWltX29yZGVyID0gbm9kZXMuY2xhaW1faW5mby50b3RhbF9jbGFpbWVkO1xuICAgIG5vZGVzLmNsYWltX2luZm8udG90YWxfY2xhaW1lZCArPSAxO1xuICAgIHJldHVybiByZXN1bHROb2RlO1xufVxuZnVuY3Rpb24gY2xhaW1fZWxlbWVudF9iYXNlKG5vZGVzLCBuYW1lLCBhdHRyaWJ1dGVzLCBjcmVhdGVfZWxlbWVudCkge1xuICAgIHJldHVybiBjbGFpbV9ub2RlKG5vZGVzLCAobm9kZSkgPT4gbm9kZS5ub2RlTmFtZSA9PT0gbmFtZSwgKG5vZGUpID0+IHtcbiAgICAgICAgY29uc3QgcmVtb3ZlID0gW107XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgbm9kZS5hdHRyaWJ1dGVzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICBjb25zdCBhdHRyaWJ1dGUgPSBub2RlLmF0dHJpYnV0ZXNbal07XG4gICAgICAgICAgICBpZiAoIWF0dHJpYnV0ZXNbYXR0cmlidXRlLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlLnB1c2goYXR0cmlidXRlLm5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJlbW92ZS5mb3JFYWNoKHYgPT4gbm9kZS5yZW1vdmVBdHRyaWJ1dGUodikpO1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0sICgpID0+IGNyZWF0ZV9lbGVtZW50KG5hbWUpKTtcbn1cbmZ1bmN0aW9uIGNsYWltX2VsZW1lbnQobm9kZXMsIG5hbWUsIGF0dHJpYnV0ZXMpIHtcbiAgICByZXR1cm4gY2xhaW1fZWxlbWVudF9iYXNlKG5vZGVzLCBuYW1lLCBhdHRyaWJ1dGVzLCBlbGVtZW50KTtcbn1cbmZ1bmN0aW9uIGNsYWltX3N2Z19lbGVtZW50KG5vZGVzLCBuYW1lLCBhdHRyaWJ1dGVzKSB7XG4gICAgcmV0dXJuIGNsYWltX2VsZW1lbnRfYmFzZShub2RlcywgbmFtZSwgYXR0cmlidXRlcywgc3ZnX2VsZW1lbnQpO1xufVxuZnVuY3Rpb24gY2xhaW1fdGV4dChub2RlcywgZGF0YSkge1xuICAgIHJldHVybiBjbGFpbV9ub2RlKG5vZGVzLCAobm9kZSkgPT4gbm9kZS5ub2RlVHlwZSA9PT0gMywgKG5vZGUpID0+IHtcbiAgICAgICAgY29uc3QgZGF0YVN0ciA9ICcnICsgZGF0YTtcbiAgICAgICAgaWYgKG5vZGUuZGF0YS5zdGFydHNXaXRoKGRhdGFTdHIpKSB7XG4gICAgICAgICAgICBpZiAobm9kZS5kYXRhLmxlbmd0aCAhPT0gZGF0YVN0ci5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbm9kZS5zcGxpdFRleHQoZGF0YVN0ci5sZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbm9kZS5kYXRhID0gZGF0YVN0cjtcbiAgICAgICAgfVxuICAgIH0sICgpID0+IHRleHQoZGF0YSksIHRydWUgLy8gVGV4dCBub2RlcyBzaG91bGQgbm90IHVwZGF0ZSBsYXN0IGluZGV4IHNpbmNlIGl0IGlzIGxpa2VseSBub3Qgd29ydGggaXQgdG8gZWxpbWluYXRlIGFuIGluY3JlYXNpbmcgc3Vic2VxdWVuY2Ugb2YgYWN0dWFsIGVsZW1lbnRzXG4gICAgKTtcbn1cbmZ1bmN0aW9uIGNsYWltX3NwYWNlKG5vZGVzKSB7XG4gICAgcmV0dXJuIGNsYWltX3RleHQobm9kZXMsICcgJyk7XG59XG5mdW5jdGlvbiBmaW5kX2NvbW1lbnQobm9kZXMsIHRleHQsIHN0YXJ0KSB7XG4gICAgZm9yIChsZXQgaSA9IHN0YXJ0OyBpIDwgbm9kZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gOCAvKiBjb21tZW50IG5vZGUgKi8gJiYgbm9kZS50ZXh0Q29udGVudC50cmltKCkgPT09IHRleHQpIHtcbiAgICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBub2Rlcy5sZW5ndGg7XG59XG5mdW5jdGlvbiBjbGFpbV9odG1sX3RhZyhub2Rlcykge1xuICAgIC8vIGZpbmQgaHRtbCBvcGVuaW5nIHRhZ1xuICAgIGNvbnN0IHN0YXJ0X2luZGV4ID0gZmluZF9jb21tZW50KG5vZGVzLCAnSFRNTF9UQUdfU1RBUlQnLCAwKTtcbiAgICBjb25zdCBlbmRfaW5kZXggPSBmaW5kX2NvbW1lbnQobm9kZXMsICdIVE1MX1RBR19FTkQnLCBzdGFydF9pbmRleCk7XG4gICAgaWYgKHN0YXJ0X2luZGV4ID09PSBlbmRfaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBIdG1sVGFnSHlkcmF0aW9uKCk7XG4gICAgfVxuICAgIGluaXRfY2xhaW1faW5mbyhub2Rlcyk7XG4gICAgY29uc3QgaHRtbF90YWdfbm9kZXMgPSBub2Rlcy5zcGxpY2Uoc3RhcnRfaW5kZXgsIGVuZF9pbmRleCAtIHN0YXJ0X2luZGV4ICsgMSk7XG4gICAgZGV0YWNoKGh0bWxfdGFnX25vZGVzWzBdKTtcbiAgICBkZXRhY2goaHRtbF90YWdfbm9kZXNbaHRtbF90YWdfbm9kZXMubGVuZ3RoIC0gMV0pO1xuICAgIGNvbnN0IGNsYWltZWRfbm9kZXMgPSBodG1sX3RhZ19ub2Rlcy5zbGljZSgxLCBodG1sX3RhZ19ub2Rlcy5sZW5ndGggLSAxKTtcbiAgICBmb3IgKGNvbnN0IG4gb2YgY2xhaW1lZF9ub2Rlcykge1xuICAgICAgICBuLmNsYWltX29yZGVyID0gbm9kZXMuY2xhaW1faW5mby50b3RhbF9jbGFpbWVkO1xuICAgICAgICBub2Rlcy5jbGFpbV9pbmZvLnRvdGFsX2NsYWltZWQgKz0gMTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBIdG1sVGFnSHlkcmF0aW9uKGNsYWltZWRfbm9kZXMpO1xufVxuZnVuY3Rpb24gc2V0X2RhdGEodGV4dCwgZGF0YSkge1xuICAgIGRhdGEgPSAnJyArIGRhdGE7XG4gICAgaWYgKHRleHQud2hvbGVUZXh0ICE9PSBkYXRhKVxuICAgICAgICB0ZXh0LmRhdGEgPSBkYXRhO1xufVxuZnVuY3Rpb24gc2V0X2lucHV0X3ZhbHVlKGlucHV0LCB2YWx1ZSkge1xuICAgIGlucHV0LnZhbHVlID0gdmFsdWUgPT0gbnVsbCA/ICcnIDogdmFsdWU7XG59XG5mdW5jdGlvbiBzZXRfaW5wdXRfdHlwZShpbnB1dCwgdHlwZSkge1xuICAgIHRyeSB7XG4gICAgICAgIGlucHV0LnR5cGUgPSB0eXBlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICAvLyBkbyBub3RoaW5nXG4gICAgfVxufVxuZnVuY3Rpb24gc2V0X3N0eWxlKG5vZGUsIGtleSwgdmFsdWUsIGltcG9ydGFudCkge1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICBub2RlLnN0eWxlLnJlbW92ZVByb3BlcnR5KGtleSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBub2RlLnN0eWxlLnNldFByb3BlcnR5KGtleSwgdmFsdWUsIGltcG9ydGFudCA/ICdpbXBvcnRhbnQnIDogJycpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHNlbGVjdF9vcHRpb24oc2VsZWN0LCB2YWx1ZSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZWN0Lm9wdGlvbnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3Qgb3B0aW9uID0gc2VsZWN0Lm9wdGlvbnNbaV07XG4gICAgICAgIGlmIChvcHRpb24uX192YWx1ZSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgIG9wdGlvbi5zZWxlY3RlZCA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2VsZWN0LnNlbGVjdGVkSW5kZXggPSAtMTsgLy8gbm8gb3B0aW9uIHNob3VsZCBiZSBzZWxlY3RlZFxufVxuZnVuY3Rpb24gc2VsZWN0X29wdGlvbnMoc2VsZWN0LCB2YWx1ZSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZWN0Lm9wdGlvbnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3Qgb3B0aW9uID0gc2VsZWN0Lm9wdGlvbnNbaV07XG4gICAgICAgIG9wdGlvbi5zZWxlY3RlZCA9IH52YWx1ZS5pbmRleE9mKG9wdGlvbi5fX3ZhbHVlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBzZWxlY3RfdmFsdWUoc2VsZWN0KSB7XG4gICAgY29uc3Qgc2VsZWN0ZWRfb3B0aW9uID0gc2VsZWN0LnF1ZXJ5U2VsZWN0b3IoJzpjaGVja2VkJykgfHwgc2VsZWN0Lm9wdGlvbnNbMF07XG4gICAgcmV0dXJuIHNlbGVjdGVkX29wdGlvbiAmJiBzZWxlY3RlZF9vcHRpb24uX192YWx1ZTtcbn1cbmZ1bmN0aW9uIHNlbGVjdF9tdWx0aXBsZV92YWx1ZShzZWxlY3QpIHtcbiAgICByZXR1cm4gW10ubWFwLmNhbGwoc2VsZWN0LnF1ZXJ5U2VsZWN0b3JBbGwoJzpjaGVja2VkJyksIG9wdGlvbiA9PiBvcHRpb24uX192YWx1ZSk7XG59XG4vLyB1bmZvcnR1bmF0ZWx5IHRoaXMgY2FuJ3QgYmUgYSBjb25zdGFudCBhcyB0aGF0IHdvdWxkbid0IGJlIHRyZWUtc2hha2VhYmxlXG4vLyBzbyB3ZSBjYWNoZSB0aGUgcmVzdWx0IGluc3RlYWRcbmxldCBjcm9zc29yaWdpbjtcbmZ1bmN0aW9uIGlzX2Nyb3Nzb3JpZ2luKCkge1xuICAgIGlmIChjcm9zc29yaWdpbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNyb3Nzb3JpZ2luID0gZmFsc2U7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LnBhcmVudCkge1xuICAgICAgICAgICAgICAgIHZvaWQgd2luZG93LnBhcmVudC5kb2N1bWVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNyb3Nzb3JpZ2luID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY3Jvc3NvcmlnaW47XG59XG5mdW5jdGlvbiBhZGRfcmVzaXplX2xpc3RlbmVyKG5vZGUsIGZuKSB7XG4gICAgY29uc3QgY29tcHV0ZWRfc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKG5vZGUpO1xuICAgIGlmIChjb21wdXRlZF9zdHlsZS5wb3NpdGlvbiA9PT0gJ3N0YXRpYycpIHtcbiAgICAgICAgbm9kZS5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG4gICAgfVxuICAgIGNvbnN0IGlmcmFtZSA9IGVsZW1lbnQoJ2lmcmFtZScpO1xuICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJ2Rpc3BsYXk6IGJsb2NrOyBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDsgbGVmdDogMDsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTsgJyArXG4gICAgICAgICdvdmVyZmxvdzogaGlkZGVuOyBib3JkZXI6IDA7IG9wYWNpdHk6IDA7IHBvaW50ZXItZXZlbnRzOiBub25lOyB6LWluZGV4OiAtMTsnKTtcbiAgICBpZnJhbWUuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICd0cnVlJyk7XG4gICAgaWZyYW1lLnRhYkluZGV4ID0gLTE7XG4gICAgY29uc3QgY3Jvc3NvcmlnaW4gPSBpc19jcm9zc29yaWdpbigpO1xuICAgIGxldCB1bnN1YnNjcmliZTtcbiAgICBpZiAoY3Jvc3NvcmlnaW4pIHtcbiAgICAgICAgaWZyYW1lLnNyYyA9IFwiZGF0YTp0ZXh0L2h0bWwsPHNjcmlwdD5vbnJlc2l6ZT1mdW5jdGlvbigpe3BhcmVudC5wb3N0TWVzc2FnZSgwLCcqJyl9PC9zY3JpcHQ+XCI7XG4gICAgICAgIHVuc3Vic2NyaWJlID0gbGlzdGVuKHdpbmRvdywgJ21lc3NhZ2UnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGlmIChldmVudC5zb3VyY2UgPT09IGlmcmFtZS5jb250ZW50V2luZG93KVxuICAgICAgICAgICAgICAgIGZuKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWZyYW1lLnNyYyA9ICdhYm91dDpibGFuayc7XG4gICAgICAgIGlmcmFtZS5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSA9IGxpc3RlbihpZnJhbWUuY29udGVudFdpbmRvdywgJ3Jlc2l6ZScsIGZuKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgYXBwZW5kKG5vZGUsIGlmcmFtZSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgaWYgKGNyb3Nzb3JpZ2luKSB7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVuc3Vic2NyaWJlICYmIGlmcmFtZS5jb250ZW50V2luZG93KSB7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGRldGFjaChpZnJhbWUpO1xuICAgIH07XG59XG5mdW5jdGlvbiB0b2dnbGVfY2xhc3MoZWxlbWVudCwgbmFtZSwgdG9nZ2xlKSB7XG4gICAgZWxlbWVudC5jbGFzc0xpc3RbdG9nZ2xlID8gJ2FkZCcgOiAncmVtb3ZlJ10obmFtZSk7XG59XG5mdW5jdGlvbiBjdXN0b21fZXZlbnQodHlwZSwgZGV0YWlsLCBidWJibGVzID0gZmFsc2UpIHtcbiAgICBjb25zdCBlID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XG4gICAgZS5pbml0Q3VzdG9tRXZlbnQodHlwZSwgYnViYmxlcywgZmFsc2UsIGRldGFpbCk7XG4gICAgcmV0dXJuIGU7XG59XG5mdW5jdGlvbiBxdWVyeV9zZWxlY3Rvcl9hbGwoc2VsZWN0b3IsIHBhcmVudCA9IGRvY3VtZW50LmJvZHkpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbShwYXJlbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcikpO1xufVxuY2xhc3MgSHRtbFRhZyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZSA9IHRoaXMubiA9IG51bGw7XG4gICAgfVxuICAgIGMoaHRtbCkge1xuICAgICAgICB0aGlzLmgoaHRtbCk7XG4gICAgfVxuICAgIG0oaHRtbCwgdGFyZ2V0LCBhbmNob3IgPSBudWxsKSB7XG4gICAgICAgIGlmICghdGhpcy5lKSB7XG4gICAgICAgICAgICB0aGlzLmUgPSBlbGVtZW50KHRhcmdldC5ub2RlTmFtZSk7XG4gICAgICAgICAgICB0aGlzLnQgPSB0YXJnZXQ7XG4gICAgICAgICAgICB0aGlzLmMoaHRtbCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pKGFuY2hvcik7XG4gICAgfVxuICAgIGgoaHRtbCkge1xuICAgICAgICB0aGlzLmUuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICAgdGhpcy5uID0gQXJyYXkuZnJvbSh0aGlzLmUuY2hpbGROb2Rlcyk7XG4gICAgfVxuICAgIGkoYW5jaG9yKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5uLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICBpbnNlcnQodGhpcy50LCB0aGlzLm5baV0sIGFuY2hvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcChodG1sKSB7XG4gICAgICAgIHRoaXMuZCgpO1xuICAgICAgICB0aGlzLmgoaHRtbCk7XG4gICAgICAgIHRoaXMuaSh0aGlzLmEpO1xuICAgIH1cbiAgICBkKCkge1xuICAgICAgICB0aGlzLm4uZm9yRWFjaChkZXRhY2gpO1xuICAgIH1cbn1cbmNsYXNzIEh0bWxUYWdIeWRyYXRpb24gZXh0ZW5kcyBIdG1sVGFnIHtcbiAgICBjb25zdHJ1Y3RvcihjbGFpbWVkX25vZGVzKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuZSA9IHRoaXMubiA9IG51bGw7XG4gICAgICAgIHRoaXMubCA9IGNsYWltZWRfbm9kZXM7XG4gICAgfVxuICAgIGMoaHRtbCkge1xuICAgICAgICBpZiAodGhpcy5sKSB7XG4gICAgICAgICAgICB0aGlzLm4gPSB0aGlzLmw7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdXBlci5jKGh0bWwpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGkoYW5jaG9yKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5uLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICBpbnNlcnRfaHlkcmF0aW9uKHRoaXMudCwgdGhpcy5uW2ldLCBhbmNob3IpO1xuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24gYXR0cmlidXRlX3RvX29iamVjdChhdHRyaWJ1dGVzKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgZm9yIChjb25zdCBhdHRyaWJ1dGUgb2YgYXR0cmlidXRlcykge1xuICAgICAgICByZXN1bHRbYXR0cmlidXRlLm5hbWVdID0gYXR0cmlidXRlLnZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gZ2V0X2N1c3RvbV9lbGVtZW50c19zbG90cyhlbGVtZW50KSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgZWxlbWVudC5jaGlsZE5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcbiAgICAgICAgcmVzdWx0W25vZGUuc2xvdCB8fCAnZGVmYXVsdCddID0gdHJ1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG4vLyB3ZSBuZWVkIHRvIHN0b3JlIHRoZSBpbmZvcm1hdGlvbiBmb3IgbXVsdGlwbGUgZG9jdW1lbnRzIGJlY2F1c2UgYSBTdmVsdGUgYXBwbGljYXRpb24gY291bGQgYWxzbyBjb250YWluIGlmcmFtZXNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zdmVsdGVqcy9zdmVsdGUvaXNzdWVzLzM2MjRcbmNvbnN0IG1hbmFnZWRfc3R5bGVzID0gbmV3IE1hcCgpO1xubGV0IGFjdGl2ZSA9IDA7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vZGFya3NreWFwcC9zdHJpbmctaGFzaC9ibG9iL21hc3Rlci9pbmRleC5qc1xuZnVuY3Rpb24gaGFzaChzdHIpIHtcbiAgICBsZXQgaGFzaCA9IDUzODE7XG4gICAgbGV0IGkgPSBzdHIubGVuZ3RoO1xuICAgIHdoaWxlIChpLS0pXG4gICAgICAgIGhhc2ggPSAoKGhhc2ggPDwgNSkgLSBoYXNoKSBeIHN0ci5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBoYXNoID4+PiAwO1xufVxuZnVuY3Rpb24gY3JlYXRlX3N0eWxlX2luZm9ybWF0aW9uKGRvYywgbm9kZSkge1xuICAgIGNvbnN0IGluZm8gPSB7IHN0eWxlc2hlZXQ6IGFwcGVuZF9lbXB0eV9zdHlsZXNoZWV0KG5vZGUpLCBydWxlczoge30gfTtcbiAgICBtYW5hZ2VkX3N0eWxlcy5zZXQoZG9jLCBpbmZvKTtcbiAgICByZXR1cm4gaW5mbztcbn1cbmZ1bmN0aW9uIGNyZWF0ZV9ydWxlKG5vZGUsIGEsIGIsIGR1cmF0aW9uLCBkZWxheSwgZWFzZSwgZm4sIHVpZCA9IDApIHtcbiAgICBjb25zdCBzdGVwID0gMTYuNjY2IC8gZHVyYXRpb247XG4gICAgbGV0IGtleWZyYW1lcyA9ICd7XFxuJztcbiAgICBmb3IgKGxldCBwID0gMDsgcCA8PSAxOyBwICs9IHN0ZXApIHtcbiAgICAgICAgY29uc3QgdCA9IGEgKyAoYiAtIGEpICogZWFzZShwKTtcbiAgICAgICAga2V5ZnJhbWVzICs9IHAgKiAxMDAgKyBgJXske2ZuKHQsIDEgLSB0KX19XFxuYDtcbiAgICB9XG4gICAgY29uc3QgcnVsZSA9IGtleWZyYW1lcyArIGAxMDAlIHske2ZuKGIsIDEgLSBiKX19XFxufWA7XG4gICAgY29uc3QgbmFtZSA9IGBfX3N2ZWx0ZV8ke2hhc2gocnVsZSl9XyR7dWlkfWA7XG4gICAgY29uc3QgZG9jID0gZ2V0X3Jvb3RfZm9yX3N0eWxlKG5vZGUpO1xuICAgIGNvbnN0IHsgc3R5bGVzaGVldCwgcnVsZXMgfSA9IG1hbmFnZWRfc3R5bGVzLmdldChkb2MpIHx8IGNyZWF0ZV9zdHlsZV9pbmZvcm1hdGlvbihkb2MsIG5vZGUpO1xuICAgIGlmICghcnVsZXNbbmFtZV0pIHtcbiAgICAgICAgcnVsZXNbbmFtZV0gPSB0cnVlO1xuICAgICAgICBzdHlsZXNoZWV0Lmluc2VydFJ1bGUoYEBrZXlmcmFtZXMgJHtuYW1lfSAke3J1bGV9YCwgc3R5bGVzaGVldC5jc3NSdWxlcy5sZW5ndGgpO1xuICAgIH1cbiAgICBjb25zdCBhbmltYXRpb24gPSBub2RlLnN0eWxlLmFuaW1hdGlvbiB8fCAnJztcbiAgICBub2RlLnN0eWxlLmFuaW1hdGlvbiA9IGAke2FuaW1hdGlvbiA/IGAke2FuaW1hdGlvbn0sIGAgOiAnJ30ke25hbWV9ICR7ZHVyYXRpb259bXMgbGluZWFyICR7ZGVsYXl9bXMgMSBib3RoYDtcbiAgICBhY3RpdmUgKz0gMTtcbiAgICByZXR1cm4gbmFtZTtcbn1cbmZ1bmN0aW9uIGRlbGV0ZV9ydWxlKG5vZGUsIG5hbWUpIHtcbiAgICBjb25zdCBwcmV2aW91cyA9IChub2RlLnN0eWxlLmFuaW1hdGlvbiB8fCAnJykuc3BsaXQoJywgJyk7XG4gICAgY29uc3QgbmV4dCA9IHByZXZpb3VzLmZpbHRlcihuYW1lXG4gICAgICAgID8gYW5pbSA9PiBhbmltLmluZGV4T2YobmFtZSkgPCAwIC8vIHJlbW92ZSBzcGVjaWZpYyBhbmltYXRpb25cbiAgICAgICAgOiBhbmltID0+IGFuaW0uaW5kZXhPZignX19zdmVsdGUnKSA9PT0gLTEgLy8gcmVtb3ZlIGFsbCBTdmVsdGUgYW5pbWF0aW9uc1xuICAgICk7XG4gICAgY29uc3QgZGVsZXRlZCA9IHByZXZpb3VzLmxlbmd0aCAtIG5leHQubGVuZ3RoO1xuICAgIGlmIChkZWxldGVkKSB7XG4gICAgICAgIG5vZGUuc3R5bGUuYW5pbWF0aW9uID0gbmV4dC5qb2luKCcsICcpO1xuICAgICAgICBhY3RpdmUgLT0gZGVsZXRlZDtcbiAgICAgICAgaWYgKCFhY3RpdmUpXG4gICAgICAgICAgICBjbGVhcl9ydWxlcygpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNsZWFyX3J1bGVzKCkge1xuICAgIHJhZigoKSA9PiB7XG4gICAgICAgIGlmIChhY3RpdmUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIG1hbmFnZWRfc3R5bGVzLmZvckVhY2goaW5mbyA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IHN0eWxlc2hlZXQgfSA9IGluZm87XG4gICAgICAgICAgICBsZXQgaSA9IHN0eWxlc2hlZXQuY3NzUnVsZXMubGVuZ3RoO1xuICAgICAgICAgICAgd2hpbGUgKGktLSlcbiAgICAgICAgICAgICAgICBzdHlsZXNoZWV0LmRlbGV0ZVJ1bGUoaSk7XG4gICAgICAgICAgICBpbmZvLnJ1bGVzID0ge307XG4gICAgICAgIH0pO1xuICAgICAgICBtYW5hZ2VkX3N0eWxlcy5jbGVhcigpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVfYW5pbWF0aW9uKG5vZGUsIGZyb20sIGZuLCBwYXJhbXMpIHtcbiAgICBpZiAoIWZyb20pXG4gICAgICAgIHJldHVybiBub29wO1xuICAgIGNvbnN0IHRvID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBpZiAoZnJvbS5sZWZ0ID09PSB0by5sZWZ0ICYmIGZyb20ucmlnaHQgPT09IHRvLnJpZ2h0ICYmIGZyb20udG9wID09PSB0by50b3AgJiYgZnJvbS5ib3R0b20gPT09IHRvLmJvdHRvbSlcbiAgICAgICAgcmV0dXJuIG5vb3A7XG4gICAgY29uc3QgeyBkZWxheSA9IDAsIGR1cmF0aW9uID0gMzAwLCBlYXNpbmcgPSBpZGVudGl0eSwgXG4gICAgLy8gQHRzLWlnbm9yZSB0b2RvOiBzaG91bGQgdGhpcyBiZSBzZXBhcmF0ZWQgZnJvbSBkZXN0cnVjdHVyaW5nPyBPciBzdGFydC9lbmQgYWRkZWQgdG8gcHVibGljIGFwaSBhbmQgZG9jdW1lbnRhdGlvbj9cbiAgICBzdGFydDogc3RhcnRfdGltZSA9IG5vdygpICsgZGVsYXksIFxuICAgIC8vIEB0cy1pZ25vcmUgdG9kbzpcbiAgICBlbmQgPSBzdGFydF90aW1lICsgZHVyYXRpb24sIHRpY2sgPSBub29wLCBjc3MgfSA9IGZuKG5vZGUsIHsgZnJvbSwgdG8gfSwgcGFyYW1zKTtcbiAgICBsZXQgcnVubmluZyA9IHRydWU7XG4gICAgbGV0IHN0YXJ0ZWQgPSBmYWxzZTtcbiAgICBsZXQgbmFtZTtcbiAgICBmdW5jdGlvbiBzdGFydCgpIHtcbiAgICAgICAgaWYgKGNzcykge1xuICAgICAgICAgICAgbmFtZSA9IGNyZWF0ZV9ydWxlKG5vZGUsIDAsIDEsIGR1cmF0aW9uLCBkZWxheSwgZWFzaW5nLCBjc3MpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZGVsYXkpIHtcbiAgICAgICAgICAgIHN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgICAgIGlmIChjc3MpXG4gICAgICAgICAgICBkZWxldGVfcnVsZShub2RlLCBuYW1lKTtcbiAgICAgICAgcnVubmluZyA9IGZhbHNlO1xuICAgIH1cbiAgICBsb29wKG5vdyA9PiB7XG4gICAgICAgIGlmICghc3RhcnRlZCAmJiBub3cgPj0gc3RhcnRfdGltZSkge1xuICAgICAgICAgICAgc3RhcnRlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN0YXJ0ZWQgJiYgbm93ID49IGVuZCkge1xuICAgICAgICAgICAgdGljaygxLCAwKTtcbiAgICAgICAgICAgIHN0b3AoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJ1bm5pbmcpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3RhcnRlZCkge1xuICAgICAgICAgICAgY29uc3QgcCA9IG5vdyAtIHN0YXJ0X3RpbWU7XG4gICAgICAgICAgICBjb25zdCB0ID0gMCArIDEgKiBlYXNpbmcocCAvIGR1cmF0aW9uKTtcbiAgICAgICAgICAgIHRpY2sodCwgMSAtIHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xuICAgIHN0YXJ0KCk7XG4gICAgdGljaygwLCAxKTtcbiAgICByZXR1cm4gc3RvcDtcbn1cbmZ1bmN0aW9uIGZpeF9wb3NpdGlvbihub2RlKSB7XG4gICAgY29uc3Qgc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKG5vZGUpO1xuICAgIGlmIChzdHlsZS5wb3NpdGlvbiAhPT0gJ2Fic29sdXRlJyAmJiBzdHlsZS5wb3NpdGlvbiAhPT0gJ2ZpeGVkJykge1xuICAgICAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQgfSA9IHN0eWxlO1xuICAgICAgICBjb25zdCBhID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgbm9kZS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgICAgIG5vZGUuc3R5bGUud2lkdGggPSB3aWR0aDtcbiAgICAgICAgbm9kZS5zdHlsZS5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgIGFkZF90cmFuc2Zvcm0obm9kZSwgYSk7XG4gICAgfVxufVxuZnVuY3Rpb24gYWRkX3RyYW5zZm9ybShub2RlLCBhKSB7XG4gICAgY29uc3QgYiA9IG5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgaWYgKGEubGVmdCAhPT0gYi5sZWZ0IHx8IGEudG9wICE9PSBiLnRvcCkge1xuICAgICAgICBjb25zdCBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUobm9kZSk7XG4gICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IHN0eWxlLnRyYW5zZm9ybSA9PT0gJ25vbmUnID8gJycgOiBzdHlsZS50cmFuc2Zvcm07XG4gICAgICAgIG5vZGUuc3R5bGUudHJhbnNmb3JtID0gYCR7dHJhbnNmb3JtfSB0cmFuc2xhdGUoJHthLmxlZnQgLSBiLmxlZnR9cHgsICR7YS50b3AgLSBiLnRvcH1weClgO1xuICAgIH1cbn1cblxubGV0IGN1cnJlbnRfY29tcG9uZW50O1xuZnVuY3Rpb24gc2V0X2N1cnJlbnRfY29tcG9uZW50KGNvbXBvbmVudCkge1xuICAgIGN1cnJlbnRfY29tcG9uZW50ID0gY29tcG9uZW50O1xufVxuZnVuY3Rpb24gZ2V0X2N1cnJlbnRfY29tcG9uZW50KCkge1xuICAgIGlmICghY3VycmVudF9jb21wb25lbnQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRnVuY3Rpb24gY2FsbGVkIG91dHNpZGUgY29tcG9uZW50IGluaXRpYWxpemF0aW9uJyk7XG4gICAgcmV0dXJuIGN1cnJlbnRfY29tcG9uZW50O1xufVxuZnVuY3Rpb24gYmVmb3JlVXBkYXRlKGZuKSB7XG4gICAgZ2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQuYmVmb3JlX3VwZGF0ZS5wdXNoKGZuKTtcbn1cbmZ1bmN0aW9uIG9uTW91bnQoZm4pIHtcbiAgICBnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5vbl9tb3VudC5wdXNoKGZuKTtcbn1cbmZ1bmN0aW9uIGFmdGVyVXBkYXRlKGZuKSB7XG4gICAgZ2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQuYWZ0ZXJfdXBkYXRlLnB1c2goZm4pO1xufVxuZnVuY3Rpb24gb25EZXN0cm95KGZuKSB7XG4gICAgZ2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQub25fZGVzdHJveS5wdXNoKGZuKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpIHtcbiAgICBjb25zdCBjb21wb25lbnQgPSBnZXRfY3VycmVudF9jb21wb25lbnQoKTtcbiAgICByZXR1cm4gKHR5cGUsIGRldGFpbCkgPT4ge1xuICAgICAgICBjb25zdCBjYWxsYmFja3MgPSBjb21wb25lbnQuJCQuY2FsbGJhY2tzW3R5cGVdO1xuICAgICAgICBpZiAoY2FsbGJhY2tzKSB7XG4gICAgICAgICAgICAvLyBUT0RPIGFyZSB0aGVyZSBzaXR1YXRpb25zIHdoZXJlIGV2ZW50cyBjb3VsZCBiZSBkaXNwYXRjaGVkXG4gICAgICAgICAgICAvLyBpbiBhIHNlcnZlciAobm9uLURPTSkgZW52aXJvbm1lbnQ/XG4gICAgICAgICAgICBjb25zdCBldmVudCA9IGN1c3RvbV9ldmVudCh0eXBlLCBkZXRhaWwpO1xuICAgICAgICAgICAgY2FsbGJhY2tzLnNsaWNlKCkuZm9yRWFjaChmbiA9PiB7XG4gICAgICAgICAgICAgICAgZm4uY2FsbChjb21wb25lbnQsIGV2ZW50KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbn1cbmZ1bmN0aW9uIHNldENvbnRleHQoa2V5LCBjb250ZXh0KSB7XG4gICAgZ2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQuY29udGV4dC5zZXQoa2V5LCBjb250ZXh0KTtcbn1cbmZ1bmN0aW9uIGdldENvbnRleHQoa2V5KSB7XG4gICAgcmV0dXJuIGdldF9jdXJyZW50X2NvbXBvbmVudCgpLiQkLmNvbnRleHQuZ2V0KGtleSk7XG59XG5mdW5jdGlvbiBnZXRBbGxDb250ZXh0cygpIHtcbiAgICByZXR1cm4gZ2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQuY29udGV4dDtcbn1cbmZ1bmN0aW9uIGhhc0NvbnRleHQoa2V5KSB7XG4gICAgcmV0dXJuIGdldF9jdXJyZW50X2NvbXBvbmVudCgpLiQkLmNvbnRleHQuaGFzKGtleSk7XG59XG4vLyBUT0RPIGZpZ3VyZSBvdXQgaWYgd2Ugc3RpbGwgd2FudCB0byBzdXBwb3J0XG4vLyBzaG9ydGhhbmQgZXZlbnRzLCBvciBpZiB3ZSB3YW50IHRvIGltcGxlbWVudFxuLy8gYSByZWFsIGJ1YmJsaW5nIG1lY2hhbmlzbVxuZnVuY3Rpb24gYnViYmxlKGNvbXBvbmVudCwgZXZlbnQpIHtcbiAgICBjb25zdCBjYWxsYmFja3MgPSBjb21wb25lbnQuJCQuY2FsbGJhY2tzW2V2ZW50LnR5cGVdO1xuICAgIGlmIChjYWxsYmFja3MpIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBjYWxsYmFja3Muc2xpY2UoKS5mb3JFYWNoKGZuID0+IGZuLmNhbGwodGhpcywgZXZlbnQpKTtcbiAgICB9XG59XG5cbmNvbnN0IGRpcnR5X2NvbXBvbmVudHMgPSBbXTtcbmNvbnN0IGludHJvcyA9IHsgZW5hYmxlZDogZmFsc2UgfTtcbmNvbnN0IGJpbmRpbmdfY2FsbGJhY2tzID0gW107XG5jb25zdCByZW5kZXJfY2FsbGJhY2tzID0gW107XG5jb25zdCBmbHVzaF9jYWxsYmFja3MgPSBbXTtcbmNvbnN0IHJlc29sdmVkX3Byb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKTtcbmxldCB1cGRhdGVfc2NoZWR1bGVkID0gZmFsc2U7XG5mdW5jdGlvbiBzY2hlZHVsZV91cGRhdGUoKSB7XG4gICAgaWYgKCF1cGRhdGVfc2NoZWR1bGVkKSB7XG4gICAgICAgIHVwZGF0ZV9zY2hlZHVsZWQgPSB0cnVlO1xuICAgICAgICByZXNvbHZlZF9wcm9taXNlLnRoZW4oZmx1c2gpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHRpY2soKSB7XG4gICAgc2NoZWR1bGVfdXBkYXRlKCk7XG4gICAgcmV0dXJuIHJlc29sdmVkX3Byb21pc2U7XG59XG5mdW5jdGlvbiBhZGRfcmVuZGVyX2NhbGxiYWNrKGZuKSB7XG4gICAgcmVuZGVyX2NhbGxiYWNrcy5wdXNoKGZuKTtcbn1cbmZ1bmN0aW9uIGFkZF9mbHVzaF9jYWxsYmFjayhmbikge1xuICAgIGZsdXNoX2NhbGxiYWNrcy5wdXNoKGZuKTtcbn1cbi8vIGZsdXNoKCkgY2FsbHMgY2FsbGJhY2tzIGluIHRoaXMgb3JkZXI6XG4vLyAxLiBBbGwgYmVmb3JlVXBkYXRlIGNhbGxiYWNrcywgaW4gb3JkZXI6IHBhcmVudHMgYmVmb3JlIGNoaWxkcmVuXG4vLyAyLiBBbGwgYmluZDp0aGlzIGNhbGxiYWNrcywgaW4gcmV2ZXJzZSBvcmRlcjogY2hpbGRyZW4gYmVmb3JlIHBhcmVudHMuXG4vLyAzLiBBbGwgYWZ0ZXJVcGRhdGUgY2FsbGJhY2tzLCBpbiBvcmRlcjogcGFyZW50cyBiZWZvcmUgY2hpbGRyZW4uIEVYQ0VQVFxuLy8gICAgZm9yIGFmdGVyVXBkYXRlcyBjYWxsZWQgZHVyaW5nIHRoZSBpbml0aWFsIG9uTW91bnQsIHdoaWNoIGFyZSBjYWxsZWQgaW5cbi8vICAgIHJldmVyc2Ugb3JkZXI6IGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLlxuLy8gU2luY2UgY2FsbGJhY2tzIG1pZ2h0IHVwZGF0ZSBjb21wb25lbnQgdmFsdWVzLCB3aGljaCBjb3VsZCB0cmlnZ2VyIGFub3RoZXJcbi8vIGNhbGwgdG8gZmx1c2goKSwgdGhlIGZvbGxvd2luZyBzdGVwcyBndWFyZCBhZ2FpbnN0IHRoaXM6XG4vLyAxLiBEdXJpbmcgYmVmb3JlVXBkYXRlLCBhbnkgdXBkYXRlZCBjb21wb25lbnRzIHdpbGwgYmUgYWRkZWQgdG8gdGhlXG4vLyAgICBkaXJ0eV9jb21wb25lbnRzIGFycmF5IGFuZCB3aWxsIGNhdXNlIGEgcmVlbnRyYW50IGNhbGwgdG8gZmx1c2goKS4gQmVjYXVzZVxuLy8gICAgdGhlIGZsdXNoIGluZGV4IGlzIGtlcHQgb3V0c2lkZSB0aGUgZnVuY3Rpb24sIHRoZSByZWVudHJhbnQgY2FsbCB3aWxsIHBpY2tcbi8vICAgIHVwIHdoZXJlIHRoZSBlYXJsaWVyIGNhbGwgbGVmdCBvZmYgYW5kIGdvIHRocm91Z2ggYWxsIGRpcnR5IGNvbXBvbmVudHMuIFRoZVxuLy8gICAgY3VycmVudF9jb21wb25lbnQgdmFsdWUgaXMgc2F2ZWQgYW5kIHJlc3RvcmVkIHNvIHRoYXQgdGhlIHJlZW50cmFudCBjYWxsIHdpbGxcbi8vICAgIG5vdCBpbnRlcmZlcmUgd2l0aCB0aGUgXCJwYXJlbnRcIiBmbHVzaCgpIGNhbGwuXG4vLyAyLiBiaW5kOnRoaXMgY2FsbGJhY2tzIGNhbm5vdCB0cmlnZ2VyIG5ldyBmbHVzaCgpIGNhbGxzLlxuLy8gMy4gRHVyaW5nIGFmdGVyVXBkYXRlLCBhbnkgdXBkYXRlZCBjb21wb25lbnRzIHdpbGwgTk9UIGhhdmUgdGhlaXIgYWZ0ZXJVcGRhdGVcbi8vICAgIGNhbGxiYWNrIGNhbGxlZCBhIHNlY29uZCB0aW1lOyB0aGUgc2Vlbl9jYWxsYmFja3Mgc2V0LCBvdXRzaWRlIHRoZSBmbHVzaCgpXG4vLyAgICBmdW5jdGlvbiwgZ3VhcmFudGVlcyB0aGlzIGJlaGF2aW9yLlxuY29uc3Qgc2Vlbl9jYWxsYmFja3MgPSBuZXcgU2V0KCk7XG5sZXQgZmx1c2hpZHggPSAwOyAvLyBEbyAqbm90KiBtb3ZlIHRoaXMgaW5zaWRlIHRoZSBmbHVzaCgpIGZ1bmN0aW9uXG5mdW5jdGlvbiBmbHVzaCgpIHtcbiAgICBjb25zdCBzYXZlZF9jb21wb25lbnQgPSBjdXJyZW50X2NvbXBvbmVudDtcbiAgICBkbyB7XG4gICAgICAgIC8vIGZpcnN0LCBjYWxsIGJlZm9yZVVwZGF0ZSBmdW5jdGlvbnNcbiAgICAgICAgLy8gYW5kIHVwZGF0ZSBjb21wb25lbnRzXG4gICAgICAgIHdoaWxlIChmbHVzaGlkeCA8IGRpcnR5X2NvbXBvbmVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCBjb21wb25lbnQgPSBkaXJ0eV9jb21wb25lbnRzW2ZsdXNoaWR4XTtcbiAgICAgICAgICAgIGZsdXNoaWR4Kys7XG4gICAgICAgICAgICBzZXRfY3VycmVudF9jb21wb25lbnQoY29tcG9uZW50KTtcbiAgICAgICAgICAgIHVwZGF0ZShjb21wb25lbnQuJCQpO1xuICAgICAgICB9XG4gICAgICAgIHNldF9jdXJyZW50X2NvbXBvbmVudChudWxsKTtcbiAgICAgICAgZGlydHlfY29tcG9uZW50cy5sZW5ndGggPSAwO1xuICAgICAgICBmbHVzaGlkeCA9IDA7XG4gICAgICAgIHdoaWxlIChiaW5kaW5nX2NhbGxiYWNrcy5sZW5ndGgpXG4gICAgICAgICAgICBiaW5kaW5nX2NhbGxiYWNrcy5wb3AoKSgpO1xuICAgICAgICAvLyB0aGVuLCBvbmNlIGNvbXBvbmVudHMgYXJlIHVwZGF0ZWQsIGNhbGxcbiAgICAgICAgLy8gYWZ0ZXJVcGRhdGUgZnVuY3Rpb25zLiBUaGlzIG1heSBjYXVzZVxuICAgICAgICAvLyBzdWJzZXF1ZW50IHVwZGF0ZXMuLi5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZW5kZXJfY2FsbGJhY2tzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICBjb25zdCBjYWxsYmFjayA9IHJlbmRlcl9jYWxsYmFja3NbaV07XG4gICAgICAgICAgICBpZiAoIXNlZW5fY2FsbGJhY2tzLmhhcyhjYWxsYmFjaykpIHtcbiAgICAgICAgICAgICAgICAvLyAuLi5zbyBndWFyZCBhZ2FpbnN0IGluZmluaXRlIGxvb3BzXG4gICAgICAgICAgICAgICAgc2Vlbl9jYWxsYmFja3MuYWRkKGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJlbmRlcl9jYWxsYmFja3MubGVuZ3RoID0gMDtcbiAgICB9IHdoaWxlIChkaXJ0eV9jb21wb25lbnRzLmxlbmd0aCk7XG4gICAgd2hpbGUgKGZsdXNoX2NhbGxiYWNrcy5sZW5ndGgpIHtcbiAgICAgICAgZmx1c2hfY2FsbGJhY2tzLnBvcCgpKCk7XG4gICAgfVxuICAgIHVwZGF0ZV9zY2hlZHVsZWQgPSBmYWxzZTtcbiAgICBzZWVuX2NhbGxiYWNrcy5jbGVhcigpO1xuICAgIHNldF9jdXJyZW50X2NvbXBvbmVudChzYXZlZF9jb21wb25lbnQpO1xufVxuZnVuY3Rpb24gdXBkYXRlKCQkKSB7XG4gICAgaWYgKCQkLmZyYWdtZW50ICE9PSBudWxsKSB7XG4gICAgICAgICQkLnVwZGF0ZSgpO1xuICAgICAgICBydW5fYWxsKCQkLmJlZm9yZV91cGRhdGUpO1xuICAgICAgICBjb25zdCBkaXJ0eSA9ICQkLmRpcnR5O1xuICAgICAgICAkJC5kaXJ0eSA9IFstMV07XG4gICAgICAgICQkLmZyYWdtZW50ICYmICQkLmZyYWdtZW50LnAoJCQuY3R4LCBkaXJ0eSk7XG4gICAgICAgICQkLmFmdGVyX3VwZGF0ZS5mb3JFYWNoKGFkZF9yZW5kZXJfY2FsbGJhY2spO1xuICAgIH1cbn1cblxubGV0IHByb21pc2U7XG5mdW5jdGlvbiB3YWl0KCkge1xuICAgIGlmICghcHJvbWlzZSkge1xuICAgICAgICBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICAgIHByb21pc2UudGhlbigoKSA9PiB7XG4gICAgICAgICAgICBwcm9taXNlID0gbnVsbDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBwcm9taXNlO1xufVxuZnVuY3Rpb24gZGlzcGF0Y2gobm9kZSwgZGlyZWN0aW9uLCBraW5kKSB7XG4gICAgbm9kZS5kaXNwYXRjaEV2ZW50KGN1c3RvbV9ldmVudChgJHtkaXJlY3Rpb24gPyAnaW50cm8nIDogJ291dHJvJ30ke2tpbmR9YCkpO1xufVxuY29uc3Qgb3V0cm9pbmcgPSBuZXcgU2V0KCk7XG5sZXQgb3V0cm9zO1xuZnVuY3Rpb24gZ3JvdXBfb3V0cm9zKCkge1xuICAgIG91dHJvcyA9IHtcbiAgICAgICAgcjogMCxcbiAgICAgICAgYzogW10sXG4gICAgICAgIHA6IG91dHJvcyAvLyBwYXJlbnQgZ3JvdXBcbiAgICB9O1xufVxuZnVuY3Rpb24gY2hlY2tfb3V0cm9zKCkge1xuICAgIGlmICghb3V0cm9zLnIpIHtcbiAgICAgICAgcnVuX2FsbChvdXRyb3MuYyk7XG4gICAgfVxuICAgIG91dHJvcyA9IG91dHJvcy5wO1xufVxuZnVuY3Rpb24gdHJhbnNpdGlvbl9pbihibG9jaywgbG9jYWwpIHtcbiAgICBpZiAoYmxvY2sgJiYgYmxvY2suaSkge1xuICAgICAgICBvdXRyb2luZy5kZWxldGUoYmxvY2spO1xuICAgICAgICBibG9jay5pKGxvY2FsKTtcbiAgICB9XG59XG5mdW5jdGlvbiB0cmFuc2l0aW9uX291dChibG9jaywgbG9jYWwsIGRldGFjaCwgY2FsbGJhY2spIHtcbiAgICBpZiAoYmxvY2sgJiYgYmxvY2subykge1xuICAgICAgICBpZiAob3V0cm9pbmcuaGFzKGJsb2NrKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgb3V0cm9pbmcuYWRkKGJsb2NrKTtcbiAgICAgICAgb3V0cm9zLmMucHVzaCgoKSA9PiB7XG4gICAgICAgICAgICBvdXRyb2luZy5kZWxldGUoYmxvY2spO1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRldGFjaClcbiAgICAgICAgICAgICAgICAgICAgYmxvY2suZCgxKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgYmxvY2subyhsb2NhbCk7XG4gICAgfVxufVxuY29uc3QgbnVsbF90cmFuc2l0aW9uID0geyBkdXJhdGlvbjogMCB9O1xuZnVuY3Rpb24gY3JlYXRlX2luX3RyYW5zaXRpb24obm9kZSwgZm4sIHBhcmFtcykge1xuICAgIGxldCBjb25maWcgPSBmbihub2RlLCBwYXJhbXMpO1xuICAgIGxldCBydW5uaW5nID0gZmFsc2U7XG4gICAgbGV0IGFuaW1hdGlvbl9uYW1lO1xuICAgIGxldCB0YXNrO1xuICAgIGxldCB1aWQgPSAwO1xuICAgIGZ1bmN0aW9uIGNsZWFudXAoKSB7XG4gICAgICAgIGlmIChhbmltYXRpb25fbmFtZSlcbiAgICAgICAgICAgIGRlbGV0ZV9ydWxlKG5vZGUsIGFuaW1hdGlvbl9uYW1lKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ28oKSB7XG4gICAgICAgIGNvbnN0IHsgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDMwMCwgZWFzaW5nID0gaWRlbnRpdHksIHRpY2sgPSBub29wLCBjc3MgfSA9IGNvbmZpZyB8fCBudWxsX3RyYW5zaXRpb247XG4gICAgICAgIGlmIChjc3MpXG4gICAgICAgICAgICBhbmltYXRpb25fbmFtZSA9IGNyZWF0ZV9ydWxlKG5vZGUsIDAsIDEsIGR1cmF0aW9uLCBkZWxheSwgZWFzaW5nLCBjc3MsIHVpZCsrKTtcbiAgICAgICAgdGljaygwLCAxKTtcbiAgICAgICAgY29uc3Qgc3RhcnRfdGltZSA9IG5vdygpICsgZGVsYXk7XG4gICAgICAgIGNvbnN0IGVuZF90aW1lID0gc3RhcnRfdGltZSArIGR1cmF0aW9uO1xuICAgICAgICBpZiAodGFzaylcbiAgICAgICAgICAgIHRhc2suYWJvcnQoKTtcbiAgICAgICAgcnVubmluZyA9IHRydWU7XG4gICAgICAgIGFkZF9yZW5kZXJfY2FsbGJhY2soKCkgPT4gZGlzcGF0Y2gobm9kZSwgdHJ1ZSwgJ3N0YXJ0JykpO1xuICAgICAgICB0YXNrID0gbG9vcChub3cgPT4ge1xuICAgICAgICAgICAgaWYgKHJ1bm5pbmcpIHtcbiAgICAgICAgICAgICAgICBpZiAobm93ID49IGVuZF90aW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHRpY2soMSwgMCk7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKG5vZGUsIHRydWUsICdlbmQnKTtcbiAgICAgICAgICAgICAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcnVubmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobm93ID49IHN0YXJ0X3RpbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdCA9IGVhc2luZygobm93IC0gc3RhcnRfdGltZSkgLyBkdXJhdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIHRpY2sodCwgMSAtIHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBydW5uaW5nO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgbGV0IHN0YXJ0ZWQgPSBmYWxzZTtcbiAgICByZXR1cm4ge1xuICAgICAgICBzdGFydCgpIHtcbiAgICAgICAgICAgIGlmIChzdGFydGVkKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIHN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgZGVsZXRlX3J1bGUobm9kZSk7XG4gICAgICAgICAgICBpZiAoaXNfZnVuY3Rpb24oY29uZmlnKSkge1xuICAgICAgICAgICAgICAgIGNvbmZpZyA9IGNvbmZpZygpO1xuICAgICAgICAgICAgICAgIHdhaXQoKS50aGVuKGdvKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGdvKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGludmFsaWRhdGUoKSB7XG4gICAgICAgICAgICBzdGFydGVkID0gZmFsc2U7XG4gICAgICAgIH0sXG4gICAgICAgIGVuZCgpIHtcbiAgICAgICAgICAgIGlmIChydW5uaW5nKSB7XG4gICAgICAgICAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICAgICAgICAgIHJ1bm5pbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59XG5mdW5jdGlvbiBjcmVhdGVfb3V0X3RyYW5zaXRpb24obm9kZSwgZm4sIHBhcmFtcykge1xuICAgIGxldCBjb25maWcgPSBmbihub2RlLCBwYXJhbXMpO1xuICAgIGxldCBydW5uaW5nID0gdHJ1ZTtcbiAgICBsZXQgYW5pbWF0aW9uX25hbWU7XG4gICAgY29uc3QgZ3JvdXAgPSBvdXRyb3M7XG4gICAgZ3JvdXAuciArPSAxO1xuICAgIGZ1bmN0aW9uIGdvKCkge1xuICAgICAgICBjb25zdCB7IGRlbGF5ID0gMCwgZHVyYXRpb24gPSAzMDAsIGVhc2luZyA9IGlkZW50aXR5LCB0aWNrID0gbm9vcCwgY3NzIH0gPSBjb25maWcgfHwgbnVsbF90cmFuc2l0aW9uO1xuICAgICAgICBpZiAoY3NzKVxuICAgICAgICAgICAgYW5pbWF0aW9uX25hbWUgPSBjcmVhdGVfcnVsZShub2RlLCAxLCAwLCBkdXJhdGlvbiwgZGVsYXksIGVhc2luZywgY3NzKTtcbiAgICAgICAgY29uc3Qgc3RhcnRfdGltZSA9IG5vdygpICsgZGVsYXk7XG4gICAgICAgIGNvbnN0IGVuZF90aW1lID0gc3RhcnRfdGltZSArIGR1cmF0aW9uO1xuICAgICAgICBhZGRfcmVuZGVyX2NhbGxiYWNrKCgpID0+IGRpc3BhdGNoKG5vZGUsIGZhbHNlLCAnc3RhcnQnKSk7XG4gICAgICAgIGxvb3Aobm93ID0+IHtcbiAgICAgICAgICAgIGlmIChydW5uaW5nKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5vdyA+PSBlbmRfdGltZSkge1xuICAgICAgICAgICAgICAgICAgICB0aWNrKDAsIDEpO1xuICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChub2RlLCBmYWxzZSwgJ2VuZCcpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIS0tZ3JvdXAucikge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyB3aWxsIHJlc3VsdCBpbiBgZW5kKClgIGJlaW5nIGNhbGxlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNvIHdlIGRvbid0IG5lZWQgdG8gY2xlYW4gdXAgaGVyZVxuICAgICAgICAgICAgICAgICAgICAgICAgcnVuX2FsbChncm91cC5jKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChub3cgPj0gc3RhcnRfdGltZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0ID0gZWFzaW5nKChub3cgLSBzdGFydF90aW1lKSAvIGR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgdGljaygxIC0gdCwgdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJ1bm5pbmc7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoaXNfZnVuY3Rpb24oY29uZmlnKSkge1xuICAgICAgICB3YWl0KCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICBjb25maWcgPSBjb25maWcoKTtcbiAgICAgICAgICAgIGdvKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZ28oKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZW5kKHJlc2V0KSB7XG4gICAgICAgICAgICBpZiAocmVzZXQgJiYgY29uZmlnLnRpY2spIHtcbiAgICAgICAgICAgICAgICBjb25maWcudGljaygxLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChydW5uaW5nKSB7XG4gICAgICAgICAgICAgICAgaWYgKGFuaW1hdGlvbl9uYW1lKVxuICAgICAgICAgICAgICAgICAgICBkZWxldGVfcnVsZShub2RlLCBhbmltYXRpb25fbmFtZSk7XG4gICAgICAgICAgICAgICAgcnVubmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZV9iaWRpcmVjdGlvbmFsX3RyYW5zaXRpb24obm9kZSwgZm4sIHBhcmFtcywgaW50cm8pIHtcbiAgICBsZXQgY29uZmlnID0gZm4obm9kZSwgcGFyYW1zKTtcbiAgICBsZXQgdCA9IGludHJvID8gMCA6IDE7XG4gICAgbGV0IHJ1bm5pbmdfcHJvZ3JhbSA9IG51bGw7XG4gICAgbGV0IHBlbmRpbmdfcHJvZ3JhbSA9IG51bGw7XG4gICAgbGV0IGFuaW1hdGlvbl9uYW1lID0gbnVsbDtcbiAgICBmdW5jdGlvbiBjbGVhcl9hbmltYXRpb24oKSB7XG4gICAgICAgIGlmIChhbmltYXRpb25fbmFtZSlcbiAgICAgICAgICAgIGRlbGV0ZV9ydWxlKG5vZGUsIGFuaW1hdGlvbl9uYW1lKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaW5pdChwcm9ncmFtLCBkdXJhdGlvbikge1xuICAgICAgICBjb25zdCBkID0gKHByb2dyYW0uYiAtIHQpO1xuICAgICAgICBkdXJhdGlvbiAqPSBNYXRoLmFicyhkKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGE6IHQsXG4gICAgICAgICAgICBiOiBwcm9ncmFtLmIsXG4gICAgICAgICAgICBkLFxuICAgICAgICAgICAgZHVyYXRpb24sXG4gICAgICAgICAgICBzdGFydDogcHJvZ3JhbS5zdGFydCxcbiAgICAgICAgICAgIGVuZDogcHJvZ3JhbS5zdGFydCArIGR1cmF0aW9uLFxuICAgICAgICAgICAgZ3JvdXA6IHByb2dyYW0uZ3JvdXBcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ28oYikge1xuICAgICAgICBjb25zdCB7IGRlbGF5ID0gMCwgZHVyYXRpb24gPSAzMDAsIGVhc2luZyA9IGlkZW50aXR5LCB0aWNrID0gbm9vcCwgY3NzIH0gPSBjb25maWcgfHwgbnVsbF90cmFuc2l0aW9uO1xuICAgICAgICBjb25zdCBwcm9ncmFtID0ge1xuICAgICAgICAgICAgc3RhcnQ6IG5vdygpICsgZGVsYXksXG4gICAgICAgICAgICBiXG4gICAgICAgIH07XG4gICAgICAgIGlmICghYikge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSB0b2RvOiBpbXByb3ZlIHR5cGluZ3NcbiAgICAgICAgICAgIHByb2dyYW0uZ3JvdXAgPSBvdXRyb3M7XG4gICAgICAgICAgICBvdXRyb3MuciArPSAxO1xuICAgICAgICB9XG4gICAgICAgIGlmIChydW5uaW5nX3Byb2dyYW0gfHwgcGVuZGluZ19wcm9ncmFtKSB7XG4gICAgICAgICAgICBwZW5kaW5nX3Byb2dyYW0gPSBwcm9ncmFtO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gaWYgdGhpcyBpcyBhbiBpbnRybywgYW5kIHRoZXJlJ3MgYSBkZWxheSwgd2UgbmVlZCB0byBkb1xuICAgICAgICAgICAgLy8gYW4gaW5pdGlhbCB0aWNrIGFuZC9vciBhcHBseSBDU1MgYW5pbWF0aW9uIGltbWVkaWF0ZWx5XG4gICAgICAgICAgICBpZiAoY3NzKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJfYW5pbWF0aW9uKCk7XG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uX25hbWUgPSBjcmVhdGVfcnVsZShub2RlLCB0LCBiLCBkdXJhdGlvbiwgZGVsYXksIGVhc2luZywgY3NzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChiKVxuICAgICAgICAgICAgICAgIHRpY2soMCwgMSk7XG4gICAgICAgICAgICBydW5uaW5nX3Byb2dyYW0gPSBpbml0KHByb2dyYW0sIGR1cmF0aW9uKTtcbiAgICAgICAgICAgIGFkZF9yZW5kZXJfY2FsbGJhY2soKCkgPT4gZGlzcGF0Y2gobm9kZSwgYiwgJ3N0YXJ0JykpO1xuICAgICAgICAgICAgbG9vcChub3cgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChwZW5kaW5nX3Byb2dyYW0gJiYgbm93ID4gcGVuZGluZ19wcm9ncmFtLnN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJ1bm5pbmdfcHJvZ3JhbSA9IGluaXQocGVuZGluZ19wcm9ncmFtLCBkdXJhdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIHBlbmRpbmdfcHJvZ3JhbSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKG5vZGUsIHJ1bm5pbmdfcHJvZ3JhbS5iLCAnc3RhcnQnKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJfYW5pbWF0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbmltYXRpb25fbmFtZSA9IGNyZWF0ZV9ydWxlKG5vZGUsIHQsIHJ1bm5pbmdfcHJvZ3JhbS5iLCBydW5uaW5nX3Byb2dyYW0uZHVyYXRpb24sIDAsIGVhc2luZywgY29uZmlnLmNzcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJ1bm5pbmdfcHJvZ3JhbSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm93ID49IHJ1bm5pbmdfcHJvZ3JhbS5lbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpY2sodCA9IHJ1bm5pbmdfcHJvZ3JhbS5iLCAxIC0gdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChub2RlLCBydW5uaW5nX3Byb2dyYW0uYiwgJ2VuZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFwZW5kaW5nX3Byb2dyYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSdyZSBkb25lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJ1bm5pbmdfcHJvZ3JhbS5iKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGludHJvIFx1MjAxNCB3ZSBjYW4gdGlkeSB1cCBpbW1lZGlhdGVseVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhcl9hbmltYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG91dHJvIFx1MjAxNCBuZWVkcyB0byBiZSBjb29yZGluYXRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIS0tcnVubmluZ19wcm9ncmFtLmdyb3VwLnIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBydW5fYWxsKHJ1bm5pbmdfcHJvZ3JhbS5ncm91cC5jKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBydW5uaW5nX3Byb2dyYW0gPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG5vdyA+PSBydW5uaW5nX3Byb2dyYW0uc3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHAgPSBub3cgLSBydW5uaW5nX3Byb2dyYW0uc3RhcnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ID0gcnVubmluZ19wcm9ncmFtLmEgKyBydW5uaW5nX3Byb2dyYW0uZCAqIGVhc2luZyhwIC8gcnVubmluZ19wcm9ncmFtLmR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpY2sodCwgMSAtIHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAhIShydW5uaW5nX3Byb2dyYW0gfHwgcGVuZGluZ19wcm9ncmFtKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHJ1bihiKSB7XG4gICAgICAgICAgICBpZiAoaXNfZnVuY3Rpb24oY29uZmlnKSkge1xuICAgICAgICAgICAgICAgIHdhaXQoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgICAgICBjb25maWcgPSBjb25maWcoKTtcbiAgICAgICAgICAgICAgICAgICAgZ28oYik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBnbyhiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZW5kKCkge1xuICAgICAgICAgICAgY2xlYXJfYW5pbWF0aW9uKCk7XG4gICAgICAgICAgICBydW5uaW5nX3Byb2dyYW0gPSBwZW5kaW5nX3Byb2dyYW0gPSBudWxsO1xuICAgICAgICB9XG4gICAgfTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlX3Byb21pc2UocHJvbWlzZSwgaW5mbykge1xuICAgIGNvbnN0IHRva2VuID0gaW5mby50b2tlbiA9IHt9O1xuICAgIGZ1bmN0aW9uIHVwZGF0ZSh0eXBlLCBpbmRleCwga2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAoaW5mby50b2tlbiAhPT0gdG9rZW4pXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGluZm8ucmVzb2x2ZWQgPSB2YWx1ZTtcbiAgICAgICAgbGV0IGNoaWxkX2N0eCA9IGluZm8uY3R4O1xuICAgICAgICBpZiAoa2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNoaWxkX2N0eCA9IGNoaWxkX2N0eC5zbGljZSgpO1xuICAgICAgICAgICAgY2hpbGRfY3R4W2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBibG9jayA9IHR5cGUgJiYgKGluZm8uY3VycmVudCA9IHR5cGUpKGNoaWxkX2N0eCk7XG4gICAgICAgIGxldCBuZWVkc19mbHVzaCA9IGZhbHNlO1xuICAgICAgICBpZiAoaW5mby5ibG9jaykge1xuICAgICAgICAgICAgaWYgKGluZm8uYmxvY2tzKSB7XG4gICAgICAgICAgICAgICAgaW5mby5ibG9ja3MuZm9yRWFjaCgoYmxvY2ssIGkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGkgIT09IGluZGV4ICYmIGJsb2NrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBncm91cF9vdXRyb3MoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb25fb3V0KGJsb2NrLCAxLCAxLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZm8uYmxvY2tzW2ldID09PSBibG9jaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmZvLmJsb2Nrc1tpXSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVja19vdXRyb3MoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5mby5ibG9jay5kKDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYmxvY2suYygpO1xuICAgICAgICAgICAgdHJhbnNpdGlvbl9pbihibG9jaywgMSk7XG4gICAgICAgICAgICBibG9jay5tKGluZm8ubW91bnQoKSwgaW5mby5hbmNob3IpO1xuICAgICAgICAgICAgbmVlZHNfZmx1c2ggPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGluZm8uYmxvY2sgPSBibG9jaztcbiAgICAgICAgaWYgKGluZm8uYmxvY2tzKVxuICAgICAgICAgICAgaW5mby5ibG9ja3NbaW5kZXhdID0gYmxvY2s7XG4gICAgICAgIGlmIChuZWVkc19mbHVzaCkge1xuICAgICAgICAgICAgZmx1c2goKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoaXNfcHJvbWlzZShwcm9taXNlKSkge1xuICAgICAgICBjb25zdCBjdXJyZW50X2NvbXBvbmVudCA9IGdldF9jdXJyZW50X2NvbXBvbmVudCgpO1xuICAgICAgICBwcm9taXNlLnRoZW4odmFsdWUgPT4ge1xuICAgICAgICAgICAgc2V0X2N1cnJlbnRfY29tcG9uZW50KGN1cnJlbnRfY29tcG9uZW50KTtcbiAgICAgICAgICAgIHVwZGF0ZShpbmZvLnRoZW4sIDEsIGluZm8udmFsdWUsIHZhbHVlKTtcbiAgICAgICAgICAgIHNldF9jdXJyZW50X2NvbXBvbmVudChudWxsKTtcbiAgICAgICAgfSwgZXJyb3IgPT4ge1xuICAgICAgICAgICAgc2V0X2N1cnJlbnRfY29tcG9uZW50KGN1cnJlbnRfY29tcG9uZW50KTtcbiAgICAgICAgICAgIHVwZGF0ZShpbmZvLmNhdGNoLCAyLCBpbmZvLmVycm9yLCBlcnJvcik7XG4gICAgICAgICAgICBzZXRfY3VycmVudF9jb21wb25lbnQobnVsbCk7XG4gICAgICAgICAgICBpZiAoIWluZm8uaGFzQ2F0Y2gpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGlmIHdlIHByZXZpb3VzbHkgaGFkIGEgdGhlbi9jYXRjaCBibG9jaywgZGVzdHJveSBpdFxuICAgICAgICBpZiAoaW5mby5jdXJyZW50ICE9PSBpbmZvLnBlbmRpbmcpIHtcbiAgICAgICAgICAgIHVwZGF0ZShpbmZvLnBlbmRpbmcsIDApO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChpbmZvLmN1cnJlbnQgIT09IGluZm8udGhlbikge1xuICAgICAgICAgICAgdXBkYXRlKGluZm8udGhlbiwgMSwgaW5mby52YWx1ZSwgcHJvbWlzZSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpbmZvLnJlc29sdmVkID0gcHJvbWlzZTtcbiAgICB9XG59XG5mdW5jdGlvbiB1cGRhdGVfYXdhaXRfYmxvY2tfYnJhbmNoKGluZm8sIGN0eCwgZGlydHkpIHtcbiAgICBjb25zdCBjaGlsZF9jdHggPSBjdHguc2xpY2UoKTtcbiAgICBjb25zdCB7IHJlc29sdmVkIH0gPSBpbmZvO1xuICAgIGlmIChpbmZvLmN1cnJlbnQgPT09IGluZm8udGhlbikge1xuICAgICAgICBjaGlsZF9jdHhbaW5mby52YWx1ZV0gPSByZXNvbHZlZDtcbiAgICB9XG4gICAgaWYgKGluZm8uY3VycmVudCA9PT0gaW5mby5jYXRjaCkge1xuICAgICAgICBjaGlsZF9jdHhbaW5mby5lcnJvcl0gPSByZXNvbHZlZDtcbiAgICB9XG4gICAgaW5mby5ibG9jay5wKGNoaWxkX2N0eCwgZGlydHkpO1xufVxuXG5jb25zdCBnbG9iYWxzID0gKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnXG4gICAgPyB3aW5kb3dcbiAgICA6IHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICA/IGdsb2JhbFRoaXNcbiAgICAgICAgOiBnbG9iYWwpO1xuXG5mdW5jdGlvbiBkZXN0cm95X2Jsb2NrKGJsb2NrLCBsb29rdXApIHtcbiAgICBibG9jay5kKDEpO1xuICAgIGxvb2t1cC5kZWxldGUoYmxvY2sua2V5KTtcbn1cbmZ1bmN0aW9uIG91dHJvX2FuZF9kZXN0cm95X2Jsb2NrKGJsb2NrLCBsb29rdXApIHtcbiAgICB0cmFuc2l0aW9uX291dChibG9jaywgMSwgMSwgKCkgPT4ge1xuICAgICAgICBsb29rdXAuZGVsZXRlKGJsb2NrLmtleSk7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBmaXhfYW5kX2Rlc3Ryb3lfYmxvY2soYmxvY2ssIGxvb2t1cCkge1xuICAgIGJsb2NrLmYoKTtcbiAgICBkZXN0cm95X2Jsb2NrKGJsb2NrLCBsb29rdXApO1xufVxuZnVuY3Rpb24gZml4X2FuZF9vdXRyb19hbmRfZGVzdHJveV9ibG9jayhibG9jaywgbG9va3VwKSB7XG4gICAgYmxvY2suZigpO1xuICAgIG91dHJvX2FuZF9kZXN0cm95X2Jsb2NrKGJsb2NrLCBsb29rdXApO1xufVxuZnVuY3Rpb24gdXBkYXRlX2tleWVkX2VhY2gob2xkX2Jsb2NrcywgZGlydHksIGdldF9rZXksIGR5bmFtaWMsIGN0eCwgbGlzdCwgbG9va3VwLCBub2RlLCBkZXN0cm95LCBjcmVhdGVfZWFjaF9ibG9jaywgbmV4dCwgZ2V0X2NvbnRleHQpIHtcbiAgICBsZXQgbyA9IG9sZF9ibG9ja3MubGVuZ3RoO1xuICAgIGxldCBuID0gbGlzdC5sZW5ndGg7XG4gICAgbGV0IGkgPSBvO1xuICAgIGNvbnN0IG9sZF9pbmRleGVzID0ge307XG4gICAgd2hpbGUgKGktLSlcbiAgICAgICAgb2xkX2luZGV4ZXNbb2xkX2Jsb2Nrc1tpXS5rZXldID0gaTtcbiAgICBjb25zdCBuZXdfYmxvY2tzID0gW107XG4gICAgY29uc3QgbmV3X2xvb2t1cCA9IG5ldyBNYXAoKTtcbiAgICBjb25zdCBkZWx0YXMgPSBuZXcgTWFwKCk7XG4gICAgaSA9IG47XG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgICBjb25zdCBjaGlsZF9jdHggPSBnZXRfY29udGV4dChjdHgsIGxpc3QsIGkpO1xuICAgICAgICBjb25zdCBrZXkgPSBnZXRfa2V5KGNoaWxkX2N0eCk7XG4gICAgICAgIGxldCBibG9jayA9IGxvb2t1cC5nZXQoa2V5KTtcbiAgICAgICAgaWYgKCFibG9jaykge1xuICAgICAgICAgICAgYmxvY2sgPSBjcmVhdGVfZWFjaF9ibG9jayhrZXksIGNoaWxkX2N0eCk7XG4gICAgICAgICAgICBibG9jay5jKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZHluYW1pYykge1xuICAgICAgICAgICAgYmxvY2sucChjaGlsZF9jdHgsIGRpcnR5KTtcbiAgICAgICAgfVxuICAgICAgICBuZXdfbG9va3VwLnNldChrZXksIG5ld19ibG9ja3NbaV0gPSBibG9jayk7XG4gICAgICAgIGlmIChrZXkgaW4gb2xkX2luZGV4ZXMpXG4gICAgICAgICAgICBkZWx0YXMuc2V0KGtleSwgTWF0aC5hYnMoaSAtIG9sZF9pbmRleGVzW2tleV0pKTtcbiAgICB9XG4gICAgY29uc3Qgd2lsbF9tb3ZlID0gbmV3IFNldCgpO1xuICAgIGNvbnN0IGRpZF9tb3ZlID0gbmV3IFNldCgpO1xuICAgIGZ1bmN0aW9uIGluc2VydChibG9jaykge1xuICAgICAgICB0cmFuc2l0aW9uX2luKGJsb2NrLCAxKTtcbiAgICAgICAgYmxvY2subShub2RlLCBuZXh0KTtcbiAgICAgICAgbG9va3VwLnNldChibG9jay5rZXksIGJsb2NrKTtcbiAgICAgICAgbmV4dCA9IGJsb2NrLmZpcnN0O1xuICAgICAgICBuLS07XG4gICAgfVxuICAgIHdoaWxlIChvICYmIG4pIHtcbiAgICAgICAgY29uc3QgbmV3X2Jsb2NrID0gbmV3X2Jsb2Nrc1tuIC0gMV07XG4gICAgICAgIGNvbnN0IG9sZF9ibG9jayA9IG9sZF9ibG9ja3NbbyAtIDFdO1xuICAgICAgICBjb25zdCBuZXdfa2V5ID0gbmV3X2Jsb2NrLmtleTtcbiAgICAgICAgY29uc3Qgb2xkX2tleSA9IG9sZF9ibG9jay5rZXk7XG4gICAgICAgIGlmIChuZXdfYmxvY2sgPT09IG9sZF9ibG9jaykge1xuICAgICAgICAgICAgLy8gZG8gbm90aGluZ1xuICAgICAgICAgICAgbmV4dCA9IG5ld19ibG9jay5maXJzdDtcbiAgICAgICAgICAgIG8tLTtcbiAgICAgICAgICAgIG4tLTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghbmV3X2xvb2t1cC5oYXMob2xkX2tleSkpIHtcbiAgICAgICAgICAgIC8vIHJlbW92ZSBvbGQgYmxvY2tcbiAgICAgICAgICAgIGRlc3Ryb3kob2xkX2Jsb2NrLCBsb29rdXApO1xuICAgICAgICAgICAgby0tO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCFsb29rdXAuaGFzKG5ld19rZXkpIHx8IHdpbGxfbW92ZS5oYXMobmV3X2tleSkpIHtcbiAgICAgICAgICAgIGluc2VydChuZXdfYmxvY2spO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGRpZF9tb3ZlLmhhcyhvbGRfa2V5KSkge1xuICAgICAgICAgICAgby0tO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGRlbHRhcy5nZXQobmV3X2tleSkgPiBkZWx0YXMuZ2V0KG9sZF9rZXkpKSB7XG4gICAgICAgICAgICBkaWRfbW92ZS5hZGQobmV3X2tleSk7XG4gICAgICAgICAgICBpbnNlcnQobmV3X2Jsb2NrKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHdpbGxfbW92ZS5hZGQob2xkX2tleSk7XG4gICAgICAgICAgICBvLS07XG4gICAgICAgIH1cbiAgICB9XG4gICAgd2hpbGUgKG8tLSkge1xuICAgICAgICBjb25zdCBvbGRfYmxvY2sgPSBvbGRfYmxvY2tzW29dO1xuICAgICAgICBpZiAoIW5ld19sb29rdXAuaGFzKG9sZF9ibG9jay5rZXkpKVxuICAgICAgICAgICAgZGVzdHJveShvbGRfYmxvY2ssIGxvb2t1cCk7XG4gICAgfVxuICAgIHdoaWxlIChuKVxuICAgICAgICBpbnNlcnQobmV3X2Jsb2Nrc1tuIC0gMV0pO1xuICAgIHJldHVybiBuZXdfYmxvY2tzO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVfZWFjaF9rZXlzKGN0eCwgbGlzdCwgZ2V0X2NvbnRleHQsIGdldF9rZXkpIHtcbiAgICBjb25zdCBrZXlzID0gbmV3IFNldCgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBrZXkgPSBnZXRfa2V5KGdldF9jb250ZXh0KGN0eCwgbGlzdCwgaSkpO1xuICAgICAgICBpZiAoa2V5cy5oYXMoa2V5KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgaGF2ZSBkdXBsaWNhdGUga2V5cyBpbiBhIGtleWVkIGVhY2gnKTtcbiAgICAgICAgfVxuICAgICAgICBrZXlzLmFkZChrZXkpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZ2V0X3NwcmVhZF91cGRhdGUobGV2ZWxzLCB1cGRhdGVzKSB7XG4gICAgY29uc3QgdXBkYXRlID0ge307XG4gICAgY29uc3QgdG9fbnVsbF9vdXQgPSB7fTtcbiAgICBjb25zdCBhY2NvdW50ZWRfZm9yID0geyAkJHNjb3BlOiAxIH07XG4gICAgbGV0IGkgPSBsZXZlbHMubGVuZ3RoO1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgICAgY29uc3QgbyA9IGxldmVsc1tpXTtcbiAgICAgICAgY29uc3QgbiA9IHVwZGF0ZXNbaV07XG4gICAgICAgIGlmIChuKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBvKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEoa2V5IGluIG4pKVxuICAgICAgICAgICAgICAgICAgICB0b19udWxsX291dFtrZXldID0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIG4pIHtcbiAgICAgICAgICAgICAgICBpZiAoIWFjY291bnRlZF9mb3Jba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVba2V5XSA9IG5ba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgYWNjb3VudGVkX2ZvcltrZXldID0gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXZlbHNbaV0gPSBuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gbykge1xuICAgICAgICAgICAgICAgIGFjY291bnRlZF9mb3Jba2V5XSA9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBrZXkgaW4gdG9fbnVsbF9vdXQpIHtcbiAgICAgICAgaWYgKCEoa2V5IGluIHVwZGF0ZSkpXG4gICAgICAgICAgICB1cGRhdGVba2V5XSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHVwZGF0ZTtcbn1cbmZ1bmN0aW9uIGdldF9zcHJlYWRfb2JqZWN0KHNwcmVhZF9wcm9wcykge1xuICAgIHJldHVybiB0eXBlb2Ygc3ByZWFkX3Byb3BzID09PSAnb2JqZWN0JyAmJiBzcHJlYWRfcHJvcHMgIT09IG51bGwgPyBzcHJlYWRfcHJvcHMgOiB7fTtcbn1cblxuLy8gc291cmNlOiBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9pbmRpY2VzLmh0bWxcbmNvbnN0IGJvb2xlYW5fYXR0cmlidXRlcyA9IG5ldyBTZXQoW1xuICAgICdhbGxvd2Z1bGxzY3JlZW4nLFxuICAgICdhbGxvd3BheW1lbnRyZXF1ZXN0JyxcbiAgICAnYXN5bmMnLFxuICAgICdhdXRvZm9jdXMnLFxuICAgICdhdXRvcGxheScsXG4gICAgJ2NoZWNrZWQnLFxuICAgICdjb250cm9scycsXG4gICAgJ2RlZmF1bHQnLFxuICAgICdkZWZlcicsXG4gICAgJ2Rpc2FibGVkJyxcbiAgICAnZm9ybW5vdmFsaWRhdGUnLFxuICAgICdoaWRkZW4nLFxuICAgICdpc21hcCcsXG4gICAgJ2xvb3AnLFxuICAgICdtdWx0aXBsZScsXG4gICAgJ211dGVkJyxcbiAgICAnbm9tb2R1bGUnLFxuICAgICdub3ZhbGlkYXRlJyxcbiAgICAnb3BlbicsXG4gICAgJ3BsYXlzaW5saW5lJyxcbiAgICAncmVhZG9ubHknLFxuICAgICdyZXF1aXJlZCcsXG4gICAgJ3JldmVyc2VkJyxcbiAgICAnc2VsZWN0ZWQnXG5dKTtcblxuY29uc3QgaW52YWxpZF9hdHRyaWJ1dGVfbmFtZV9jaGFyYWN0ZXIgPSAvW1xccydcIj4vPVxcdXtGREQwfS1cXHV7RkRFRn1cXHV7RkZGRX1cXHV7RkZGRn1cXHV7MUZGRkV9XFx1ezFGRkZGfVxcdXsyRkZGRX1cXHV7MkZGRkZ9XFx1ezNGRkZFfVxcdXszRkZGRn1cXHV7NEZGRkV9XFx1ezRGRkZGfVxcdXs1RkZGRX1cXHV7NUZGRkZ9XFx1ezZGRkZFfVxcdXs2RkZGRn1cXHV7N0ZGRkV9XFx1ezdGRkZGfVxcdXs4RkZGRX1cXHV7OEZGRkZ9XFx1ezlGRkZFfVxcdXs5RkZGRn1cXHV7QUZGRkV9XFx1e0FGRkZGfVxcdXtCRkZGRX1cXHV7QkZGRkZ9XFx1e0NGRkZFfVxcdXtDRkZGRn1cXHV7REZGRkV9XFx1e0RGRkZGfVxcdXtFRkZGRX1cXHV7RUZGRkZ9XFx1e0ZGRkZFfVxcdXtGRkZGRn1cXHV7MTBGRkZFfVxcdXsxMEZGRkZ9XS91O1xuLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0yXG4vLyBodHRwczovL2luZnJhLnNwZWMud2hhdHdnLm9yZy8jbm9uY2hhcmFjdGVyXG5mdW5jdGlvbiBzcHJlYWQoYXJncywgYXR0cnNfdG9fYWRkKSB7XG4gICAgY29uc3QgYXR0cmlidXRlcyA9IE9iamVjdC5hc3NpZ24oe30sIC4uLmFyZ3MpO1xuICAgIGlmIChhdHRyc190b19hZGQpIHtcbiAgICAgICAgY29uc3QgY2xhc3Nlc190b19hZGQgPSBhdHRyc190b19hZGQuY2xhc3NlcztcbiAgICAgICAgY29uc3Qgc3R5bGVzX3RvX2FkZCA9IGF0dHJzX3RvX2FkZC5zdHlsZXM7XG4gICAgICAgIGlmIChjbGFzc2VzX3RvX2FkZCkge1xuICAgICAgICAgICAgaWYgKGF0dHJpYnV0ZXMuY2xhc3MgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXMuY2xhc3MgPSBjbGFzc2VzX3RvX2FkZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXMuY2xhc3MgKz0gJyAnICsgY2xhc3Nlc190b19hZGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN0eWxlc190b19hZGQpIHtcbiAgICAgICAgICAgIGlmIChhdHRyaWJ1dGVzLnN0eWxlID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzLnN0eWxlID0gc3R5bGVfb2JqZWN0X3RvX3N0cmluZyhzdHlsZXNfdG9fYWRkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXMuc3R5bGUgPSBzdHlsZV9vYmplY3RfdG9fc3RyaW5nKG1lcmdlX3Nzcl9zdHlsZXMoYXR0cmlidXRlcy5zdHlsZSwgc3R5bGVzX3RvX2FkZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBzdHIgPSAnJztcbiAgICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKG5hbWUgPT4ge1xuICAgICAgICBpZiAoaW52YWxpZF9hdHRyaWJ1dGVfbmFtZV9jaGFyYWN0ZXIudGVzdChuYW1lKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhdHRyaWJ1dGVzW25hbWVdO1xuICAgICAgICBpZiAodmFsdWUgPT09IHRydWUpXG4gICAgICAgICAgICBzdHIgKz0gJyAnICsgbmFtZTtcbiAgICAgICAgZWxzZSBpZiAoYm9vbGVhbl9hdHRyaWJ1dGVzLmhhcyhuYW1lLnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUpXG4gICAgICAgICAgICAgICAgc3RyICs9ICcgJyArIG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmFsdWUgIT0gbnVsbCkge1xuICAgICAgICAgICAgc3RyICs9IGAgJHtuYW1lfT1cIiR7dmFsdWV9XCJgO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHN0cjtcbn1cbmZ1bmN0aW9uIG1lcmdlX3Nzcl9zdHlsZXMoc3R5bGVfYXR0cmlidXRlLCBzdHlsZV9kaXJlY3RpdmUpIHtcbiAgICBjb25zdCBzdHlsZV9vYmplY3QgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGluZGl2aWR1YWxfc3R5bGUgb2Ygc3R5bGVfYXR0cmlidXRlLnNwbGl0KCc7JykpIHtcbiAgICAgICAgY29uc3QgY29sb25faW5kZXggPSBpbmRpdmlkdWFsX3N0eWxlLmluZGV4T2YoJzonKTtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluZGl2aWR1YWxfc3R5bGUuc2xpY2UoMCwgY29sb25faW5kZXgpLnRyaW0oKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBpbmRpdmlkdWFsX3N0eWxlLnNsaWNlKGNvbG9uX2luZGV4ICsgMSkudHJpbSgpO1xuICAgICAgICBpZiAoIW5hbWUpXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgc3R5bGVfb2JqZWN0W25hbWVdID0gdmFsdWU7XG4gICAgfVxuICAgIGZvciAoY29uc3QgbmFtZSBpbiBzdHlsZV9kaXJlY3RpdmUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBzdHlsZV9kaXJlY3RpdmVbbmFtZV07XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgc3R5bGVfb2JqZWN0W25hbWVdID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkZWxldGUgc3R5bGVfb2JqZWN0W25hbWVdO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzdHlsZV9vYmplY3Q7XG59XG5jb25zdCBlc2NhcGVkID0ge1xuICAgICdcIic6ICcmcXVvdDsnLFxuICAgIFwiJ1wiOiAnJiMzOTsnLFxuICAgICcmJzogJyZhbXA7JyxcbiAgICAnPCc6ICcmbHQ7JyxcbiAgICAnPic6ICcmZ3Q7J1xufTtcbmZ1bmN0aW9uIGVzY2FwZShodG1sKSB7XG4gICAgcmV0dXJuIFN0cmluZyhodG1sKS5yZXBsYWNlKC9bXCInJjw+XS9nLCBtYXRjaCA9PiBlc2NhcGVkW21hdGNoXSk7XG59XG5mdW5jdGlvbiBlc2NhcGVfYXR0cmlidXRlX3ZhbHVlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgPyBlc2NhcGUodmFsdWUpIDogdmFsdWU7XG59XG5mdW5jdGlvbiBlc2NhcGVfb2JqZWN0KG9iaikge1xuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgICByZXN1bHRba2V5XSA9IGVzY2FwZV9hdHRyaWJ1dGVfdmFsdWUob2JqW2tleV0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gZWFjaChpdGVtcywgZm4pIHtcbiAgICBsZXQgc3RyID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBzdHIgKz0gZm4oaXRlbXNbaV0sIGkpO1xuICAgIH1cbiAgICByZXR1cm4gc3RyO1xufVxuY29uc3QgbWlzc2luZ19jb21wb25lbnQgPSB7XG4gICAgJCRyZW5kZXI6ICgpID0+ICcnXG59O1xuZnVuY3Rpb24gdmFsaWRhdGVfY29tcG9uZW50KGNvbXBvbmVudCwgbmFtZSkge1xuICAgIGlmICghY29tcG9uZW50IHx8ICFjb21wb25lbnQuJCRyZW5kZXIpIHtcbiAgICAgICAgaWYgKG5hbWUgPT09ICdzdmVsdGU6Y29tcG9uZW50JylcbiAgICAgICAgICAgIG5hbWUgKz0gJyB0aGlzPXsuLi59JztcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGA8JHtuYW1lfT4gaXMgbm90IGEgdmFsaWQgU1NSIGNvbXBvbmVudC4gWW91IG1heSBuZWVkIHRvIHJldmlldyB5b3VyIGJ1aWxkIGNvbmZpZyB0byBlbnN1cmUgdGhhdCBkZXBlbmRlbmNpZXMgYXJlIGNvbXBpbGVkLCByYXRoZXIgdGhhbiBpbXBvcnRlZCBhcyBwcmUtY29tcGlsZWQgbW9kdWxlc2ApO1xuICAgIH1cbiAgICByZXR1cm4gY29tcG9uZW50O1xufVxuZnVuY3Rpb24gZGVidWcoZmlsZSwgbGluZSwgY29sdW1uLCB2YWx1ZXMpIHtcbiAgICBjb25zb2xlLmxvZyhge0BkZWJ1Z30gJHtmaWxlID8gZmlsZSArICcgJyA6ICcnfSgke2xpbmV9OiR7Y29sdW1ufSlgKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS5sb2codmFsdWVzKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgcmV0dXJuICcnO1xufVxubGV0IG9uX2Rlc3Ryb3k7XG5mdW5jdGlvbiBjcmVhdGVfc3NyX2NvbXBvbmVudChmbikge1xuICAgIGZ1bmN0aW9uICQkcmVuZGVyKHJlc3VsdCwgcHJvcHMsIGJpbmRpbmdzLCBzbG90cywgY29udGV4dCkge1xuICAgICAgICBjb25zdCBwYXJlbnRfY29tcG9uZW50ID0gY3VycmVudF9jb21wb25lbnQ7XG4gICAgICAgIGNvbnN0ICQkID0ge1xuICAgICAgICAgICAgb25fZGVzdHJveSxcbiAgICAgICAgICAgIGNvbnRleHQ6IG5ldyBNYXAoY29udGV4dCB8fCAocGFyZW50X2NvbXBvbmVudCA/IHBhcmVudF9jb21wb25lbnQuJCQuY29udGV4dCA6IFtdKSksXG4gICAgICAgICAgICAvLyB0aGVzZSB3aWxsIGJlIGltbWVkaWF0ZWx5IGRpc2NhcmRlZFxuICAgICAgICAgICAgb25fbW91bnQ6IFtdLFxuICAgICAgICAgICAgYmVmb3JlX3VwZGF0ZTogW10sXG4gICAgICAgICAgICBhZnRlcl91cGRhdGU6IFtdLFxuICAgICAgICAgICAgY2FsbGJhY2tzOiBibGFua19vYmplY3QoKVxuICAgICAgICB9O1xuICAgICAgICBzZXRfY3VycmVudF9jb21wb25lbnQoeyAkJCB9KTtcbiAgICAgICAgY29uc3QgaHRtbCA9IGZuKHJlc3VsdCwgcHJvcHMsIGJpbmRpbmdzLCBzbG90cyk7XG4gICAgICAgIHNldF9jdXJyZW50X2NvbXBvbmVudChwYXJlbnRfY29tcG9uZW50KTtcbiAgICAgICAgcmV0dXJuIGh0bWw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHJlbmRlcjogKHByb3BzID0ge30sIHsgJCRzbG90cyA9IHt9LCBjb250ZXh0ID0gbmV3IE1hcCgpIH0gPSB7fSkgPT4ge1xuICAgICAgICAgICAgb25fZGVzdHJveSA9IFtdO1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0geyB0aXRsZTogJycsIGhlYWQ6ICcnLCBjc3M6IG5ldyBTZXQoKSB9O1xuICAgICAgICAgICAgY29uc3QgaHRtbCA9ICQkcmVuZGVyKHJlc3VsdCwgcHJvcHMsIHt9LCAkJHNsb3RzLCBjb250ZXh0KTtcbiAgICAgICAgICAgIHJ1bl9hbGwob25fZGVzdHJveSk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGh0bWwsXG4gICAgICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgICAgICAgIGNvZGU6IEFycmF5LmZyb20ocmVzdWx0LmNzcykubWFwKGNzcyA9PiBjc3MuY29kZSkuam9pbignXFxuJyksXG4gICAgICAgICAgICAgICAgICAgIG1hcDogbnVsbCAvLyBUT0RPXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBoZWFkOiByZXN1bHQudGl0bGUgKyByZXN1bHQuaGVhZFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgJCRyZW5kZXJcbiAgICB9O1xufVxuZnVuY3Rpb24gYWRkX2F0dHJpYnV0ZShuYW1lLCB2YWx1ZSwgYm9vbGVhbikge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsIHx8IChib29sZWFuICYmICF2YWx1ZSkpXG4gICAgICAgIHJldHVybiAnJztcbiAgICByZXR1cm4gYCAke25hbWV9JHt2YWx1ZSA9PT0gdHJ1ZSAmJiBib29sZWFuX2F0dHJpYnV0ZXMuaGFzKG5hbWUpID8gJycgOiBgPSR7dHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IEpTT04uc3RyaW5naWZ5KGVzY2FwZSh2YWx1ZSkpIDogYFwiJHt2YWx1ZX1cImB9YH1gO1xufVxuZnVuY3Rpb24gYWRkX2NsYXNzZXMoY2xhc3Nlcykge1xuICAgIHJldHVybiBjbGFzc2VzID8gYCBjbGFzcz1cIiR7Y2xhc3Nlc31cImAgOiAnJztcbn1cbmZ1bmN0aW9uIHN0eWxlX29iamVjdF90b19zdHJpbmcoc3R5bGVfb2JqZWN0KSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHN0eWxlX29iamVjdClcbiAgICAgICAgLmZpbHRlcihrZXkgPT4gc3R5bGVfb2JqZWN0W2tleV0pXG4gICAgICAgIC5tYXAoa2V5ID0+IGAke2tleX06ICR7c3R5bGVfb2JqZWN0W2tleV19O2ApXG4gICAgICAgIC5qb2luKCcgJyk7XG59XG5mdW5jdGlvbiBhZGRfc3R5bGVzKHN0eWxlX29iamVjdCkge1xuICAgIGNvbnN0IHN0eWxlcyA9IHN0eWxlX29iamVjdF90b19zdHJpbmcoc3R5bGVfb2JqZWN0KTtcbiAgICByZXR1cm4gc3R5bGVzID8gYCBzdHlsZT1cIiR7c3R5bGVzfVwiYCA6ICcnO1xufVxuXG5mdW5jdGlvbiBiaW5kKGNvbXBvbmVudCwgbmFtZSwgY2FsbGJhY2spIHtcbiAgICBjb25zdCBpbmRleCA9IGNvbXBvbmVudC4kJC5wcm9wc1tuYW1lXTtcbiAgICBpZiAoaW5kZXggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb21wb25lbnQuJCQuYm91bmRbaW5kZXhdID0gY2FsbGJhY2s7XG4gICAgICAgIGNhbGxiYWNrKGNvbXBvbmVudC4kJC5jdHhbaW5kZXhdKTtcbiAgICB9XG59XG5mdW5jdGlvbiBjcmVhdGVfY29tcG9uZW50KGJsb2NrKSB7XG4gICAgYmxvY2sgJiYgYmxvY2suYygpO1xufVxuZnVuY3Rpb24gY2xhaW1fY29tcG9uZW50KGJsb2NrLCBwYXJlbnRfbm9kZXMpIHtcbiAgICBibG9jayAmJiBibG9jay5sKHBhcmVudF9ub2Rlcyk7XG59XG5mdW5jdGlvbiBtb3VudF9jb21wb25lbnQoY29tcG9uZW50LCB0YXJnZXQsIGFuY2hvciwgY3VzdG9tRWxlbWVudCkge1xuICAgIGNvbnN0IHsgZnJhZ21lbnQsIG9uX21vdW50LCBvbl9kZXN0cm95LCBhZnRlcl91cGRhdGUgfSA9IGNvbXBvbmVudC4kJDtcbiAgICBmcmFnbWVudCAmJiBmcmFnbWVudC5tKHRhcmdldCwgYW5jaG9yKTtcbiAgICBpZiAoIWN1c3RvbUVsZW1lbnQpIHtcbiAgICAgICAgLy8gb25Nb3VudCBoYXBwZW5zIGJlZm9yZSB0aGUgaW5pdGlhbCBhZnRlclVwZGF0ZVxuICAgICAgICBhZGRfcmVuZGVyX2NhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld19vbl9kZXN0cm95ID0gb25fbW91bnQubWFwKHJ1bikuZmlsdGVyKGlzX2Z1bmN0aW9uKTtcbiAgICAgICAgICAgIGlmIChvbl9kZXN0cm95KSB7XG4gICAgICAgICAgICAgICAgb25fZGVzdHJveS5wdXNoKC4uLm5ld19vbl9kZXN0cm95KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEVkZ2UgY2FzZSAtIGNvbXBvbmVudCB3YXMgZGVzdHJveWVkIGltbWVkaWF0ZWx5LFxuICAgICAgICAgICAgICAgIC8vIG1vc3QgbGlrZWx5IGFzIGEgcmVzdWx0IG9mIGEgYmluZGluZyBpbml0aWFsaXNpbmdcbiAgICAgICAgICAgICAgICBydW5fYWxsKG5ld19vbl9kZXN0cm95KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbXBvbmVudC4kJC5vbl9tb3VudCA9IFtdO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgYWZ0ZXJfdXBkYXRlLmZvckVhY2goYWRkX3JlbmRlcl9jYWxsYmFjayk7XG59XG5mdW5jdGlvbiBkZXN0cm95X2NvbXBvbmVudChjb21wb25lbnQsIGRldGFjaGluZykge1xuICAgIGNvbnN0ICQkID0gY29tcG9uZW50LiQkO1xuICAgIGlmICgkJC5mcmFnbWVudCAhPT0gbnVsbCkge1xuICAgICAgICBydW5fYWxsKCQkLm9uX2Rlc3Ryb3kpO1xuICAgICAgICAkJC5mcmFnbWVudCAmJiAkJC5mcmFnbWVudC5kKGRldGFjaGluZyk7XG4gICAgICAgIC8vIFRPRE8gbnVsbCBvdXQgb3RoZXIgcmVmcywgaW5jbHVkaW5nIGNvbXBvbmVudC4kJCAoYnV0IG5lZWQgdG9cbiAgICAgICAgLy8gcHJlc2VydmUgZmluYWwgc3RhdGU/KVxuICAgICAgICAkJC5vbl9kZXN0cm95ID0gJCQuZnJhZ21lbnQgPSBudWxsO1xuICAgICAgICAkJC5jdHggPSBbXTtcbiAgICB9XG59XG5mdW5jdGlvbiBtYWtlX2RpcnR5KGNvbXBvbmVudCwgaSkge1xuICAgIGlmIChjb21wb25lbnQuJCQuZGlydHlbMF0gPT09IC0xKSB7XG4gICAgICAgIGRpcnR5X2NvbXBvbmVudHMucHVzaChjb21wb25lbnQpO1xuICAgICAgICBzY2hlZHVsZV91cGRhdGUoKTtcbiAgICAgICAgY29tcG9uZW50LiQkLmRpcnR5LmZpbGwoMCk7XG4gICAgfVxuICAgIGNvbXBvbmVudC4kJC5kaXJ0eVsoaSAvIDMxKSB8IDBdIHw9ICgxIDw8IChpICUgMzEpKTtcbn1cbmZ1bmN0aW9uIGluaXQoY29tcG9uZW50LCBvcHRpb25zLCBpbnN0YW5jZSwgY3JlYXRlX2ZyYWdtZW50LCBub3RfZXF1YWwsIHByb3BzLCBhcHBlbmRfc3R5bGVzLCBkaXJ0eSA9IFstMV0pIHtcbiAgICBjb25zdCBwYXJlbnRfY29tcG9uZW50ID0gY3VycmVudF9jb21wb25lbnQ7XG4gICAgc2V0X2N1cnJlbnRfY29tcG9uZW50KGNvbXBvbmVudCk7XG4gICAgY29uc3QgJCQgPSBjb21wb25lbnQuJCQgPSB7XG4gICAgICAgIGZyYWdtZW50OiBudWxsLFxuICAgICAgICBjdHg6IG51bGwsXG4gICAgICAgIC8vIHN0YXRlXG4gICAgICAgIHByb3BzLFxuICAgICAgICB1cGRhdGU6IG5vb3AsXG4gICAgICAgIG5vdF9lcXVhbCxcbiAgICAgICAgYm91bmQ6IGJsYW5rX29iamVjdCgpLFxuICAgICAgICAvLyBsaWZlY3ljbGVcbiAgICAgICAgb25fbW91bnQ6IFtdLFxuICAgICAgICBvbl9kZXN0cm95OiBbXSxcbiAgICAgICAgb25fZGlzY29ubmVjdDogW10sXG4gICAgICAgIGJlZm9yZV91cGRhdGU6IFtdLFxuICAgICAgICBhZnRlcl91cGRhdGU6IFtdLFxuICAgICAgICBjb250ZXh0OiBuZXcgTWFwKG9wdGlvbnMuY29udGV4dCB8fCAocGFyZW50X2NvbXBvbmVudCA/IHBhcmVudF9jb21wb25lbnQuJCQuY29udGV4dCA6IFtdKSksXG4gICAgICAgIC8vIGV2ZXJ5dGhpbmcgZWxzZVxuICAgICAgICBjYWxsYmFja3M6IGJsYW5rX29iamVjdCgpLFxuICAgICAgICBkaXJ0eSxcbiAgICAgICAgc2tpcF9ib3VuZDogZmFsc2UsXG4gICAgICAgIHJvb3Q6IG9wdGlvbnMudGFyZ2V0IHx8IHBhcmVudF9jb21wb25lbnQuJCQucm9vdFxuICAgIH07XG4gICAgYXBwZW5kX3N0eWxlcyAmJiBhcHBlbmRfc3R5bGVzKCQkLnJvb3QpO1xuICAgIGxldCByZWFkeSA9IGZhbHNlO1xuICAgICQkLmN0eCA9IGluc3RhbmNlXG4gICAgICAgID8gaW5zdGFuY2UoY29tcG9uZW50LCBvcHRpb25zLnByb3BzIHx8IHt9LCAoaSwgcmV0LCAuLi5yZXN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHJlc3QubGVuZ3RoID8gcmVzdFswXSA6IHJldDtcbiAgICAgICAgICAgIGlmICgkJC5jdHggJiYgbm90X2VxdWFsKCQkLmN0eFtpXSwgJCQuY3R4W2ldID0gdmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEkJC5za2lwX2JvdW5kICYmICQkLmJvdW5kW2ldKVxuICAgICAgICAgICAgICAgICAgICAkJC5ib3VuZFtpXSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHJlYWR5KVxuICAgICAgICAgICAgICAgICAgICBtYWtlX2RpcnR5KGNvbXBvbmVudCwgaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICB9KVxuICAgICAgICA6IFtdO1xuICAgICQkLnVwZGF0ZSgpO1xuICAgIHJlYWR5ID0gdHJ1ZTtcbiAgICBydW5fYWxsKCQkLmJlZm9yZV91cGRhdGUpO1xuICAgIC8vIGBmYWxzZWAgYXMgYSBzcGVjaWFsIGNhc2Ugb2Ygbm8gRE9NIGNvbXBvbmVudFxuICAgICQkLmZyYWdtZW50ID0gY3JlYXRlX2ZyYWdtZW50ID8gY3JlYXRlX2ZyYWdtZW50KCQkLmN0eCkgOiBmYWxzZTtcbiAgICBpZiAob3B0aW9ucy50YXJnZXQpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuaHlkcmF0ZSkge1xuICAgICAgICAgICAgc3RhcnRfaHlkcmF0aW5nKCk7XG4gICAgICAgICAgICBjb25zdCBub2RlcyA9IGNoaWxkcmVuKG9wdGlvbnMudGFyZ2V0KTtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgICAkJC5mcmFnbWVudCAmJiAkJC5mcmFnbWVudC5sKG5vZGVzKTtcbiAgICAgICAgICAgIG5vZGVzLmZvckVhY2goZGV0YWNoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgICAkJC5mcmFnbWVudCAmJiAkJC5mcmFnbWVudC5jKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMuaW50cm8pXG4gICAgICAgICAgICB0cmFuc2l0aW9uX2luKGNvbXBvbmVudC4kJC5mcmFnbWVudCk7XG4gICAgICAgIG1vdW50X2NvbXBvbmVudChjb21wb25lbnQsIG9wdGlvbnMudGFyZ2V0LCBvcHRpb25zLmFuY2hvciwgb3B0aW9ucy5jdXN0b21FbGVtZW50KTtcbiAgICAgICAgZW5kX2h5ZHJhdGluZygpO1xuICAgICAgICBmbHVzaCgpO1xuICAgIH1cbiAgICBzZXRfY3VycmVudF9jb21wb25lbnQocGFyZW50X2NvbXBvbmVudCk7XG59XG5sZXQgU3ZlbHRlRWxlbWVudDtcbmlmICh0eXBlb2YgSFRNTEVsZW1lbnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBTdmVsdGVFbGVtZW50ID0gY2xhc3MgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gICAgICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgICAgIHRoaXMuYXR0YWNoU2hhZG93KHsgbW9kZTogJ29wZW4nIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICAgICAgY29uc3QgeyBvbl9tb3VudCB9ID0gdGhpcy4kJDtcbiAgICAgICAgICAgIHRoaXMuJCQub25fZGlzY29ubmVjdCA9IG9uX21vdW50Lm1hcChydW4pLmZpbHRlcihpc19mdW5jdGlvbik7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlIHRvZG86IGltcHJvdmUgdHlwaW5nc1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy4kJC5zbG90dGVkKSB7XG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSB0b2RvOiBpbXByb3ZlIHR5cGluZ3NcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZENoaWxkKHRoaXMuJCQuc2xvdHRlZFtrZXldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soYXR0ciwgX29sZFZhbHVlLCBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgdGhpc1thdHRyXSA9IG5ld1ZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICAgICAgcnVuX2FsbCh0aGlzLiQkLm9uX2Rpc2Nvbm5lY3QpO1xuICAgICAgICB9XG4gICAgICAgICRkZXN0cm95KCkge1xuICAgICAgICAgICAgZGVzdHJveV9jb21wb25lbnQodGhpcywgMSk7XG4gICAgICAgICAgICB0aGlzLiRkZXN0cm95ID0gbm9vcDtcbiAgICAgICAgfVxuICAgICAgICAkb24odHlwZSwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIC8vIFRPRE8gc2hvdWxkIHRoaXMgZGVsZWdhdGUgdG8gYWRkRXZlbnRMaXN0ZW5lcj9cbiAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrcyA9ICh0aGlzLiQkLmNhbGxiYWNrc1t0eXBlXSB8fCAodGhpcy4kJC5jYWxsYmFja3NbdHlwZV0gPSBbXSkpO1xuICAgICAgICAgICAgY2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IGNhbGxiYWNrcy5pbmRleE9mKGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT09IC0xKVxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFja3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgJHNldCgkJHByb3BzKSB7XG4gICAgICAgICAgICBpZiAodGhpcy4kJHNldCAmJiAhaXNfZW1wdHkoJCRwcm9wcykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiQkLnNraXBfYm91bmQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuJCRzZXQoJCRwcm9wcyk7XG4gICAgICAgICAgICAgICAgdGhpcy4kJC5za2lwX2JvdW5kID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xufVxuLyoqXG4gKiBCYXNlIGNsYXNzIGZvciBTdmVsdGUgY29tcG9uZW50cy4gVXNlZCB3aGVuIGRldj1mYWxzZS5cbiAqL1xuY2xhc3MgU3ZlbHRlQ29tcG9uZW50IHtcbiAgICAkZGVzdHJveSgpIHtcbiAgICAgICAgZGVzdHJveV9jb21wb25lbnQodGhpcywgMSk7XG4gICAgICAgIHRoaXMuJGRlc3Ryb3kgPSBub29wO1xuICAgIH1cbiAgICAkb24odHlwZSwgY2FsbGJhY2spIHtcbiAgICAgICAgY29uc3QgY2FsbGJhY2tzID0gKHRoaXMuJCQuY2FsbGJhY2tzW3R5cGVdIHx8ICh0aGlzLiQkLmNhbGxiYWNrc1t0eXBlXSA9IFtdKSk7XG4gICAgICAgIGNhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gY2FsbGJhY2tzLmluZGV4T2YoY2FsbGJhY2spO1xuICAgICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSlcbiAgICAgICAgICAgICAgICBjYWxsYmFja3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgJHNldCgkJHByb3BzKSB7XG4gICAgICAgIGlmICh0aGlzLiQkc2V0ICYmICFpc19lbXB0eSgkJHByb3BzKSkge1xuICAgICAgICAgICAgdGhpcy4kJC5za2lwX2JvdW5kID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuJCRzZXQoJCRwcm9wcyk7XG4gICAgICAgICAgICB0aGlzLiQkLnNraXBfYm91bmQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gZGlzcGF0Y2hfZGV2KHR5cGUsIGRldGFpbCkge1xuICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoY3VzdG9tX2V2ZW50KHR5cGUsIE9iamVjdC5hc3NpZ24oeyB2ZXJzaW9uOiAnMy40Ni4yJyB9LCBkZXRhaWwpLCB0cnVlKSk7XG59XG5mdW5jdGlvbiBhcHBlbmRfZGV2KHRhcmdldCwgbm9kZSkge1xuICAgIGRpc3BhdGNoX2RldignU3ZlbHRlRE9NSW5zZXJ0JywgeyB0YXJnZXQsIG5vZGUgfSk7XG4gICAgYXBwZW5kKHRhcmdldCwgbm9kZSk7XG59XG5mdW5jdGlvbiBhcHBlbmRfaHlkcmF0aW9uX2Rldih0YXJnZXQsIG5vZGUpIHtcbiAgICBkaXNwYXRjaF9kZXYoJ1N2ZWx0ZURPTUluc2VydCcsIHsgdGFyZ2V0LCBub2RlIH0pO1xuICAgIGFwcGVuZF9oeWRyYXRpb24odGFyZ2V0LCBub2RlKTtcbn1cbmZ1bmN0aW9uIGluc2VydF9kZXYodGFyZ2V0LCBub2RlLCBhbmNob3IpIHtcbiAgICBkaXNwYXRjaF9kZXYoJ1N2ZWx0ZURPTUluc2VydCcsIHsgdGFyZ2V0LCBub2RlLCBhbmNob3IgfSk7XG4gICAgaW5zZXJ0KHRhcmdldCwgbm9kZSwgYW5jaG9yKTtcbn1cbmZ1bmN0aW9uIGluc2VydF9oeWRyYXRpb25fZGV2KHRhcmdldCwgbm9kZSwgYW5jaG9yKSB7XG4gICAgZGlzcGF0Y2hfZGV2KCdTdmVsdGVET01JbnNlcnQnLCB7IHRhcmdldCwgbm9kZSwgYW5jaG9yIH0pO1xuICAgIGluc2VydF9oeWRyYXRpb24odGFyZ2V0LCBub2RlLCBhbmNob3IpO1xufVxuZnVuY3Rpb24gZGV0YWNoX2Rldihub2RlKSB7XG4gICAgZGlzcGF0Y2hfZGV2KCdTdmVsdGVET01SZW1vdmUnLCB7IG5vZGUgfSk7XG4gICAgZGV0YWNoKG5vZGUpO1xufVxuZnVuY3Rpb24gZGV0YWNoX2JldHdlZW5fZGV2KGJlZm9yZSwgYWZ0ZXIpIHtcbiAgICB3aGlsZSAoYmVmb3JlLm5leHRTaWJsaW5nICYmIGJlZm9yZS5uZXh0U2libGluZyAhPT0gYWZ0ZXIpIHtcbiAgICAgICAgZGV0YWNoX2RldihiZWZvcmUubmV4dFNpYmxpbmcpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGRldGFjaF9iZWZvcmVfZGV2KGFmdGVyKSB7XG4gICAgd2hpbGUgKGFmdGVyLnByZXZpb3VzU2libGluZykge1xuICAgICAgICBkZXRhY2hfZGV2KGFmdGVyLnByZXZpb3VzU2libGluZyk7XG4gICAgfVxufVxuZnVuY3Rpb24gZGV0YWNoX2FmdGVyX2RldihiZWZvcmUpIHtcbiAgICB3aGlsZSAoYmVmb3JlLm5leHRTaWJsaW5nKSB7XG4gICAgICAgIGRldGFjaF9kZXYoYmVmb3JlLm5leHRTaWJsaW5nKTtcbiAgICB9XG59XG5mdW5jdGlvbiBsaXN0ZW5fZGV2KG5vZGUsIGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zLCBoYXNfcHJldmVudF9kZWZhdWx0LCBoYXNfc3RvcF9wcm9wYWdhdGlvbikge1xuICAgIGNvbnN0IG1vZGlmaWVycyA9IG9wdGlvbnMgPT09IHRydWUgPyBbJ2NhcHR1cmUnXSA6IG9wdGlvbnMgPyBBcnJheS5mcm9tKE9iamVjdC5rZXlzKG9wdGlvbnMpKSA6IFtdO1xuICAgIGlmIChoYXNfcHJldmVudF9kZWZhdWx0KVxuICAgICAgICBtb2RpZmllcnMucHVzaCgncHJldmVudERlZmF1bHQnKTtcbiAgICBpZiAoaGFzX3N0b3BfcHJvcGFnYXRpb24pXG4gICAgICAgIG1vZGlmaWVycy5wdXNoKCdzdG9wUHJvcGFnYXRpb24nKTtcbiAgICBkaXNwYXRjaF9kZXYoJ1N2ZWx0ZURPTUFkZEV2ZW50TGlzdGVuZXInLCB7IG5vZGUsIGV2ZW50LCBoYW5kbGVyLCBtb2RpZmllcnMgfSk7XG4gICAgY29uc3QgZGlzcG9zZSA9IGxpc3Rlbihub2RlLCBldmVudCwgaGFuZGxlciwgb3B0aW9ucyk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgZGlzcGF0Y2hfZGV2KCdTdmVsdGVET01SZW1vdmVFdmVudExpc3RlbmVyJywgeyBub2RlLCBldmVudCwgaGFuZGxlciwgbW9kaWZpZXJzIH0pO1xuICAgICAgICBkaXNwb3NlKCk7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGF0dHJfZGV2KG5vZGUsIGF0dHJpYnV0ZSwgdmFsdWUpIHtcbiAgICBhdHRyKG5vZGUsIGF0dHJpYnV0ZSwgdmFsdWUpO1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKVxuICAgICAgICBkaXNwYXRjaF9kZXYoJ1N2ZWx0ZURPTVJlbW92ZUF0dHJpYnV0ZScsIHsgbm9kZSwgYXR0cmlidXRlIH0pO1xuICAgIGVsc2VcbiAgICAgICAgZGlzcGF0Y2hfZGV2KCdTdmVsdGVET01TZXRBdHRyaWJ1dGUnLCB7IG5vZGUsIGF0dHJpYnV0ZSwgdmFsdWUgfSk7XG59XG5mdW5jdGlvbiBwcm9wX2Rldihub2RlLCBwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgICBub2RlW3Byb3BlcnR5XSA9IHZhbHVlO1xuICAgIGRpc3BhdGNoX2RldignU3ZlbHRlRE9NU2V0UHJvcGVydHknLCB7IG5vZGUsIHByb3BlcnR5LCB2YWx1ZSB9KTtcbn1cbmZ1bmN0aW9uIGRhdGFzZXRfZGV2KG5vZGUsIHByb3BlcnR5LCB2YWx1ZSkge1xuICAgIG5vZGUuZGF0YXNldFtwcm9wZXJ0eV0gPSB2YWx1ZTtcbiAgICBkaXNwYXRjaF9kZXYoJ1N2ZWx0ZURPTVNldERhdGFzZXQnLCB7IG5vZGUsIHByb3BlcnR5LCB2YWx1ZSB9KTtcbn1cbmZ1bmN0aW9uIHNldF9kYXRhX2Rldih0ZXh0LCBkYXRhKSB7XG4gICAgZGF0YSA9ICcnICsgZGF0YTtcbiAgICBpZiAodGV4dC53aG9sZVRleHQgPT09IGRhdGEpXG4gICAgICAgIHJldHVybjtcbiAgICBkaXNwYXRjaF9kZXYoJ1N2ZWx0ZURPTVNldERhdGEnLCB7IG5vZGU6IHRleHQsIGRhdGEgfSk7XG4gICAgdGV4dC5kYXRhID0gZGF0YTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlX2VhY2hfYXJndW1lbnQoYXJnKSB7XG4gICAgaWYgKHR5cGVvZiBhcmcgIT09ICdzdHJpbmcnICYmICEoYXJnICYmIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmICdsZW5ndGgnIGluIGFyZykpIHtcbiAgICAgICAgbGV0IG1zZyA9ICd7I2VhY2h9IG9ubHkgaXRlcmF0ZXMgb3ZlciBhcnJheS1saWtlIG9iamVjdHMuJztcbiAgICAgICAgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgYXJnICYmIFN5bWJvbC5pdGVyYXRvciBpbiBhcmcpIHtcbiAgICAgICAgICAgIG1zZyArPSAnIFlvdSBjYW4gdXNlIGEgc3ByZWFkIHRvIGNvbnZlcnQgdGhpcyBpdGVyYWJsZSBpbnRvIGFuIGFycmF5Lic7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgfVxufVxuZnVuY3Rpb24gdmFsaWRhdGVfc2xvdHMobmFtZSwgc2xvdCwga2V5cykge1xuICAgIGZvciAoY29uc3Qgc2xvdF9rZXkgb2YgT2JqZWN0LmtleXMoc2xvdCkpIHtcbiAgICAgICAgaWYgKCF+a2V5cy5pbmRleE9mKHNsb3Rfa2V5KSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGA8JHtuYW1lfT4gcmVjZWl2ZWQgYW4gdW5leHBlY3RlZCBzbG90IFwiJHtzbG90X2tleX1cIi5gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgU3ZlbHRlIGNvbXBvbmVudHMgd2l0aCBzb21lIG1pbm9yIGRldi1lbmhhbmNlbWVudHMuIFVzZWQgd2hlbiBkZXY9dHJ1ZS5cbiAqL1xuY2xhc3MgU3ZlbHRlQ29tcG9uZW50RGV2IGV4dGVuZHMgU3ZlbHRlQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIGlmICghb3B0aW9ucyB8fCAoIW9wdGlvbnMudGFyZ2V0ICYmICFvcHRpb25zLiQkaW5saW5lKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiJ3RhcmdldCcgaXMgYSByZXF1aXJlZCBvcHRpb25cIik7XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgJGRlc3Ryb3koKSB7XG4gICAgICAgIHN1cGVyLiRkZXN0cm95KCk7XG4gICAgICAgIHRoaXMuJGRlc3Ryb3kgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0NvbXBvbmVudCB3YXMgYWxyZWFkeSBkZXN0cm95ZWQnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgICAgIH07XG4gICAgfVxuICAgICRjYXB0dXJlX3N0YXRlKCkgeyB9XG4gICAgJGluamVjdF9zdGF0ZSgpIHsgfVxufVxuLyoqXG4gKiBCYXNlIGNsYXNzIHRvIGNyZWF0ZSBzdHJvbmdseSB0eXBlZCBTdmVsdGUgY29tcG9uZW50cy5cbiAqIFRoaXMgb25seSBleGlzdHMgZm9yIHR5cGluZyBwdXJwb3NlcyBhbmQgc2hvdWxkIGJlIHVzZWQgaW4gYC5kLnRzYCBmaWxlcy5cbiAqXG4gKiAjIyMgRXhhbXBsZTpcbiAqXG4gKiBZb3UgaGF2ZSBjb21wb25lbnQgbGlicmFyeSBvbiBucG0gY2FsbGVkIGBjb21wb25lbnQtbGlicmFyeWAsIGZyb20gd2hpY2hcbiAqIHlvdSBleHBvcnQgYSBjb21wb25lbnQgY2FsbGVkIGBNeUNvbXBvbmVudGAuIEZvciBTdmVsdGUrVHlwZVNjcmlwdCB1c2VycyxcbiAqIHlvdSB3YW50IHRvIHByb3ZpZGUgdHlwaW5ncy4gVGhlcmVmb3JlIHlvdSBjcmVhdGUgYSBgaW5kZXguZC50c2A6XG4gKiBgYGB0c1xuICogaW1wb3J0IHsgU3ZlbHRlQ29tcG9uZW50VHlwZWQgfSBmcm9tIFwic3ZlbHRlXCI7XG4gKiBleHBvcnQgY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnRUeXBlZDx7Zm9vOiBzdHJpbmd9PiB7fVxuICogYGBgXG4gKiBUeXBpbmcgdGhpcyBtYWtlcyBpdCBwb3NzaWJsZSBmb3IgSURFcyBsaWtlIFZTIENvZGUgd2l0aCB0aGUgU3ZlbHRlIGV4dGVuc2lvblxuICogdG8gcHJvdmlkZSBpbnRlbGxpc2Vuc2UgYW5kIHRvIHVzZSB0aGUgY29tcG9uZW50IGxpa2UgdGhpcyBpbiBhIFN2ZWx0ZSBmaWxlXG4gKiB3aXRoIFR5cGVTY3JpcHQ6XG4gKiBgYGBzdmVsdGVcbiAqIDxzY3JpcHQgbGFuZz1cInRzXCI+XG4gKiBcdGltcG9ydCB7IE15Q29tcG9uZW50IH0gZnJvbSBcImNvbXBvbmVudC1saWJyYXJ5XCI7XG4gKiA8L3NjcmlwdD5cbiAqIDxNeUNvbXBvbmVudCBmb289eydiYXInfSAvPlxuICogYGBgXG4gKlxuICogIyMjIyBXaHkgbm90IG1ha2UgdGhpcyBwYXJ0IG9mIGBTdmVsdGVDb21wb25lbnQoRGV2KWA/XG4gKiBCZWNhdXNlXG4gKiBgYGB0c1xuICogY2xhc3MgQVN1YmNsYXNzT2ZTdmVsdGVDb21wb25lbnQgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnQ8e2Zvbzogc3RyaW5nfT4ge31cbiAqIGNvbnN0IGNvbXBvbmVudDogdHlwZW9mIFN2ZWx0ZUNvbXBvbmVudCA9IEFTdWJjbGFzc09mU3ZlbHRlQ29tcG9uZW50O1xuICogYGBgXG4gKiB3aWxsIHRocm93IGEgdHlwZSBlcnJvciwgc28gd2UgbmVlZCB0byBzZXBhcmF0ZSB0aGUgbW9yZSBzdHJpY3RseSB0eXBlZCBjbGFzcy5cbiAqL1xuY2xhc3MgU3ZlbHRlQ29tcG9uZW50VHlwZWQgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XG4gICAgfVxufVxuZnVuY3Rpb24gbG9vcF9ndWFyZCh0aW1lb3V0KSB7XG4gICAgY29uc3Qgc3RhcnQgPSBEYXRlLm5vdygpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGlmIChEYXRlLm5vdygpIC0gc3RhcnQgPiB0aW1lb3V0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luZmluaXRlIGxvb3AgZGV0ZWN0ZWQnKTtcbiAgICAgICAgfVxuICAgIH07XG59XG5cbmV4cG9ydCB7IEh0bWxUYWcsIEh0bWxUYWdIeWRyYXRpb24sIFN2ZWx0ZUNvbXBvbmVudCwgU3ZlbHRlQ29tcG9uZW50RGV2LCBTdmVsdGVDb21wb25lbnRUeXBlZCwgU3ZlbHRlRWxlbWVudCwgYWN0aW9uX2Rlc3Ryb3llciwgYWRkX2F0dHJpYnV0ZSwgYWRkX2NsYXNzZXMsIGFkZF9mbHVzaF9jYWxsYmFjaywgYWRkX2xvY2F0aW9uLCBhZGRfcmVuZGVyX2NhbGxiYWNrLCBhZGRfcmVzaXplX2xpc3RlbmVyLCBhZGRfc3R5bGVzLCBhZGRfdHJhbnNmb3JtLCBhZnRlclVwZGF0ZSwgYXBwZW5kLCBhcHBlbmRfZGV2LCBhcHBlbmRfZW1wdHlfc3R5bGVzaGVldCwgYXBwZW5kX2h5ZHJhdGlvbiwgYXBwZW5kX2h5ZHJhdGlvbl9kZXYsIGFwcGVuZF9zdHlsZXMsIGFzc2lnbiwgYXR0ciwgYXR0cl9kZXYsIGF0dHJpYnV0ZV90b19vYmplY3QsIGJlZm9yZVVwZGF0ZSwgYmluZCwgYmluZGluZ19jYWxsYmFja3MsIGJsYW5rX29iamVjdCwgYnViYmxlLCBjaGVja19vdXRyb3MsIGNoaWxkcmVuLCBjbGFpbV9jb21wb25lbnQsIGNsYWltX2VsZW1lbnQsIGNsYWltX2h0bWxfdGFnLCBjbGFpbV9zcGFjZSwgY2xhaW1fc3ZnX2VsZW1lbnQsIGNsYWltX3RleHQsIGNsZWFyX2xvb3BzLCBjb21wb25lbnRfc3Vic2NyaWJlLCBjb21wdXRlX3Jlc3RfcHJvcHMsIGNvbXB1dGVfc2xvdHMsIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciwgY3JlYXRlX2FuaW1hdGlvbiwgY3JlYXRlX2JpZGlyZWN0aW9uYWxfdHJhbnNpdGlvbiwgY3JlYXRlX2NvbXBvbmVudCwgY3JlYXRlX2luX3RyYW5zaXRpb24sIGNyZWF0ZV9vdXRfdHJhbnNpdGlvbiwgY3JlYXRlX3Nsb3QsIGNyZWF0ZV9zc3JfY29tcG9uZW50LCBjdXJyZW50X2NvbXBvbmVudCwgY3VzdG9tX2V2ZW50LCBkYXRhc2V0X2RldiwgZGVidWcsIGRlc3Ryb3lfYmxvY2ssIGRlc3Ryb3lfY29tcG9uZW50LCBkZXN0cm95X2VhY2gsIGRldGFjaCwgZGV0YWNoX2FmdGVyX2RldiwgZGV0YWNoX2JlZm9yZV9kZXYsIGRldGFjaF9iZXR3ZWVuX2RldiwgZGV0YWNoX2RldiwgZGlydHlfY29tcG9uZW50cywgZGlzcGF0Y2hfZGV2LCBlYWNoLCBlbGVtZW50LCBlbGVtZW50X2lzLCBlbXB0eSwgZW5kX2h5ZHJhdGluZywgZXNjYXBlLCBlc2NhcGVfYXR0cmlidXRlX3ZhbHVlLCBlc2NhcGVfb2JqZWN0LCBlc2NhcGVkLCBleGNsdWRlX2ludGVybmFsX3Byb3BzLCBmaXhfYW5kX2Rlc3Ryb3lfYmxvY2ssIGZpeF9hbmRfb3V0cm9fYW5kX2Rlc3Ryb3lfYmxvY2ssIGZpeF9wb3NpdGlvbiwgZmx1c2gsIGdldEFsbENvbnRleHRzLCBnZXRDb250ZXh0LCBnZXRfYWxsX2RpcnR5X2Zyb21fc2NvcGUsIGdldF9iaW5kaW5nX2dyb3VwX3ZhbHVlLCBnZXRfY3VycmVudF9jb21wb25lbnQsIGdldF9jdXN0b21fZWxlbWVudHNfc2xvdHMsIGdldF9yb290X2Zvcl9zdHlsZSwgZ2V0X3Nsb3RfY2hhbmdlcywgZ2V0X3NwcmVhZF9vYmplY3QsIGdldF9zcHJlYWRfdXBkYXRlLCBnZXRfc3RvcmVfdmFsdWUsIGdsb2JhbHMsIGdyb3VwX291dHJvcywgaGFuZGxlX3Byb21pc2UsIGhhc0NvbnRleHQsIGhhc19wcm9wLCBpZGVudGl0eSwgaW5pdCwgaW5zZXJ0LCBpbnNlcnRfZGV2LCBpbnNlcnRfaHlkcmF0aW9uLCBpbnNlcnRfaHlkcmF0aW9uX2RldiwgaW50cm9zLCBpbnZhbGlkX2F0dHJpYnV0ZV9uYW1lX2NoYXJhY3RlciwgaXNfY2xpZW50LCBpc19jcm9zc29yaWdpbiwgaXNfZW1wdHksIGlzX2Z1bmN0aW9uLCBpc19wcm9taXNlLCBsaXN0ZW4sIGxpc3Rlbl9kZXYsIGxvb3AsIGxvb3BfZ3VhcmQsIG1lcmdlX3Nzcl9zdHlsZXMsIG1pc3NpbmdfY29tcG9uZW50LCBtb3VudF9jb21wb25lbnQsIG5vb3AsIG5vdF9lcXVhbCwgbm93LCBudWxsX3RvX2VtcHR5LCBvYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzLCBvbkRlc3Ryb3ksIG9uTW91bnQsIG9uY2UsIG91dHJvX2FuZF9kZXN0cm95X2Jsb2NrLCBwcmV2ZW50X2RlZmF1bHQsIHByb3BfZGV2LCBxdWVyeV9zZWxlY3Rvcl9hbGwsIHJhZiwgcnVuLCBydW5fYWxsLCBzYWZlX25vdF9lcXVhbCwgc2NoZWR1bGVfdXBkYXRlLCBzZWxlY3RfbXVsdGlwbGVfdmFsdWUsIHNlbGVjdF9vcHRpb24sIHNlbGVjdF9vcHRpb25zLCBzZWxlY3RfdmFsdWUsIHNlbGYsIHNldENvbnRleHQsIHNldF9hdHRyaWJ1dGVzLCBzZXRfY3VycmVudF9jb21wb25lbnQsIHNldF9jdXN0b21fZWxlbWVudF9kYXRhLCBzZXRfZGF0YSwgc2V0X2RhdGFfZGV2LCBzZXRfaW5wdXRfdHlwZSwgc2V0X2lucHV0X3ZhbHVlLCBzZXRfbm93LCBzZXRfcmFmLCBzZXRfc3RvcmVfdmFsdWUsIHNldF9zdHlsZSwgc2V0X3N2Z19hdHRyaWJ1dGVzLCBzcGFjZSwgc3ByZWFkLCBzcmNfdXJsX2VxdWFsLCBzdGFydF9oeWRyYXRpbmcsIHN0b3BfcHJvcGFnYXRpb24sIHN1YnNjcmliZSwgc3ZnX2VsZW1lbnQsIHRleHQsIHRpY2ssIHRpbWVfcmFuZ2VzX3RvX2FycmF5LCB0b19udW1iZXIsIHRvZ2dsZV9jbGFzcywgdHJhbnNpdGlvbl9pbiwgdHJhbnNpdGlvbl9vdXQsIHRydXN0ZWQsIHVwZGF0ZV9hd2FpdF9ibG9ja19icmFuY2gsIHVwZGF0ZV9rZXllZF9lYWNoLCB1cGRhdGVfc2xvdCwgdXBkYXRlX3Nsb3RfYmFzZSwgdmFsaWRhdGVfY29tcG9uZW50LCB2YWxpZGF0ZV9lYWNoX2FyZ3VtZW50LCB2YWxpZGF0ZV9lYWNoX2tleXMsIHZhbGlkYXRlX3Nsb3RzLCB2YWxpZGF0ZV9zdG9yZSwgeGxpbmtfYXR0ciB9O1xuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHR5cGUgeyBDYWxlbmRhciB9IGZyb20gXCJzcmMvQHR5cGVzXCI7XG4gICAgaW1wb3J0IHR5cGUgRmFudGFzeUNhbGVuZGFyIGZyb20gXCJzcmMvbWFpblwiO1xuICAgIGltcG9ydCBjb3B5IGZyb20gXCJmYXN0LWNvcHlcIjtcbiAgICBpbXBvcnQgeyBFeHRyYUJ1dHRvbkNvbXBvbmVudCwgc2V0SWNvbiwgU2V0dGluZyB9IGZyb20gXCJvYnNpZGlhblwiO1xuICAgIGltcG9ydCB7IENhbGVuZGFyUHJlc2V0TW9kYWwgfSBmcm9tIFwiLi4vbW9kYWxzL3ByZXNldFwiO1xuICAgIGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciwgc2V0Q29udGV4dCB9IGZyb20gXCJzdmVsdGVcIjtcbiAgICBpbXBvcnQgeyBmbHkgfSBmcm9tIFwic3ZlbHRlL3RyYW5zaXRpb25cIjtcbiAgICBpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSBcInN2ZWx0ZVwiO1xuICAgIGltcG9ydCBDdXJyZW50RGF0ZSBmcm9tIFwiLi9Db250YWluZXJzL0N1cnJlbnREYXRlLnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBJbmZvIGZyb20gXCIuL0NvbnRhaW5lcnMvSW5mby5zdmVsdGVcIjtcbiAgICBpbXBvcnQgV2Vla2RheUNvbnRhaW5lciBmcm9tIFwiLi9Db250YWluZXJzL1dlZWtkYXlDb250YWluZXIuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IE1vbnRoQ29udGFpbmVyIGZyb20gXCIuL0NvbnRhaW5lcnMvTW9udGhDb250YWluZXIuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IFllYXJDb250YWluZXIgZnJvbSBcIi4vQ29udGFpbmVycy9ZZWFyQ29udGFpbmVyLnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBFdmVudENvbnRhaW5lciBmcm9tIFwiLi9Db250YWluZXJzL0V2ZW50Q29udGFpbmVyLnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBDYXRlZ29yeUNvbnRhaW5lciBmcm9tIFwiLi9Db250YWluZXJzL0NhdGVnb3J5Q29udGFpbmVyLnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBNb29uQ29udGFpbmVyIGZyb20gXCIuL0NvbnRhaW5lcnMvTW9vbkNvbnRhaW5lci5zdmVsdGVcIjtcbiAgICBpbXBvcnQgTGVhcERheUNvbnRhaW5lciBmcm9tIFwiLi9Db250YWluZXJzL0xlYXBEYXlDb250YWluZXIuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IHsgV3JpdGFibGUsIHdyaXRhYmxlIH0gZnJvbSBcInN2ZWx0ZS9zdG9yZVwiO1xuICAgIGltcG9ydCB7IGdldENhblNhdmUsIGdldE1pc3NpbmdOb3RpY2UsIHdhcm5pbmcgfSBmcm9tIFwiLi9VdGlsaXRpZXMvdXRpbHNcIjtcbiAgICBpbXBvcnQgeyBDb25maXJtRXhpdE1vZGFsIH0gZnJvbSBcIi4uL21vZGFscy9jb25maXJtXCI7XG5cbiAgICBsZXQgcmVhZHkgPSBmYWxzZTtcblxuICAgIG9uTW91bnQoKCkgPT4ge1xuICAgICAgICByZWFkeSA9IHRydWU7XG4gICAgfSk7XG5cbiAgICBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG4gICAgZXhwb3J0IGxldCB3aWR0aDogbnVtYmVyO1xuICAgIGV4cG9ydCBsZXQgdG9wOiBudW1iZXI7XG4gICAgZXhwb3J0IGxldCBjYWxlbmRhcjogQ2FsZW5kYXI7XG4gICAgZXhwb3J0IGxldCBwbHVnaW46IEZhbnRhc3lDYWxlbmRhcjtcblxuICAgIHdpbmRvdy5jYWxlbmRhciA9IGNhbGVuZGFyO1xuXG4gICAgY29uc3Qgc3RvcmUgPSB3cml0YWJsZTxDYWxlbmRhcj4oY2FsZW5kYXIpO1xuICAgIHN0b3JlLnN1YnNjcmliZSgodikgPT4ge1xuICAgICAgICBjYWxlbmRhciA9IHY7XG4gICAgfSk7XG4gICAgc2V0Q29udGV4dDxXcml0YWJsZTxDYWxlbmRhcj4+KFwic3RvcmVcIiwgc3RvcmUpO1xuXG4gICAgY29uc3QgYmFjayA9IChub2RlOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgICAgICBuZXcgRXh0cmFCdXR0b25Db21wb25lbnQobm9kZSkuc2V0SWNvbihcImxlZnQtYXJyb3ctd2l0aC10YWlsXCIpO1xuICAgIH07XG4gICAgY29uc3QgY2FuY2VsID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKVxuICAgICAgICAgICAgLnNldEljb24oXCJjcm9zc1wiKVxuICAgICAgICAgICAgLnNldFRvb2x0aXAoXCJFeGl0IHdpdGhvdXQgc2F2aW5nXCIpO1xuICAgIH07XG4gICAgY29uc3QgcHJlc2V0ID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IHByZXNldEVsID0gbm9kZS5jcmVhdGVEaXYoXCJmYW50YXN5LWNhbGVuZGFyLWFwcGx5LXByZXNldFwiKTtcbiAgICAgICAgbmV3IFNldHRpbmcocHJlc2V0RWwpXG4gICAgICAgICAgICAuc2V0TmFtZShcIkFwcGx5IFByZXNldFwiKVxuICAgICAgICAgICAgLnNldERlc2MoXCJBcHBseSBhIGNvbW1vbiBmYW50YXN5IGNhbGVuZGFyIGFzIGEgcHJlc2V0LlwiKVxuICAgICAgICAgICAgLmFkZEJ1dHRvbigoYikgPT4ge1xuICAgICAgICAgICAgICAgIGIuc2V0Q3RhKClcbiAgICAgICAgICAgICAgICAgICAgLnNldEJ1dHRvblRleHQoXCJDaG9vc2UgUHJlc2V0XCIpXG4gICAgICAgICAgICAgICAgICAgIC5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vZGFsID0gbmV3IENhbGVuZGFyUHJlc2V0TW9kYWwocGx1Z2luLmFwcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RhbC5vbkNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbW9kYWwuc2F2ZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxlbmRhciA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uY29weShtb2RhbC5wcmVzZXQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogY2FsZW5kYXIuaWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYWxlbmRhcj8ubmFtZSA9PSBcIkdyZWdvcmlhbiBDYWxlbmRhclwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxlbmRhci5jdXJyZW50ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogdG9kYXkuZ2V0RnVsbFllYXIoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoOiB0b2RheS5nZXRNb250aCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiB0b2RheS5nZXREYXRlKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RvcmUuc2V0KGNhbGVuZGFyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGxldCBzYXZlZCA9IGZhbHNlO1xuXG4gICAgJDogbWlzc2luZyA9IGdldE1pc3NpbmdOb3RpY2UoY2FsZW5kYXIpO1xuICAgICQ6IGNhblNhdmUgPSBnZXRDYW5TYXZlKGNhbGVuZGFyKTtcblxuICAgIGNvbnN0IGNoZWNrQ2FuU2F2ZSA9ICgpID0+IHtcbiAgICAgICAgaWYgKCFjYW5TYXZlICYmICFwbHVnaW4uZGF0YS5leGl0V2l0aG91dFNhdmluZykge1xuICAgICAgICAgICAgY29uc3QgbW9kYWwgPSBuZXcgQ29uZmlybUV4aXRNb2RhbChwbHVnaW4pO1xuICAgICAgICAgICAgbW9kYWwub25DbG9zZSA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAobW9kYWwuY29uZmlybWVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlYWR5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIG1vZGFsLm9wZW4oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNhdmVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHJlYWR5ID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHNhdmVkRWwgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgaWYgKGNhblNhdmUpIHtcbiAgICAgICAgICAgIHNldEljb24obm9kZSwgXCJjaGVja21hcmtcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB3YXJuaW5nKG5vZGUpO1xuICAgICAgICB9XG4gICAgfTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwiZmFudGFzeS1jYWxlbmRhci1jcmVhdG9yXCI+XG4gICAgeyNpZiByZWFkeX1cbiAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJpbmhlcml0IGZhbnRhc3ktY2FsZW5kYXItY3JlYXRvci1pbm5lclwiXG4gICAgICAgICAgICBzdHlsZT1cIndpZHRoOiB7d2lkdGh9cHg7XCJcbiAgICAgICAgICAgIHRyYW5zaXRpb246Zmx5PXt7IHg6IHdpZHRoICogMS41LCBvcGFjaXR5OiAxIH19XG4gICAgICAgICAgICBvbjppbnRyb2VuZD17KCkgPT4gZGlzcGF0Y2goXCJmbG93blwiKX1cbiAgICAgICAgICAgIG9uOm91dHJvZW5kPXsoKSA9PiBkaXNwYXRjaChcImV4aXRcIiwgeyBzYXZlZCwgY2FsZW5kYXIgfSl9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0b3AtbmF2XCIgc3R5bGU9XCItLXRvcDoge3RvcH1weDtcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaWNvbnNcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxlZnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImJhY2tcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZTpiYWNrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD17Y2FuU2F2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwiU2F2ZSBhbmQgZXhpdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJFeGl0IHdpdGhvdXQgc2F2aW5nXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb246Y2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tDYW5TYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hlY2tcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7I2lmIGNhblNhdmV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwic2F2ZSBjYW4tc2F2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2U6c2F2ZWRFbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD17bWlzc2luZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7OmVsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwic2F2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2U6c2F2ZWRFbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD17bWlzc2luZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhZGRpdGlvbmFsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBZGRpdGlvbmFsIGluZm9ybWF0aW9uIGlzIHJlcXVpcmVkIGJlZm9yZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F2aW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7L2lmfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNhbmNlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2U6Y2FuY2VsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbjpjbGljaz17KCkgPT4gKHJlYWR5ID0gZmFsc2UpfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxoMyBjbGFzcz1cImZhbnRhc3ktY2FsZW5kYXItY3JlYXRvci1oZWFkZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgQ2FsZW5kYXIgQ3JlYXRvclxuICAgICAgICAgICAgICAgIDwvaDM+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmYW50YXN5LWNyZWF0b3ItYXBwXCI+XG4gICAgICAgICAgICAgICAgPGRpdiB1c2U6cHJlc2V0IC8+XG4gICAgICAgICAgICAgICAgPEluZm8ge2NhbGVuZGFyfSAvPlxuICAgICAgICAgICAgICAgIDxXZWVrZGF5Q29udGFpbmVyIHtjYWxlbmRhcn0gLz5cbiAgICAgICAgICAgICAgICA8TW9udGhDb250YWluZXIgLz5cbiAgICAgICAgICAgICAgICA8WWVhckNvbnRhaW5lciB7Y2FsZW5kYXJ9IGFwcD17cGx1Z2luLmFwcH0gLz5cbiAgICAgICAgICAgICAgICA8Q3VycmVudERhdGUgLz5cbiAgICAgICAgICAgICAgICA8RXZlbnRDb250YWluZXIge3BsdWdpbn0ge2NhbGVuZGFyfSAvPlxuICAgICAgICAgICAgICAgIDxDYXRlZ29yeUNvbnRhaW5lciB7Y2FsZW5kYXJ9IC8+XG4gICAgICAgICAgICAgICAgPE1vb25Db250YWluZXIge3BsdWdpbn0ge2NhbGVuZGFyfSAvPlxuICAgICAgICAgICAgICAgIDxMZWFwRGF5Q29udGFpbmVyIHtjYWxlbmRhcn0ge3BsdWdpbn0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICB7L2lmfVxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAuZmFudGFzeS1jYWxlbmRhci1jcmVhdG9yIHtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICB9XG4gICAgLmZhbnRhc3ktY2FsZW5kYXItY3JlYXRvci1pbm5lciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbiAgICAuZmFudGFzeS1jYWxlbmRhci1jcmVhdG9yLFxuICAgIC5mYW50YXN5LWNhbGVuZGFyLWNyZWF0b3ItaW5uZXIsXG4gICAgLmZhbnRhc3ktY3JlYXRvci1hcHAge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xuICAgIH1cbiAgICAuZmFudGFzeS1jcmVhdG9yLWFwcCB7XG4gICAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIH1cbiAgICAuZmFudGFzeS1jYWxlbmRhci1jcmVhdG9yLWhlYWRlciB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gICAgLnRvcC1uYXYge1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICB0b3A6IHZhcigtLXRvcCwgMCk7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgIH1cbiAgICAuaWNvbnMge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxuXG4gICAgLmljb25zIC5sZWZ0IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLmNoZWNrIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZ2FwOiAwLjI1cmVtO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAuYWRkaXRpb25hbCB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS10ZXh0LWZhaW50KTtcbiAgICB9XG4gICAgLnNhdmUge1xuICAgICAgICBjb2xvcjogdmFyKC0tdGV4dC1lcnJvcik7XG4gICAgfVxuICAgIC5zYXZlLmNhbi1zYXZlIHtcbiAgICAgICAgY29sb3I6IHZhcigtLWludGVyYWN0aXZlLXN1Y2Nlc3MpO1xuICAgIH1cblxuICAgIC8qIC5mYW50YXN5LWNyZWF0b3ItYXBwIHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcbiAgICAgICAgZ2FwOiAwLjI1cmVtO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAubGVmdC1uYXYge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfSAqL1xuICAgIC5iYWNrIHtcbiAgICAgICAgd2lkdGg6IG1pbi1jb250ZW50O1xuICAgIH1cbiAgICAuYmFjayA6Z2xvYmFsKC5jbGlja2FibGUtaWNvbikge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICB9XG4gICAgLyogR2xvYmFscyAqL1xuICAgIC5mYW50YXN5LWNhbGVuZGFyLWNyZWF0b3IgOmdsb2JhbCgud2FybmluZy1jb250YWluZXIpIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBnYXA6IDAuMjVyZW07XG4gICAgfVxuPC9zdHlsZT5cbiIsICJpbXBvcnQgY29weSBmcm9tIFwiZmFzdC1jb3B5XCI7XG5pbXBvcnQgeyBNb2RhbCwgQnV0dG9uQ29tcG9uZW50LCBFeHRyYUJ1dHRvbkNvbXBvbmVudCB9IGZyb20gXCJvYnNpZGlhblwiO1xuaW1wb3J0IHR5cGUgeyBDYWxlbmRhciB9IGZyb20gXCJzcmMvQHR5cGVzXCI7XG5pbXBvcnQgeyBQUkVTRVRfQ0FMRU5EQVJTIH0gZnJvbSBcInNyYy91dGlscy9wcmVzZXRzXCI7XG5cbmV4cG9ydCBjbGFzcyBDYWxlbmRhclByZXNldE1vZGFsIGV4dGVuZHMgTW9kYWwge1xuICAgIHByZXNldDogQ2FsZW5kYXI7XG4gICAgc2F2ZWQ6IGJvb2xlYW47XG4gICAgYXN5bmMgb25PcGVuKCkge1xuICAgICAgICBhd2FpdCB0aGlzLmRpc3BsYXkoKTtcbiAgICB9XG4gICAgYXN5bmMgZGlzcGxheSgpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXJFbC5hZGRDbGFzcyhcImZhbnRhc3ktY2FsZW5kYXItY2hvb3NlLXByZXNldFwiKTtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuZW1wdHkoKTtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuY3JlYXRlRWwoXCJoM1wiLCB7XG4gICAgICAgICAgICB0ZXh0OiBcIkNob29zZSBhIFByZXNldCBDYWxlbmRhclwiXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IHByZXNldEVsID0gdGhpcy5jb250ZW50RWwuY3JlYXRlRGl2KFxuICAgICAgICAgICAgXCJmYW50YXN5LWNhbGVuZGFyLXByZXNldC1jb250YWluZXJcIlxuICAgICAgICApO1xuXG4gICAgICAgIGZvciAoY29uc3QgcHJlc2V0IG9mIFBSRVNFVF9DQUxFTkRBUlMpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ1dHRvbiA9IG5ldyBCdXR0b25Db21wb25lbnQocHJlc2V0RWwpLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucHJlc2V0ID0gcHJlc2V0O1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzcGxheSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmVzZXQgPT0gcHJlc2V0KSBidXR0b24uc2V0Q3RhKCk7XG4gICAgICAgICAgICBidXR0b24uYnV0dG9uRWwuY3JlYXRlRGl2KHtcbiAgICAgICAgICAgICAgICBjbHM6IFwic2V0dGluZy1pdGVtLW5hbWVcIixcbiAgICAgICAgICAgICAgICB0ZXh0OiBwcmVzZXQubmFtZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBidXR0b24uYnV0dG9uRWwuY3JlYXRlRGl2KHtcbiAgICAgICAgICAgICAgICBjbHM6IFwic2V0dGluZy1pdGVtLWRlc2NyaXB0aW9uXCIsXG4gICAgICAgICAgICAgICAgdGV4dDogcHJlc2V0LmRlc2NyaXB0aW9uXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGJ1dHRvbkVsID0gdGhpcy5jb250ZW50RWwuY3JlYXRlRGl2KFxuICAgICAgICAgICAgXCJmYW50YXN5LWNhbGVuZGFyLWNvbmZpcm0tYnV0dG9uc1wiXG4gICAgICAgICk7XG4gICAgICAgIG5ldyBCdXR0b25Db21wb25lbnQoYnV0dG9uRWwpXG4gICAgICAgICAgICAuc2V0QnV0dG9uVGV4dChcIkFwcGx5XCIpXG4gICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zYXZlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5wcmVzZXQgPSBjb3B5KHRoaXMucHJlc2V0KTtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnNldEN0YSgpO1xuICAgICAgICBuZXcgRXh0cmFCdXR0b25Db21wb25lbnQoYnV0dG9uRWwpLnNldEljb24oXCJjcm9zc1wiKS5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIHsgQ2FsZW5kYXIgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgUFJFU0VUX0NBTEVOREFSUzogQ2FsZW5kYXJbXSA9IFtcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiR3JlZ29yaWFuIENhbGVuZGFyXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgXCJBIGNhbGVuZGFyIGZvciB0aGUgcmVhbCB3b3JsZC5cIixcbiAgICAgICAgc3RhdGljOiB7XG4gICAgICAgICAgICBkaXNwbGF5RGF5TnVtYmVyOiBmYWxzZSxcbiAgICAgICAgICAgIGluY3JlbWVudERheTogdHJ1ZSxcbiAgICAgICAgICAgIGRpc3BsYXlNb29uczogdHJ1ZSxcbiAgICAgICAgICAgIGZpcnN0V2Vla0RheTogNixcbiAgICAgICAgICAgIG92ZXJmbG93OiB0cnVlLFxuICAgICAgICAgICAgd2Vla2RheXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiU3VuZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzE5ZWE2ODRiNGEwOFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTW9uZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzI5MjhiOTBhYjk0OVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVHVlc2RheVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8wYWQ5YThmOWU5NWJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIldlZG5lc2RheVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8xOTVhNGIyOTBiYzlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlRodXJzZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2FiZThjODliMDk5OVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRnJpZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzJiNWI4YTc5ZmE0YVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiU2F0dXJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfMWE3OGNiNzljOGNiXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbW9udGhzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkphbnVhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9lOTk5N2E3ODBiM2FcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkZlYnJ1YXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYjhjOWViZWIwYjg5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNYXJjaFwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2I4M2JkYTJiOWJlOFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQXByaWxcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMwLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8yOWJhZWE3YjI4YWJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1heVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzZhMzg5OWZhZDkwOVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiSnVuZVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzM4NGFlYjFhZmE4YVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiSnVseVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzQ4YjhjYmE4N2I4YVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQXVndXN0XCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZmEwYjFhNmJhYjhhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTZXB0ZW1iZXJcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMwLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9kYTg4MGI4YWY4NDlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk9jdG9iZXJcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9iYWJiYTgxODY5NjhcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk5vdmVtYmVyXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZGE1ODJiZmFmOWI5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEZWNlbWJlclwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2JhMWJhYjRhM2EyOFwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG1vb25zOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1vb25cIixcbiAgICAgICAgICAgICAgICAgICAgY3ljbGU6IDI5LjUzMDU4ODg1MyxcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiA5LjI0OTUzLFxuICAgICAgICAgICAgICAgICAgICBmYWNlQ29sb3I6IFwiI2ZmZmZmZlwiLFxuICAgICAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogXCIjMDAwMDAwXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2E5YWIxODZiMTgxOVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGxlYXBEYXlzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkxlYXAgRGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibGVhcGRheVwiLFxuICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlnbm9yZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhjbHVzaXZlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDogNDAwXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlnbm9yZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhjbHVzaXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVydmFsOiAxMDBcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWdub3JlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGNsdXNpdmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVydmFsOiA0XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogMCxcbiAgICAgICAgICAgICAgICAgICAgdGltZXNwYW46IDEsXG4gICAgICAgICAgICAgICAgICAgIGludGVyY2FsYXJ5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYjkxYWQ4NmE4ODdhXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZXJhczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJCZWZvcmUgQ2hyaXN0XCIsXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IFwiWWVhciB7e2Fic195ZWFyfX0gLSB7e2VyYV9uYW1lfX1cIixcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IC0xLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGg6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXk6IDMxXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJBbm5vIERvbWluaVwiLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBcIlllYXIge3t5ZWFyfX0gLSB7e2VyYV9uYW1lfX1cIixcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb250aDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheTogMVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG9mZnNldDogMlxuICAgICAgICB9LFxuICAgICAgICBjdXJyZW50OiB7XG4gICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgfSxcbiAgICAgICAgZXZlbnRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTdW1tZXIgU29sc3RpY2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBdCB0aGUgc3VtbWVyIHNvbHN0aWNlLCB0aGUgU3VuIHRyYXZlbHMgdGhlIGxvbmdlc3QgcGF0aCB0aHJvdWdoIHRoZSBza3ksIGFuZCB0aGF0IGRheSB0aGVyZWZvcmUgaGFzIHRoZSBtb3N0IGRheWxpZ2h0LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU5OVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldpbnRlciBTb2xzdGljZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSB3aW50ZXIgc29sc3RpY2UgbWFya3MgdGhlIHNob3J0ZXN0IGRheSBhbmQgbG9uZ2VzdCBuaWdodCBvZiB0aGUgeWVhciwgd2hlbiB0aGUgc3VuIGlzIGF0IGl0cyBsb3dlc3QgYXJjIGluIHRoZSBza3kuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NjAwXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU3ByaW5nIEVxdWlub3hcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgZXF1aW5veCBtYXJrcyB0aGUgZGF5IGFuZCB0aGUgbmlnaHQgaXMgZXF1YWxseSBhcyBsb25nLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDYwMVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkF1dHVtbiBFcXVpbm94XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhlIGVxdWlub3ggbWFya3MgdGhlIGRheSBhbmQgdGhlIG5pZ2h0IGlzIGVxdWFsbHkgYXMgbG9uZy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ2MDJcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJDaHJpc3RtYXNcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJDaHJpc3RtYXMgaXMgYSBDaHJpc3RpYW4gaG9saWRheSBjZWxlYnJhdGluZyB0aGUgYmlydGggb2YgQ2hyaXN0LiBEdWUgdG8gYSBjb21iaW5hdGlvbiBvZiBtYXJrZXRhYmlsaXR5IGFuZCBsb25nIGxhc3RpbmcgdHJhZGl0aW9ucyBpdCBpcyBwb3B1bGFyIGV2ZW4gYW1vbmcgbWFueSBub24tQ2hyaXN0aWFucywgZXNwZWNpYWxseSBpbiBjb3VudHJpZXMgdGhhdCBoYXZlIGEgc3Ryb25nIENocmlzdGlhbiB0cmFkaXRpb24uXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NjAzXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjUsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwiY2hyaXN0aWFuLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJQYXNjaGFsIEZ1bGwgTW9vblwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSBmaXJzdCBmdWxsIG1vb24gYWZ0ZXIgbWFyY2ggMjFzdCwgd2hpY2ggaXMgY29uc2lkZXJlZCB0aGUgZml4ZWQgZGF0ZSBmb3IgdGhlIHNwcmluZyBlcXVpbm94LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDYwNFwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJjaHJpc3RpYW4taG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkVhc3RlclwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkVhc3RlciBpcyBjb25zaWRlcmVkIHRoZSBtb3N0IGltcG9ydGFudCBmZWFzdCBmb3IgQ2hyaXN0aWFucywgY2VsZWJyYXRpbmcgdGhlIHJlc3VycmVjdGlvbiBvZiBDaHJpc3QuIEl0IGlzIGNsYXNzZWQgYXMgYSBtb3ZlYWJsZSBmZWFzdCBvY2N1cnJpbmcgb24gdGhlIGZpcnN0IGZ1bGwgbW9vbiBhZnRlciB0aGUgc3ByaW5nIGVxdWlub3gsIHdoaWNoIGlzIGNvbnNpZGVyZWQgdG8gYmUgZml4ZWQgYXQgTWFyY2ggMjFzdCBmb3IgdGhlIHNha2Ugb2YgY29tcHV0aW5nIHRoZSBkYXRlLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDYwNVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJjaHJpc3RpYW4taG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkVhc3RlciBNb25kYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgTW9uZGF5IGZvbGxvd2luZyB0aGUgRWFzdGVyIFN1bmRheSBpcyBvZnRlbiBjb25zaWRlcmVkIHBhcnQgb2YgdGhlIEVhc3RlciBDZWxlYnJhdGlvbiBhbmQgaXMgYSBkYXkgb2ZmIGluIG1hbnkgY291bnRyaWVzIHdpdGggYSBzdHJvbmcgQ2hyaXN0aWFuIHRyYWRpdGlvbi5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ2MDZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwiY2hyaXN0aWFuLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJHb29kIEZyaWRheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkdvb2QgRnJpZGF5IGlzIHRoZSBGcmlkYXkgcHJlY2VkaW5nIEVhc3Rlci4gSXQgY29tZW1tb3JhdGVzIHRoZSBjcnVjaWZpeGlvbiBvZiBDaHJpc3QgYWNjb3JkaW5nIHRvIHRoZSBCaWJsZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ2MDdcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwiY2hyaXN0aWFuLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJQZW50ZWNvc3RcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJDZWxlYnJhdGVkIGV4YWN0bHkgNTAgZGF5cyBhZnRlciBFYXN0ZXIsIFBlbnRlY29zdCBpcyB0aGUgY2VsZWJyYXRpb24gb2YgdGhlIEhvbHkgU3Bpcml0IGFwcGVhcmluZyBiZWZvcmUgdGhlIEFwb3N0bGVzIGFzIGRlc2NyaWJlZCBpbiB0aGUgQmlibGUuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NjA4XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcImNocmlzdGlhbi1ob2xpZGF5c1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTmV3IFllYXIncyBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJOZXcgWWVhcidzIERheSBtYXJrcyB0aGUgc3RhcnQgb2YgYSBuZXcgeWVhciBvbiB0aGUgR3JlZ29yaWFuIENhbGVuZGFyLiBJdCBzdGFydHMgd2hlbiB0aGUgY2xvY2sgc3RyaWtlcyBtaWRuaWdodCBhbmQgaXMgb2Z0ZW4gY2VsZWJyYXRlZCB3aXRoIGZpcmV3b3JrcywgY2hhbXBhZ25lIGFuZCBraXNzaW5nLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDYwOVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJzZWN1bGFyLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJWYWxlbnRpbmUncyBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJWYWxlbnRpbmUncyBkYXkgaXMgYSBjZWxlYnJhdGlvbiBvZiBsb3ZlIGFuZCByb21hbmNlIHRoYXQgaXMgcG9wdWxhciBhY3Jvc3MgdGhlIHdvcmxkLiBNYW55IG1vcmUgY3luaWNhbGx5IG1pbmRlZCBwZW9wbGUgbW9zdGx5IGNvbnNpZGVyIGl0IGFuIGF0dGVtcHQgdG8gbW9uZXRpemUgdGhlIGV4cGVjdGF0aW9uIG9mIHJvbWFudGljIGdlc3R1cmVzIG9uIHRoZSBob2xpZGF5IHRocm91Z2ggZ2lmdCBjYXJkcywgZmxvd2VycywgY2hvY29sYXRlIGFuZCBkYXRlcy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ2MTBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxNCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInNlY3VsYXItaG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkhhbGxvd2VlblwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICAnSGFsbG93ZWVuIGlzIGhvbGlkYXkgcG9wdWxhciBpbiB0aGUgVVMsIENhbmFkYSBhbmQgSXJlbGFuZCB0aGF0IGhhcyBncmFkdWFsbHkgYmVlbiBhZG9wdGVkIGJ5IG1vcmUgYW5kIG1vcmUgY291bnRyaWVzLiBJdCBpcyBvZnRlbiBjZWxlYnJhdGVkIGJ5IHBlb3BsZSBkcmVzc2luZyB1cCwgdXN1YWxseSBhcyBzb21ldGhpbmcgc2NhcnkuIENoaWxkcmVuIHdpbGwgb2Z0ZW4gZ28gZnJvbSBkb29yIHRvIGRvb3Igc2hvdXRpbmcgXCJ0cmljayBvciB0cmVhdFwiIGluIHRoZSBob3BlcyBvZiByZWNlaXZpbmcgY2FuZHksIHdoaWxlIGFkdWx0cyB0ZW5kIHRvIGdvIHRvIHBhcnRpZXMuJyxcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ2MTFcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAzMSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInNlY3VsYXItaG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldvcmsgb24gdGhlIGZpcnN0IHZlcnNpb24gb2YgdGhpcyBjYWxlbmRhciBzdGFydGVkLlwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkFlY2l1cyBzdGFydGVkIHdvcmsgb24gdGhlIGZpcnN0IHZlcnNpb24gR3JlZ29yaWFuIENhbGVuZGFyIGZvciBGYW50YXN5IENhbGVuZGFyIG9uIHRoaXMgZGF5LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDYxMlwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDIzLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiAyMDE5LFxuICAgICAgICAgICAgICAgICAgICBtb250aDogNVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwibWlzY2VsbGFuZW91cy1ldmVudHNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldvcmsgb24gdGhpcyB2ZXJzaW9uIG9mIHRoZSBHcmVnb3JpYW4gQ2FsZW5kYXIgc3RhcnRlZC5cIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJPbiB0aGlzIGRheSwgQWVjaXVzIHN0YXJ0ZWQgdG8gcmV3b3JrIHRoZSBHcmVnb3JpYW4gQ2FsZW5kYXIgZnJvbSBzY3JhdGNoIHRvIG1ha2UgaXQgd29yayB3aXRoIHRoZSB1cGRhdGVzIFdhc3AgYW5kIEFsZXggaW1wbGVtZW50ZWQgc2luY2UgdGhlIHN1bW1lciBvZiAyMDE5LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDYxM1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDIxLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiAyMDIwLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwibWlzY2VsbGFuZW91cy1ldmVudHNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkludHJvZHVjdGlvbiBvZiB0aGUgR3JlZ29yaWFuIENhbGVuZGFyXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiT24gdGhpcyBkYXkgaW4gMTU4MiB0aGUgR3JlZ29yaWFuIGNhbGVuZGFyIHdhcyBvZmZpY2lhbGx5IGludHJvZHVjZWQsIGZvbGxvd2luZyBUaHVyc2RheSBPY3RvYmVyIDR0aCBvbiB0aGUgSnVsaWFuIENhbGVuZGFyXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NjE0XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTUsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IDE1ODIsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJoaXN0b3JpY2FsLWV2ZW50c1wiXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIGlkOiBudWxsLFxuICAgICAgICBjYXRlZ29yaWVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJOYXR1cmFsIEV2ZW50c1wiLFxuICAgICAgICAgICAgICAgIGlkOiBcIm5hdHVyYWwtZXZlbnRzXCIsXG4gICAgICAgICAgICAgICAgY29sb3I6IFwiIzJFN0QzMlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQ2hyaXN0aWFuIEhvbGlkYXlzXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiY2hyaXN0aWFuLWhvbGlkYXlzXCIsXG4gICAgICAgICAgICAgICAgY29sb3I6IFwiIzliMmMyY1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU2VjdWxhciBIb2xpZGF5c1wiLFxuICAgICAgICAgICAgICAgIGlkOiBcInNlY3VsYXItaG9saWRheXNcIixcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjMEQ0N0ExXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJIaXN0b3JpY2FsIEV2ZW50c1wiLFxuICAgICAgICAgICAgICAgIGlkOiBcImhpc3RvcmljYWwtZXZlbnRzXCIsXG4gICAgICAgICAgICAgICAgY29sb3I6IFwiIzQ1NUE2NFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTWlzY2VsbGFuZW91cyBFdmVudHNcIixcbiAgICAgICAgICAgICAgICBpZDogXCJtaXNjZWxsYW5lb3VzLWV2ZW50c1wiLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiMwMjg4RDFcIlxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiQ2FsZW5kYXIgb2YgR3JleWhhd2tcIixcbiAgICAgICAgZGVzY3JpcHRpb246IFwiQ2FsZW5kYXIgb2YgdGhlIHdvcmxkIG9mIEdyZXloYXdrLlwiLFxuICAgICAgICBzdGF0aWM6IHtcbiAgICAgICAgICAgIGRpc3BsYXlEYXlOdW1iZXI6IGZhbHNlLFxuICAgICAgICAgICAgaW5jcmVtZW50RGF5OiBmYWxzZSxcbiAgICAgICAgICAgIGRpc3BsYXlNb29uczogdHJ1ZSxcbiAgICAgICAgICAgIGZpcnN0V2Vla0RheTogMCxcbiAgICAgICAgICAgIG92ZXJmbG93OiBmYWxzZSxcbiAgICAgICAgICAgIHdlZWtkYXlzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlN0YXJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYThlOTc5OTg0OTM4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTdW5kYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfMWI2OGJiNzhjYTFiXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNb29uZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2M4Yjg2YWVhMDk5OFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiR29kc2RheVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9iODA5N2ExOGU5NWJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIldhdGVyZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzE5MThjOTk5NDljYVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRWFydGhkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZmEyOTVhMWJhYjg5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJGcmVlZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzZhNDg1YWRhM2FlOFwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG1vbnRoczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJOZWVkZmVzdFwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogNyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYjhhOWU5ZGE4YTQ4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJGaXJlc2Vla1wiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMjgsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzM5YjkwYmQ4MTg5YVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiUmVhZHlpbmdcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDI4LFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF80OGE5MDgxYWQ4MzlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNvbGRldmVuXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNWE3YjZiZWFkYjY4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJHcm93ZmVzdFwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogNyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNDhjOGQ4MmIxOTA4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJQbGFudGluZ1wiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMjgsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzA4MWE3OTNhNDlkYVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRmxvY2t0aW1lXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZWI2OGE4OWEwYTJhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJXZWFsc3VuXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfOWIzYTA5OGFlOTA4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJSaWNoZmVzdFwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogNyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZjk5YjRiM2EwOGI4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJSZWFwaW5nXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZWJlOWViNjhlYTM5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJHb29kbW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDI4LFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9mYjNiNmFmOTg5NWJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkhhcnZlc3RlclwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMjgsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzM5NWJjYjM5OWI4YVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQnJld2Zlc3RcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDcsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2U4YjkwODE4MWFmYVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiUGF0Y2h3YWxsXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfY2JkYTNiMzk5OTY5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJSZWFkeSdyZWF0XCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNTkyYTJhNjkwYmY4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTdW5zZWJiXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfMzllOGZhZjhlOWI4XCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbW9vbnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTHVuYVwiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogMjgsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogMyxcbiAgICAgICAgICAgICAgICAgICAgZmFjZUNvbG9yOiBcIiNmZmZmZmZcIixcbiAgICAgICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6IFwiIzI5MmI0YVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9mODk5N2IzOWI4YjhcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNlbGVuZVwiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogOTEsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogNDYsXG4gICAgICAgICAgICAgICAgICAgIGZhY2VDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiBcIiMyOTJiNGFcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfN2FmYmI5Yjg4YmU4XCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbGVhcERheXM6IFtdLFxuICAgICAgICAgICAgZXJhczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJDb21tb24gWWVhclwiLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBcIlllYXIge3t5ZWFyfX0gQ1lcIixcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb250aDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheTogMVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICBjdXJyZW50OiB7XG4gICAgICAgICAgICB5ZWFyOiA1OTEsXG4gICAgICAgICAgICBkYXk6IDEsXG4gICAgICAgICAgICBtb250aDogMFxuICAgICAgICB9LFxuICAgICAgICBldmVudHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldpbnRlciBTb2xzdGljZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSB3aW50ZXIgc29sc3RpY2UgbWFya3MgdGhlIHNob3J0ZXN0IGRheSBhbmQgbG9uZ2VzdCBuaWdodCBvZiB0aGUgeWVhciwgd2hlbiB0aGUgc3VuIGlzIGF0IGl0cyBsb3dlc3QgYXJjIGluIHRoZSBza3kuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTczXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU3ByaW5nIEVxdWlub3hcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgNHRoIG9mIEdyb3dmZXN0IGlzIHRoZSBmaXJzdCBkYXkgb2YgTG93IFN1bW1lciBpbiBPZXJ0aCdzIENhbGVuZGFyLiBUaGlzIGlzIHRoZSBwb2ludCB3aGVyZSB0aGUgc3VuIGNyb3NzZXMgT2VydGgncyBlcXVhdG9yLiBIb2xpZGF5cyBjZWxlYnJhdGVkIG9uIHRoaXMgZGF0ZSBpbmNsdWRlIFNhaW50IEN1dGhiZXJ0J3MgRGF5LCB0aGUgRmVhc3Qgb2YgRWRvaXJhLCB0aGUgU3ByaW5nIEZlYXN0LCBhbmQgUmF4aXZvcnQncyBPcmd5LiBUaGlzIGlzIGFsc28gdGhlIGRheSBvbiB3aGljaCB0aGUgcHJpZXN0cyBvZiBUbGFsb2Mgcml0dWFsbHkgc2FjcmlmaWNlIGFuZCBlYXQgdGhlIGZsZXNoIG9mIGh1bWFuIGNoaWxkcmVuIG9yIGJhYmllcyBpbiB0aGVpciBwYXRyb24ncyBob25vci4gV29yc2hpcHBlcnMgb2YgUmlsbGlmYW5lIFJhbGxhdGhpbCBjZWxlYnJhdGUgdGhlIEJ1ZGRpbmcgb24gdGhpcyBkYXksIGEgam95ZnVsIGNlbGVicmF0aW9uIG9mIG5ldyBsaWZlIGNlbGVicmF0ZWQgdGhyb3VnaCBkYW5jZSBhbmQgc29uZyBpbiBvYWsgZ3JvdmVzIGluIHRoZSBoZWFydCBvZiB0aGUgZm9yZXN0LiBBIHJpdHVhbCBodW50IG9mIGEgbm9ibGUgaGVhcnQgaXMgaGVsZCBvbiB0aGlzIGRheSwgYWZ0ZXIgd2hpY2ggdGhlIHZlbmlzb24gaXMgZWF0ZW4gaW4gY2VsZWJyYXRpb24gb2YgUmlsbGlmYW5lJ3MgYm91bnR5LlxcblxcbkFsc28gY2VsZWJyYXRlZCBvbiB0aGlzIGRhdGUgaXMgdGhlIFNhbmN0aWZpY2F0aW9uIG9mIFJlbmV3YWwsIGEgc2FjcmVkIGhvbGlkYXkgdG8gdGhlIGZvbGxvd2VycyBvZiBHYXJ5eC5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NzRcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTdW1tZXIgU29sc3RpY2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJcXHRBdCB0aGUgc3VtbWVyIHNvbHN0aWNlLCB0aGUgU3VuIHRyYXZlbHMgdGhlIGxvbmdlc3QgcGF0aCB0aHJvdWdoIHRoZSBza3ksIGFuZCB0aGF0IGRheSB0aGVyZWZvcmUgaGFzIHRoZSBtb3N0IGRheWxpZ2h0LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU3NVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkF1dHVtbiBFcXVpbm94XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhlIDR0aCBvZiBCcmV3ZmVzdCBpcyB0aGUgQXV0dW1uYWwgRXF1aW5veCwgd2hlbiB0aGUgc3VuIGNyb3NzZXMgdGhlIGVxdWF0b3IgZnJvbSBub3J0aCB0byBzb3V0aC4gVGhpcyBkYXRlIGlzIHRoZSBvZmZpY2lhbCBlbmQgb2YgaGlnaCBzdW1tZXIgYW5kIHRoZSBiZWdpbm5pbmcgb2YgYXV0dW1uIG9uIHRoZSBHcmV5aGF3ayBDYWxlbmRhci4gVGhpcyBkYXRlIGlzIGhvbHkgdG8gV2VudGEgYW5kIGlzIHNvbWV0aW1lcyByZWdhcmRlZCBhcyBhbiB1bm9mZmljaWFsIGhvbHkgZGF5IG9mIFZlbG5pdXMuIEFtb25nIHRoZSB4dmFydHMsIGl0IGFsc28gbWFya3MgdGhlIGNlbGVicmF0aW9uIG9mIFJheGl2b3J0J3MgT3JneS4gVGhlIHdvcnNoaXBwZXJzIG9mIFJpbGxpZmFuZSBSYWxsYXRoaWwgY2VsZWJyYXRlIHRoZSBUcmFuc2Zvcm1hdGlvbiBvbiB0aGlzIGRheSwgYSB0aW1lIG9mIGRhbmNpbmcgYW5kIHNwaXJpdHVhbCByZWJpcnRoIG1hcmtpbmcgdGhlIGJlZ2lubmluZyBvZiBhdXR1bW4gYW5kIHRoZSBwcm9taXNlIHRoYXQgc3ByaW5nIHdpbGwgY29tZSBhZ2Fpbi5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NzZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJHcmVhdCBNb29ucyBHbG9yeVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSBuaWdodCBvZiBHcmVhdCBNb29uJ3MgR2xvcnkgb24gUmVhZHlpbmcgMTF0aCwgd2hlbiBMdW5hIGlzIGZ1bGwgYnV0IENlbGVuZSBpcyBuZXcuIEl0IGlzIGhvbHkgdG8gQ2VsZXN0aWFuLCBhbmQgYSB0aW1lIHdoZW4gb2ZmZXJpbmdzIGFyZSBsZWZ0IHRvIEF0cm9hIHRvIGJlZyBoZXIgdG8gY29tZSBlYXJseSBhbmQgdG8gVGVsY2h1ciB0byByZXF1ZXN0IHRoYXQgaGUgcGVhY2VmdWxseSBsZWF2ZS4gRHJ1aWRzIG9mIHRoZSBPbGQgRmFpdGggYXJlIGtub3duIHRvIGFsc28gaG9sZCB0aGlzIG5pZ2h0IGFzIGF1c3BpY2lvdXMsIGJ1dCBmZXcgb3V0c2lkZSB0aGVpciBjaXJjbGVzIGtub3cgdGhlIGRldGFpbHMuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTc3XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiRGFyayBOaWdodFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkRhcmsgTmlnaHQsIGFsc28gY2FsbGVkIEJsYWNrIE5pZ2h0LCBTdGFyIE5pZ2h0LCBhbmQgdGhlIE5pZ2h0IG9mIEhvcGVmdWwgRGF3biwgaXMgb2JzZXJ2ZWQgb24gR29vZG1vbnRoIDExLiBJdCBpcyBhIGhvbHkgbmlnaHQgZm9yIHRoZSBjaHVyY2ggb2YgQ2VsZXN0aWFuIGJlY2F1c2UgdGhlIHN0YXJzIGFyZSBzbyBlYXN5IHRvIG9ic2VydmUgd2l0aG91dCB0aGUgbGlnaHQgb2Ygb25lIG9mIHRoZSBtb29ucyBnZXR0aW5nIGluIHRoZSB3YXkuXFxuXFxuSXQgaXMgYWxzbyBhIGhvbHkgbmlnaHQgZm9yIHRoZSBjaHVyY2ggb2YgUmFvLCB3aG8gcmVmZXIgdG8gaXQgYXMgdGhlIE5pZ2h0IG9mIEhvcGVmdWwgSnVkZ21lbnQuIFRoZXkgYmVsaWV2ZSB0aGF0IFJhbyBjaG9vc2VzIHRoaXMgdGltZSB0byBzZXBhcmF0ZSB0aGUgc2luZnVsIGZyb20gdGhlIHJpZ2h0ZW91cyBpbiB0aGUgYWZ0ZXJ3b3JsZC4gVGhlcmUgaXMgYWxzbyBhIHByb3BoZWN5IGluIHRoZSBSYW9hbiBob2x5IHRleHQsIHRoZSBCb29rIG9mIEluY2FydW0sIHRoYXQgY2xhaW1zIHRoYXQgUmFvIHdpbGwgY2xlYW5zZSB0aGUgd29ybGQgb2YgZXZpbCBvbiB0aGlzIG5pZ2h0LCBzb21ldGltZSBpbiB0aGUgZnV0dXJlLlxcblxcblRoZSBwcmllc3Rob29kIG9mIEt1cmVsbCBjb25zaWRlciBpdCBob2x5LCB0b28sIGNhbGxpbmcgaXQgS3VyZWxsJ3MgTmlnaHQsIHJlcXVpcmluZyB0aGUgZmFpdGhmdWwgdG8gdW5kZXJ0YWtlIHNwZWNpYWwgbWlzc2lvbnMgb24gdGhpcyBuaWdodCB0byBwcm92ZSB0aGVpciBjbGV2ZXJuZXNzIGFuZCBza2lsbC4gS3VyZWxsIHNtaWxlcyBwYXJ0aWN1bGFybHkgb24gYWN0cyBvZiB0aGVmdCBvciB2ZW5nZWFuY2UgcGVyZm9ybWVkIG9uIGhpcyBob2x5IG5pZ2h0LCBibGVzc2luZyB0aG9zZSB3aG8gZG8gc28gc3VjY2Vzc2Z1bGx5LiBEb25hdGlvbnMgdG8gS3VyZWxsJ3MgY2h1cmNoIGFyZSBlbmNvdXJhZ2VkIGFmdGVyd2FyZHMsIGZvciBLdXJlbGwgbWF5IHRha2UgdmVuZ2VhbmNlIGFnYWluc3QgdGhvc2Ugd2hvIGRvIG5vdCBwcm9wZXJseSB0aGFuayBoaW0gZm9yIGhpcyBhaWQuXFxuXFxuTW9zdCBvdGhlciBwZW9wbGUgcmVnYXJkIERhcmsgTmlnaHQgYXMgYSB0aW1lIG9mIGlsbCBvbWVuLCBmZWFyaW5nIGl0IGFzIG11Y2ggYXMgdGhlIG5pZ2h0IG9mIHRoZSBCbG9vZCBNb29uIEZlc3RpdmFsLiBCb25maXJlcyBhcmUgYnVybmVkIGZyb20gZHVzayB0aWxsIGRhd24sIHBhcnRpY3VsYXJseSBpbiBzbWFsbCB2aWxsYWdlcyBhbmQgaW4gRWxtc2hpcmUgYW5kIE5hcndlbGwuIE9yYyBhbmQgZ29ibGluIHJlbGlnaW9ucyB2aWV3IGl0IGFzIGFuIGV4Y2VsbGVudCBuaWdodCBmb3IgcmFpZGluZyBzZXR0bGVtZW50cy4gQ2VydGFpbiBldmlsIGN1bHRzIHBlcmZvcm0ga2lkbmFwcGluZ3MsIG11cmRlcnMsIGFuZCB2aWxlIHJpdGVzIGR1cmluZyB0aGlzIHBlcmlvZC4gT24gdGhlIG90aGVyIGhhbmQsIGx5Y2FudGhyb3BpYyBhY3Rpdml0eSBpcyBhdCBpdHMgbG93ZXN0LlxcblxcbklnZ3dpbHYgYW5kIFR1ZXJueSBhdHRlbXB0ZWQgdG8gc3VtbW9uIGEgZGVtb25pYyBhcm15IHRvIEx1bmEgb24gdGhpcyBuaWdodCBpbiA1ODUgQ1kuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTc4XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQWdlbG9uZ1wiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkFnZWxvbmcsIG9ic2VydmVkIG9uIHRoZSA0dGggb2YgUmljaGZlc3QgKHRoZSBTdW1tZXIgU29sc3RpY2UpLCBpcyB0aGUgY2VsZWJyYXRpb24gb2YgdGhlIGxlZ2VuZGFyeSBjcmVhdGlvbiBvZiB0aGUgZWx2ZXMuIEFjY29yZGluZyB0byBteXRoLCBhZnRlciBDb3JlbGxvbiBMYXJldGhpYW4gc3BpbGxlZCBoaXMgYmxvb2QgZHVyaW5nIHRoZSBiYXR0bGUgd2l0aCBHcnV1bXNoLCB0aGUgcmVzdCBvZiB0aGUgU2VsZGFyaW5lIGdhdGhlcmVkIHRoaXMgc2FjcmVkIGJsb29kIGFuZCBtaW5nbGVkIGl0IHdpdGggdGhlIHRlYXJzIHNoZWQgZHVyaW5nIHRoZSBzYW1lIGJhdHRsZSBieSBTZWhhbmluZSBNb29uYm93LiBUaGUgU2VsZGFyaW5lIHRoZW4gaW5mdXNlZCB0aGVzZSBkaXZpbmUgZmx1aWRzIGludG8gdmVzc2VscyB0aGV5IGhhZCBjcmVhdGVkIHRvIGJlIHRoZSBib2RpZXMgb2YgdGhlIGVsdmVuIHJhY2UuXFxuXFxuVGhpcyBkYXkgaXMsIGFtb25nIHRoZSBlbHZlcywgbW9zdGx5IGFuIGV4Y3VzZSB0byBnbyBvcmMtaHVudGluZy4gRWx2ZW4gd2FycmlvcnMgY3V0IHRoZW1zZWx2ZXMgd2l0aCBkYWdnZXJzIGNhcnZlZCBmcm9tIHZvbGNhbmljIGdsYXNzIHRvIHJlbWluZCB0aGVtc2VsdmVzIG9mIENvcmVsbG9uJ3Mgb3duIHdvdW5kIGZyb20gR3J1dW1zaCdzIHNwZWFyLCB0aGVuIHN0cml2ZSB0byBzbGF1Z2h0ZXIgYXMgbWFueSBvcmNzIGFzIHBvc3NpYmxlIGR1cmluZyB0aGUgbmlnaHQuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTc5XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogNCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQmxvb2QgTW9vbiBGZXN0aXZhbFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSBCbG9vZCBNb29uIEZlc3RpdmFsIGlzIGNlbGVicmF0ZWQgb24gQ29sZGV2ZW4gMTEsIHRoZSBuaWdodCB3aGVuIEx1bmEgaXMgZnVsbCBqdXN0IGJlZm9yZSB0aGUgU3ByaW5nIEVxdWlub3guIE9uIHRoaXMgbmlnaHQsIGN1cnNlcyBhcmUgc2FpZCB0byBiZSB0d2ljZSBhcyBwb3dlcmZ1bCBhbmQgdGhlIGZvcmNlcyBvZiBldmlsIGFyZSBhdCB0aGVpciBzdHJvbmdlc3QuIEZpZW5kcyByb2FtIHRoZSBsYW5kcywgYW5kIGh1bWFuIHNhY3JpZmljZSBpcyBjb21tb24uIFRoaXMgbmlnaHQgaXMgaGVsZCBlc3BlY2lhbGx5IHNhY3JlZCBieSBjdWx0aXN0cyBvZiBOZXJ1bGwsIGJ1dCB3b3JzaGlwZXJzIG9mIEt1cmVsbCBhbHNvIG1hcmsgdGhpcyBuaWdodCBhcyBlc3BlY2lhbGx5IGF1c3BpY2lvdXMgZm9yIGFjdHMgb2YgdmVuZ2VhbmNlLiBHb29kbHkgZm9sayBzdXBlcnN0aXRpb3VzbHkgZ3VhcmQgdGhlaXIgaG9tZXMgd2l0aCBob3JzZXNob2VzLCBob2x5IHdhdGVyLCBib3R0bGVzIG9mIG1pbGssIGFuZCBpcm9uIGZpbGluZ3MuXFxuXFxuRGVtb25pYyBmb3JjZXMgc2VudCBieSBJdXogZGVzdHJveWVkIHRoZSBsZWFkZXJzaGlwIG9mIHRoZSBIb3JuZWQgU29jaWV0eSBkdXJpbmcgdGhlIEJsb29kIE1vb24gRmVzdGl2YWwgb2YgNTgzIENZLlxcblxcbkl0J3MgcG9zc2libGUgdGhhdCB0aGlzIGlzIGFsc28gdGhlIG5pZ2h0IHRoZSBlbHZlcyBjZWxlYnJhdGUgYXMgRmFlcmllbHVjay5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1ODBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxMSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQnJlYWRnaXZpbmcgRGF5XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiQ2VsZWJyYXRlZCBvbiBvbiB0aGUgV2ludGVyIFNvbHN0aWNlIChOZWVkZmVzdCA0KSwgQnJlYWRnaXZpbmcgRGF5LCBpcyBhIGRheSBvZiBjaGFyaXR5IG9ic2VydmVkIGluIHRoZSBGcmVlIENpdHkgb2YgR3JleWhhd2sgYnkgdGhlIGZhaXRocyBvZiBQZWxvciwgUmFvLCBhbmQgU2FpbnQgQ3V0aGJlcnQuXFxuXFxuVGhpcyB3YXMgbm90IG9yaWdpbmFsbHkgYSByZWxpZ2lvdXMgaG9saWRheSBhcyBzdWNoLiBJdCBpcyBhIG5ldyBwcmFjdGljZSB0aGF0IGJlZ2FuIGFmdGVyIHRoZSBHcmV5aGF3ayBXYXJzIHRvIGZlZWQgdGhlIHJlZnVnZWVzIHRoYXQgZmxvb2RlZCB0aGUgY2l0eSBkdXJpbmcgdGhhdCB0aW1lLiBTaW5jZSBvZiBPbGQgQ2l0eSB3aG8gbGluZSB1cCBieSB0aGUgaHVuZHJlZHMgYWxvbmcgdGhlIFByb2Nlc3Npb25hbCBmcm9tIHRoZSBCbGFjayBHYXRlLiBUaGUgYm9vdGhzIGFyZSB3b3JrZWQgYnkgbG93LXJhbmtpbmcgcHJpZXN0cyBmcm9tIGFsbCB0aHJlZSByZWxpZ2lvbnMsIHdpdGggYXJtZWQgcHJpZXN0cyBvZiBTdC4gQ3V0aGJlcnQgcHJvdmlkaW5nIHNlY3VyaXR5LiBBIHNtYWxsZXIgZXZlbnQgaXMgaGVsZCBzaW11bHRhbmVvdXNseSBiZWxvdyBXaGFyZmdhdGUgaW4gR3JleWhhd2sgQ2l0eSdzIFNoYWNrdG93bi5cXG5cXG5UaGUgY2xlcmdpZXMgb2YgSGVpcm9uZW91cywgUGhvbHR1cywgYW5kIFRyaXRoZXJlb24gZG8gbm90IHBhcnRpY2lwYXRlLCBidXQgdGhleSBjb21wZXRlIHdpdGggb25lIGFub3RoZXIgdG8gcGVyZm9ybSBnb29kIGRlZWRzIHRoZSB3aG9sZSB3ZWVrIG9mIE5lZWRmZXN0LiBUaGUgcml2YWxyaWVzIGJldHdlZW4gVHJpdGhlcmVvbiBhbmQgUGhvbHR1cywgVHJpdGhlcmVvbiBhbmQgSGVpcm9uZW91cywgYW5kIFBob2x0dXMgYW5kIFN0LiBDdXRoYmVydCBhcmUgc3VjaCB0aGF0IHRoZSBmYWl0aHMgc29tZXRpbWVzIGZhbGwgaW50byBhcmd1bWVudHMgYW5kIGV2ZW4gYmxvd3MgaWYgdGhlaXIgXFxcImdvb2QgZGVlZHNcXFwiIGNvbmZsaWN0IHdpdGggZWFjaCBvdGhlci4gR3JleWhhd2sncyByb3dkeSBjaXRpemVucyBvZnRlbiBjaGVlciBhbmQgcGxhY2UgYmV0cyBvbiB0aGUgb3V0Y29tZXMgb2YgdGhlc2UgcXVhcnJlbHMuXFxuXFxuVGhlIHByaWVzdHMgb2YgUGVsb3IgaG9sZCBhIG1vcm5pbmcgY2VyZW1vbnkgb24gdGhpcyBkYXkgd2l0aCBhIHNlcm1vbiwgc2luZ2luZywgYW5kIG11c2ljLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU4MVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDQsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkJyZXdmZXN0XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiQWxzbyBjYWxsZWQgRHJ1bmtlbiBEYXlzIG9yIHRoZSBGZWFzdCBvZiBCcmV3ZXJzLCBCcmV3ZmVzdCwgdGhlIGZvdXJ0aCBmZXN0aXZhbCB3ZWVrIG9mIE9lcnRoJ3MgY2FsZW5kYXIsIGlzIGEgcm93ZHkgcGVyaW9kIHVuc3VycHJpc2luZ2x5IGNsYWltZWQgYXMgYSBob2x5IHRpbWUgYnkgdGhlIGNodXJjaGVzIG9mIE9saWRhbW1hcmEgYW5kIFdlbnRhLiBUaGUgRnJlZSBDaXR5IG9mIEdyZXloYXdrIGRvZXMgbm90IGNlbGVicmF0ZSB0aGUgZW50aXJlIHdlZWssIGJ1dCBCcmV3ZmVzdCAxIGFuZCBCcmV3ZmVzdCA3IGFyZSBib3RoIHNldCBhc2lkZSBhcyBwdWJsaWMgaG9saWRheXMuIEluIEVsbXNoaXJlLCB0aGUgd2VlayBpcyBzcGVudCBpbiByZXN0ZnVsLCBjYXJlZnJlZSBtdXNpYywgZHJpbmtpbmcsIGFuZCBkYW5jaW5nLiBJbiBIYXJkYnkgaXQgaXMgc3BlbnQgd2l0aCBmaXN0ZmlnaHRzLCByaW90cywgYW5kIGVuc3VpbmcgaGFuZ292ZXJzLiBJbiBOYXJ3ZWxsIGl0IGlzIGNlbGVicmF0ZWQgd2l0aCBhbGUtYnJld2luZyBjb250ZXN0cywgaG9yc2UgcmFjZXMsIGJlYXRpbmdzLCBhbmQgcm9iYmVyeS4gSW4gU2FmZXRvbiBpdCBpcyBjZWxlYnJhdGVkIHdpdGggbmVydm91cyB2aW9sZW5jZSBhbmQgbmlnaHRseSBvcmMgaHVudHMuIFRoZSB3ZWVrIGlzIGFsc28gc2FjcmVkIHRvIHRoZSBPbGQgRmFpdGguXFxuXFxuVGhlIGVsdmVzIGNhbGwgdGhpcyB3ZWVrIEZhbGxyaXRlLCBhbmQgdXNlIGl0IHRvIGNvbnRlbXBsYXRlIHRoZSBzcGlyaXRzIG9mIHRoZWlyIGFuY2VzdG9ycywgdGhlIHBhc3NhZ2UgdG8gdGhlIGFmdGVyd29ybGQsIGFuZCB0aGUgZnJhZ2lsaXR5IG9mIGxpZmUuIFRoZXkgYmVsaWV2ZSBvdGhlciByYWNlcyBtYWtlIG1lcnJ5IGR1cmluZyBCcmV3ZmVzdCBiZWNhdXNlIHRoZXkgYXJlIFxcXCJoaWRpbmdcXFwiIHRvIGF2b2lkIGZhY2luZyBkZWF0aCdzIHJlYWxpdHkuIEluIGNvbnRyYXN0LCB0aGUgb2x2ZW5mb2xrIHN0cml2ZSB0byBmdWxmaWxsIHRoZSBtb3N0IGltcG9ydGFudCBvZiB0aGVpciBkdXRpZXMgYW5kIHJlYWNoIHRoZSBtb3N0IGNydWNpYWwgb2YgdGhlaXIgZGVjaXNpb25zIGR1cmluZyB0aGlzIHRpbWUgb2YgeWVhci4gVGhlIGVsdmVuIGtpbmdzIGFuZCBxdWVlbnMgdHJhZGl0aW9uYWxseSBqdWRnZSBjYXBpdGFsIGNhc2VzIGR1cmluZyBGYWxscml0ZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1ODJcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA0LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiRmFlcmllbHVja1wiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkZhZXJpZWx1Y2sgaXMgYSBob2xpZGF5IGNlbGVicmF0ZWQgYnkgdGhlIGVsdmVzIGluIGVhcmx5IHNwcmluZywgd2hlbiB0aGUgcG93ZXIgb2YgRmFlcmllIHJ1bnMgaGlnaCBhbmQgdGhleSBjZWxlYnJhdGUgd2l0aCB0aGVpciBmZXkgY291c2luczogdGhlIHNwcml0ZXMsIGJ1Y2thd25zLCBwaXhpZXMsIG55bXBocyBhbmQgc28gZm9ydGguIFRoZSBwb2ludCBvZiB0aGUgZmVzdGl2YWwgaXMgdG8gcmVtaW5kIHRoZSBlbHZlcyBvZiB0aGVpciBhbmNpZW50IGtpbnNoaXAgd2l0aCB0aGVzZSBjcmVhdHVyZXMuIFRoZSBkYXkgaXMgc3BlbnQgcGxheWluZyBwcmFjdGljYWwgam9rZXMsIGVuZ2FnaW5nIGluIGJhdHRsZXMgb2Ygd2l0LCBhbmQgZ2VuZXJhbCBtZXJyaW1lbnQuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTgzXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAyXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkZlYXN0IG9mIEVkb2lyYVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSBGZWFzdCBvZiBFZG9pcmEgaXMgYSBob2xpZGF5IGNlbGVicmF0ZWQgaW4gdGhlIERvbWFpbiBvZiBHcmV5aGF3ayBvbiBHcm93ZmVzdCA0LCBkdXJpbmcgdGhlIFNwcmluZyBFcXVpbm94LiBJdCBpcyBuYW1lZCBhZnRlciBFZG9pcmEsIGEgcHJpZXN0IG9mIFJhbyB3aG8gY2VudHVyaWVzIGFnbyBlc3RhYmxpc2hlZCB0aGUgRWRvaXJhbiBDb21wYWN0LCBhIHBhY3QgYnkgd2hpY2ggbWFueSBvZiB0aGUgbGF3ZnVsIGdvb2QtYWxpZ25lZCBmYWl0aHMgYW5kIHBlb3BsZSBvZiB0aGUgRG9tYWluIGNvdWxkIGFncmVlIHRvIGNvb3BlcmF0ZS4gVGhlIENvbXBhY3Qgd2FzIGxhdGVyIGV4dGVuZGVkIHRvIG5vbi1sYXdmdWwgZ29vZCBhbmQgbmV1dHJhbCBmYWl0aHMuXFxuXFxuRWRvaXJhIHdhcyBuZXZlciBkZWlmaWVkIGJ1dCB3YXMgcmV2ZXJlZCBieSBtYW55IGdvb2QgZmFpdGhzIGluIHRoZSBEb21haW4uIFRoZSBob2xpZGF5IHdhcyBtYXJrZWQgYnkgcmVsaWdpb3VzIHNlcnZpY2VzIG9uIEdvZHNkYXkgb2YgR3Jvd2Zlc3QgbGVkIGJ5IHRoZSBjbGVyaWNzIG9mIHRoZSBnb29kIGZhaXRocyB3aG8gcGFydG9vayBvZiB0aGUgQ29tcGFjdCwgYW5kIHNlY3VsYXIgZmVzdGl2YWxzIGJ5IHRoZSBvcmRpbmFyeSBjaXRpemVucnkuIE9ic2VydmFuY2Ugb2YgdGhlIGhvbGlkYXkgaGFzIGRlY2xpbmVkIG92ZXIgdGhlIHllYXJzLCB0aG91Z2ggdGhlIGNsZXJnaWVzIG9mIFJhbyBhbmQgUGVsb3Igc3RpbGwgaG9sZCB0aGVpciB0cmFkaXRpb25hbCBpbnRlcmZhaXRoIHNlcnZpY2VzLCB3aXRoIG9jY2FzaW9uYWwgcGFydGljaXBhdGlvbiBieSB0aGUgcHJpZXN0aG9vZHMgb2YgSGVpcm9uZW91cyBhbmQgTWF5YWhlaW5lLiBTaW5jZSB0aGUgZW5kIG9mIHRoZSBHcmV5aGF3ayBXYXJzIG1vc3Qgb2YgdGhlIERvbWFpbidzIG91dGx5aW5nIGNvbW11bml0aWVzIG5vIGxvbmdlciBvYnNlcnZlIHRoZSBob2xpZGF5LiBPbmx5IG9uZSBjaHVyY2ggaW4gU2FmZXRvbiBzdGlsbCBkb2VzIHNvLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU4NFwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDQsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA0XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkRlc3BvcnRpdW0gb2YgTWFnaWNcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgaGlnaGxpZ2h0IG9mIEdyb3dmZXN0IGlzIHRoZSBEZXNwb3J0aXVtIG9mIE1hZ2ljLiBEdXJpbmcgdGhpcyBkYXkgdG9yY2hsaWdodCBvbmx5LCBubyBtYWdpYyBpbGx1bWluYXRpb24gaXMgc3VwcG9zZWQgdG8gYmUgdXNlZC4gV2l6YXJkcyBhbmQgU29yY2VyZXJzIHRoZW4gcGVyZm9ybSBmZWF0cyBvZiBpbGx1c2lvbiBhbmQgbWFnaWMgdHJ5aW5nIHRvIG91dGRvIG9uZSBhbm90aGVyIHdpdGggdGhlaXIgZGlzcGxheXMuIFVzdWFsbHkgdGhlcmUgaXMgYSBwYW5lbCBvZiBqdWRnZXMgdG8gZGVjaWRlLCBpbiB0aGUgbGFyZ2VyIGNpdGllcyB0aGVyZSBpcyB1c3VhbGx5IGEgbGltaXQgb2YgNS1wZXJzb24gdGVhbXMgY29tcGV0aW5nLiBFYWNoIHBlcmZvcm1hbmNlIGR1cmluZyB0aGUgRGVzcG9ydGl1bSBvZiBNYWdpYyB1c2VzIGEgbG9uZyBlc3RhYmxpc2hlZCB0aGVtZSwgdGhhdCBvZiBhbiBhdHRhY2sgb24gdGhlIHRvd24gYnkgdmFyaW91cyBtb25zdGVycyBhbmQgRGFyayBFbHZlcywgcmVwZWxsZWQgYnkgYnJhdmUgd2FycmlvcnMgYW5kIHNwZWxsY2FzdGVycy4gVGhlIGRpc3BsYXlzLCBtYWRlIHVwIG9mIGFueSBudW1iZXIgb2Ygc3BlbGxzIGNhc3Qgd2l0aG91dCB0aGUgdXNlIG9mIG1hZ2ljIGRldmljZXMsIGNhbm5vdCBhY3R1YWxseSBjYXVzZSBhbnkgaGFybSB0byBwcm9wZXJ0eSBvciBwZW9wbGUsIGJ1dCBtdXN0IGJlIGFzIHdvbmRlcmZ1bCwgc3RyaWtpbmcsIGRldGFpbGVkLCBhbmQgbGlmZWxpa2UgYXMgcG9zc2libGUuXFxuXFxuVGhpcyBtb3RpZiBpcyBiYXNlZCBvbiBhY3R1YWwgYXR0YWNrcyB0aHJvdWdoIHRoZSB5ZWFycyBmcm9tIHRoZSBVdHRlcm1vc3QgV2FyIHRvIHRoZSBtb3N0IHJlY2VudCBHcmVhdCBTbGF2ZSBSYWlkcy4gVGhlIGlkZWEgaXMgdG8gbWFrZSB0aGUgYXR0YWNrZXJzIGFzIGRyZWFkZnVsIGFzIHBvc3NpYmxlIGFuZCB0aGUgZGVmZW5kZXJzIGFzIGhlcm9pYyBhcyBwb3NzaWJsZSwgc2Vjb25kYXJ5IGlzIHRvIG1ha2Ugc3VyZSB0aGF0IHBlb3BsZSB3aWxsIGFsd2F5cyByZW1lbWJlciB0aGUgdGVycm9yIG9mIHRoZSBVdHRlcm1vc3QgV2FyLiBJbiBsYXJnZSBjaXRpZXMgbGlrZSB0aGUgQ1NJTyBhbmQgQ1NXRSBhbmQgVGFyYW50aXMsIHRoZXNlIHBlcmZvcm1hbmNlcyBsYXN0IGFsbCBuaWdodCBhbmQgYXJlIGFtYXppbmcgdG8gd2F0Y2guIEluIHNtYWxsZXIgdmlsbGFnZXMgd2l0aG91dCBzcGVsbGNhc3RlcnMsIHB1cHBldCBwbGF5cyBhcmUgb2Z0ZW4gZG9uZSBpbiBpdHMgc3RlYWQuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTg1XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogNyxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDRcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSG9seSBEYXkgb2YgUGVsb3JcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgSG9seSBEYXkgb2YgUGVsb3IsIGFsc28ga25vd24gYXMgR2l2aW5nIERheSBhbmQgTWlkc3VtbWVyJ3MgRGF5LCBpcyBjZWxlYnJhdGVkIG9uIHRoZSBTdW1tZXIgU29sc3RpY2UuXFxuXFxuQmVjYXVzZSBQZWxvciBpcyB3aWRlbHkgbG92ZWQgYnkgdGhlIGNvbW1vbmVycywgdGhpcyBkYXkgaXMgc2V0IGFzaWRlIGFzIGEgZGF5IG9mIHJlc3QgaW4gdGhlIEZyZWUgQ2l0eSBvZiBHcmV5aGF3ay4gT25seSBlc3NlbnRpYWwgd29yayBpcyBkb25lIG9uIHRoaXMgZGF5LiBNYW55IG1lcmNoYW50cyBjbG9zZSB0aGVpciBzaG9wcyBvbiBHaXZpbmcgRGF5IGFzIHdlbGwgb3V0IG9mIHJlc3BlY3QgZm9yIHRoZSBTdW4gRmF0aGVyIGFuZCBoaXMgdGVhY2hpbmdzLiBHYW1ibGluZyBob3VzZXMgYXJlIGNsb3NlZCwgYnV0IG5vdCBob3N0ZWxyaWVzLCBmb3IgR2l2aW5nIERheSBpcyBhIGRheSBvZiBmZWFzdGluZyBhbmQgZ29vZHdpbGwsIGEgdGltZSBmb3IgZW5qb3lpbmcgdGhlIGZydWl0cyBvZiB0aGUgT2VydGguXFxuXFxuUHVibGljIHNlcnZpY2VzIGFyZSBoZWxkIGZyb20gZGF3biB1bnRpbCBub29uIGJ5IFBlbG9yJ3MgcHJpZXN0cywgb3V0ZG9vcnMgaWYgdGhlIHdlYXRoZXIgcGVybWl0cyAod2hpY2ggaWYgYWxtb3N0IGFsd2F5cyBkb2VzLCBhcyB0aGUgY2xlcmljcyB1c2Ugd2VhdGhlci1jb250cm9sbGluZyBtYWdpYyBmb3IgbWF4aW11bSBzdW5saWdodCkuIEV2ZW4gR3JleWhhd2sgQ2l0eSdzIGxhcmdlIHRlbXBsZSBvZiBQZWxvciBpcyBub3QgYmlnIGVub3VnaCB0byBob2xkIHRoZSB0aHJvbmdzIHdobyBjb21lIHRvIGNlbGVicmF0ZSBvbiB0aGlzIGRheSwgc28gdGhyb25ncyBvZiB0aGUgZmFpdGhmdWwgZmlsbCB0aGUgdGVtcGxlIGdyb3VuZHMgaW4gdGhlIEdhcmRlbiBRdWFydGVyLCBzcGlsbGluZyBvdXQgZnJvbSB0aGUgTWlsbHN0cmVhbSB0byB0aGUgTm9ibGVzJyBXYWxsLCBhbmQgdG8gdGhlIHJvYWQgbGVhZGluZyB0b3dhcmQgR3JleWhhd2sncyBHcmFuZCBUaGVhdGVyLiBNYW55IGNvbWUsIG9mIGNvdXJzZSwgZm9yIHRoZSBmcmVlIG1lYWwgdGhlIHByaWVzdHMgcHJvdmlkZSBhZnRlciB0aGUgc2VydmljZS4gVGhlIFBlbG9yaWFuIHByaWVzdHMgYXJlIHdlbGwgYXdhcmUgb2YgdGhpcywgYnV0IGJlbGlldmUgdGhhdCBmb3IgdGhlIG5lZWR5LCBhIGZ1bGwgc3RvbWFjaCBtdXN0IGNvbWUgYmVmb3JlIHdpc2RvbSBhbmQgbGVhcm5pbmcuIE1lbWJlcnMgb2YgR3JleWhhd2sncyBHdWlsZCBvZiBUaGlldmVzIGFuZCBCZWdnYXIncyBVbmlvbiwgbWFueSBvZiB3aG9tIHJlbWVtYmVyIE1pZHN1bW1lcidzIERheSBmb25kbHkgZnJvbSB0aGVpciBvcnBoYW5lZCBjaGlsZGhvb2RzLCBib3RoIHByb3RlY3QgcHJpZXN0cyBvZiBQZWxvciBvbiB0aGlzIGRheSwgYW5kIHdvZSBvbnRvIHRob3NlIHdobyBhdHRlbXB0IHRvIHRlc3QgdGhlbSBvbiB0aGlzIG1hdHRlci5cXG5cXG5Qcmllc3RzIG9mIFBlbG9yLCBiZWRlY2tlZCBpbiB5ZWxsb3cgYW5kIGdvbGQsIHBhcmFkZSBhYm91dCB0aGUgc3RyZWV0cywgZGVtYW5kaW5nIGRvbmF0aW9ucyBmb3IgdGhlaXIgY2hhcml0YWJsZSB3b3JrcywgZnJlZWx5IHVzaW5nIGd1aWx0IHRvIHNxdWVlemUgbW9yZSBmcm9tIHN0aW5neSBwdXJzZXMuIEZyZWUgaGVhbGluZ3MgYXJlIGdpdmVuIG91dCwgcGFydGljdWxhcmx5IHRvIGNoaWxkcmVuLiBNb3N0IEdyZXloYXdrZXJzIHdlYXIgYXQgbGVhc3Qgb25lIGl0ZW0gb2YgeWVsbG93IGNsb3RoIG9uIHRoaXMgZGF5IG91dCBvZiByZXNwZWN0LlxcblxcblNvbWUgY3J1c2FkaW5nIFBlbG9yaWFucyBjcnVzYWRlIGFnYWluc3QgZXZpbCBseWNhbnRocm9wZXMgb24gdGhpcyBuaWdodCwgc2luY2UgYm90aCBDZWxlbmUgYW5kIEx1bmEgYXJlIGZ1bGwuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTg2XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogNCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSG9seSBEYXkgb2YgU2VyZW5pdHlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgSG9seSBEYXkgb2YgU2VyZW5pdHksIG9uIFJlYXBpbmcgMTAsIGlzIGNlbGVicmF0ZWQgaW4gVmVsdW5hIGFzIGEgaG9seSBkYXkgb2YgUmFvLCB0aG91Z2ggaXQncyBhY3R1YWxseSB0aGUgYW5uaXZlcnNhcnkgb2YgVmVsdW5hJ3Mgc2VjZXNzaW9uIGZyb20gRnVyeW9uZHkgaW4gNDc2IENZLiBJdCBpcyBjZWxlYnJhdGVkIHdpdGggcmVsaWdpb3VzIHNpbmdpbmcgYW5kIHdvcnNoaXAuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTg3XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTAsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBpZDogbnVsbCxcbiAgICAgICAgY2F0ZWdvcmllczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTmF0dXJhbCBFdmVudHNcIixcbiAgICAgICAgICAgICAgICBpZDogXCJuYXR1cmFsLWV2ZW50c1wiLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiMyRTdEMzJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlJlbGlnaW91cyBIb2xpZGF5c1wiLFxuICAgICAgICAgICAgICAgIGlkOiBcInJlbGlnaW91cy1ob2xpZGF5c1wiLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiNGRkVCM0JcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlNlY3VsYXIgSG9saWRheXNcIixcbiAgICAgICAgICAgICAgICBpZDogXCJzZWN1bGFyLWhvbGlkYXlzXCIsXG4gICAgICAgICAgICAgICAgY29sb3I6IFwiIzBENDdBMVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTWFnaWNhbCBFdmVudHNcIixcbiAgICAgICAgICAgICAgICBpZDogXCJtYWdpY2FsLWV2ZW50c1wiLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiMzMTFCOTJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1pc2NlbGxhbmVvdXMgRXZlbnRzXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwibWlzY2VsbGFuZW91cy1ldmVudHNcIixcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjMDI4OEQxXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIkNhbGVuZGFyIG9mIEdvbGFyaW9uXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIkNhbGVuZGFyIGZvciB0aGUgd29ybGQgb2YgUGF0aGZpbmRlci5cIixcbiAgICAgICAgc3RhdGljOiB7XG4gICAgICAgICAgICBkaXNwbGF5RGF5TnVtYmVyOiBmYWxzZSxcbiAgICAgICAgICAgIGZpcnN0V2Vla0RheTogMCxcbiAgICAgICAgICAgIGluY3JlbWVudERheTogZmFsc2UsXG4gICAgICAgICAgICBkaXNwbGF5TW9vbnM6IHRydWUsXG4gICAgICAgICAgICBvdmVyZmxvdzogdHJ1ZSxcbiAgICAgICAgICAgIHdlZWtkYXlzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1vb25kYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZGI4YWY4Zjg1YjhhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUb2lsZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2Y4N2EwOTRiMjg0OVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiV2VhbGRheVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8yYTViYjg4YjNhZThcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk9hdGhkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYzkzYTBiZTg5ODFiXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJGaXJlZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzJiN2I1OTc5NGEwYlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiU3RhcmRheVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9iYWFhNmE4OWNhMWJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlN1bmRheVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9mOWJhY2EwODhiMjhcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBtb250aHM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQWJhZGl1c1wiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2RhZDlkYTg5ZjgxOFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQ2FsaXN0cmlsXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfOTgwYTg4Y2I5YjY4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJQaGFyYXN0XCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYTljOTZhYzgwOTA4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJHb3pyYW5cIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMwLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9hOTlhNjk3YjlhYmJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkRlc251c1wiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzhiY2FkOWE4Zjg0YVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiU2FyZW5pdGhcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMwLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF80ODRhNDlhOTk4ZGJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkVyYXN0dXNcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF85YTQ4ZTliOTY5MzhcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkFyb2R1c1wiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2JiZTk5YjJhZmFlYVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiUm92YVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2JhMzlmYmU4YzhiOFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTGFtYXNoYW5cIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF82OWQ5M2JhOWRiYThcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk5ldGhcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMwLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF80YWQ4ZmI3OWViNmFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkt1dGhvbmFcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF85YTNhOGIzODg5MzlcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBtb29uczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTb21hbFwiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogMjkuNSxcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiA5LjUsXG4gICAgICAgICAgICAgICAgICAgIGZhY2VDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiBcIiMyOTJiNGFcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYjg3YWI5NTljYWM5XCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbGVhcERheXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTGVhcCBEYXlcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJsZWFwZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGludGVydmFsOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWdub3JlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGNsdXNpdmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVydmFsOiA4XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogMCxcbiAgICAgICAgICAgICAgICAgICAgdGltZXNwYW46IDEsXG4gICAgICAgICAgICAgICAgICAgIGludGVyY2FsYXJ5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfODhjOGRhM2I4YjJiXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZXJhczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJBZ2Ugb2YgU2VycGVudHNcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogXCJZZWFyIHt7eWVhcn19IC0ge3tlcmFfbmFtZX19XCIsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiA0NzIwLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGg6IDgsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXk6IDE1XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJBZ2Ugb2YgRGFya25lc3NcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogXCJZZWFyIHt7YWJzX3llYXJ9fSAtIHt7ZXJhX25hbWV9fVwiLFxuICAgICAgICAgICAgICAgICAgICBzdGFydDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogLTUzMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb250aDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheTogMVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQWdlIG9mIEFuZ3Vpc2hcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogXCJZZWFyIHt7eWVhcn19IC0ge3tlcmFfbmFtZX19XCIsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiAtNDUwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoOiA4LFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiAxXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJBZ2Ugb2YgRGVzdGlueVwiLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBcIlllYXIge3t5ZWFyfX0gLSB7e2VyYV9uYW1lfX1cIixcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IC0zNTAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGg6IDgsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXk6IDFcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkFnZSBvZiBFbnRocm9uZW1lbnRcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogXCJZZWFyIHt7eWVhcn19IEFSIC0ge3tlcmFfbmFtZX19XCIsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGg6IDgsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXk6IDFcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkFnZSBvZiBMb3N0IE9tZW5zXCIsXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IFwiWWVhciB7e3llYXJ9fSBBUiAtIHt7ZXJhX25hbWV9fVwiLFxuICAgICAgICAgICAgICAgICAgICBzdGFydDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogNDYwNixcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoOiA4LFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiAxXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIGN1cnJlbnQ6IHtcbiAgICAgICAgICAgIHllYXI6IDQ3MjAsXG4gICAgICAgICAgICBkYXk6IDE1LFxuICAgICAgICAgICAgbW9udGg6IDBcbiAgICAgICAgfSxcbiAgICAgICAgZXZlbnRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTdW1tZXIgU29sc3RpY2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBdCB0aGUgc3VtbWVyIHNvbHN0aWNlLCB0aGUgU3VuIHRyYXZlbHMgdGhlIGxvbmdlc3QgcGF0aCB0aHJvdWdoIHRoZSBza3ksIGFuZCB0aGF0IGRheSB0aGVyZWZvcmUgaGFzIHRoZSBtb3N0IGRheWxpZ2h0LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ5MlwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldpbnRlciBTb2xzdGljZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSB3aW50ZXIgc29sc3RpY2UgbWFya3MgdGhlIHNob3J0ZXN0IGRheSBhbmQgbG9uZ2VzdCBuaWdodCBvZiB0aGUgeWVhciwgd2hlbiB0aGUgc3VuIGlzIGF0IGl0cyBsb3dlc3QgYXJjIGluIHRoZSBza3kuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDkzXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU3ByaW5nIEVxdWlub3hcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgZXF1aW5veCBtYXJrcyB0aGUgZGF5IGFuZCB0aGUgbmlnaHQgaXMgZXF1YWxseSBhcyBsb25nLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ5NFwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkF1dHVtbiBFcXVpbm94XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhlIGVxdWlub3ggbWFya3MgdGhlIGRheSBhbmQgdGhlIG5pZ2h0IGlzIGVxdWFsbHkgYXMgbG9uZy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0OTVcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJFdGVybmFsIEtpc3NcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJab24tS3V0aG9uXFxuXFxuQ3VsbWluYXRpbmcgb24gdGhlIGZpcnN0IG5ldyBtb29uIG9mIHRoZSBuZXcgeWVhciwgdGhlIEV0ZXJuYWwgS2lzcyBpcyBhbiAxMSBkYXkgY2VyZW1vbnkgaG9ub3JpbmcgWm9uLUt1dGhvbi4gT24gdGhlIGZpbmFsIGRheSwgYSBsaXZpbmcgc2FjcmlmaWNlIGlzIG1hZGUgdG8gdGhlIERhcmsgUHJpbmNlLCBhZnRlciB0aGUgdmljdGltIGlzIHBhbXBlcmVkIGFuZCBwbGVhc3VyZWQgZm9yIHRoZSB0ZW4gZGF5cyBwcmlvci4gVGhlIHNhY3JpZmljZSBjYW4gZWl0aGVyIGJlIGFuIGVuZW15IG9yIGEgZ3JlYXQgZGV2b3RlZSBvZiB0aGUgY2h1cmNoLCBhbmQgaXMga2VwdCBhbGl2ZSBmb3IgYXMgbG9uZyBhcyBwb3NzaWJsZSBkdXJpbmcgdGhlIHRvcnR1cmUgdXNpbmcgbWFnaWMuIFRoaXMgaG9saWRheSBvZnRlbiBpbnZvbHZlcyBmb3J0dW5lLXRlbGxpbmcgYXMgYSBwYXJ0IG9mIHRoZSB0b3J0dXJlLCB1c2luZyB0aGUgdmljdGltJ3MgZW50cmFpbHMgb3IgdGhlaXIgY3JpZXMgb2YgcGFpbiB0byBkZXRlcm1pbmUgdGhlIE1pZG5pZ2h0IExvcmQncyB3aWxsLiBPY2Nhc2lvbmFsbHkgaXQgaXMgYmVsaWV2ZWQgdGhhdCB0aGUgc2FjcmlmaWNlIHdpbGwgcHJvcGhlc3kgd2l0aCB0aGUgdm9pY2Ugb2YgWm9uLUt1dGhvbiBoaW1zZWxmLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ5NlwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkxvbmduaWdodFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkxvbmduaWdodCBpcyBhIGhvbGlkYXkgY2VsZWJyYXRlZCBvbiB0aGUgZnVsbCBtb29uIGluIHRoZSB3aW50ZXIgbW9udGggb2YgQWJhZGl1cy4gRHVyaW5nIHRoZSBmZXN0aXZhbCwgcmV2ZWxlcnMgc3RheSB1cCBhbGwgbmlnaHQgdG8gZ3JlZXQgdGhlIGRhd24gdG8gZGVmeSB0aGUgbG9uZyB3aW50ZXIgbW9udGhzLiBJdCBpcyBldmVuIGNlbGVicmF0ZWQgaW4gSXJyaXNlbiwgd2hlcmUgdGhlcmUgYXJlIG5vIG5hdHVyYWwgc2Vhc29ucy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0OTdcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJGb3VuZGF0aW9uIERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkFic2Fsb20sIE1pbGFuaVxcblxcbkZvdW5kYXRpb24gRGF5IGlzIGEgY2l2aWwgaG9saWRheSBjZWxlYnJhdGVkIG9uIHRoZSBOZXcgWWVhciAoMSBBYmFkaXVzKSBpbiBBYnNhbG9tIHRvIGNvbW1lbW9yYXRlIHRoZSBjaXR5J3MgZm91bmRpbmcgYnkgdGhlIGdvZCBBcm9kZW4gaW4gMSBBUi5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0OThcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJQamFsbGFyYW5lIERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIklycmlzZW5cXG5cXG5QamFsbGFyYW5lIERheSBpcyBhbiBhbmNpZW50IGhvbGlkYXkgaW4gSXJyaXNlbiBjZWxlYnJhdGVkIG9uIDEgQWJhZGl1cyAoTmV3IFllYXIncyBEYXkpLiBFdmVyeSAxMDAgeWVhcnMsIEJhYmEgWWFnYSByZXR1cm5zIHRvIEdvbGFyaW9uIHRvIHJlbW92ZSBoZXIgZGF1Z2h0ZXIgZnJvbSB0aGUgdGhyb25lIG9mIElycmlzZW4sIGFuZCBwdXQgYW5vdGhlciBkYXVnaHRlciBvbiB0aGUgdGhyb25lIGluc3RlYWQuIEluIDM3MTMgQVIgdGhlIHRoaXJkIFF1ZWVuIG9mIElycmlzZW4sIFBqYWxsYXJhbmUsIGFuZCBoZXIgY2hpbGRyZW4gY2hvc2UgdG8gcmVzaXN0LiBCYWJhIFlhZ2EgcnV0aGxlc3NseSBjcnVzaGVkIHRoZSByZWJlbGxpb24gaW4gYSBzaW5nbGUgZGF5LCB3aGljaCBpcyBub3cgY2VsZWJyYXRlZCBhcyBhIGhvbGlkYXkuIFRoZSBmZXN0aXZhbCBpbmNsdWRlcyBmZWFzdGluZyBhbmQgdGhlIGJ1cm5pbmcgb2YgZWZmaWdpZXMgb2YgdGFyIGFuZCBzdHJhdy4gVGhpcyBpcyBhIHJlbWluZGVyIG9mIHRoZSBmYXRlIG9mIFBqYWxsYXJhbmUncyBmb2xsb3dlcnMsIHdobyB3ZXJlIGJ1cm5lZCBhbGl2ZSBhcyBhIHdhcm5pbmcgdG8gYWxsIHRob3NlIHdobyB3b3VsZCBvcHBvc2UgQmFiYSBZYWdhLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ5OVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlZhdWx0IERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkFiYWRhclxcblxcblZhdWx0IERheSBpcyBhIGhvbGlkYXkgaGVsZCBvbiA2IEFiYWRpdXMgaW4gaG9ub3Igb2YgQWJhZGFyLCBNYXN0ZXIgb2YgdGhlIEZpcnN0IFZhdWx0LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUwMFwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDYsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlJ1YnkgUHJpbmNlJ3MgQmlydGhkYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJPc2lyaW9uXFxuXFxuVGhlIFJ1YnkgUHJpbmNlJ3MgQmlydGhkYXkgaXMgYSBuYXRpb25hbCBob2xpZGF5IGluIE9zaXJpb24gaW4gaG9ub3Igb2YgdGhlIGJpcnRoZGF5IG9mIEtoZW1ldCBJSUksIHRoZSBSdWJ5IFByaW5jZS4gSXQgaXMgY2VsZWJyYXRlZCBhbm51YWxseSBvbiB0aGUgMjAgQWJhZGl1cy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MDFcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyMCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTWVycnltZWFkXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiRHJ1bWEsIENheWRlbiBDYWlsZWFuXFxuXFxuQSBob2xpZGF5IG9jY3VycmluZyBvbiAyIENhbGlzdHJpbCwgTWVycnltZWFkIHdhcyBzdGFydGVkIGluIERydW1hIGFuZCBpcyBzdXBwb3NlZCB0byBiZSBhIHRpbWUgdG8gc2hhcmUgb2YgdGhlIGxhc3Qgb2YgdGhlIHByZXZpb3VzIHllYXIncyBtZWFkIHdpdGggdGhlIHJlc3Qgb2YgdGhlIGNvbW11bml0eS5cXG5cXG5JbiBjdXJyZW50IHRpbWVzLCBtb3N0IHBlb3BsZSBqdXN0IHVzZSBpdCBhcyBhbiBleGN1c2UgdG8gZHJpbmsgZXhjZXNzaXZlbHkuIFRoZSBwb29yIHRyYXZlbCBmcm9tIGJhciB0byBiYXIgZHJpbmtpbmcgd2hhdGV2ZXIgYWxjb2hvbCB0aGV5IGNhbiBhZmZvcmQsIHdoaWxlIHRoZSB3ZWFsdGh5IHdpbGwgc2V0IGFzaWRlIHNwZWNpZmljIHZpbnRhZ2VzIGZvciB0aGlzIGRheS4gQSBrbm93biBjb25zZXF1ZW5jZSBvZiB0aGlzIGRheSBhcmUgJ21lYWQgcmlvdHMnIHRoYXQgaGFwcGVuIHdoZW4gdGhlcmUgYXJlIG1vcmUgY2VsZWJyYW50cyB0aGFuIHRoZXJlIGlzIGFsY29ob2wgdG8gc2VydmUgdGhlbS4gVGhpcyBsZWFkcyB0byBhIHZpb2xlbnQsIGRlc3RydWN0aXZlIGdyb3VwIG9mIHBlb3BsZSBpbiBhIGNyb3dkZWQgYmFyLiBJZiB0aGlzIGlzIGEgY29tbW9uIG9jY3VycmVuY2UgZm9yIHBhcnRpY3VsYXIgY2l0aWVzLCB0aGV5IG1heSByZWluZm9yY2UgdGhlaXIgZ3VhcmQgZm9yY2UgZm9yIHRoZSBpbmV2aXRhYmx5IGV2ZW50ZnVsIG5pZ2h0LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUwMlwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDIsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIktpbmcgRW9kcmVkIElJJ3MgQmlydGhkYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJLb3J2b3NhXFxuXFxuS2luZyBFb2RyZWQgSUkncyBCaXJ0aGRheSB3YXMgYSBsb2NhbCBob2xpZGF5IGluIHRoZSBWYXJpc2lhbiBjaXR5LXN0YXRlIG9mIEtvcnZvc2EgYW5kIHdhcyBjZWxlYnJhdGVkIG9uIDE2IENhbGlzdHJpbC4gSXQgY29tbWVtb3JhdGVkIHRoZSBiaXJ0aGRheSBvZiBpdHMgZm9ybWVyIHJ1bGVyLCBLaW5nIEVvZHJlZCBBcmFiYXN0aSBJSSwgd2hvIGRlY3JlZWQgdGhhdCBvbiB0aGUgZGF5LCBzY2FudGlseSBjbGFkIHdvbWVuIHdvdWxkIGRhbmNlIGFuZCBzZXJ2ZSBmcmVlIHdpbmUgdG8gY2VsZWJyYW50cy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MDNcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxNixcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTG95YWx0eSBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJDaGVsaWF4LCBBc21vZGV1c1xcblxcbkxveWFsdHkgRGF5IGlzIGEgaG9saWRheSBpbiB0aGUgbmF0aW9uIG9mIENoZWxpYXggY29tbWVtb3JhdGluZyB0aGUgZGF0ZSBvbiBDYWxpc3RyaWwgMTksIDQ2NDAgQVIgd2hlbiBIb3VzZSBUaHJ1bmUgc2lnbmVkIHRoZSBUcmVhdHkgb2YgRWdvcmlhbiwgZGVjbGFyaW5nIGl0IHRoZSB2aWN0b3IgaW4gdGhlIENoZWxpc2ggQ2l2aWwgV2FyIGFuZCBydWxlciBvZiB0aGUgZW1waXJlLiBCZWNhdXNlIG9mIEhvdXNlIFRocnVuZSdzIHdlbGwta25vd24gdGllcyB0byB0aGUgaW5mZXJuYWwsIHRoaXMgaG9saWRheSBpcyBhbHNvIG9ic2VydmVkIGJ5IHRoZSBDaHVyY2ggb2YgQXNtb2RldXMgd2hvIGNvbnNpZGVyIGl0IGEgZmVhc3QgZGF5LiBUaGUgY2h1cmNoIGFsb25nIHdpdGggbG9jYWwgZ292ZXJubWVudHMgcHJvdmlkZSBhIGZyZWUgbWVhbCB0byBhbGwgY2l0aXplbnMgdG8gcmVtaW5kIHRoZW0gb2YgdGhlIGJlbmVmaXRzIEhvdXNlIFRocnVuZSBwcm92aWRlcyB0aGVtIHdpdGguXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTA0XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTksXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkZhdGVsZXNzIERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk1haGF0aGFsbGFoXFxuXFxuRm9sbG93ZXJzIG9mIE1haGF0aGFsbGFoIG1hcmsgZWFjaCBsZWFwIGRheSBhcyBGYXRlbGVzcyBEYXksIHdoZW4gdGhlIFJpdmVyIG9mIFNvdWxzIHRlbXBvcmFyaWx5IHN0b3BzIGFuZCBzb3VscyBjYW4gZXNjYXBlIFBoYXJhc21hJ3MganVkZ21lbnQuIFRoZXkgcGVyZm9ybSBtYW55IHNhY3JpZmljaWFsIGFuZCBzdWljaWRhbCByaXR1YWxzIG9uIEZhdGVsZXNzIERheS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MDVcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyOSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiR29sZW13YWxrIFBhcmFkZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk1hZ25pbWFyLCBWYXJpc2lhXFxuXFxuVGhlIEdvbGVtd2FsayBQYXJhZGUgaXMgYSBwYXJhZGUgb2YgZ29sZW1zIGNyZWF0ZWQgYnkgYW1hdGV1cnMgaG9waW5nIHRvIHdpbiBhIG1vbmV0YXJ5IGdyYW50LCBvciBldmVuIGEgam9iLCBmcm9tIHRoZSBHb2xlbXdvcmtzIGluIE1hZ25pbWFyLiBBdCB0aGUgZW5kIG9mIHRoZSBwYXJhZGUgYWxvbmcgdGhlIEF2ZW51ZSBvZiBIb25vcnMsIHRoZSBjb25zdHJ1Y3RzIGFyZSBqdWRnZWQuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTA2XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiRGF5IG9mIEJvbmVzXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiUGhhcmFzbWFcXG5cXG5Qcmllc3RzIGFuZCB3b3JzaGlwZXJzIG9mIHRoZSBMYWR5IG9mIEdyYXZlcyBwYXJhZGUgdGhlIGJvZGllcyBvZiB0aGUgcmVjZW50bHkgZGVhZCBvbiB0aGlzIGhvbGlkYXksIGhvbGRpbmcgZnJlZSBidXJpYWxzIGFmdGVyd2FyZHMuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTA3XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogNSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU2FibGUgQ29tcGFueSBGb3VuZGluZyBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJLb3J2b3NhXFxuXFxuU2FibGUgQ29tcGFueSBGb3VuZGluZyBEYXkgaXMgYSBob2xpZGF5IG1hcmtpbmcgdGhlIGZvdW5kaW5nIG9mIHRoZSBTYWJsZSBDb21wYW55IG9mIHRoZSBWYXJpc2lhbiBjaXR5LXN0YXRlIG9mIEtvcnZvc2EuIENlbGVicmF0ZWQgb24gNiBQaGFyYXN0LCB0aGUgZGF5IGlzIG1hcmtlZCBieSBzb21iZXIgbWlsaXRhcnkgcGFyYWRlcyB0aGF0IGdlbmVyYWxseSBwcmVjbHVkZSB0aGUgY29uc3VtcHRpb24gb2YgYWxjb2hvbCwgYSBzdGFwbGUgb24gbW9zdCBvdGhlciBob2xpZGF5cy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MDhcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA2LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJOaWdodCBvZiBUZWFyc1wiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlNvbGt1XFxuXFxuVGhlIE5pZ2h0IG9mIFRlYXJzIGhlbGQgYW5udWFsbHkgb24gNyBQaGFyYXN0IGluIHRoZSBLYXRhcGVzaGkgdG93biBvZiBTb2xrdS4gSXQgaXMgYSBzb2xlbW4gdmlnaWwgY29tbWVtb3JhdGluZyB0aG9zZSBsb3N0IGluIHRoZSBCYXR0bGUgb2YgUmVkIEhhaWwgaW4gNDcwMSBBUi5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MDlcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA3LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJLYWxpYXNoYWhyaW1cIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJRYWRpcmFcXG5cXG5LYWxpYXNoYWhyaW0gaXMgYSBuYXRpb25hbCBob2xpZGF5IGNlbGVicmF0ZWQgb24gUGhhcmFzdCAxMyBpbiBRYWRpcmEgdGhhdCBjZWxlYnJhdGVzIHRoZSBQYWRpc2hhaCBFbXBlcm9yIG9mIGRpc3RhbnQgS2F0aGVlciwgYW5kIFFhZGlyYSdzIGxveWFsdHkgdG8gaGltLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUxMFwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDEzLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJDb25xdWVzdCBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJOZXhcXG5cXG5FdmVyeSB5ZWFyLCBvbiB0aGUgMjZ0aCBvZiBQaGFyYXN0LCBFbGRlciBBcmNoaXRlY3QgT2Jsb3NrIFx1MjAxNCBvbGRlc3QgbWVtYmVyIG9mIE5leCdzIENvdW5jaWwgb2YgVGhyZWUgYW5kIE5pbmUgXHUyMDE0IGFzY2VuZHMgdG8gdGhlIGhpZ2hlc3QgYmFsY29uaWVzIG9mIHRoZSBCYW5kZXNoYXIgaW4gUXVhbnRpdW0uIEluIGEgdm9pY2UgbWFkZSB0aHVuZGVyb3VzIGJ5IHRoZSBwbGF0Zm9ybSdzIG1hZ2ljLCB0aGUgd2l6ZW5lZCBwZWNoIGNvdW5jaWxtYW4gc3BlbmRzIHRoZSBob3VycyBmcm9tIGR1c2sgdG8ganVzdCBwYXN0IG5vb24gZW51bWVyYXRpbmcgdGhlIGF0cm9jaXRpZXMgY29tbWl0dGVkIGJ5IHRoZSBuZWNyb21hbmNlcnMgb2YgR2ViIHVwb24gdGhlIHBlb3BsZSBvZiBOZXgsIGN1bG1pbmF0aW5nIHdpdGggdGhlIGRpc2FwcGVhcmFuY2Ugb2YgdGhlIGFyY2h3aXphcmQgTmV4IGhpbXNlbGYuIEF0IHRoZSBjb25jbHVzaW9uIG9mIHRoaXMgcmVjb3JkIG9mIG5hdGlvbmFsIHdvdW5kcywgdGhlIGNvdW50cnkncyBlbGV2ZW4gb3RoZXIgY291bmNpbCBtZW1iZXJzIGpvaW4gT2Jsb3NrIGluIHJlbmV3aW5nIHRoZWlyIHllYXJseSB2b3cgdG8gbmVpdGhlciBmb3JnZXQgbm9yIGZvcmdpdmUgdGhlIEdlYmJpdGVzJyBhdHJvY2l0aWVzIGFuZCB0byBhZ2FpbiBzd2VhciBpbiB0aGVpciBsb3N0IHJ1bGVyJ3MgbmFtZSB0byBlbmRsZXNzbHkgd2FnZSB3YXIgYWdhaW5zdCB0aGVpciBhbmNpZW50IGVuZW1pZXMuXFxuXFxuT24gdGhpcyBkYXksIGtub3duIGFzIENvbnF1ZXN0IERheSwgYWxsIHRoZSBwZW9wbGUgb2YgTmV4IGFyZSBleHBlY3RlZCB0byBzaGFyZSBpbiB0aGVpciBsZWFkZXJzJyBvYXRocywgdG8gY2VsZWJyYXRlIHRoZSBzaGFyZWQgcGF0cmlvdGlzbSBvZiB0aGVpciB3b25kcm91cyBuYXRpb24sIGFuZCB0byByZW1lbWJlciB0aGUgc2FjcmlmaWNlcyBvZiBoZXJvZXMgcGFzdC4gVGhpcyBhbHNvIG1ha2VzIGl0IGEgZGF5IGZvciBtYW55IE5leGlhbiB3aXphcmRzIHRvIHJldmVhbCBkZWFkbHkgbmV3IHNwZWxscywgZ2lnYW50aWMgY29uc3RydWN0cywgYW5kIGF1ZGFjaW91cyBhcmNhbmUgbWFzdGVyd29ya3NcdTIwMTR3aGljaCBtYW55IGNyZWF0b3JzIHByb21pc2UgdG8gYmUgdGhlIGRvb20gb2YgdGhlaXIgZm9lcy4gRXZlbiB0aHJvdWdob3V0IHRoZSByZXN0IG9mIHRoZSBJbm5lciBTZWEgcmVnaW9uLCBtYW55IGNydXNhZGVycywgcmViZWxzLCBhbmQgemVhbG90cyBvYnNlcnZlIENvbnF1ZXN0IERheSBhcyBhIGRheSB0byByZW5ldyBibG9vZCBvYXRocywgbGF1bmNoIGxvbmctcGxhbm5lZCBiYXR0bGVzLCBhbmQgZmluYWxseSB0YWtlIHJldmVuZ2UuIEl0IGlzIGEgZGF5IGZvciB3b3JkcyBvZiBob25vciwgYSBkYXkgZm9yIGJhdHRsZSBjcmllcywgYW5kIGEgZGF5IHdoZXJlIGdsb3J5IG1vc3QgZmF2b3JzIHRoZSBib2xkLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUxMVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDI2LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJEYXlzIG9mIFdyYXRoXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiQXNtb2RldXMsIENoZWxpYXhcXG5cXG5UaGUgRGF5cyBvZiBXcmF0aCwgb3IgRGllcyBJcmFlLCBhcmUgYSBob2xpZGF5IGNlbGVicmF0ZWQgb24gYm90aCBzb2xzdGljZXMgYW5kIGVxdWlub3hlcyBpbiB0aGUgbmF0aW9uIG9mIENoZWxpYXggYW5kIHdoZXJldmVyIEFzbW9kZXVzIGlzIHdvcnNoaXBlZC4gVGhleSBhcmUgcHJpbWFyaWx5IGEgbmF0aW9uYWwgaG9saWRheSBhbmQgbm90IHRydWx5IGEgcmVsaWdpb3VzIG9uZSwgYnV0IHRoZSB0d28gYXJlIG9mdGVuIGNvbmZ1c2VkIGR1ZSB0byBDaGVsaWF4J3MgY3VycmVudCBwb2xpdGljYWwgY2xpbWF0ZS4gVmFyaW91cyBjb250ZXN0cyBhbmQgYmxvb2Qgc3BvcnRzIGFyZSBoZWxkIG9uIHRoZXNlIGRheXMsIHByb21vdGluZyB0aG9zZSBlbGl0ZXMgd2hvIGNhbiBjbGVhcmx5IGRlbW9uc3RyYXRlIHRoZWlyIHN1cGVyaW9yaXR5IG92ZXIgb3RoZXJzLiBTb21lIGJlbGlldmUgdGhhdCB0aGVzZSBjb21wZXRpdGlvbnMgYXJlIHdhdGNoZWQgYW5kIGp1ZGdlZCBieSBkZXZpbHMgdGhlbXNlbHZlcy4gSW4gdGhlIHBhcnRzIG9mIHRoZSB3b3JsZCB3aGVyZSB0aGUgUHJpbmNlIG9mIERhcmtuZXNzIGlzIG5vdCBvcGVubHkgdmVuZXJhdGVkLCB0aGVzZSBob2xpZGF5cyB0YWtlIG9uIGEgZGlmZmVyZW50IHRvbmU6IHRoZXkgYXJlIHVzZWQgdG8gc2V0dGxlIG9sZCBncmlldmFuY2VzIGFuZCBhbHNvIHRvIGVuZCBjb250cmFjdHMuXFxuXFxuSW4gdGhlc2UgZGF5cywgYmxvb2RzcG9ydHMgYXJlIG9yZ2FuaXplZCBpbnRvIGNpdGllcycgc3RhZGl1bXMuIFNsYXZlcyBhbmQgc2VydmFudHMgb2YgYW55IG1hc3RlciBtYXkgY2hvb3NlIHRvIGVudGVyIHRoZSBhcmVuYSBmb3Igb25lLW9uLW9uZSBibG9vZHkgYmF0dGxlcyB0byB0aGUgZGVhdGguIEZyZWUgbWVuIGFuZCB3b21lbiBvZiBhbGwgY2xhc3NlcyBhcmUgZnJlZSB0byBlbnRlciB0aGUgYXJlbmEgYXMgd2VsbC4gVGhlIGVudHJhbnRzIGZpZ2h0IGluIHJvdW5kcyB1bnRpbCBhdCBsYXN0IG9uZSBzdGFuZHMgYWxvbmUuIFRoZSB3aW5uZXIgaXMgZ3JhbnRlZCBmcmVlZG9tIGZyb20gc2xhdmVyeSBvciBzZXJ2aXR1ZGUsIGVyYXN1cmUgb2YgYWxsIGRlYnRzLCBhbmQgYSBwdXJzZSBvZiBnb2xkLlxcblxcblRoZSB3aW50ZXIgc29sc3RpY2Ugc2VlcyB0aGUgY3VsbWluYXRpb24gb2YgdGhlIERpZXMgSXJhZSwgd2l0aCBhbGwgdGhlIHdpbm5lcnMgb2YgdGhlIHRocmVlIHByZXZpb3VzIGJvdXRzIHN1bW1vbmVkIHRvIEVnb3JpYW4gdG8gZmlnaHQgdG8gdGhlIGRlYXRoIGZvciB0aGUgYW11c2VtZW50IG9mIHRoZSBub2JsZXMuIFRoZSB3aW5uZXIgaXMgZ2l2ZW4gYSB0aXRsZSBvZiBiYXJvbmV0IGFuZCBhIHBsb3Qgb2YgbGFuZC5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MTJcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJGaXJzdGJsb29tXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiR296cmVoXFxuXFxuRmlyc3RibG9vbSBpcyBhIGhvbGlkYXkgY2VsZWJyYXRpbmcgdGhlIGZpcnN0IHBsYW50aW5nIG9mIHRoZSBhZ3JpY3VsdHVyYWwgc2Vhc29uLCBhbmQgZ2VuZXJhbGx5IGFzc29jaWF0ZWQgd2l0aCB0aGUgd2VhdGhlciBnb2QgR296cmVoLiBJdCBmYWxscyBvbiB0aGUgdmVybmFsIGVxdWlub3guIE1hbnkgZmFybWluZyBjb21tdW5pdGllcyBzZWUgaXQgYXMgdGhlIGJlZ2lubmluZyBvZiB0aGUgeWVhciwgZXZlbiB0aG91Z2ggY29udmVudGlvbmFsIGNhbGVuZGFycyBiZWdpbiB0d28gbW9udGhzIGVhcmxpZXIuIERlc3BpdGUgd2VhcmluZXNzIGFmdGVyIGEgZnVsbCBkYXkgcGxhbnRpbmcsIG1hbnkgZmFybWluZyBjb21tdW5pdGllcyBob2xkIGNlbGVicmF0aW9ucyBjb21lIHRoZSBuaWdodDogZmVhc3RpbmcsIGRhbmNpbmcgYW5kIGNvdXJ0c2hpcCBmZWF0dXJlIHNob3dpbmcgdGhlIGN5Y2xlIG9mIG5hdHVyZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MTNcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJGaXJzdCBDdXRcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJGYWxjb24ncyBIb2xsb3dcXG5cXG5UaGUgRmlyc3QgQ3V0IGNlbGVicmF0aW9uIGluIEZhbGNvbidzIEhvbGxvdyB1c2VkIHRvIG1hcmsgdGhlIHN0YXJ0IG9mIHRoZSB3b3JrIGluIHRoZSB3b29kcyBlYWNoIHNwcmluZy4gTm93LCBob3dldmVyLCBpdCBpcyBhIG1lYW5pbmdsZXNzIHJhbXNoYWNrbGUgY2VyZW1vbnkgYXMgVGh1bGRyaW4gS3JlZWQgZm9yY2VzIHRoZSBsdW1iZXIgY3Jld3MgdG8gd29yayB0aHJvdWdoIGV2ZW4gZHVyaW5nIHRoZSBjb2xkZXN0IG1vbnRocyBpbiB0aGUgd2ludGVyLiBTdGlsbCwgRmlyc3QgQ3V0IGJyaW5ncyBwZW9wbGUgb3V0IHRvIGNlbGVicmF0ZSB0aGUgc3RhcnQgb2YgdGhlIHNwcmluZy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MTRcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJDdXJyZW50c2V2ZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkdvenJlaFxcblxcbk9uIHRoaXMgcmVsaWdpb3VzIGhvbGlkYXksIGFsbCB3aG8gdHJhdmVsIG9uIHRoZSB3YXRlciBtYWtlIG9mZmVyaW5ncyB0byBHb3pyZWggaW4gdGhlIGhvcGVzIG9mIHNhZmUgcGFzc2FnZSBmb3IgdGhlIGNvbWluZyB5ZWFyLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUxNVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDcsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAzXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlRheGZlc3RcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBYmFkYXJcXG5cXG5ObyBvbmUgZW5qb3lzIHBheWluZyB0YXhlcyBidXQgdGhlIGNvbGxlY3Rpb24gb2YgZmFpciB0YXhlcyBpcyBjb25zaWRlcmVkIGFuIGludGVncmFsIHBhcnQgb2YgdGhlIG1haW50ZW5hbmNlIG9mIHNvY2lldHksIGFuZCBpcyB0aGVyZWZvcmUgaG9seSB0byB0aGUgZ29kIEFiYWRhci4gRXZlcnkgeWVhciBvbiB0aGUgMTV0aCBvZiBHb3pyYW4sIHByaWVzdHMgb2YgdGhlIGNodXJjaCBvZiBBYmFkYXIgc3BlbmQgdGhlIGRheSB3YWxraW5nIGNpdHkgc3RyZWV0cywgZG9pbmcgd2hhdCB0aGV5IGNhbiB0byBtYWtlIHRoZSBiaXR0ZXIgcGlsbCBvZiBhbm51YWwgdGF4ZXMgYSBiaXQgZWFzaWVyIHRvIHN3YWxsb3cuXFxuXFxuVGhlIEJ1c2luZXNzIG9mIHRoZSBEYXlcXG5cXG5Gcm9tIGRhd24gdG8gZHVzaywgY2xlcmljcyBvZiBBYmFkYXIgYXR0ZW5kIHRoZSB0YXggY29sbGVjdG9ycyBvZiBzaXplYWJsZSBjb21tdW5pdGllcyBhcyB0aGUgdGF4IHdhZ29ucyByb2xsIGZyb20gZG9vciB0byBkb29yLiBUaGUgY2h1cmNoIG9mZmljaWFscyBtb25pdG9yIHRoZXNlIGFjdGl2aXRpZXMgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIHByb2Nlc3MgaXMgY29uZHVjdGVkIHJlc3BlY3RmdWxseSBhbmQganVzdGx5LCBhbmQgdGhhdCBjaXRpemVucyBrbm93IHRoYXQgdGhlIHByb2Nlc3MgaXMgbW9uaXRvcmVkLiBNb3JlIHRoYW4ganVzdCBhaWRpbmcgaW4gdGhlIHllYXJseSBlcnJhbmQsIHRoZSBmYWl0aGZ1bCBwZXJzb25hbGx5IHRoYW5rIGV2ZXJ5IGNpdGl6ZW4gZm9yIGNvbnRyaWJ1dGluZyB0byB0aGUgaW1wcm92ZW1lbnQgb2YgdGhlaXIgY2l0eSwgZXh0b2wgdGhlIHB1YmxpYyB3b3JrcyBmdW5kZWQgYnkgdGhlaXIgY29udHJpYnV0aW9ucywgYW5kIGZvcmV0ZWxsIHRoZSBncmFuZGV1ciBvZiBjaXZpYyBwcm9qZWN0cyB0byBjb21lLiBUaGUgZGlzZW5mcmFuY2hpc2VkIGFuZCBkZXN0aXR1dGUgdGhleSBhdHRlbXB0IHRvIGNvbWZvcnQgYXMgYmVzdCB0aGV5IGNhbiwgcXVvdGluZyBmcm9tIHRoZWlyIGdvZCdzIGRvZ21hIG9uIHdvcmsgYW5kIHdvcnRoaW5lc3MsIGJ1dCB0aGlzIGlzIG5vdCBhIGRheSBmb3IgZGlzY291bnRzIG9yIGRlZmVycmFscy4gVGhlIGNpdGl6ZW5zIGFyZSBhYmxlIHRvIHZvaWNlIHRoZWlyIGNvbmNlcm5zIGFuZCBpZGVhcyBhcyB0byB3aGVyZSB0aGUgbW9uaWVzIGxldmllZCBzaG91bGQgYmVzdCBiZSBhcHBsaWVkLiBDaXRpemVucyBhcmUgZnJlZSB0byBzcGVhayB0aGVpciBtaW5kIG9uIGFueSBpc3N1ZSBoZXJlIHdpdGhvdXQgZmVhciBvZiByZXBlcmN1c3Npb24uXFxuXFxuVGhlIENlbGVicmF0aW9ucyBvZiB0aGUgRGF5XFxuXFxuQXQgZHVzaywgdGhlIEFiYWRhcmFucyBob3N0IHNldmVyYWwgY2VsZWJyYXRpb25zIGluIHBhcmtzLCBwbGF6YXMsIGFuZCBvdGhlciBjb21tdW5hbCBhcmVhcyBhYm91dCB0aGUgY2l0eSwgb3JnYW5pemluZyBkb25hdGlvbnMgYW5kIGNvbnRyaWJ1dGlvbnMgZnJvbSBsb2NhbCB2ZW5kb3JzIHRvIGZlZWQgYW5kIGVudGVydGFpbiBhbGwtY29tZXJzLiBIYXZpbmcgYWxyZWFkeSBwcmVhY2hlZCB0byBtb3N0IG9mIHRoZSBjaXR5IG92ZXIgdGhlIGNvdXJzZSBvZiB0aGUgZGF5LCB0aGUgY2xlcmljcyBwZXJmb3JtIG9ubHkgYSBicmllZiBvcGVuaW5nIGNlcmVtb255LCBkZWRpY2F0aW5nIHRoZSBmZWFzdCB0byBBYmFkYXIsIHRoZSBjaXR5LCBhbmQgaXRzIGdyZWF0IHBlb3BsZS4gVGhlc2UgY2VsZWJyYXRpb25zIGFyZSBvZnRlbiBxdWl0ZSBkaXN0aW5jdCBmcm9tIG5laWdoYm91cmhvb2QgdG8gbmVpZ2hib3VyaG9vZCBhbmQgYXJlIGFsbW9zdCBhbHdheXMgZGl2aWRlZCBhbG9uZyBlY29ub21pYyBib3VuZGFyaWVzLlxcblxcblRoZSBmZXN0aXZpdGllcyBpbnZvbHZpbmcgdGhlIHdlYWx0aGllc3QgY2l0aXplbnMgdXN1YWxseSBoYXBwZW4gb24gdGhlIHN0ZXBzIG9mIGNpdHkgaGFsbCBvciBvdGhlciBncmFuZCBjaXZpYyBidWlsZGluZ3MgYW5kIGZlYXR1cmUgdGhlIGJlc3QgbXVzaWMgYW5kIGZvb2QsIGJ1dCBvZnRlbiBsaXR0bGUgbW9yZSB0aGFuIHBvbGl0ZSBjYXJkIGFuZCBndWVzc2luZyBnYW1lcy4gVGhlc2UgZ2FsYXMgdXN1YWxseSB3cmFwIHVwIGJ5IG1pZG5pZ2h0LlxcblxcbkZvciB0aGUgY29tbW9uIGZvbGssIHRoZSBwYXJrcyBhbmQgbWFya2V0cGxhY2VzIHRha2Ugb24gYSBjYXJuaXZhbCBhdG1vc3BoZXJlLCB3aXRoIHNpbXBsZSBidXQgZ29vZCBmb29kLCBsb2NhbCBhbGVzLCBwZXJmb3JtYW5jZXMgYnkgdGFsZW50ZWQgY2l0aXplbnMsIGFuZCBnYW1lcyBvZiBjaGFuY2UgZ29pbmcgb24gd2VsbCBpbnRvIHRoZSBuaWdodC4gQSBwcmV2YWlsaW5nIHN1cGVyc3RpdGlvbiB0aHJvdWdoIHRoZXNlIGZlc3RpdmFscyBpcyB0aGF0LCBkdXJpbmcgdGhlIGNlbGVicmF0aW9uLCBpdCBpcyBsdWNreSB0byBraXNzXHUyMDE0b3IgaW4gc29tZSByZWdpb25zLCBwaW5jaFx1MjAxNGEgY2xlcmljIG9mIEFiYWRhciwgbGVhZGluZyB0byBtYW55IGEgcm9zeS1jaGVla2VkIGNsZXJpYy5cXG5cXG5FdmVuIHRoZSBjaXR5J3MgcG9vciBhcmUgZ2l2ZW4gcmVhc29uIHRvIGNlbGVicmF0ZSwgYXMgdGhlIGxvY2FsIHRlbXBsZSBvZiBBYmFkYXIgaG9zdHMgYSBjaGVlcnkgYnV0IHVuYWJhc2hlZGx5IHJlbGlnaW91cyBnYXRoZXJpbmcgb24gaXRzIHN0ZXBzLCBmZWVkaW5nIGFsbCBjb21lcnMsIGRvbGluZyBvdXQgYSBoZWFydHkgcmF0aW9uIG9mIHdpbmUsIHNpbmdpbmcgaHltbnMgb2YgdGhlIGZhaXRoLCBhbmQgcHJvdmlkaW5nIHRva2VucyBmb3IgYSBzZWNvbmQgd2luZSByYXRpb24gZm9yIGFueSB3aG8gcmV0dXJuIHRvIGF0dGVuZCBhIHNlcnZpY2Ugd2l0aGluIHRoZSBtb250aC5cXG5cXG5Gb3IgYSBob2xpZGF5IHRoYXQgcmV2b2x2ZXMgYXJvdW5kIHBheWluZyB0YXhlcywgdGhpcyBBYmFkYXJhbiBmZXN0aXZhbCBpcyBub3QgYXMgcmV2aWxlZCBhcyBvbmUgbWlnaHQgZXhwZWN0LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUxNlwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDE1LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogM1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJXcmlnaHRzIG9mIEF1Z3VzdGFuYVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkFuZG9yYW4sIEJyaWdoXFxuXFxuVGhpcyBsb2NhbCBmZXN0aXZhbCBpbiB0aGUgQW5kb3JhbiBwb3J0IGNpdHkgb2YgQXVndXN0YW5hIGlzIGhlbGQgdG8gaG9ub3IgYW5kIGNlbGVicmF0ZSB0aGUgbG9jYWwgc2hpcGJ1aWxkaW5nIGluZHVzdHJ5IGFzIHdlbGwgYXMgdGhlIG5hdnkuIFRoZSBtYXRoZW1hdGljcyBhbmQgZW5naW5lZXJpbmcgcmVxdWlyZWQgZm9yIHRoZSBidWlsZGluZyBvZiB0aGUgc2hpcHMgaXMgcHJhaXNlZCBieSBCcmlnaCdzIGZhaXRoZnVsLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUxN1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDE2LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogM1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJHYWxhIG9mIFNhaWxzXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiQWJzYWxvbVxcblxcbk9uZSBvZiB0d28gbG9jYWwgZmVzdGl2YWxzIHdoZXJlIGtpdGUtYmF0dGxlcnMgY29tcGV0ZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MThcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyNyxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiUmVtZW1icmFuY2UgTW9vblwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIklvbWVkYWUsIExhc3R3YWxsLCBVc3RhbGF2XFxuXFxuQSBuYXRpb25hbCBob2xpZGF5IHRvIGNvbW1lbW9yYXRlIHRob3NlIHdobyBkaWVkIGluIHRoZSBTaGluaW5nIENydXNhZGUgYWdhaW5zdCB0aGUgV2hpc3BlcmluZyBUeXJhbnQuIEFsdGhvdWdoIG5vdCBzdHJpY3RseSBhIHJlbGlnaW91cyBob2xpZGF5LCBJb21lZGFlJ3MgbmFtZSBpcyBoZWF2aWx5IGludm9rZWQsIGR1ZSB0byBoZXIgbWFueSBtaWxpdGFyeSBhY2NvbXBsaXNobWVudHMgZHVyaW5nIHRoZSB3YXIuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTE5XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDRcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQW5nZWwgRGF5XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiTWFnbmltYXIsIFZhcmlzaWFcXG5cXG5BbmdlbCBEYXkgaXMgYSBsb2NhbCBNYWduaW1hcmlhbiBob2xpZGF5IGNlbGVicmF0ZWQgb24gMzEgRGVzbnVzLiBUaGUgYW5udWFsIGNlbGVicmF0aW9uIG1hcmtzIHRoZSBmb3VuZGluZyBvZiB0aGUgY2l0eSwgYW5kIGl0cyBmb3VuZGVycycgZmxpZ2h0IGZyb20gS29ydm9zYS4gSXQgYWxzbyBob25vcnMgdGhlIHByZXNlbmNlIGFuZCBwb3B1bGFyIHdvcnNoaXAgb2YgdGhlIGVtcHlyZWFsIGxvcmRzLCB3aGljaCBwcmVkYXRlcyB0aGUgY2l0eSBieSBjZW50dXJpZXMuIER1cmluZyB0aGUgZmVzdGl2YWwsIG5lYXJseSBhbGwgbG9jYWwgYnVzaW5lc3NlcyBzaHV0IHRoZWlyIGRvb3JzIGFuZCB0aGUgY2l0aXplbnMgdGFrZSBwYXJ0IGluIGNvdW50bGVzcyBmZWFzdHMsIG1hc3F1ZXJhZGUgYmFsbHMgZHJlc3NlZCBhcyBhbmdlbHMsIGFuZCB0aGUgYnVybmluZyBvZiBkZXZpbCBlZmZpZ2llcyBtZWFudCB0byBzeW1ib2xpemUgaW5mZXJuYWxseS1pbmZsdWVuY2VkIEtvcnZvc2EuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTIwXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMzEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA0XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk9sZC1NYWdlIERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkhvbGlkYXkgY2VsZWJyYXRpbmcgT2xkLU1hZ2UgSmF0ZW1iZSwgdGhlIGZhdGhlciBvZiBHYXJ1bmRpIG1hZ2ljLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUyMVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDEzLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogNFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJNdWx0aXBsZSBFdmVudHNcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJGZXN0aXZhbCBvZiB0aGUgUnVsaW5nIFN1blxcblxcblNoaXp1cnVcXG5cXG5DZWxlYnJhdGVzIHRoZSBsb25nZXN0IGRheS5cXG5cXG5Gb3VuZGVyJ3MgRm9sbHlVbGFyIEtlbFxcblxcbkFkdmVudHVyZXJzIGFuZCBjaGlsZHJlbiBmb2xsb3cgYSBoYWxsdWNpbmF0b3J5IHJlZCBzdHJpcGUgYWxvbmcgemlnemFnZ2luZyBwYXRocywgYW11c2luZyByZXNpZGVudHMuXFxuXFxuSGFydmVzdCBCb3VudHkgRmVzdGl2YWxcXG5cXG5TZWdhZGFcXG5cXG5NYXJraW5nIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGhhcnZlc3Qgc2Vhc29uLCB0aGlzIGZlc3RpdmFsIGludm9sdmVzIHNwb3J0aW5nIHRvdXJuYW1lbnRzLCBkYW5jaW5nLCBzdG9yeXRlbGxpbmcsIGFuZCBmZWFzdHMuIENlbGVicmFudHMgZ2l2ZSB0aGFua3MgYW5kIGVsaW1pbmF0ZSBncnVkZ2VzLlxcblxcbkxvbmd3YWxrXFxuXFxuR3JhbmRtb3RoZXIgU3BpZGVyLCBOdXJ2YXRjaHRhOyBzb3V0aGVybiBoZW1pc3BoZXJlIHdpbnRlciBzb2xzdGljZVxcblxcbkNlbGVicmF0ZXMgdGhlIGVzY2FwZSBvZiBOdXJ2YXRjaHRhJ3MgYW5hZGkgcGVvcGxlIGZyb20gYm9uZGFnZSwgaW4gcGFydCB0aGFua3MgdG8gR3JhbmRtb3RoZXIgU3BpZGVyIGxlbmd0aGVuaW5nIHRoZWlyIGNvdmVyIG9mIGRhcmtuZXNzIGluIHRoZWlyIGVzY2FwZS5cXG5cXG5SaXR1YWwgb2YgU3RhcmR1c3RcXG5cXG5EZXNuYVxcblxcbkZlc3RpdmFsIGhlbGQgaW4gdGhlIGV2ZW5pbmcgYW5kIHRocm91Z2ggdGhlIG5pZ2h0LCB3aGVyZSBEZXNuYSdzIGZhaXRoZnVsIHNpbmcgc29uZ3MgYW5kIHRocm93IHNhbmQgYW5kIHBvd2RlcmVkIGdlbXMgaW50byBib25maXJlcy5cXG5cXG5SdW5lZmVhc3RcXG5cXG5NYWdyaW1cXG5cXG5EYXkgbWFya2luZyB0aGUgZGF5IGR3YXJ2ZXMgbGVhcm50IHRoZSBmaXJzdCBydW5lcyBhbmQgdGhlIHByb3BlciB3YXkgdG8gcHJheS5cXG5cXG5TdW53cm91Z2h0IEZlc3RpdmFsU2FyZW5yYWUsIEJyaWdoXFxuXFxuRGF5IGNvbW1lbW9yYXRpbmcgdGhlIGRlZmVhdCBvZiBSb3ZhZ3VnIGJ5IFNhcmVucmFlLCBjZWxlYnJhdGVkIHdpdGggdGhlIGZseWluZyBvZiBraXRlcywgZmlyZXdvcmtzLCBhbmQgZ2lmdCBnaXZpbmcuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTIyXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQnVybmluZyBCbGFkZXNcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJTYXJlbnJhZVxcblxcblRoZSBob2x5LCBtb250aC1sb25nIGZlc3RpdmFsIGVuZHMgb24gdGhpcyBkYXksIGZlYXR1cmluZyBkYW5jZXMgd2l0aCBmbGFtaW5nIGJsYWRlcy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MjNcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxMCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTGliZXJ0eSBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBbmRvcmFuLCBNaWxhbmlcXG5cXG5Ib2xpZGF5IGNlbGVicmF0aW5nIEFuZG9yYW4ncyBpbmRlcGVuZGVuY2UuIE1pbGFuaXRlcyBjZWxlYnJhdGUgdGhhdCB2ZXJ5IGxpdHRsZSB2aW9sZW5jZSBvY2N1cnJlZC5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MjRcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAzLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogNVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJUYWxvbiBUYWdcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBbmRvcmFuXFxuXFxuVGhlIEVhZ2xlIEtuaWdodHMgcGVyZm9ybSBhZXJpYWwgZGlzcGxheXMgaW4gQWxtYXMgb24gdGhpcyBkYXkuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTI1XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA1XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlJpdmVyd2luZCBGZXN0aXZhbFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIktvcnZvc2FcXG5cXG5BbiBlYXJseSBzdW1tZXIgaG9saWRheSB0aGF0IGhvbm9ycyBhIGNvb2xpbmcgc2hpZnQgaW4gdGhlIHdpbmRzLCBjZWxlYnJhdGVkIHdpdGggbXVjaCBkcmlua2luZy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MjZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyMixcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSW5oZXJpdG9yJ3MgQXNjZW5kYW5jZSBcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJJb21lZGFlXFxuXFxuSW5oZXJpdG9yJ3MgQXNjZW5kYW5jZSwgb3JpZ2luYWxseSBjYWxsZWQgJ0hlcmFsZCdzIERheScsIGhvbm91cnMgdGhlIGRheSB0aGF0IElvbWVkYWUgd2FzIGNob3NlbiBieSB0aGUgZ29kIEFyb2RlbiB0byBiZWNvbWUgaGlzIGhlcmFsZCAodGh1cyByZXBsYWNpbmcgQXJhem5pKSwgdGh1cyBib29zdGluZyBoZXIgcG93ZXIgYmV5b25kIHRoYXQgb2YgYSBmbGVkZ2xpbmcgZ29kZGVzcy4gVGhpcyBob2xpZGF5IHdhcyByZW5hbWVkIGFmdGVyIHRoZSBkZW1pc2Ugb2YgQXJvZGVuLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUyN1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkZpcnN0IENydXNhZGVyIERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk1lbmRldlxcblxcbkhvbGlkYXkgaW4gY2VsZWJyYXRpb24gb2YgdGhlIGNvbnRpbnVpbmcgY3J1c2FkZSBhZ2FpbnN0IHRoZSBkZW1vbnMgb2YgdGhlIFdvcmxkd291bmQuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTI4XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogNixcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiRGF5IG9mIFNpbGVuY2VkIFdoaXNwZXJzXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVXN0YWxhdlxcblxcblRoZSBEYXkgb2YgU2lsZW5jZWQgV2hpc3BlcnMgaXMgYW4gVXN0YWxhdmljIGhvbGlkYXkgY2VsZWJyYXRlZCBldmVyeSA5IEFyb2R1cyBtYXJraW5nIHRoZSBkZWZlYXQgb2YgdGhlIFdoaXNwZXJpbmcgVHlyYW50IGluIDM4MjcgQVIgYnkgdGhlIGNvYWxpdGlvbiBmb3JjZXMgb2YgdGhlIFNoaW5pbmcgQ3J1c2FkZSBhbmQgdGhlIGxpYmVyYXRpb24gb2YgdGhlIGNvdW50cnkgYWZ0ZXIgY2VudHVyaWVzIG9mIHVuZGVhZCBkb21pbmF0aW9uLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUyOVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDksXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkZvdW5kaW5nIERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIklsc3VyaWFuLCBWYXJpc2lhXFxuXFxuRmVzdGl2YWwgY2VsZWJyYXRpbmcgdGhlIGZvdW5kaW5nIGJ5IElsc3VyIG9mIHRoZSB0b3duIG9mIElsc3VyaWFuIGluIDQ2MzEgQVIuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTMwXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTAsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkFybWFzc2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBcm9kZW4sIElvbWVkYWUsIE1pbGFuaVxcblxcblRoZSByYXVjb3VzLCB3ZWVrLWxvbmcgZmVzdGl2YWwga25vd24gYXMgQXJtYXNzZSBpcyBoZWxkIGVhY2ggeWVhciBiZWdpbm5pbmcgb24gMTYgQXJvZHVzLiBUaGUgY2VsZWJyYXRpb24gXHUyMDE0IG9uY2UgZGVkaWNhdGVkIHRvIHRoZSBnb2QgQXJvZGVuIFx1MjAxNCBpcyBzdGlsbCBpbXBvcnRhbnQgdG8gdGhlIGZhaXRoZnVsIG9mIElvbWVkYWUsIHdobyB1c2UgaXQgdG8gdHJhaW4gY29tbW9uZXJzIGluIGNvbWJhdCwgb3JkYWluIGFwcHJlbnRpY2UgY2xlcmd5LCBwaWNrIHNxdWlyZXMgZm9yIGtuaWdodHMsIGFuZCB0ZWFjaCBtaWxpdGFyeSBoaXN0b3J5LCBob3BpbmcgdG8gcHJldmVudCB0aGUgbWlzdGFrZXMgb2YgdGhlIHBhc3QgZnJvbSBiZWluZyByZXBlYXRlZC4gQW1vbmcgdGhvc2Ugbm90IGRlZGljYXRlZCB0byB0aGUgSW5oZXJpdG9yIHRoZSBob2xpZGF5IGhhcyBsb3N0IG1vc3Qgb2YgaXRzIHJlbGlnaW91cyBzaWduaWZpY2FuY2Ugc2luY2UgQXJvZGVuJ3MgZGVhdGgsIHRlbmRpbmcgbm93IG9ubHkgdG93YXJkIHdpbGQgcGFydHlpbmcsIGEgZmFjdCB0aGF0IGhhcyBwcmVjbHVkZWQgdGhlIGRpYWJvbGlzdCBhdXRob3JpdGllcyBvZiBDaGVsaWF4IGZyb20gcHJvaGliaXRpbmcgQXJtYXNzZSBvdXRyaWdodC4gTmV2ZXJ0aGVsZXNzLCBpbiBwbGFjZXMgd2hlcmUgdGhlIGNodXJjaCBvZiBBc21vZGV1cyBpcyBvcGVubHkgYWxsb3dlZCwgaXQgaG9zdHMgc3BlY2lhbCBhY3Rpdml0aWVzIGZvciBpdHMgcGFyaXNoaW9uZXJzIGR1cmluZyB0aGUgc2FtZSB3ZWVrIGluIGFuIGVmZm9ydCB0byBjb3VudGVyIHRoZSBpbmZsdWVuY2Ugb2YgdGhlIGhvbGlkYXkuIFRoZSBjaXR5IG9mIENvcmVudHluIGlzIGVzcGVjaWFsbHkga25vd24gZm9yIGl0cyBleHRyYXZhZ2FudCBBcm1hc3NlIGZlc3Rpdml0aWVzLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUzMVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDE2LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogN1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTYWludCBBbGlrYSdzIEJpcnRoZGF5XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiS29ydm9zYVxcblxcblF1aWV0IGhvbGlkYXkgaG9ub3JpbmcgdGhlIGJpcnRoIG9mIFNhaW50IEFsaWthIHRoZSBNYXJ0eXIuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTMyXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMzEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkFyY2hlcmZlYXN0XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiRXJhc3RpbFxcblxcbkFyY2hlcidzIERheSBvciBBcmNoZXJmZWFzdCBpcyBhIGhvbGlkYXkgb2YgdGhlIGdvZCBFcmFzdGlsIGhlbGQgYW5udWFsbHkgb24gdGhlIDNyZCBvZiBFcmFzdHVzLiBEZXNwaXRlIHRoZSBob2xpZGF5J3Mgb3JpZ2lucyBpbiB0aGUgd29yc2hpcCBvZiBFcmFzdGlsLCBjb21tb24gY291bnRyeSBmb2xrIGZyb20gdGhlIExhbmRzIG9mIHRoZSBMaW5ub3JtIEtpbmdzIHRvIFRhbGRvciBjZWxlYnJhdGUgdGhlIGhlaWdodCBvZiBzdW1tZXIgd2l0aCBhIGRheSBzZXQgYXNpZGUgZm9yIGVzdGFibGlzaGluZyBuZXcgcmVsYXRpb25zaGlwcywgZW5qb3lpbmcgY3VycmVudCBjYW1hcmFkZXJpZSwgYW5kIGNlbGVicmF0aW5nIHRoZSBnaWZ0cyBvZiB0aGUgZ29kcy4gQXJjaGVyeSBjb21wZXRpdGlvbnMgYXJlIGhlbGQgZnJlcXVlbnRseSBpbiB3aGljaCB0aGUgbWVuIHRlc3QgdGhlaXIgc2tpbGwgd2l0aCB0aGUgYm93IHRocm91Z2ggcHJvZ3Jlc3NpdmVseSBoYXJkZXIgdHJpYWxzLiBUaGUgZXhhY3QgZm9ybSBvZiBjb21wZXRpdGlvbiBpcyBkaWZmZXJlbnQgZnJvbSBwbGFjZSB0byBwbGFjZSwgYW5kIHRoZSB3aW5uZXIgaXMgYXdhcmRlZCBhIHJhY2sgb2YgZWxrIGhvcm5zIGFuZCBhIHF1aXZlciBvZiBibGVzc2VkIGFycm93cy4gSGUgaXMgYWxzbyBnaXZlbiB0aGUgdGl0bGUgb2YgXFxcIlByb3RlY3RvclxcXCIsIHdoaWNoIGhlIGhvbGRzIHVudGlsIHRoZSBuZXh0IHllYXIuXFxuXFxuV2hpbGUgdGhlIGZlc3RpdmFsJ3MgdHJhZGl0aW9ucyBlbXBoYXNpemUgY29udGVzdHMgb2YgbWFya3NtYW5zaGlwLCBtb3N0IGhhdmUgZXhwYW5kZWQgdG8gZXhoaWJpdCB0YWxlbnRzIG9mIGFsbCB0eXBlcywgZnJvbSBiYWtpbmcgYW5kIHN0b3J5dGVsbGluZyB0byByYWNpbmcgYW5kIG1vY2sgY29tYmF0LiBBc2lkZSBmcm9tIGVuY291cmFnaW5nIGEgZmFpci1saWtlIGF0bW9zcGhlcmUsIG1hbnkgb2YgdGhlIGRpc3BsYXlzIGFuZCBjb21wZXRpdGlvbnMgc2VydmUgb25lIG9mIHR3byBzZWNvbmRhcnkgcHVycG9zZXM6IGVpdGhlciBhcyBhIHdheSBmb3IgbWVyY2hhbnRzIHRvIHNob3cgb2ZmIHRoZWlyIHN1cGVyaW9yIGxpdmVzdG9jayBhbmQgd2FyZXMsIG9yIChtb3JlIHBvcHVsYXJseSkgYXMgYSB3YXkgZm9yIGVsaWdpYmxlIG1lbiBhbmQgd29tZW4gdG8gc2hvdyBvZmYgdG8gZWFjaCBvdGhlci5cXG5cXG5XaGlsZSB0aGUgZGF5J3MgZXZlbnRzIGF0IG1vc3QgQXJjaGVyZmVhc3QgZmFpcnMgYXJlIGZpbGxlZCB3aXRoIGdhbWVzLCBmb29kLCBhbmQgY3JhZnRzLCB0aGUgbmlnaHQgYnJpbmdzIGRhbmNpbmcsIGRyaW5raW5nLCBwcmFua3MsIGFuZCB0aGUgY3Jvd25pbmcgb2YgdGhlIHByaW5jZXMgYW5kIHByaW5jZXNzZXMgb2Ygc3ByaW5nIGFuZCBzdW1tZXIgZm9yIHRoZSB0d28gc2luZ2xlIHlvdXRocyBhbmQgdHdvIHNpbmdsZSBhZHVsdHMgd2hvIGZhcmVkIGJlc3QgaW4gdGhlIGRheSdzIGV2ZW50cy4gVGhlIGZlc3Rpdml0aWVzIGNvbnRpbnVlIGxhdGUgaW50byB0aGUgZXZlbmluZywgYnV0IGVuZCBwcm9tcHRseSBhdCBtaWRuaWdodCwgc28gdGhhdCBpbiB0cnVlIEVyYXN0aWxpYW4gZmFzaGlvbiB0aGUgbmV4dCBkYXkncyByZXNwb25zaWJpbGl0aWVzIGFyZSBub3Qgb3Zlcmx5IGltcGVkZWQuIEZvciB0aG9zZSBub3Qgb2YgRXJhc3RpbCdzIGZsb2NrLCBob3dldmVyLCBwcml2YXRlIHBhcnRpZXMsIGRyaW5raW5nLCBhbmQgdHJ5c3RpbmcgY2Fycnkgb24gbG9uZyBpbnRvIHRoZSBuZXh0IG1vcm5pbmcuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTMzXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMyxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiRm91bmRpbmcgRmVzdGl2YWxcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJLb3J2b3NhXFxuXFxuRm91bmRpbmcgRmVzdGl2YWwgaXMgYSBsb2NhbCBLb3J2b3NhbiBjZWxlYnJhdGlvbiBtYXJraW5nIHRoZSBlc3RhYmxpc2htZW50IG9mIHRoZSBjaXR5IGluIDQ0MDcgQVIuIEhlbGQgYW5udWFsbHkgb24gMTQgRXJhc3R1cywgdGhlIGZlc3RpdmFsIGlzIGEgY2hhbmNlIGZvciB0aGUgY2l0aXplbnMgdG8gbGV0IG9mZiBzb21lIHN0ZWFtLCBkcmluayBjb3Bpb3VzbHksIGFuZCB3YXRjaCBtYWdpY2FsIGxpZ2h0IHNob3dzIGxhdGUgaW50byB0aGUgbmlnaHQuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTM0XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTQsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA2XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkJ1cm5pbmcgTmlnaHRcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJSYXptaXJhblxcblxcbkl0ZW1zIG9yIHBlb3BsZSB3aG8gaGF2ZSB0cmFuc2dyZXNzZWQgYWdhaW5zdCB0aGUgZ29kLWtpbmcgb2YgUmF6bWlyYW4gYXJlIGJ1cm5lZCBvbiB0aGlzIGRheS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MzVcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxNyxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiS2lhbmlkaSBGZXN0aXZhbFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkdhcnVuZGlcXG5cXG5UaGUgS2lhbmlkaSBGZXN0aXZhbCBpcyBhIHdlZWsgbG9uZyBldmVudCBoZWxkIGFubnVhbGx5IGJldHdlZW4gMTUgYW5kIDIxIEVyYXN0dXMgYnkgR2FydW5kaSBwZW9wbGUgZXZlcnl3aGVyZS4gVGhlIEdhcnVuZGkgaGF2ZSBhIHBvd2VyZnVsIGJlbGllZiBpbiBiZWxvbmdpbmcgdG8gYSBzcGVjaWZpYyBsb2NhdGlvbiBpbiB0aGlzIHdvcmxkLCB3aXRoIGNsYW5zIG9yIHRyaWJlcyBzb21ldGltZXMgdHJhdmVsaW5nIGZvciB5ZWFycyBpbiBzZWFyY2ggb2YgdGhlaXIgdHJ1ZSBob21lLiBJbiB0aGVzZSB0cmF2ZWxzIGVhY2ggaW5kaXZpZHVhbCB3aWxsIGNvbGxlY3Qgc21hbGwgbWVtZW50b3Mgb2YgdGhlIHBsYWNlcyBzaGUgb3IgaGUgaGFzIHZpc2l0ZWQgaW4gb3JkZXIgdG8gcmVtZW1iZXIgdGhlbSBhbmQgbWFpbnRhaW4gYSBzcGlyaXR1YWwgY29ubmVjdGlvbi4gRHVyaW5nIHRoZSBLaWFuaWRpLCBhIHRyaWJlIHdpbGwgZ2F0aGVyIGFuZCBkaXNwbGF5IHRoZXNlIG1lbWVudG9zIHRvIHRoZSBncm91cC4gVGhlIGJlc3Qgb25lcyBhcmUgY2hvc2VuIGFuZCBtYWRlIHBhcnQgb2YgdGhlIGNsYW4gb3IgdHJpYmFsIGhpc3RvcnksIHNvbWV0aGluZyB3aGljaCBHYXJ1bmRpIGZlZWwgaXMgYSBncmVhdCBob25vci5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1MzZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxNSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSGFydmVzdCBNb29uXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IG51bGwsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTM3XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTXVsdGlwbGUgRXZlbnRzXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiRmVzdGl2YWwgb2YgTmlnaHQncyBSZXR1cm5cXG5cXG5OaWRhbFxcblxcbkNlbGVicmF0ZWQgdGhyb3VnaG91dCBOaWRhbCwgdGhpcyBob2xpZGF5IGludm9sdmVzIHRoZSBidXJuaW5nIG9mIGVmZmlnaWVzIGFuZCBzZWxmLWZsYWdlbGxhdGlvbi5cXG5cXG5Td2FsbG93dGFpbCBGZXN0aXZhbFxcblxcbkRlc25hXFxuXFxuSG9saWRheSBjZWxlYnJhdGVkIHdpdGggc3Rvcnl0ZWxsaW5nLCBmZWFzdGluZywgYW5kIHRoZSByZWxlYXNlIG9mIGJ1dHRlcmZsaWVzLlxcblxcbldhbmluZyBMaWdodCBGZXN0aXZhbFxcblxcblNlZ2FkYVxcblxcbkFsc28gY2FsbGVkIEJsZXNzaW5nIG9mIHRoZSBTdW4gYW5kIE5pZ2h0IG9mIFNwaXJpdHMsIHBhcnRpY2lwYW50cyBiaWQgZmFyZXdlbGwgdG8gdGhlIGxvbmcgZGF5cyBvZiBzdW5zaGluZSB3aXRoIGZlYXN0aW5nLCBkYW5jaW5nLCBhbmQgbXVzaWMuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTM4XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU2lnbmluZyBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBbmRvcmFuLCBDaGVsaWF4LCBHYWx0LCBJc2dlclxcblxcblNpZ25pbmcgRGF5IGlzIGEgQ2hlbGlzaCBob2xpZGF5LCBkYXRpbmcgYmFjayB0byB0aGUgaGVpZ2h0IG9mIHRoZSBlbXBpcmUuIE9ic2VydmVkIG9uIHRoZSBzZWNvbmQgT2F0aGRheSBvZiBSb3ZhLCB0aGlzIGlzIHRoZSBkYXkgb24gd2hpY2ggbmV3IGxhd3MgaW4gdGhlIGVtcGlyZSB0b29rIGVmZmVjdC4gVGhlIHNpZ25pZmljYW5jZSBvZiB0aGlzIGRheSBleHBhbmRlZCBvdmVyIG1hbnkgeWVhcnMgdW50aWwgaW1wZXJpYWwgbWFycmlhZ2VzLCBzaWduaWZpY2FudCBidXNpbmVzcyBhcnJhbmdlbWVudHMgYW5kIG9hdGhzIG9mIGZlYWx0eSB3ZXJlIGFsbCBjb25kdWN0ZWQgb24gdGhpcyBkYXkuXFxuXFxuT3JpZ2luYWxseSwgdGhlIGhvbGlkYXkgYmVnYW4gYXMgYSBjZWxlYnJhdGlvbiBvZiB0aGUgbXV0dWFsLWRlZmVuc2UgcGFjdCBiZXR3ZWVuIENoZWxpYXgsIElzZ2VyLCBHYWx0IGFuZCBBbmRvcmFuIHdoZW4gdGhlIHVuaXRlZCBuYXRpb25zIHRocmV3IG9mZiB0aGUgc2hhY2tsZXMgb2YgVGFsZG9yLCBkZWNsYXJpbmcgdGhlbXNlbHZlcyBpbmRlcGVuZGVudCBmcm9tIHRoZSBlbXBpcmUuIE9ic2VydmFuY2VzIG9mIHRoZSBob2xpZGF5IHZhcnksIGJ1dCBvZnRlbiBpbmNsdWRlIGZpcmV3b3JrIGRpc3BsYXlzLCBmZWF0cyBvZiBzdHJlbmd0aCwgYW5kIHB1YmxpYyBkZWJhdGVzIHRvIHNob3djYXNlIHNwZWFraW5nIGFuZCByaGV0b3JpY2FsIHNraWxscy5cXG5cXG5BcyBDaGVsaWF4IGRlZ2VuZXJhdGVkIHRvIGNpdmlsIHdhciBhbmQgZGlhYm9saXNtIGFmdGVyIDQ2MDYgQVIsIGJsb29kIHBhY3RzIGFuZCBpbmZlcm5hbCBjb250cmFjdHMgYWxzbyBiZWdhbiB0byBiZSBzaWduZWQgb24gdGhpcyBkYXkuIEFzIGEgcmVzdWx0IG9mIENoZWxpYXgncyBuZXcgYWZmaWxpYXRpb24sIEFuZG9yYW4gYW5kIEdhbHQgYmVnYW4gdG8gZGlzdGFuY2UgdGhlbXNlbHZlcyBmcm9tIENoZWxpYXggYW5kIHRoZSBvcmlnaW5hbCBpbnRlcnByZXRhdGlvbiBvZiB0aGUgaG9saWRheS4gSW4gQW5kb3JhbiBpdCBjb250aW51ZXMgdG8gYmUgdGhlIGRheSB0aGF0IG1vc3QgbmF0aW9uYWwgbGF3cyB0YWtlIGVmZmVjdCBhcyB3ZWxsIGFzIGJlaW5nIGEgdHJhZGl0aW9uYWwgZGF5IG9mIG1hcnJpYWdlLCBhbmQgdGhlIGRhdGUgb24gd2hpY2ggbmV3IFN0ZWVsIEZhbGNvbnMgYXJlIGluZHVjdGVkLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDUzOVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA4XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkNyYWJmZXN0XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiS29ydm9zYVxcblxcbkNyYWJmZXN0IGlzIGEgS29ydm9zYW4gaG9saWRheSBoZWxkIG9uIHRoZSBmaXJzdCBXZWFsZGF5IG9mIFJvdmEuIEl0IGNlbGVicmF0ZXMgdGhlIHJldHVybiBvZiB0aGUgY3JhYnMgZnJvbSB0aGUgY29vbGVyIHdhdGVycyBvZiB0aGUgSmVnZ2FyZSBSaXZlciB0byB0aGVpciB3aW50ZXIgaGFiaXRhdCBpbiBDb25xdWVyb3IncyBCYXksIGFuZCBpcyBtYXJrZWQgYnkgY3JhYiBib2lsIGZlYXN0cyBoZWxkIHRocm91Z2hvdXQgdGhlIGNpdHkgYW5kIGl0cyBzdXJyb3VuZGluZyBjb21tdW5pdGllcy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NDBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogOFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJGZWFzdCBvZiBTenVycGFkZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICAnSXJyaXNlblxcblxcblRoaXMgXCJjZWxlYnJhdGlvbiBvZiBwbGVudHlcIiBmZXN0aXZhbCBtb2NrcyB0aGUgdHJhZGl0aW9uYWwgaGFydmVzdCBmZXN0aXZhbHMgY2VsZWJyYXRlZCBpbiB0aGUgcmVnaW9uIGJlZm9yZSBCYWJhIFlhZ2EgYW5kIGhlciBldGVybmFsIHdpbnRlciBkZXNjZW5kZWQgdXBvbiB0aGUgbGFuZC4nLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU0MVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDI2LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogOFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJEYXkgb2YgU3VuZGVyaW5nXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiWWRlcnNpdXNcXG5cXG5PbmNlIG1hbnkgaG9saWRheXMgd2VyZSBjZWxlYnJhdGVkIGJ5IHRoZSBmYWl0aCBvZiBZZGVyc2l1cywgYnV0IHRvZGF5IG9ubHkgdGhpcyBkYXRlIGhhcyBtdWNoIHNpZ25pZmljYW5jZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NDJcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyOSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQWRtYW5pIFVwYXN0dXRpXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiSmFsbWVyaVxcblxcbkFkbWFuaSBVcGFzdHV0aSBpcyBhIEphbG1lcmkgaG9saWRheSBjZWxlYnJhdGVkIG9uIHRoZSBmaXJzdCBmdWxsIG1vb24gb2YgTGFtYXNoYW4gdGhhdCBtYXJrcyB0aGUgZm91bmRpbmcgb2YgSmFsbWVyYXkgYXMgYSBWdWRyYW4gY29sb255LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU0M1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkFzY2VuZGFuY2UgRGF5XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiSW9tZWRhZVxcblxcbkFzY2VuZGFuY2UgRGF5IGlzIGFuIElvbWVkYWVhbiBob2xpZGF5LCBoZWxkIG9uIHRoZSA2dGggb2YgTGFtYXNoYW4uIFRoZSBkYXkgbWFya3MgdGhlIGFubml2ZXJzYXJ5IG9mIHRoZSBkYXkgSW9tZWRhZSB0b29rIHRoZSBUZXN0IG9mIHRoZSBTdGFyc3RvbmUgaW4gdGhlIGF1dHVtbiBvZiAzODMyIEFSIGFuZCBhc2NlbmRlZCB0byBnb2Rob29kLlxcblxcbkNlbGVicmF0aW9uXFxuXFxuVGhlIGRheSBpcyBhIGpveW91cyBjZWxlYnJhdGlvbiBmb3IgdGhlIGZhaXRoZnVsLCB3aXRoIHNpbmdpbmcsIHBsZWRnaW5nIG9mIGZyaWVuZHNoaXBzLCBhbmQgZm9yZ2l2aW5nIG9mIG9sZCBncnVkZ2VzLlxcblxcblRvIG1hbnksIHRoZSBUZXN0IG9mIHRoZSBTdGFyc3RvbmUgcmVwcmVzZW50cyB0aGUgZ3JlYXRlc3Qgb2YgYWxsIGNoYWxsZW5nZXMsIHlldCBmb3IgSW9tZWRhZSBpdCB3YXMgb25lIG9mIHRocmVlIHN0b3JpZWQgcHJvbW90aW9ucyBpbiBoZXIgcmlzZSBmcm9tIEFyb2RlbidzIGhlcmFsZCB0byBhIGdvZGRlc3MgaW4gaGVyIG93biByaWdodC4gT24gdGhlIDZ0aCBvZiBMYW1hc2hhbiwgdGhlIEluaGVyaXRvcidzIGZhaXRoZnVsIG9ic2VydmUgdGhlIGhlcm9pc20gb2YgSW9tZWRhZSdzIGxpZmUgYmVmb3JlIGhlciBtb21lbnQgb2YgYXNjZW5zaW9uIGFuZCBjZWxlYnJhdGUgdGhlIGFubml2ZXJzYXJ5IG9mIHRoZSBhcG90aGVvc2lzIGl0c2VsZi5cXG5cXG5UaGUgY2VsZWJyYXRpb24gdGFrZXMgcGxhY2UgaW4gc2V2ZXJhbCBzdGFnZXMuIEVhcmx5IGluIHRoZSBkYXksIHRyb3VwZXMgb2YgcGVyZm9ybWVyc1x1MjAxNGFzIG9mdGVuIHBhc3Npb25hdGUgYW1hdGV1cnMgYXMgcHJvZmVzc2lvbmFsc1x1MjAxNHN0YWdlIG1vcmFsaXR5IHBsYXlzIGZlYXR1cmluZyB0aGUgRWxldmVuIEFjdHMgb2YgSW9tZWRhZSwgdGhlIGhlcm9pYyBuZWFyLW1pcmFjbGVzIGFuZCBzYWNyaWZpY2VzIHNoZSBtYWRlIGxlYWRpbmcgdXAgdG8gaGVyIHRyaWFscyBpbiB0aGUgU3RhcnN0b25lIENhdGhlZHJhbC4gU2NyaXB0cyB2YXJ5IGJ5IHJlZ2lvbiwgY2l0eSwgYW5kIGV2ZW4gbmVpZ2hib3Job29kLCBidXQgZGVzcGl0ZSBkaWZmZXJlbmNlcyBpbiBzZXR0aW5nLCBwZXJmb3JtYW5jZSBtZWRpdW0sIGFuZCB3b3JkIGNob2ljZSwgdGhlIHRoZW1lcyBhbmQgbW9yYWxzIGFyZSBhbGwgdGhlIHNhbWUuXFxuXFxuQXMgdGhlIGRheSBjb250aW51ZXMsIHRoZSBwcmllc3RzIG9yZ2FuaXplIGpvdXN0cyBhbmQgbW9jayBiYXR0bGVzLCBhbGxvd2luZyBhbnlvbmUgdG8gcGFydGljaXBhdGUgc28gbG9uZyBhcyBzaGUgY2FuIGRlbW9uc3RyYXRlIGVub3VnaCBza2lsbCB0byBub3QgYmUgYSByaXNrIHRvIGhlcnNlbGYgb3Igb3RoZXJzLiBUaGUgd2lubmVycyBvZiB0aGVzZSBjb250ZXN0cyB0aGVuIGZhY2UgdGVzdHMgb2YgbWVudGFsIGFjdWl0eSBzdWNoIGFzIHNvbHZpbmcgcmlkZGxlcywgZGVjaXBoZXJpbmcgcGhpbG9zb3BoaWNhbCBxdWFuZGFyaWVzLCBhbmQgYW5zd2VyaW5nIHF1ZXN0aW9ucyBvZiBob25vciBhbmQganVzdGljZS4gVGhvc2Ugd2hvIHByb3ZlIHRoZW1zZWx2ZXMgaW4gYm90aCBjb250ZXN0cyBhcmUgYXdhcmRlZCBhIHdoaXRlIGNsb2FrXHUyMDE0cmVwcmVzZW50aW5nIHRoZSBJbmhlcml0b3IgYXQgcGVhY2VcdTIwMTRzdHlsZWQgYWZ0ZXIgSW9tZWRhZSdzIG93biByZWQgZ2FybWVudCB0byB3ZWFyIGZvciB0aGUgcmVzdCBvZiB0aGUgY2VsZWJyYXRpb24uIEZlYXN0aW5nIGFuZCBzaW5naW5nIGZvbGxvdyB0aGUgY29tcGV0aXRpb25zLCBtaXJyb3JpbmcgdGhlIGp1YmlsYXRpb24gdGhhdCBmb2xsb3dlZCBJb21lZGFlJ3MgYXNjZW5zaW9uLiBUaGlzIGlzIG9jY2FzaW9uIGZvciBtYWtpbmcgcGxlZGdlcyBvZiBmcmllbmRzaGlwIGFuZCBmb3JnaXZpbmcgZW5lbWllcywgYW5kIHByaWVzdHMgY2lyY3VsYXRlIGFib3V0IHRoZSBjcm93ZCBvZmZlcmluZyB0aGUgSW5oZXJpdG9yJ3MgYmxlc3NpbmcgdG8gdGhvc2Ugd2hvIGRvIGFuZCBwcm92aWRpbmcgYSBtb21lbnQncyBjb3Vuc2VsIG9yIG1lZGlhdGlvbiBmb3IgdGhvc2Ugd2hvIG5lZWQgYW4gZXh0cmEgbnVkZ2UuXFxuXFxuVGhlIGNlbGVicmF0aW9uIHR5cGljYWxseSBlbmRzIGJlZm9yZSBtaWRuaWdodCwgYW5kIHRoZSBmb2xsb3dpbmcgZGF5IHRoZSBwcmllc3RzIGFuZCBwcmV2aW91cyBkYXkncyBjaGFtcGlvbnMgZ2F0aGVyIHVwIHRoZSBibHVudGVkIHN3b3JkcyBmcm9tIHRoZSBtb2NrIGJhdHRsZXMsIHNoYXJwZW4gdGhlbSwgYW5kIGRpc3RyaWJ1dGUgdGhlbSBhbW9uZyB0aGUgY2h1cmNoJ3MgYXJtb3J5IGFuZCB0aG9zZSBvZiBsaWtlLW1pbmRlZCBvcmdhbml6YXRpb25zIHNvIHRoYXQgYWxsIG1heSByZW1haW4gdmlnaWxhbnQgYWdhaW5zdCBldmlsIGFuZCBwcmVwYXJlZCB0byBzdHJpa2UgaXQgZG93bi5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NDRcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA2LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogOVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJCYXN0aW9uIERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlNvbGt1XFxuXFxuQmFzdGlvbiBEYXkgaXMgYSB0d28tZGF5IGZlc3RpdmFsIGhlbGQgYW5udWFsbHkgb24gMTkgYW5kIDIwIExhbWFzaGFuIGluIHRoZSBLYXRhcGVzaGkgdG93biBvZiBTb2xrdSBob25vcmluZyB0aGUgZm91bmRpbmcgb2YgdGhlIHRvd24sIHdoZW4gaXQgaXMgdHJhZGl0aW9uYWwgdG8gaG9zdCBhIHN0cmFuZ2VyIGZyb20gb25lIG5vb24gdW50aWwgdGhlIG5leHQuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTQ1XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTksXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IDQ3MTIsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkplc3RlcmNhcFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkFuZG9yYW4sIERydW1hLCBUYWxkb3JcXG5cXG5KZXN0ZXJjYXAgb2NjdXJzIGF0IHRoZSBlbmQgb2YgdGhlIG1vbnRoIG9mIExhbWFzaGFuLCB0cmFkaXRpb25hbGx5IG9uIHRoZSAyN3RoIChhbHRob3VnaCBhIGZldyByZWdpb25zIGhhdmUgdGFrZW4gdG8gbW92aW5nIHRoZSBleGFjdCBkYXkgYXJvdW5kIHNsaWdodGx5IHNvIGl0IGFsd2F5cyBmYWxscyBvbiB0aGUgbGFzdCBTdGFyZGF5IG9mIHRoZSBtb250aCwgYWxsb3dpbmcgcGVvcGxlIHdobyB3aXNoIHRvIGNlbGVicmF0ZSBpbiBleGNlc3MgdG8gaGF2ZSB0aGUgZm9sbG93aW5nIGRheSBvZiByZXN0IHRvIHJlY292ZXIpLlxcblxcbkhpc3RvcnlcXG5cXG5XaGlsZSBKZXN0ZXJjYXAgaGFzIGJlZW4gZW1icmFjZWQgd2l0aCBleGNpdGVkIG9wZW4gYXJtcyBieSB0aGUgZ25vbWUgY29tbXVuaXRpZXMgb2YgdGhlIElubmVyIFNlYSByZWdpb24sIGl0cyBvcmlnaW5hbCBnZW5lc2lzIGlzIHNhaWQgdG8gaGF2ZSBiZWVuIGluIG9uZSBvZiBUYWxkb3IncyBjb2FzdGFsIGNpdGllcyBub3QgbG9uZyBhZnRlciBLaW5nIEFzcGV4IHRoZSBFdmVuLVRvbmd1ZWQgYnJva2UgZnJvbSB0aGUgbmF0aW9uLCBzaWduaWZpY2FudGx5IHdlYWtlbmluZyBUYWxkb3IncyBwb3dlciBhbmQgYmVnaW5uaW5nIHRoYXQgbmF0aW9uJ3MgbG9uZyBkZWNsaW5lLiBUaGUgaG9saWRheSB3YXMgb3JpZ2luYWxseSBpbnRlbmRlZCB0byBkaXN0cmFjdCB0aGUgZGlzdHJhdWdodCBUYWxkYW4gcG9wdWxhY2Ugd2l0aCBhIG5pZ2h0IG9mIHJldmVscnkgYW5kIGNvbWVkaWMgZW50ZXJ0YWlubWVudCwgYnV0IHRoZSBhbnRpY3Mgb2YgamVzdGVycyB3ZXJlIHNpbXBseSBub3QgZW5vdWdoLlxcblxcbk92ZXIgdGhlIGNvdXJzZSBvZiB0aGUgZmlyc3QgZmV3IHllYXJzLCBKZXN0ZXJjYXAgZXZvbHZlZCBmcm9tIGEgaG9saWRheSBvZiBvYnNlcnZhdGlvbiB0byBhIGhvbGlkYXkgb2YgcGFydGljaXBhdGlvbi4gVG9kYXksIHRoZSBob2xpZGF5IGlzIGEgdGltZSB3aGVyZSBhbnlvbmUgY2FuIHB1bGwgcHJhbmtzIG9yIGpva2VzIG9yIGphcGVzIG9uIGNvbXBhbmlvbnMsIG9uIG5laWdoYm9ycywgYW5kIChtb3N0IHR5cGljYWxseSkgb24gcml2YWxzLCB3aXRoIHRoZSB1bmRlcnN0YW5kaW5nIHRoYXQgcHJvdmlkZWQgbm8gbGFzdGluZyBoYXJtIGlzIGRvbmUsIGFueSBodW1pbGlhdGlvbnMgaW5mbGljdGVkIGJlZm9yZSBtaWRuaWdodCBhcmUgdG8gYmUgdGFrZW4gaW4gc3RyaWRlLiBPZiBjb3Vyc2UsIGNvbWUgbW9ybmluZyB0aGUgZGF5IGFmdGVyLCB0aGVyZSBhcmUgaW5ldml0YWJseSBqb2tlcyB0aGF0IHdlbnQgdG9vIGZhciwgYW5kIGdydWRnZXMgYW5kIGZldWRzIGJvcm5lIGZyb20gSmVzdGVyY2FwIGFudGljcyBoYXZlIGEgd2F5IG9mIGxpbmdlcmluZyBmb3IgbW9udGhzIHRvIGZvbGxvdy5cXG5cXG5JbiBSZWxpZ2lvblxcblxcbkZvbGxvd2VycyBvZiBDaGFsZGlyYSBadXphcmlzdGFuLCBhIGhhbGZsaW5nIGRlaXR5IG9mIG1pc2NoaWVmLCB0cmVhdCBKZXN0ZXJjYXAgYXMgYSBob2x5IGRheSBhbmQgdGhlaXIgcHJhbmtzIFx1MjAxNCBvZnRlbiBlbGFib3JhdGUgYW5kIGV4dHJhdmFnYW50IGluIG5hdHVyZSBhbmQgcGxvdHRlZCBmb3IgbW9udGhzIGluIGFkdmFuY2UgXHUyMDE0IGFzIGRpc3BsYXlzIG9mIHRoZWlyIGZhaXRoLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU0NlwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDI3LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogOVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJGZWFzdCBvZiB0aGUgU3Vydml2b3JzXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiWm9uLUt1dGhvbiwgTmlkYWxcXG5cXG5BIGhhcnZlc3QgZmVzdGl2YWwgc2lnbmlmeWluZyB0aGUgY2VudHVyaWVzIG9mIE5pZGFsZXNlIGFuY2VzdG9ycyBwcm90ZWN0ZWQgYnkgWm9uLUt1dGhvbi4gVGhlIGNlcmVtb25pYWwgdGFibGVzIGFyZSBtYWRlIG9mIGh1bWFuIGJvbmVzIG9mIGNvbW11bml0eSBtZW1iZXJzIGZyb20gcGFzdCBnZW5lcmF0aW9ucy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NDdcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogOVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJLcmFrZW4gQ2Fybml2YWxcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBYnNhbG9tXFxuXFxuVGhlIHNlY29uZCBvZiB0d28gbG9jYWwgZmVzdGl2YWxzIHdoZXJlIGtpdGUtYmF0dGxlcnMgY29tcGV0ZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NDhcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxNSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSW5kZXBlbmRlbmNlIERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkdhbHRcXG5cXG5NYXJrcyB0aGUgYmVnaW5uaW5nIG9mIHRoZSBSZWQgUmV2b2x1dGlvbi5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NDlcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA1LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU2V2ZW4gVmVpbHNcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJTaXZhbmFoXFxuXFxuVGhlIGhvbGlkYXkga25vd24gYXMgU2V2ZW4gVmVpbHMsIHdoaWNoIHRha2VzIHBsYWNlIG9uIHRoZSAyM3JkIG9mIE5ldGggaW4gbW9zdCByZWFsbXMgb2YgdGhlIElubmVyIFNlYSByZWdpb24sIGlzIGEgY2VsZWJyYXRpb24gb2YgdGhlIHJlZ2lvbidzIGRpdmVyc2l0eSBcdTIwMTQgYSB0aW1lIHdoZW4gc29jaWFsIGJvdW5kYXJpZXMgYnJlYWsgZG93biBldmVuIGZ1cnRoZXIgaW4gYSBkYXktbG9uZyBldmVudCBmaWxsZWQgd2l0aCBkYW5jaW5nLCBmZWFzdGluZywgYW5kIGNvdXJ0aW5nLiBUaGUgZXZlbmluZyB0cmFkaXRpb25hbGx5IGNsb3NlcyBvdXQgd2l0aCB0aGUgU2V2ZW4gVmVpbCBtYXNxdWVyYWRlLCBhIGJhbGwgd2hlcmVpbiB0aGUgcGFydGljaXBhbnRzIHdlYXIgZGlzZ3Vpc2VzIHRoYXQgaGlkZSB0aGVpciByYWNlIG9yIGdlbmRlciAob2Z0ZW4gdXNpbmcgbWlub3IgbWFnaWNhbCB0cmlua2V0cyBhbmQgc3BlbGxzKSBvciBkaXNndWlzZSB0aGVzZSBmZWF0dXJlcyBhcyBlbnRpcmVseSBuZXcgY2hhcmFjdGVyaXN0aWNzLiBBdCB0aGUgZW5kIG9mIHRoZSBiYWxsLCB0aGUgcGFydGljaXBhbnRzIHJlbW92ZSB0aGVpciBkaXNndWlzZXMgdG8gdGhlaXIgcGFydG5lcnMsIG9mdGVuIHdpdGggdW5wcmVkaWN0YWJsZSBhbmQgc29tZXRpbWVzIGRlbGlnaHRmdWxseSBhd2t3YXJkIHJlc3VsdHMuIFRyYWRpdGlvbmFsaXN0cyBhbmQgY29uc2VydmF0aXZlIG1pbmRzIG9mdGVuIGZpbmQgdGhlIFNldmVuIFZlaWxzIG1hc3F1ZXJhZGVzIHRvIGJlIHNjYW5kYWxvdXMgb3Igb2ZmLXB1dHRpbmcsIHlldCB0aGV5IHJlbWFpbiBwYXJ0aWN1bGFybHkgcG9wdWxhciBpbiBtb3N0IG9mIHRoZSBsYXJnZXIgY2l0aWVzIG9mIHRoZSBsYW5kLlxcblxcbkhpc3RvcmlhbnMgbm90ZSB0aGF0IHRoZSBvcmlnaW5hbCBcXFwiRGFuY2Ugb2YgdGhlIFNldmVuIFZlaWxzXFxcIiBoYXMgYSBtdWNoIGRpZmZlcmVudCBnZW5lc2lzIHRoYW4gb25lIHByb21vdGluZyBkaXZlcnNpdHkgXHUyMDE0IHRoZSBteXN0ZXJpb3VzIGN1bHQgb2YgU2l2YW5haCwgZ29kZGVzcyBvZiBpbGx1c2lvbnMsIG15c3RlcnksIGFuZCByZWZsZWN0aW9ucywgaXMgZ2VuZXJhbGx5IGNpdGVkIGFzIHRoZSBzb3VyY2Ugb2YgdGhpcyBmZXN0aXZhbCwgYW5kIGluZGVlZCwgd29yc2hpcHBlcnMgb2YgdGhlIGdvZGRlc3MgKGhlcnNlbGYga25vd24gYXMgdGhlIFNldmVudGggVmVpbCkgY291bnQgdGhlIDIzcmQgb2YgTmV0aCBhcyBvbmUgb2YgdGhlaXIgbW9zdCBzYWNyZWQgb2YgZGF5cy4gV2hhdCByaXR1YWxzIHRoZSBjaHVyY2ggb2YgU2l2YW5haCBwZXJmb3JtcyBvbiB0aGlzIGRhdGUsIGhvd2V2ZXIsIGFyZSB1bmtub3duIHRvIG91dHNpZGVycywgZm9yIHRoZSBjdWx0IGVuam95cyBpdHMgc2VjcmV0cy4gVGhpcyBzZWNyZWN5IGhhcywgdW5zdXJwcmlzaW5nbHksIGdpdmVuIHJpc2UgdG8gYWxsIG1hbm5lciBvZiBzaW5pc3RlciBydW1vdXIsIHlldCB3aGVuIFNldmVuIFZlaWxzIHJvbGxzIGFyb3VuZCBlYWNoIHllYXIsIGl0cyBlYWdlciBwYXJ0aWNpcGFudHMgYXJlIHF1aWNrIHRvIHNldCBhc2lkZSBydW1vdXIgaW4gcHJlZmVyZW5jZSBmb3IgdGhlIG5pZ2h0J3MgZnVuIGFuZCBnYW1lcy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NTBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyMyxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDEwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkFianVyYW50IERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk5ldGh5c1xcblxcbkFianVyYW50IERheSBvY2N1cnMgb24gOCBOZXRoIGFuZCBpcyBrbm93biBhcyBhIGRheSBvZiBjb29wZXJhdGlvbiBiZXR3ZWVuIG5laWdoYm9ycyB0byBzaG9yZSB1cCBtdXR1YWwgZGVmZW5zZXMgYW5kIHRyYWluIGFsbGllcyBpbiBtYWdpYy4gUG90ZW50aWFsIGFwcHJlbnRpY2VzIGFyZSBvZnRlbiB0ZXN0ZWQgb24gdGhlIGRheS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NTFcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA4LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiR3JlYXQgRmlyZSBSZW1lbWJyYW5jZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIktvcnZvc2FcXG5cXG5HcmVhdCBGaXJlIFJlbWVtYnJhbmNlIGlzIGEgaG9saWRheSBjZWxlYnJhdGVkIG9uIGVhY2ggMTMgTmV0aCBpbiB0aGUgVmFyaXNpYW4gY2l0eSBvZiBLb3J2b3NhLiBJdCBjb21tZW1vcmF0ZXMgdGhlIEdyZWF0IEZpcmUgb2YgNDQyOSBBUiwgd2hpY2ggZGV2YXN0YXRlZCB0aGUgdGhlbiBzdGlsbCBmbGVkZ2xpbmcgQ2hlbGlzaCBjb2xvbnkgb2YgRm9ydCBLb3J2b3NhLiBPbiB0aGlzIHNvbWJlciBkYXksIG1vc3Qgb2YgdGhlIGNpdHkgc2h1dHMgZG93biBhbmQgcGVvcGxlIGdlbmVyYWxseSByZW1haW4gYXQgaG9tZS4gSXQgaGFzIGJlY29tZSB0cmFkaXRpb24gbm90IHRvIGxpZ2h0IGFueSBmaXJlcyAobm90IGV2ZW4gY29va2luZyBmaXJlcykgb24gR3JlYXQgRmlyZSBSZW1lbWJyYW5jZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NTJcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxMyxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDEwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkV2ZW4tVG9uZ3VlZCBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJDaGVsaWF4LCBBc21vZGV1cywgTWlsYW5pXFxuXFxuT2JzZXJ2ZWQgb24gMTQgb2YgTmV0aCwgRXZlbi1Ub25ndWVkIERheSB3YXMgb25jZSBhIGRheSBvZiBqb3kgYW5kIGNlbGVicmF0aW9uIGluIENoZWxpYXgsIGJ1dCBoYXMgYmVjb21lIGluc3RlYWQgb25lIG9mIG1vdXJuaW5nLlxcblxcbk9yaWdpbmFsbHksIHRoZSBkYXRlIG1hcmtlZCB0aGUgY29ucXVlc3Qgb2YgQXNwZXggdGhlIEV2ZW4tVG9uZ3VlZCwgd2hvIGJyb3VnaHQgdGhlIG5hdGlvbnMgb2YgR2FsdCwgQW5kb3JhbiBhbmQgSXNnZXIgdW5kZXIgQ2hlbGlzaCBjb250cm9sLiBTaW5jZSB0aGUgZGVhdGggb2YgQXJvZGVuIGFuZCB0aGUgbG9zcyBvZiB0aGVzZSBuYXRpb25zLCB0aGUgaG9saWRheSBpbnN0ZWFkIG1hcmtzIHRoZSBsb3NzIG9mIHRlcnJpdG9yeSBhbmQgZ2xvcnkgb25jZSBoZWxkIGJ5IENoZWxpYXguIE9hdGhzIGFyZSBzb21ldGltZXMgbWFkZSwgdHlwaWNhbGx5IHRvIEFzbW9kZXVzLCBhbmQgcmFyZWx5IG9mIGEgcGxlYXNhbnQgbmF0dXJlIChzdWNoIGFzIHRoZSByZWNsYWltaW5nIG9mIHRoZSBsb3N0IGVtcGlyZSBhbmQgdmVuZ2VhbmNlIGFnYWluc3QgdHJlYWNoZXJvdXMgZm9ybWVyIGFsbGllcykuXFxuXFxuQ2l0aXplbnMgd2VhciBibGFjayBvbiB0aGlzIGRheSwgcHVibGljIHNwZWFraW5nIGlzIGZvcmJpZGRlbiwgYW5kIG9sZCBmZXVkcyBhbmQgdmVuZGV0dGFzIGFyZSByZWtpbmRsZWQuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTUzXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTQsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJFdm9raW5nIERheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk5ldGh5c1xcblxcbkEgaG9seSBkYXkgdG8gZm9sbG93ZXJzIG9mIE5ldGh5cywgRXZva2luZyBEYXkgaXMgZnVsbCBvZiB2aWJyYW50IGV4cGxvc2lvbnMsIHNraWxsZnVsIHdpZWxkaW5nIG9mIHNwZWxscywgYW5kIG11Y2ggZGFuY2luZy4gRXZva2luZyBEYXkgaXMgb2JzZXJ2ZWQgb24gdGhlIDE4dGggb2YgTmV0aCwgYW5kIHdoaWxlIHRoaXMgaG9saWRheSBpcyBtb3N0bHkgY2VsZWJyYXRlZCBpbiBHYXJ1bmQsIHRlbXBsZXMgZGVkaWNhdGVkIHRvIE5ldGh5cyBob3N0IGNlbGVicmF0aW9ucyB0aHJvdWdob3V0IHRoZSBJbm5lciBTZWEgcmVnaW9uLiBUcmFkaXRpb25hbCBjZWxlYnJhdGlvbnMgb2YgRXZva2luZyBEYXkgaGF2ZSBjaGFuZ2VkIG92ZXIgdGhlIHRob3VzYW5kcyBvZiB5ZWFycyBzaW5jZSBpdHMgZmlyc3QgaW5jYXJuYXRpb24sIGJ1dCB0byB0aGlzIGRheSBldmVyeSBvY2N1cnJlbmNlIG9mIEV2b2tpbmcgRGF5IHN0aWxsIGZlYXR1cmVzIGEgZ3JhbmQgbWVhbCBzaGFyZWQgYnkgY2VsZWJyYW50cyBkdXJpbmcgdGhlIGFmdGVybm9vbiBhbmQgYSB3b25kcm91cyBleGhpYml0aW9uIG9mIGJyaWxsaWFudCBhbmQgZXhwbG9zaXZlIG1hZ2ljIG9uY2UgdGhlIHN1biBzZXRzLiBUaGVzZSBkYXlzLCBzdWNoIGNvbG9yZnVsIG1hZ2ljYWwgZGlzcGxheXMgYXJlIGF1Z21lbnRlZCB3aXRoIGZpcmV3b3JrcyBvZiBhIGRvemVuIGRpZmZlcmVudCBjb2xvcnMgYW5kIHBhdHRlcm5zLlxcblxcbkluIHRlbXBsZXMgb2YgTmV0aHlzIGRlZGljYXRlZCB0byByZXZlcmluZyBldm9jYXRpb24gbWFnaWMsIHByaWVzdHMgYW5kIHByb21pbmVudCBhcmNhbmlzdHMgcGFydGljaXBhdGUgaW4gc3BlbGwgZHVlbHMgd2hlcmUgZWFjaCBjb250ZXN0YW50IHN0YW5kcyBvbiBhIHJhaXNlZCBwbGF0Zm9ybSBhbmQgdGFrZXMgdHVybnMgdHJ5aW5nIHRvIGluY2FwYWNpdGF0ZSBoZXIgb3Bwb25lbnQuIFRoZSBtYWdpYyB3aWVsZGVkIGluIHRoZXNlcyBkdWVscyBmYXZvcnMgdGhlIGZsYXNoeSBvdmVyIHRoZSBkYW5nZXJvdXMsIGJ1dCBjbGVyaWNzIG9mIE5ldGh5cyBhcmUgb24gaGFuZCB0byB0cmVhdCBhbnkgaW5qdXJpZXMuIFRoZXNlIGR1ZWxzIGdhdGhlciBsYXJnZSBjcm93ZHMgZWFnZXIgdG8gbGVuZCB0aGVpciBhcHBsYXVzZSB0byB0aGVpciBmYXZvcml0ZSBjb250ZXN0YW50Llxcblxcbkl0IGlzIGFsc28gZHVyaW5nIHRoaXMgZmVzdGl2YWwgd2hlbiB3aXphcmRzIHdobyB3b3JzaGlwIE5ldGh5cyBvcGVuIHRoZWlyIHNwZWxsYm9va3MgdG8gb3RoZXJzIHdobyBzaGFyZSB0aGVpciBjcmFmdC4gV2l6YXJkcyBub3JtYWxseSBndWFyZCB0aGVpciBzcGVsbGJvb2tzIHdpdGggdGhlaXIgbGl2ZXMgYW5kIGNvdmV0IHRoZSBlbGRyaXRjaCBpbmZvcm1hdGlvbiB0aGVyZWluLCBidXQgb24gRXZva2luZyBEYXkgdGhlc2Ugd2l6YXJkcyBtZWV0IHdpdGggb25lIGFub3RoZXIgcHJpb3IgdG8gdGhlIGFmdGVybm9vbiBmZWFzdCB0byBzaGFyZSB0aGVpciBzcGVsbHMganVzdCBhcyB0aGV5IHByZXBhcmUgdG8gc2hhcmUgYSBncmFuZCBtZWFsLlxcblxcblRob3VnaCBFdm9raW5nIERheSBpcyBwcmltYXJpbHkgYSBkYXkgb2YgZ3JhbmQgbWFnaWMsIHRob3NlIHdpdGggbm8gc3BlbGxjYXN0aW5nIHRhbGVudCBzdGlsbCBmbG9jayB0byBsb2NhbCB0ZW1wbGVzIG9mIE5ldGh5cyB0byBwYXJ0YWtlIGluIHRoZSBzaGFyZWQgZmVhc3QgYW5kIGZsYXNoeSBldmVuaW5nIGRpc3BsYXlzIG9mIG1hZ2ljIGFuZCBmaXJld29ya3MuIEJldHdlZW4gdGhlIG1lYWwgYW5kIGludG8gdGhlIG5pZ2h0LCBjZWxlYnJhbnRzIHdlYXIgYmxhY2stYW5kLXdoaXRlIHJvYmVzIGFuZCBwZXJmb3JtIGpveW91cyBkYW5jZXMgbWVhbnQgdG8gZ2l2ZSB0aGFua3MgdG8gdGhlIHdvbmRlcnMgTmV0aHlzIGJyb3VnaHQgdG8gaHVtYW5raW5kLiBUaGVzZSBkYW5jZXMgYXJlIGdyYW5kIGFmZmFpcnMgaW52b2x2aW5nIGRvemVucyBvZiBkYW5jZXJzIGFsbCBzcGlubmluZyBhbmQgY2xhcHBpbmcgdG8gdGhlIGFjY29tcGFueWluZyBtdXNpYyBhcyB0aGVpciBibGFjay1hbmQtd2hpdGUgcm9iZXMgZmFuIG91dCBhcm91bmQgdGhlbSB3aXRoIGVhY2ggc3Bpbi4gQXMgbmlnaHQgZGVzY2VuZHMgYW5kIHRoZSBmaXJld29ya3MgYW5kIG1hZ2ljYWwgZGlzcGxheXMgYmVnaW4sIHRoZSBkYW5jaW5nIHJpc2VzIHRvIGEgY2xpbWF4IGVydXB0aW5nIGluIHNob3V0cyBhbmQgY2FsbHMgdG8gTmV0aHlzIHdpdGggZWFjaCB0aHVuZGVyb3VzIGJvb20uXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTU0XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTgsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJCYXB0aXNtIG9mIEljZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIklycmlzZW5cXG5cXG5JbiB0aGUgSXJyaXNlbmkgQmFwdGlzbSBvZiBJY2UsIGFuIGFubnVhbCBmZXJ0aWxpdHkgZmVzdGl2YWwgaGVsZCBmcm9tIHRoZSAyNHRoIHRvIHRoZSAzMHRoIG9mIE5ldGgsIGxvY2FscyBwYXJhZGUgYWxsIGNoaWxkcmVuIGJvcm4gZHVyaW5nIHRoZSB5ZWFyIHRocm91Z2ggdGhlIHRvd24gaW4gZmluZSBjbG90aGVzLiBJbiBtb3N0IHRvd25zLCB0aGUgZmVzdGl2YWwgZW5kcyB3aXRoIGEgc3ltYm9saWMgc2FjcmlmaWNlIG9mIGEgY2hpbGQgdG8gdGhlIGNvbGQuIEhvd2V2ZXIsIGluIFdoaXRldGhyb25lIGFuZCBJcnJpc2VuJ3MgcHJvdmluY2lhbCBjYXBpdGFscywgYSBwZWFzYW50IGNoaWxkIGlzIGtpbGxlZCB0aHJvdWdoIGV4cG9zdXJlLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU1NVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDI0LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiVHJhbnNtdXRhdHVtXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiTmV0aHlzXFxuXFxuVHJhbnNtdXRhdHVtIGlzIG9uZSBvZiB0aGUgdGhyZWUgbWFqb3IgaG9saWRheXMgb2YgdGhlIGNodXJjaCBvZiBOZXRoeXMsIG9uIDI4dGggb2YgTmV0aC4gSXQgaXMgYSBkYXkgb2YgcmVmbGVjdGlvbiBhbmQgc2VsZi1pbXByb3ZlbWVudC4gTWFueSBmb2xsb3dlcnMgb2YgTmV0aHlzIGJlZ2luIHJlc2VhcmNoIGFuZCBjcmFmdGluZyBwcm9qZWN0cyBvbiB0aGlzIGRheS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NTZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyOCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDEwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldpbnRlciBXZWVrXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVHJhZGl0aW9uYWwgZmVhc3Q7IHRpbWUgZm9yIGNvdXJ0aW5nIGFuZCBzcGVuZGluZyB0aW1lIHdpdGggZnJpZW5kcy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NTdcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiVGhlIFNoYWRvd2NoYWluaW5nXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiWm9uLUt1dGhvbiwgTmlkYWxcXG5cXG5Db21tZW1vcmF0aW5nIHRoZSBNaWRuaWdodCBMb3JkJ3MgZ2lmdCBvZiBzaGFkb3cgYW5pbWFscy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NThcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiUHNldWRvZHJhZ29uIEZlc3RpdmFsXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiS29ydm9zYVxcblxcbktvcnZvc2EncyBQc2V1ZG9kcmFnb24gRmVzdGl2YWwsIGEgaG9saWRheSBjZWxlYnJhdGVkIGFubnVhbGx5IG9uIDcgS3V0aG9uYSwgbWFya3MgdGhlIHdpbnRlciBtaWdyYXRpb24gb2Ygd2lsZCBwc2V1ZG9kcmFnb25zIGZyb20gdGhlIE1pbmRzcGluIE1vdW50YWlucyB0byBDb25xdWVyb3IncyBCYXksIHdoaWNoIGluc3BpcmVzIHRoZSBjcmVhdHVyZXMgYWxyZWFkeSBpbiB0aGUgY2l0eVx1MjAxNGV2ZW4gdGhvc2UgZG9tZXN0aWNhdGVkXHUyMDE0dG8gcGxheSB3aXRoIHRoZWlyIHdpbGQga2luIGluIHRoZSBza2llcyBvdmVyIHRoZSBjaXR5LiBMb2NhbHMgbWFyayB0aGUgZGF5IHdpdGggYSBqb3lvdXMgaW5lYnJpYXRpb24uXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTU5XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogNyxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDExXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkFzY2Vuc2lvbiBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJDYXlkZW4gQ2FpbGVhblxcblxcbk11Y2ggbGlrZSB0aGUgZ29kIHRvIHdob20gaXQgaXMgZGVkaWNhdGVkLCB0aGUgQ2F5ZGVuaXRlIGhvbGlkYXkgb2YgQXNjZW5zaW9uIERheSBpcyBnZW5lcmFsbHkgY2VsZWJyYXRlZCBpbiBhIHZlcnkgaW5mb3JtYWwgc3R5bGUuIE9jY3VycmluZyBhbm51YWxseSBvbiAxMSBLdXRob25hLCBpdCBjb21tZW1vcmF0ZXMgdGhlIGRheSBDYXlkZW4gQ2FpbGVhbiBwYXNzZWQgdGhlIFRlc3Qgb2YgdGhlIFN0YXJzdG9uZSBhbmQgYXNjZW5kZWQgdG8gZ29kaG9vZCBpbiAyNzY1IEFSLiBJbiBhbGwgbGlrZWxpaG9vZCwgdGhlIDExdGggb2YgS3V0aG9uYSBpcyBub3QgdGhlIGV4YWN0IGRhdGUgb24gd2hpY2ggaXQgYWN0dWFsbHkgaGFwcGVuZWQsIGJ1dCBzaW5jZSB0aGUgZ29kIHdhcyBkZWFkIGRydW5rIHdoZW4gaXQgaGFwcGVuZWQsIGl0IHdpbGwgcHJvYmFibHkgYmUgbmV2ZXIga25vd24uXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTYwXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJXaW50ZXJibG9vbVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk5hZGVyaVxcblxcbkhvbGlkYXkgY2VsZWJyYXRpbmcgTmFkZXJpJ3MgYXNjZW5zaW9uLiBDZWxlYnJhdGlvbnMgYXJlIHR5cGljYWxseSB1bmRlcnN0YXRlZCBidXQgaW5jbHVkZSByZWFkaW5ncyBvZiBUaGUgTGF5IG9mIEFyZGVuIGFuZCBMeXNlbmEuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTYxXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTUsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJGaW5hbCBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJHcm9ldHVzXFxuXFxuQ3VsdGlzdHMgb2YgR3JvZXR1cyBwZXJmb3JtIGFuIGhvdXIncyBzaWxlbmNlIGF0IGR1c2sgb24gdGhlIGxhc3QgZGF5IG9mIHRoZSB5ZWFyIGFuZCBzZWVrIGd1aWRhbmNlIGZyb20gdGhlaXIgZ29kIGFib3V0IHRoZSBFbmQgVGltZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NjJcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAzMSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDExXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk5pZ2h0IG9mIHRoZSBQYWxlXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiTm90IGFsbCBvZiBHb2xhcmlvbidzIGhvbGlkYXlzIGFuZCBmZXN0aXZhbHMgYXJlIHRpbWVzIG9mIHJlam9pY2luZyBhbmQgZGVsaWdodC4gSG9saWRheXMgd29yc2hpcGVkIGJ5IGRhcmsgYW5kIHNpbmlzdGVyIGN1bHRzIGFuZCByZWxpZ2lvbnMgdGVuZCB0byBiZSBoaWRkZW4gYWZmYWlycywgdGhlaXIgcml0dWFscyBhbmQgY2VyZW1vbmllcyBpbnZvbHZpbmcgY3J1ZWx0aWVzIGFuZCB2aWxlIHByYWN0aWNlcyB0aGF0IHNlbmQgc2hpdmVycyBvZiBmZWFyIHRocm91Z2ggZ2VudGxlciBzb2NpZXR5LiBTY2hvbGFycyBzdXNwZWN0IHRoYXQgdGhlIE5pZ2h0IG9mIHRoZSBQYWxlXHUyMDE0YSBob2xpZGF5IHRoYXQgdHJhZGl0aW9uYWxseSB0YWtlcyBwbGFjZSBvbiB0aGUgbGFzdCBkYXkgb2YgdGhlIHllYXIsIHRoZSAzMXN0IG9mIEt1dGhvbmFcdTIwMTRoYXMgbGlua3MgdG8gc2V2ZXJhbCBzaW5pc3RlciByZWxpZ2lvbnMsIGJ1dCB0b2RheSBubyBvbmUgY2h1cmNoIGhhcyBzcGVjaWZpYyBhc3NvY2lhdGlvbiB3aXRoIHRoZSBldmVudC4gTm9uZXRoZWxlc3MsIHRoZSBOaWdodCBvZiB0aGUgUGFsZSBpcyBhbiBldmVudCB0aGF0IG1hbnkgbG9vayBmb3J3YXJkIHRvIGFsbCB5ZWFyLCB3aGV0aGVyIGluIGZlYXIgb3IgZXhjaXRlbWVudC5cXG5cXG5PbiB0aGUgTmlnaHQgb2YgdGhlIFBhbGUsIGl0IGlzIHNhaWQgdGhhdCB0aGUgZ2hvc3RzIG9mIHRob3NlIHdobyBkaWVkIGR1cmluZyB0aGUgcHJldmlvdXMgeWVhciBtYW5pZmVzdCB1cG9uIHRoZSB3b3JsZCBhbmQgY29tZSB0byB2aXNpdCB0aGUgaG9tZXMgdGhleSBsaXZlZCBpbiBkdXJpbmcgbGlmZS4gQWx0aG91Z2ggc29tZSBtaWdodCB0aGluayB0aGF0IHRoZSBjaGFuY2Ugb2Ygc2VlaW5nIGV2ZW4gdGhlIHNoYWRlIG9mIGEgZGVhcmx5IGRlcGFydGVkIG9uZSBtaWdodCBiZSBhIGJsZXNzaW5nLCB0aGUgTmlnaHQgb2YgdGhlIFBhbGUgaXMgbm90IGEgdGltZSBmb3IgdGVhcmZ1bCByZXVuaW9ucywgZm9yIHRoZXNlIGdob3N0cywgdHJhZGl0aW9uIHNheXMsIGRvIG5vdCByZXR1cm4gb3V0IG9mIGxvdmUgZm9yIHRob3NlIHRoZXkgbGVmdCBiZWhpbmQgYnV0IG91dCBvZiBkYXJrZXIgY29tcHVsc2lvbnMuIExpbmdlcmluZyBqZWFsb3VzeSwgdW5maW5pc2hlZCBhcmd1bWVudHMsIG9yIHRoZSBzaW1tZXJpbmcgbmVlZCBmb3IgcmV2ZW5nZSBhcmUgc2FpZCB0byBiZSB3aGF0IGNvbXBlbHMgdGhlIGRlYWQgdG8gcmV0dXJuIHRvIHRvcm1lbnQgdGhlIGxpdmluZyBvbiB0aGUgTmlnaHQgb2YgdGhlIFBhbGUuXFxuXFxuVGhlIGV2ZW5pbmcgb2YgdGhpcyBuaWdodCBpbiBtYW55IGNvbW11bml0aWVzIGlzIGNlbGVicmF0ZWQgYnkgYSBtb3JiaWQgZmVhc3QsIHRoZSBmb29kIHByZXBhcmVkIHdpdGggdGhlbWVzIHJldm9sdmluZyBhcm91bmQgZ3JhdmV5YXJkcywgdGhlIGRlYWQsIGFuZCBvdGhlciBzcG9va3kgdHJhZGl0aW9ucy4gVGhpcyBmZWFzdCwgb24gb25lIGxldmVsLCBoZWxwcyB0aGUgY2VsZWJyYW50cyB0byBtYWtlIGxpZ2h0IG9mIHRoZWlyIGZlYXJzIHdoaWxlIHNoYXJpbmcgZ29vZCBjb21wYW55IHdpdGggc2ltaWxhcmx5IG5lcnZvdXMgbmVpZ2hib3JzLCBidXQgYXQgYW5vdGhlciBsZXZlbCBpcyBiZWxpZXZlZCB0byBwbGFjYXRlIHZlbmdlZnVsIHNwaXJpdHMgYXMgdG9hc3RzIGFyZSByYWlzZWQgdG8gdGhlIG1lbW9yaWVzIG9mIHRoZSByZWNlbnRseSBkZXBhcnRlZC4gVGhlc2UgZmVhc3RzIGluY2x1ZGUgcmV0ZWxsaW5ncyBvZiBmYXZvcml0ZSBtZW1vcmllcyBvZiB0aGUgZGVwYXJ0ZWQsIGluIGhvcGVzIG9mIHJlbWluZGluZyB0aGUgYXBwcm9hY2hpbmcgZ2hvc3RzIG9mIGJyaWdodGVyIGFuZCBraW5kZXIgbWVtb3JpZXMgdGhhbiB0aG9zZSB0aGF0IGNvbXBlbCB0aGVtIHRvIHJldHVybi4gVGhlIGZlYXN0IGFsd2F5cyBlbmRzIGF0IGxlYXN0IGFuIGhvdXIgYmVmb3JlIG1pZG5pZ2h0IGluIG9yZGVyIHRvIGdpdmUgcGFydGljaXBhbnRzIHRpbWUgdG8gcmV0dXJuIGhvbWUsIGRlY29yYXRlIGRvb3JzIGFuZCB3aW5kb3dzIHdpdGggc2FsdCBhbmQgb3RoZXIgdHJpbmtldHMgdGFrZW4gZnJvbSB0aGUgZmVhc3RpbmcgdGFibGUgKHNhbHRlZCBicmVhZCBiYWtlZCBpbnRvIGNyb29rLWxpa2Ugc2hhcGVzIGFyZSBhIGZhdm9yaXRlLCBhcyB0aGVzZSBjYW4gYmUgaHVuZyBmcm9tIGRvb3Jrbm9icyBhbmQgZWF2ZXMpIHRvIHdhcmQgb2ZmIGV2aWwgc3Bpcml0cywgYW5kIGhpZGUgaW4gdGhlaXIgYmVkcm9vbXMgdW50aWwgZGF3bi4gQnJhdmUgeW91dGhzIGFuZCBhZHZlbnR1cmVycyBvZnRlbiBkZWxpYmVyYXRlbHkgc3RheSBvdXQgYWZ0ZXIgbWlkbmlnaHQsIGVpdGhlciB0byBkYXJlIHRoZSBnaG9zdHMgdG8gY2hhbGxlbmdlIHRoZW0gb3Igc2ltcGx5IGZvciB0aGUgdGhyaWxsIG9mIGJ1Y2tpbmcgdHJhZGl0aW9uLiBFdmVyeSBOaWdodCBvZiB0aGUgUGFsZSwgaXQgc2VlbXMsIHRoZXJlIGFyZSBkaXNhcHBlYXJhbmNlcyBhbW9uZyB0aG9zZSB3aG8gc3RheSBvdXQgYWZ0ZXIgbWlkbmlnaHQsIGFsdGhvdWdoIHdoZXRoZXIgdGhlc2UgdmFuaXNoaW5ncyBhcmUgdGhlIHJlc3VsdCBvZiBkaXNzYXRpc2ZpZWQgbG9jYWxzIHRha2luZyB0aGUgb3Bwb3J0dW5pdHkgdG8gcnVuIGF3YXkgZnJvbSBob21lLCBtdXJkZXJlcnMgb3Igd2lsZCBhbmltYWxzIG9yIG90aGVyIG11bmRhbmUgZGFuZ2Vycywgb3IgdGhlIHZlbmdlZnVsIHNwaXJpdHMgY2Fycnlpbmcgb2ZmIHRoZWlyIHZpY3RpbXMgZGVwZW5kcyB1cG9uIHRoZSBjaXJjdW1zdGFuY2VzLlxcblxcblRoZSBtb3JuaW5nIGFmdGVyIGEgTmlnaHQgb2YgdGhlIFBhbGUgaXMgYWxzbyB0aGUgZmlyc3QgZGF5IG9mIHRoZSBuZXcgeWVhclx1MjAxNGEgdGltZSB0aGF0IG1hbnkgY2VsZWJyYXRlIG1vcmUgYXMgYSByZWxpZWYgZm9yIHN1cnZpdmluZyB0aGUgbmlnaHQgYmVmb3JlIHRoYW4gaW4gYW50aWNpcGF0aW9uIG9mIHdoYXQgdGhlIG5ldyB5ZWFyIG1pZ2h0IGJyaW5nLCBhbHRob3VnaCByZWdpb25hbCBwcmVmZXJlbmNlcyBmb3IgaG93IHRoaXMgZGF5IGlzIGNlbGVicmF0ZWQgdmFyeSBlbm91Z2ggdGhhdCBubyBzaW5nbGUgdHJhZGl0aW9uIGhvbGRzIG92ZXIgdGhlIG90aGVyLiBTYXZlLCBvZiBjb3Vyc2UsIHRoZSBsaW5nZXJpbmcgZmVhcnMgb2Ygd2hhdCBkcmVhZCBzcGlyaXRzIG1pZ2h0IGNvbWUga25vY2tpbmcgdXBvbiB3YXJkZWQgZG9vcnMgb25lIHllYXIgYXdheS4uLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU2M1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDMxLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiVHVybmluZyBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBbHNldGFcXG5cXG5UaGUgY2hhbmdpbmcgb2YgdGhlIHllYXIgaXMgY2VsZWJyYXRlZCB3aXRoIHRoZSBmb3JnaXZlbmVzcyBvZiBvbGQgZGVidHMgYW5kIGdydWRnZXMsIGFuZCBlbWJyYWNpbmcgbmV3IG9wcG9ydHVuaXRpZXMuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTY0XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMzEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJSaXR1YWwgb2YgU3RhcmR1c3RcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJEZXNuYVxcblxcblRoZSBSaXR1YWwgb2YgU3RhcmR1c3QgaXMgb25lIG9mIHRoZSBmZXcgZm9ybWFsIHJlbGlnaW91cyBob2xpZGF5cyBpbiBob25vciBvZiB0aGUgZ29kZGVzcyBEZXNuYS4gSXQgaXMgaGVsZCBvbiBib3RoIHRoZSBzdW1tZXIgYW5kIHdpbnRlciBzb2xzdGljZXMuXFxuXFxuRm9sbG93ZXJzIG9mIHRoZSBTb25nIG9mIFNwaGVyZXMgZ2F0aGVyIGF0IGR1c2sgYW5kIGxpZ2h0IGVub3Jtb3VzIGJvbmZpcmVzIGFuZCBob2xkIGZlYXN0cywgd2F0Y2hpbmcgdGhlIHNwYXJrcyBhbmQgZW1iZXJzIGZsb2F0IG91dCBpbnRvIHRoZSBkYXJrZW5pbmcgc2t5LiBBZnRlciBpdCBpcyBmdWxseSBkYXJrLCB0aGUgY2VsZWJyYW50cyBjaGFudCBhbmQgc2luZyBzb25ncyBhcyB0aGV5IHdhdGNoIHRoZSBmaXJlcyBidXJuIGxvdy4gV2hlbiBvbmx5IGVtYmVycyByZW1haW4sIHNhbmQgbWl4ZWQgd2l0aCBncm91bmQgc3RhciBnZW1zIChlaXRoZXIgc3RhciBydWJpZXMsIHN0YXIgc2FwcGhpcmVzLCBvciByb3NlIHF1YXJ0eikgaXMgdGhyb3duIG9uIHRoZW0gb3IgaW50byB0aGUgYWlyIGRvd253aW5kLiBBdCB0aGlzIHBvaW50IGl0IGlzIGNvbW1vbiB0byBtYWtlIHByb2NsYW1hdGlvbnMgb2YgbG92ZSBhbmQgZnJpZW5kc2hpcCBhbmQgb2YgcHJvbWlzZWQgam91cm5leXMgdG8gY29tZS4gVGhlIHR3aW5rbGluZyBvZiB0aGUgc2FuZCBpcyB0aG91Z2h0IHRvIG1pcnJvciB0aGUgbmlnaHQgc2t5IGFuZCBkZW1vbnN0cmF0ZSBEZXNuYSdzIHdpdG5lc3Npbmcgb2YgdGhlc2UgcHJvbm91bmNlbWVudHMuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTY1XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiUGxhbnRpbmcgV2Vla1wiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkVyYXN0aWxcXG5cXG5UaGlzIGhvbHkgd2VlayB0byB0aGUgZ29kIEVyYXN0aWwgaXMgYSB0aW1lIG9mIGhlYXZ5IHdvcmsgaW4gdGhlIGZpZWxkcyBmb3IgZmFybWVycy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NjZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJBc2NlbmRhbmNlIE5pZ2h0XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiTm9yZ29yYmVyXFxuXFxuRGF5IG1hcmtpbmcgdGhlIGFwb3RoZW9zaXMgb2YgdGhlIFJlYXBlciBvZiBSZXB1dGF0aW9uLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU2N1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDIsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA0XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkF6dmFkZXZhIERlamFsXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiR3J1aGFzdGhhXFxuXFxuQ2VsZWJyYXRpb24gb2YgdGhlIHJldmVsYXRpb24gb2YgdGhlIEF6dmFkZXZhIFB1amlsYSwgd2l0aCBnaWZ0cyBvZiBib29rcywgY2VsZWJyYXRpb25zIG9mIGtub3dsZWRnZSwgYmxlc3Npbmcgb2YgYW5pbWFscywgYW5kIGEgdmVnZXRhcmlhbiBmZWFzdC5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NjhcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAzLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogNFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJHb2JsaW4gRmxlYSBNYXJrZXRcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBbmRvcmFuXFxuXFxuQSBtYXJrZXQgZGF5IHRoYXQgZm9jdXNlcyBvbiB1bnVzdWFsIGNyYWZ0cyBhbmQgb2ZmZXJzIGdhbWVzIHRvIGNoaWxkcmVuIHdobyBkcmVzcyB1cCBmb3IgdGhlIG9jY2FzaW9uLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU2OVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkJyZWFjaGluZyBGZXN0aXZhbFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIktvcnZvc2FcXG5cXG5ZZWFybHkgZmVzdGl2YWwgaW4gd2hpY2ggY29udGVzdGFudHMgdHJ5IHRvIGJyZWFrIHRocm91Z2ggdGhlIG1hZ2ljYWwgd2FyZHMgcHJvdGVjdGluZyB0aGUgQWNhZGVtYWUuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTcwXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDRcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU2lsdmVyZ2xhemVyIFN1bmRheVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkFuZG9yYW5cXG5cXG5TaWx2ZXJnbGF6ZXIgU3VuZGF5IGlzIGEgdHdvLXBhcnQgQW5kb3JlbiBuYXRpb25hbCBmZXN0aXZhbCB0aGF0IGlzIGhlbGQgb24gdGhlIGxhc3QgU3VuZGF5IG9mIEFyb2R1cyBhbmQgdGhlIGZpcnN0IFN1bmRheSBvZiBSb3ZhIGV2ZXJ5IHllYXIuIENlbGVicmFudHMgc3BlbmQgdGhlIHR3byBTdW5kYXlzIGZpc2hpbmcsIGhvbGRpbmcgc3dpbW1pbmcgY29tcGV0aXRpb25zLCBhbmQgbWFraW5nIGVub3Jtb3VzIHB1cHBldHMuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTcxXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQmF0dWwgYWwtQWxpbVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlFhZGlyYVxcblxcbkJhdHVsIGFsLUFsaW0gaXMgYSBob2xpZGF5IGNlbGVicmF0ZWQgb24gdGhlIGxhc3QgT2F0aGRheSBvZiBDYWxpc3RyaWwgaW4gUWFkaXJhLiBJdCBjb21tZW1vcmF0ZXMgdGhlIGJpcnRoZGF5IG9mIHRoZSBwb3B1bGFyIHJvbWFudGljIHBvZXQgb2YgdGhlIHNhbWUgbmFtZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1NzJcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgaWQ6IG51bGwsXG4gICAgICAgIGNhdGVnb3JpZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk5hdHVyYWwgRXZlbnRzXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwibmF0dXJhbC1ldmVudHNcIixcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjMkU3RDMyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJSZWxpZ2lvdXMgSG9saWRheXNcIixcbiAgICAgICAgICAgICAgICBpZDogXCJyZWxpZ2lvdXMtaG9saWRheXNcIixcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjOWIyYzJjXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTZWN1bGFyIEhvbGlkYXlzXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwic2VjdWxhci1ob2xpZGF5c1wiLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiMwRDQ3QTFcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkhpc3RvcmljYWwgRXZlbnRzXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiaGlzdG9yaWNhbC1ldmVudHNcIixcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjNDU1QTY0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJNaXNjZWxsYW5lb3VzIEV2ZW50c1wiLFxuICAgICAgICAgICAgICAgIGlkOiBcIm1pc2NlbGxhbmVvdXMtZXZlbnRzXCIsXG4gICAgICAgICAgICAgICAgY29sb3I6IFwiIzAyODhEMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJDYWxlbmRhciBvZiBHYWxpZmFyXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIkNhbGVuZGFyIG9mIHRoZSB3b3JsZCBvZiBFYmVycm9uLlwiLFxuICAgICAgICBzdGF0aWM6IHtcbiAgICAgICAgICAgIGRpc3BsYXlEYXlOdW1iZXI6IGZhbHNlLFxuICAgICAgICAgICAgZmlyc3RXZWVrRGF5OiAwLFxuICAgICAgICAgICAgaW5jcmVtZW50RGF5OiBmYWxzZSxcbiAgICAgICAgICAgIGRpc3BsYXlNb29uczogdHJ1ZSxcbiAgICAgICAgICAgIG92ZXJmbG93OiBmYWxzZSxcbiAgICAgICAgICAgIHdlZWtkYXlzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlN1bFwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF81OThhN2JkOWI4YjlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1vbFwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF82OTA4OGFjOGY4MThcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlpvbFwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9hOGM4NWE5OGY4ZmFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIldpclwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9mYTRiNjg3YWFiYTlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlpvclwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF81OGU5YTgyYTZiYzhcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkZhclwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF85YTE4Y2I4ODlhZGFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlNhclwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8zYjliZmEzOGM5NzlcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBtb250aHM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiWmFyYW50eXJcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDI4LFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF83YThhZmIwOWFhNmFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk9sYXJ1bmVcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDI4LFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8zODZiMTg4YjJhODlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlRoZXJlbmRvclwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMjgsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzU5OWEwYWQ4NTljOFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRXlyZVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMjgsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzk4YTk1ODY5ZTkwYlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRHJhdmFnb1wiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMjgsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2ViNWExOTRiY2JmOFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTnltbVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMjgsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2JiNTk2YWE5Y2E1YlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTGhhcnZpb25cIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDI4LFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9mYjFiYjlkYWJiODhcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkJhcnJha2FzXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfOGJjYjE5YzhmOTBhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJSaGFhblwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMjgsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzBhMDllYjViN2I5YlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiU3lwaGVyb3NcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDI4LFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8zYjk4YWIxYTI5ZThcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkFyeXRoXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfODk5YjU5ZmFhYmE5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJWdWx0XCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfOGEyODZiNzhhYWM5XCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbW9vbnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTnltbVwiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogMjgsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogLTE0LFxuICAgICAgICAgICAgICAgICAgICBmYWNlQ29sb3I6IFwiI2ZmZmZmZlwiLFxuICAgICAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogXCIjMDAwMDAwXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2E4Yjg4OTg4YTk0YVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiU3lwaGVyb3NcIixcbiAgICAgICAgICAgICAgICAgICAgY3ljbGU6IDM1LFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IC0xMSxcbiAgICAgICAgICAgICAgICAgICAgZmFjZUNvbG9yOiBcIiNmZmZmZmZcIixcbiAgICAgICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6IFwiIzAwMDAwMFwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF81YmE4MGI0YjA5NmFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlRoZXJlbmRvclwiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogNDIsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogMjEsXG4gICAgICAgICAgICAgICAgICAgIGZhY2VDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiBcIiMwMDAwMDBcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYzk5OTA4NWE0OTliXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJSaGFhblwiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogNDksXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogOSxcbiAgICAgICAgICAgICAgICAgICAgZmFjZUNvbG9yOiBcIiNmZmZmZmZcIixcbiAgICAgICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6IFwiIzAwMDAwMFwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8zOWY5MWFiOGE4NWFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk9sYXJ1bmVcIixcbiAgICAgICAgICAgICAgICAgICAgY3ljbGU6IDU2LFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IDI3LFxuICAgICAgICAgICAgICAgICAgICBmYWNlQ29sb3I6IFwiI2ZmZmZmZlwiLFxuICAgICAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogXCIjMDAwMDAwXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzJhZGE4Yjk5Nzg4YlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRXlyZVwiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogNjMsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogMTAsXG4gICAgICAgICAgICAgICAgICAgIGZhY2VDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiBcIiMwMDAwMDBcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNDkyODViNzlkOTg4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJWdWx0XCIsXG4gICAgICAgICAgICAgICAgICAgIGN5Y2xlOiA3MCxcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiA2LFxuICAgICAgICAgICAgICAgICAgICBmYWNlQ29sb3I6IFwiI2ZmZmZmZlwiLFxuICAgICAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogXCIjMDAwMDAwXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2VhZWJiOTRhOWFjYlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiWmFyYW50eXJcIixcbiAgICAgICAgICAgICAgICAgICAgY3ljbGU6IDc3LFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IDMxLFxuICAgICAgICAgICAgICAgICAgICBmYWNlQ29sb3I6IFwiI2ZmZmZmZlwiLFxuICAgICAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogXCIjMDAwMDAwXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzk4ZDg2YWFiY2JiOVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQXJ5dGhcIixcbiAgICAgICAgICAgICAgICAgICAgY3ljbGU6IDg0LFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IDQxLFxuICAgICAgICAgICAgICAgICAgICBmYWNlQ29sb3I6IFwiI2ZmZmZmZlwiLFxuICAgICAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogXCIjMDAwMDAwXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2Q5ODliODA5ZDk3YlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRHJhdmFnb1wiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogOTEsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGZhY2VDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiBcIiMwMDAwMDBcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfMWEyOTM5NTllYWFiXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJMaGFydmlvblwiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogOTgsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogMzQsXG4gICAgICAgICAgICAgICAgICAgIGZhY2VDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiBcIiMwMDAwMDBcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfY2JmOTE5NDkxYTViXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJCYXJyYWthc1wiLFxuICAgICAgICAgICAgICAgICAgICBjeWNsZTogMTA1LFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IC0xMSxcbiAgICAgICAgICAgICAgICAgICAgZmFjZUNvbG9yOiBcIiNmZmZmZmZcIixcbiAgICAgICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6IFwiIzAwMDAwMFwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF80YTFhMmE2YjU4OWJcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBsZWFwRGF5czogW10sXG4gICAgICAgICAgICBlcmFzOiBbXVxuICAgICAgICB9LFxuICAgICAgICBjdXJyZW50OiB7XG4gICAgICAgICAgICB5ZWFyOiA5OTgsXG4gICAgICAgICAgICBkYXk6IDEsXG4gICAgICAgICAgICBtb250aDogMFxuICAgICAgICB9LFxuICAgICAgICBldmVudHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlRoZSBUYWluIEdhbGEgLSBTaGFyblwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSBUYWluIEdhbGEgaXMgYSBub3RhYmxlIGV2ZW50IGhlbGQgb24gdGhlIGZpcnN0IEZhciBvZiBlYWNoIG1vbnRoIGluIFNoYXJuLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ2MVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlJldmVsYXRpb24gRGF5IC0gQmxvb2Qgb2YgVm9sXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiTWVkaXRhdGlvbiBjZXJlbW9ueSBmb3IgU2Vla2VycyAoYWxzbyBjYWxsZWQgQXNjZW5zaW9uIERheSkuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDYyXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTMsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldpbnRlciBTb2xzdGljZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBsb25nZXN0IG5pZ2h0IG9mIHRoZSB5ZWFyLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ2M1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDE0LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJSZWJpcnRoIEV2ZSAtIFRoZSBTaWx2ZXIgRmxhbWVcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgUHVyaWZpZWQgbmV3IHllYXI7IGEgbmlnaHQgZm9yIHNwaXJpdHVhbCB2aWdpbCBhbmQgZ3VhcmRpbmcgYWdhaW5zdCBldmlsLiBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NjRcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxNCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQ3J5c3RhbGZhbGwgLSBTaGFyblwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkEgZGF5IG9mIHJlbWVtYnJhbmNlOyBJY2Ugc2N1bHB0dXJlcyBhcmUgY3JlYXRlZCAoYW5kIGRlc3Ryb3llZCkgdG8gY29tbWVtb3JhdGUgdGhlIGRlc3RydWN0aW9uIG9mIHRoZSBHbGFzcyBUb3dlciBvbiA5IE9sYXJ1bmUgaW4gOTE4IGJ5IGFianVyZXJzLiBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NjVcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA5LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiA5OTgsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkJyaWdodCBTb3VscycgRGF5IC0gVGhlIFNpbHZlciBGbGFtZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk9uIHRoaXMgZGF5IGVhY2ggeWVhciwgdGhlIFB1cmlmaWVkIGNlbGVicmF0ZSB0aGUgbGl2ZXMgYW5kIHNhY3JpZmljZSBvZiBhbGwgZm9sbG93ZXJzIG9mIHRoZSBGbGFtZSB3aG8gZGllZCB3aGlsZSBmaWdodGluZyBldmlsIGFuZCBwcm90ZWN0aW5nIHRoZSBmYWl0aGZ1bC4gXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDY2XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTgsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlRoZSBEYXkgb2YgTW91cm5pbmcgLSBTaGFyblwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkluIGNvbW1lbW9yYXRpb24gb2YgdGhlIGRlc3RydWN0aW9uIG9mIHRoZSBuYXRpb24gb2YgQ3lyZSwgdGhvc2Ugd2hvIHN1cnZpdmVkIGdhdGhlciB0byByZW1lbWJlciB0aGUgbG9zcyBvZiB0aGVpciBraW5nZG9tIG9uIHRoaXMgZGF0ZSBpbiB0aGUgeWVhciA5OTQuIFwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ2N1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDIwLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiA5OTUsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlRpcmFzZGF5IC0gVGhlIFNpbHZlciBGbGFtZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk9uIHRoaXMgZGF5LCB0aGUgU2lsdmVyIEZsYW1lIHdvcmssIGdpdmUgZ2lmdHMsIGFuZCBwYXJ0YWtlIGluIGpveW91cyBjZWxlYnJhdGlvbiBvdXQgb2YgdGhhbmtmdWxuZXNzIGZvciB0aGUgbmV3IHBsYW50aW5nIHNlYXNvbiBhbmQgdGhlIGJpcnRoIG9mIFRpcmEgTWlyb24gLSB0aGUgVm9pY2Ugb2YgdGhlIFNpbHZlciBGbGFtZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NjhcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA1LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTdW4ncyBCbGVzc2luZyAtIFRoZSBTb3ZlcmVpZ24gSG9zdFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSBTb3ZlcmVpZ24gSG9zdCBlbmpveXMgdGhpcyBmZXN0aXZhbCBvZiBwZWFjZSwgYW5kIG9mIHNldHRpbmcgYXNpZGUgZGlmZmVyZW5jZXMsIGluIHRoZSBuYW1lIG9mIERvbCBBcnJhaC5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NjlcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxNSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSW5pdGlhdGlvbiBEYXkgLSBUaGUgU2lsdmVyIEZsYW1lXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiU2VtaW5hcnkgZ3JhZHVhdGlvbnMgYW5kIGJyZWFraW5nIGdyb3VuZHMgZm9yIG5ldyBjaHVyY2hlcyBhcmUgY29tbW9uIG9uIHRoaXMgZGF5IGFzIHRoZSBTaWx2ZXIgRmxhbWUgcmVjYWxscyB0aGVpciBkZWNsYXJhdGlvbnMgb2YgaW5kZXBlbmRlbnQgZmFpdGggYW5kIHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGhlaXIgZmlyc3QgY2F0aGVkcmFsIG9uIHRoaXMgc3BlY2lhbCBkYXkgZWFjaCB5ZWFyLiBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NzBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxMSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQmFrZXIncyBOaWdodCAtIFRoZSBTaWx2ZXIgRmxhbWVcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBbiBvbGQgYW5kIG1pc3VuZGVyc3Rvb2QsIHlldCBpbW1lbnNlbHkgcG9wdWxhciwgaG9saWRheSB3aGVyZWluIGZvbGxvd2VycyBvZiB0aGUgU2lsdmVyIEZsYW1lIGdhdGhlciB0byBzaGFyZSBwYXN0cmllcyBhbmQgdHJlYXRzIGNyZWF0ZWQgYnkgYmFrZXJzIHdpdGhpbiB0aGVpciBmb2xkLiBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NzFcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA2LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogNFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJBdXJlb24ncyBDcm93biAtIFNoYXJuIGFuZCBUaGUgU292ZXJlaWduIEhvc3RcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgU292ZXJlaWduIEhvc3QgY2VsZWJyYXRlIGtub3dsZWRnZSBvbiB0aGlzIGRheSB3aXRoIGxlY3R1cmVzIGFuZCBzZXJtb25zLlNlY3VsYXIgaW5zdGl0dXRpb25zIGhvbGQgZ3JhZHVhdGlvbiBhbmQgY29tbWVuY2VtZW50IGNlcmVtb25pZXMgb24gdGhpcyBkYXRlLCBhcyBkbyB0aGUgbW9uYXN0aWMgc2Nob29scyBvZiB0aGUgU2lsdmVyIEZsYW1lLkluIFNoYXJuIHRoaXMgaGFzIGJlY29tZSBhIGNvbW1vbiBzZWN1bGFyIGhvbGlkYXksIHdoZXJlaW4gZXZlbiBub24tZGV2b3V0IG1lbWJlcnMgb2YgdGhlIEZpdmUgTmF0aW9ucyBhdHRlbmQgbGVjdHVyZXMgYW5kIHNlcm1vbnMgaGVsZCBieSB0aGUgcHJpZXN0cyBvZiBBdXJlb24gb24gcGhpbG9zb3BoaWNhbCwgaGlzdG9yaWNhbCwgYW5kIGEgcmFuZ2Ugb2Ygb3RoZXIgdG9waWNzIC0gaW5jbHVkaW5nIGRpc2N1c3Npb25zIG9uIHRoZSBuYXR1cmUgb2YgdGhlIGdvZHMuXFxuXFxuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDcyXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjYsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA0XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlByb21pc2V0aWRlIC0gVGhlIFNpbHZlciBGbGFtZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkEgY29udHJvdmVyc2lhbCBob2xpZGF5IG91dHNpZGUgb2YgdGhlIFNpbHZlciBGbGFtZSBmYWl0aCwgb24gdGhpcyBkYXkgdGhlIFB1cmlmaWVkIGhvbm9yIHRoZSBTaWx2ZXIgRmxhbWUgZm9yIHRoZSBwcm9taXNlIG9mIHBhcmFkaXNlLiBUaGV5IGFsc28gaG9ub3IgKHdpdGhvdXQgd29yc2hpcCkgdGhlIFNvdmVyZWlnbiBIb3N0IGZvciBoYXZpbmcgY3JlYXRlZCB0aGUgd29ybGQsIGJlZm9yZSBzdGVwcGluZyBhc2lkZSB0byBhbGxvdyB0aGUgRmxhbWUgaXRzIHJpZ2h0ZnVsIHBsYWNlIGFzIHRoZSBsYXN0IGdvZCBvZiBFYmVycm9uLlx1MDBBMCBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NzNcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyOCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDRcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQnJpZ2h0YmxhZGUgLSBTaGFybiBhbmQgVGhlIFNvdmVyZWlnbiBIb3N0XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhpcyBTb3ZlcmVpZ24gSG9zdCBmZXN0aXZhbCwgZGVkaWNhdGVkIHRvIERvbCBEb3JuLCBpcyBtYXJrZWQgYnkgZ2xhZGlhdG9yaWFsIGFuZCBhdGhsZXRpYyBjb250ZXN0cy4gXFxuXFxuSW4gU2hhcm4sIGZlc3RpdmFsIGNlbGVicmF0aW9ucyBvY2N1ciB0aHJvdWdob3V0IHRoZSB0ZW1wbGUgZGlzdHJpY3RzIHdpdGggZXZlbnRzIGN1bG1pbmF0aW5nIGluIGEgY29tYmluZWQgY29udGVzdCBvZiBjaGFtcGlvbnMgYXQgdGhlIENvcm5lcnN0b25lIEFyZW5hLiBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NzRcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxMixcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiRmlyc3QgRGF3biAtIFRoZSBTaWx2ZXIgRmxhbWVcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJPbiB0aGlzIGRheSBpbiA5MTQsIHRoZSBDaHVyY2ggb2YgdGhlIFNpbHZlciBGbGFtZSBvZmZpY2lhbGx5IGFzc3VtZWQgY29udHJvbCBvZiB0aGUgZ292ZXJubWVudCBvZiBUaHJhbmUuIE9uIGVhY2ggYW5uaXZlcnNhcnksIHRoZSBQdXJpZmllZCBnaXZlIHRoYW5rcyBmb3IgdGhlaXIganVzdCBydWxlLCB3aGlsZSBhbHNvIGhvbm9yaW5nIHRoZSBtZW1vcnkgb2YgS2luZyBUaGFsaW4sIHdob3NlIGRlYXRoIHBhdmVkIHRoZSB3YXkgZm9yIHRoZWlyIGdvdmVybmFuY2UuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDc1XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IDkxNSxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU2lsdmVydGlkZSAtIFRoZSBTaWx2ZXIgRmxhbWVcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJDb21tZW1vcmF0aW9uIG9mIGJvdGggdGhlIGNvdWF0bCBzYWNyaWZpY2UgYW5kIHRoZSBlbnRyeSwgdGhvdXNhbmRzIG9mIHllYXJzIGFnbywgb2YgdGhlIFNpbHZlciBGbGFtZSBpbnRvIEViZXJyb24gbWFyayB0aGlzIGhpZ2hlc3Qgb2YgaG9seSBkYXlzLiBUaGUgdmFzdCBtYWpvcml0eSBvZiBQdXJpZmllZCBzcGVuZCB0aGlzIGRheSBpbiBwcmF5ZXIgYW5kIG9ic2VydmFuY2UuXHUwMEEwIFwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ3NlwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDE0LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogNlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJUaGUgUmFjZSBvZiBFaWdodCBXaW5kcyAtIFNoYXJuXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiTGVnZW5kIHRlbGxzIG9mIEtpbmcgR2FsaWZhciBJSSdzIGZhc2NpbmF0aW9uIHdpdGggYWVyaWFsIHNjb3V0cyBhbmQgY2F2YWxyeS4gVGhlIGV2b2x1dGlvbiBvZiB0aGlzIGFubnVhbCBjb250ZXN0IHRvb2sgY2VudHVyaWVzLCBidXQgaGFzIGdpdmVuIFNoYXJuIGFuIGV4b3RpYyBhbmQgd2VsbCBhbnRpY2lwYXRlZCBldmVudCBpbnZvbHZpbmcgYmVhc3RzIGFuZCB0aGVpciByaWRlcnMgaW4gYSBzeW1iaW90aWMgcXVlc3QgZm9yIGdsb3J5KiBvdmVyIGEgY291cnNlIHRoYXQgZmluZHMgdGhlbSB3ZWF2aW5nIHRocm91Z2ggdGhlIHNwaXJlcyBvZiB0aGUgY2l0eS4gXFxuXFxuXFxuXFxuKnRoZSB3aW5uZXIgYWxzbyByZWNlaXZlcyA1MDBncCBhbmQgYSBsYW5kIGdyYW50IGxvY2F0ZWQgZWxzZXdoZXJlIGluIEJyZWxhbmQuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDc3XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IDIwMSxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiVGhlIEh1bnQgLSBTaGFybiBhbmQgVGhlIFNvdmVyZWlnbiBIb3N0XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhlIFNvdmVyZWlnbiBIb3N0IGNlbGVicmF0ZSBCYWxpbm9yIHdpdGggY29tbXVuYWwgaHVudHMgb2YgZGFuZ2Vyb3VzIGNyZWF0dXJlcy4gXFxuXFxuSW4gU2hhcm4sIGEgZGFuZ2Vyb3VzIGJlYXN0Kiwgd2hvc2UgdHJhbnNwb3J0IHRvIHRoZSBjaXR5IHdhcyBhcnJhbmdlZCBieSB0aGUgcHJpZXN0cyBvZiBCYWxpbm9yLCBpcyByZWxlYXNlZCBpbnRvIHRoZSBEZXB0aHMgb2YgdGhlIExvd2VyLUNpdHkuIE9wZW4gdG8gYW55IHdobyB3b3VsZCBwYXJ0aWNpcGF0ZSAoYW5kIHBheSBhbiBlbnRyeSBmZWUgaW4gdGhlIGZvcm0gb2YgYSA1Z3AgZG9uYXRpb24pLCB0aGUgdmljdG9yIG11c3QgcmV0dXJuIHdpdGggdGhlIGJlYXN0J3MgaGVhZCB0byByZWNlaXZlIGEgNTAwZ3AgcHVyc2UsIGxvY2FsIGZhbWUsIGFuZCB0aGUgYmxlc3Npbmcgb2YgQmFsaW5vci4gXFxuXFxuXFxuXFxuKm9mdGVuIGEgc2luZ3VsYXIgYmVhc3QsIGl0IGNhbiBiZSBzZXZlcmFsIC0gd2hpY2ggdGhlbiByZXF1aXJlcyB0aGUgdmljdG9yIHRvIHJldHVybiB3aXRoIHRoZSBtb3N0IHNraW5zLiBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NzhcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA0LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogN1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJWaWN0b3J5IERheSAtIFRoZSBTaWx2ZXIgRmxhbWVcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJDb21tZW1vcmF0aW5nIHRoZSBjb25jbHVzaW9uIG9mIHRoZSBseWNhbnRocm9waWMgcHVyZ2UgKDgzMiBZSyAtIDg4MCBZSyksIG9uIFZpY3RvcnkgRGF5IHRoZSBhZHVsdCBmYWl0aGZ1bCBvZiB0aGUgU2lsdmVyIEZsYW1lIGF0dGVuZCBzZXJtb25zIG9uIHRyaXVtcGgsIGRlZmVhdCwgYW5kIHRoZSBzb21ld2hhdCBxdWVzdGlvbmFibGUgbWV0aG9kcyB1dGlsaXplZCBieSB0aGUgdGVtcGxhcnMgZHVyaW5nIHRoZSBwdXJnZSAtIHdoaWxlIHRoZSBjaGlsZHJlbiBvZiB0aGUgZmFpdGhmdWwgYWN0IG91dCBncmVhdCBiYXR0bGVzIHdpdGggdG95IHN3b3Jkcy4gXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDc5XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogOSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogODgxLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogN1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJGYXRoZW4ncyBGYWxsIC0gU2hhcm5cIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJIb25vcmluZyB0aGUgbWVtb3J5IG9mIEZhdGhlbiwgYSBncmVhdCBoZXJvIG9mIHRoZSBTaWx2ZXIgQ3J1c2FkZSAoODMyIFlLIC0gODgwIFlLKSwgd2hvLCBpbiB0aGUgbGFzdCBkYXlzIG9mIHRoZSBwdXJnZSwgd2FzIHRvcm4gYXBhcnQgYnkgd2VyZXJhdHMgb24gdGhlIHN0cmVldHMgb2YgTm9ydGggTWFya2V0LiBGYWl0aGZ1bCBnYXRoZXIgb24gdGhpcyBkYXkgYXQgdGhlIFNocmluZSBvZiBGYXRoZW4gdGhlIE1hcnR5ciB0byBsaXN0ZW4gdG8gYSBzZXJtb24gZnJvbSB0aGUgcHJpZXN0IG9mIEhpZ2ggSG9wZS4gVGhpcyBob2xpZGF5IGlzIG9mdGVuIHVuY29tZm9ydGFibGUgYW5kIHRlbnNlIGZvciBzaGlmdGVyIGNvbW11bml0aWVzIGluIFNoYXJuLiBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0ODBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyNSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogODgxLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogN1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJCb2xkcmVpJ3MgRmVhc3QgLSBTaGFybiBhbmQgVGhlIFNvdmVyZWlnbiBIb3N0XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiQSBmZWFzdCBvZiBjb21tdW5pdHkgaW4gdGhlIG5hbWUgb2YgQm9sZHJlaSwgZXh0cmF2YWdhbnQgcGFydGllcyBhcmUgb2Z0ZW4gaGVsZCBvbiB0aGlzIGhvbGlkYXkgYW5kIGl0IGhhcyBhbHNvIGJlY29tZSB0aGUgdHJhZGl0aW9uYWwgZGF5IGZvciBlbGVjdGlvbnMuIFxcblxcbkluIFNoYXJuLCBhIGdyZWF0IGZlYXN0IGlzIGhlbGQgYXQgdGhlIFBhdmlsaW9uIG9mIHRoZSBIb3N0IHdpdGggZ29vZHMgYW5kIHNlcnZpY2VzIGRvbmF0ZWRcdTAwQTAgZnJvbSBsb2NhbCBtZXJjaGFudHMsIGFzIHdlbGwgYXMgSG91c2UgR2hhbGxhbmRhLiBNYW55IGdyYW5kIHBhcnRpZXMsIHNvbWUgcXVpdGUgYXN0b25pc2hpbmcgaW4gdGhlaXIgb3B1bGVuY2UsIGFyZSBob3N0ZWQgYnkgdGhlIHdlYWx0aGllc3QgbWVtYmVycyBvZiB2YXJ5aW5nIGRpc3RyaWN0cyAtIG9mdGVuIGluIGNvbXBldGl0aW9uIHdpdGggb25lIGFub3RoZXIgZm9yIHNvY2lhbCBzdGFuZGluZy4gXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDgxXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogOSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiVGhlIEFzY2Vuc2lvbiAtIFNoYXJuXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiRWFjaCB5ZWFyIG9uIFRoZSBBc2NlbnNpb24sIGZvbGxvd2VycyByZWFmZmlybSB0aGVpciBmYWl0aCBhbmQgZ2l2ZSB0aGFua3MgYXMgd2VsbCBhcyBhdHRlbmQgYmxlc3NpbmcgY2VyZW1vbmllcyBhdCB0ZW1wbGVzIHRocm91Z2hvdXQgdGhlIGNpdHkgLSB0aGUgZ3JhbmRlc3Qgb2Ygd2hpY2ggb2NjdXJzIGF0IHRoZSBDYXRoZWRyYWwgb2YgdGhlIENsZWFuc2luZyBGbGFtZS4gQWxsIG9mIHRoaXMgaXMgdG8gaG9ub3IgdGhlIHNhY3JpZmljZSBvZiBUaXJhIE1pcm9uLCB0aGUgVm9pY2Ugb2YgdGhlIEZsYW1lLCB3aXRob3V0IHdoaWNoIHRoZXJlIHdvdWxkIGJlIG5vIENodXJjaCBvZiB0aGUgU2lsdmVyIEZsYW1lLiBDb250cmlidXRpb25zIHRvIHRoZWlyIGNvbW11bml0eSBvbiB0aGlzIGRheSBhcmUgYSBoaWdoIHByaW9yaXR5IGZvciB0aGUgZmFpdGhmdWwuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDgyXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiV2lsZG5pZ2h0IC0gU2hhcm5cIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJXaXRoIHRoZSBUaGUgRnVyeSAodGhlIFNvdmVyZWlnbiBvZiBQYXNzaW9uIGFuZCBNYWRuZXNzKSByZWFjaGluZyB0aGUgaGVpZ2h0IG9mIGhlciBwb3dlciBvbiB0aGlzIG5pZ2h0LCBwZW9wbGUgZmluZCBpdCBkaWZmaWN1bHQgdG8gY29udHJvbCBvciByZXN0cmFpbiB0aGVpciBpbXB1bHNlcyAtIG9uY2UgdGhlIHN1biBzZXRzLCBwdWJsaWMgcmV2ZWxyeSBpbiB0aGUgc3RyZWV0cyBjbGltYnMgdG8gam95b3VzIG9yLCBhbGwgdG9vIG9mdGVuLCBkYW5nZXJvdXMgbGV2ZWxzLCBjYWxtaW5nIG9ubHkgYXMgdGhlIHN1biByaXNlcyBvbiB0aGUgZm9sbG93aW5nIG1vcm5pbmcuIFwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ4M1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDE4LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogOVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTYWludCBWb2x0cm9zJ3MgRGF5IC0gVGhlIFNpbHZlciBGbGFtZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRob3VnaCBvbmUgb2YgdGhlIGxlYXN0IGhpZ2ggaG9seSBkYXlzLCBpdCBpcyBtYXJrZWQgYnkgYnJpZWYgcHJheWVycyBhbmQgY2h1cmNoIHNlcnZpY2VzIGluIHRoZSBob25vciBvZiB0aGUgYmlydGggb2YgU2FpbnQgVm9sdHJvcyAtIHRoZSBmaXJzdCBwYWxhZGluIGNhbGxlZCB0byBvbmx5IHNlcnZlIHRoZSBTaWx2ZXIgRmxhbWUuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDg0XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjUsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlRocm9uZWhvbGQgLSBTaGFyblwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk9uIHRoaXMgZGF5IGluIDk5NiwgdGhlIFRyZWF0eSBvZiBUaHJvbmVob2xkIHdhcyBzaWduZWQsIGZvcm1hbGx5IGVuZGluZyB0aGUgTGFzdCBXYXIuIEFubnVhbCBjZWxlYnJhdG9yeSBmZWFzdHMgYXJlIGhlbGQgdGhyb3VnaG91dCB0aGUgRml2ZSBOYXRpb25zIHRvIG1hcmsgdGhpcyBhdXNwaWNpb3VzIGFuZCBsb25nLWF3YWl0ZWQgZXZlbnQuIFwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ4NVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDExLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiA5OTcsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJSYW1wYXJ0aWRlIC0gVGhlIFNpbHZlciBGbGFtZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkluIGFjY29yZGFuY2Ugd2l0aCBzY3JpcHR1cmUsIG9uIHRoaXMgZGF5IHRoZSBQdXJpZmllZCBzdGVlbCB0aGVtc2VsdmVzIGFnYWluc3Qgd2lja2VkbmVzcywgYm90aCB3aXRob3V0IGFuZCB3aXRoaW4sIHRocm91Z2ggcmVwZW50YW5jZSBhbmQgZmFzdGluZy4gQ2hpbGRyZW4sIGVsZGVybHksIGFuZCB0aGUgc2ljayBhcmUgcmVxdWlyZWQgb25seSB0byBnaXZlIHVwIHRoZWlyIGZhdm9yaXRlIGZvb2RzIGZvciB0aGUgZGF5LiBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0ODZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyNCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDEwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkxvbmcgU2hhZG93cyAtIFNoYXJuXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiQXMgZGFyayBtYWdpYyBkb21pbmF0ZXMgb3ZlciB0aGVzZSB0aHJlZSBkYXlzIG9mIHRoZSBMb25nIFNoYWRvd3MsIHRoZSBteXRoIG9mIFNvdmVyZWlnbiBMb3JkIEF1cmVvbidzIHN0b2xlbiBzaGFkb3cgaXMgZm9yZWZyb250IGluIHRoZSBtaW5kcyBvZiB0aGUgcGVvcGxlLiBNb3N0IHdpbGwgc3BlbmQgdGhlc2UgZGF5cyBpbmRvb3JzIGh1ZGRsZWQgYXJvdW5kIHRoZSB3YXJtdGggb2YgYSBmaXJlLCBidXQgdGhvc2UgZmV3IHdobyB3b3JzaGlwIHRoZSBkYXJrIGRlaXR5IHVzZSB0aGlzIHRpbWUgdG8gcHJleSB1cG9uIHRoZSB3ZWFrIGFuZCB0aGUgZm9vbGlzaC4gXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDg3XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjYsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJLaHliZXJzZWYgLSBUaGUgU2lsdmVyIEZsYW1lXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgICdPcmlnaW5hbGx5IGNhbGxlZCBLaHliZXJcXCdzIEV2ZSwgdGhlIFB1cmlmaWVkIHNwZW5kIHRoZSBuaWdodCBpbiBpbnRlbnNlIHByYXllciBhbmQgc3Bpcml0dWFsIHZpZ2lsYW5jZSBhZ2FpbnN0IHRoZSwgYWNjb3JkaW5nIHRvIHNjcmlwdHVyZSwgXCJ0aGlubmluZyBvZiB0aGUgYm9uZHMgdGhhdCBob2xkIHRoZSBkZW1vbiBsb3JkcyBpbiBLaHliZXJcIiBiZXR3ZWVuIG5vdyAodGhlIGJlZ2lubmluZyBvZiB3aW50ZXIpIGFuZCB0aGUgc29sc3RpY2UuIFF1ZXN0cyBhbmQgY3J1c2FkZXMgb2Z0ZW4gYmVnaW4gb24gS2h5YmVyc2VmLiAnLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ4OFwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDI3LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU3ByaW5nIEVxdWlub3hcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgc3ByaW5nIGVxdWlub3ggaXMgd2hlbiB0aGUgZGF5IGFuZCB0aGUgbmlnaHQgYXJlIGVxdWFsbHkgYXMgbG9uZywgYW5kIGFyZSBnZXR0aW5nIGxvbmdlci5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0ODlcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTdW1tZXIgU29sc3RpY2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJcXHRBdCB0aGUgc3VtbWVyIHNvbHN0aWNlLCB0aGUgU3VuIHRyYXZlbHMgdGhlIGxvbmdlc3QgcGF0aCB0aHJvdWdoIHRoZSBza3ksIGFuZCB0aGF0IGRheSB0aGVyZWZvcmUgaGFzIHRoZSBtb3N0IGRheWxpZ2h0LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ5MFwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkF1dHVtbiBFcXVpbm94XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhlIGF1dHVtbiBlcXVpbm94IGlzIHdoZW4gdGhlIGRheSBhbmQgdGhlIG5pZ2h0IGFyZSBlcXVhbGx5IGFzIGxvbmcsIGFuZCBhcmUgZ2V0dGluZyBzaG9ydGVyLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ5MVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBpZDogbnVsbCxcbiAgICAgICAgY2F0ZWdvcmllczogW11cbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJCYXJvdmlhbiBDYWxlbmRhclwiLFxuICAgICAgICBkZXNjcmlwdGlvbjogXCJDYWxlbmRhciBvZiB0aGUgcmVhbG0gb2YgQmFyb3ZpYSwgaG9tZSBvZiBTdHJhaGQuXCIsXG4gICAgICAgIHN0YXRpYzoge1xuICAgICAgICAgICAgZGlzcGxheURheU51bWJlcjogZmFsc2UsXG4gICAgICAgICAgICBmaXJzdFdlZWtEYXk6IDAsXG4gICAgICAgICAgICBpbmNyZW1lbnREYXk6IGZhbHNlLFxuICAgICAgICAgICAgZGlzcGxheU1vb25zOiB0cnVlLFxuICAgICAgICAgICAgb3ZlcmZsb3c6IHRydWUsXG4gICAgICAgICAgICB3ZWVrZGF5czogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNb25kYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNmExODNiMDhjOGViXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUdWVzZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzg5MmI3YjdhNWFlOVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiV2VkbmVzZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzZiYjk4ODk5YmE2OFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVGh1cnNkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNGE3YjY4M2FlYTE5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJGcmlkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNzg2OTBhMDk5Yjg5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTYXR1cmRheVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9iYTViMDliYTVhODlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlN1bmRheVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8yOWI5MGFjYWVhZDlcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBtb250aHM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiMXN0IE1vb25cIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF83YjQ5NzhhYjU4MWFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIjJuZCBNb29uXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfY2I5OWZiYjkzOTViXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCIzcmQgTW9vblwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzc5ODgxYTg5Y2IxOFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiNHRoIE1vb25cIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMwLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF81YjlhOGEzOTc5MDhcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIjV0aCBNb29uXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZjgzOTlhYjgwODE4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCI2dGggTW9vblwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzNhYzg0YTdiYzg2OVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiN3RoIE1vb25cIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9lOThiYzg2YmM4MDlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIjh0aCBNb29uXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfODllYTc4Y2E1OTg4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCI5dGggTW9vblwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzc5OGEzYjk5MGE0YlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiMTB0aCBNb29uXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfM2E5OTk5ZThlYjU5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCIxMXRoIE1vb25cIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMwLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9kYjM5MzgzYjk5MGFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIjEydGggTW9vblwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzFiZmEzYjE4MGE0OFwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG1vb25zOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1vb25cIixcbiAgICAgICAgICAgICAgICAgICAgY3ljbGU6IDI5LjUzMDU4ODg1MyxcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAxMC4yNDk1MyxcbiAgICAgICAgICAgICAgICAgICAgZmFjZUNvbG9yOiBcIiNmZmZmZmZcIixcbiAgICAgICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6IFwiIzAwMDAwMFwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9lOThiM2E4YWI4ZGFcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBsZWFwRGF5czogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJMZWFwIERheVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImxlYXBkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWw6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZ25vcmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2x1c2l2ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWw6IDQwMFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZ25vcmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2x1c2l2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDogMTAwXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlnbm9yZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhjbHVzaXZlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDogNFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHRpbWVzcGFuOiAxLFxuICAgICAgICAgICAgICAgICAgICBpbnRlcmNhbGFyeTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzZhMjhkYmI4MWE0OFwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGVyYXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQmVmb3JlIENocmlzdFwiLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBcIlllYXIge3t5ZWFyfX0gLSB7e2VyYV9uYW1lfX1cIixcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IC05MDAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGg6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXk6IDBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkFubm8gRG9taW5pXCIsXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IFwiWWVhciB7e3llYXJ9fSAtIHt7ZXJhX25hbWV9fVwiLFxuICAgICAgICAgICAgICAgICAgICBzdGFydDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiAxXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIGN1cnJlbnQ6IHtcbiAgICAgICAgICAgIHllYXI6IDczNSxcbiAgICAgICAgICAgIGRheTogMSxcbiAgICAgICAgICAgIG1vbnRoOiAwXG4gICAgICAgIH0sXG4gICAgICAgIGV2ZW50czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiV2ludGVyIFNvbHN0aWNlXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhlIFdpbnRlciBTb2xzdGljZSBpcyB0aGUgZGF5IG9mIHRoZSB5ZWFyIHdpdGggdGhlIGxlYXN0IHRpbWUgYmV0d2VlbiBzdW5yaXNlIGFuZCBzdW5zZXQuIE1hbnkgd2VzdGVybiBjdWx0dXJlcyBjb25zaWRlciBpdCB0aGUgb2ZmaWNpYWwgc3RhcnQgb2Ygd2ludGVyLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ1NVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJuYXR1cmFsLWV2ZW50XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTdW1tZXIgU29sc3RpY2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgU3VtbWVyIFNvbHN0aWNlIGlzIHRoZSBkYXkgb2YgdGhlIHllYXIgd2l0aCB0aGUgbW9zdCB0aW1lIGJldHdlZW4gXFxuc3VucmlzZSBhbmQgc3Vuc2V0LiBNYW55IHdlc3Rlcm4gY3VsdHVyZXMgY29uc2lkZXIgaXQgdGhlIG9mZmljaWFsIHN0YXJ0XFxuIG9mIHN1bW1lci5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NTZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwibmF0dXJhbC1ldmVudFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU3ByaW5nIEVxdWlub3hcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgU3ByaW5nIEVxdWlub3gsXFxuYWxzbyBjYWxsZWQgdGhlIFZlcm5hbCBFcXVpbm94LCBpcyB0aGUgZGF5IGJldHdlZW4gdGhlIHdpbnRlciBhbmRcXG5zdW1tZXIgc29sc3RpY2VzIHdoZXJlIHRoZSBkYXkgaXMgdGhlIGV4YWN0IHNhbWUgbGVuZ3RoIGFzIHRoZSBuaWdodC5cXG5NYW55IHdlc3Rlcm4gY3VsdHVyZXMgY29uc2lkZXIgaXQgdGhlIG9mZmljaWFsIHN0YXJ0IG9mIFNwcmluZy5cXG5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NTdcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwibmF0dXJhbC1ldmVudFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQXV0dW1uYWwgRXF1aW5veFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSBBdXR1bW5hbCBFcXVpbm94LFxcbmFsc28gY2FsbGVkIHRoZSBGYWxsIEVxdWlub3gsIGlzIHRoZSBtaWRwb2ludCBiZXR3ZWVuIHRoZSBzdW1tZXIgYW5kXFxud2ludGVyIHNvbHN0aWNlcywgd2hlcmUgdGhlIGRheSBpcyB0aGUgZXhhY3Qgc2FtZSBsZW5ndGggYXMgdGhlIG5pZ2h0Llxcbk1hbnkgd2VzdGVybiBjdWx0dXJlcyBjb25zaWRlciBpdCB0aGUgb2ZmaWNpYWwgc3RhcnQgb2YgQXV0dW1uLlxcblwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ1OFwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk5ldyBZZWFyJ3MgRGF5XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiTmV3IFllYXIncyBkYXkgbWFya3MgdGhlIHN0YXJ0IG9mIGEgbmV3IHllYXIuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDU5XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiUGFzY2hhbCBGdWxsIE1vb25cIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgZmlyc3QgZnVsbCBtb29uIGFmdGVyIG1hcmNoIDIxc3QsIHdoaWNoIGlzIGNvbnNpZGVyZWQgdGhlIGZpeGVkIGRhdGUgZm9yIHRoZSBzcHJpbmcgZXF1aW5veC5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NjBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwibmF0dXJhbC1ldmVudFwiXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIGlkOiBudWxsLFxuICAgICAgICBjYXRlZ29yaWVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJOYXR1cmFsIEV2ZW50XCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwibmF0dXJhbC1ldmVudFwiLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiM5ZTlkMjRcIlxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiRXhhbmRyaWFuIENhbGVuZGFyXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIkNhbGVuZGFyIG9mIHRoZSB3b3JsZCBvZiBXaWxkZW1vdW50LlwiLFxuICAgICAgICBzdGF0aWM6IHtcbiAgICAgICAgICAgIGRpc3BsYXlEYXlOdW1iZXI6IGZhbHNlLFxuICAgICAgICAgICAgZmlyc3RXZWVrRGF5OiAyLFxuICAgICAgICAgICAgaW5jcmVtZW50RGF5OiBmYWxzZSxcbiAgICAgICAgICAgIGRpc3BsYXlNb29uczogdHJ1ZSxcbiAgICAgICAgICAgIG92ZXJmbG93OiB0cnVlLFxuICAgICAgICAgICAgd2Vla2RheXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTWlyZXNlblwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8zYjM4YWFhODFiY2FcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkdyaXNzZW5cIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZGE2YjE5ODgyYmFhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJXaGVsc2VuXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2E5Y2FlOGY4OGI5OFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQ29udGhzZW5cIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZTg3ODU5ZWI1YWFhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJGb2xzZW5cIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNTkxODBhYmJlYThhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJZdWxpc2VuXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzk4MDgyYmQ4ZDhjYVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRGEnbGV5c2VuXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2RhNGJhOTJiMjk5YVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG1vbnRoczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJIb3Jpc2FsXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyOSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZTg5YTRhYjk5OTViXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNaXN1dGhhclwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzE4Yjg4OTRiYWI3YlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRHVhbGFoZWlcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMwLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8wYTliMjlmOGY4ZGJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlRodW5zaGVlclwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzEsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzZhOGE4YTViZWE1YlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVW5uZGlsYXJcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDI4LFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9iODI5NWJkYmNhZmFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkJydXNzZW5kYXJcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9jOTJhNDg5YmI5MDlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlN5ZGVuc3RhclwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzdiNDhiYjFiMGE0YVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRmVzc3VyYW5cIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDI5LFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8yODk4NThjOTc4NDlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlF1ZW4ncGlsbGFyXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyNyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZjhhYmQ5YTg2YWE5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJDdWVyc2FhclwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMjksXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzdhYmE1OWZhMmI2OVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRHVzY2FyXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNTgxOWY4NmI5OWNiXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbW9vbnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQ2F0aGFcIixcbiAgICAgICAgICAgICAgICAgICAgY3ljbGU6IDMzLFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IDcsXG4gICAgICAgICAgICAgICAgICAgIGZhY2VDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiBcIiMyOTJiNGFcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfMGFiOTI5MDkyYjViXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJSdWlkdXNcIixcbiAgICAgICAgICAgICAgICAgICAgY3ljbGU6IDMyOCxcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiA4MCxcbiAgICAgICAgICAgICAgICAgICAgZmFjZUNvbG9yOiBcIiNmZjYxNjFcIixcbiAgICAgICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6IFwiIzFmMWYxZlwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9iOTc4M2FjODE4ZTlcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBsZWFwRGF5czogW10sXG4gICAgICAgICAgICBlcmFzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlRoZSBGb3VuZGluZ1wiLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBcIlllYXIge3t5ZWFyfX0gLSB7e2VyYV9uYW1lfX1cIixcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb250aDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheTogMVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQWdlIG9mIEFyY2FudW1cIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogXCJZZWFyIHt7eWVhcn19IC0ge3tlcmFfbmFtZX19XCIsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiAtMTUwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiAxXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUaGUgQ2FsYW1pdHlcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogXCJZZWFyIHt7eWVhcn19IC0ge3tlcmFfbmFtZX19XCIsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiAtNjY1LFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGg6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXk6IDFcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlBvc3QtRGl2ZXJnZW5jZVwiLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBcIlllYXIge3t5ZWFyfX0gUC5ELlwiLFxuICAgICAgICAgICAgICAgICAgICBzdGFydDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiAxXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIGN1cnJlbnQ6IHtcbiAgICAgICAgICAgIGRheTogMSxcbiAgICAgICAgICAgIG1vbnRoOiAwLFxuICAgICAgICAgICAgeWVhcjogODM2XG4gICAgICAgIH0sXG4gICAgICAgIGV2ZW50czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiU3ByaW5nIEVxdWlub3hcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgc3ByaW5nIGVxdWlub3ggaXMgd2hlbiB0aGUgZGF5IGFuZCB0aGUgbmlnaHQgYXJlIGVxdWFsbHkgYXMgbG9uZywgYW5kIGFyZSBnZXR0aW5nIGxvbmdlci5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0MzBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTdW1tZXIgU29sc3RpY2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJcXHRBdCB0aGUgc3VtbWVyIHNvbHN0aWNlLCB0aGUgU3VuIHRyYXZlbHMgdGhlIGxvbmdlc3QgcGF0aCB0aHJvdWdoIHRoZSBza3ksIGFuZCB0aGF0IGRheSB0aGVyZWZvcmUgaGFzIHRoZSBtb3N0IGRheWxpZ2h0LlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQzMVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkF1dHVtbiBFcXVpbm94XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhlIGF1dHVtbiBlcXVpbm94IGlzIHdoZW4gdGhlIGRheSBhbmQgdGhlIG5pZ2h0IGFyZSBlcXVhbGx5IGFzIGxvbmcsIGFuZCBhcmUgZ2V0dGluZyBzaG9ydGVyLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQzMlwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldpbnRlciBTb2xzdGljZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSB3aW50ZXIgc29sc3RpY2UgbWFya3MgdGhlIHNob3J0ZXN0IGRheSBhbmQgbG9uZ2VzdCBuaWdodCBvZiB0aGUgeWVhciwgd2hlbiB0aGUgc3VuIGlzIGF0IGl0cyBsb3dlc3QgYXJjIGluIHRoZSBza3kuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDMzXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTmV3IERhd25cIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgZmlyc3QgZGF5IG9mIHRoZSBuZXcgeWVhciBpcyBhbHNvIHRoZSBob2x5IGRheSBvZiB0aGUgQ2hhbmdlYnJpbmdlciwgYXMgdGhlIG9sZCB5ZWFyIGdpdmVzIHdheSB0byBhIG5ldyBwYXRoLlxcblxcbkluIFRhbCdEb3JlaSwgRW1vbiBjZWxlYnJhdGVzIE5ldyBEYXduIHdpdGggYSBncmFuZCBtaWRuaWdodCBmZWFzdCwgd2hpY2ggY29tbW9ubHkgZmVhdHVyZXMgYSBzaG9ydCBwbGF5IGNlbGVicmF0aW5nIHRoZSBjaGFuZ2VzIHdpdG5lc3NlZCBpbiB0aGUgcGFzdCB5ZWFyLlxcblxcbk9uIHRoZSBNZW5hZ2VyaWUgQ29hc3QsIHBlb3BsZSBjZWxlYnJhdGUgYnkgaGF2aW5nIGEgZmVhc3Qgb24gdGhlIHNob3JlIGF0IGR1c2sgdG8gd2F0Y2ggdGhlIHN1bnNldC4gVGhleSBmZWFzdCBhbmQgZGlzY3VzcyB0aGVpciBob3BlcyBmb3IgdGhlIG5ldyB5ZWFyIHVudGlsIHRoZSBzdW4gcmlzZXMuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDM0XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInJlbGlnaW91cy1ob2xpZGF5c1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSGlsbHNnb2xkXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhpcyBob2xpZGF5IGlzIHVwIHRvIHRoZSBjYWxlbmRhciBvd25lciB0byBkZWNpZGUgd2hhdCBpdCBpcyBmb3IhIDopXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDM1XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjcsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJzZWN1bGFyLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJEYXkgb2YgQ2hhbGxlbmdpbmdcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgaG9seSBkYXkgb2YgdGhlIFN0b3JtbG9yZCBpcyBvbmUgb2YgdGhlIG1vc3QgcmF1Y291cyBob2xpZGF5cyBpbiBFbW9uLiBUaG91c2FuZHMgb2Ygc3BlY3RhdG9ycyBhdHRlbmQgdGhlIGFubnVhbCBHb2RzYnJhd2wsIHdoaWNoIGlzIGhlbGQgaW4gdGhlIGZpZ2h0aW5nIHJpbmcgd2l0aGluIHRoZSBUZW1wbGUgb2YgdGhlIFN0b3JtbG9yZC4gVGhlIHBlb3BsZSByb290IGZvciB0aGVpciBkZWl0eSdzIGZhdm9yZWQgY2hhbXBpb24sIGFuZCB0aGVyZSBpcyBhIGZpZXJjZSAoeWV0IGZyaWVuZGx5KSByaXZhbHJ5IGJldHdlZW4gdGhlIENoYW1waW9uIG9mIHRoZSBTdG9ybWxvcmQgYW5kIHRoZSBDaGFtcGlvbiBvZiB0aGUgUGxhdGludW0gRHJhZ29uLiBUaGUgd2lubmVyIGVhcm5zIHRoZSB0aXRsZSBvZiBcXFwiU3VwcmVtZSBDaGFtcGlvblxcXCIgZm9yIGFuIGVudGlyZSB5ZWFyLlxcblxcblRoZSBEYXkgb2YgQ2hhbGxlbmdpbmcgaXMgb25lIG9mIHRoZSBtb3N0IHJhdWNvdXMgaG9saWRheXMgaW4gUG9ydCBEYW1hbGksIGFuZCB0aG91c2FuZHMgb2Ygc3BlY3RhdG9ycyBhdHRlbmQgdGhlIGFubnVhbCBHb2RzYnJhd2wgaGVsZCBpbiB0aGUgVGVtcGxlIG9mXHUwMEEwS29yZCB0byByb290IGZvciB0aGVpciBmYXZvcmVkIGRlaXR5J3MgY2hhbXBpb24sIHBhcnRpY3VsYXJseSB0aGUgY2hvc2VuIGNoYW1waW9ucyBvZiB0aGUgU3Rvcm0gTG9yZCBhbmQgdGhlXHUwMEEwQWxsLUhhbW1lci5cdTAwQTBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0MzZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA3LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwicmVsaWdpb3VzLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJSZW5ld2FsIEZlc3RpdmFsXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiU3ByaW5nIGJlZ2lucyBlYXJseSBpbiB0aGUgbW9udGggb2YgRHVhbGFoZWksIG9mZmljaWFsbHkgc3RhcnRpbmcgb24gdGhlIDEzdGggd2l0aCB0aGUgUmVuZXdhbCBGZXN0aXZhbC5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0MzdcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxMyxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInNlY3VsYXItaG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldpbGQncyBHcmFuZGV1clwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRob3VnaCB0aGUgQXJjaGVhcnQgaXMgdGhlIGdvZCBvZiBzcHJpbmcsIHRoZSBwZWFrIG9mIHRoZSBzcHJpbmcgc2Vhc29uIGlzIHRoZSBob2x5IGRheSBvZiB0aGUgV2lsZG1vdGhlci5cXG5cXG5UaGUgcGVvcGxlIGluIHRoZSBzb3V0aGVybiB3aWxkcyBvZiBUYWwnRG9yZWkgY2VsZWJyYXRlIHRoZSBXaWxkbW90aGVyJ3Mgc3RyZW5ndGggYnkgam91cm5leWluZyB0byBhIHBsYWNlIG9mIGdyZWF0IG5hdHVyYWwgYmVhdXR5LiBUaGlzIGNvdWxkIGJlIHRoZSB0b3Agb2YgYSBtb3VudGFpbm91cyB3YXRlcmZhbGwsIHRoZSBjZW50ZXIgb2YgYSBkZXNlcnQsIG9yIGV2ZW4gYW4gb2xkIGFuZCBwZWFjZWZ1bCBjaXR5IHBhcmsgKHN1Y2ggYXMgQXphbGVhIFN0cmVldCBQYXJrIGluIEVtb24pLiBUaG91Z2ggRW1vbiByYXJlbHkgY2VsZWJyYXRlcyBXaWxkJ3MgR3JhbmRldXIsIHRoZSBmZXcgd2hvIGRvIHdpbGwgcGxhbnQgdHJlZXMgaW4gb2JzZXJ2YW5jZSBvZiB0aGUgaG9saWRheS5cXG5cXG5UaGUgcGVvcGxlIG9mIHRoZSBNZW5hZ2VyaWUgQ29hc3Qgc2V0IGFzaWRlIHRoaXMgZGF5IHRvIHNhaWwgZm9yIG5vIHJlYXNvbiBvdGhlciB0aGFuIHRoZSBwbGVhc3VyZSBvZiBvYnNlcnZpbmcgdGhlIG5hdHVyYWwgYmVhdXR5IG9mIHRoZWlyIHN1cnJvdW5kaW5ncy4gVGhvc2Ugd2hvIHN0aWxsIHBhcnRha2UgaW4gZWxlbWVudHMgb2YgS2knTmF1IGN1bHR1cmUgdGFrZSB0aGlzIGRheSB0byBhcHByZWNpYXRlIHRoZSBmcnVpdHMgYW5kIGZvb2RzIGdyYW50ZWQgYnkgdGhlIHNlYSwgbGVhdmluZyBvZmZlcmluZ3Mgb2YgZGVsaWNhY2llcyBhbmQgc21hbGwgaGFuZG1hZGUgY3JhZnRzIGF0IHRlbXBvcmFyeSBhbHRhcnMgb2YgdHdpc3RlZCByb290cyBhbmQgZ3Jhc3Nlcy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0MzhcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyMCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInJlbGlnaW91cy1ob2xpZGF5c1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSGFydmVzdCdzIFJpc2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGlzIGhvbGlkYXkgaXMgdXAgdG8gdGhlIGNhbGVuZGFyIG93bmVyIHRvIGRlY2lkZSB3aGF0IGl0IGlzIGZvciEgOilcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0MzlcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxMSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInNlY3VsYXItaG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1lcnJ5ZnJvbmQncyBEYXlcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGlzIGhvbGlkYXkgaXMgdXAgdG8gdGhlIGNhbGVuZGFyIG93bmVyIHRvIGRlY2lkZSB3aGF0IGl0IGlzIGZvciEgOilcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NDBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAzMSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInNlY3VsYXItaG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkRlZXAgU29sYWNlXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiTW9yYWRpbidzIGhvbHkgZGF5IGlzIERlZXAgU29sYWNlLCB3aGljaCBpcyBjZWxlYnJhdGVkIG9uIHRoZSBlaWdodGVlbnRoIGRheSBvZiB0aGUgZmlmdGggbW9udGguIEVzcGVjaWFsbHkgZGV2b3V0IGZvbGxvd2VycyBvZiB0aGUgQWxsLUhhbW1lciBzcGVuZCB0aGUgZGF5IGluIGlzb2xhdGlvbiwgbWVkaXRhdGluZyBvbiB0aGUgbWVhbmluZyBvZiBmYW1pbHkgYW5kIGhvdyB0aGV5IG1heSBiZSBiZXR0ZXIgbW90aGVycywgZmF0aGVycywgc2libGluZ3MsIGFuZCBjaGlsZHJlbi5cXG5cXG5UaGUgZHdhcnZlbiBjb21tdW5pdGllcyBhY3Jvc3MgRXhhbmRyaWEsIHN1Y2ggYXMgdGhlIG9uZXMgaW4gR3JpbWdvbGlyIGFuZCBLcmFnaGFtbWVyLCBjZWxlYnJhdGUgd2l0aCBhIGZ1bGwgZGF5IG9mIGZlYXN0aW5nIGFuZCBkcmlua2luZy5cdTAwQTBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NDFcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxOCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDRcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInJlbGlnaW91cy1ob2xpZGF5c1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiWmVuaXRoXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiU3VtbWVyIGJlZ2lucyBpbiB0aGUgbWlkZGxlIG9mIFVubmRpbGFyLCBvZmZpY2lhbGx5IHN0YXJ0aW5nIGF0IG5vb24gb24gdGhlIDI2dGggZGF5IGtub3duIGFzIHRoZSBaZW5pdGguXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDQyXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjYsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA0XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJzZWN1bGFyLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJBcnRpc2FuJ3MgRmFpcmVcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGlzIGhvbGlkYXkgaXMgdXAgdG8gdGhlIGNhbGVuZGFyIG93bmVyIHRvIGRlY2lkZSB3aGF0IGl0IGlzIGZvciEgOilcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NDNcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxNSxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInNlY3VsYXItaG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkVsdmVuZGF3blwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkNvcmVsbG9uJ3MgaG9seSBkYXkgaXMgY2FsbGVkIEVsdmVuZGF3bixcXG5vciBNaWRzdW1tZXIuIEl0IGlzIGNlbGVicmF0ZWQgb24gdGhlIHR3ZW50aWV0aCBkYXlcXG5vZiB0aGUgc2l4dGggbW9udGgsIGFuZCBjb21tZW1vcmF0ZXMgdGhlIGVsdmVzJyBmaXJzdFxcbmVtZXJnZW5jZSBmcm9tIHRoZSBGZXl3aWxkLlxcblxcbkluIFN5bmdvcm4sIHRoZSBFbHZlcyBvcGVuIHNtYWxsIGRvb3J3YXlzIGludG8gdGhlIEZleXdpbGQgYW5kIGNlbGVicmF0ZSBhbG9uZ3NpZGUgdGhlIHdpbGQgZmV5IHdpdGggdW5jaGFyYWN0ZXJpc3RpYyB2aWdvci5cXG5cXG5UaG91Z2ggdGhlIER3ZW5kYWxpYW5cXG5FbXBpcmUgZG9lc24ndCBwcm9tb3RlIHRoZSB3b3JzaGlwIG9mIHRoZSBBcmNoIEhlYXJ0LFxcbnRoZSBlbHZlcyBvZiBCeXNhZXMgVHlsIHF1aWV0bHkgY2VsZWJyYXRlIGluIHByaXZhdGUgYnlcXG5vcGVuaW5nIHNtYWxsIGRvb3JzIHRvIHRoZSBGZXl3aWxkIGFuZCBoYXZpbmcgYSBsaXR0bGVcXG5tb3JlIHdpbmUgdGhhbiB1c3VhbC5cdTAwQTBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NDRcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyMCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInJlbGlnaW91cy1ob2xpZGF5c1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSGlnaHN1bW1lclwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoZSBob2x5IGRheSBvZiB0aGUgRGF3bmZhdGhlciBpcyB0aGUgcGVhayBvZiB0aGUgc3VtbWVyIHNlYXNvbi5cXG5cXG5FbW9uIGNlbGVicmF0ZXMgd2l0aCBhbiBlbnRpcmUgd2VlayBvZiBnaWZ0LWdpdmluZyBhbmQgZmVhc3RpbmcsIGVuZGluZyBhdCBtaWRuaWdodCBvbiB0aGUgMjFzdCBvZiBTeWRlbnN0YXIgKHRoZSBhbm5pdmVyc2FyeSBvZiB0aGUgQmF0dGxlIG9mIHRoZSBVbWJyYSBIaWxscywgd2hlcmUgWmFuIFRhbCdEb3JlaSBkZXRocm9uZWQgVHJpc3QgRHJhc3NpZykuXFxuXFxuV2hpdGVzdG9uZSAod2hlcmUgdGhlIERhd25mYXRoZXIgaXMgdGhlIGNpdHkncyBwYXRyb24gZ29kKSBjZWxlYnJhdGVzIHdpdGggZ2lmdC1naXZpbmcgYW5kIGEgZmVzdGl2YWwgb2YgbGlnaHRzIGFyb3VuZCB0aGUgU3VuIFRyZWUuIER1ZSB0byB0aGUgQnJpYXJ3b29kIG9jY3VwYXRpb24sIG1vbmV5IGlzIHRoaW4sIHNvIG1vc3QgV2hpdGVzdG9uZSBmb2xrIGNob29zZSB0byByZWNvdW50IHRoZSBzbWFsbCB0aGluZ3MgdGhleSBhcmUgdGhhbmtmdWwgZm9yLCByYXRoZXIgdGhhbiBidXkgZ2lmdHMuXFxuXFxuV2hpbGUgb3RoZXIgcGFydHMgb2YgRXhhbmRyaWEgZmVhc3QsIHRoZSBEd2VuZGFsaWFuXFxuRW1waXJlIHVzZXMgdGhpcyBkYXkgYXMgYW4gb3Bwb3J0dW5pdHkgdG8gZW5saXN0IG1vcmVcXG5zb2xkaWVycyBpbiBpdHMgYXJteS4gVGhlIG1pbGl0YXJ5IGhvbGRzIGdyZWF0IGZlYXN0cyBhbmRcXG5oYW5kcyBvdXQgdG95IHNvbGRpZXJzIGFuZCBvdGhlciBwcm9wYWdhbmRhLCBlbmNvdXJhZ2luZyBwZW9wbGUgdG8gZW5saXN0IGFuZCBoZWxwIGZpZ2h0IGFnYWluc3QgdGhlIGV2aWwgdGhhdFxcbnRocmVhdGVucyB0aGUga2luZy5cdTAwQTBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NDVcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA3LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogNlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwicmVsaWdpb3VzLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJNb3JuIG9mIExhcmdlc3NlXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhpcyBob2xpZGF5IGlzIHVwIHRvIHRoZSBjYWxlbmRhciBvd25lciB0byBkZWNpZGUgd2hhdCBpdCBpcyBmb3IhIDopXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDQ2XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTQsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA2XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJzZWN1bGFyLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJIYXJ2ZXN0J3MgQ2xvc2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJBdXR1bW4gYmVnaW5zIG9uIHRoZSAzcmQgb2YgRmVzc3VyYW5cdTAwQTBhbmQgaXMgdHlwaWNhbGx5IGNlbGVicmF0ZWQgd2l0aCBmZWFzdGluZyBpbiBydXJhbCByZWdpb25zIGFuZCB3aXRoIGNhcm5pdmFscyBpbiB0aGUgY2l0aWVzLlx1MDBBMFwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ0N1wiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDMsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJzZWN1bGFyLWhvbGlkYXlzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJUaGUgSGF6ZWwgRmVzdGl2YWxcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGlzIGhvbGlkYXkgaXMgdXAgdG8gdGhlIGNhbGVuZGFyIG93bmVyIHRvIGRlY2lkZSB3aGF0IGl0IGlzIGZvciEgOilcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NDhcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxMixcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInNlY3VsYXItaG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkNpdmlsaXphdGlvbidzIERhd25cIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgTGF3IEJlYXJlcidzIGhvbHkgZGF5IGlzIENpdmlsaXphdGlvbidzXFxuRGF3biwgd2hpY2ggaXMgY2VsZWJyYXRlZCBvbiB0aGUgYXV0dW1uYWwgZXF1aW5veCxcXG51c3VhbGx5IHRoZSB0d2VudHktc2Vjb25kIGRheSBvZiB0aGUgbmludGggbW9udGguXFxuXFxuRW1vbiBjZWxlYnJhdGVzIHdpdGggYSBncmVhdCBib25maXJlIGluIHRoZSBzcXVhcmUgb2YgZWFjaCBuZWlnaGJvcmhvb2QsIGFyb3VuZCB3aGljaCBlYWNoIGNvbW11bml0eSBkYW5jZXMgYW5kIGdpdmVzIGdpZnRzLlxcblxcbkluIHRoZVxcbkR3ZW5kYWxpYW4gRW1waXJlLCBwZW9wbGUgY2VsZWJyYXRlIGJ5IGhhdmluZyBmZWFzdHMgXFxuaW4gaG9ub3Igb2YgdGhlIGxhd3Mgb2YgdGhlIER3ZW5kYWwgYmxvb2RsaW5lLiBPbmUgc2VhdFxcbmF0IGV2ZXJ5IHRhYmxlIGlzIGxlZnQgb3BlbiBmb3IgdGhlIGtpbmcsIHdobyBlYXRzIGluIHNwaXJpdFxcbndpdGggdGhlIHBlb3BsZSBoZSBydWxlcy5cdTAwQTBcIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NDlcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyMixcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInJlbGlnaW91cy1ob2xpZGF5c1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTmlnaHQgb2YgQXNjZW5zaW9uXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgIFwiVGhlIFJhdmVuIFF1ZWVuJ3MgaG9seSBkYXkgaXMgY2FsbGVkIHRoZSBOaWdodCBvZiBBc2NlbnNpb24sIGNlbGVicmF0aW5nIGhlciBhcG90aGVvc2lzLiBUaGUgYWN0dWFsIGRhdGUgb2YgdGhlIGhlciByaXNlIHRvIGRpdmluaXR5IGlzIHVuY2xlYXIsIGJ1dCB0aGUgTmlnaHQgb2YgQXNjZW5zaW9uIGlzIGNlbGVicmF0ZWQgb24gdGhlIHRoaXJ0ZWVudGggZGF5IG9mIHRoZSB0ZW50aCBtb250aC5cXG5cXG5UaG91Z2ggbW9zdCBpbiBFbW9uIHNlZSB0aGlzIGNlbGVicmF0aW9uIG9mIHRoZSBkZWFkIGFzIHVubmVydmluZyBhbmQgbWFjYWJyZSwgdGhlIGZvbGxvd2VycyBvZiB0aGUgTWF0cm9uIG9mIFJhdmVucyBiZWxpZXZlIHRoYXQgdGhlIGhvbm9yZWQgZGVhZCB3b3VsZCBwcmVmZXIgdG8gYmUgdmVuZXJhdGVkIHdpdGggY2hlZXIsIG5vdCBtaXNlcnkuXFxuXFxuV2hhdCB3YXMgb25jZSBhIG5pZ2h0IG9mIGNoZWVyeSBjZWxlYnJhdGlvbiBvZiB0aGUgZGVhZCBpbiB0aGUgRHdlbmRhbGlhbiBFbXBpcmUgaGFzIHJlY2VudGx5IGJlY29tZSBhbiBvY2Nhc2lvbiB0byBidXJuIGVmZmlnaWVzIGFuZCBkZWNyeSB0aGUgS3J5biBEeW5hc3R5IGZvciB0aGVpciB1bm5hdHVyYWwgcmVsYXRpb25zaGlwIHdpdGggZGVhdGguXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDUwXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMTMsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJyZWxpZ2lvdXMtaG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlphbidzIEN1cFwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIlRoaXMgaG9saWRheSBpcyB1cCB0byB0aGUgY2FsZW5kYXIgb3duZXIgdG8gZGVjaWRlIHdoYXQgaXQgaXMgZm9yISA6KVwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDQ1MVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDIxLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogOVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwic2VjdWxhci1ob2xpZGF5c1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQmFycmVuIEV2ZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIldpbnRlciBiZWdpbnMgb24gdGhlIDJuZCBkYXkgb2YgRHVzY2FyLCB0aGUgQmFycmVuIEV2ZSwgd2hpY2ggaXMgYSBuaWdodHRpbWUgY2VsZWJyYXRpb24gYW5kIHJlbWVtYnJhbmNlIG9mIHRob3NlIHdobyBmZWxsIGluIGJhdHRsZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NTJcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAyLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInNlY3VsYXItaG9saWRheXNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkVtYmVydGlkZVwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkJhaGFtdXQncyBob2x5IGRheSBpcyBjYWxsZWQgRW1iZXJ0aWRlLFx1MDBBMGFuZCBpcyBjZWxlYnJhdGVkIG9uIHRoZSBmaWZ0aCBkYXkgb2YgRHVzY2FyLiBUaGlzIGlzIGEgZGF5XHUwMEEwb2YgcmVtZW1icmFuY2UsIHNvbGVtbml0eSwgYW5kIHJlc3BlY3QgZm9yIHRob3NlIHdob1x1MDBBMGhhdmUgZmFsbGVuIGluIHRoZSBkZWZlbnNlIG9mIG90aGVycy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ0NTNcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiA1LFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcInJlbGlnaW91cy1ob2xpZGF5c1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiV2ludGVyJ3MgQ3Jlc3RcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGlzIGRheSBjZWxlYnJhdGVzIHRoZSBmcmVlZG9tIG9mIFRhbCdEb3JlaSBmcm9tIEVycmV2b24gdGhlIFJpbWVsb3JkLiBJdCBpcyB0aGUgcGVhayBvZiB0aGUgd2ludGVyIHNlYXNvbiwgc28gZGV2b3V0IGZvbGxvd2VycyBvZiB0aGUgTWF0cm9uIG9mIFJhdmVucyAoYXMgdGhlIGdvZGRlc3Mgb2Ygd2ludGVyKSBjb25zaWRlciBpdCB0byBiZSBvbmUgb2YgaGVyIGhvbHkgZGF5cy5cXG5cXG5Ib3dldmVyLCBpbiBtb3N0IG9mIHRoZSBsYW5kLCBwZW9wbGUgc2VlIFdpbnRlcidzIENyZXN0IGFzIGEgc2VjdWxhciBob2xpZGF5LCBvZnRlbiBjZWxlYnJhdGVkIHdpdGggb21uaXByZXNlbnQgbXVzaWMgaW4gcHVibGljIGFyZWFzLCBsYXZpc2ggZ2lmdC1naXZpbmcgdG8gcmVsYXRpdmVzIGFuZCBsb3ZlZCBvbmVzLCBhbmQgdGhlIGN1dHRpbmcgYW5kIGRlY29yYXRpbmcgb2YgdHJlZXMgcGxhY2VkIGluZG9vcnMuIFRoZSBTdW4gVHJlZSBpbiBXaGl0ZXN0b25lIGlzIG9mdGVuIGRlY29yYXRlZCB3aXRoIGxpZ2h0cyBhbmQgb3RoZXIgYmF1YmxlcyBmb3IgV2ludGVyJ3MgQ3Jlc3QuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NDU0XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMjAsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiAxMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwic2VjdWxhci1ob2xpZGF5c1wiXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIGlkOiBudWxsLFxuICAgICAgICBjYXRlZ29yaWVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJSZWxpZ2lvdXMgSG9saWRheXNcIixcbiAgICAgICAgICAgICAgICBpZDogXCJyZWxpZ2lvdXMtaG9saWRheXNcIixcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjMEQ0N0ExXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTZWN1bGFyIEhvbGlkYXlzXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwic2VjdWxhci1ob2xpZGF5c1wiLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiM0QTE0OENcIlxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiQ2FsZW5kYXIgb2YgSGFycHRvc1wiLFxuICAgICAgICBkZXNjcmlwdGlvbjogXCJDYWxlbmRhciBvZiBGYWVyXHUwMEZCbiBvZiB0aGUgRm9yZ290dGVuIFJlYWxtcy5cIixcbiAgICAgICAgc3RhdGljOiB7XG4gICAgICAgICAgICBkaXNwbGF5RGF5TnVtYmVyOiBmYWxzZSxcbiAgICAgICAgICAgIGZpcnN0V2Vla0RheTogMCxcbiAgICAgICAgICAgIGluY3JlbWVudERheTogZmFsc2UsXG4gICAgICAgICAgICBkaXNwbGF5TW9vbnM6IHRydWUsXG4gICAgICAgICAgICBvdmVyZmxvdzogZmFsc2UsXG4gICAgICAgICAgICB3ZWVrZGF5czogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJJXCIsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzk5OTk4ODJiYjk0YVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF5XCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiSUlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfOGEwYjRiNzlkODg4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJJSUlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZGE0ODNhY2E4YmY5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJJVlwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9hOGZiZWEzOWNhYzhcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlZcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfOWIxOWQ5Nzg3YjBiXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJWSVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8zODJhNTkwYThhMjhcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlZJSVwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9mYmNhMGFiODBhZmJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlZJSUlcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfY2EwOTNiY2E1YWQ5XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJJWFwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9kOTViMzkwOThiZjhcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRheVwiLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlhcIixcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfMzg5YmZiNTg1OGRiXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbW9udGhzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkhhbW1lciAoRGVlcHdpbnRlcilcIixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDMwLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9jYmViNGIxOTBiNmFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1pZHdpbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImludGVyY2FsYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfODliYWQ5MDg5YjdiXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJBbHR1cmlhayAoVGhlIENsYXcgb2YgV2ludGVyKVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzZhMDhhOGFhY2I3YlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQ2hlcyAoVGhlIENsYXcgb2YgdGhlIFN1bnNldHMpXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfZGIyYTdiZjk3YWZhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUYXJzYWtoIChUaGUgQ2xhdyBvZiBTdG9ybXMpXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfNmI0ODk4MmIwYmRhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJHcmVlbmdyYXNzXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiaW50ZXJjYWxhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8wODc5MGFmOTI4MDlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1pcnR1bCAoVGhlIE1lbHRpbmcpXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYjkxYjM5Zjk1YTI4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJLeXRob3JuIChUaGUgVGltZSBvZiBGbG93ZXJzKVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2Y4ZTk1ODVhMmJmOFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRmxhbWVydWxlIChTdW1tZXJ0aWRlKVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEX2ZhODk1YmRiMzhlOVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTWlkc3VtbWVyXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiaW50ZXJjYWxhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF9hOTE4MWI1YTY4M2FcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkVsZWFzaXMgKEhpZ2hzdW4pXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfMWIxYjFiMjg3YjBhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJFbGVpbnQgKFRoZSBGYWRpbmcpXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfMWFjYTU5MTg5OTNhXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJIaWdoaGFydmVzdGlkZVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImludGVyY2FsYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYTk0YTE4M2I0Yjg4XCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNYXJwZW5vdGggKExlYWZmYWxsKVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzU4ZDk3OTY5ZWI3OVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVWt0YXIgKFRoZSBSb3R0aW5nKVwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm1vbnRoXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMzAsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBcIklEXzRiMDkwYjc4N2IxOFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVGhlIEZlYXN0IG9mIHRoZSBNb29uXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiaW50ZXJjYWxhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAxLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF8xYjBhZThkYmRiNGFcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk5pZ2h0YWwgKFRoZSBEcmF3aW5nIERvd24pXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSURfYWJiODJhZmFiODBhXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbW9vbnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiU2VsXHUwMEZBbmVcIixcbiAgICAgICAgICAgICAgICAgICAgY3ljbGU6IDMwLjQzNzUsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogMTMuOSxcbiAgICAgICAgICAgICAgICAgICAgZmFjZUNvbG9yOiBcIiNmZmZmZmZcIixcbiAgICAgICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6IFwiIzAwMDAwMFwiLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF80OGVhMmE2OWE4ODhcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBsZWFwRGF5czogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTaGllbGRzbWVldFwiLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImxlYXBkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWw6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZ25vcmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2x1c2l2ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWw6IDRcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAwLFxuICAgICAgICAgICAgICAgICAgICB0aW1lc3BhbjogOSxcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJjYWxhcnk6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBpZDogXCJJRF81YjA4ZmFhODhhZGFcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBlcmFzOiBbXVxuICAgICAgICB9LFxuICAgICAgICBjdXJyZW50OiB7XG4gICAgICAgICAgICB5ZWFyOiAxNDkxLFxuICAgICAgICAgICAgZGF5OiAxLFxuICAgICAgICAgICAgbW9udGg6IDBcbiAgICAgICAgfSxcbiAgICAgICAgZXZlbnRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJXaW50ZXIgU29sc3RpY2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogbnVsbCxcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1ODhcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwibmF0dXJhbC1ldmVudHNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlZlcm5hbCBFcXVpbm94XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IG51bGwsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTg5XCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IG51bGxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcIm5hdHVyYWwtZXZlbnRzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJTdW1tZXIgU29sc3RpY2VcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogbnVsbCxcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1OTBcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwibmF0dXJhbC1ldmVudHNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkF1dHVtbmFsIEVxdWlub3hcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogbnVsbCxcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1OTFcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogbnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwibmF0dXJhbC1ldmVudHNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlNoaWVsZG1lZXRcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJTaGllbGRtZWV0IHdhcyB0aGUgZXF1aXZhbGVudCBvZiBhIGxlYXAgeWVhciBkYXkgaW4gdGhlIENhbGVuZGFyIG9mIEhhcnB0b3MsIG9jY3VycmluZyBvbmNlIGV2ZXJ5IGZvdXIgeWVhcnMsIGFkZGluZyBhIGRheSBhZnRlciB0aGUgZmVzdGl2YWwgb2YgTWlkc3VtbWVyIGFuZCBiZWZvcmUgRWxlYXNpcyAxLiBUcmFkaXRpb25hbGx5IHRoZSBkYXkgd2FzIHVzZWQgZm9yIGZhaXJzLCBiYXphYXJzLCBtdXNpY2FsIGFuZCB0aGVhdHJpY2FsIHBlcmZvcm1hbmNlcywgYW5kIHRvdXJuYW1lbnRzIG9mIHNraWxsIGFuZCBtYWdpY2FsIGFiaWxpdHkuIE5vYmxlcyB1c3VhbGx5IGhlbGQgY291cnQgdG8gaGVhciB0aGUgcGV0aXRpb25zIG9mIHRoZWlyIHBlb3BsZSBhbmQgdG8gbWFrZSBvciByZW5ldyB0cmFkZSBwYWN0cywgYWxsaWFuY2VzLCBhbmQgYWdyZWVtZW50cy4gU2hpZWxkbWVldCB3YXMga25vd24gYXMgQ2lubmFlbG9zJ0NvciAoYWxzbyBzZWVuIGFzIENpbm5hZWxvc2NvciksIFxcXCJ0aGUgRGF5IG9mIENvcmVsbG9uJ3MgUGVhY2VcXFwiIGluIGVsdmlzaCBhbmQgbWFya2VkIHRoZSBlbmQgb2YgYW4gYWVsb3VsYWV2IGFuZCB0aGUgYmVnaW5uaW5nIG9mIGEgbmV3IG9uZSBpbiB0aGUgZWx2ZW4gQXJ5c2VsbWFseW4gY2FsZW5kYXIuXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwiODI0NTkyXCIsXG4gICAgICAgICAgICAgICAgbm90ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRheTogMixcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9udGg6IDlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcImZlc3RpdmFsc1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiRmVhc3Qgb2YgdGhlIE1vb25cIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJUaGUgRmVhc3Qgb2YgdGhlIE1vb24sIG9yIE1vb25mZXN0LCB3YXMgYW4gYW5udWFsIGZlc3RpdmFsIGluIHRoZSBDYWxlbmRhciBvZiBIYXJwdG9zLCBvY2N1cnJpbmcgYmV0d2VlbiB0aGUgZmluYWwgbmlnaHQgb2YgVWt0YXIgYW5kIHRoZSBmaXJzdCBkYXkgb2YgTmlnaHRhbC4gSXQgd2FzIHRoZSBsYXN0IGdyZWF0IGZlc3RpdmFsIG9mIHRoZSBjYWxlbmRhciB5ZWFyLlxcblxcblRoZSBkYXkgdHJhZGl0aW9uYWxseSBtYXJrZWQgdGhlIG9uc2V0IG9mIHdpbnRlci4gSXQgd2FzIGFsc28gYSB0aW1lIHRvIGNlbGVicmF0ZSBhbmQgaG9ub3IgdGhlIGFuY2VzdG9ycyBhbmQgdGhlIHJlc3BlY3RlZCBkZWFkLiBPbiB0aGlzIGRheSwgZm9sayBibGVzc2VkIHRoZWlyIGFuY2VzdG9ycycgZ3JhdmVzIGFuZCBwZXJmb3JtZWQgdGhlIFJpdHVhbCBvZiBSZW1lbWJyYW5jZS4gUGVvcGxlIGFsc28gZ2F0aGVyZWQgdG8gdGVsbCBzdG9yaWVzIG9mIHRoZSBkZWVkcyBvZiB0aGVpciBhbmNlc3RvcnMgYW5kIG9mIHRoZSBnb2RzIHVudGlsIGRlZXAgaW50byB0aGUgbmlnaHQsIHVudGlsIHRoZXkgbWVyZ2VkIGFuZCBiZWNhbWUgbGVnZW5kLiBUaGlzIHdhcyBhIHRpbWUgdG8gaGVhciBvZiBwYXN0IGhlcm9lcywgZ3JlYXQgdHJlYXN1cmVzLCBhbmQgbG9zdCBjaXRpZXMuXFxuXFxuSW4gRmFlclx1MDBDM1x1MDE5Mlx1MDBDMlx1MDBCQm4sIGJhdHRsZXMgd2VyZSB0eXBpY2FsbHkgZm91Z2h0IGJldHdlZW4gaGFydmVzdC10aW1lIGFuZCB0aGUgY29taW5nIG9mIHdpbnRlci4gVGhpcyBtZWFudCB0aGF0IG1vc3Qgb2YgdGhlIGZpZ2h0aW5nIHVzdWFsbHkgb2NjdXJyZWQgaW4gdGhlIG1vbnRoIG9mIFVrdGFyLiBUaGUgdGltaW5nIG9mIHRoZSBGZWFzdCBvZiB0aGUgTW9vblx1MDBDM1x1MDBBMlx1MDBFMlx1MjAxQVx1MDBBQ1x1MDBFMlx1MjBBQ2FmdGVyIHJlY2VudGx5IHNsYWluIHNvbGRpZXJzIGhhZCBqb2luZWQgdGhlIHJhbmtzIG9mIHRoZSBkZWFkXHUwMEMzXHUwMEEyXHUwMEUyXHUyMDFBXHUwMEFDXHUwMEUyXHUyMEFDd2FzIHRodXMgcHJhY3RpY2FsLCBpZiBzYWRseSBpcm9uaWMuXFxuXFxuVGhlIEhlcmFsZHMgb2YgRmFlclx1MDBDM1x1MDE5Mlx1MDBDMlx1MDBCQm4gaGFkIGEgbnVtYmVyIG9mIHNwZWNpYWwgZHV0aWVzIG9uIHRoZSBGZWFzdCBvZiB0aGUgTW9vbi4gUHJpbWUgYW1vbmcgdGhlc2Ugd2FzIHRvIHBlcmZvcm0gdGhlIEJsb29kc29uZyBjZXJlbW9ueSwgYXQgd2hpY2ggYSBIZXJhbGQgcHVibGljbHkgcmVjaXRlZCB0aGUgZ2VuZWFsb2dpZXMgb2YgZWFjaCBub2JsZSBmYW1pbHkgaW4gdGhlIGFyZWEuIEluIHRoaXMgd2F5LCB0aGUgSGVyYWxkcyByZWFmZmlybWVkIGEgbm9ibGUgZmFtaWx5J3MgdHJhZGl0aW9uYWwgYXV0aG9yaXR5IGFuZCBzdGF0dXMsIGFzIHdlbGwgYXMgdGhlIHJlc3BlY3QgYWNjb3JkZWQgdG8gdGhlbS5cXG5cXG5Qcmllc3RzIG9mIGEgbnVtYmVyIG9mIGRlaXRpZXMgb2YgdmFyaW91cyBwYW50aGVvbnMgaGVsZCByaXRlcywgY2VyZW1vbmllcywgYW5kIGZlc3RpdmFscyBvbiB0aGUgRmVhc3Qgb2YgdGhlIE1vb24uIE1hbnksIHRob3VnaCBub3QgYWxsLCBmb2N1c2VkIG9uIHJlbWVtYmVyaW5nIHRoZSBkZWFkIGluIG9uZSB3YXkgb3IgYW5vdGhlci5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1OTNcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcImZlc3RpdmFsc1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiSGlnaGhhcnZlc3R0aWRlXCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgICdIaWdoaGFydmVzdGlkZSB3YXMgYW4gYW5udWFsIGZlc3RpdmFsIGluIHRoZSBDYWxlbmRhciBvZiBIYXJwdG9zLCB0YWtpbmcgcGxhY2UgYmV0d2VlbiAzMCBFbGVpbnQgYW5kIDEgTWFycGVub3RoLiBJdCB3YXMgdHJhZGl0aW9uYWxseSBhIGZlYXN0IHRvIGNlbGVicmF0ZSB0aGUgaGFydmVzdCBhbmQgdGhlIGFidW5kYW5jZSBvZiBmb29kLCBidXQgYWxzbyB0aGUgdGltZSB3aGVuIHRob3NlIHdpc2hpbmcgdG8gdHJhdmVsIGxlZnQgb24gdGhlaXIgam91cm5leXMgYmVmb3JlIHdpbnRlciBzZXQgaW4uXFxuXFxuUHJlcGFyYXRpb25zIGZvciB0aGUgZmVhc3Qgc3RhcnRlZCBhcyBlYXJseSBhcyBhIHRlbmRheSBiZWZvcmUsIHdoaWxlIHByZXBhcmluZywgY29va2luZywgYW5kIHByZXNlcnZpbmcgdGhlIGhhcnZlc3QgZm9yIHRoZSBjb2xkIHdpbnRlciBtb250aHMuIFRyYWRpdGlvbnMgdmFyaWVkIGZyb20gY29tbXVuaXR5IHRvIGNvbW11bml0eSwgYnV0IGV4YW1wbGVzIG9mIGZlc3RpdmUgYWN0aXZpdHkgaW5jbHVkZWQgZm9vZC1yZWxhdGVkIGNvbnRlc3RzOyByYWNlcyBhbmQgY2hhbGxlbmdlcyBvZiBza2lsbCBhbmQgc3RyZW5ndGg7IHJlY2VpdmluZyBob21lbWFkZSBzd2VldHMgZnJvbSB0aGUgbG9jYWwgY2xlcmd5OyBhbmQgcHJpZXN0cyBibGVzc2luZyBsYXJkZXJzLCB3aW5lIGNlbGxhcnMsIGdyYWluIGJpbnMsIGFuZCBmb29kIHByZXNlcnZlcy5cXG5cXG5UaGlzIGRheSB3YXMgb2Z0ZW4gYW4gaW1wb3J0YW50IGFubml2ZXJzYXJ5IHRvIHZhcmlvdXMgZ292ZXJubWVudHMuIE9mdGVuLCB0YXhlcyBhbmQgdGl0aGVzIGNhbWUgZHVlLCBydWxlcnMgaGVsZCBcIm9wZW4gY291cnRzXCIgdG8gaGVhciB0aGUgY29uY2VybnMgb2YgdGhlaXIgY2l0aXplbnMsIG9hdGhzIHdlcmUgcHVibGljbHkgcmVuZXdlZCwgdHJvb3BzIHJlY2VpdmVkIG1hcmNoaW5nIG9yZGVycyB0byBuZXcgZHV0eSBzdGF0aW9ucywgYW5kIGd1aWxkcyBtZXQgdG8gY29uZmVyIG9uIHByaWNlcyBhbmQgcmF0ZSBjaGFuZ2VzIGZvciBnb29kcyBhbmQgc2VydmljZXMuXFxuXFxuQWNjb3JkaW5nIHRvIHRyYWRpdGlvbiwgZHdhcnZlcyBvbmx5IGRyYW5rIHdhdGVyIGFuZCBlbHZlcyBkcmFuayBvbmx5IGRldyBvbiB0aGlzIGRheS4gSG93ZXZlciwgdGhlc2UgdHJhZGl0aW9ucyBiZWdhbiB0byBmYWRlIGluIHRoZSAxNHRoIGFuZCAxNXRoIGNlbnR1cnkgRFIuXFxuXFxuSXQgd2FzIHNhaWQgdGhhdCBjaGlsZHJlbiBib3JuIG9uIHRoaXMgZGF5IHdlcmUgZmF2b3JlZCBieSBUeW1vcmEgdG8gaGF2ZSBsaWZlbG9uZyBnb29kIGx1Y2sgYnV0IGJlIHNtaXR0ZW4gd2l0aCB3YW5kZXJsdXN0LiBBbm90aGVyIGxlZ2VuZCB3YXMgdGhhdCBodW1hbiBmZW1hbGVzIGJvcm4gb24gdGhpcyBkYXkgaGFkIGNvbnRyb2wgb3ZlciB0aGVpciByZXByb2R1Y3RpdmUgc3lzdGVtIChpLmUuLCBnb3QgcHJlZ25hbnQgb25seSB3aGVuIHRoZXkgd2FudGVkIHRvKSBieSBmb3JjZSBvZiB3aWxsIGFsb25lLCBhbmQgdGhhdCB0aGV5IGNvdWxkIGluc3RhbnRseSBzZW5zZSB3aGVuIHRoZXkgaGFkIGJlZW4gcG9pc29uZWQsIGVpdGhlciBieSBpbmdlc3Rpb24gb3IgYmVpbmcgYml0dGVuIGJ5IGEgdmVub21vdXMgY3JlYXR1cmUgZm9yIGV4YW1wbGUuJyxcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1OTRcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMTJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBcImZlc3RpdmFsc1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiR3JlZW5ncmFzc1wiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIkdyZWVuZ3Jhc3Mgd2FzIGEgZmVzdGl2YWwgdG8gd2VsY29tZSBpbiB0aGUgZmlyc3QgZGF5IG9mIHNwcmluZyBpbiB0aGUgQ2FsZW5kYXIgb2YgSGFycHRvcy4gSXQgb2NjdXJlZCBhbm51YWxseSBvbiBhIHNwZWNpYWwgZGF5IGJldHdlZW4gVGFyc2FraCAzMCBhbmQgTWlydHVsIDEuIFRyYWRpdGlvbmFsbHksIHRoZSB3ZWFsdGhpZXIgcGVvcGxlIGJyb3VnaHQgb3V0IGZsb3dlcnMgdG8gZ2l2ZSB0byB0aGUgbGVzcyB3ZWFsdGh5LCB3aG8gZWl0aGVyIHdvcmUgdGhlbSBvciBzcHJlYWQgdGhlbSBvbiB0aGUgZ3JvdW5kIHRvIGVuY291cmFnZSB0aGUgZGVpdGllcyB0byB1c2hlciBpbiB0aGUgc3VtbWVyLlwiLFxuICAgICAgICAgICAgICAgIGlkOiBcIjgyNDU5NVwiLFxuICAgICAgICAgICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXk6IDEsXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoOiA1XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogXCJmZXN0aXZhbHNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1pZHdpbnRlclwiLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICBcIk1pZHdpbnRlciAoYWxzbyBrbm93biBhcyBEZWFkd2ludGVyIERheSkgd2FzIGEgZmVzdGl2YWwgdG8gbWFyayB0aGUgbWlkcG9pbnQgb2Ygd2ludGVyIGluIHRoZSBDYWxlbmRhciBvZiBIYXJwdG9zLiBJdCBvY2N1cmVkIG9uIGEgc3BlY2lhbCBkYXkgYmV0d2VlbiBIYW1tZXIgMzAgYW5kIEFsdHVyaWFrIDEuIEFtb25nc3Qgbm9ibGVzIGFuZCBtb25hcmNocyBpdCB3YXMga25vd24gYXMgTWlkd2ludGVyIGFuZCB3YXMgdHJhZGl0aW9uYWxseSB1c2VkIHRvIG1ha2Ugb3IgcmVuZXcgYWxsaWFuY2VzLCBhbHRob3VnaCB0aGUgY29tbW9uIHBlb3BsZSBjYWxsZWQgaXQgRGVhZHdpbnRlciBEYXksIGEgcmVmZXJlbmNlIHRvIHRoZSBjb2xkIGFuZCBoYXJkIHRpbWVzIHRoYXQgcmVtYWluZWQgYmVmb3JlIHRoZSBzcHJpbmcuXFxuXFxuT24gTWlkd2ludGVyIERheSB0aGUgUmVkIEZlbGxvd3NoaXAgb2YgdGhlIERlaXR5IGtub3duIGFzIHRoZSBSZWQgS25pZ2h0IG9ic2VydmVzIHRoZSBSZXRyZWF0LiBUaGlzIHNvbGVtbiBjZXJlbW9ueSBjb25zaXN0cyBvZiBhbiBhc3NlbWJseSB3aGVyZWluIHRoZSBjbGVyZ3kgZGlzY3VzcyB0aGUgcHJldmlvdXMgeWVhcidzIGNhbXBhaWducy4gU3RyYXRlZ2llcyBhcmUgZGlzY3Vzc2VkLCBiYXR0bGVzIGFuYWx5emVkLCBhbmQgdGhlIGFjY3VtdWxhdGVkIGxvcmUgaW50ZWdyYXRlZCBpbnRvIHRoZSBjaHVyY2gncyB0ZWFjaGluZ3MuXFxuXFxuVGhlIGhvbGllc3QgZGF5IG9mIHRoZSB5ZWFyIGZvciB0aGUgQ2h1cmNoIG9mIFNoZXZhcmFzaCBpcyBNaWR3aW50ZXIgTmlnaHQsIGR1cmluZyB3aGljaCB0aGUgRGFyayBDb3VydCBTbGF1Z2h0ZXIgaXMgcmVtZW1iZXJlZC4gSW5kdWN0aW9ucyBpbnRvIHRoZSByYW5rcyBvZiB0aGUgY2xlcmd5IG9jY3VyIGF0IHRoaXMgdGltZS4gRWFjaCBuZXcgY2xlcmljIHNjcmVhbXMgdm93cyBvZiB2ZW5nZWFuY2UgaW50byB0aGUgbmlnaHQgYWlyIGFuZCBzd2VhcnMgbmVpdGhlciB0byBsYXVnaCBub3Igc21pbGUgdW50aWwgdGhlIFNwaWRlciBRdWVlbiBhbmQgaGVyIGZvbGxvd2VycyBhcmUgbm8gbW9yZS5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1OTZcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwiZmVzdGl2YWxzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJNaWRzdW1tZXJcIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJNaWRzdW1tZXIgd2FzIGEgZmVzdGl2YWwgdGhhdCBjZWxlYnJhdGVkIGxvdmUgYW5kIG11c2ljIHRocm91Z2ggZmVhc3QuIEl0IG9jY3VycmVkIGJldHdlZW4gRmxhbWVydWxlIDMwIGFuZCBFbGVhc2lzIDEgb24gdGhlIENhbGVuZGFyIG9mIEhhcnB0b3MuIEl0IHdhcyBhIHRpbWUgd2hlbiBsb3ZlIGFkdmFuY2VkLCBhbmQgaXQgd2FzIHNhaWQgdGhlIGRlaXRpZXMgdGhlbXNlbHZlcyB0b29rIGEgaGFuZCB0byBlbnN1cmUgZ29vZCB3ZWF0aGVyLiBJZiBiYWQgd2VhdGhlciB3YXMgZXhwZXJpZW5jZWQgb24gdGhpcyBuaWdodCBpdCB3YXMgY29uc2lkZXJlZCBhbiBleHRyZW1lbHkgYmFkIG9tZW4uIFNoaWVsZG1lZXQgb2NjdXJyZWQgdGhlIGRheSBhZnRlciBNaWRzdW1tZXIgb24gbGVhcCB5ZWFycy5cIixcbiAgICAgICAgICAgICAgICBpZDogXCI4MjQ1OTdcIixcbiAgICAgICAgICAgICAgICBub3RlOiBudWxsLFxuICAgICAgICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGF5OiAxLFxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb250aDogOVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IFwiZmVzdGl2YWxzXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgaWQ6IG51bGwsXG4gICAgICAgIGNhdGVnb3JpZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk5hdHVyYWwgRXZlbnRzXCIsXG4gICAgICAgICAgICAgICAgaWQ6IFwibmF0dXJhbC1ldmVudHNcIixcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjMkU3RDMyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJGZXN0aXZhbHNcIixcbiAgICAgICAgICAgICAgICBpZDogXCJmZXN0aXZhbHNcIixcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjOWIyYzJjXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH1cbl07XG4iLCAiZXhwb3J0IHsgaWRlbnRpdHkgYXMgbGluZWFyIH0gZnJvbSAnLi4vaW50ZXJuYWwvaW5kZXgubWpzJztcblxuLypcbkFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vbWF0dGRlc2xcbkRpc3RyaWJ1dGVkIHVuZGVyIE1JVCBMaWNlbnNlIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXR0ZGVzbC9lYXNlcy9ibG9iL21hc3Rlci9MSUNFTlNFLm1kXG4qL1xuZnVuY3Rpb24gYmFja0luT3V0KHQpIHtcbiAgICBjb25zdCBzID0gMS43MDE1OCAqIDEuNTI1O1xuICAgIGlmICgodCAqPSAyKSA8IDEpXG4gICAgICAgIHJldHVybiAwLjUgKiAodCAqIHQgKiAoKHMgKyAxKSAqIHQgLSBzKSk7XG4gICAgcmV0dXJuIDAuNSAqICgodCAtPSAyKSAqIHQgKiAoKHMgKyAxKSAqIHQgKyBzKSArIDIpO1xufVxuZnVuY3Rpb24gYmFja0luKHQpIHtcbiAgICBjb25zdCBzID0gMS43MDE1ODtcbiAgICByZXR1cm4gdCAqIHQgKiAoKHMgKyAxKSAqIHQgLSBzKTtcbn1cbmZ1bmN0aW9uIGJhY2tPdXQodCkge1xuICAgIGNvbnN0IHMgPSAxLjcwMTU4O1xuICAgIHJldHVybiAtLXQgKiB0ICogKChzICsgMSkgKiB0ICsgcykgKyAxO1xufVxuZnVuY3Rpb24gYm91bmNlT3V0KHQpIHtcbiAgICBjb25zdCBhID0gNC4wIC8gMTEuMDtcbiAgICBjb25zdCBiID0gOC4wIC8gMTEuMDtcbiAgICBjb25zdCBjID0gOS4wIC8gMTAuMDtcbiAgICBjb25zdCBjYSA9IDQzNTYuMCAvIDM2MS4wO1xuICAgIGNvbnN0IGNiID0gMzU0NDIuMCAvIDE4MDUuMDtcbiAgICBjb25zdCBjYyA9IDE2MDYxLjAgLyAxODA1LjA7XG4gICAgY29uc3QgdDIgPSB0ICogdDtcbiAgICByZXR1cm4gdCA8IGFcbiAgICAgICAgPyA3LjU2MjUgKiB0MlxuICAgICAgICA6IHQgPCBiXG4gICAgICAgICAgICA/IDkuMDc1ICogdDIgLSA5LjkgKiB0ICsgMy40XG4gICAgICAgICAgICA6IHQgPCBjXG4gICAgICAgICAgICAgICAgPyBjYSAqIHQyIC0gY2IgKiB0ICsgY2NcbiAgICAgICAgICAgICAgICA6IDEwLjggKiB0ICogdCAtIDIwLjUyICogdCArIDEwLjcyO1xufVxuZnVuY3Rpb24gYm91bmNlSW5PdXQodCkge1xuICAgIHJldHVybiB0IDwgMC41XG4gICAgICAgID8gMC41ICogKDEuMCAtIGJvdW5jZU91dCgxLjAgLSB0ICogMi4wKSlcbiAgICAgICAgOiAwLjUgKiBib3VuY2VPdXQodCAqIDIuMCAtIDEuMCkgKyAwLjU7XG59XG5mdW5jdGlvbiBib3VuY2VJbih0KSB7XG4gICAgcmV0dXJuIDEuMCAtIGJvdW5jZU91dCgxLjAgLSB0KTtcbn1cbmZ1bmN0aW9uIGNpcmNJbk91dCh0KSB7XG4gICAgaWYgKCh0ICo9IDIpIDwgMSlcbiAgICAgICAgcmV0dXJuIC0wLjUgKiAoTWF0aC5zcXJ0KDEgLSB0ICogdCkgLSAxKTtcbiAgICByZXR1cm4gMC41ICogKE1hdGguc3FydCgxIC0gKHQgLT0gMikgKiB0KSArIDEpO1xufVxuZnVuY3Rpb24gY2lyY0luKHQpIHtcbiAgICByZXR1cm4gMS4wIC0gTWF0aC5zcXJ0KDEuMCAtIHQgKiB0KTtcbn1cbmZ1bmN0aW9uIGNpcmNPdXQodCkge1xuICAgIHJldHVybiBNYXRoLnNxcnQoMSAtIC0tdCAqIHQpO1xufVxuZnVuY3Rpb24gY3ViaWNJbk91dCh0KSB7XG4gICAgcmV0dXJuIHQgPCAwLjUgPyA0LjAgKiB0ICogdCAqIHQgOiAwLjUgKiBNYXRoLnBvdygyLjAgKiB0IC0gMi4wLCAzLjApICsgMS4wO1xufVxuZnVuY3Rpb24gY3ViaWNJbih0KSB7XG4gICAgcmV0dXJuIHQgKiB0ICogdDtcbn1cbmZ1bmN0aW9uIGN1YmljT3V0KHQpIHtcbiAgICBjb25zdCBmID0gdCAtIDEuMDtcbiAgICByZXR1cm4gZiAqIGYgKiBmICsgMS4wO1xufVxuZnVuY3Rpb24gZWxhc3RpY0luT3V0KHQpIHtcbiAgICByZXR1cm4gdCA8IDAuNVxuICAgICAgICA/IDAuNSAqXG4gICAgICAgICAgICBNYXRoLnNpbigoKCsxMy4wICogTWF0aC5QSSkgLyAyKSAqIDIuMCAqIHQpICpcbiAgICAgICAgICAgIE1hdGgucG93KDIuMCwgMTAuMCAqICgyLjAgKiB0IC0gMS4wKSlcbiAgICAgICAgOiAwLjUgKlxuICAgICAgICAgICAgTWF0aC5zaW4oKCgtMTMuMCAqIE1hdGguUEkpIC8gMikgKiAoMi4wICogdCAtIDEuMCArIDEuMCkpICpcbiAgICAgICAgICAgIE1hdGgucG93KDIuMCwgLTEwLjAgKiAoMi4wICogdCAtIDEuMCkpICtcbiAgICAgICAgICAgIDEuMDtcbn1cbmZ1bmN0aW9uIGVsYXN0aWNJbih0KSB7XG4gICAgcmV0dXJuIE1hdGguc2luKCgxMy4wICogdCAqIE1hdGguUEkpIC8gMikgKiBNYXRoLnBvdygyLjAsIDEwLjAgKiAodCAtIDEuMCkpO1xufVxuZnVuY3Rpb24gZWxhc3RpY091dCh0KSB7XG4gICAgcmV0dXJuIChNYXRoLnNpbigoLTEzLjAgKiAodCArIDEuMCkgKiBNYXRoLlBJKSAvIDIpICogTWF0aC5wb3coMi4wLCAtMTAuMCAqIHQpICsgMS4wKTtcbn1cbmZ1bmN0aW9uIGV4cG9Jbk91dCh0KSB7XG4gICAgcmV0dXJuIHQgPT09IDAuMCB8fCB0ID09PSAxLjBcbiAgICAgICAgPyB0XG4gICAgICAgIDogdCA8IDAuNVxuICAgICAgICAgICAgPyArMC41ICogTWF0aC5wb3coMi4wLCAyMC4wICogdCAtIDEwLjApXG4gICAgICAgICAgICA6IC0wLjUgKiBNYXRoLnBvdygyLjAsIDEwLjAgLSB0ICogMjAuMCkgKyAxLjA7XG59XG5mdW5jdGlvbiBleHBvSW4odCkge1xuICAgIHJldHVybiB0ID09PSAwLjAgPyB0IDogTWF0aC5wb3coMi4wLCAxMC4wICogKHQgLSAxLjApKTtcbn1cbmZ1bmN0aW9uIGV4cG9PdXQodCkge1xuICAgIHJldHVybiB0ID09PSAxLjAgPyB0IDogMS4wIC0gTWF0aC5wb3coMi4wLCAtMTAuMCAqIHQpO1xufVxuZnVuY3Rpb24gcXVhZEluT3V0KHQpIHtcbiAgICB0IC89IDAuNTtcbiAgICBpZiAodCA8IDEpXG4gICAgICAgIHJldHVybiAwLjUgKiB0ICogdDtcbiAgICB0LS07XG4gICAgcmV0dXJuIC0wLjUgKiAodCAqICh0IC0gMikgLSAxKTtcbn1cbmZ1bmN0aW9uIHF1YWRJbih0KSB7XG4gICAgcmV0dXJuIHQgKiB0O1xufVxuZnVuY3Rpb24gcXVhZE91dCh0KSB7XG4gICAgcmV0dXJuIC10ICogKHQgLSAyLjApO1xufVxuZnVuY3Rpb24gcXVhcnRJbk91dCh0KSB7XG4gICAgcmV0dXJuIHQgPCAwLjVcbiAgICAgICAgPyArOC4wICogTWF0aC5wb3codCwgNC4wKVxuICAgICAgICA6IC04LjAgKiBNYXRoLnBvdyh0IC0gMS4wLCA0LjApICsgMS4wO1xufVxuZnVuY3Rpb24gcXVhcnRJbih0KSB7XG4gICAgcmV0dXJuIE1hdGgucG93KHQsIDQuMCk7XG59XG5mdW5jdGlvbiBxdWFydE91dCh0KSB7XG4gICAgcmV0dXJuIE1hdGgucG93KHQgLSAxLjAsIDMuMCkgKiAoMS4wIC0gdCkgKyAxLjA7XG59XG5mdW5jdGlvbiBxdWludEluT3V0KHQpIHtcbiAgICBpZiAoKHQgKj0gMikgPCAxKVxuICAgICAgICByZXR1cm4gMC41ICogdCAqIHQgKiB0ICogdCAqIHQ7XG4gICAgcmV0dXJuIDAuNSAqICgodCAtPSAyKSAqIHQgKiB0ICogdCAqIHQgKyAyKTtcbn1cbmZ1bmN0aW9uIHF1aW50SW4odCkge1xuICAgIHJldHVybiB0ICogdCAqIHQgKiB0ICogdDtcbn1cbmZ1bmN0aW9uIHF1aW50T3V0KHQpIHtcbiAgICByZXR1cm4gLS10ICogdCAqIHQgKiB0ICogdCArIDE7XG59XG5mdW5jdGlvbiBzaW5lSW5PdXQodCkge1xuICAgIHJldHVybiAtMC41ICogKE1hdGguY29zKE1hdGguUEkgKiB0KSAtIDEpO1xufVxuZnVuY3Rpb24gc2luZUluKHQpIHtcbiAgICBjb25zdCB2ID0gTWF0aC5jb3ModCAqIE1hdGguUEkgKiAwLjUpO1xuICAgIGlmIChNYXRoLmFicyh2KSA8IDFlLTE0KVxuICAgICAgICByZXR1cm4gMTtcbiAgICBlbHNlXG4gICAgICAgIHJldHVybiAxIC0gdjtcbn1cbmZ1bmN0aW9uIHNpbmVPdXQodCkge1xuICAgIHJldHVybiBNYXRoLnNpbigodCAqIE1hdGguUEkpIC8gMik7XG59XG5cbmV4cG9ydCB7IGJhY2tJbiwgYmFja0luT3V0LCBiYWNrT3V0LCBib3VuY2VJbiwgYm91bmNlSW5PdXQsIGJvdW5jZU91dCwgY2lyY0luLCBjaXJjSW5PdXQsIGNpcmNPdXQsIGN1YmljSW4sIGN1YmljSW5PdXQsIGN1YmljT3V0LCBlbGFzdGljSW4sIGVsYXN0aWNJbk91dCwgZWxhc3RpY091dCwgZXhwb0luLCBleHBvSW5PdXQsIGV4cG9PdXQsIHF1YWRJbiwgcXVhZEluT3V0LCBxdWFkT3V0LCBxdWFydEluLCBxdWFydEluT3V0LCBxdWFydE91dCwgcXVpbnRJbiwgcXVpbnRJbk91dCwgcXVpbnRPdXQsIHNpbmVJbiwgc2luZUluT3V0LCBzaW5lT3V0IH07XG4iLCAiaW1wb3J0IHsgY3ViaWNJbk91dCwgbGluZWFyLCBjdWJpY091dCB9IGZyb20gJy4uL2Vhc2luZy9pbmRleC5tanMnO1xuaW1wb3J0IHsgaXNfZnVuY3Rpb24sIGFzc2lnbiB9IGZyb20gJy4uL2ludGVybmFsL2luZGV4Lm1qcyc7XG5cbi8qISAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5Db3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cclxuXHJcblBlcm1pc3Npb24gdG8gdXNlLCBjb3B5LCBtb2RpZnksIGFuZC9vciBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9yIGFueVxyXG5wdXJwb3NlIHdpdGggb3Igd2l0aG91dCBmZWUgaXMgaGVyZWJ5IGdyYW50ZWQuXHJcblxyXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiIEFORCBUSEUgQVVUSE9SIERJU0NMQUlNUyBBTEwgV0FSUkFOVElFUyBXSVRIXHJcblJFR0FSRCBUTyBUSElTIFNPRlRXQVJFIElOQ0xVRElORyBBTEwgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWVxyXG5BTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsXHJcbklORElSRUNULCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVMgV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTVxyXG5MT1NTIE9GIFVTRSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgTkVHTElHRU5DRSBPUlxyXG5PVEhFUiBUT1JUSU9VUyBBQ1RJT04sIEFSSVNJTkcgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SXHJcblBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuXHJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXHJcblxyXG5mdW5jdGlvbiBfX3Jlc3QocywgZSkge1xyXG4gICAgdmFyIHQgPSB7fTtcclxuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxyXG4gICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxyXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxyXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XHJcbiAgICAgICAgfVxyXG4gICAgcmV0dXJuIHQ7XHJcbn1cblxuZnVuY3Rpb24gYmx1cihub2RlLCB7IGRlbGF5ID0gMCwgZHVyYXRpb24gPSA0MDAsIGVhc2luZyA9IGN1YmljSW5PdXQsIGFtb3VudCA9IDUsIG9wYWNpdHkgPSAwIH0gPSB7fSkge1xuICAgIGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcbiAgICBjb25zdCB0YXJnZXRfb3BhY2l0eSA9ICtzdHlsZS5vcGFjaXR5O1xuICAgIGNvbnN0IGYgPSBzdHlsZS5maWx0ZXIgPT09ICdub25lJyA/ICcnIDogc3R5bGUuZmlsdGVyO1xuICAgIGNvbnN0IG9kID0gdGFyZ2V0X29wYWNpdHkgKiAoMSAtIG9wYWNpdHkpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGRlbGF5LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICAgZWFzaW5nLFxuICAgICAgICBjc3M6IChfdCwgdSkgPT4gYG9wYWNpdHk6ICR7dGFyZ2V0X29wYWNpdHkgLSAob2QgKiB1KX07IGZpbHRlcjogJHtmfSBibHVyKCR7dSAqIGFtb3VudH1weCk7YFxuICAgIH07XG59XG5mdW5jdGlvbiBmYWRlKG5vZGUsIHsgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDQwMCwgZWFzaW5nID0gbGluZWFyIH0gPSB7fSkge1xuICAgIGNvbnN0IG8gPSArZ2V0Q29tcHV0ZWRTdHlsZShub2RlKS5vcGFjaXR5O1xuICAgIHJldHVybiB7XG4gICAgICAgIGRlbGF5LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICAgZWFzaW5nLFxuICAgICAgICBjc3M6IHQgPT4gYG9wYWNpdHk6ICR7dCAqIG99YFxuICAgIH07XG59XG5mdW5jdGlvbiBmbHkobm9kZSwgeyBkZWxheSA9IDAsIGR1cmF0aW9uID0gNDAwLCBlYXNpbmcgPSBjdWJpY091dCwgeCA9IDAsIHkgPSAwLCBvcGFjaXR5ID0gMCB9ID0ge30pIHtcbiAgICBjb25zdCBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUobm9kZSk7XG4gICAgY29uc3QgdGFyZ2V0X29wYWNpdHkgPSArc3R5bGUub3BhY2l0eTtcbiAgICBjb25zdCB0cmFuc2Zvcm0gPSBzdHlsZS50cmFuc2Zvcm0gPT09ICdub25lJyA/ICcnIDogc3R5bGUudHJhbnNmb3JtO1xuICAgIGNvbnN0IG9kID0gdGFyZ2V0X29wYWNpdHkgKiAoMSAtIG9wYWNpdHkpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGRlbGF5LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICAgZWFzaW5nLFxuICAgICAgICBjc3M6ICh0LCB1KSA9PiBgXG5cdFx0XHR0cmFuc2Zvcm06ICR7dHJhbnNmb3JtfSB0cmFuc2xhdGUoJHsoMSAtIHQpICogeH1weCwgJHsoMSAtIHQpICogeX1weCk7XG5cdFx0XHRvcGFjaXR5OiAke3RhcmdldF9vcGFjaXR5IC0gKG9kICogdSl9YFxuICAgIH07XG59XG5mdW5jdGlvbiBzbGlkZShub2RlLCB7IGRlbGF5ID0gMCwgZHVyYXRpb24gPSA0MDAsIGVhc2luZyA9IGN1YmljT3V0IH0gPSB7fSkge1xuICAgIGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcbiAgICBjb25zdCBvcGFjaXR5ID0gK3N0eWxlLm9wYWNpdHk7XG4gICAgY29uc3QgaGVpZ2h0ID0gcGFyc2VGbG9hdChzdHlsZS5oZWlnaHQpO1xuICAgIGNvbnN0IHBhZGRpbmdfdG9wID0gcGFyc2VGbG9hdChzdHlsZS5wYWRkaW5nVG9wKTtcbiAgICBjb25zdCBwYWRkaW5nX2JvdHRvbSA9IHBhcnNlRmxvYXQoc3R5bGUucGFkZGluZ0JvdHRvbSk7XG4gICAgY29uc3QgbWFyZ2luX3RvcCA9IHBhcnNlRmxvYXQoc3R5bGUubWFyZ2luVG9wKTtcbiAgICBjb25zdCBtYXJnaW5fYm90dG9tID0gcGFyc2VGbG9hdChzdHlsZS5tYXJnaW5Cb3R0b20pO1xuICAgIGNvbnN0IGJvcmRlcl90b3Bfd2lkdGggPSBwYXJzZUZsb2F0KHN0eWxlLmJvcmRlclRvcFdpZHRoKTtcbiAgICBjb25zdCBib3JkZXJfYm90dG9tX3dpZHRoID0gcGFyc2VGbG9hdChzdHlsZS5ib3JkZXJCb3R0b21XaWR0aCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGVsYXksXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgICBlYXNpbmcsXG4gICAgICAgIGNzczogdCA9PiAnb3ZlcmZsb3c6IGhpZGRlbjsnICtcbiAgICAgICAgICAgIGBvcGFjaXR5OiAke01hdGgubWluKHQgKiAyMCwgMSkgKiBvcGFjaXR5fTtgICtcbiAgICAgICAgICAgIGBoZWlnaHQ6ICR7dCAqIGhlaWdodH1weDtgICtcbiAgICAgICAgICAgIGBwYWRkaW5nLXRvcDogJHt0ICogcGFkZGluZ190b3B9cHg7YCArXG4gICAgICAgICAgICBgcGFkZGluZy1ib3R0b206ICR7dCAqIHBhZGRpbmdfYm90dG9tfXB4O2AgK1xuICAgICAgICAgICAgYG1hcmdpbi10b3A6ICR7dCAqIG1hcmdpbl90b3B9cHg7YCArXG4gICAgICAgICAgICBgbWFyZ2luLWJvdHRvbTogJHt0ICogbWFyZ2luX2JvdHRvbX1weDtgICtcbiAgICAgICAgICAgIGBib3JkZXItdG9wLXdpZHRoOiAke3QgKiBib3JkZXJfdG9wX3dpZHRofXB4O2AgK1xuICAgICAgICAgICAgYGJvcmRlci1ib3R0b20td2lkdGg6ICR7dCAqIGJvcmRlcl9ib3R0b21fd2lkdGh9cHg7YFxuICAgIH07XG59XG5mdW5jdGlvbiBzY2FsZShub2RlLCB7IGRlbGF5ID0gMCwgZHVyYXRpb24gPSA0MDAsIGVhc2luZyA9IGN1YmljT3V0LCBzdGFydCA9IDAsIG9wYWNpdHkgPSAwIH0gPSB7fSkge1xuICAgIGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcbiAgICBjb25zdCB0YXJnZXRfb3BhY2l0eSA9ICtzdHlsZS5vcGFjaXR5O1xuICAgIGNvbnN0IHRyYW5zZm9ybSA9IHN0eWxlLnRyYW5zZm9ybSA9PT0gJ25vbmUnID8gJycgOiBzdHlsZS50cmFuc2Zvcm07XG4gICAgY29uc3Qgc2QgPSAxIC0gc3RhcnQ7XG4gICAgY29uc3Qgb2QgPSB0YXJnZXRfb3BhY2l0eSAqICgxIC0gb3BhY2l0eSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGVsYXksXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgICBlYXNpbmcsXG4gICAgICAgIGNzczogKF90LCB1KSA9PiBgXG5cdFx0XHR0cmFuc2Zvcm06ICR7dHJhbnNmb3JtfSBzY2FsZSgkezEgLSAoc2QgKiB1KX0pO1xuXHRcdFx0b3BhY2l0eTogJHt0YXJnZXRfb3BhY2l0eSAtIChvZCAqIHUpfVxuXHRcdGBcbiAgICB9O1xufVxuZnVuY3Rpb24gZHJhdyhub2RlLCB7IGRlbGF5ID0gMCwgc3BlZWQsIGR1cmF0aW9uLCBlYXNpbmcgPSBjdWJpY0luT3V0IH0gPSB7fSkge1xuICAgIGxldCBsZW4gPSBub2RlLmdldFRvdGFsTGVuZ3RoKCk7XG4gICAgY29uc3Qgc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKG5vZGUpO1xuICAgIGlmIChzdHlsZS5zdHJva2VMaW5lY2FwICE9PSAnYnV0dCcpIHtcbiAgICAgICAgbGVuICs9IHBhcnNlSW50KHN0eWxlLnN0cm9rZVdpZHRoKTtcbiAgICB9XG4gICAgaWYgKGR1cmF0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKHNwZWVkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGR1cmF0aW9uID0gODAwO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZHVyYXRpb24gPSBsZW4gLyBzcGVlZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgZHVyYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgZHVyYXRpb24gPSBkdXJhdGlvbihsZW4pO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBkZWxheSxcbiAgICAgICAgZHVyYXRpb24sXG4gICAgICAgIGVhc2luZyxcbiAgICAgICAgY3NzOiAodCwgdSkgPT4gYHN0cm9rZS1kYXNoYXJyYXk6ICR7dCAqIGxlbn0gJHt1ICogbGVufWBcbiAgICB9O1xufVxuZnVuY3Rpb24gY3Jvc3NmYWRlKF9hKSB7XG4gICAgdmFyIHsgZmFsbGJhY2sgfSA9IF9hLCBkZWZhdWx0cyA9IF9fcmVzdChfYSwgW1wiZmFsbGJhY2tcIl0pO1xuICAgIGNvbnN0IHRvX3JlY2VpdmUgPSBuZXcgTWFwKCk7XG4gICAgY29uc3QgdG9fc2VuZCA9IG5ldyBNYXAoKTtcbiAgICBmdW5jdGlvbiBjcm9zc2ZhZGUoZnJvbSwgbm9kZSwgcGFyYW1zKSB7XG4gICAgICAgIGNvbnN0IHsgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IGQgPT4gTWF0aC5zcXJ0KGQpICogMzAsIGVhc2luZyA9IGN1YmljT3V0IH0gPSBhc3NpZ24oYXNzaWduKHt9LCBkZWZhdWx0cyksIHBhcmFtcyk7XG4gICAgICAgIGNvbnN0IHRvID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgY29uc3QgZHggPSBmcm9tLmxlZnQgLSB0by5sZWZ0O1xuICAgICAgICBjb25zdCBkeSA9IGZyb20udG9wIC0gdG8udG9wO1xuICAgICAgICBjb25zdCBkdyA9IGZyb20ud2lkdGggLyB0by53aWR0aDtcbiAgICAgICAgY29uc3QgZGggPSBmcm9tLmhlaWdodCAvIHRvLmhlaWdodDtcbiAgICAgICAgY29uc3QgZCA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG4gICAgICAgIGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcbiAgICAgICAgY29uc3QgdHJhbnNmb3JtID0gc3R5bGUudHJhbnNmb3JtID09PSAnbm9uZScgPyAnJyA6IHN0eWxlLnRyYW5zZm9ybTtcbiAgICAgICAgY29uc3Qgb3BhY2l0eSA9ICtzdHlsZS5vcGFjaXR5O1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGVsYXksXG4gICAgICAgICAgICBkdXJhdGlvbjogaXNfZnVuY3Rpb24oZHVyYXRpb24pID8gZHVyYXRpb24oZCkgOiBkdXJhdGlvbixcbiAgICAgICAgICAgIGVhc2luZyxcbiAgICAgICAgICAgIGNzczogKHQsIHUpID0+IGBcblx0XHRcdFx0b3BhY2l0eTogJHt0ICogb3BhY2l0eX07XG5cdFx0XHRcdHRyYW5zZm9ybS1vcmlnaW46IHRvcCBsZWZ0O1xuXHRcdFx0XHR0cmFuc2Zvcm06ICR7dHJhbnNmb3JtfSB0cmFuc2xhdGUoJHt1ICogZHh9cHgsJHt1ICogZHl9cHgpIHNjYWxlKCR7dCArICgxIC0gdCkgKiBkd30sICR7dCArICgxIC0gdCkgKiBkaH0pO1xuXHRcdFx0YFxuICAgICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiB0cmFuc2l0aW9uKGl0ZW1zLCBjb3VudGVycGFydHMsIGludHJvKSB7XG4gICAgICAgIHJldHVybiAobm9kZSwgcGFyYW1zKSA9PiB7XG4gICAgICAgICAgICBpdGVtcy5zZXQocGFyYW1zLmtleSwge1xuICAgICAgICAgICAgICAgIHJlY3Q6IG5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoY291bnRlcnBhcnRzLmhhcyhwYXJhbXMua2V5KSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHJlY3QgfSA9IGNvdW50ZXJwYXJ0cy5nZXQocGFyYW1zLmtleSk7XG4gICAgICAgICAgICAgICAgICAgIGNvdW50ZXJwYXJ0cy5kZWxldGUocGFyYW1zLmtleSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcm9zc2ZhZGUocmVjdCwgbm9kZSwgcGFyYW1zKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gaWYgdGhlIG5vZGUgaXMgZGlzYXBwZWFyaW5nIGFsdG9nZXRoZXJcbiAgICAgICAgICAgICAgICAvLyAoaS5lLiB3YXNuJ3QgY2xhaW1lZCBieSB0aGUgb3RoZXIgbGlzdClcbiAgICAgICAgICAgICAgICAvLyB0aGVuIHdlIG5lZWQgdG8gc3VwcGx5IGFuIG91dHJvXG4gICAgICAgICAgICAgICAgaXRlbXMuZGVsZXRlKHBhcmFtcy5rZXkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxsYmFjayAmJiBmYWxsYmFjayhub2RlLCBwYXJhbXMsIGludHJvKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIHRyYW5zaXRpb24odG9fc2VuZCwgdG9fcmVjZWl2ZSwgZmFsc2UpLFxuICAgICAgICB0cmFuc2l0aW9uKHRvX3JlY2VpdmUsIHRvX3NlbmQsIHRydWUpXG4gICAgXTtcbn1cblxuZXhwb3J0IHsgYmx1ciwgY3Jvc3NmYWRlLCBkcmF3LCBmYWRlLCBmbHksIHNjYWxlLCBzbGlkZSB9O1xuIiwgImltcG9ydCB7IG5vb3AsIHNhZmVfbm90X2VxdWFsLCBzdWJzY3JpYmUsIHJ1bl9hbGwsIGlzX2Z1bmN0aW9uIH0gZnJvbSAnLi4vaW50ZXJuYWwvaW5kZXgubWpzJztcbmV4cG9ydCB7IGdldF9zdG9yZV92YWx1ZSBhcyBnZXQgfSBmcm9tICcuLi9pbnRlcm5hbC9pbmRleC5tanMnO1xuXG5jb25zdCBzdWJzY3JpYmVyX3F1ZXVlID0gW107XG4vKipcbiAqIENyZWF0ZXMgYSBgUmVhZGFibGVgIHN0b3JlIHRoYXQgYWxsb3dzIHJlYWRpbmcgYnkgc3Vic2NyaXB0aW9uLlxuICogQHBhcmFtIHZhbHVlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSB7U3RhcnRTdG9wTm90aWZpZXJ9c3RhcnQgc3RhcnQgYW5kIHN0b3Agbm90aWZpY2F0aW9ucyBmb3Igc3Vic2NyaXB0aW9uc1xuICovXG5mdW5jdGlvbiByZWFkYWJsZSh2YWx1ZSwgc3RhcnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzdWJzY3JpYmU6IHdyaXRhYmxlKHZhbHVlLCBzdGFydCkuc3Vic2NyaWJlXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgYFdyaXRhYmxlYCBzdG9yZSB0aGF0IGFsbG93cyBib3RoIHVwZGF0aW5nIGFuZCByZWFkaW5nIGJ5IHN1YnNjcmlwdGlvbi5cbiAqIEBwYXJhbSB7Kj19dmFsdWUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHtTdGFydFN0b3BOb3RpZmllcj19c3RhcnQgc3RhcnQgYW5kIHN0b3Agbm90aWZpY2F0aW9ucyBmb3Igc3Vic2NyaXB0aW9uc1xuICovXG5mdW5jdGlvbiB3cml0YWJsZSh2YWx1ZSwgc3RhcnQgPSBub29wKSB7XG4gICAgbGV0IHN0b3A7XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0KCk7XG4gICAgZnVuY3Rpb24gc2V0KG5ld192YWx1ZSkge1xuICAgICAgICBpZiAoc2FmZV9ub3RfZXF1YWwodmFsdWUsIG5ld192YWx1ZSkpIHtcbiAgICAgICAgICAgIHZhbHVlID0gbmV3X3ZhbHVlO1xuICAgICAgICAgICAgaWYgKHN0b3ApIHsgLy8gc3RvcmUgaXMgcmVhZHlcbiAgICAgICAgICAgICAgICBjb25zdCBydW5fcXVldWUgPSAhc3Vic2NyaWJlcl9xdWV1ZS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBzdWJzY3JpYmVyIG9mIHN1YnNjcmliZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJbMV0oKTtcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcl9xdWV1ZS5wdXNoKHN1YnNjcmliZXIsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJ1bl9xdWV1ZSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN1YnNjcmliZXJfcXVldWUubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJfcXVldWVbaV1bMF0oc3Vic2NyaWJlcl9xdWV1ZVtpICsgMV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJfcXVldWUubGVuZ3RoID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlKGZuKSB7XG4gICAgICAgIHNldChmbih2YWx1ZSkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUocnVuLCBpbnZhbGlkYXRlID0gbm9vcCkge1xuICAgICAgICBjb25zdCBzdWJzY3JpYmVyID0gW3J1biwgaW52YWxpZGF0ZV07XG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChzdWJzY3JpYmVyKTtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDEpIHtcbiAgICAgICAgICAgIHN0b3AgPSBzdGFydChzZXQpIHx8IG5vb3A7XG4gICAgICAgIH1cbiAgICAgICAgcnVuKHZhbHVlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShzdWJzY3JpYmVyKTtcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgc3RvcCgpO1xuICAgICAgICAgICAgICAgIHN0b3AgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4geyBzZXQsIHVwZGF0ZSwgc3Vic2NyaWJlIH07XG59XG5mdW5jdGlvbiBkZXJpdmVkKHN0b3JlcywgZm4sIGluaXRpYWxfdmFsdWUpIHtcbiAgICBjb25zdCBzaW5nbGUgPSAhQXJyYXkuaXNBcnJheShzdG9yZXMpO1xuICAgIGNvbnN0IHN0b3Jlc19hcnJheSA9IHNpbmdsZVxuICAgICAgICA/IFtzdG9yZXNdXG4gICAgICAgIDogc3RvcmVzO1xuICAgIGNvbnN0IGF1dG8gPSBmbi5sZW5ndGggPCAyO1xuICAgIHJldHVybiByZWFkYWJsZShpbml0aWFsX3ZhbHVlLCAoc2V0KSA9PiB7XG4gICAgICAgIGxldCBpbml0ZWQgPSBmYWxzZTtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gW107XG4gICAgICAgIGxldCBwZW5kaW5nID0gMDtcbiAgICAgICAgbGV0IGNsZWFudXAgPSBub29wO1xuICAgICAgICBjb25zdCBzeW5jID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHBlbmRpbmcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjbGVhbnVwKCk7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBmbihzaW5nbGUgPyB2YWx1ZXNbMF0gOiB2YWx1ZXMsIHNldCk7XG4gICAgICAgICAgICBpZiAoYXV0bykge1xuICAgICAgICAgICAgICAgIHNldChyZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY2xlYW51cCA9IGlzX2Z1bmN0aW9uKHJlc3VsdCkgPyByZXN1bHQgOiBub29wO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCB1bnN1YnNjcmliZXJzID0gc3RvcmVzX2FycmF5Lm1hcCgoc3RvcmUsIGkpID0+IHN1YnNjcmliZShzdG9yZSwgKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICB2YWx1ZXNbaV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIHBlbmRpbmcgJj0gfigxIDw8IGkpO1xuICAgICAgICAgICAgaWYgKGluaXRlZCkge1xuICAgICAgICAgICAgICAgIHN5bmMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgcGVuZGluZyB8PSAoMSA8PCBpKTtcbiAgICAgICAgfSkpO1xuICAgICAgICBpbml0ZWQgPSB0cnVlO1xuICAgICAgICBzeW5jKCk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgICAgICAgcnVuX2FsbCh1bnN1YnNjcmliZXJzKTtcbiAgICAgICAgICAgIGNsZWFudXAoKTtcbiAgICAgICAgfTtcbiAgICB9KTtcbn1cblxuZXhwb3J0IHsgZGVyaXZlZCwgcmVhZGFibGUsIHdyaXRhYmxlIH07XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBpbXBvcnQgeyBTZXR0aW5nIH0gZnJvbSBcIm9ic2lkaWFuXCI7XG4gICAgaW1wb3J0IHsgd2FybmluZyB9IGZyb20gXCIuL3V0aWxzXCI7XG5cbiAgICBleHBvcnQgbGV0IG9wZW4gPSB0cnVlO1xuICAgIGV4cG9ydCBsZXQgbmFtZTogc3RyaW5nO1xuICAgIGV4cG9ydCBsZXQgd2FybjogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGV4cG9ydCBsZXQgbGFiZWw6IHN0cmluZyA9IG51bGw7XG4gICAgY29uc3QgZGV0YWlscyA9IChub2RlOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgICAgICBpZiAob3Blbikgbm9kZS5zZXRBdHRyKFwib3BlblwiLCBcIm9wZW5cIik7XG4gICAgfTtcbiAgICBjb25zdCBzdW1tYXJ5ID0gKG5vZGU6IEhUTUxEaXZFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBTZXR0aW5nKG5vZGUpLnNldEhlYWRpbmcoKS5zZXROYW1lKG5hbWUpO1xuICAgIH07XG48L3NjcmlwdD5cblxuPGRldGFpbHMgY2xhc3M9XCJmYW50YXN5LWNhbGVuZGFyLW5lc3RlZC1zZXR0aW5nc1wiIHVzZTpkZXRhaWxzPlxuICAgIDxzdW1tYXJ5IGNsYXNzPVwiZmFudGFzeS1jYWxlbmRhci1uZXN0ZWQtc3VtbWFyeVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtIHNldHRpbmctaXRlbS1oZWFkaW5nXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWluZm9cIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLW5hbWVcIj57bmFtZX08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWRlc2NyaXB0aW9uXCIgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbGxhcHNlclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndhcm5pbmctY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgeyNpZiB3YXJufVxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHVzZTp3YXJuaW5nIC8+XG4gICAgICAgICAgICAgICAgey9pZn1cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGFuZGxlXCIgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L3N1bW1hcnk+XG4gICAgeyNpZiB3YXJuICYmIGxhYmVsfVxuICAgICAgICA8ZGl2IGNsYXNzPVwid2FybmluZy1sYWJlbC1jb250YWluZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb24gd2FybmluZy1sYWJlbFwiPlxuICAgICAgICAgICAgICAgIHtsYWJlbH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICB7L2lmfVxuICAgIDxzbG90IC8+XG48L2RldGFpbHM+XG5cbjxzdHlsZT5cbiAgICAud2FybmluZy1sYWJlbC1jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgIH1cbiAgICAuZmFudGFzeS1jYWxlbmRhci1uZXN0ZWQtc2V0dGluZ3Mge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuICAgIC53YXJuaW5nLWxhYmVsIHtcbiAgICAgICAgY29sb3I6IHZhcigtLXRleHQtZXJyb3IpO1xuICAgIH1cbiAgICAuZmFudGFzeS1jYWxlbmRhci1uZXN0ZWQtc3VtbWFyeSB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDFyZW07XG4gICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDAuMXJlbTtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAuMXJlbTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cblxuICAgIHN1bW1hcnk6Oi13ZWJraXQtZGV0YWlscy1tYXJrZXIsXG4gICAgc3VtbWFyeTo6bWFya2VyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAuY29sbGFwc2VyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgcmlnaHQ6IDhweDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgIH1cblxuICAgIC5oYW5kbGUge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMjVzO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgICAgIC13ZWJraXQtbWFzay1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgbWFzay1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgLXdlYmtpdC1tYXNrLXNpemU6IGNvbnRhaW47XG4gICAgICAgIG1hc2stc2l6ZTogY29udGFpbjtcbiAgICAgICAgLXdlYmtpdC1tYXNrLWltYWdlOiB2YXIoLS1hZG1vbml0aW9uLWRldGFpbHMtaWNvbik7XG4gICAgICAgIG1hc2staW1hZ2U6IHZhcigtLWFkbW9uaXRpb24tZGV0YWlscy1pY29uKTtcbiAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgIGhlaWdodDogMjBweDtcbiAgICB9XG5cbiAgICBkZXRhaWxzW29wZW5dIC5oYW5kbGUge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgfVxuPC9zdHlsZT5cbiIsICJpbXBvcnQgeyBzZXRJY29uIH0gZnJvbSBcIm9ic2lkaWFuXCI7XG5pbXBvcnQgdHlwZSB7IENhbGVuZGFyIH0gZnJvbSBcInNyYy9AdHlwZXNcIjtcbmltcG9ydCB7IGlzVmFsaWREYXksIGlzVmFsaWRNb250aCwgaXNWYWxpZFllYXIgfSBmcm9tIFwic3JjL3V0aWxzL2Z1bmN0aW9uc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gd2FybmluZyhub2RlOiBIVE1MRWxlbWVudCkge1xuICAgIHNldEljb24obm9kZSwgXCJmYW50YXN5LWNhbGVuZGFyLXdhcm5pbmdcIik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRNaXNzaW5nTm90aWNlKGNhbGVuZGFyOiBDYWxlbmRhcikge1xuICAgIGxldCBtaXNzaW5nQXJyOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgaWYgKCFjYWxlbmRhci5uYW1lPy5sZW5ndGgpIHtcbiAgICAgICAgbWlzc2luZ0Fyci5wdXNoKFwiQSBjYWxlbmRhciBtdXN0IGhhdmUgYSBuYW1lLlwiKTtcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICAgICFpc1ZhbGlkRGF5KGNhbGVuZGFyLmN1cnJlbnQuZGF5LCBjYWxlbmRhcikgfHxcbiAgICAgICAgIWlzVmFsaWRNb250aChjYWxlbmRhci5jdXJyZW50Lm1vbnRoLCBjYWxlbmRhcikgfHxcbiAgICAgICAgIWlzVmFsaWRZZWFyKGNhbGVuZGFyLmN1cnJlbnQueWVhciwgY2FsZW5kYXIpXG4gICAgKSB7XG4gICAgICAgIG1pc3NpbmdBcnIucHVzaChcIlNwZWNpZmllZCBjdXJyZW50IGRhdGUgaXMgbm90IHZhbGlkLlwiKTtcbiAgICB9XG4gICAgaWYgKCFjYWxlbmRhci5zdGF0aWMud2Vla2RheXM/Lmxlbmd0aCkge1xuICAgICAgICBtaXNzaW5nQXJyLnB1c2goXCJBIGNhbGVuZGFyIG11c3QgaGF2ZSBhdCBsZWFzdCAxIHdlZWtkYXkuXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghY2FsZW5kYXIuc3RhdGljLndlZWtkYXlzPy5ldmVyeSgoZCkgPT4gZC5uYW1lPy5sZW5ndGgpKSB7XG4gICAgICAgICAgICBjb25zdCBsZW5ndGggPSBjYWxlbmRhci5zdGF0aWMud2Vla2RheXM/LmZpbHRlcihcbiAgICAgICAgICAgICAgICAoZCkgPT4gIWQubmFtZT8ubGVuZ3RoXG4gICAgICAgICAgICApLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChsZW5ndGggPT0gMSkge1xuICAgICAgICAgICAgICAgIG1pc3NpbmdBcnIucHVzaChgJHtsZW5ndGh9IHdlZWtkYXkgZG9lcyBub3QgaGF2ZSBhIG5hbWUuYCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1pc3NpbmdBcnIucHVzaChgJHtsZW5ndGh9IHdlZWtkYXlzIGRvIG5vdCBoYXZlIG5hbWVzLmApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGNhbGVuZGFyLnN0YXRpYy5maXJzdFdlZWtEYXkgPj1cbiAgICAgICAgICAgIChjYWxlbmRhci5zdGF0aWMud2Vla2RheXM/Lmxlbmd0aCA/PyBJbmZpbml0eSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBtaXNzaW5nQXJyLnB1c2goXG4gICAgICAgICAgICAgICAgYEludmFsaWQgZmlyc3Qgd2Vla2RheSBzZWxlY3Rpb246ICR7XG4gICAgICAgICAgICAgICAgICAgIGNhbGVuZGFyLnN0YXRpYy53ZWVrZGF5c1tjYWxlbmRhci5zdGF0aWMuZmlyc3RXZWVrRGF5XVxuICAgICAgICAgICAgICAgIH1gXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmICghY2FsZW5kYXIuc3RhdGljLm1vbnRocz8ubGVuZ3RoKSB7XG4gICAgICAgIG1pc3NpbmdBcnIucHVzaChcIkEgY2FsZW5kYXIgbXVzdCBoYXZlIGF0IGxlYXN0IDEgbW9udGguXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghY2FsZW5kYXIuc3RhdGljLm1vbnRocz8uZXZlcnkoKG0pID0+IG0ubmFtZT8ubGVuZ3RoKSkge1xuICAgICAgICAgICAgY29uc3QgbGVuZ3RoID0gY2FsZW5kYXIuc3RhdGljLm1vbnRocz8uZmlsdGVyKFxuICAgICAgICAgICAgICAgIChtKSA9PiAhbS5uYW1lPy5sZW5ndGhcbiAgICAgICAgICAgICkubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKGxlbmd0aCA9PSAxKSB7XG4gICAgICAgICAgICAgICAgbWlzc2luZ0Fyci5wdXNoKGAke2xlbmd0aH0gbW9udGggZG9lcyBub3QgaGF2ZSBhIG5hbWUuYCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1pc3NpbmdBcnIucHVzaChgJHtsZW5ndGh9IG1vbnRocyBkbyBub3QgaGF2ZSBuYW1lcy5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIWNhbGVuZGFyLnN0YXRpYy5tb250aHM/LmV2ZXJ5KChtKSA9PiBtLmxlbmd0aCA+IDApKSB7XG4gICAgICAgICAgICBjb25zdCBsZW5ndGggPSBjYWxlbmRhci5zdGF0aWMubW9udGhzPy5maWx0ZXIoXG4gICAgICAgICAgICAgICAgKG0pID0+ICEobS5sZW5ndGggPiAwKVxuICAgICAgICAgICAgKS5sZW5ndGg7XG4gICAgICAgICAgICBpZiAobGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgICAgICBtaXNzaW5nQXJyLnB1c2goYCR7bGVuZ3RofSBtb250aCBkb2VzIG5vdCBoYXZlIGEgbGVuZ3RoLmApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtaXNzaW5nQXJyLnB1c2goYCR7bGVuZ3RofSBtb250aHMgZG8gbm90IGhhdmUgbGVuZ3Rocy5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoY2FsZW5kYXIuc3RhdGljLnVzZUN1c3RvbVllYXJzKSB7XG4gICAgICAgIGlmICghY2FsZW5kYXIuc3RhdGljLnllYXJzPy5sZW5ndGgpIHtcbiAgICAgICAgICAgIG1pc3NpbmdBcnIucHVzaChcbiAgICAgICAgICAgICAgICBgVXNlIEN1c3RvbSBZZWFycyBpcyBvbiBidXQgbm8geWVhcnMgaGF2ZSBiZWVuIGNyZWF0ZWQuYFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIGlmICghY2FsZW5kYXIuc3RhdGljLnllYXJzLmV2ZXJ5KCh5KSA9PiB5Lm5hbWU/Lmxlbmd0aCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IGNhbGVuZGFyLnN0YXRpYy55ZWFycy5maWx0ZXIoXG4gICAgICAgICAgICAgICAgKHkpID0+ICF5Lm5hbWU/Lmxlbmd0aFxuICAgICAgICAgICAgKS5sZW5ndGg7XG4gICAgICAgICAgICBpZiAobGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgICAgICBtaXNzaW5nQXJyLnB1c2goYCR7bGVuZ3RofSB5ZWFyIGRvZXMgbm90IGhhdmUgYSBuYW1lLmApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtaXNzaW5nQXJyLnB1c2goYCR7bGVuZ3RofSB5ZWFycyBkbyBub3QgaGF2ZSBuYW1lcy5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWlzc2luZ0Fyci5qb2luKFwiXFxuXCIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2FuU2F2ZShjYWxlbmRhcjogQ2FsZW5kYXIpIHtcbiAgICBpZiAoXG4gICAgICAgIGlzVmFsaWREYXkoY2FsZW5kYXIuY3VycmVudC5kYXksIGNhbGVuZGFyKSAmJlxuICAgICAgICBpc1ZhbGlkTW9udGgoY2FsZW5kYXIuY3VycmVudC5tb250aCwgY2FsZW5kYXIpICYmXG4gICAgICAgIGlzVmFsaWRZZWFyKGNhbGVuZGFyLmN1cnJlbnQueWVhciwgY2FsZW5kYXIpICYmXG4gICAgICAgIGNhbGVuZGFyLnN0YXRpYy5tb250aHM/Lmxlbmd0aCAmJlxuICAgICAgICBjYWxlbmRhci5zdGF0aWMubW9udGhzPy5ldmVyeSgobSkgPT4gbS5uYW1lPy5sZW5ndGgpICYmXG4gICAgICAgIGNhbGVuZGFyLnN0YXRpYy5tb250aHM/LmV2ZXJ5KChtKSA9PiBtLmxlbmd0aCA+IDApICYmXG4gICAgICAgIGNhbGVuZGFyLnN0YXRpYy53ZWVrZGF5cz8ubGVuZ3RoICYmXG4gICAgICAgIGNhbGVuZGFyLnN0YXRpYy53ZWVrZGF5cz8uZXZlcnkoKGQpID0+IGQubmFtZT8ubGVuZ3RoKSAmJlxuICAgICAgICBjYWxlbmRhci5uYW1lPy5sZW5ndGggJiZcbiAgICAgICAgY2FsZW5kYXIuc3RhdGljLmZpcnN0V2Vla0RheSA8XG4gICAgICAgICAgICAoY2FsZW5kYXIuc3RhdGljLndlZWtkYXlzPy5sZW5ndGggPz8gSW5maW5pdHkpICYmXG4gICAgICAgICghY2FsZW5kYXIuc3RhdGljLnVzZUN1c3RvbVllYXJzIHx8XG4gICAgICAgICAgICAoY2FsZW5kYXIuc3RhdGljLnVzZUN1c3RvbVllYXJzICYmXG4gICAgICAgICAgICAgICAgY2FsZW5kYXIuc3RhdGljLnllYXJzPy5sZW5ndGggJiZcbiAgICAgICAgICAgICAgICBjYWxlbmRhci5zdGF0aWMueWVhcnMuZXZlcnkoKHkpID0+IHkubmFtZT8ubGVuZ3RoKSkpXG4gICAgKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgZnVuY3Rpb24gaW52YWxpZERheUxhYmVsKGRheTogbnVtYmVyLCBjYWxlbmRhcjogQ2FsZW5kYXIpIHtcbiAgICBpZiAoZGF5ID09IG51bGwpIHJldHVybiBcIk5vIGRheSBzcGVjaWZpZWRcIjtcbiAgICBpZiAoY2FsZW5kYXI/LmN1cnJlbnQ/Lm1vbnRoID09IG51bGwpIHJldHVybiBcIk5vIG1vbnRoIHNlbGVjdGVkXCI7XG4gICAgaWYgKFxuICAgICAgICBkYXkgPCAxIHx8XG4gICAgICAgIGRheSA+IGNhbGVuZGFyPy5zdGF0aWM/Lm1vbnRoc1tjYWxlbmRhci5jdXJyZW50Py5tb250aF0/Lmxlbmd0aCB8fFxuICAgICAgICAhY2FsZW5kYXI/LnN0YXRpYz8ubW9udGhzW2NhbGVuZGFyLmN1cnJlbnQ/Lm1vbnRoXT8ubGVuZ3RoXG4gICAgKVxuICAgICAgICByZXR1cm4gXCJEYXkgZG9lcyBub3QgZXhpc3QgaW4gc2VsZWN0ZWQgbW9udGhcIjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGludmFsaWRNb250aExhYmVsKG1vbnRoOiBudW1iZXIsIGNhbGVuZGFyOiBDYWxlbmRhcikge1xuICAgIGlmIChtb250aCA9PSBudWxsKSByZXR1cm4gXCJObyBtb250aCBzcGVjaWZpZWRcIjtcbiAgICBpZiAoIWNhbGVuZGFyPy5zdGF0aWM/Lm1vbnRocz8ubGVuZ3RoKSByZXR1cm4gXCJObyBtb250aHMgZXhpc3RcIjtcbiAgICBpZiAobW9udGggPCAwIHx8IG1vbnRoID49IGNhbGVuZGFyPy5zdGF0aWM/Lm1vbnRocz8ubGVuZ3RoKVxuICAgICAgICByZXR1cm4gXCJTZWxlY3RlZCBtb250aCBkb2VzIG5vdCBleGlzdFwiO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW52YWxpZFllYXJMYWJlbCh5ZWFyOiBudW1iZXIsIGNhbGVuZGFyOiBDYWxlbmRhcikge1xuICAgIGlmICh5ZWFyID09IG51bGwpIHJldHVybiBcIk5vIHllYXIgc3BlY2lmaWVkXCI7XG4gICAgaWYgKHllYXIgPCAxICYmICFjYWxlbmRhci5zdGF0aWM/LnVzZUN1c3RvbVllYXJzKSByZXR1cm4gXCJZZWFycyBzdGFydCBhdCAxXCI7XG4gICAgaWYgKGNhbGVuZGFyPy5zdGF0aWM/LnVzZUN1c3RvbVllYXJzKSB7XG4gICAgICAgIGlmICghY2FsZW5kYXI/LnN0YXRpYz8ueWVhcnM/Lmxlbmd0aCkgcmV0dXJuIFwiTm8gY3VzdG9tIHllYXJzIGV4aXN0XCI7XG4gICAgICAgIGlmICh5ZWFyIDwgMCB8fCB5ZWFyID49IGNhbGVuZGFyPy5zdGF0aWM/LnllYXJzPy5sZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gXCJZZWFyIGRvZXMgbm90IGV4aXN0IGluIGN1c3RvbSB5ZWFyc1wiO1xuICAgIH1cbn1cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuICAgIGltcG9ydCB0eXBlIHsgQ2FsZW5kYXIgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuaW1wb3J0IHsgaXNWYWxpZERheSwgaXNWYWxpZE1vbnRoLCBpc1ZhbGlkWWVhciB9IGZyb20gXCJzcmMvdXRpbHMvZnVuY3Rpb25zXCI7XG4gICAgaW1wb3J0IHsgZ2V0Q29udGV4dCB9IGZyb20gXCJzdmVsdGVcIjtcbiAgICBpbXBvcnQgeyBXcml0YWJsZSB9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcbiAgICBpbXBvcnQgRGV0YWlscyBmcm9tIFwiLi4vVXRpbGl0aWVzL0RldGFpbHMuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IHtcbiAgICAgICAgd2FybmluZyxcbiAgICAgICAgaW52YWxpZERheUxhYmVsLFxuICAgICAgICBpbnZhbGlkTW9udGhMYWJlbCxcbiAgICAgICAgaW52YWxpZFllYXJMYWJlbCxcbiAgICB9IGZyb20gXCIuLi9VdGlsaXRpZXMvdXRpbHNcIjtcblxuICAgIGxldCBjYWxlbmRhcjogQ2FsZW5kYXI7XG4gICAgY29uc3Qgc3RvcmUgPSBnZXRDb250ZXh0PFdyaXRhYmxlPENhbGVuZGFyPj4oXCJzdG9yZVwiKTtcblxuICAgIHN0b3JlLnN1YnNjcmliZSgodikgPT4gKGNhbGVuZGFyID0gdikpO1xuXG4gICAgJDogY3VycmVudCA9IGNhbGVuZGFyLmN1cnJlbnQ7XG4gICAgJDogbW9udGhzID0gY2FsZW5kYXIuc3RhdGljLm1vbnRocztcblxuICAgICQ6IHZhbGlkRGF5ID0gaXNWYWxpZERheShjdXJyZW50LmRheSwgY2FsZW5kYXIpO1xuICAgICQ6IHZhbGlkTW9udGggPSBpc1ZhbGlkTW9udGgoY3VycmVudC5tb250aCwgY2FsZW5kYXIpO1xuICAgICQ6IHZhbGlkWWVhciA9IGlzVmFsaWRZZWFyKGN1cnJlbnQueWVhciwgY2FsZW5kYXIpO1xuICAgICQ6IGludmFsaWQgPSAhdmFsaWREYXkgfHwgIXZhbGlkTW9udGggfHwgIXZhbGlkWWVhcjtcbjwvc2NyaXB0PlxuXG48RGV0YWlsc1xuICAgIG5hbWU9e1wiQ3VycmVudCBEYXRlXCJ9XG4gICAgd2Fybj17aW52YWxpZH1cbiAgICBsYWJlbD17XCJJbnZhbGlkIGN1cnJlbnQgZGF0ZSBzcGVjaWZpZWRcIn1cbj5cbiAgICA8ZGl2IGNsYXNzPVwiZmFudGFzeS1jYWxlbmRhci1kYXRlLWZpZWxkLWNvbnRhaW5lciBzZXR0aW5nLWl0ZW1cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZhbnRhc3ktY2FsZW5kYXItZGF0ZS1maWVsZFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndhcm5pbmctY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cIlwiPkRheTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgeyNpZiAhdmFsaWREYXl9XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgdXNlOndhcm5pbmcgLz5cbiAgICAgICAgICAgICAgICB7L2lmfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICBzcGVsbGNoZWNrPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiRGF5XCJcbiAgICAgICAgICAgICAgICBjbGFzczppbnZhbGlkPXshdmFsaWREYXl9XG4gICAgICAgICAgICAgICAgYmluZDp2YWx1ZT17Y3VycmVudC5kYXl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgeyNpZiBpbnZhbGlkfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgeyNpZiAhdmFsaWREYXl9XG4gICAgICAgICAgICAgICAgICAgICAgICB7aW52YWxpZERheUxhYmVsKGN1cnJlbnQuZGF5LCBjYWxlbmRhcil9XG4gICAgICAgICAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7L2lmfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZhbnRhc3ktY2FsZW5kYXItZGF0ZS1maWVsZFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndhcm5pbmctY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cIlwiPk1vbnRoPC9sYWJlbD5cbiAgICAgICAgICAgICAgICB7I2lmICF2YWxpZE1vbnRofVxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHVzZTp3YXJuaW5nIC8+XG4gICAgICAgICAgICAgICAgey9pZn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgIGNsYXNzPVwiZHJvcGRvd25cIlxuICAgICAgICAgICAgICAgIGJpbmQ6dmFsdWU9e2N1cnJlbnQubW9udGh9XG4gICAgICAgICAgICAgICAgY2xhc3M6aW52YWxpZD17IXZhbGlkTW9udGh9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgeyNlYWNoIG1vbnRocy5maWx0ZXIoKG0pID0+IG0ubmFtZSkgYXMgbW9udGgsIGluZGV4fVxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPXtpbmRleH0+e21vbnRoLm5hbWV9PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgey9lYWNofVxuICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICB7I2lmIGludmFsaWR9XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICB7I2lmICF2YWxpZE1vbnRofVxuICAgICAgICAgICAgICAgICAgICAgICAge2ludmFsaWRNb250aExhYmVsKGN1cnJlbnQubW9udGgsIGNhbGVuZGFyKX1cbiAgICAgICAgICAgICAgICAgICAgey9pZn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmFudGFzeS1jYWxlbmRhci1kYXRlLWZpZWxkXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2FybmluZy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiXCI+WWVhcjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgeyNpZiAhdmFsaWRZZWFyfVxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHVzZTp3YXJuaW5nIC8+XG4gICAgICAgICAgICAgICAgey9pZn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgc3BlbGxjaGVjaz1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlllYXJcIlxuICAgICAgICAgICAgICAgIGNsYXNzOmludmFsaWQ9eyF2YWxpZFllYXJ9XG4gICAgICAgICAgICAgICAgYmluZDp2YWx1ZT17Y3VycmVudC55ZWFyfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHsjaWYgaW52YWxpZH1cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWRlc2NyaXB0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgIHsjaWYgIXZhbGlkWWVhcn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtpbnZhbGlkWWVhckxhYmVsKGN1cnJlbnQueWVhciwgY2FsZW5kYXIpfVxuICAgICAgICAgICAgICAgICAgICB7L2lmfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgey9pZn1cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L0RldGFpbHM+XG5cbjxzdHlsZT5cbiAgICAuZmFudGFzeS1jYWxlbmRhci1kYXRlLWZpZWxkLWNvbnRhaW5lciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGdhcDogMXJlbTtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgIH1cbiAgICAuZmFudGFzeS1jYWxlbmRhci1kYXRlLWZpZWxkIHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC1hdXRvLXJvd3M6IDFmcjtcbiAgICAgICAgZmxleDogMSAxIDA7XG4gICAgICAgIGdhcDogMC41cmVtO1xuICAgIH1cblxuICAgIC5mYW50YXN5LWNhbGVuZGFyLWRhdGUtZmllbGQgLnNldHRpbmctaXRlbS1kZXNjcmlwdGlvbiB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAwO1xuICAgIH1cblxuICAgIC5mYW50YXN5LWNhbGVuZGFyLWRhdGUtZmllbGQgLmludmFsaWQge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS10ZXh0LWVycm9yKTtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSBcInN2ZWx0ZVwiO1xuXG4gICAgY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblxuICAgIGV4cG9ydCBsZXQgdmFsdWU6IHN0cmluZztcbiAgICBleHBvcnQgbGV0IG5hbWU6IHN0cmluZztcblxuICAgIGV4cG9ydCBsZXQgcGxhY2Vob2xkZXIgPSBuYW1lO1xuICAgIGV4cG9ydCBsZXQgY2xzID0gXCJcIjtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwidGV4dC1hcmVhLWNvbXBvbmVudCBzZXR0aW5nLWl0ZW1cIiBjbGFzczpjbHM+XG4gICAgPCEtLSBzdmVsdGUtaWdub3JlIGExMXktbGFiZWwtaGFzLWFzc29jaWF0ZWQtY29udHJvbCAtLT5cbiAgICA8bGFiZWw+e25hbWV9PC9sYWJlbD5cbiAgICA8dGV4dGFyZWFcbiAgICAgICAgc3BlbGxjaGVjaz1cImZhbHNlXCJcbiAgICAgICAge3BsYWNlaG9sZGVyfVxuICAgICAgICBiaW5kOnZhbHVlXG4gICAgICAgIG9uOmJsdXI9eygpID0+IGRpc3BhdGNoKFwiYmx1clwiLCB2YWx1ZSl9XG4gICAgLz5cbjwvZGl2PlxuXG48c3R5bGU+XG4gICAgLnRleHQtYXJlYS1jb21wb25lbnQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gICAgdGV4dGFyZWEge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHsgd2FybmluZyB9IGZyb20gXCIuLi9VdGlsaXRpZXMvdXRpbHNcIjtcbiAgICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tIFwic3ZlbHRlXCI7XG5cbiAgICBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG4gICAgZXhwb3J0IGxldCB2YWx1ZTogc3RyaW5nO1xuICAgIGV4cG9ydCBsZXQgbmFtZTogc3RyaW5nO1xuICAgIGV4cG9ydCBsZXQgd2FybjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgZXhwb3J0IGxldCBkZXNjID0gXCJcIjtcblxuICAgIGV4cG9ydCBsZXQgcGxhY2Vob2xkZXIgPSBuYW1lO1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW1cIj5cbiAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWluZm9cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1uYW1lXCI+XG4gICAgICAgICAgICB7bmFtZX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb25cIj57ZGVzY308L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWNvbnRyb2xcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIndhcm5pbmctY29udGFpbmVyXCI+XG4gICAgICAgICAgICB7I2lmIHdhcm59XG4gICAgICAgICAgICAgICAgPGRpdiB1c2U6d2FybmluZyAvPlxuICAgICAgICAgICAgey9pZn1cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICBzcGVsbGNoZWNrPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAgIHtwbGFjZWhvbGRlcn1cbiAgICAgICAgICAgICAgICBjbGFzczp3YXJuXG4gICAgICAgICAgICAgICAgYmluZDp2YWx1ZVxuICAgICAgICAgICAgICAgIG9uOmJsdXI9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goXCJibHVyXCIsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L2Rpdj5cblxuPHN0eWxlPlxuICAgIGlucHV0Lndhcm4ge1xuICAgICAgICBib3JkZXItY29sb3I6IHZhcigtLXRleHQtZXJyb3IpO1xuICAgIH1cbjwvc3R5bGU+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBleHBvcnQgbGV0IG5hbWU6IHN0cmluZztcbiAgICBleHBvcnQgbGV0IGRlc2M6IHN0cmluZyB8IERvY3VtZW50RnJhZ21lbnQ7XG4gICAgZXhwb3J0IGxldCB2YWx1ZTogYm9vbGVhbjtcbiAgICBjb25zdCBkZXNjRWwgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgbm9kZS5hcHBlbmQoZGVzYyk7XG4gICAgfTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtIG1vZC10b2dnbGVcIj5cbiAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWluZm9cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1uYW1lXCI+e25hbWV9PC9kaXY+XG4gICAgICAgIHsjaWYgZGVzY31cbiAgICAgICAgICAgIHsjaWYgdHlwZW9mIGRlc2MgPT0gXCJzdHJpbmdcIn1cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWRlc2NyaXB0aW9uXCI+e2Rlc2N9PC9kaXY+XG4gICAgICAgICAgICB7OmVsc2V9XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1kZXNjcmlwdGlvblwiIHVzZTpkZXNjRWwgLz5cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIHsvaWZ9XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1jb250cm9sXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjaGVja2JveC1jb250YWluZXJcIiBjbGFzczppcy1lbmFibGVkPXt2YWx1ZX0gb246Y2xpY2sgLz5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHR5cGUgeyBDYWxlbmRhciB9IGZyb20gXCJzcmMvQHR5cGVzXCI7XG4gICAgaW1wb3J0IHsgZ2V0Q29udGV4dCB9IGZyb20gXCJzdmVsdGVcIjtcbiAgICBpbXBvcnQgeyBXcml0YWJsZSB9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcbiAgICBpbXBvcnQgVGV4dEFyZWFDb21wb25lbnQgZnJvbSBcIi4uL1NldHRpbmdzL1RleHRBcmVhQ29tcG9uZW50LnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBUZXh0Q29tcG9uZW50IGZyb20gXCIuLi9TZXR0aW5ncy9UZXh0Q29tcG9uZW50LnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBUb2dnbGVDb21wb25lbnQgZnJvbSBcIi4uL1NldHRpbmdzL1RvZ2dsZUNvbXBvbmVudC5zdmVsdGVcIjtcbiAgICBpbXBvcnQgRGV0YWlscyBmcm9tIFwiLi4vVXRpbGl0aWVzL0RldGFpbHMuc3ZlbHRlXCI7XG5cbiAgICBleHBvcnQgbGV0IGNhbGVuZGFyOiBDYWxlbmRhcjtcblxuICAgIGNvbnN0IHN0b3JlID0gZ2V0Q29udGV4dDxXcml0YWJsZTxDYWxlbmRhcj4+KFwic3RvcmVcIik7XG4gICAgc3RvcmUuc3Vic2NyaWJlKCh2KSA9PiAoY2FsZW5kYXIgPSB2KSk7XG5cbiAgICAkOiBkaXNwbGF5RGF5TnVtYmVyID0gY2FsZW5kYXIuc3RhdGljLmRpc3BsYXlEYXlOdW1iZXI7XG4gICAgJDogaW5jcmVtZW50RGF5ID0gY2FsZW5kYXIuc3RhdGljLmluY3JlbWVudERheTtcblxuICAgICQ6IHZhbGlkTmFtZSA9IGNhbGVuZGFyLm5hbWUgIT0gbnVsbCAmJiBjYWxlbmRhci5uYW1lLmxlbmd0aDtcbjwvc2NyaXB0PlxuXG48RGV0YWlsc1xuICAgIG5hbWU9e1wiQmFzaWMgSW5mb1wifVxuICAgIHdhcm49eyF2YWxpZE5hbWV9XG4gICAgbGFiZWw9e1wiVGhlIGNhbGVuZGFyIG11c3QgaGF2ZSBhIG5hbWVcIn1cbj5cbiAgICA8ZGl2IGNsYXNzPVwiZmFudGFzeS1jYWxlbmRhci1pbmZvXCI+XG4gICAgICAgIDxUZXh0Q29tcG9uZW50XG4gICAgICAgICAgICBuYW1lPXtcIkNhbGVuZGFyIE5hbWVcIn1cbiAgICAgICAgICAgIHdhcm49eyF2YWxpZE5hbWV9XG4gICAgICAgICAgICBkZXNjPXshdmFsaWROYW1lID8gXCJUaGUgY2FsZW5kYXIgbXVzdCBoYXZlIGEgbmFtZVwiIDogXCJcIn1cbiAgICAgICAgICAgIHZhbHVlPXtjYWxlbmRhci5uYW1lfVxuICAgICAgICAgICAgb246Ymx1cj17KGV2dCkgPT4ge1xuICAgICAgICAgICAgICAgIGNhbGVuZGFyLm5hbWUgPSBldnQuZGV0YWlsO1xuICAgICAgICAgICAgICAgIHN0b3JlLnNldChjYWxlbmRhcik7XG4gICAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgICA8VGV4dEFyZWFDb21wb25lbnRcbiAgICAgICAgICAgIG5hbWU9e1wiQ2FsZW5kYXIgRGVzY3JpcHRpb25cIn1cbiAgICAgICAgICAgIHZhbHVlPXtjYWxlbmRhci5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAgIG9uOmJsdXI9eyhldnQpID0+IChjYWxlbmRhci5kZXNjcmlwdGlvbiA9IGV2dC5kZXRhaWwpfVxuICAgICAgICAvPlxuICAgICAgICA8VG9nZ2xlQ29tcG9uZW50XG4gICAgICAgICAgICBuYW1lPXtcIkRpc3BsYXkgRGF5IE51bWJlclwifVxuICAgICAgICAgICAgZGVzYz17XCJEaXNwbGF5IGRheSBvZiB5ZWFyIGluIERheSBWaWV3XCJ9XG4gICAgICAgICAgICB2YWx1ZT17ZGlzcGxheURheU51bWJlcn1cbiAgICAgICAgICAgIG9uOmNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgY2FsZW5kYXIuc3RhdGljLmRpc3BsYXlEYXlOdW1iZXIgPVxuICAgICAgICAgICAgICAgICAgICAhY2FsZW5kYXIuc3RhdGljLmRpc3BsYXlEYXlOdW1iZXI7XG4gICAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgICA8VG9nZ2xlQ29tcG9uZW50XG4gICAgICAgICAgICBuYW1lPXtcIkF1dG8gSW5jcmVtZW50IERheVwifVxuICAgICAgICAgICAgZGVzYz17XCJBdXRvbWF0aWNhbGx5IGluY3JlbWVudCB0aGUgY3VycmVudCBkYXkgZXZlcnkgcmVhbC13b3JsZCBkYXkuXCJ9XG4gICAgICAgICAgICB2YWx1ZT17aW5jcmVtZW50RGF5fVxuICAgICAgICAgICAgb246Y2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICBjYWxlbmRhci5zdGF0aWMuaW5jcmVtZW50RGF5ID0gIWNhbGVuZGFyLnN0YXRpYy5pbmNyZW1lbnREYXk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgIDwvZGl2PlxuPC9EZXRhaWxzPlxuXG48c3R5bGU+XG4gICAgLmZhbnRhc3ktY2FsZW5kYXItaW5mbyA6Z2xvYmFsKC5zZXR0aW5nLWl0ZW0pIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDE4cHg7XG4gICAgfVxuICAgIC5mYW50YXN5LWNhbGVuZGFyLWluZm8gOmdsb2JhbCguZmFudGFzeS1jYWxlbmRhci1kZXNjcmlwdGlvbikge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgfVxuICAgIC5mYW50YXN5LWNhbGVuZGFyLWluZm9cbiAgICAgICAgOmdsb2JhbCguZmFudGFzeS1jYWxlbmRhci1kZXNjcmlwdGlvbilcbiAgICAgICAgOmdsb2JhbCh0ZXh0YXJlYSkge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG48L3N0eWxlPlxuIiwgImltcG9ydCB7IGN1YmljT3V0IH0gZnJvbSAnLi4vZWFzaW5nL2luZGV4Lm1qcyc7XG5pbXBvcnQgeyBpc19mdW5jdGlvbiB9IGZyb20gJy4uL2ludGVybmFsL2luZGV4Lm1qcyc7XG5cbmZ1bmN0aW9uIGZsaXAobm9kZSwgeyBmcm9tLCB0byB9LCBwYXJhbXMgPSB7fSkge1xuICAgIGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcbiAgICBjb25zdCB0cmFuc2Zvcm0gPSBzdHlsZS50cmFuc2Zvcm0gPT09ICdub25lJyA/ICcnIDogc3R5bGUudHJhbnNmb3JtO1xuICAgIGNvbnN0IFtveCwgb3ldID0gc3R5bGUudHJhbnNmb3JtT3JpZ2luLnNwbGl0KCcgJykubWFwKHBhcnNlRmxvYXQpO1xuICAgIGNvbnN0IGR4ID0gKGZyb20ubGVmdCArIGZyb20ud2lkdGggKiBveCAvIHRvLndpZHRoKSAtICh0by5sZWZ0ICsgb3gpO1xuICAgIGNvbnN0IGR5ID0gKGZyb20udG9wICsgZnJvbS5oZWlnaHQgKiBveSAvIHRvLmhlaWdodCkgLSAodG8udG9wICsgb3kpO1xuICAgIGNvbnN0IHsgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IChkKSA9PiBNYXRoLnNxcnQoZCkgKiAxMjAsIGVhc2luZyA9IGN1YmljT3V0IH0gPSBwYXJhbXM7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGVsYXksXG4gICAgICAgIGR1cmF0aW9uOiBpc19mdW5jdGlvbihkdXJhdGlvbikgPyBkdXJhdGlvbihNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpKSA6IGR1cmF0aW9uLFxuICAgICAgICBlYXNpbmcsXG4gICAgICAgIGNzczogKHQsIHUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHggPSB1ICogZHg7XG4gICAgICAgICAgICBjb25zdCB5ID0gdSAqIGR5O1xuICAgICAgICAgICAgY29uc3Qgc3ggPSB0ICsgdSAqIGZyb20ud2lkdGggLyB0by53aWR0aDtcbiAgICAgICAgICAgIGNvbnN0IHN5ID0gdCArIHUgKiBmcm9tLmhlaWdodCAvIHRvLmhlaWdodDtcbiAgICAgICAgICAgIHJldHVybiBgdHJhbnNmb3JtOiAke3RyYW5zZm9ybX0gdHJhbnNsYXRlKCR7eH1weCwgJHt5fXB4KSBzY2FsZSgke3N4fSwgJHtzeX0pO2A7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5leHBvcnQgeyBmbGlwIH07XG4iLCAiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkge1xuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7XG5cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTtcbiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTtcbiAgICB9KTtcbiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7XG4gIH1cblxuICByZXR1cm4ga2V5cztcbn1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZDIodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG5cbiAgICBpZiAoaSAlIDIpIHtcbiAgICAgIG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcblxuICB2YXIgdGFyZ2V0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7XG5cbiAgdmFyIGtleSwgaTtcblxuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IHNvdXJjZVN5bWJvbEtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07XG4gICAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoc291cmNlLCBrZXkpKSBjb250aW51ZTtcbiAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7XG59XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47XG4gIHZhciBfYXJyID0gW107XG4gIHZhciBfbiA9IHRydWU7XG4gIHZhciBfZCA9IGZhbHNlO1xuICB2YXIgX2UgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZCA9IHRydWU7XG4gICAgX2UgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gX2Fycjtcbn1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTtcbiAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG5cbiAgcmV0dXJuIGFycjI7XG59XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5cbmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG8sIGFsbG93QXJyYXlMaWtlKSB7XG4gIHZhciBpdDtcblxuICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBvW1N5bWJvbC5pdGVyYXRvcl0gPT0gbnVsbCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG8pIHx8IChpdCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvKSkgfHwgYWxsb3dBcnJheUxpa2UgJiYgbyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIGlmIChpdCkgbyA9IGl0O1xuICAgICAgdmFyIGkgPSAwO1xuXG4gICAgICB2YXIgRiA9IGZ1bmN0aW9uICgpIHt9O1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBzOiBGLFxuICAgICAgICBuOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaWYgKGkgPj0gby5sZW5ndGgpIHJldHVybiB7XG4gICAgICAgICAgICBkb25lOiB0cnVlXG4gICAgICAgICAgfTtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZG9uZTogZmFsc2UsXG4gICAgICAgICAgICB2YWx1ZTogb1tpKytdXG4gICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgZTogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9LFxuICAgICAgICBmOiBGXG4gICAgICB9O1xuICAgIH1cblxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbiAgfVxuXG4gIHZhciBub3JtYWxDb21wbGV0aW9uID0gdHJ1ZSxcbiAgICAgIGRpZEVyciA9IGZhbHNlLFxuICAgICAgZXJyO1xuICByZXR1cm4ge1xuICAgIHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGl0ID0gb1tTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgfSxcbiAgICBuOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc3RlcCA9IGl0Lm5leHQoKTtcbiAgICAgIG5vcm1hbENvbXBsZXRpb24gPSBzdGVwLmRvbmU7XG4gICAgICByZXR1cm4gc3RlcDtcbiAgICB9LFxuICAgIGU6IGZ1bmN0aW9uIChlKSB7XG4gICAgICBkaWRFcnIgPSB0cnVlO1xuICAgICAgZXJyID0gZTtcbiAgICB9LFxuICAgIGY6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmICghbm9ybWFsQ29tcGxldGlvbiAmJiBpdC5yZXR1cm4gIT0gbnVsbCkgaXQucmV0dXJuKCk7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBpZiAoZGlkRXJyKSB0aHJvdyBlcnI7XG4gICAgICB9XG4gICAgfVxuICB9O1xufVxuXG4vLyBleHRlcm5hbCBldmVudHNcbnZhciBGSU5BTElaRV9FVkVOVF9OQU1FID0gXCJmaW5hbGl6ZVwiO1xudmFyIENPTlNJREVSX0VWRU5UX05BTUUgPSBcImNvbnNpZGVyXCI7XG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IEluZm9cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0cmlnZ2VyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaWRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBzb3VyY2VcbiAqIEBwYXJhbSB7Tm9kZX0gZWxcbiAqIEBwYXJhbSB7QXJyYXl9IGl0ZW1zXG4gKiBAcGFyYW0ge0luZm99IGluZm9cbiAqL1xuXG5mdW5jdGlvbiBkaXNwYXRjaEZpbmFsaXplRXZlbnQoZWwsIGl0ZW1zLCBpbmZvKSB7XG4gIGVsLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KEZJTkFMSVpFX0VWRU5UX05BTUUsIHtcbiAgICBkZXRhaWw6IHtcbiAgICAgIGl0ZW1zOiBpdGVtcyxcbiAgICAgIGluZm86IGluZm9cbiAgICB9XG4gIH0pKTtcbn1cbi8qKlxuICogRGlzcGF0Y2hlcyBhIGNvbnNpZGVyIGV2ZW50XG4gKiBAcGFyYW0ge05vZGV9IGVsXG4gKiBAcGFyYW0ge0FycmF5fSBpdGVtc1xuICogQHBhcmFtIHtJbmZvfSBpbmZvXG4gKi9cblxuZnVuY3Rpb24gZGlzcGF0Y2hDb25zaWRlckV2ZW50KGVsLCBpdGVtcywgaW5mbykge1xuICBlbC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChDT05TSURFUl9FVkVOVF9OQU1FLCB7XG4gICAgZGV0YWlsOiB7XG4gICAgICBpdGVtczogaXRlbXMsXG4gICAgICBpbmZvOiBpbmZvXG4gICAgfVxuICB9KSk7XG59IC8vIGludGVybmFsIGV2ZW50c1xuXG52YXIgRFJBR0dFRF9FTlRFUkVEX0VWRU5UX05BTUUgPSBcImRyYWdnZWRFbnRlcmVkXCI7XG52YXIgRFJBR0dFRF9MRUZUX0VWRU5UX05BTUUgPSBcImRyYWdnZWRMZWZ0XCI7XG52YXIgRFJBR0dFRF9PVkVSX0lOREVYX0VWRU5UX05BTUUgPSBcImRyYWdnZWRPdmVySW5kZXhcIjtcbnZhciBEUkFHR0VEX0xFRlRfRE9DVU1FTlRfRVZFTlRfTkFNRSA9IFwiZHJhZ2dlZExlZnREb2N1bWVudFwiO1xudmFyIERSQUdHRURfTEVGVF9UWVBFUyA9IHtcbiAgTEVGVF9GT1JfQU5PVEhFUjogXCJsZWZ0Rm9yQW5vdGhlclwiLFxuICBPVVRTSURFX09GX0FOWTogXCJvdXRzaWRlT2ZBbnlcIlxufTtcbmZ1bmN0aW9uIGRpc3BhdGNoRHJhZ2dlZEVsZW1lbnRFbnRlcmVkQ29udGFpbmVyKGNvbnRhaW5lckVsLCBpbmRleE9iaiwgZHJhZ2dlZEVsKSB7XG4gIGNvbnRhaW5lckVsLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KERSQUdHRURfRU5URVJFRF9FVkVOVF9OQU1FLCB7XG4gICAgZGV0YWlsOiB7XG4gICAgICBpbmRleE9iajogaW5kZXhPYmosXG4gICAgICBkcmFnZ2VkRWw6IGRyYWdnZWRFbFxuICAgIH1cbiAgfSkpO1xufVxuLyoqXG4gKiBAcGFyYW0gY29udGFpbmVyRWwgLSB0aGUgZHJvcHpvbmUgdGhlIGVsZW1lbnQgbGVmdFxuICogQHBhcmFtIGRyYWdnZWRFbCAtIHRoZSBkcmFnZ2VkIGVsZW1lbnRcbiAqIEBwYXJhbSB0aGVPdGhlckR6IC0gdGhlIG5ldyBkcm9wem9uZSB0aGUgZWxlbWVudCBlbnRlcmVkXG4gKi9cblxuZnVuY3Rpb24gZGlzcGF0Y2hEcmFnZ2VkRWxlbWVudExlZnRDb250YWluZXJGb3JBbm90aGVyKGNvbnRhaW5lckVsLCBkcmFnZ2VkRWwsIHRoZU90aGVyRHopIHtcbiAgY29udGFpbmVyRWwuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoRFJBR0dFRF9MRUZUX0VWRU5UX05BTUUsIHtcbiAgICBkZXRhaWw6IHtcbiAgICAgIGRyYWdnZWRFbDogZHJhZ2dlZEVsLFxuICAgICAgdHlwZTogRFJBR0dFRF9MRUZUX1RZUEVTLkxFRlRfRk9SX0FOT1RIRVIsXG4gICAgICB0aGVPdGhlckR6OiB0aGVPdGhlckR6XG4gICAgfVxuICB9KSk7XG59XG5mdW5jdGlvbiBkaXNwYXRjaERyYWdnZWRFbGVtZW50TGVmdENvbnRhaW5lckZvck5vbmUoY29udGFpbmVyRWwsIGRyYWdnZWRFbCkge1xuICBjb250YWluZXJFbC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChEUkFHR0VEX0xFRlRfRVZFTlRfTkFNRSwge1xuICAgIGRldGFpbDoge1xuICAgICAgZHJhZ2dlZEVsOiBkcmFnZ2VkRWwsXG4gICAgICB0eXBlOiBEUkFHR0VEX0xFRlRfVFlQRVMuT1VUU0lERV9PRl9BTllcbiAgICB9XG4gIH0pKTtcbn1cbmZ1bmN0aW9uIGRpc3BhdGNoRHJhZ2dlZEVsZW1lbnRJc092ZXJJbmRleChjb250YWluZXJFbCwgaW5kZXhPYmosIGRyYWdnZWRFbCkge1xuICBjb250YWluZXJFbC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChEUkFHR0VEX09WRVJfSU5ERVhfRVZFTlRfTkFNRSwge1xuICAgIGRldGFpbDoge1xuICAgICAgaW5kZXhPYmo6IGluZGV4T2JqLFxuICAgICAgZHJhZ2dlZEVsOiBkcmFnZ2VkRWxcbiAgICB9XG4gIH0pKTtcbn1cbmZ1bmN0aW9uIGRpc3BhdGNoRHJhZ2dlZExlZnREb2N1bWVudChkcmFnZ2VkRWwpIHtcbiAgd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KERSQUdHRURfTEVGVF9ET0NVTUVOVF9FVkVOVF9OQU1FLCB7XG4gICAgZGV0YWlsOiB7XG4gICAgICBkcmFnZ2VkRWw6IGRyYWdnZWRFbFxuICAgIH1cbiAgfSkpO1xufVxuXG52YXIgVFJJR0dFUlMgPSB7XG4gIERSQUdfU1RBUlRFRDogXCJkcmFnU3RhcnRlZFwiLFxuICBEUkFHR0VEX0VOVEVSRUQ6IERSQUdHRURfRU5URVJFRF9FVkVOVF9OQU1FLFxuICBEUkFHR0VEX0VOVEVSRURfQU5PVEhFUjogXCJkcmFnRW50ZXJlZEFub3RoZXJcIixcbiAgRFJBR0dFRF9PVkVSX0lOREVYOiBEUkFHR0VEX09WRVJfSU5ERVhfRVZFTlRfTkFNRSxcbiAgRFJBR0dFRF9MRUZUOiBEUkFHR0VEX0xFRlRfRVZFTlRfTkFNRSxcbiAgRFJBR0dFRF9MRUZUX0FMTDogXCJkcmFnZ2VkTGVmdEFsbFwiLFxuICBEUk9QUEVEX0lOVE9fWk9ORTogXCJkcm9wcGVkSW50b1pvbmVcIixcbiAgRFJPUFBFRF9JTlRPX0FOT1RIRVI6IFwiZHJvcHBlZEludG9Bbm90aGVyXCIsXG4gIERST1BQRURfT1VUU0lERV9PRl9BTlk6IFwiZHJvcHBlZE91dHNpZGVPZkFueVwiLFxuICBEUkFHX1NUT1BQRUQ6IFwiZHJhZ1N0b3BwZWRcIlxufTtcbnZhciBTT1VSQ0VTID0ge1xuICBQT0lOVEVSOiBcInBvaW50ZXJcIixcbiAgS0VZQk9BUkQ6IFwia2V5Ym9hcmRcIlxufTtcbnZhciBTSEFET1dfSVRFTV9NQVJLRVJfUFJPUEVSVFlfTkFNRSA9IFwiaXNEbmRTaGFkb3dJdGVtXCI7XG52YXIgU0hBRE9XX0VMRU1FTlRfQVRUUklCVVRFX05BTUUgPSBcImRhdGEtaXMtZG5kLXNoYWRvdy1pdGVtXCI7XG52YXIgU0hBRE9XX1BMQUNFSE9MREVSX0lURU1fSUQgPSBcImlkOmRuZC1zaGFkb3ctcGxhY2Vob2xkZXItMDAwMFwiO1xudmFyIERSQUdHRURfRUxFTUVOVF9JRCA9IFwiZG5kLWFjdGlvbi1kcmFnZ2VkLWVsXCI7XG52YXIgSVRFTV9JRF9LRVkgPSBcImlkXCI7XG52YXIgYWN0aXZlRG5kWm9uZUNvdW50ID0gMDtcbmZ1bmN0aW9uIGluY3JlbWVudEFjdGl2ZURyb3Bab25lQ291bnQoKSB7XG4gIGFjdGl2ZURuZFpvbmVDb3VudCsrO1xufVxuZnVuY3Rpb24gZGVjcmVtZW50QWN0aXZlRHJvcFpvbmVDb3VudCgpIHtcbiAgaWYgKGFjdGl2ZURuZFpvbmVDb3VudCA9PT0gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkJ1ZyEgdHJ5aW5nIHRvIGRlY3JlbWVudCB3aGVuIHRoZXJlIGFyZSBubyBkcm9wem9uZXNcIik7XG4gIH1cblxuICBhY3RpdmVEbmRab25lQ291bnQtLTtcbn1cbi8qKlxuICogQWxsb3dzIHVzaW5nIGFub3RoZXIga2V5IGluc3RlYWQgb2YgXCJpZFwiIGluIHRoZSBpdGVtcyBkYXRhLiBUaGlzIGlzIGdsb2JhbCBhbmQgYXBwbGllcyB0byBhbGwgZG5kem9uZXMuXG4gKiBIYXMgdG8gYmUgY2FsbGVkIHdoZW4gdGhlcmUgYXJlIG5vIHJlbmRlcmVkIGRuZHpvbmVzIHdoYXRzb2V2ZXIuXG4gKiBAcGFyYW0ge1N0cmluZ30gbmV3S2V5TmFtZVxuICogQHRocm93cyB7RXJyb3J9IGlmIGl0IHdhcyBjYWxsZWQgd2hlbiB0aGVyZSBhcmUgcmVuZGVyZWQgZG5kem9uZXMgb3IgaWYgaXQgaXMgZ2l2ZW4gdGhlIHdyb25nIHR5cGUgKG5vdCBhIHN0cmluZylcbiAqL1xuXG5mdW5jdGlvbiBvdmVycmlkZUl0ZW1JZEtleU5hbWVCZWZvcmVJbml0aWFsaXNpbmdEbmRab25lcyhuZXdLZXlOYW1lKSB7XG4gIGlmIChhY3RpdmVEbmRab25lQ291bnQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiY2FuIG9ubHkgb3ZlcnJpZGUgdGhlIGlkIGtleSBiZWZvcmUgaW5pdGlhbGlzaW5nIGFueSBkbmR6b25lXCIpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBuZXdLZXlOYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiaXRlbSBpZCBrZXkgaGFzIHRvIGJlIGEgc3RyaW5nXCIpO1xuICB9XG5cbiAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFtcIm92ZXJyaWRpbmcgaXRlbSBpZCBrZXkgbmFtZVwiLCBuZXdLZXlOYW1lXTtcbiAgfSk7XG4gIElURU1fSURfS0VZID0gbmV3S2V5TmFtZTtcbn1cbnZhciBpc09uU2VydmVyID0gdHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIjtcbnZhciBwcmludERlYnVnID0gZnVuY3Rpb24gcHJpbnREZWJ1ZygpIHt9O1xuLyoqXG4gKiBBbGxvd3MgdGhlIHVzZXIgdG8gc2hvdy9oaWRlIGNvbnNvbGUgZGVidWcgb3V0cHV0XG4gKiAqIEBwYXJhbSB7Qm9vbGVhbn0gaXNEZWJ1Z1xuICovXG5cbmZ1bmN0aW9uIHNldERlYnVnTW9kZShpc0RlYnVnKSB7XG4gIGlmIChpc0RlYnVnKSB7XG4gICAgcHJpbnREZWJ1ZyA9IGZ1bmN0aW9uIHByaW50RGVidWcoZ2VuZXJhdGVNZXNzYWdlKSB7XG4gICAgICB2YXIgbG9nRnVuY3Rpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGNvbnNvbGUuZGVidWc7XG4gICAgICB2YXIgbWVzc2FnZSA9IGdlbmVyYXRlTWVzc2FnZSgpO1xuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShtZXNzYWdlKSkge1xuICAgICAgICBsb2dGdW5jdGlvbi5hcHBseSh2b2lkIDAsIF90b0NvbnN1bWFibGVBcnJheShtZXNzYWdlKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2dGdW5jdGlvbihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHByaW50RGVidWcgPSBmdW5jdGlvbiBwcmludERlYnVnKCkge307XG4gIH1cbn1cblxuLy8gVGhpcyBpcyBiYXNlZCBvZmYgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjc3NDU0MzgvaG93LXRvLWNvbXB1dGUtZ2V0Ym91bmRpbmdjbGllbnRyZWN0LXdpdGhvdXQtY29uc2lkZXJpbmctdHJhbnNmb3Jtcy81Nzg3NjYwMSM1Nzg3NjYwMVxuLy8gSXQgcmVtb3ZlcyB0aGUgdHJhbnNmb3JtcyB0aGF0IGFyZSBwb3RlbnRpYWxseSBhcHBsaWVkIGJ5IHRoZSBmbGlwIGFuaW1hdGlvbnNcblxuLyoqXG4gKiBHZXRzIHRoZSBib3VuZGluZyByZWN0IGJ1dCByZW1vdmVzIHRyYW5zZm9ybXMgKGV4OiBmbGlwIGFuaW1hdGlvbilcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsXG4gKiBAcmV0dXJuIHt7dG9wOiBudW1iZXIsIGxlZnQ6IG51bWJlciwgYm90dG9tOiBudW1iZXIsIHJpZ2h0OiBudW1iZXJ9fVxuICovXG5mdW5jdGlvbiBnZXRCb3VuZGluZ1JlY3ROb1RyYW5zZm9ybXMoZWwpIHtcbiAgdmFyIHRhO1xuICB2YXIgcmVjdCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB2YXIgc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKGVsKTtcbiAgdmFyIHR4ID0gc3R5bGUudHJhbnNmb3JtO1xuXG4gIGlmICh0eCkge1xuICAgIHZhciBzeCwgc3ksIGR4LCBkeTtcblxuICAgIGlmICh0eC5zdGFydHNXaXRoKFwibWF0cml4M2QoXCIpKSB7XG4gICAgICB0YSA9IHR4LnNsaWNlKDksIC0xKS5zcGxpdCgvLCAvKTtcbiAgICAgIHN4ID0gK3RhWzBdO1xuICAgICAgc3kgPSArdGFbNV07XG4gICAgICBkeCA9ICt0YVsxMl07XG4gICAgICBkeSA9ICt0YVsxM107XG4gICAgfSBlbHNlIGlmICh0eC5zdGFydHNXaXRoKFwibWF0cml4KFwiKSkge1xuICAgICAgdGEgPSB0eC5zbGljZSg3LCAtMSkuc3BsaXQoLywgLyk7XG4gICAgICBzeCA9ICt0YVswXTtcbiAgICAgIHN5ID0gK3RhWzNdO1xuICAgICAgZHggPSArdGFbNF07XG4gICAgICBkeSA9ICt0YVs1XTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHJlY3Q7XG4gICAgfVxuXG4gICAgdmFyIHRvID0gc3R5bGUudHJhbnNmb3JtT3JpZ2luO1xuICAgIHZhciB4ID0gcmVjdC54IC0gZHggLSAoMSAtIHN4KSAqIHBhcnNlRmxvYXQodG8pO1xuICAgIHZhciB5ID0gcmVjdC55IC0gZHkgLSAoMSAtIHN5KSAqIHBhcnNlRmxvYXQodG8uc2xpY2UodG8uaW5kZXhPZihcIiBcIikgKyAxKSk7XG4gICAgdmFyIHcgPSBzeCA/IHJlY3Qud2lkdGggLyBzeCA6IGVsLm9mZnNldFdpZHRoO1xuICAgIHZhciBoID0gc3kgPyByZWN0LmhlaWdodCAvIHN5IDogZWwub2Zmc2V0SGVpZ2h0O1xuICAgIHJldHVybiB7XG4gICAgICB4OiB4LFxuICAgICAgeTogeSxcbiAgICAgIHdpZHRoOiB3LFxuICAgICAgaGVpZ2h0OiBoLFxuICAgICAgdG9wOiB5LFxuICAgICAgcmlnaHQ6IHggKyB3LFxuICAgICAgYm90dG9tOiB5ICsgaCxcbiAgICAgIGxlZnQ6IHhcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiByZWN0O1xuICB9XG59XG4vKipcbiAqIEdldHMgdGhlIGFic29sdXRlIGJvdW5kaW5nIHJlY3QgKGFjY291bnRzIGZvciB0aGUgd2luZG93J3Mgc2Nyb2xsIHBvc2l0aW9uIGFuZCByZW1vdmVzIHRyYW5zZm9ybXMpXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbFxuICogQHJldHVybiB7e3RvcDogbnVtYmVyLCBsZWZ0OiBudW1iZXIsIGJvdHRvbTogbnVtYmVyLCByaWdodDogbnVtYmVyfX1cbiAqL1xuXG5mdW5jdGlvbiBnZXRBYnNvbHV0ZVJlY3ROb1RyYW5zZm9ybXMoZWwpIHtcbiAgdmFyIHJlY3QgPSBnZXRCb3VuZGluZ1JlY3ROb1RyYW5zZm9ybXMoZWwpO1xuICByZXR1cm4ge1xuICAgIHRvcDogcmVjdC50b3AgKyB3aW5kb3cuc2Nyb2xsWSxcbiAgICBib3R0b206IHJlY3QuYm90dG9tICsgd2luZG93LnNjcm9sbFksXG4gICAgbGVmdDogcmVjdC5sZWZ0ICsgd2luZG93LnNjcm9sbFgsXG4gICAgcmlnaHQ6IHJlY3QucmlnaHQgKyB3aW5kb3cuc2Nyb2xsWFxuICB9O1xufVxuLyoqXG4gKiBHZXRzIHRoZSBhYnNvbHV0ZSBib3VuZGluZyByZWN0IChhY2NvdW50cyBmb3IgdGhlIHdpbmRvdydzIHNjcm9sbCBwb3NpdGlvbilcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsXG4gKiBAcmV0dXJuIHt7dG9wOiBudW1iZXIsIGxlZnQ6IG51bWJlciwgYm90dG9tOiBudW1iZXIsIHJpZ2h0OiBudW1iZXJ9fVxuICovXG5cbmZ1bmN0aW9uIGdldEFic29sdXRlUmVjdChlbCkge1xuICB2YXIgcmVjdCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICByZXR1cm4ge1xuICAgIHRvcDogcmVjdC50b3AgKyB3aW5kb3cuc2Nyb2xsWSxcbiAgICBib3R0b206IHJlY3QuYm90dG9tICsgd2luZG93LnNjcm9sbFksXG4gICAgbGVmdDogcmVjdC5sZWZ0ICsgd2luZG93LnNjcm9sbFgsXG4gICAgcmlnaHQ6IHJlY3QucmlnaHQgKyB3aW5kb3cuc2Nyb2xsWFxuICB9O1xufVxuLyoqXG4gKiBmaW5kcyB0aGUgY2VudGVyIDopXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBSZWN0XG4gKiBAcHJvcGVydHkge251bWJlcn0gdG9wXG4gKiBAcHJvcGVydHkge251bWJlcn0gYm90dG9tXG4gKiBAcHJvcGVydHkge251bWJlcn0gbGVmdFxuICogQHByb3BlcnR5IHtudW1iZXJ9IHJpZ2h0XG4gKiBAcGFyYW0ge1JlY3R9IHJlY3RcbiAqIEByZXR1cm4ge3t4OiBudW1iZXIsIHk6IG51bWJlcn19XG4gKi9cblxuZnVuY3Rpb24gZmluZENlbnRlcihyZWN0KSB7XG4gIHJldHVybiB7XG4gICAgeDogKHJlY3QubGVmdCArIHJlY3QucmlnaHQpIC8gMixcbiAgICB5OiAocmVjdC50b3AgKyByZWN0LmJvdHRvbSkgLyAyXG4gIH07XG59XG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFBvaW50XG4gKiBAcHJvcGVydHkge251bWJlcn0geFxuICogQHByb3BlcnR5IHtudW1iZXJ9IHlcbiAqIEBwYXJhbSB7UG9pbnR9IHBvaW50QVxuICogQHBhcmFtIHtQb2ludH0gcG9pbnRCXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cblxuZnVuY3Rpb24gY2FsY0Rpc3RhbmNlKHBvaW50QSwgcG9pbnRCKSB7XG4gIHJldHVybiBNYXRoLnNxcnQoTWF0aC5wb3cocG9pbnRBLnggLSBwb2ludEIueCwgMikgKyBNYXRoLnBvdyhwb2ludEEueSAtIHBvaW50Qi55LCAyKSk7XG59XG4vKipcbiAqIEBwYXJhbSB7UG9pbnR9IHBvaW50XG4gKiBAcGFyYW0ge1JlY3R9IHJlY3RcbiAqIEByZXR1cm4ge2Jvb2xlYW58Ym9vbGVhbn1cbiAqL1xuXG5cbmZ1bmN0aW9uIGlzUG9pbnRJbnNpZGVSZWN0KHBvaW50LCByZWN0KSB7XG4gIHJldHVybiBwb2ludC55IDw9IHJlY3QuYm90dG9tICYmIHBvaW50LnkgPj0gcmVjdC50b3AgJiYgcG9pbnQueCA+PSByZWN0LmxlZnQgJiYgcG9pbnQueCA8PSByZWN0LnJpZ2h0O1xufVxuLyoqXG4gKiBmaW5kIHRoZSBhYnNvbHV0ZSBjb29yZGluYXRlcyBvZiB0aGUgY2VudGVyIG9mIGEgZG9tIGVsZW1lbnRcbiAqIEBwYXJhbSBlbCB7SFRNTEVsZW1lbnR9XG4gKiBAcmV0dXJucyB7e3g6IG51bWJlciwgeTogbnVtYmVyfX1cbiAqL1xuXG5mdW5jdGlvbiBmaW5kQ2VudGVyT2ZFbGVtZW50KGVsKSB7XG4gIHJldHVybiBmaW5kQ2VudGVyKGdldEFic29sdXRlUmVjdChlbCkpO1xufVxuLyoqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbEFcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsQlxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuXG5mdW5jdGlvbiBpc0NlbnRlck9mQUluc2lkZUIoZWxBLCBlbEIpIHtcbiAgdmFyIGNlbnRlck9mQSA9IGZpbmRDZW50ZXJPZkVsZW1lbnQoZWxBKTtcbiAgdmFyIHJlY3RPZkIgPSBnZXRBYnNvbHV0ZVJlY3ROb1RyYW5zZm9ybXMoZWxCKTtcbiAgcmV0dXJuIGlzUG9pbnRJbnNpZGVSZWN0KGNlbnRlck9mQSwgcmVjdE9mQik7XG59XG4vKipcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR8Q2hpbGROb2RlfSBlbEFcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR8Q2hpbGROb2RlfSBlbEJcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuXG5mdW5jdGlvbiBjYWxjRGlzdGFuY2VCZXR3ZWVuQ2VudGVycyhlbEEsIGVsQikge1xuICB2YXIgY2VudGVyT2ZBID0gZmluZENlbnRlck9mRWxlbWVudChlbEEpO1xuICB2YXIgY2VudGVyT2ZCID0gZmluZENlbnRlck9mRWxlbWVudChlbEIpO1xuICByZXR1cm4gY2FsY0Rpc3RhbmNlKGNlbnRlck9mQSwgY2VudGVyT2ZCKTtcbn1cbi8qKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWwgLSB0aGUgZWxlbWVudCB0byBjaGVja1xuICogQHJldHVybnMge2Jvb2xlYW59IC0gdHJ1ZSBpZiB0aGUgZWxlbWVudCBpbiBpdHMgZW50aXJldHkgaXMgb2ZmIHNjcmVlbiBpbmNsdWRpbmcgdGhlIHNjcm9sbGFibGUgYXJlYSAodGhlIG5vcm1hbCBkb20gZXZlbnRzIGxvb2sgYXQgdGhlIG1vdXNlIHJhdGhlciB0aGFuIHRoZSBlbGVtZW50KVxuICovXG5cbmZ1bmN0aW9uIGlzRWxlbWVudE9mZkRvY3VtZW50KGVsKSB7XG4gIHZhciByZWN0ID0gZ2V0QWJzb2x1dGVSZWN0KGVsKTtcbiAgcmV0dXJuIHJlY3QucmlnaHQgPCAwIHx8IHJlY3QubGVmdCA+IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxXaWR0aCB8fCByZWN0LmJvdHRvbSA8IDAgfHwgcmVjdC50b3AgPiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0O1xufVxuLyoqXG4gKiBJZiB0aGUgcG9pbnQgaXMgaW5zaWRlIHRoZSBlbGVtZW50IHJldHVybnMgaXRzIGRpc3RhbmNlcyBmcm9tIHRoZSBzaWRlcywgb3RoZXJ3aXNlIHJldHVybnMgbnVsbFxuICogQHBhcmFtIHtQb2ludH0gcG9pbnRcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsXG4gKiBAcmV0dXJuIHtudWxsfHt0b3A6IG51bWJlciwgbGVmdDogbnVtYmVyLCBib3R0b206IG51bWJlciwgcmlnaHQ6IG51bWJlcn19XG4gKi9cblxuZnVuY3Rpb24gY2FsY0lubmVyRGlzdGFuY2VzQmV0d2VlblBvaW50QW5kU2lkZXNPZkVsZW1lbnQocG9pbnQsIGVsKSB7XG4gIHZhciByZWN0ID0gZ2V0QWJzb2x1dGVSZWN0KGVsKTtcblxuICBpZiAoIWlzUG9pbnRJbnNpZGVSZWN0KHBvaW50LCByZWN0KSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0b3A6IHBvaW50LnkgLSByZWN0LnRvcCxcbiAgICBib3R0b206IHJlY3QuYm90dG9tIC0gcG9pbnQueSxcbiAgICBsZWZ0OiBwb2ludC54IC0gcmVjdC5sZWZ0LFxuICAgIC8vIFRPRE8gLSBmaWd1cmUgb3V0IHdoYXQgaXMgc28gc3BlY2lhbCBhYm91dCByaWdodCAod2h5IHRoZSByZWN0IGlzIHRvbyBiaWcpXG4gICAgcmlnaHQ6IE1hdGgubWluKHJlY3QucmlnaHQsIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCkgLSBwb2ludC54XG4gIH07XG59XG5cbnZhciBkelRvU2hhZG93SW5kZXhUb1JlY3Q7XG4vKipcbiAqIFJlc2V0cyB0aGUgY2FjaGUgdGhhdCBhbGxvd3MgZm9yIHNtYXJ0ZXIgXCJ3b3VsZCBiZSBpbmRleFwiIHJlc29sdXRpb24uIFNob3VsZCBiZSBjYWxsZWQgYWZ0ZXIgZXZlcnkgZHJhZyBvcGVyYXRpb25cbiAqL1xuXG5mdW5jdGlvbiByZXNldEluZGV4ZXNDYWNoZSgpIHtcbiAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFwicmVzZXR0aW5nIGluZGV4ZXMgY2FjaGVcIjtcbiAgfSk7XG4gIGR6VG9TaGFkb3dJbmRleFRvUmVjdCA9IG5ldyBNYXAoKTtcbn1cbnJlc2V0SW5kZXhlc0NhY2hlKCk7XG4vKipcbiAqIENhY2hlcyB0aGUgY29vcmRpbmF0ZXMgb2YgdGhlIHNoYWRvdyBlbGVtZW50IHdoZW4gaXQncyBpbiBhIGNlcnRhaW4gaW5kZXggaW4gYSBjZXJ0YWluIGRyb3B6b25lLlxuICogSGVscGZ1bCBpbiBvcmRlciB0byBkZXRlcm1pbmUgXCJ3b3VsZCBiZSBpbmRleFwiIG1vcmUgZWZmZWN0aXZlbHlcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGR6XG4gKiBAcmV0dXJuIHtudW1iZXJ9IC0gdGhlIHNoYWRvdyBlbGVtZW50IGluZGV4XG4gKi9cblxuZnVuY3Rpb24gY2FjaGVTaGFkb3dSZWN0KGR6KSB7XG4gIHZhciBzaGFkb3dFbEluZGV4ID0gQXJyYXkuZnJvbShkei5jaGlsZHJlbikuZmluZEluZGV4KGZ1bmN0aW9uIChjaGlsZCkge1xuICAgIHJldHVybiBjaGlsZC5nZXRBdHRyaWJ1dGUoU0hBRE9XX0VMRU1FTlRfQVRUUklCVVRFX05BTUUpO1xuICB9KTtcblxuICBpZiAoc2hhZG93RWxJbmRleCA+PSAwKSB7XG4gICAgaWYgKCFkelRvU2hhZG93SW5kZXhUb1JlY3QuaGFzKGR6KSkge1xuICAgICAgZHpUb1NoYWRvd0luZGV4VG9SZWN0LnNldChkeiwgbmV3IE1hcCgpKTtcbiAgICB9XG5cbiAgICBkelRvU2hhZG93SW5kZXhUb1JlY3QuZ2V0KGR6KS5zZXQoc2hhZG93RWxJbmRleCwgZ2V0QWJzb2x1dGVSZWN0Tm9UcmFuc2Zvcm1zKGR6LmNoaWxkcmVuW3NoYWRvd0VsSW5kZXhdKSk7XG4gICAgcmV0dXJuIHNoYWRvd0VsSW5kZXg7XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBJbmRleFxuICogQHByb3BlcnR5IHtudW1iZXJ9IGluZGV4IC0gdGhlIHdvdWxkIGJlIGluZGV4XG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IGlzUHJveGltaXR5QmFzZWQgLSBmYWxzZSBpZiB0aGUgZWxlbWVudCBpcyBhY3R1YWxseSBvdmVyIHRoZSBpbmRleCwgdHJ1ZSBpZiBpdCBpcyBub3Qgb3ZlciBpdCBidXQgdGhpcyBpbmRleCBpcyB0aGUgY2xvc2VzdFxuICovXG5cbi8qKlxuICogRmluZCB0aGUgaW5kZXggZm9yIHRoZSBkcmFnZ2VkIGVsZW1lbnQgaW4gdGhlIGxpc3QgaXQgaXMgZHJhZ2dlZCBvdmVyXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBmbG9hdGluZ0Fib3ZlRWxcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGNvbGxlY3Rpb25CZWxvd0VsXG4gKiBAcmV0dXJucyB7SW5kZXh8bnVsbH0gLSAgaWYgdGhlIGVsZW1lbnQgaXMgb3ZlciB0aGUgY29udGFpbmVyIHRoZSBJbmRleCBvYmplY3Qgb3RoZXJ3aXNlIG51bGxcbiAqL1xuXG5cbmZ1bmN0aW9uIGZpbmRXb3VsZEJlSW5kZXgoZmxvYXRpbmdBYm92ZUVsLCBjb2xsZWN0aW9uQmVsb3dFbCkge1xuICBpZiAoIWlzQ2VudGVyT2ZBSW5zaWRlQihmbG9hdGluZ0Fib3ZlRWwsIGNvbGxlY3Rpb25CZWxvd0VsKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIGNoaWxkcmVuID0gY29sbGVjdGlvbkJlbG93RWwuY2hpbGRyZW47IC8vIHRoZSBjb250YWluZXIgaXMgZW1wdHksIGZsb2F0aW5nIGVsZW1lbnQgc2hvdWxkIGJlIHRoZSBmaXJzdFxuXG4gIGlmIChjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5kZXg6IDAsXG4gICAgICBpc1Byb3hpbWl0eUJhc2VkOiB0cnVlXG4gICAgfTtcbiAgfVxuXG4gIHZhciBzaGFkb3dFbEluZGV4ID0gY2FjaGVTaGFkb3dSZWN0KGNvbGxlY3Rpb25CZWxvd0VsKTsgLy8gdGhlIHNlYXJjaCBjb3VsZCBiZSBtb3JlIGVmZmljaWVudCBidXQga2VlcGluZyBpdCBzaW1wbGUgZm9yIG5vd1xuICAvLyBhIHBvc3NpYmxlIGltcHJvdmVtZW50OiBwYXNzIGluIHRoZSBsYXN0SW5kZXggaXQgd2FzIGZvdW5kIGluIGFuZCBjaGVjayB0aGVyZSBmaXJzdCwgdGhlbiBleHBhbmQgZnJvbSB0aGVyZVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoaXNDZW50ZXJPZkFJbnNpZGVCKGZsb2F0aW5nQWJvdmVFbCwgY2hpbGRyZW5baV0pKSB7XG4gICAgICB2YXIgY2FjaGVkU2hhZG93UmVjdCA9IGR6VG9TaGFkb3dJbmRleFRvUmVjdC5oYXMoY29sbGVjdGlvbkJlbG93RWwpICYmIGR6VG9TaGFkb3dJbmRleFRvUmVjdC5nZXQoY29sbGVjdGlvbkJlbG93RWwpLmdldChpKTtcblxuICAgICAgaWYgKGNhY2hlZFNoYWRvd1JlY3QpIHtcbiAgICAgICAgaWYgKCFpc1BvaW50SW5zaWRlUmVjdChmaW5kQ2VudGVyT2ZFbGVtZW50KGZsb2F0aW5nQWJvdmVFbCksIGNhY2hlZFNoYWRvd1JlY3QpKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGluZGV4OiBzaGFkb3dFbEluZGV4LFxuICAgICAgICAgICAgaXNQcm94aW1pdHlCYXNlZDogZmFsc2VcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGluZGV4OiBpLFxuICAgICAgICBpc1Byb3hpbWl0eUJhc2VkOiBmYWxzZVxuICAgICAgfTtcbiAgICB9XG4gIH0gLy8gdGhpcyBjYW4gaGFwcGVuIGlmIHRoZXJlIGlzIHNwYWNlIGFyb3VuZCB0aGUgY2hpbGRyZW4gc28gdGhlIGZsb2F0aW5nIGVsZW1lbnQgaGFzXG4gIC8vZW50ZXJlZCB0aGUgY29udGFpbmVyIGJ1dCBub3QgYW55IG9mIHRoZSBjaGlsZHJlbiwgaW4gdGhpcyBjYXNlIHdlIHdpbGwgZmluZCB0aGUgbmVhcmVzdCBjaGlsZFxuXG5cbiAgdmFyIG1pbkRpc3RhbmNlU29GYXIgPSBOdW1iZXIuTUFYX1ZBTFVFO1xuICB2YXIgaW5kZXhPZk1pbiA9IHVuZGVmaW5lZDsgLy8gd2UgYXJlIGNoZWNraW5nIGFsbCBvZiB0aGVtIGJlY2F1c2Ugd2UgZG9uJ3Qga25vdyB3aGV0aGVyIHdlIGFyZSBkZWFsaW5nIHdpdGggYSBob3Jpem9udGFsIG9yIHZlcnRpY2FsIGNvbnRhaW5lciBhbmQgd2hlcmUgdGhlIGZsb2F0aW5nIGVsZW1lbnQgZW50ZXJlZCBmcm9tXG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGNoaWxkcmVuLmxlbmd0aDsgX2krKykge1xuICAgIHZhciBkaXN0YW5jZSA9IGNhbGNEaXN0YW5jZUJldHdlZW5DZW50ZXJzKGZsb2F0aW5nQWJvdmVFbCwgY2hpbGRyZW5bX2ldKTtcblxuICAgIGlmIChkaXN0YW5jZSA8IG1pbkRpc3RhbmNlU29GYXIpIHtcbiAgICAgIG1pbkRpc3RhbmNlU29GYXIgPSBkaXN0YW5jZTtcbiAgICAgIGluZGV4T2ZNaW4gPSBfaTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGluZGV4OiBpbmRleE9mTWluLFxuICAgIGlzUHJveGltaXR5QmFzZWQ6IHRydWVcbiAgfTtcbn1cblxudmFyIFNDUk9MTF9aT05FX1BYID0gMjU7XG5mdW5jdGlvbiBtYWtlU2Nyb2xsZXIoKSB7XG4gIHZhciBzY3JvbGxpbmdJbmZvO1xuXG4gIGZ1bmN0aW9uIHJlc2V0U2Nyb2xsaW5nKCkge1xuICAgIHNjcm9sbGluZ0luZm8gPSB7XG4gICAgICBkaXJlY3Rpb25PYmo6IHVuZGVmaW5lZCxcbiAgICAgIHN0ZXBQeDogMFxuICAgIH07XG4gIH1cblxuICByZXNldFNjcm9sbGluZygpOyAvLyBkaXJlY3Rpb25PYmoge3g6IDB8MXwtMSwgeTowfDF8LTF9IC0gMSBtZWFucyBkb3duIGluIHkgYW5kIHJpZ2h0IGluIHhcblxuICBmdW5jdGlvbiBzY3JvbGxDb250YWluZXIoY29udGFpbmVyRWwpIHtcbiAgICB2YXIgX3Njcm9sbGluZ0luZm8gPSBzY3JvbGxpbmdJbmZvLFxuICAgICAgICBkaXJlY3Rpb25PYmogPSBfc2Nyb2xsaW5nSW5mby5kaXJlY3Rpb25PYmosXG4gICAgICAgIHN0ZXBQeCA9IF9zY3JvbGxpbmdJbmZvLnN0ZXBQeDtcblxuICAgIGlmIChkaXJlY3Rpb25PYmopIHtcbiAgICAgIGNvbnRhaW5lckVsLnNjcm9sbEJ5KGRpcmVjdGlvbk9iai54ICogc3RlcFB4LCBkaXJlY3Rpb25PYmoueSAqIHN0ZXBQeCk7XG4gICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHNjcm9sbENvbnRhaW5lcihjb250YWluZXJFbCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjYWxjU2Nyb2xsU3RlcFB4KGRpc3RhbmNlUHgpIHtcbiAgICByZXR1cm4gU0NST0xMX1pPTkVfUFggLSBkaXN0YW5jZVB4O1xuICB9XG4gIC8qKlxuICAgKiBJZiB0aGUgcG9pbnRlciBpcyBuZXh0IHRvIHRoZSBzaWRlcyBvZiB0aGUgZWxlbWVudCB0byBzY3JvbGwsIHdpbGwgdHJpZ2dlciBzY3JvbGxpbmdcbiAgICogQ2FuIGJlIGNhbGxlZCByZXBlYXRlZGx5IHdpdGggdXBkYXRlZCBwb2ludGVyIGFuZCBlbGVtZW50VG9TY3JvbGwgdmFsdWVzIHdpdGhvdXQgaXNzdWVzXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59IC0gdHJ1ZSBpZiBzY3JvbGxpbmcgd2FzIG5lZWRlZFxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIHNjcm9sbElmTmVlZGVkKHBvaW50ZXIsIGVsZW1lbnRUb1Njcm9sbCkge1xuICAgIGlmICghZWxlbWVudFRvU2Nyb2xsKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIGRpc3RhbmNlcyA9IGNhbGNJbm5lckRpc3RhbmNlc0JldHdlZW5Qb2ludEFuZFNpZGVzT2ZFbGVtZW50KHBvaW50ZXIsIGVsZW1lbnRUb1Njcm9sbCk7XG5cbiAgICBpZiAoZGlzdGFuY2VzID09PSBudWxsKSB7XG4gICAgICByZXNldFNjcm9sbGluZygpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHZhciBpc0FscmVhZHlTY3JvbGxpbmcgPSAhIXNjcm9sbGluZ0luZm8uZGlyZWN0aW9uT2JqO1xuICAgIHZhciBzY3JvbGxpbmdWZXJ0aWNhbGx5ID0gZmFsc2UsXG4gICAgICAgIHNjcm9sbGluZ0hvcml6b250YWxseSA9IGZhbHNlOyAvLyB2ZXJ0aWNhbFxuXG4gICAgaWYgKGVsZW1lbnRUb1Njcm9sbC5zY3JvbGxIZWlnaHQgPiBlbGVtZW50VG9TY3JvbGwuY2xpZW50SGVpZ2h0KSB7XG4gICAgICBpZiAoZGlzdGFuY2VzLmJvdHRvbSA8IFNDUk9MTF9aT05FX1BYKSB7XG4gICAgICAgIHNjcm9sbGluZ1ZlcnRpY2FsbHkgPSB0cnVlO1xuICAgICAgICBzY3JvbGxpbmdJbmZvLmRpcmVjdGlvbk9iaiA9IHtcbiAgICAgICAgICB4OiAwLFxuICAgICAgICAgIHk6IDFcbiAgICAgICAgfTtcbiAgICAgICAgc2Nyb2xsaW5nSW5mby5zdGVwUHggPSBjYWxjU2Nyb2xsU3RlcFB4KGRpc3RhbmNlcy5ib3R0b20pO1xuICAgICAgfSBlbHNlIGlmIChkaXN0YW5jZXMudG9wIDwgU0NST0xMX1pPTkVfUFgpIHtcbiAgICAgICAgc2Nyb2xsaW5nVmVydGljYWxseSA9IHRydWU7XG4gICAgICAgIHNjcm9sbGluZ0luZm8uZGlyZWN0aW9uT2JqID0ge1xuICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgeTogLTFcbiAgICAgICAgfTtcbiAgICAgICAgc2Nyb2xsaW5nSW5mby5zdGVwUHggPSBjYWxjU2Nyb2xsU3RlcFB4KGRpc3RhbmNlcy50b3ApO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzQWxyZWFkeVNjcm9sbGluZyAmJiBzY3JvbGxpbmdWZXJ0aWNhbGx5KSB7XG4gICAgICAgIHNjcm9sbENvbnRhaW5lcihlbGVtZW50VG9TY3JvbGwpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IC8vIGhvcml6b250YWxcblxuXG4gICAgaWYgKGVsZW1lbnRUb1Njcm9sbC5zY3JvbGxXaWR0aCA+IGVsZW1lbnRUb1Njcm9sbC5jbGllbnRXaWR0aCkge1xuICAgICAgaWYgKGRpc3RhbmNlcy5yaWdodCA8IFNDUk9MTF9aT05FX1BYKSB7XG4gICAgICAgIHNjcm9sbGluZ0hvcml6b250YWxseSA9IHRydWU7XG4gICAgICAgIHNjcm9sbGluZ0luZm8uZGlyZWN0aW9uT2JqID0ge1xuICAgICAgICAgIHg6IDEsXG4gICAgICAgICAgeTogMFxuICAgICAgICB9O1xuICAgICAgICBzY3JvbGxpbmdJbmZvLnN0ZXBQeCA9IGNhbGNTY3JvbGxTdGVwUHgoZGlzdGFuY2VzLnJpZ2h0KTtcbiAgICAgIH0gZWxzZSBpZiAoZGlzdGFuY2VzLmxlZnQgPCBTQ1JPTExfWk9ORV9QWCkge1xuICAgICAgICBzY3JvbGxpbmdIb3Jpem9udGFsbHkgPSB0cnVlO1xuICAgICAgICBzY3JvbGxpbmdJbmZvLmRpcmVjdGlvbk9iaiA9IHtcbiAgICAgICAgICB4OiAtMSxcbiAgICAgICAgICB5OiAwXG4gICAgICAgIH07XG4gICAgICAgIHNjcm9sbGluZ0luZm8uc3RlcFB4ID0gY2FsY1Njcm9sbFN0ZXBQeChkaXN0YW5jZXMubGVmdCk7XG4gICAgICB9XG5cbiAgICAgIGlmICghaXNBbHJlYWR5U2Nyb2xsaW5nICYmIHNjcm9sbGluZ0hvcml6b250YWxseSkge1xuICAgICAgICBzY3JvbGxDb250YWluZXIoZWxlbWVudFRvU2Nyb2xsKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmVzZXRTY3JvbGxpbmcoKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNjcm9sbElmTmVlZGVkOiBzY3JvbGxJZk5lZWRlZCxcbiAgICByZXNldFNjcm9sbGluZzogcmVzZXRTY3JvbGxpbmdcbiAgfTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIHRvU3RyaW5nKG9iamVjdCkge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqZWN0LCBudWxsLCAyKTtcbn1cbi8qKlxuICogRmluZHMgdGhlIGRlcHRoIG9mIHRoZSBnaXZlbiBub2RlIGluIHRoZSBET00gdHJlZVxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gbm9kZVxuICogQHJldHVybiB7bnVtYmVyfSAtIHRoZSBkZXB0aCBvZiB0aGUgbm9kZVxuICovXG5cbmZ1bmN0aW9uIGdldERlcHRoKG5vZGUpIHtcbiAgaWYgKCFub2RlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IGdldCBkZXB0aCBvZiBhIGZhbHN5IG5vZGVcIik7XG4gIH1cblxuICByZXR1cm4gX2dldERlcHRoKG5vZGUsIDApO1xufVxuXG5mdW5jdGlvbiBfZ2V0RGVwdGgobm9kZSkge1xuICB2YXIgY291bnRTb0ZhciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcblxuICBpZiAoIW5vZGUucGFyZW50RWxlbWVudCkge1xuICAgIHJldHVybiBjb3VudFNvRmFyIC0gMTtcbiAgfVxuXG4gIHJldHVybiBfZ2V0RGVwdGgobm9kZS5wYXJlbnRFbGVtZW50LCBjb3VudFNvRmFyICsgMSk7XG59XG4vKipcbiAqIEEgc2ltcGxlIHV0aWwgdG8gc2hhbGxvdyBjb21wYXJlIG9iamVjdHMgcXVpY2tseSwgaXQgZG9lc24ndCB2YWxpZGF0ZSB0aGUgYXJndW1lbnRzIHNvIHBhc3Mgb2JqZWN0cyBpblxuICogQHBhcmFtIHtPYmplY3R9IG9iakFcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpCXG4gKiBAcmV0dXJuIHtib29sZWFufSAtIHRydWUgaWYgb2JqQSBhbmQgb2JqQiBhcmUgc2hhbGxvdyBlcXVhbFxuICovXG5cblxuZnVuY3Rpb24gYXJlT2JqZWN0c1NoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChPYmplY3Qua2V5cyhvYmpBKS5sZW5ndGggIT09IE9iamVjdC5rZXlzKG9iakIpLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGZvciAodmFyIGtleUEgaW4gb2JqQSkge1xuICAgIGlmICghe30uaGFzT3duUHJvcGVydHkuY2FsbChvYmpCLCBrZXlBKSB8fCBvYmpCW2tleUFdICE9PSBvYmpBW2tleUFdKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG4vKipcbiAqIFNoYWxsb3cgY29tcGFyZXMgdHdvIGFycmF5c1xuICogQHBhcmFtIGFyckFcbiAqIEBwYXJhbSBhcnJCXG4gKiBAcmV0dXJuIHtib29sZWFufSAtIHdoZXRoZXIgdGhlIGFycmF5cyBhcmUgc2hhbGxvdyBlcXVhbFxuICovXG5cbmZ1bmN0aW9uIGFyZUFycmF5c1NoYWxsb3dFcXVhbFNhbWVPcmRlcihhcnJBLCBhcnJCKSB7XG4gIGlmIChhcnJBLmxlbmd0aCAhPT0gYXJyQi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGFyckEubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoYXJyQVtpXSAhPT0gYXJyQltpXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG52YXIgSU5URVJWQUxfTVMgPSAyMDA7XG52YXIgVE9MRVJBTkNFX1BYID0gMTA7XG5cbnZhciBfbWFrZVNjcm9sbGVyID0gbWFrZVNjcm9sbGVyKCksXG4gICAgc2Nyb2xsSWZOZWVkZWQgPSBfbWFrZVNjcm9sbGVyLnNjcm9sbElmTmVlZGVkLFxuICAgIHJlc2V0U2Nyb2xsaW5nID0gX21ha2VTY3JvbGxlci5yZXNldFNjcm9sbGluZztcblxudmFyIG5leHQ7XG4vKipcbiAqIFRyYWNrcyB0aGUgZHJhZ2dlZCBlbGVtZW50cyBhbmQgcGVyZm9ybXMgdGhlIHNpZGUgZWZmZWN0cyB3aGVuIGl0IGlzIGRyYWdnZWQgb3ZlciBhIGRyb3Agem9uZSAoYmFzaWNhbGx5IGRpc3BhdGNoaW5nIGN1c3RvbS1ldmVudHMgc2Nyb2xsaW5nKVxuICogQHBhcmFtIHtTZXQ8SFRNTEVsZW1lbnQ+fSBkcm9wWm9uZXNcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGRyYWdnZWRFbFxuICogQHBhcmFtIHtudW1iZXJ9IFtpbnRlcnZhbE1zID0gSU5URVJWQUxfTVNdXG4gKi9cblxuZnVuY3Rpb24gb2JzZXJ2ZShkcmFnZ2VkRWwsIGRyb3Bab25lcykge1xuICB2YXIgaW50ZXJ2YWxNcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogSU5URVJWQUxfTVM7XG4gIC8vIGluaXRpYWxpemF0aW9uXG4gIHZhciBsYXN0RHJvcFpvbmVGb3VuZDtcbiAgdmFyIGxhc3RJbmRleEZvdW5kO1xuICB2YXIgbGFzdElzRHJhZ2dlZEluQURyb3Bab25lID0gZmFsc2U7XG4gIHZhciBsYXN0Q2VudHJlUG9zaXRpb25PZkRyYWdnZWQ7IC8vIFdlIGFyZSBzb3J0aW5nIHRvIG1ha2Ugc3VyZSB0aGF0IGluIGNhc2Ugb2YgbmVzdGVkIHpvbmVzIG9mIHRoZSBzYW1lIHR5cGUgdGhlIG9uZSBcIm9uIHRvcFwiIGlzIGNvbnNpZGVyZWQgZmlyc3RcblxuICB2YXIgZHJvcFpvbmVzRnJvbURlZXBUb1NoYWxsb3cgPSBBcnJheS5mcm9tKGRyb3Bab25lcykuc29ydChmdW5jdGlvbiAoZHoxLCBkejIpIHtcbiAgICByZXR1cm4gZ2V0RGVwdGgoZHoyKSAtIGdldERlcHRoKGR6MSk7XG4gIH0pO1xuICAvKipcbiAgICogVGhlIG1haW4gZnVuY3Rpb24gaW4gdGhpcyBtb2R1bGUuIFRyYWNrcyB3aGVyZSBldmVyeXRoaW5nIGlzLyBzaG91bGQgYmUgYSB0YWtlIHRoZSBhY3Rpb25zXG4gICAqL1xuXG4gIGZ1bmN0aW9uIGFuZE5vdygpIHtcbiAgICB2YXIgY3VycmVudENlbnRlck9mRHJhZ2dlZCA9IGZpbmRDZW50ZXJPZkVsZW1lbnQoZHJhZ2dlZEVsKTtcbiAgICB2YXIgc2Nyb2xsZWQgPSBzY3JvbGxJZk5lZWRlZChjdXJyZW50Q2VudGVyT2ZEcmFnZ2VkLCBsYXN0RHJvcFpvbmVGb3VuZCk7IC8vIHdlIG9ubHkgd2FudCB0byBtYWtlIGEgbmV3IGRlY2lzaW9uIGFmdGVyIHRoZSBlbGVtZW50IHdhcyBtb3ZlZCBhIGJpdCB0byBwcmV2ZW50IGZsaWNrZXJpbmdcblxuICAgIGlmICghc2Nyb2xsZWQgJiYgbGFzdENlbnRyZVBvc2l0aW9uT2ZEcmFnZ2VkICYmIE1hdGguYWJzKGxhc3RDZW50cmVQb3NpdGlvbk9mRHJhZ2dlZC54IC0gY3VycmVudENlbnRlck9mRHJhZ2dlZC54KSA8IFRPTEVSQU5DRV9QWCAmJiBNYXRoLmFicyhsYXN0Q2VudHJlUG9zaXRpb25PZkRyYWdnZWQueSAtIGN1cnJlbnRDZW50ZXJPZkRyYWdnZWQueSkgPCBUT0xFUkFOQ0VfUFgpIHtcbiAgICAgIG5leHQgPSB3aW5kb3cuc2V0VGltZW91dChhbmROb3csIGludGVydmFsTXMpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChpc0VsZW1lbnRPZmZEb2N1bWVudChkcmFnZ2VkRWwpKSB7XG4gICAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwib2ZmIGRvY3VtZW50XCI7XG4gICAgICB9KTtcbiAgICAgIGRpc3BhdGNoRHJhZ2dlZExlZnREb2N1bWVudChkcmFnZ2VkRWwpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxhc3RDZW50cmVQb3NpdGlvbk9mRHJhZ2dlZCA9IGN1cnJlbnRDZW50ZXJPZkRyYWdnZWQ7IC8vIHRoaXMgaXMgYSBzaW1wbGUgYWxnb3JpdGhtLCBwb3RlbnRpYWwgaW1wcm92ZW1lbnQ6IGZpcnN0IGxvb2sgYXQgbGFzdERyb3Bab25lRm91bmRcblxuICAgIHZhciBpc0RyYWdnZWRJbkFEcm9wWm9uZSA9IGZhbHNlO1xuXG4gICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGRyb3Bab25lc0Zyb21EZWVwVG9TaGFsbG93KSxcbiAgICAgICAgX3N0ZXA7XG5cbiAgICB0cnkge1xuICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHtcbiAgICAgICAgdmFyIGR6ID0gX3N0ZXAudmFsdWU7XG4gICAgICAgIHZhciBpbmRleE9iaiA9IGZpbmRXb3VsZEJlSW5kZXgoZHJhZ2dlZEVsLCBkeik7XG5cbiAgICAgICAgaWYgKGluZGV4T2JqID09PSBudWxsKSB7XG4gICAgICAgICAgLy8gaXQgaXMgbm90IGluc2lkZVxuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGluZGV4ID0gaW5kZXhPYmouaW5kZXg7XG4gICAgICAgIGlzRHJhZ2dlZEluQURyb3Bab25lID0gdHJ1ZTsgLy8gdGhlIGVsZW1lbnQgaXMgb3ZlciBhIGNvbnRhaW5lclxuXG4gICAgICAgIGlmIChkeiAhPT0gbGFzdERyb3Bab25lRm91bmQpIHtcbiAgICAgICAgICBsYXN0RHJvcFpvbmVGb3VuZCAmJiBkaXNwYXRjaERyYWdnZWRFbGVtZW50TGVmdENvbnRhaW5lckZvckFub3RoZXIobGFzdERyb3Bab25lRm91bmQsIGRyYWdnZWRFbCwgZHopO1xuICAgICAgICAgIGRpc3BhdGNoRHJhZ2dlZEVsZW1lbnRFbnRlcmVkQ29udGFpbmVyKGR6LCBpbmRleE9iaiwgZHJhZ2dlZEVsKTtcbiAgICAgICAgICBsYXN0RHJvcFpvbmVGb3VuZCA9IGR6O1xuICAgICAgICB9IGVsc2UgaWYgKGluZGV4ICE9PSBsYXN0SW5kZXhGb3VuZCkge1xuICAgICAgICAgIGRpc3BhdGNoRHJhZ2dlZEVsZW1lbnRJc092ZXJJbmRleChkeiwgaW5kZXhPYmosIGRyYWdnZWRFbCk7XG4gICAgICAgICAgbGFzdEluZGV4Rm91bmQgPSBpbmRleDtcbiAgICAgICAgfSAvLyB3ZSBoYW5kbGUgbG9vcGluZyB3aXRoIHRoZSAnY29udGludWUnIHN0YXRlbWVudCBhYm92ZVxuXG5cbiAgICAgICAgYnJlYWs7XG4gICAgICB9IC8vIHRoZSBmaXJzdCB0aW1lIHRoZSBkcmFnZ2VkIGVsZW1lbnQgaXMgbm90IGluIGFueSBkcm9wem9uZSB3ZSBuZWVkIHRvIG5vdGlmeSB0aGUgbGFzdCBkcm9wem9uZSBpdCB3YXMgaW5cblxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgX2l0ZXJhdG9yLmUoZXJyKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgX2l0ZXJhdG9yLmYoKTtcbiAgICB9XG5cbiAgICBpZiAoIWlzRHJhZ2dlZEluQURyb3Bab25lICYmIGxhc3RJc0RyYWdnZWRJbkFEcm9wWm9uZSAmJiBsYXN0RHJvcFpvbmVGb3VuZCkge1xuICAgICAgZGlzcGF0Y2hEcmFnZ2VkRWxlbWVudExlZnRDb250YWluZXJGb3JOb25lKGxhc3REcm9wWm9uZUZvdW5kLCBkcmFnZ2VkRWwpO1xuICAgICAgbGFzdERyb3Bab25lRm91bmQgPSB1bmRlZmluZWQ7XG4gICAgICBsYXN0SW5kZXhGb3VuZCA9IHVuZGVmaW5lZDtcbiAgICAgIGxhc3RJc0RyYWdnZWRJbkFEcm9wWm9uZSA9IGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICBsYXN0SXNEcmFnZ2VkSW5BRHJvcFpvbmUgPSB0cnVlO1xuICAgIH1cblxuICAgIG5leHQgPSB3aW5kb3cuc2V0VGltZW91dChhbmROb3csIGludGVydmFsTXMpO1xuICB9XG5cbiAgYW5kTm93KCk7XG59IC8vIGFzc3VtcHRpb24gLSB3ZSBjYW4gb25seSBvYnNlcnZlIG9uZSBkcmFnZ2VkIGVsZW1lbnQgYXQgYSB0aW1lLCB0aGlzIGNvdWxkIGJlIGNoYW5nZWQgaW4gdGhlIGZ1dHVyZVxuXG5mdW5jdGlvbiB1bm9ic2VydmUoKSB7XG4gIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcInVub2JzZXJ2aW5nXCI7XG4gIH0pO1xuICBjbGVhclRpbWVvdXQobmV4dCk7XG4gIHJlc2V0U2Nyb2xsaW5nKCk7XG4gIHJlc2V0SW5kZXhlc0NhY2hlKCk7XG59XG5cbnZhciBJTlRFUlZBTF9NUyQxID0gMzAwO1xudmFyIG1vdXNlUG9zaXRpb247XG4vKipcbiAqIERvIG5vdCB1c2UgdGhpcyEgaXQgaXMgdmlzaWJsZSBmb3IgdGVzdGluZyBvbmx5IHVudGlsIHdlIGdldCBvdmVyIHRoZSBpc3N1ZSBDeXByZXNzIG5vdCB0cmlnZ2VyaW5nIHRoZSBtb3VzZW1vdmUgbGlzdGVuZXJzXG4gKiAvLyBUT0RPIC0gbWFrZSBwcml2YXRlIChyZW1vdmUgZXhwb3J0KVxuICogQHBhcmFtIHt7Y2xpZW50WDogbnVtYmVyLCBjbGllbnRZOiBudW1iZXJ9fSBlXG4gKi9cblxuZnVuY3Rpb24gdXBkYXRlTW91c2VQb3NpdGlvbihlKSB7XG4gIHZhciBjID0gZS50b3VjaGVzID8gZS50b3VjaGVzWzBdIDogZTtcbiAgbW91c2VQb3NpdGlvbiA9IHtcbiAgICB4OiBjLmNsaWVudFgsXG4gICAgeTogYy5jbGllbnRZXG4gIH07XG59XG5cbnZhciBfbWFrZVNjcm9sbGVyJDEgPSBtYWtlU2Nyb2xsZXIoKSxcbiAgICBzY3JvbGxJZk5lZWRlZCQxID0gX21ha2VTY3JvbGxlciQxLnNjcm9sbElmTmVlZGVkLFxuICAgIHJlc2V0U2Nyb2xsaW5nJDEgPSBfbWFrZVNjcm9sbGVyJDEucmVzZXRTY3JvbGxpbmc7XG5cbnZhciBuZXh0JDE7XG5cbmZ1bmN0aW9uIGxvb3AoKSB7XG4gIGlmIChtb3VzZVBvc2l0aW9uKSB7XG4gICAgc2Nyb2xsSWZOZWVkZWQkMShtb3VzZVBvc2l0aW9uLCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpO1xuICB9XG5cbiAgbmV4dCQxID0gd2luZG93LnNldFRpbWVvdXQobG9vcCwgSU5URVJWQUxfTVMkMSk7XG59XG4vKipcbiAqIHdpbGwgc3RhcnQgd2F0Y2hpbmcgdGhlIG1vdXNlIHBvaW50ZXIgYW5kIHNjcm9sbCB0aGUgd2luZG93IGlmIGl0IGdvZXMgbmV4dCB0byB0aGUgZWRnZXNcbiAqL1xuXG5cbmZ1bmN0aW9uIGFybVdpbmRvd1Njcm9sbGVyKCkge1xuICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gXCJhcm1pbmcgd2luZG93IHNjcm9sbGVyXCI7XG4gIH0pO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCB1cGRhdGVNb3VzZVBvc2l0aW9uKTtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIiwgdXBkYXRlTW91c2VQb3NpdGlvbik7XG4gIGxvb3AoKTtcbn1cbi8qKlxuICogd2lsbCBzdG9wIHdhdGNoaW5nIHRoZSBtb3VzZSBwb2ludGVyIGFuZCB3b24ndCBzY3JvbGwgdGhlIHdpbmRvdyBhbnltb3JlXG4gKi9cblxuZnVuY3Rpb24gZGlzYXJtV2luZG93U2Nyb2xsZXIoKSB7XG4gIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcImRpc2FybWluZyB3aW5kb3cgc2Nyb2xsZXJcIjtcbiAgfSk7XG4gIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHVwZGF0ZU1vdXNlUG9zaXRpb24pO1xuICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLCB1cGRhdGVNb3VzZVBvc2l0aW9uKTtcbiAgbW91c2VQb3NpdGlvbiA9IHVuZGVmaW5lZDtcbiAgd2luZG93LmNsZWFyVGltZW91dChuZXh0JDEpO1xuICByZXNldFNjcm9sbGluZyQxKCk7XG59XG5cbnZhciBUUkFOU0lUSU9OX0RVUkFUSU9OX1NFQ09ORFMgPSAwLjI7XG4vKipcbiAqIHByaXZhdGUgaGVscGVyIGZ1bmN0aW9uIC0gY3JlYXRlcyBhIHRyYW5zaXRpb24gc3RyaW5nIGZvciBhIHByb3BlcnR5XG4gKiBAcGFyYW0ge3N0cmluZ30gcHJvcGVydHlcbiAqIEByZXR1cm4ge3N0cmluZ30gLSB0aGUgdHJhbnNpdGlvbiBzdHJpbmdcbiAqL1xuXG5mdW5jdGlvbiB0cnMocHJvcGVydHkpIHtcbiAgcmV0dXJuIFwiXCIuY29uY2F0KHByb3BlcnR5LCBcIiBcIikuY29uY2F0KFRSQU5TSVRJT05fRFVSQVRJT05fU0VDT05EUywgXCJzIGVhc2VcIik7XG59XG4vKipcbiAqIGNsb25lcyB0aGUgZ2l2ZW4gZWxlbWVudCBhbmQgYXBwbGllcyBwcm9wZXIgc3R5bGVzIGFuZCB0cmFuc2l0aW9ucyB0byB0aGUgZHJhZ2dlZCBlbGVtZW50XG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBvcmlnaW5hbEVsZW1lbnRcbiAqIEBwYXJhbSB7UG9pbnR9IFtwb3NpdGlvbkNlbnRlck9uWFldXG4gKiBAcmV0dXJuIHtOb2RlfSAtIHRoZSBjbG9uZWQsIHN0eWxlZCBlbGVtZW50XG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVEcmFnZ2VkRWxlbWVudEZyb20ob3JpZ2luYWxFbGVtZW50LCBwb3NpdGlvbkNlbnRlck9uWFkpIHtcbiAgdmFyIHJlY3QgPSBvcmlnaW5hbEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciBkcmFnZ2VkRWwgPSBvcmlnaW5hbEVsZW1lbnQuY2xvbmVOb2RlKHRydWUpO1xuICBjb3B5U3R5bGVzRnJvbVRvKG9yaWdpbmFsRWxlbWVudCwgZHJhZ2dlZEVsKTtcbiAgZHJhZ2dlZEVsLmlkID0gRFJBR0dFRF9FTEVNRU5UX0lEO1xuICBkcmFnZ2VkRWwuc3R5bGUucG9zaXRpb24gPSBcImZpeGVkXCI7XG4gIHZhciBlbFRvcFB4ID0gcmVjdC50b3A7XG4gIHZhciBlbExlZnRQeCA9IHJlY3QubGVmdDtcbiAgZHJhZ2dlZEVsLnN0eWxlLnRvcCA9IFwiXCIuY29uY2F0KGVsVG9wUHgsIFwicHhcIik7XG4gIGRyYWdnZWRFbC5zdHlsZS5sZWZ0ID0gXCJcIi5jb25jYXQoZWxMZWZ0UHgsIFwicHhcIik7XG5cbiAgaWYgKHBvc2l0aW9uQ2VudGVyT25YWSkge1xuICAgIHZhciBjZW50ZXIgPSBmaW5kQ2VudGVyKHJlY3QpO1xuICAgIGVsVG9wUHggLT0gY2VudGVyLnkgLSBwb3NpdGlvbkNlbnRlck9uWFkueTtcbiAgICBlbExlZnRQeCAtPSBjZW50ZXIueCAtIHBvc2l0aW9uQ2VudGVyT25YWS54O1xuICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGRyYWdnZWRFbC5zdHlsZS50b3AgPSBcIlwiLmNvbmNhdChlbFRvcFB4LCBcInB4XCIpO1xuICAgICAgZHJhZ2dlZEVsLnN0eWxlLmxlZnQgPSBcIlwiLmNvbmNhdChlbExlZnRQeCwgXCJweFwiKTtcbiAgICB9LCAwKTtcbiAgfVxuXG4gIGRyYWdnZWRFbC5zdHlsZS5tYXJnaW4gPSBcIjBcIjsgLy8gd2UgY2FuJ3QgaGF2ZSByZWxhdGl2ZSBvciBhdXRvbWF0aWMgaGVpZ2h0IGFuZCB3aWR0aCBvciBpdCB3aWxsIGJyZWFrIHRoZSBpbGx1c2lvblxuXG4gIGRyYWdnZWRFbC5zdHlsZS5ib3hTaXppbmcgPSBcImJvcmRlci1ib3hcIjtcbiAgZHJhZ2dlZEVsLnN0eWxlLmhlaWdodCA9IFwiXCIuY29uY2F0KHJlY3QuaGVpZ2h0LCBcInB4XCIpO1xuICBkcmFnZ2VkRWwuc3R5bGUud2lkdGggPSBcIlwiLmNvbmNhdChyZWN0LndpZHRoLCBcInB4XCIpO1xuICBkcmFnZ2VkRWwuc3R5bGUudHJhbnNpdGlvbiA9IFwiXCIuY29uY2F0KHRycyhcInRvcFwiKSwgXCIsIFwiKS5jb25jYXQodHJzKFwibGVmdFwiKSwgXCIsIFwiKS5jb25jYXQodHJzKFwiYmFja2dyb3VuZC1jb2xvclwiKSwgXCIsIFwiKS5jb25jYXQodHJzKFwib3BhY2l0eVwiKSwgXCIsIFwiKS5jb25jYXQodHJzKFwiY29sb3JcIiksIFwiIFwiKTsgLy8gdGhpcyBpcyBhIHdvcmthcm91bmQgZm9yIGEgc3RyYW5nZSBicm93c2VyIGJ1ZyB0aGF0IGNhdXNlcyB0aGUgcmlnaHQgYm9yZGVyIHRvIGRpc2FwcGVhciB3aGVuIGFsbCB0aGUgdHJhbnNpdGlvbnMgYXJlIGFkZGVkIGF0IHRoZSBzYW1lIHRpbWVcblxuICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGRyYWdnZWRFbC5zdHlsZS50cmFuc2l0aW9uICs9IFwiLCBcIi5jb25jYXQodHJzKFwid2lkdGhcIiksIFwiLCBcIikuY29uY2F0KHRycyhcImhlaWdodFwiKSk7XG4gIH0sIDApO1xuICBkcmFnZ2VkRWwuc3R5bGUuekluZGV4ID0gXCI5OTk5XCI7XG4gIGRyYWdnZWRFbC5zdHlsZS5jdXJzb3IgPSBcImdyYWJiaW5nXCI7XG4gIHJldHVybiBkcmFnZ2VkRWw7XG59XG4vKipcbiAqIHN0eWxlcyB0aGUgZHJhZ2dlZCBlbGVtZW50IHRvIGEgJ2Ryb3BwZWQnIHN0YXRlXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBkcmFnZ2VkRWxcbiAqL1xuXG5mdW5jdGlvbiBtb3ZlRHJhZ2dlZEVsZW1lbnRUb1dhc0Ryb3BwZWRTdGF0ZShkcmFnZ2VkRWwpIHtcbiAgZHJhZ2dlZEVsLnN0eWxlLmN1cnNvciA9IFwiZ3JhYlwiO1xufVxuLyoqXG4gKiBNb3JwaHMgdGhlIGRyYWdnZWQgZWxlbWVudCBzdHlsZSwgbWFpbnRhaW5zIHRoZSBtb3VzZSBwb2ludGVyIHdpdGhpbiB0aGUgZWxlbWVudFxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZHJhZ2dlZEVsXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBjb3B5RnJvbUVsIC0gdGhlIGVsZW1lbnQgdGhlIGRyYWdnZWQgZWxlbWVudCBzaG91bGQgbG9vayBsaWtlLCB0eXBpY2FsbHkgdGhlIHNoYWRvdyBlbGVtZW50XG4gKiBAcGFyYW0ge251bWJlcn0gY3VycmVudE1vdXNlWFxuICogQHBhcmFtIHtudW1iZXJ9IGN1cnJlbnRNb3VzZVlcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IHRyYW5zZm9ybURyYWdnZWRFbGVtZW50IC0gZnVuY3Rpb24gdG8gdHJhbnNmb3JtIHRoZSBkcmFnZ2VkIGVsZW1lbnQsIGRvZXMgbm90aGluZyBieSBkZWZhdWx0LlxuICovXG5cbmZ1bmN0aW9uIG1vcnBoRHJhZ2dlZEVsZW1lbnRUb0JlTGlrZShkcmFnZ2VkRWwsIGNvcHlGcm9tRWwsIGN1cnJlbnRNb3VzZVgsIGN1cnJlbnRNb3VzZVksIHRyYW5zZm9ybURyYWdnZWRFbGVtZW50KSB7XG4gIHZhciBuZXdSZWN0ID0gY29weUZyb21FbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgdmFyIGRyYWdnZWRFbFJlY3QgPSBkcmFnZ2VkRWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciB3aWR0aENoYW5nZSA9IG5ld1JlY3Qud2lkdGggLSBkcmFnZ2VkRWxSZWN0LndpZHRoO1xuICB2YXIgaGVpZ2h0Q2hhbmdlID0gbmV3UmVjdC5oZWlnaHQgLSBkcmFnZ2VkRWxSZWN0LmhlaWdodDtcblxuICBpZiAod2lkdGhDaGFuZ2UgfHwgaGVpZ2h0Q2hhbmdlKSB7XG4gICAgdmFyIHJlbGF0aXZlRGlzdGFuY2VPZk1vdXNlUG9pbnRlckZyb21EcmFnZ2VkU2lkZXMgPSB7XG4gICAgICBsZWZ0OiAoY3VycmVudE1vdXNlWCAtIGRyYWdnZWRFbFJlY3QubGVmdCkgLyBkcmFnZ2VkRWxSZWN0LndpZHRoLFxuICAgICAgdG9wOiAoY3VycmVudE1vdXNlWSAtIGRyYWdnZWRFbFJlY3QudG9wKSAvIGRyYWdnZWRFbFJlY3QuaGVpZ2h0XG4gICAgfTtcbiAgICBkcmFnZ2VkRWwuc3R5bGUuaGVpZ2h0ID0gXCJcIi5jb25jYXQobmV3UmVjdC5oZWlnaHQsIFwicHhcIik7XG4gICAgZHJhZ2dlZEVsLnN0eWxlLndpZHRoID0gXCJcIi5jb25jYXQobmV3UmVjdC53aWR0aCwgXCJweFwiKTtcbiAgICBkcmFnZ2VkRWwuc3R5bGUubGVmdCA9IFwiXCIuY29uY2F0KHBhcnNlRmxvYXQoZHJhZ2dlZEVsLnN0eWxlLmxlZnQpIC0gcmVsYXRpdmVEaXN0YW5jZU9mTW91c2VQb2ludGVyRnJvbURyYWdnZWRTaWRlcy5sZWZ0ICogd2lkdGhDaGFuZ2UsIFwicHhcIik7XG4gICAgZHJhZ2dlZEVsLnN0eWxlLnRvcCA9IFwiXCIuY29uY2F0KHBhcnNlRmxvYXQoZHJhZ2dlZEVsLnN0eWxlLnRvcCkgLSByZWxhdGl2ZURpc3RhbmNlT2ZNb3VzZVBvaW50ZXJGcm9tRHJhZ2dlZFNpZGVzLnRvcCAqIGhlaWdodENoYW5nZSwgXCJweFwiKTtcbiAgfSAvLy8gb3RoZXIgcHJvcGVydGllc1xuXG5cbiAgY29weVN0eWxlc0Zyb21Ubyhjb3B5RnJvbUVsLCBkcmFnZ2VkRWwpO1xuICB0cmFuc2Zvcm1EcmFnZ2VkRWxlbWVudCgpO1xufVxuLyoqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBjb3B5RnJvbUVsXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBjb3B5VG9FbFxuICovXG5cbmZ1bmN0aW9uIGNvcHlTdHlsZXNGcm9tVG8oY29weUZyb21FbCwgY29weVRvRWwpIHtcbiAgdmFyIGNvbXB1dGVkU3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShjb3B5RnJvbUVsKTtcbiAgQXJyYXkuZnJvbShjb21wdXRlZFN0eWxlKS5maWx0ZXIoZnVuY3Rpb24gKHMpIHtcbiAgICByZXR1cm4gcy5zdGFydHNXaXRoKFwiYmFja2dyb3VuZFwiKSB8fCBzLnN0YXJ0c1dpdGgoXCJwYWRkaW5nXCIpIHx8IHMuc3RhcnRzV2l0aChcImZvbnRcIikgfHwgcy5zdGFydHNXaXRoKFwidGV4dFwiKSB8fCBzLnN0YXJ0c1dpdGgoXCJhbGlnblwiKSB8fCBzLnN0YXJ0c1dpdGgoXCJqdXN0aWZ5XCIpIHx8IHMuc3RhcnRzV2l0aChcImRpc3BsYXlcIikgfHwgcy5zdGFydHNXaXRoKFwiZmxleFwiKSB8fCBzLnN0YXJ0c1dpdGgoXCJib3JkZXJcIikgfHwgcyA9PT0gXCJvcGFjaXR5XCIgfHwgcyA9PT0gXCJjb2xvclwiIHx8IHMgPT09IFwibGlzdC1zdHlsZS10eXBlXCI7XG4gIH0pLmZvckVhY2goZnVuY3Rpb24gKHMpIHtcbiAgICByZXR1cm4gY29weVRvRWwuc3R5bGUuc2V0UHJvcGVydHkocywgY29tcHV0ZWRTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKHMpLCBjb21wdXRlZFN0eWxlLmdldFByb3BlcnR5UHJpb3JpdHkocykpO1xuICB9KTtcbn1cbi8qKlxuICogbWFrZXMgdGhlIGVsZW1lbnQgY29tcGF0aWJsZSB3aXRoIGJlaW5nIGRyYWdnYWJsZVxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZHJhZ2dhYmxlRWxcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gZHJhZ0Rpc2FibGVkXG4gKi9cblxuXG5mdW5jdGlvbiBzdHlsZURyYWdnYWJsZShkcmFnZ2FibGVFbCwgZHJhZ0Rpc2FibGVkKSB7XG4gIGRyYWdnYWJsZUVsLmRyYWdnYWJsZSA9IGZhbHNlO1xuXG4gIGRyYWdnYWJsZUVsLm9uZHJhZ3N0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfTtcblxuICBpZiAoIWRyYWdEaXNhYmxlZCkge1xuICAgIGRyYWdnYWJsZUVsLnN0eWxlLnVzZXJTZWxlY3QgPSBcIm5vbmVcIjtcbiAgICBkcmFnZ2FibGVFbC5zdHlsZS5XZWJraXRVc2VyU2VsZWN0ID0gXCJub25lXCI7XG4gICAgZHJhZ2dhYmxlRWwuc3R5bGUuY3Vyc29yID0gXCJncmFiXCI7XG4gIH0gZWxzZSB7XG4gICAgZHJhZ2dhYmxlRWwuc3R5bGUudXNlclNlbGVjdCA9IFwiXCI7XG4gICAgZHJhZ2dhYmxlRWwuc3R5bGUuV2Via2l0VXNlclNlbGVjdCA9IFwiXCI7XG4gICAgZHJhZ2dhYmxlRWwuc3R5bGUuY3Vyc29yID0gXCJcIjtcbiAgfVxufVxuLyoqXG4gKiBIaWRlcyB0aGUgcHJvdmlkZWQgZWxlbWVudCBzbyB0aGF0IGl0IGNhbiBzdGF5IGluIHRoZSBkb20gd2l0aG91dCBpbnRlcnJ1cHRpbmdcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGRyYWdUYXJnZXRcbiAqL1xuXG5mdW5jdGlvbiBoaWRlT3JpZ2luYWxEcmFnVGFyZ2V0KGRyYWdUYXJnZXQpIHtcbiAgZHJhZ1RhcmdldC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIGRyYWdUYXJnZXQuc3R5bGUucG9zaXRpb24gPSBcImZpeGVkXCI7XG4gIGRyYWdUYXJnZXQuc3R5bGUuekluZGV4ID0gXCItNVwiO1xufVxuLyoqXG4gKiBzdHlsZXMgdGhlIHNoYWRvdyBlbGVtZW50XG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBzaGFkb3dFbFxuICovXG5cbmZ1bmN0aW9uIGRlY29yYXRlU2hhZG93RWwoc2hhZG93RWwpIHtcbiAgc2hhZG93RWwuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gIHNoYWRvd0VsLnNldEF0dHJpYnV0ZShTSEFET1dfRUxFTUVOVF9BVFRSSUJVVEVfTkFNRSwgXCJ0cnVlXCIpO1xufVxuLyoqXG4gKiB1bmRvIHRoZSBzdHlsZXMgdGhlIHNoYWRvdyBlbGVtZW50XG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBzaGFkb3dFbFxuICovXG5cbmZ1bmN0aW9uIHVuRGVjb3JhdGVTaGFkb3dFbGVtZW50KHNoYWRvd0VsKSB7XG4gIHNoYWRvd0VsLnN0eWxlLnZpc2liaWxpdHkgPSBcIlwiO1xuICBzaGFkb3dFbC5yZW1vdmVBdHRyaWJ1dGUoU0hBRE9XX0VMRU1FTlRfQVRUUklCVVRFX05BTUUpO1xufVxuLyoqXG4gKiB3aWxsIG1hcmsgdGhlIGdpdmVuIGRyb3B6b25lcyBhcyB2aXN1YWxseSBhY3RpdmVcbiAqIEBwYXJhbSB7QXJyYXk8SFRNTEVsZW1lbnQ+fSBkcm9wWm9uZXNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGdldFN0eWxlcyAtIG1hcHMgYSBkcm9wem9uZSB0byBhIHN0eWxlcyBvYmplY3QgKHNvIHRoZSBzdHlsZXMgY2FuIGJlIHJlbW92ZWQpXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBnZXRDbGFzc2VzIC0gbWFwcyBhIGRyb3B6b25lIHRvIGEgY2xhc3NMaXN0XG4gKi9cblxuZnVuY3Rpb24gc3R5bGVBY3RpdmVEcm9wWm9uZXMoZHJvcFpvbmVzKSB7XG4gIHZhciBnZXRTdHlsZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZ1bmN0aW9uICgpIHt9O1xuICB2YXIgZ2V0Q2xhc3NlcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBbXTtcbiAgfTtcbiAgZHJvcFpvbmVzLmZvckVhY2goZnVuY3Rpb24gKGR6KSB7XG4gICAgdmFyIHN0eWxlcyA9IGdldFN0eWxlcyhkeik7XG4gICAgT2JqZWN0LmtleXMoc3R5bGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChzdHlsZSkge1xuICAgICAgZHouc3R5bGVbc3R5bGVdID0gc3R5bGVzW3N0eWxlXTtcbiAgICB9KTtcbiAgICBnZXRDbGFzc2VzKGR6KS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7XG4gICAgICByZXR1cm4gZHouY2xhc3NMaXN0LmFkZChjKTtcbiAgICB9KTtcbiAgfSk7XG59XG4vKipcbiAqIHdpbGwgcmVtb3ZlIHRoZSAnYWN0aXZlJyBzdHlsaW5nIGZyb20gZ2l2ZW4gZHJvcHpvbmVzXG4gKiBAcGFyYW0ge0FycmF5PEhUTUxFbGVtZW50Pn0gZHJvcFpvbmVzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBnZXRTdHlsZXMgLSBtYXBzIGEgZHJvcHpvbmUgdG8gYSBzdHlsZXMgb2JqZWN0XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBnZXRDbGFzc2VzIC0gbWFwcyBhIGRyb3B6b25lIHRvIGEgY2xhc3NMaXN0XG4gKi9cblxuZnVuY3Rpb24gc3R5bGVJbmFjdGl2ZURyb3Bab25lcyhkcm9wWm9uZXMpIHtcbiAgdmFyIGdldFN0eWxlcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZnVuY3Rpb24gKCkge307XG4gIHZhciBnZXRDbGFzc2VzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9O1xuICBkcm9wWm9uZXMuZm9yRWFjaChmdW5jdGlvbiAoZHopIHtcbiAgICB2YXIgc3R5bGVzID0gZ2V0U3R5bGVzKGR6KTtcbiAgICBPYmplY3Qua2V5cyhzdHlsZXMpLmZvckVhY2goZnVuY3Rpb24gKHN0eWxlKSB7XG4gICAgICBkei5zdHlsZVtzdHlsZV0gPSBcIlwiO1xuICAgIH0pO1xuICAgIGdldENsYXNzZXMoZHopLmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBkei5jbGFzc0xpc3QuY29udGFpbnMoYykgJiYgZHouY2xhc3NMaXN0LnJlbW92ZShjKTtcbiAgICB9KTtcbiAgfSk7XG59XG4vKipcbiAqIHdpbGwgcHJldmVudCB0aGUgcHJvdmlkZWQgZWxlbWVudCBmcm9tIHNocmlua2luZyBieSBzZXR0aW5nIGl0cyBtaW5XaWR0aCBhbmQgbWluSGVpZ2h0IHRvIHRoZSBjdXJyZW50IHdpZHRoIGFuZCBoZWlnaHQgdmFsdWVzXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbFxuICogQHJldHVybiB7ZnVuY3Rpb24oKTogdm9pZH0gLSBydW4gdGhpcyBmdW5jdGlvbiB0byB1bmRvIHRoZSBvcGVyYXRpb24gYW5kIHJlc3RvcmUgdGhlIG9yaWdpbmFsIHZhbHVlc1xuICovXG5cbmZ1bmN0aW9uIHByZXZlbnRTaHJpbmtpbmcoZWwpIHtcbiAgdmFyIG9yaWdpbmFsTWluSGVpZ2h0ID0gZWwuc3R5bGUubWluSGVpZ2h0O1xuICBlbC5zdHlsZS5taW5IZWlnaHQgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCkuZ2V0UHJvcGVydHlWYWx1ZShcImhlaWdodFwiKTtcbiAgdmFyIG9yaWdpbmFsTWluV2lkdGggPSBlbC5zdHlsZS5taW5XaWR0aDtcbiAgZWwuc3R5bGUubWluV2lkdGggPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCkuZ2V0UHJvcGVydHlWYWx1ZShcIndpZHRoXCIpO1xuICByZXR1cm4gZnVuY3Rpb24gdW5kbygpIHtcbiAgICBlbC5zdHlsZS5taW5IZWlnaHQgPSBvcmlnaW5hbE1pbkhlaWdodDtcbiAgICBlbC5zdHlsZS5taW5XaWR0aCA9IG9yaWdpbmFsTWluV2lkdGg7XG4gIH07XG59XG5cbnZhciBERUZBVUxUX0RST1BfWk9ORV9UWVBFID0gXCItLWFueS0tXCI7XG52YXIgTUlOX09CU0VSVkFUSU9OX0lOVEVSVkFMX01TID0gMTAwO1xudmFyIE1JTl9NT1ZFTUVOVF9CRUZPUkVfRFJBR19TVEFSVF9QWCA9IDM7XG52YXIgREVGQVVMVF9EUk9QX1RBUkdFVF9TVFlMRSA9IHtcbiAgb3V0bGluZTogXCJyZ2JhKDI1NSwgMjU1LCAxMDIsIDAuNykgc29saWQgMnB4XCJcbn07XG52YXIgb3JpZ2luYWxEcmFnVGFyZ2V0O1xudmFyIGRyYWdnZWRFbDtcbnZhciBkcmFnZ2VkRWxEYXRhO1xudmFyIGRyYWdnZWRFbFR5cGU7XG52YXIgb3JpZ2luRHJvcFpvbmU7XG52YXIgb3JpZ2luSW5kZXg7XG52YXIgc2hhZG93RWxEYXRhO1xudmFyIHNoYWRvd0VsRHJvcFpvbmU7XG52YXIgZHJhZ1N0YXJ0TW91c2VQb3NpdGlvbjtcbnZhciBjdXJyZW50TW91c2VQb3NpdGlvbjtcbnZhciBpc1dvcmtpbmdPblByZXZpb3VzRHJhZyA9IGZhbHNlO1xudmFyIGZpbmFsaXppbmdQcmV2aW91c0RyYWcgPSBmYWxzZTtcbnZhciB1bmxvY2tPcmlnaW5Eek1pbkRpbWVuc2lvbnM7XG52YXIgaXNEcmFnZ2VkT3V0c2lkZU9mQW55RHogPSBmYWxzZTsgLy8gYSBtYXAgZnJvbSB0eXBlIHRvIGEgc2V0IG9mIGRyb3Atem9uZXNcblxudmFyIHR5cGVUb0Ryb3Bab25lcyA9IG5ldyBNYXAoKTsgLy8gaW1wb3J0YW50IC0gdGhpcyBpcyBuZWVkZWQgYmVjYXVzZSBvdGhlcndpc2UgdGhlIGNvbmZpZyB0aGF0IHdvdWxkIGJlIHVzZWQgZm9yIGV2ZXJ5b25lIGlzIHRoZSBjb25maWcgb2YgdGhlIGVsZW1lbnQgdGhhdCBjcmVhdGVkIHRoZSBldmVudCBsaXN0ZW5lcnNcblxudmFyIGR6VG9Db25maWcgPSBuZXcgTWFwKCk7IC8vIHRoaXMgaXMgbmVlZGVkIGluIG9yZGVyIHRvIGJlIGFibGUgdG8gY2xlYW51cCBvbGQgbGlzdGVuZXJzIGFuZCBhdm9pZCBzdGFsZSBjbG9zdXJlcyBpc3N1ZXMgKGFzIHRoZSBsaXN0ZW5lciBpcyBkZWZpbmVkIHdpdGhpbiBlYWNoIHpvbmUpXG5cbnZhciBlbFRvTW91c2VEb3duTGlzdGVuZXIgPSBuZXcgV2Vha01hcCgpO1xuLyogZHJvcC16b25lcyByZWdpc3RyYXRpb24gbWFuYWdlbWVudCAqL1xuXG5mdW5jdGlvbiByZWdpc3RlckRyb3Bab25lKGRyb3Bab25lRWwsIHR5cGUpIHtcbiAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFwicmVnaXN0ZXJpbmcgZHJvcC16b25lIGlmIGFic2VudFwiO1xuICB9KTtcblxuICBpZiAoIXR5cGVUb0Ryb3Bab25lcy5oYXModHlwZSkpIHtcbiAgICB0eXBlVG9Ecm9wWm9uZXMuc2V0KHR5cGUsIG5ldyBTZXQoKSk7XG4gIH1cblxuICBpZiAoIXR5cGVUb0Ryb3Bab25lcy5nZXQodHlwZSkuaGFzKGRyb3Bab25lRWwpKSB7XG4gICAgdHlwZVRvRHJvcFpvbmVzLmdldCh0eXBlKS5hZGQoZHJvcFpvbmVFbCk7XG4gICAgaW5jcmVtZW50QWN0aXZlRHJvcFpvbmVDb3VudCgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHVucmVnaXN0ZXJEcm9wWm9uZShkcm9wWm9uZUVsLCB0eXBlKSB7XG4gIHR5cGVUb0Ryb3Bab25lcy5nZXQodHlwZSlbXCJkZWxldGVcIl0oZHJvcFpvbmVFbCk7XG4gIGRlY3JlbWVudEFjdGl2ZURyb3Bab25lQ291bnQoKTtcblxuICBpZiAodHlwZVRvRHJvcFpvbmVzLmdldCh0eXBlKS5zaXplID09PSAwKSB7XG4gICAgdHlwZVRvRHJvcFpvbmVzW1wiZGVsZXRlXCJdKHR5cGUpO1xuICB9XG59XG4vKiBmdW5jdGlvbnMgdG8gbWFuYWdlIG9ic2VydmluZyB0aGUgZHJhZ2dlZCBlbGVtZW50IGFuZCB0cmlnZ2VyIGN1c3RvbSBkcmFnLWV2ZW50cyAqL1xuXG5cbmZ1bmN0aW9uIHdhdGNoRHJhZ2dlZEVsZW1lbnQoKSB7XG4gIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcIndhdGNoaW5nIGRyYWdnZWQgZWxlbWVudFwiO1xuICB9KTtcbiAgYXJtV2luZG93U2Nyb2xsZXIoKTtcbiAgdmFyIGRyb3Bab25lcyA9IHR5cGVUb0Ryb3Bab25lcy5nZXQoZHJhZ2dlZEVsVHlwZSk7XG5cbiAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGRyb3Bab25lcyksXG4gICAgICBfc3RlcDtcblxuICB0cnkge1xuICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7XG4gICAgICB2YXIgZHogPSBfc3RlcC52YWx1ZTtcbiAgICAgIGR6LmFkZEV2ZW50TGlzdGVuZXIoRFJBR0dFRF9FTlRFUkVEX0VWRU5UX05BTUUsIGhhbmRsZURyYWdnZWRFbnRlcmVkKTtcbiAgICAgIGR6LmFkZEV2ZW50TGlzdGVuZXIoRFJBR0dFRF9MRUZUX0VWRU5UX05BTUUsIGhhbmRsZURyYWdnZWRMZWZ0KTtcbiAgICAgIGR6LmFkZEV2ZW50TGlzdGVuZXIoRFJBR0dFRF9PVkVSX0lOREVYX0VWRU5UX05BTUUsIGhhbmRsZURyYWdnZWRJc092ZXJJbmRleCk7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfaXRlcmF0b3IuZShlcnIpO1xuICB9IGZpbmFsbHkge1xuICAgIF9pdGVyYXRvci5mKCk7XG4gIH1cblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihEUkFHR0VEX0xFRlRfRE9DVU1FTlRfRVZFTlRfTkFNRSwgaGFuZGxlRHJvcCk7IC8vIGl0IGlzIGltcG9ydGFudCB0aGF0IHdlIGRvbid0IGhhdmUgYW4gaW50ZXJ2YWwgdGhhdCBpcyBmYXN0ZXIgdGhhbiB0aGUgZmxpcCBkdXJhdGlvbiBiZWNhdXNlIGl0IGNhbiBjYXVzZSBlbGVtZW50cyB0byBqdW1wIGJhY2ggYW5kIGZvcnRoXG5cbiAgdmFyIG9ic2VydmF0aW9uSW50ZXJ2YWxNcyA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIFtNSU5fT0JTRVJWQVRJT05fSU5URVJWQUxfTVNdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoQXJyYXkuZnJvbShkcm9wWm9uZXMua2V5cygpKS5tYXAoZnVuY3Rpb24gKGR6KSB7XG4gICAgcmV0dXJuIGR6VG9Db25maWcuZ2V0KGR6KS5kcm9wQW5pbWF0aW9uRHVyYXRpb25NcztcbiAgfSkpKSk7XG4gIG9ic2VydmUoZHJhZ2dlZEVsLCBkcm9wWm9uZXMsIG9ic2VydmF0aW9uSW50ZXJ2YWxNcyAqIDEuMDcpO1xufVxuXG5mdW5jdGlvbiB1bldhdGNoRHJhZ2dlZEVsZW1lbnQoKSB7XG4gIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcInVud2F0Y2hpbmcgZHJhZ2dlZCBlbGVtZW50XCI7XG4gIH0pO1xuICBkaXNhcm1XaW5kb3dTY3JvbGxlcigpO1xuICB2YXIgZHJvcFpvbmVzID0gdHlwZVRvRHJvcFpvbmVzLmdldChkcmFnZ2VkRWxUeXBlKTtcblxuICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGRyb3Bab25lcyksXG4gICAgICBfc3RlcDI7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykge1xuICAgICAgdmFyIGR6ID0gX3N0ZXAyLnZhbHVlO1xuICAgICAgZHoucmVtb3ZlRXZlbnRMaXN0ZW5lcihEUkFHR0VEX0VOVEVSRURfRVZFTlRfTkFNRSwgaGFuZGxlRHJhZ2dlZEVudGVyZWQpO1xuICAgICAgZHoucmVtb3ZlRXZlbnRMaXN0ZW5lcihEUkFHR0VEX0xFRlRfRVZFTlRfTkFNRSwgaGFuZGxlRHJhZ2dlZExlZnQpO1xuICAgICAgZHoucmVtb3ZlRXZlbnRMaXN0ZW5lcihEUkFHR0VEX09WRVJfSU5ERVhfRVZFTlRfTkFNRSwgaGFuZGxlRHJhZ2dlZElzT3ZlckluZGV4KTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9pdGVyYXRvcjIuZShlcnIpO1xuICB9IGZpbmFsbHkge1xuICAgIF9pdGVyYXRvcjIuZigpO1xuICB9XG5cbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoRFJBR0dFRF9MRUZUX0RPQ1VNRU5UX0VWRU5UX05BTUUsIGhhbmRsZURyb3ApO1xuICB1bm9ic2VydmUoKTtcbn0gLy8gZmluZHMgdGhlIGluaXRpYWwgcGxhY2Vob2xkZXIgdGhhdCBpcyBwbGFjZWQgdGhlcmUgb24gZHJhZyBzdGFydFxuXG5cbmZ1bmN0aW9uIGZpbmRTaGFkb3dQbGFjZUhvbGRlcklkeChpdGVtcykge1xuICByZXR1cm4gaXRlbXMuZmluZEluZGV4KGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgcmV0dXJuIGl0ZW1bSVRFTV9JRF9LRVldID09PSBTSEFET1dfUExBQ0VIT0xERVJfSVRFTV9JRDtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGZpbmRTaGFkb3dFbGVtZW50SWR4KGl0ZW1zKSB7XG4gIC8vIGNoZWNraW5nIHRoYXQgdGhlIGlkIGlzIG5vdCB0aGUgcGxhY2Vob2xkZXIncyBmb3IgRHJhZ3VsYSBsaWtlIHVzZWNhc2VzXG4gIHJldHVybiBpdGVtcy5maW5kSW5kZXgoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICByZXR1cm4gISFpdGVtW1NIQURPV19JVEVNX01BUktFUl9QUk9QRVJUWV9OQU1FXSAmJiBpdGVtW0lURU1fSURfS0VZXSAhPT0gU0hBRE9XX1BMQUNFSE9MREVSX0lURU1fSUQ7XG4gIH0pO1xufVxuLyogY3VzdG9tIGRyYWctZXZlbnRzIGhhbmRsZXJzICovXG5cblxuZnVuY3Rpb24gaGFuZGxlRHJhZ2dlZEVudGVyZWQoZSkge1xuICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gW1wiZHJhZ2dlZCBlbnRlcmVkXCIsIGUuY3VycmVudFRhcmdldCwgZS5kZXRhaWxdO1xuICB9KTtcblxuICB2YXIgX2R6VG9Db25maWckZ2V0ID0gZHpUb0NvbmZpZy5nZXQoZS5jdXJyZW50VGFyZ2V0KSxcbiAgICAgIGl0ZW1zID0gX2R6VG9Db25maWckZ2V0Lml0ZW1zLFxuICAgICAgZHJvcEZyb21PdGhlcnNEaXNhYmxlZCA9IF9kelRvQ29uZmlnJGdldC5kcm9wRnJvbU90aGVyc0Rpc2FibGVkO1xuXG4gIGlmIChkcm9wRnJvbU90aGVyc0Rpc2FibGVkICYmIGUuY3VycmVudFRhcmdldCAhPT0gb3JpZ2luRHJvcFpvbmUpIHtcbiAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBcImlnbm9yaW5nIGRyYWdnZWQgZW50ZXJlZCBiZWNhdXNlIGRyb3AgaXMgY3VycmVudGx5IGRpc2FibGVkXCI7XG4gICAgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaXNEcmFnZ2VkT3V0c2lkZU9mQW55RHogPSBmYWxzZTsgLy8gdGhpcyBkZWFscyB3aXRoIGFub3RoZXIgcmFjZSBjb25kaXRpb24uIGluIHJhcmUgb2NjYXNpb25zIChzdXBlciByYXBpZCBvcGVyYXRpb25zKSB0aGUgbGlzdCBoYXNuJ3QgdXBkYXRlZCB5ZXRcblxuICBpdGVtcyA9IGl0ZW1zLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgIHJldHVybiBpdGVtW0lURU1fSURfS0VZXSAhPT0gc2hhZG93RWxEYXRhW0lURU1fSURfS0VZXTtcbiAgfSk7XG4gIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcImRyYWdnZWQgZW50ZXJlZCBpdGVtcyBcIi5jb25jYXQodG9TdHJpbmcoaXRlbXMpKTtcbiAgfSk7XG5cbiAgaWYgKG9yaWdpbkRyb3Bab25lICE9PSBlLmN1cnJlbnRUYXJnZXQpIHtcbiAgICB2YXIgb3JpZ2luWm9uZUl0ZW1zID0gZHpUb0NvbmZpZy5nZXQob3JpZ2luRHJvcFpvbmUpLml0ZW1zO1xuICAgIHZhciBuZXdPcmlnaW5ab25lSXRlbXMgPSBvcmlnaW5ab25lSXRlbXMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICByZXR1cm4gIWl0ZW1bU0hBRE9XX0lURU1fTUFSS0VSX1BST1BFUlRZX05BTUVdO1xuICAgIH0pO1xuICAgIGRpc3BhdGNoQ29uc2lkZXJFdmVudChvcmlnaW5Ecm9wWm9uZSwgbmV3T3JpZ2luWm9uZUl0ZW1zLCB7XG4gICAgICB0cmlnZ2VyOiBUUklHR0VSUy5EUkFHR0VEX0VOVEVSRURfQU5PVEhFUixcbiAgICAgIGlkOiBkcmFnZ2VkRWxEYXRhW0lURU1fSURfS0VZXSxcbiAgICAgIHNvdXJjZTogU09VUkNFUy5QT0lOVEVSXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHNoYWRvd1BsYWNlSG9sZGVySWR4ID0gZmluZFNoYWRvd1BsYWNlSG9sZGVySWR4KGl0ZW1zKTtcblxuICAgIGlmIChzaGFkb3dQbGFjZUhvbGRlcklkeCAhPT0gLTEpIHtcbiAgICAgIC8vIG9ubHkgaGFwcGVucyByaWdodCBhZnRlciBkcmFnIHN0YXJ0LCBvbiB0aGUgZmlyc3QgZHJhZyBlbnRlcmVkIGV2ZW50XG4gICAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwicmVtb3ZpbmcgcGxhY2Vob2xkZXIgaXRlbSBmcm9tIG9yaWdpbiBkelwiO1xuICAgICAgfSk7XG4gICAgICBpdGVtcy5zcGxpY2Uoc2hhZG93UGxhY2VIb2xkZXJJZHgsIDEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBfZSRkZXRhaWwkaW5kZXhPYmogPSBlLmRldGFpbC5pbmRleE9iaixcbiAgICAgIGluZGV4ID0gX2UkZGV0YWlsJGluZGV4T2JqLmluZGV4LFxuICAgICAgaXNQcm94aW1pdHlCYXNlZCA9IF9lJGRldGFpbCRpbmRleE9iai5pc1Byb3hpbWl0eUJhc2VkO1xuICB2YXIgc2hhZG93RWxJZHggPSBpc1Byb3hpbWl0eUJhc2VkICYmIGluZGV4ID09PSBlLmN1cnJlbnRUYXJnZXQuY2hpbGRyZW4ubGVuZ3RoIC0gMSA/IGluZGV4ICsgMSA6IGluZGV4O1xuICBzaGFkb3dFbERyb3Bab25lID0gZS5jdXJyZW50VGFyZ2V0O1xuICBpdGVtcy5zcGxpY2Uoc2hhZG93RWxJZHgsIDAsIHNoYWRvd0VsRGF0YSk7XG4gIGRpc3BhdGNoQ29uc2lkZXJFdmVudChlLmN1cnJlbnRUYXJnZXQsIGl0ZW1zLCB7XG4gICAgdHJpZ2dlcjogVFJJR0dFUlMuRFJBR0dFRF9FTlRFUkVELFxuICAgIGlkOiBkcmFnZ2VkRWxEYXRhW0lURU1fSURfS0VZXSxcbiAgICBzb3VyY2U6IFNPVVJDRVMuUE9JTlRFUlxuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlRHJhZ2dlZExlZnQoZSkge1xuICAvLyBkZWFsaW5nIHdpdGggYSByYXJlIHJhY2UgY29uZGl0aW9uIG9uIGV4dHJlbWVseSByYXBpZCBjbGlja2luZyBhbmQgZHJvcHBpbmdcbiAgaWYgKCFpc1dvcmtpbmdPblByZXZpb3VzRHJhZykgcmV0dXJuO1xuICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gW1wiZHJhZ2dlZCBsZWZ0XCIsIGUuY3VycmVudFRhcmdldCwgZS5kZXRhaWxdO1xuICB9KTtcblxuICB2YXIgX2R6VG9Db25maWckZ2V0MiA9IGR6VG9Db25maWcuZ2V0KGUuY3VycmVudFRhcmdldCksXG4gICAgICBpdGVtcyA9IF9kelRvQ29uZmlnJGdldDIuaXRlbXMsXG4gICAgICBkcm9wRnJvbU90aGVyc0Rpc2FibGVkID0gX2R6VG9Db25maWckZ2V0Mi5kcm9wRnJvbU90aGVyc0Rpc2FibGVkO1xuXG4gIGlmIChkcm9wRnJvbU90aGVyc0Rpc2FibGVkICYmIGUuY3VycmVudFRhcmdldCAhPT0gb3JpZ2luRHJvcFpvbmUgJiYgZS5jdXJyZW50VGFyZ2V0ICE9PSBzaGFkb3dFbERyb3Bab25lKSB7XG4gICAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gXCJkcm9wIGlzIGN1cnJlbnRseSBkaXNhYmxlZFwiO1xuICAgIH0pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBzaGFkb3dFbElkeCA9IGZpbmRTaGFkb3dFbGVtZW50SWR4KGl0ZW1zKTtcbiAgdmFyIHNoYWRvd0l0ZW0gPSBpdGVtcy5zcGxpY2Uoc2hhZG93RWxJZHgsIDEpWzBdO1xuICBzaGFkb3dFbERyb3Bab25lID0gdW5kZWZpbmVkO1xuICB2YXIgX2UkZGV0YWlsID0gZS5kZXRhaWwsXG4gICAgICB0eXBlID0gX2UkZGV0YWlsLnR5cGUsXG4gICAgICB0aGVPdGhlckR6ID0gX2UkZGV0YWlsLnRoZU90aGVyRHo7XG5cbiAgaWYgKHR5cGUgPT09IERSQUdHRURfTEVGVF9UWVBFUy5PVVRTSURFX09GX0FOWSB8fCB0eXBlID09PSBEUkFHR0VEX0xFRlRfVFlQRVMuTEVGVF9GT1JfQU5PVEhFUiAmJiB0aGVPdGhlckR6ICE9PSBvcmlnaW5Ecm9wWm9uZSAmJiBkelRvQ29uZmlnLmdldCh0aGVPdGhlckR6KS5kcm9wRnJvbU90aGVyc0Rpc2FibGVkKSB7XG4gICAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gXCJkcmFnZ2VkIGxlZnQgYWxsLCBwdXR0aW5nIHNoYWRvdyBlbGVtZW50IGJhY2sgaW4gdGhlIG9yaWdpbiBkelwiO1xuICAgIH0pO1xuICAgIGlzRHJhZ2dlZE91dHNpZGVPZkFueUR6ID0gdHJ1ZTtcbiAgICBzaGFkb3dFbERyb3Bab25lID0gb3JpZ2luRHJvcFpvbmU7XG4gICAgdmFyIG9yaWdpblpvbmVJdGVtcyA9IGR6VG9Db25maWcuZ2V0KG9yaWdpbkRyb3Bab25lKS5pdGVtcztcbiAgICBvcmlnaW5ab25lSXRlbXMuc3BsaWNlKG9yaWdpbkluZGV4LCAwLCBzaGFkb3dJdGVtKTtcbiAgICBkaXNwYXRjaENvbnNpZGVyRXZlbnQob3JpZ2luRHJvcFpvbmUsIG9yaWdpblpvbmVJdGVtcywge1xuICAgICAgdHJpZ2dlcjogVFJJR0dFUlMuRFJBR0dFRF9MRUZUX0FMTCxcbiAgICAgIGlkOiBkcmFnZ2VkRWxEYXRhW0lURU1fSURfS0VZXSxcbiAgICAgIHNvdXJjZTogU09VUkNFUy5QT0lOVEVSXG4gICAgfSk7XG4gIH0gLy8gZm9yIHRoZSBvcmlnaW4gZHosIHdoZW4gdGhlIGRyYWdnZWQgaXMgb3V0c2lkZSBvZiBhbnksIHRoaXMgd2lsbCBiZSBmaXJlZCBpbiBhZGRpdGlvbiB0byB0aGUgcHJldmlvdXMuIHRoaXMgaXMgZm9yIHNpbXBsaWNpdHlcblxuXG4gIGRpc3BhdGNoQ29uc2lkZXJFdmVudChlLmN1cnJlbnRUYXJnZXQsIGl0ZW1zLCB7XG4gICAgdHJpZ2dlcjogVFJJR0dFUlMuRFJBR0dFRF9MRUZULFxuICAgIGlkOiBkcmFnZ2VkRWxEYXRhW0lURU1fSURfS0VZXSxcbiAgICBzb3VyY2U6IFNPVVJDRVMuUE9JTlRFUlxuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlRHJhZ2dlZElzT3ZlckluZGV4KGUpIHtcbiAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFtcImRyYWdnZWQgaXMgb3ZlciBpbmRleFwiLCBlLmN1cnJlbnRUYXJnZXQsIGUuZGV0YWlsXTtcbiAgfSk7XG5cbiAgdmFyIF9kelRvQ29uZmlnJGdldDMgPSBkelRvQ29uZmlnLmdldChlLmN1cnJlbnRUYXJnZXQpLFxuICAgICAgaXRlbXMgPSBfZHpUb0NvbmZpZyRnZXQzLml0ZW1zLFxuICAgICAgZHJvcEZyb21PdGhlcnNEaXNhYmxlZCA9IF9kelRvQ29uZmlnJGdldDMuZHJvcEZyb21PdGhlcnNEaXNhYmxlZDtcblxuICBpZiAoZHJvcEZyb21PdGhlcnNEaXNhYmxlZCAmJiBlLmN1cnJlbnRUYXJnZXQgIT09IG9yaWdpbkRyb3Bab25lKSB7XG4gICAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gXCJkcm9wIGlzIGN1cnJlbnRseSBkaXNhYmxlZFwiO1xuICAgIH0pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlzRHJhZ2dlZE91dHNpZGVPZkFueUR6ID0gZmFsc2U7XG4gIHZhciBpbmRleCA9IGUuZGV0YWlsLmluZGV4T2JqLmluZGV4O1xuICB2YXIgc2hhZG93RWxJZHggPSBmaW5kU2hhZG93RWxlbWVudElkeChpdGVtcyk7XG4gIGl0ZW1zLnNwbGljZShzaGFkb3dFbElkeCwgMSk7XG4gIGl0ZW1zLnNwbGljZShpbmRleCwgMCwgc2hhZG93RWxEYXRhKTtcbiAgZGlzcGF0Y2hDb25zaWRlckV2ZW50KGUuY3VycmVudFRhcmdldCwgaXRlbXMsIHtcbiAgICB0cmlnZ2VyOiBUUklHR0VSUy5EUkFHR0VEX09WRVJfSU5ERVgsXG4gICAgaWQ6IGRyYWdnZWRFbERhdGFbSVRFTV9JRF9LRVldLFxuICAgIHNvdXJjZTogU09VUkNFUy5QT0lOVEVSXG4gIH0pO1xufSAvLyBHbG9iYWwgbW91c2UvdG91Y2gtZXZlbnRzIGhhbmRsZXJzXG5cblxuZnVuY3Rpb24gaGFuZGxlTW91c2VNb3ZlKGUpIHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICB2YXIgYyA9IGUudG91Y2hlcyA/IGUudG91Y2hlc1swXSA6IGU7XG4gIGN1cnJlbnRNb3VzZVBvc2l0aW9uID0ge1xuICAgIHg6IGMuY2xpZW50WCxcbiAgICB5OiBjLmNsaWVudFlcbiAgfTtcbiAgZHJhZ2dlZEVsLnN0eWxlLnRyYW5zZm9ybSA9IFwidHJhbnNsYXRlM2QoXCIuY29uY2F0KGN1cnJlbnRNb3VzZVBvc2l0aW9uLnggLSBkcmFnU3RhcnRNb3VzZVBvc2l0aW9uLngsIFwicHgsIFwiKS5jb25jYXQoY3VycmVudE1vdXNlUG9zaXRpb24ueSAtIGRyYWdTdGFydE1vdXNlUG9zaXRpb24ueSwgXCJweCwgMClcIik7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZURyb3AoKSB7XG4gIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcImRyb3BwZWRcIjtcbiAgfSk7XG4gIGZpbmFsaXppbmdQcmV2aW91c0RyYWcgPSB0cnVlOyAvLyBjbGVhbnVwXG5cbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgaGFuZGxlTW91c2VNb3ZlKTtcbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIiwgaGFuZGxlTW91c2VNb3ZlKTtcbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIGhhbmRsZURyb3ApO1xuICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIGhhbmRsZURyb3ApO1xuICB1bldhdGNoRHJhZ2dlZEVsZW1lbnQoKTtcbiAgbW92ZURyYWdnZWRFbGVtZW50VG9XYXNEcm9wcGVkU3RhdGUoZHJhZ2dlZEVsKTtcblxuICBpZiAoIXNoYWRvd0VsRHJvcFpvbmUpIHtcbiAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBcImVsZW1lbnQgd2FzIGRyb3BwZWQgcmlnaHQgYWZ0ZXIgaXQgbGVmdCBvcmlnaW4gYnV0IGJlZm9yZSBlbnRlcmluZyBzb21ld2hlcmUgZWxzZVwiO1xuICAgIH0pO1xuICAgIHNoYWRvd0VsRHJvcFpvbmUgPSBvcmlnaW5Ecm9wWm9uZTtcbiAgfVxuXG4gIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBbXCJkcm9wcGVkIGluIGR6XCIsIHNoYWRvd0VsRHJvcFpvbmVdO1xuICB9KTtcblxuICB2YXIgX2R6VG9Db25maWckZ2V0NCA9IGR6VG9Db25maWcuZ2V0KHNoYWRvd0VsRHJvcFpvbmUpLFxuICAgICAgaXRlbXMgPSBfZHpUb0NvbmZpZyRnZXQ0Lml0ZW1zLFxuICAgICAgdHlwZSA9IF9kelRvQ29uZmlnJGdldDQudHlwZTtcblxuICBzdHlsZUluYWN0aXZlRHJvcFpvbmVzKHR5cGVUb0Ryb3Bab25lcy5nZXQodHlwZSksIGZ1bmN0aW9uIChkeikge1xuICAgIHJldHVybiBkelRvQ29uZmlnLmdldChkeikuZHJvcFRhcmdldFN0eWxlO1xuICB9LCBmdW5jdGlvbiAoZHopIHtcbiAgICByZXR1cm4gZHpUb0NvbmZpZy5nZXQoZHopLmRyb3BUYXJnZXRDbGFzc2VzO1xuICB9KTtcbiAgdmFyIHNoYWRvd0VsSWR4ID0gZmluZFNoYWRvd0VsZW1lbnRJZHgoaXRlbXMpOyAvLyB0aGUgaGFuZGxlciBtaWdodCByZW1vdmUgdGhlIHNoYWRvdyBlbGVtZW50LCBleDogZHJhZ3VsYSBsaWtlIGNvcHkgb24gZHJhZ1xuXG4gIGlmIChzaGFkb3dFbElkeCA9PT0gLTEpIHNoYWRvd0VsSWR4ID0gb3JpZ2luSW5kZXg7XG4gIGl0ZW1zID0gaXRlbXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgcmV0dXJuIGl0ZW1bU0hBRE9XX0lURU1fTUFSS0VSX1BST1BFUlRZX05BTUVdID8gZHJhZ2dlZEVsRGF0YSA6IGl0ZW07XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIGZpbmFsaXplV2l0aGluWm9uZSgpIHtcbiAgICB1bmxvY2tPcmlnaW5Eek1pbkRpbWVuc2lvbnMoKTtcbiAgICBkaXNwYXRjaEZpbmFsaXplRXZlbnQoc2hhZG93RWxEcm9wWm9uZSwgaXRlbXMsIHtcbiAgICAgIHRyaWdnZXI6IGlzRHJhZ2dlZE91dHNpZGVPZkFueUR6ID8gVFJJR0dFUlMuRFJPUFBFRF9PVVRTSURFX09GX0FOWSA6IFRSSUdHRVJTLkRST1BQRURfSU5UT19aT05FLFxuICAgICAgaWQ6IGRyYWdnZWRFbERhdGFbSVRFTV9JRF9LRVldLFxuICAgICAgc291cmNlOiBTT1VSQ0VTLlBPSU5URVJcbiAgICB9KTtcblxuICAgIGlmIChzaGFkb3dFbERyb3Bab25lICE9PSBvcmlnaW5Ecm9wWm9uZSkge1xuICAgICAgLy8gbGV0dGluZyB0aGUgb3JpZ2luIGRyb3Agem9uZSBrbm93IHRoZSBlbGVtZW50IHdhcyBwZXJtYW5lbnRseSB0YWtlbiBhd2F5XG4gICAgICBkaXNwYXRjaEZpbmFsaXplRXZlbnQob3JpZ2luRHJvcFpvbmUsIGR6VG9Db25maWcuZ2V0KG9yaWdpbkRyb3Bab25lKS5pdGVtcywge1xuICAgICAgICB0cmlnZ2VyOiBUUklHR0VSUy5EUk9QUEVEX0lOVE9fQU5PVEhFUixcbiAgICAgICAgaWQ6IGRyYWdnZWRFbERhdGFbSVRFTV9JRF9LRVldLFxuICAgICAgICBzb3VyY2U6IFNPVVJDRVMuUE9JTlRFUlxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdW5EZWNvcmF0ZVNoYWRvd0VsZW1lbnQoc2hhZG93RWxEcm9wWm9uZS5jaGlsZHJlbltzaGFkb3dFbElkeF0pO1xuICAgIGNsZWFudXBQb3N0RHJvcCgpO1xuICB9XG5cbiAgYW5pbWF0ZURyYWdnZWRUb0ZpbmFsUG9zaXRpb24oc2hhZG93RWxJZHgsIGZpbmFsaXplV2l0aGluWm9uZSk7XG59IC8vIGhlbHBlciBmdW5jdGlvbiBmb3IgaGFuZGxlRHJvcFxuXG5cbmZ1bmN0aW9uIGFuaW1hdGVEcmFnZ2VkVG9GaW5hbFBvc2l0aW9uKHNoYWRvd0VsSWR4LCBjYWxsYmFjaykge1xuICB2YXIgc2hhZG93RWxSZWN0ID0gZ2V0Qm91bmRpbmdSZWN0Tm9UcmFuc2Zvcm1zKHNoYWRvd0VsRHJvcFpvbmUuY2hpbGRyZW5bc2hhZG93RWxJZHhdKTtcbiAgdmFyIG5ld1RyYW5zZm9ybSA9IHtcbiAgICB4OiBzaGFkb3dFbFJlY3QubGVmdCAtIHBhcnNlRmxvYXQoZHJhZ2dlZEVsLnN0eWxlLmxlZnQpLFxuICAgIHk6IHNoYWRvd0VsUmVjdC50b3AgLSBwYXJzZUZsb2F0KGRyYWdnZWRFbC5zdHlsZS50b3ApXG4gIH07XG5cbiAgdmFyIF9kelRvQ29uZmlnJGdldDUgPSBkelRvQ29uZmlnLmdldChzaGFkb3dFbERyb3Bab25lKSxcbiAgICAgIGRyb3BBbmltYXRpb25EdXJhdGlvbk1zID0gX2R6VG9Db25maWckZ2V0NS5kcm9wQW5pbWF0aW9uRHVyYXRpb25NcztcblxuICB2YXIgdHJhbnNpdGlvbiA9IFwidHJhbnNmb3JtIFwiLmNvbmNhdChkcm9wQW5pbWF0aW9uRHVyYXRpb25NcywgXCJtcyBlYXNlXCIpO1xuICBkcmFnZ2VkRWwuc3R5bGUudHJhbnNpdGlvbiA9IGRyYWdnZWRFbC5zdHlsZS50cmFuc2l0aW9uID8gZHJhZ2dlZEVsLnN0eWxlLnRyYW5zaXRpb24gKyBcIixcIiArIHRyYW5zaXRpb24gOiB0cmFuc2l0aW9uO1xuICBkcmFnZ2VkRWwuc3R5bGUudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGUzZChcIi5jb25jYXQobmV3VHJhbnNmb3JtLngsIFwicHgsIFwiKS5jb25jYXQobmV3VHJhbnNmb3JtLnksIFwicHgsIDApXCIpO1xuICB3aW5kb3cuc2V0VGltZW91dChjYWxsYmFjaywgZHJvcEFuaW1hdGlvbkR1cmF0aW9uTXMpO1xufVxuLyogY2xlYW51cCAqL1xuXG5cbmZ1bmN0aW9uIGNsZWFudXBQb3N0RHJvcCgpIHtcbiAgZHJhZ2dlZEVsLnJlbW92ZSgpO1xuICBvcmlnaW5hbERyYWdUYXJnZXQucmVtb3ZlKCk7XG4gIGRyYWdnZWRFbCA9IHVuZGVmaW5lZDtcbiAgb3JpZ2luYWxEcmFnVGFyZ2V0ID0gdW5kZWZpbmVkO1xuICBkcmFnZ2VkRWxEYXRhID0gdW5kZWZpbmVkO1xuICBkcmFnZ2VkRWxUeXBlID0gdW5kZWZpbmVkO1xuICBvcmlnaW5Ecm9wWm9uZSA9IHVuZGVmaW5lZDtcbiAgb3JpZ2luSW5kZXggPSB1bmRlZmluZWQ7XG4gIHNoYWRvd0VsRGF0YSA9IHVuZGVmaW5lZDtcbiAgc2hhZG93RWxEcm9wWm9uZSA9IHVuZGVmaW5lZDtcbiAgZHJhZ1N0YXJ0TW91c2VQb3NpdGlvbiA9IHVuZGVmaW5lZDtcbiAgY3VycmVudE1vdXNlUG9zaXRpb24gPSB1bmRlZmluZWQ7XG4gIGlzV29ya2luZ09uUHJldmlvdXNEcmFnID0gZmFsc2U7XG4gIGZpbmFsaXppbmdQcmV2aW91c0RyYWcgPSBmYWxzZTtcbiAgdW5sb2NrT3JpZ2luRHpNaW5EaW1lbnNpb25zID0gdW5kZWZpbmVkO1xuICBpc0RyYWdnZWRPdXRzaWRlT2ZBbnlEeiA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBkbmR6b25lKG5vZGUsIG9wdGlvbnMpIHtcbiAgdmFyIGNvbmZpZyA9IHtcbiAgICBpdGVtczogdW5kZWZpbmVkLFxuICAgIHR5cGU6IHVuZGVmaW5lZCxcbiAgICBmbGlwRHVyYXRpb25NczogMCxcbiAgICBkcmFnRGlzYWJsZWQ6IGZhbHNlLFxuICAgIG1vcnBoRGlzYWJsZWQ6IGZhbHNlLFxuICAgIGRyb3BGcm9tT3RoZXJzRGlzYWJsZWQ6IGZhbHNlLFxuICAgIGRyb3BUYXJnZXRTdHlsZTogREVGQVVMVF9EUk9QX1RBUkdFVF9TVFlMRSxcbiAgICBkcm9wVGFyZ2V0Q2xhc3NlczogW10sXG4gICAgdHJhbnNmb3JtRHJhZ2dlZEVsZW1lbnQ6IGZ1bmN0aW9uIHRyYW5zZm9ybURyYWdnZWRFbGVtZW50KCkge30sXG4gICAgY2VudHJlRHJhZ2dlZE9uQ3Vyc29yOiBmYWxzZVxuICB9O1xuICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gW1wiZG5kem9uZSBnb29kIHRvIGdvIG9wdGlvbnM6IFwiLmNvbmNhdCh0b1N0cmluZyhvcHRpb25zKSwgXCIsIGNvbmZpZzogXCIpLmNvbmNhdCh0b1N0cmluZyhjb25maWcpKSwge1xuICAgICAgbm9kZTogbm9kZVxuICAgIH1dO1xuICB9KTtcbiAgdmFyIGVsVG9JZHggPSBuZXcgTWFwKCk7XG5cbiAgZnVuY3Rpb24gYWRkTWF5YmVMaXN0ZW5lcnMoKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgaGFuZGxlTW91c2VNb3ZlTWF5YmVEcmFnU3RhcnQsIHtcbiAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgfSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIiwgaGFuZGxlTW91c2VNb3ZlTWF5YmVEcmFnU3RhcnQsIHtcbiAgICAgIHBhc3NpdmU6IGZhbHNlLFxuICAgICAgY2FwdHVyZTogZmFsc2VcbiAgICB9KTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgaGFuZGxlRmFsc2VBbGFybSwge1xuICAgICAgcGFzc2l2ZTogZmFsc2VcbiAgICB9KTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIGhhbmRsZUZhbHNlQWxhcm0sIHtcbiAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmVNYXliZUxpc3RlbmVycygpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBoYW5kbGVNb3VzZU1vdmVNYXliZURyYWdTdGFydCk7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIiwgaGFuZGxlTW91c2VNb3ZlTWF5YmVEcmFnU3RhcnQpO1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCBoYW5kbGVGYWxzZUFsYXJtKTtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIGhhbmRsZUZhbHNlQWxhcm0pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlRmFsc2VBbGFybSgpIHtcbiAgICByZW1vdmVNYXliZUxpc3RlbmVycygpO1xuICAgIG9yaWdpbmFsRHJhZ1RhcmdldCA9IHVuZGVmaW5lZDtcbiAgICBkcmFnU3RhcnRNb3VzZVBvc2l0aW9uID0gdW5kZWZpbmVkO1xuICAgIGN1cnJlbnRNb3VzZVBvc2l0aW9uID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTW91c2VNb3ZlTWF5YmVEcmFnU3RhcnQoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB2YXIgYyA9IGUudG91Y2hlcyA/IGUudG91Y2hlc1swXSA6IGU7XG4gICAgY3VycmVudE1vdXNlUG9zaXRpb24gPSB7XG4gICAgICB4OiBjLmNsaWVudFgsXG4gICAgICB5OiBjLmNsaWVudFlcbiAgICB9O1xuXG4gICAgaWYgKE1hdGguYWJzKGN1cnJlbnRNb3VzZVBvc2l0aW9uLnggLSBkcmFnU3RhcnRNb3VzZVBvc2l0aW9uLngpID49IE1JTl9NT1ZFTUVOVF9CRUZPUkVfRFJBR19TVEFSVF9QWCB8fCBNYXRoLmFicyhjdXJyZW50TW91c2VQb3NpdGlvbi55IC0gZHJhZ1N0YXJ0TW91c2VQb3NpdGlvbi55KSA+PSBNSU5fTU9WRU1FTlRfQkVGT1JFX0RSQUdfU1RBUlRfUFgpIHtcbiAgICAgIHJlbW92ZU1heWJlTGlzdGVuZXJzKCk7XG4gICAgICBoYW5kbGVEcmFnU3RhcnQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVNb3VzZURvd24oZSkge1xuICAgIC8vIG9uIHNhZmFyaSBjbGlja2luZyBvbiBhIHNlbGVjdCBlbGVtZW50IGRvZXNuJ3QgZmlyZSBtb3VzZXVwIGF0IHRoZSBlbmQgb2YgdGhlIGNsaWNrIGFuZCBpbiBnZW5lcmFsIHRoaXMgbWFrZXMgbW9yZSBzZW5zZVxuICAgIGlmIChlLnRhcmdldCAhPT0gZS5jdXJyZW50VGFyZ2V0ICYmIChlLnRhcmdldC52YWx1ZSAhPT0gdW5kZWZpbmVkIHx8IGUudGFyZ2V0LmlzQ29udGVudEVkaXRhYmxlKSkge1xuICAgICAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcIndvbid0IGluaXRpYXRlIGRyYWcgb24gYSBuZXN0ZWQgaW5wdXQgZWxlbWVudFwiO1xuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBwcmV2ZW50cyByZXNwb25kaW5nIHRvIGFueSBidXR0b24gYnV0IGxlZnQgY2xpY2sgd2hpY2ggZXF1YWxzIDAgKHdoaWNoIGlzIGZhbHN5KVxuXG5cbiAgICBpZiAoZS5idXR0b24pIHtcbiAgICAgIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCJpZ25vcmluZyBub25lIGxlZnQgY2xpY2sgYnV0dG9uOiBcIi5jb25jYXQoZS5idXR0b24pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGlzV29ya2luZ09uUHJldmlvdXNEcmFnKSB7XG4gICAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiY2Fubm90IHN0YXJ0IGEgbmV3IGRyYWcgYmVmb3JlIGZpbmFsaXppbmcgcHJldmlvdXMgb25lXCI7XG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHZhciBjID0gZS50b3VjaGVzID8gZS50b3VjaGVzWzBdIDogZTtcbiAgICBkcmFnU3RhcnRNb3VzZVBvc2l0aW9uID0ge1xuICAgICAgeDogYy5jbGllbnRYLFxuICAgICAgeTogYy5jbGllbnRZXG4gICAgfTtcbiAgICBjdXJyZW50TW91c2VQb3NpdGlvbiA9IF9vYmplY3RTcHJlYWQyKHt9LCBkcmFnU3RhcnRNb3VzZVBvc2l0aW9uKTtcbiAgICBvcmlnaW5hbERyYWdUYXJnZXQgPSBlLmN1cnJlbnRUYXJnZXQ7XG4gICAgYWRkTWF5YmVMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZURyYWdTdGFydCgpIHtcbiAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBbXCJkcmFnIHN0YXJ0IGNvbmZpZzogXCIuY29uY2F0KHRvU3RyaW5nKGNvbmZpZykpLCBvcmlnaW5hbERyYWdUYXJnZXRdO1xuICAgIH0pO1xuICAgIGlzV29ya2luZ09uUHJldmlvdXNEcmFnID0gdHJ1ZTsgLy8gaW5pdGlhbGlzaW5nIGdsb2JhbHNcblxuICAgIHZhciBjdXJyZW50SWR4ID0gZWxUb0lkeC5nZXQob3JpZ2luYWxEcmFnVGFyZ2V0KTtcbiAgICBvcmlnaW5JbmRleCA9IGN1cnJlbnRJZHg7XG4gICAgb3JpZ2luRHJvcFpvbmUgPSBvcmlnaW5hbERyYWdUYXJnZXQucGFyZW50RWxlbWVudDtcbiAgICAvKiogQHR5cGUge1NoYWRvd1Jvb3QgfCBIVE1MRG9jdW1lbnR9ICovXG5cbiAgICB2YXIgcm9vdE5vZGUgPSBvcmlnaW5Ecm9wWm9uZS5nZXRSb290Tm9kZSgpO1xuICAgIHZhciBvcmlnaW5Ecm9wWm9uZVJvb3QgPSByb290Tm9kZS5ib2R5IHx8IHJvb3ROb2RlO1xuICAgIHZhciBpdGVtcyA9IGNvbmZpZy5pdGVtcyxcbiAgICAgICAgdHlwZSA9IGNvbmZpZy50eXBlLFxuICAgICAgICBjZW50cmVEcmFnZ2VkT25DdXJzb3IgPSBjb25maWcuY2VudHJlRHJhZ2dlZE9uQ3Vyc29yO1xuICAgIGRyYWdnZWRFbERhdGEgPSBfb2JqZWN0U3ByZWFkMih7fSwgaXRlbXNbY3VycmVudElkeF0pO1xuICAgIGRyYWdnZWRFbFR5cGUgPSB0eXBlO1xuICAgIHNoYWRvd0VsRGF0YSA9IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCBkcmFnZ2VkRWxEYXRhKSwge30sIF9kZWZpbmVQcm9wZXJ0eSh7fSwgU0hBRE9XX0lURU1fTUFSS0VSX1BST1BFUlRZX05BTUUsIHRydWUpKTsgLy8gVGhlIGluaXRpYWwgc2hhZG93IGVsZW1lbnQuIFdlIG5lZWQgYSBkaWZmZXJlbnQgaWQgYXQgZmlyc3QgaW4gb3JkZXIgdG8gYXZvaWQgY29uZmxpY3RzIGFuZCB0aW1pbmcgaXNzdWVzXG5cbiAgICB2YXIgcGxhY2VIb2xkZXJFbERhdGEgPSBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgc2hhZG93RWxEYXRhKSwge30sIF9kZWZpbmVQcm9wZXJ0eSh7fSwgSVRFTV9JRF9LRVksIFNIQURPV19QTEFDRUhPTERFUl9JVEVNX0lEKSk7IC8vIGNyZWF0aW5nIHRoZSBkcmFnZ2FibGUgZWxlbWVudFxuXG5cbiAgICBkcmFnZ2VkRWwgPSBjcmVhdGVEcmFnZ2VkRWxlbWVudEZyb20ob3JpZ2luYWxEcmFnVGFyZ2V0LCBjZW50cmVEcmFnZ2VkT25DdXJzb3IgJiYgY3VycmVudE1vdXNlUG9zaXRpb24pOyAvLyBXZSB3aWxsIGtlZXAgdGhlIG9yaWdpbmFsIGRvbSBub2RlIGluIHRoZSBkb20gYmVjYXVzZSB0b3VjaCBldmVudHMga2VlcCBmaXJpbmcgb24gaXQsIHdlIHdhbnQgdG8gcmUtYWRkIGl0IGFmdGVyIHRoZSBmcmFtZXdvcmsgcmVtb3ZlcyBpdFxuXG4gICAgZnVuY3Rpb24ga2VlcE9yaWdpbmFsRWxlbWVudEluRG9tKCkge1xuICAgICAgaWYgKCFkcmFnZ2VkRWwucGFyZW50RWxlbWVudCkge1xuICAgICAgICBvcmlnaW5Ecm9wWm9uZVJvb3QuYXBwZW5kQ2hpbGQoZHJhZ2dlZEVsKTsgLy8gdG8gcHJldmVudCB0aGUgb3V0bGluZSBmcm9tIGRpc2FwcGVhcmluZ1xuXG4gICAgICAgIGRyYWdnZWRFbC5mb2N1cygpO1xuICAgICAgICB3YXRjaERyYWdnZWRFbGVtZW50KCk7XG4gICAgICAgIGhpZGVPcmlnaW5hbERyYWdUYXJnZXQob3JpZ2luYWxEcmFnVGFyZ2V0KTtcbiAgICAgICAgb3JpZ2luRHJvcFpvbmVSb290LmFwcGVuZENoaWxkKG9yaWdpbmFsRHJhZ1RhcmdldCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGtlZXBPcmlnaW5hbEVsZW1lbnRJbkRvbSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShrZWVwT3JpZ2luYWxFbGVtZW50SW5Eb20pO1xuICAgIHN0eWxlQWN0aXZlRHJvcFpvbmVzKEFycmF5LmZyb20odHlwZVRvRHJvcFpvbmVzLmdldChjb25maWcudHlwZSkpLmZpbHRlcihmdW5jdGlvbiAoZHopIHtcbiAgICAgIHJldHVybiBkeiA9PT0gb3JpZ2luRHJvcFpvbmUgfHwgIWR6VG9Db25maWcuZ2V0KGR6KS5kcm9wRnJvbU90aGVyc0Rpc2FibGVkO1xuICAgIH0pLCBmdW5jdGlvbiAoZHopIHtcbiAgICAgIHJldHVybiBkelRvQ29uZmlnLmdldChkeikuZHJvcFRhcmdldFN0eWxlO1xuICAgIH0sIGZ1bmN0aW9uIChkeikge1xuICAgICAgcmV0dXJuIGR6VG9Db25maWcuZ2V0KGR6KS5kcm9wVGFyZ2V0Q2xhc3NlcztcbiAgICB9KTsgLy8gcmVtb3ZpbmcgdGhlIG9yaWdpbmFsIGVsZW1lbnQgYnkgcmVtb3ZpbmcgaXRzIGRhdGEgZW50cnlcblxuICAgIGl0ZW1zLnNwbGljZShjdXJyZW50SWR4LCAxLCBwbGFjZUhvbGRlckVsRGF0YSk7XG4gICAgdW5sb2NrT3JpZ2luRHpNaW5EaW1lbnNpb25zID0gcHJldmVudFNocmlua2luZyhvcmlnaW5Ecm9wWm9uZSk7XG4gICAgZGlzcGF0Y2hDb25zaWRlckV2ZW50KG9yaWdpbkRyb3Bab25lLCBpdGVtcywge1xuICAgICAgdHJpZ2dlcjogVFJJR0dFUlMuRFJBR19TVEFSVEVELFxuICAgICAgaWQ6IGRyYWdnZWRFbERhdGFbSVRFTV9JRF9LRVldLFxuICAgICAgc291cmNlOiBTT1VSQ0VTLlBPSU5URVJcbiAgICB9KTsgLy8gaGFuZGluZyBvdmVyIHRvIGdsb2JhbCBoYW5kbGVycyAtIHN0YXJ0aW5nIHRvIHdhdGNoIHRoZSBlbGVtZW50XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBoYW5kbGVNb3VzZU1vdmUsIHtcbiAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgfSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIiwgaGFuZGxlTW91c2VNb3ZlLCB7XG4gICAgICBwYXNzaXZlOiBmYWxzZSxcbiAgICAgIGNhcHR1cmU6IGZhbHNlXG4gICAgfSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIGhhbmRsZURyb3AsIHtcbiAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgfSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLCBoYW5kbGVEcm9wLCB7XG4gICAgICBwYXNzaXZlOiBmYWxzZVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlndXJlKF9yZWYpIHtcbiAgICB2YXIgX3JlZiRpdGVtcyA9IF9yZWYuaXRlbXMsXG4gICAgICAgIGl0ZW1zID0gX3JlZiRpdGVtcyA9PT0gdm9pZCAwID8gdW5kZWZpbmVkIDogX3JlZiRpdGVtcyxcbiAgICAgICAgX3JlZiRmbGlwRHVyYXRpb25NcyA9IF9yZWYuZmxpcER1cmF0aW9uTXMsXG4gICAgICAgIGRyb3BBbmltYXRpb25EdXJhdGlvbk1zID0gX3JlZiRmbGlwRHVyYXRpb25NcyA9PT0gdm9pZCAwID8gMCA6IF9yZWYkZmxpcER1cmF0aW9uTXMsXG4gICAgICAgIF9yZWYkdHlwZSA9IF9yZWYudHlwZSxcbiAgICAgICAgbmV3VHlwZSA9IF9yZWYkdHlwZSA9PT0gdm9pZCAwID8gREVGQVVMVF9EUk9QX1pPTkVfVFlQRSA6IF9yZWYkdHlwZSxcbiAgICAgICAgX3JlZiRkcmFnRGlzYWJsZWQgPSBfcmVmLmRyYWdEaXNhYmxlZCxcbiAgICAgICAgZHJhZ0Rpc2FibGVkID0gX3JlZiRkcmFnRGlzYWJsZWQgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRkcmFnRGlzYWJsZWQsXG4gICAgICAgIF9yZWYkbW9ycGhEaXNhYmxlZCA9IF9yZWYubW9ycGhEaXNhYmxlZCxcbiAgICAgICAgbW9ycGhEaXNhYmxlZCA9IF9yZWYkbW9ycGhEaXNhYmxlZCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJG1vcnBoRGlzYWJsZWQsXG4gICAgICAgIF9yZWYkZHJvcEZyb21PdGhlcnNEaSA9IF9yZWYuZHJvcEZyb21PdGhlcnNEaXNhYmxlZCxcbiAgICAgICAgZHJvcEZyb21PdGhlcnNEaXNhYmxlZCA9IF9yZWYkZHJvcEZyb21PdGhlcnNEaSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJGRyb3BGcm9tT3RoZXJzRGksXG4gICAgICAgIF9yZWYkZHJvcFRhcmdldFN0eWxlID0gX3JlZi5kcm9wVGFyZ2V0U3R5bGUsXG4gICAgICAgIGRyb3BUYXJnZXRTdHlsZSA9IF9yZWYkZHJvcFRhcmdldFN0eWxlID09PSB2b2lkIDAgPyBERUZBVUxUX0RST1BfVEFSR0VUX1NUWUxFIDogX3JlZiRkcm9wVGFyZ2V0U3R5bGUsXG4gICAgICAgIF9yZWYkZHJvcFRhcmdldENsYXNzZSA9IF9yZWYuZHJvcFRhcmdldENsYXNzZXMsXG4gICAgICAgIGRyb3BUYXJnZXRDbGFzc2VzID0gX3JlZiRkcm9wVGFyZ2V0Q2xhc3NlID09PSB2b2lkIDAgPyBbXSA6IF9yZWYkZHJvcFRhcmdldENsYXNzZSxcbiAgICAgICAgX3JlZiR0cmFuc2Zvcm1EcmFnZ2VkID0gX3JlZi50cmFuc2Zvcm1EcmFnZ2VkRWxlbWVudCxcbiAgICAgICAgdHJhbnNmb3JtRHJhZ2dlZEVsZW1lbnQgPSBfcmVmJHRyYW5zZm9ybURyYWdnZWQgPT09IHZvaWQgMCA/IGZ1bmN0aW9uICgpIHt9IDogX3JlZiR0cmFuc2Zvcm1EcmFnZ2VkLFxuICAgICAgICBfcmVmJGNlbnRyZURyYWdnZWRPbkMgPSBfcmVmLmNlbnRyZURyYWdnZWRPbkN1cnNvcixcbiAgICAgICAgY2VudHJlRHJhZ2dlZE9uQ3Vyc29yID0gX3JlZiRjZW50cmVEcmFnZ2VkT25DID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkY2VudHJlRHJhZ2dlZE9uQztcbiAgICBjb25maWcuZHJvcEFuaW1hdGlvbkR1cmF0aW9uTXMgPSBkcm9wQW5pbWF0aW9uRHVyYXRpb25NcztcblxuICAgIGlmIChjb25maWcudHlwZSAmJiBuZXdUeXBlICE9PSBjb25maWcudHlwZSkge1xuICAgICAgdW5yZWdpc3RlckRyb3Bab25lKG5vZGUsIGNvbmZpZy50eXBlKTtcbiAgICB9XG5cbiAgICBjb25maWcudHlwZSA9IG5ld1R5cGU7XG4gICAgcmVnaXN0ZXJEcm9wWm9uZShub2RlLCBuZXdUeXBlKTtcbiAgICBjb25maWcuaXRlbXMgPSBfdG9Db25zdW1hYmxlQXJyYXkoaXRlbXMpO1xuICAgIGNvbmZpZy5kcmFnRGlzYWJsZWQgPSBkcmFnRGlzYWJsZWQ7XG4gICAgY29uZmlnLm1vcnBoRGlzYWJsZWQgPSBtb3JwaERpc2FibGVkO1xuICAgIGNvbmZpZy50cmFuc2Zvcm1EcmFnZ2VkRWxlbWVudCA9IHRyYW5zZm9ybURyYWdnZWRFbGVtZW50O1xuICAgIGNvbmZpZy5jZW50cmVEcmFnZ2VkT25DdXJzb3IgPSBjZW50cmVEcmFnZ2VkT25DdXJzb3I7IC8vIHJlYWx0aW1lIHVwZGF0ZSBmb3IgZHJvcFRhcmdldFN0eWxlXG5cbiAgICBpZiAoaXNXb3JraW5nT25QcmV2aW91c0RyYWcgJiYgIWZpbmFsaXppbmdQcmV2aW91c0RyYWcgJiYgKCFhcmVPYmplY3RzU2hhbGxvd0VxdWFsKGRyb3BUYXJnZXRTdHlsZSwgY29uZmlnLmRyb3BUYXJnZXRTdHlsZSkgfHwgIWFyZUFycmF5c1NoYWxsb3dFcXVhbFNhbWVPcmRlcihkcm9wVGFyZ2V0Q2xhc3NlcywgY29uZmlnLmRyb3BUYXJnZXRDbGFzc2VzKSkpIHtcbiAgICAgIHN0eWxlSW5hY3RpdmVEcm9wWm9uZXMoW25vZGVdLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBjb25maWcuZHJvcFRhcmdldFN0eWxlO1xuICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZHJvcFRhcmdldENsYXNzZXM7XG4gICAgICB9KTtcbiAgICAgIHN0eWxlQWN0aXZlRHJvcFpvbmVzKFtub2RlXSwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZHJvcFRhcmdldFN0eWxlO1xuICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZHJvcFRhcmdldENsYXNzZXM7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25maWcuZHJvcFRhcmdldFN0eWxlID0gZHJvcFRhcmdldFN0eWxlO1xuICAgIGNvbmZpZy5kcm9wVGFyZ2V0Q2xhc3NlcyA9IF90b0NvbnN1bWFibGVBcnJheShkcm9wVGFyZ2V0Q2xhc3Nlcyk7IC8vIHJlYWx0aW1lIHVwZGF0ZSBmb3IgZHJvcEZyb21PdGhlcnNEaXNhYmxlZFxuXG4gICAgZnVuY3Rpb24gZ2V0Q29uZmlnUHJvcChkeiwgcHJvcE5hbWUpIHtcbiAgICAgIHJldHVybiBkelRvQ29uZmlnLmdldChkeikgPyBkelRvQ29uZmlnLmdldChkeilbcHJvcE5hbWVdIDogY29uZmlnW3Byb3BOYW1lXTtcbiAgICB9XG5cbiAgICBpZiAoaXNXb3JraW5nT25QcmV2aW91c0RyYWcgJiYgY29uZmlnLmRyb3BGcm9tT3RoZXJzRGlzYWJsZWQgIT09IGRyb3BGcm9tT3RoZXJzRGlzYWJsZWQpIHtcbiAgICAgIGlmIChkcm9wRnJvbU90aGVyc0Rpc2FibGVkKSB7XG4gICAgICAgIHN0eWxlSW5hY3RpdmVEcm9wWm9uZXMoW25vZGVdLCBmdW5jdGlvbiAoZHopIHtcbiAgICAgICAgICByZXR1cm4gZ2V0Q29uZmlnUHJvcChkeiwgXCJkcm9wVGFyZ2V0U3R5bGVcIik7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChkeikge1xuICAgICAgICAgIHJldHVybiBnZXRDb25maWdQcm9wKGR6LCBcImRyb3BUYXJnZXRDbGFzc2VzXCIpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0eWxlQWN0aXZlRHJvcFpvbmVzKFtub2RlXSwgZnVuY3Rpb24gKGR6KSB7XG4gICAgICAgICAgcmV0dXJuIGdldENvbmZpZ1Byb3AoZHosIFwiZHJvcFRhcmdldFN0eWxlXCIpO1xuICAgICAgICB9LCBmdW5jdGlvbiAoZHopIHtcbiAgICAgICAgICByZXR1cm4gZ2V0Q29uZmlnUHJvcChkeiwgXCJkcm9wVGFyZ2V0Q2xhc3Nlc1wiKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uZmlnLmRyb3BGcm9tT3RoZXJzRGlzYWJsZWQgPSBkcm9wRnJvbU90aGVyc0Rpc2FibGVkO1xuICAgIGR6VG9Db25maWcuc2V0KG5vZGUsIGNvbmZpZyk7XG4gICAgdmFyIHNoYWRvd0VsSWR4ID0gZmluZFNoYWRvd0VsZW1lbnRJZHgoY29uZmlnLml0ZW1zKTtcblxuICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGlkeCkge1xuICAgICAgdmFyIGRyYWdnYWJsZUVsID0gbm9kZS5jaGlsZHJlbltpZHhdO1xuICAgICAgc3R5bGVEcmFnZ2FibGUoZHJhZ2dhYmxlRWwsIGRyYWdEaXNhYmxlZCk7XG5cbiAgICAgIGlmIChpZHggPT09IHNoYWRvd0VsSWR4KSB7XG4gICAgICAgIGlmICghbW9ycGhEaXNhYmxlZCkge1xuICAgICAgICAgIG1vcnBoRHJhZ2dlZEVsZW1lbnRUb0JlTGlrZShkcmFnZ2VkRWwsIGRyYWdnYWJsZUVsLCBjdXJyZW50TW91c2VQb3NpdGlvbi54LCBjdXJyZW50TW91c2VQb3NpdGlvbi55LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uZmlnLnRyYW5zZm9ybURyYWdnZWRFbGVtZW50KGRyYWdnZWRFbCwgZHJhZ2dlZEVsRGF0YSwgaWR4KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRlY29yYXRlU2hhZG93RWwoZHJhZ2dhYmxlRWwpO1xuICAgICAgICByZXR1cm4gXCJjb250aW51ZVwiO1xuICAgICAgfVxuXG4gICAgICBkcmFnZ2FibGVFbC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGVsVG9Nb3VzZURvd25MaXN0ZW5lci5nZXQoZHJhZ2dhYmxlRWwpKTtcbiAgICAgIGRyYWdnYWJsZUVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsIGVsVG9Nb3VzZURvd25MaXN0ZW5lci5nZXQoZHJhZ2dhYmxlRWwpKTtcblxuICAgICAgaWYgKCFkcmFnRGlzYWJsZWQpIHtcbiAgICAgICAgZHJhZ2dhYmxlRWwuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBoYW5kbGVNb3VzZURvd24pO1xuICAgICAgICBkcmFnZ2FibGVFbC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBoYW5kbGVNb3VzZURvd24pO1xuICAgICAgICBlbFRvTW91c2VEb3duTGlzdGVuZXIuc2V0KGRyYWdnYWJsZUVsLCBoYW5kbGVNb3VzZURvd24pO1xuICAgICAgfSAvLyB1cGRhdGluZyB0aGUgaWR4XG5cblxuICAgICAgZWxUb0lkeC5zZXQoZHJhZ2dhYmxlRWwsIGlkeCk7XG4gICAgfTtcblxuICAgIGZvciAodmFyIGlkeCA9IDA7IGlkeCA8IG5vZGUuY2hpbGRyZW4ubGVuZ3RoOyBpZHgrKykge1xuICAgICAgdmFyIF9yZXQgPSBfbG9vcChpZHgpO1xuXG4gICAgICBpZiAoX3JldCA9PT0gXCJjb250aW51ZVwiKSBjb250aW51ZTtcbiAgICB9XG4gIH1cblxuICBjb25maWd1cmUob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUobmV3T3B0aW9ucykge1xuICAgICAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcInBvaW50ZXIgZG5kem9uZSB3aWxsIHVwZGF0ZSBuZXdPcHRpb25zOiBcIi5jb25jYXQodG9TdHJpbmcobmV3T3B0aW9ucykpO1xuICAgICAgfSk7XG4gICAgICBjb25maWd1cmUobmV3T3B0aW9ucyk7XG4gICAgfSxcbiAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcInBvaW50ZXIgZG5kem9uZSB3aWxsIGRlc3Ryb3lcIjtcbiAgICAgIH0pO1xuICAgICAgdW5yZWdpc3RlckRyb3Bab25lKG5vZGUsIGNvbmZpZy50eXBlKTtcbiAgICAgIGR6VG9Db25maWdbXCJkZWxldGVcIl0obm9kZSk7XG4gICAgfVxuICB9O1xufVxuXG52YXIgX0lEX1RPX0lOU1RSVUNUSU9OO1xudmFyIElOU1RSVUNUSU9OX0lEcyA9IHtcbiAgRE5EX1pPTkVfQUNUSVZFOiBcImRuZC16b25lLWFjdGl2ZVwiLFxuICBETkRfWk9ORV9EUkFHX0RJU0FCTEVEOiBcImRuZC16b25lLWRyYWctZGlzYWJsZWRcIlxufTtcbnZhciBJRF9UT19JTlNUUlVDVElPTiA9IChfSURfVE9fSU5TVFJVQ1RJT04gPSB7fSwgX2RlZmluZVByb3BlcnR5KF9JRF9UT19JTlNUUlVDVElPTiwgSU5TVFJVQ1RJT05fSURzLkRORF9aT05FX0FDVElWRSwgXCJUYWIgdG8gb25lIHRoZSBpdGVtcyBhbmQgcHJlc3Mgc3BhY2UtYmFyIG9yIGVudGVyIHRvIHN0YXJ0IGRyYWdnaW5nIGl0XCIpLCBfZGVmaW5lUHJvcGVydHkoX0lEX1RPX0lOU1RSVUNUSU9OLCBJTlNUUlVDVElPTl9JRHMuRE5EX1pPTkVfRFJBR19ESVNBQkxFRCwgXCJUaGlzIGlzIGEgZGlzYWJsZWQgZHJhZyBhbmQgZHJvcCBsaXN0XCIpLCBfSURfVE9fSU5TVFJVQ1RJT04pO1xudmFyIEFMRVJUX0RJVl9JRCA9IFwiZG5kLWFjdGlvbi1hcmlhLWFsZXJ0XCI7XG52YXIgYWxlcnRzRGl2O1xuXG5mdW5jdGlvbiBpbml0QXJpYU9uQnJvd3NlcigpIHtcbiAgLy8gc2V0dGluZyB0aGUgZHluYW1pYyBhbGVydHNcbiAgYWxlcnRzRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICAoZnVuY3Rpb24gaW5pdEFsZXJ0c0RpdigpIHtcbiAgICBhbGVydHNEaXYuaWQgPSBBTEVSVF9ESVZfSUQ7IC8vIHRhYiBpbmRleCAtMSBtYWtlcyB0aGUgYWxlcnQgYmUgcmVhZCB0d2ljZSBvbiBjaHJvbWUgZm9yIHNvbWUgcmVhc29uXG4gICAgLy9hbGVydHNEaXYudGFiSW5kZXggPSAtMTtcblxuICAgIGFsZXJ0c0Rpdi5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcbiAgICBhbGVydHNEaXYuc3R5bGUuYm90dG9tID0gXCIwXCI7XG4gICAgYWxlcnRzRGl2LnN0eWxlLmxlZnQgPSBcIjBcIjtcbiAgICBhbGVydHNEaXYuc3R5bGUuekluZGV4ID0gXCItNVwiO1xuICAgIGFsZXJ0c0Rpdi5zdHlsZS5vcGFjaXR5ID0gXCIwXCI7XG4gICAgYWxlcnRzRGl2LnN0eWxlLmhlaWdodCA9IFwiMFwiO1xuICAgIGFsZXJ0c0Rpdi5zdHlsZS53aWR0aCA9IFwiMFwiO1xuICAgIGFsZXJ0c0Rpdi5zZXRBdHRyaWJ1dGUoXCJyb2xlXCIsIFwiYWxlcnRcIik7XG4gIH0pKCk7XG5cbiAgZG9jdW1lbnQuYm9keS5wcmVwZW5kKGFsZXJ0c0Rpdik7IC8vIHNldHRpbmcgdGhlIGluc3RydWN0aW9uc1xuXG4gIE9iamVjdC5lbnRyaWVzKElEX1RPX0lOU1RSVUNUSU9OKS5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksXG4gICAgICAgIGlkID0gX3JlZjJbMF0sXG4gICAgICAgIHR4dCA9IF9yZWYyWzFdO1xuXG4gICAgcmV0dXJuIGRvY3VtZW50LmJvZHkucHJlcGVuZChpbnN0cnVjdGlvblRvSGlkZGVuRGl2KGlkLCB0eHQpKTtcbiAgfSk7XG59XG4vKipcbiAqIEluaXRpYWxpemVzIHRoZSBzdGF0aWMgYXJpYSBpbnN0cnVjdGlvbnMgc28gdGhleSBjYW4gYmUgYXR0YWNoZWQgdG8gem9uZXNcbiAqIEByZXR1cm4ge3tETkRfWk9ORV9BQ1RJVkU6IHN0cmluZywgRE5EX1pPTkVfRFJBR19ESVNBQkxFRDogc3RyaW5nfSB8IG51bGx9IC0gdGhlIElEcyBmb3Igc3RhdGljIGFyaWEgaW5zdHJ1Y3Rpb24gKHRvIGJlIHVzZWQgdmlhIGFyaWEtZGVzY3JpYmVkYnkpIG9yIG51bGwgb24gdGhlIHNlcnZlclxuICovXG5cblxuZnVuY3Rpb24gaW5pdEFyaWEoKSB7XG4gIGlmIChpc09uU2VydmVyKSByZXR1cm4gbnVsbDtcblxuICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgaW5pdEFyaWFPbkJyb3dzZXIoKTtcbiAgfSBlbHNlIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgaW5pdEFyaWFPbkJyb3dzZXIpO1xuICB9XG5cbiAgcmV0dXJuIF9vYmplY3RTcHJlYWQyKHt9LCBJTlNUUlVDVElPTl9JRHMpO1xufVxuXG5mdW5jdGlvbiBpbnN0cnVjdGlvblRvSGlkZGVuRGl2KGlkLCB0eHQpIHtcbiAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGRpdi5pZCA9IGlkO1xuICBkaXYuaW5uZXJIVE1MID0gXCI8cD5cIi5jb25jYXQodHh0LCBcIjwvcD5cIik7XG4gIGRpdi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIGRpdi5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcbiAgZGl2LnN0eWxlLnpJbmRleCA9IFwiLTVcIjtcbiAgcmV0dXJuIGRpdjtcbn1cbi8qKlxuICogV2lsbCBtYWtlIHRoZSBzY3JlZW4gcmVhZGVyIGFsZXJ0IHRoZSBwcm92aWRlZCB0ZXh0IHRvIHRoZSB1c2VyXG4gKiBAcGFyYW0ge3N0cmluZ30gdHh0XG4gKi9cblxuXG5mdW5jdGlvbiBhbGVydFRvU2NyZWVuUmVhZGVyKHR4dCkge1xuICBhbGVydHNEaXYuaW5uZXJIVE1MID0gXCJcIjtcbiAgdmFyIGFsZXJ0VGV4dCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHR4dCk7XG4gIGFsZXJ0c0Rpdi5hcHBlbmRDaGlsZChhbGVydFRleHQpOyAvLyB0aGlzIGlzIG5lZWRlZCBmb3IgU2FmYXJpXG5cbiAgYWxlcnRzRGl2LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgYWxlcnRzRGl2LnN0eWxlLmRpc3BsYXkgPSBcImlubGluZVwiO1xufVxuXG52YXIgREVGQVVMVF9EUk9QX1pPTkVfVFlQRSQxID0gXCItLWFueS0tXCI7XG52YXIgREVGQVVMVF9EUk9QX1RBUkdFVF9TVFlMRSQxID0ge1xuICBvdXRsaW5lOiBcInJnYmEoMjU1LCAyNTUsIDEwMiwgMC43KSBzb2xpZCAycHhcIlxufTtcbnZhciBpc0RyYWdnaW5nID0gZmFsc2U7XG52YXIgZHJhZ2dlZEl0ZW1UeXBlO1xudmFyIGZvY3VzZWREejtcbnZhciBmb2N1c2VkRHpMYWJlbCA9IFwiXCI7XG52YXIgZm9jdXNlZEl0ZW07XG52YXIgZm9jdXNlZEl0ZW1JZDtcbnZhciBmb2N1c2VkSXRlbUxhYmVsID0gXCJcIjtcbnZhciBhbGxEcmFnVGFyZ2V0cyA9IG5ldyBXZWFrU2V0KCk7XG52YXIgZWxUb0tleURvd25MaXN0ZW5lcnMgPSBuZXcgV2Vha01hcCgpO1xudmFyIGVsVG9Gb2N1c0xpc3RlbmVycyA9IG5ldyBXZWFrTWFwKCk7XG52YXIgZHpUb0hhbmRsZXMgPSBuZXcgTWFwKCk7XG52YXIgZHpUb0NvbmZpZyQxID0gbmV3IE1hcCgpO1xudmFyIHR5cGVUb0Ryb3Bab25lcyQxID0gbmV3IE1hcCgpO1xuLyogVE9ETyAocG90ZW50aWFsbHkpXG4gKiB3aGF0J3MgdGhlIGRlYWwgd2l0aCB0aGUgYmxhY2sgYm9yZGVyIG9mIHZvaWNlLXJlYWRlciBub3QgZm9sbG93aW5nIGZvY3VzP1xuICogbWF5YmUga2VlcCBmb2N1cyBvbiB0aGUgbGFzdCBkcmFnZ2VkIGl0ZW0gdXBvbiBkcm9wP1xuICovXG5cbnZhciBJTlNUUlVDVElPTl9JRHMkMSA9IGluaXRBcmlhKCk7XG4vKiBkcm9wLXpvbmVzIHJlZ2lzdHJhdGlvbiBtYW5hZ2VtZW50ICovXG5cbmZ1bmN0aW9uIHJlZ2lzdGVyRHJvcFpvbmUkMShkcm9wWm9uZUVsLCB0eXBlKSB7XG4gIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcInJlZ2lzdGVyaW5nIGRyb3Atem9uZSBpZiBhYnNlbnRcIjtcbiAgfSk7XG5cbiAgaWYgKHR5cGVUb0Ryb3Bab25lcyQxLnNpemUgPT09IDApIHtcbiAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBcImFkZGluZyBnbG9iYWwga2V5ZG93biBhbmQgY2xpY2sgaGFuZGxlcnNcIjtcbiAgICB9KTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZ2xvYmFsS2V5RG93bkhhbmRsZXIpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZ2xvYmFsQ2xpY2tIYW5kbGVyKTtcbiAgfVxuXG4gIGlmICghdHlwZVRvRHJvcFpvbmVzJDEuaGFzKHR5cGUpKSB7XG4gICAgdHlwZVRvRHJvcFpvbmVzJDEuc2V0KHR5cGUsIG5ldyBTZXQoKSk7XG4gIH1cblxuICBpZiAoIXR5cGVUb0Ryb3Bab25lcyQxLmdldCh0eXBlKS5oYXMoZHJvcFpvbmVFbCkpIHtcbiAgICB0eXBlVG9Ecm9wWm9uZXMkMS5nZXQodHlwZSkuYWRkKGRyb3Bab25lRWwpO1xuICAgIGluY3JlbWVudEFjdGl2ZURyb3Bab25lQ291bnQoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB1bnJlZ2lzdGVyRHJvcFpvbmUkMShkcm9wWm9uZUVsLCB0eXBlKSB7XG4gIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcInVucmVnaXN0ZXJpbmcgZHJvcC16b25lXCI7XG4gIH0pO1xuXG4gIGlmIChmb2N1c2VkRHogPT09IGRyb3Bab25lRWwpIHtcbiAgICBoYW5kbGVEcm9wJDEoKTtcbiAgfVxuXG4gIHR5cGVUb0Ryb3Bab25lcyQxLmdldCh0eXBlKVtcImRlbGV0ZVwiXShkcm9wWm9uZUVsKTtcbiAgZGVjcmVtZW50QWN0aXZlRHJvcFpvbmVDb3VudCgpO1xuXG4gIGlmICh0eXBlVG9Ecm9wWm9uZXMkMS5nZXQodHlwZSkuc2l6ZSA9PT0gMCkge1xuICAgIHR5cGVUb0Ryb3Bab25lcyQxW1wiZGVsZXRlXCJdKHR5cGUpO1xuICB9XG5cbiAgaWYgKHR5cGVUb0Ryb3Bab25lcyQxLnNpemUgPT09IDApIHtcbiAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBcInJlbW92aW5nIGdsb2JhbCBrZXlkb3duIGFuZCBjbGljayBoYW5kbGVyc1wiO1xuICAgIH0pO1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBnbG9iYWxLZXlEb3duSGFuZGxlcik7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBnbG9iYWxDbGlja0hhbmRsZXIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdsb2JhbEtleURvd25IYW5kbGVyKGUpIHtcbiAgaWYgKCFpc0RyYWdnaW5nKSByZXR1cm47XG5cbiAgc3dpdGNoIChlLmtleSkge1xuICAgIGNhc2UgXCJFc2NhcGVcIjpcbiAgICAgIHtcbiAgICAgICAgaGFuZGxlRHJvcCQxKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGdsb2JhbENsaWNrSGFuZGxlcigpIHtcbiAgaWYgKCFpc0RyYWdnaW5nKSByZXR1cm47XG5cbiAgaWYgKCFhbGxEcmFnVGFyZ2V0cy5oYXMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkpIHtcbiAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBcImNsaWNrZWQgb3V0c2lkZSBvZiBhbnkgZHJhZ2dhYmxlXCI7XG4gICAgfSk7XG4gICAgaGFuZGxlRHJvcCQxKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlWm9uZUZvY3VzKGUpIHtcbiAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFwiem9uZSBmb2N1c1wiO1xuICB9KTtcbiAgaWYgKCFpc0RyYWdnaW5nKSByZXR1cm47XG4gIHZhciBuZXdseUZvY3VzZWREeiA9IGUuY3VycmVudFRhcmdldDtcbiAgaWYgKG5ld2x5Rm9jdXNlZER6ID09PSBmb2N1c2VkRHopIHJldHVybjtcbiAgZm9jdXNlZER6TGFiZWwgPSBuZXdseUZvY3VzZWREei5nZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsXCIpIHx8IFwiXCI7XG5cbiAgdmFyIF9kelRvQ29uZmlnJGdldCA9IGR6VG9Db25maWckMS5nZXQoZm9jdXNlZER6KSxcbiAgICAgIG9yaWdpbkl0ZW1zID0gX2R6VG9Db25maWckZ2V0Lml0ZW1zO1xuXG4gIHZhciBvcmlnaW5JdGVtID0gb3JpZ2luSXRlbXMuZmluZChmdW5jdGlvbiAoaXRlbSkge1xuICAgIHJldHVybiBpdGVtW0lURU1fSURfS0VZXSA9PT0gZm9jdXNlZEl0ZW1JZDtcbiAgfSk7XG4gIHZhciBvcmlnaW5JZHggPSBvcmlnaW5JdGVtcy5pbmRleE9mKG9yaWdpbkl0ZW0pO1xuICB2YXIgaXRlbVRvTW92ZSA9IG9yaWdpbkl0ZW1zLnNwbGljZShvcmlnaW5JZHgsIDEpWzBdO1xuXG4gIHZhciBfZHpUb0NvbmZpZyRnZXQyID0gZHpUb0NvbmZpZyQxLmdldChuZXdseUZvY3VzZWREeiksXG4gICAgICB0YXJnZXRJdGVtcyA9IF9kelRvQ29uZmlnJGdldDIuaXRlbXMsXG4gICAgICBhdXRvQXJpYURpc2FibGVkID0gX2R6VG9Db25maWckZ2V0Mi5hdXRvQXJpYURpc2FibGVkO1xuXG4gIGlmIChuZXdseUZvY3VzZWREei5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgPCBmb2N1c2VkRHouZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wIHx8IG5ld2x5Rm9jdXNlZER6LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgPCBmb2N1c2VkRHouZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCkge1xuICAgIHRhcmdldEl0ZW1zLnB1c2goaXRlbVRvTW92ZSk7XG5cbiAgICBpZiAoIWF1dG9BcmlhRGlzYWJsZWQpIHtcbiAgICAgIGFsZXJ0VG9TY3JlZW5SZWFkZXIoXCJNb3ZlZCBpdGVtIFwiLmNvbmNhdChmb2N1c2VkSXRlbUxhYmVsLCBcIiB0byB0aGUgZW5kIG9mIHRoZSBsaXN0IFwiKS5jb25jYXQoZm9jdXNlZER6TGFiZWwpKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdGFyZ2V0SXRlbXMudW5zaGlmdChpdGVtVG9Nb3ZlKTtcblxuICAgIGlmICghYXV0b0FyaWFEaXNhYmxlZCkge1xuICAgICAgYWxlcnRUb1NjcmVlblJlYWRlcihcIk1vdmVkIGl0ZW0gXCIuY29uY2F0KGZvY3VzZWRJdGVtTGFiZWwsIFwiIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGxpc3QgXCIpLmNvbmNhdChmb2N1c2VkRHpMYWJlbCkpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBkekZyb20gPSBmb2N1c2VkRHo7XG4gIGRpc3BhdGNoRmluYWxpemVFdmVudChkekZyb20sIG9yaWdpbkl0ZW1zLCB7XG4gICAgdHJpZ2dlcjogVFJJR0dFUlMuRFJPUFBFRF9JTlRPX0FOT1RIRVIsXG4gICAgaWQ6IGZvY3VzZWRJdGVtSWQsXG4gICAgc291cmNlOiBTT1VSQ0VTLktFWUJPQVJEXG4gIH0pO1xuICBkaXNwYXRjaEZpbmFsaXplRXZlbnQobmV3bHlGb2N1c2VkRHosIHRhcmdldEl0ZW1zLCB7XG4gICAgdHJpZ2dlcjogVFJJR0dFUlMuRFJPUFBFRF9JTlRPX1pPTkUsXG4gICAgaWQ6IGZvY3VzZWRJdGVtSWQsXG4gICAgc291cmNlOiBTT1VSQ0VTLktFWUJPQVJEXG4gIH0pO1xuICBmb2N1c2VkRHogPSBuZXdseUZvY3VzZWREejtcbn1cblxuZnVuY3Rpb24gdHJpZ2dlckFsbER6c1VwZGF0ZSgpIHtcbiAgZHpUb0hhbmRsZXMuZm9yRWFjaChmdW5jdGlvbiAoX3JlZiwgZHopIHtcbiAgICB2YXIgdXBkYXRlID0gX3JlZi51cGRhdGU7XG4gICAgcmV0dXJuIHVwZGF0ZShkelRvQ29uZmlnJDEuZ2V0KGR6KSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVEcm9wJDEoKSB7XG4gIHZhciBkaXNwYXRjaENvbnNpZGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB0cnVlO1xuICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gXCJkcm9wXCI7XG4gIH0pO1xuXG4gIGlmICghZHpUb0NvbmZpZyQxLmdldChmb2N1c2VkRHopLmF1dG9BcmlhRGlzYWJsZWQpIHtcbiAgICBhbGVydFRvU2NyZWVuUmVhZGVyKFwiU3RvcHBlZCBkcmFnZ2luZyBpdGVtIFwiLmNvbmNhdChmb2N1c2VkSXRlbUxhYmVsKSk7XG4gIH1cblxuICBpZiAoYWxsRHJhZ1RhcmdldHMuaGFzKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpKSB7XG4gICAgZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5ibHVyKCk7XG4gIH1cblxuICBpZiAoZGlzcGF0Y2hDb25zaWRlcikge1xuICAgIGRpc3BhdGNoQ29uc2lkZXJFdmVudChmb2N1c2VkRHosIGR6VG9Db25maWckMS5nZXQoZm9jdXNlZER6KS5pdGVtcywge1xuICAgICAgdHJpZ2dlcjogVFJJR0dFUlMuRFJBR19TVE9QUEVELFxuICAgICAgaWQ6IGZvY3VzZWRJdGVtSWQsXG4gICAgICBzb3VyY2U6IFNPVVJDRVMuS0VZQk9BUkRcbiAgICB9KTtcbiAgfVxuXG4gIHN0eWxlSW5hY3RpdmVEcm9wWm9uZXModHlwZVRvRHJvcFpvbmVzJDEuZ2V0KGRyYWdnZWRJdGVtVHlwZSksIGZ1bmN0aW9uIChkeikge1xuICAgIHJldHVybiBkelRvQ29uZmlnJDEuZ2V0KGR6KS5kcm9wVGFyZ2V0U3R5bGU7XG4gIH0sIGZ1bmN0aW9uIChkeikge1xuICAgIHJldHVybiBkelRvQ29uZmlnJDEuZ2V0KGR6KS5kcm9wVGFyZ2V0Q2xhc3NlcztcbiAgfSk7XG4gIGZvY3VzZWRJdGVtID0gbnVsbDtcbiAgZm9jdXNlZEl0ZW1JZCA9IG51bGw7XG4gIGZvY3VzZWRJdGVtTGFiZWwgPSBcIlwiO1xuICBkcmFnZ2VkSXRlbVR5cGUgPSBudWxsO1xuICBmb2N1c2VkRHogPSBudWxsO1xuICBmb2N1c2VkRHpMYWJlbCA9IFwiXCI7XG4gIGlzRHJhZ2dpbmcgPSBmYWxzZTtcbiAgdHJpZ2dlckFsbER6c1VwZGF0ZSgpO1xufSAvLy8vLy9cblxuXG5mdW5jdGlvbiBkbmR6b25lJDEobm9kZSwgb3B0aW9ucykge1xuICB2YXIgY29uZmlnID0ge1xuICAgIGl0ZW1zOiB1bmRlZmluZWQsXG4gICAgdHlwZTogdW5kZWZpbmVkLFxuICAgIGRyYWdEaXNhYmxlZDogZmFsc2UsXG4gICAgem9uZVRhYkluZGV4OiAwLFxuICAgIGRyb3BGcm9tT3RoZXJzRGlzYWJsZWQ6IGZhbHNlLFxuICAgIGRyb3BUYXJnZXRTdHlsZTogREVGQVVMVF9EUk9QX1RBUkdFVF9TVFlMRSQxLFxuICAgIGRyb3BUYXJnZXRDbGFzc2VzOiBbXSxcbiAgICBhdXRvQXJpYURpc2FibGVkOiBmYWxzZVxuICB9O1xuXG4gIGZ1bmN0aW9uIHN3YXAoYXJyLCBpLCBqKSB7XG4gICAgaWYgKGFyci5sZW5ndGggPD0gMSkgcmV0dXJuO1xuICAgIGFyci5zcGxpY2UoaiwgMSwgYXJyLnNwbGljZShpLCAxLCBhcnJbal0pWzBdKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUtleURvd24oZSkge1xuICAgIHByaW50RGVidWcoZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIFtcImhhbmRsaW5nIGtleSBkb3duXCIsIGUua2V5XTtcbiAgICB9KTtcblxuICAgIHN3aXRjaCAoZS5rZXkpIHtcbiAgICAgIGNhc2UgXCJFbnRlclwiOlxuICAgICAgY2FzZSBcIiBcIjpcbiAgICAgICAge1xuICAgICAgICAgIC8vIHdlIGRvbid0IHdhbnQgdG8gYWZmZWN0IG5lc3RlZCBpbnB1dCBlbGVtZW50cyBvciBjbGlja2FibGUgZWxlbWVudHNcbiAgICAgICAgICBpZiAoKGUudGFyZ2V0LmRpc2FibGVkICE9PSB1bmRlZmluZWQgfHwgZS50YXJnZXQuaHJlZiB8fCBlLnRhcmdldC5pc0NvbnRlbnRFZGl0YWJsZSkgJiYgIWFsbERyYWdUYXJnZXRzLmhhcyhlLnRhcmdldCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7IC8vIHByZXZlbnRpbmcgc2Nyb2xsaW5nIG9uIHNwYWNlYmFyXG5cbiAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAgICAgaWYgKGlzRHJhZ2dpbmcpIHtcbiAgICAgICAgICAgIC8vIFRPRE8gLSBzaG91bGQgdGhpcyB0cmlnZ2VyIGEgZHJvcD8gb25seSBoZXJlIG9yIGluIGdlbmVyYWwgKGFzIGluIHdoZW4gaGl0dGluZyBzcGFjZSBvciBlbnRlciBvdXRzaWRlIG9mIGFueSB6b25lKT9cbiAgICAgICAgICAgIGhhbmRsZURyb3AkMSgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBkcmFnIHN0YXJ0XG4gICAgICAgICAgICBoYW5kbGVEcmFnU3RhcnQoZSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgY2FzZSBcIkFycm93RG93blwiOlxuICAgICAgY2FzZSBcIkFycm93UmlnaHRcIjpcbiAgICAgICAge1xuICAgICAgICAgIGlmICghaXNEcmFnZ2luZykgcmV0dXJuO1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsgLy8gcHJldmVudCBzY3JvbGxpbmdcblxuICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgICAgICB2YXIgX2R6VG9Db25maWckZ2V0MyA9IGR6VG9Db25maWckMS5nZXQobm9kZSksXG4gICAgICAgICAgICAgIGl0ZW1zID0gX2R6VG9Db25maWckZ2V0My5pdGVtcztcblxuICAgICAgICAgIHZhciBjaGlsZHJlbiA9IEFycmF5LmZyb20obm9kZS5jaGlsZHJlbik7XG4gICAgICAgICAgdmFyIGlkeCA9IGNoaWxkcmVuLmluZGV4T2YoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBbXCJhcnJvdyBkb3duXCIsIGlkeF07XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAoaWR4IDwgY2hpbGRyZW4ubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgaWYgKCFjb25maWcuYXV0b0FyaWFEaXNhYmxlZCkge1xuICAgICAgICAgICAgICBhbGVydFRvU2NyZWVuUmVhZGVyKFwiTW92ZWQgaXRlbSBcIi5jb25jYXQoZm9jdXNlZEl0ZW1MYWJlbCwgXCIgdG8gcG9zaXRpb24gXCIpLmNvbmNhdChpZHggKyAyLCBcIiBpbiB0aGUgbGlzdCBcIikuY29uY2F0KGZvY3VzZWREekxhYmVsKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHN3YXAoaXRlbXMsIGlkeCwgaWR4ICsgMSk7XG4gICAgICAgICAgICBkaXNwYXRjaEZpbmFsaXplRXZlbnQobm9kZSwgaXRlbXMsIHtcbiAgICAgICAgICAgICAgdHJpZ2dlcjogVFJJR0dFUlMuRFJPUFBFRF9JTlRPX1pPTkUsXG4gICAgICAgICAgICAgIGlkOiBmb2N1c2VkSXRlbUlkLFxuICAgICAgICAgICAgICBzb3VyY2U6IFNPVVJDRVMuS0VZQk9BUkRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgIGNhc2UgXCJBcnJvd1VwXCI6XG4gICAgICBjYXNlIFwiQXJyb3dMZWZ0XCI6XG4gICAgICAgIHtcbiAgICAgICAgICBpZiAoIWlzRHJhZ2dpbmcpIHJldHVybjtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7IC8vIHByZXZlbnQgc2Nyb2xsaW5nXG5cbiAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAgICAgdmFyIF9kelRvQ29uZmlnJGdldDQgPSBkelRvQ29uZmlnJDEuZ2V0KG5vZGUpLFxuICAgICAgICAgICAgICBfaXRlbXMgPSBfZHpUb0NvbmZpZyRnZXQ0Lml0ZW1zO1xuXG4gICAgICAgICAgdmFyIF9jaGlsZHJlbiA9IEFycmF5LmZyb20obm9kZS5jaGlsZHJlbik7XG5cbiAgICAgICAgICB2YXIgX2lkeCA9IF9jaGlsZHJlbi5pbmRleE9mKGUuY3VycmVudFRhcmdldCk7XG5cbiAgICAgICAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBbXCJhcnJvdyB1cFwiLCBfaWR4XTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGlmIChfaWR4ID4gMCkge1xuICAgICAgICAgICAgaWYgKCFjb25maWcuYXV0b0FyaWFEaXNhYmxlZCkge1xuICAgICAgICAgICAgICBhbGVydFRvU2NyZWVuUmVhZGVyKFwiTW92ZWQgaXRlbSBcIi5jb25jYXQoZm9jdXNlZEl0ZW1MYWJlbCwgXCIgdG8gcG9zaXRpb24gXCIpLmNvbmNhdChfaWR4LCBcIiBpbiB0aGUgbGlzdCBcIikuY29uY2F0KGZvY3VzZWREekxhYmVsKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHN3YXAoX2l0ZW1zLCBfaWR4LCBfaWR4IC0gMSk7XG4gICAgICAgICAgICBkaXNwYXRjaEZpbmFsaXplRXZlbnQobm9kZSwgX2l0ZW1zLCB7XG4gICAgICAgICAgICAgIHRyaWdnZXI6IFRSSUdHRVJTLkRST1BQRURfSU5UT19aT05FLFxuICAgICAgICAgICAgICBpZDogZm9jdXNlZEl0ZW1JZCxcbiAgICAgICAgICAgICAgc291cmNlOiBTT1VSQ0VTLktFWUJPQVJEXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZURyYWdTdGFydChlKSB7XG4gICAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gXCJkcmFnIHN0YXJ0XCI7XG4gICAgfSk7XG4gICAgc2V0Q3VycmVudEZvY3VzZWRJdGVtKGUuY3VycmVudFRhcmdldCk7XG4gICAgZm9jdXNlZER6ID0gbm9kZTtcbiAgICBkcmFnZ2VkSXRlbVR5cGUgPSBjb25maWcudHlwZTtcbiAgICBpc0RyYWdnaW5nID0gdHJ1ZTtcbiAgICB2YXIgZHJvcFRhcmdldHMgPSBBcnJheS5mcm9tKHR5cGVUb0Ryb3Bab25lcyQxLmdldChjb25maWcudHlwZSkpLmZpbHRlcihmdW5jdGlvbiAoZHopIHtcbiAgICAgIHJldHVybiBkeiA9PT0gZm9jdXNlZER6IHx8ICFkelRvQ29uZmlnJDEuZ2V0KGR6KS5kcm9wRnJvbU90aGVyc0Rpc2FibGVkO1xuICAgIH0pO1xuICAgIHN0eWxlQWN0aXZlRHJvcFpvbmVzKGRyb3BUYXJnZXRzLCBmdW5jdGlvbiAoZHopIHtcbiAgICAgIHJldHVybiBkelRvQ29uZmlnJDEuZ2V0KGR6KS5kcm9wVGFyZ2V0U3R5bGU7XG4gICAgfSwgZnVuY3Rpb24gKGR6KSB7XG4gICAgICByZXR1cm4gZHpUb0NvbmZpZyQxLmdldChkeikuZHJvcFRhcmdldENsYXNzZXM7XG4gICAgfSk7XG5cbiAgICBpZiAoIWNvbmZpZy5hdXRvQXJpYURpc2FibGVkKSB7XG4gICAgICB2YXIgbXNnID0gXCJTdGFydGVkIGRyYWdnaW5nIGl0ZW0gXCIuY29uY2F0KGZvY3VzZWRJdGVtTGFiZWwsIFwiLiBVc2UgdGhlIGFycm93IGtleXMgdG8gbW92ZSBpdCB3aXRoaW4gaXRzIGxpc3QgXCIpLmNvbmNhdChmb2N1c2VkRHpMYWJlbCk7XG5cbiAgICAgIGlmIChkcm9wVGFyZ2V0cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIG1zZyArPSBcIiwgb3IgdGFiIHRvIGFub3RoZXIgbGlzdCBpbiBvcmRlciB0byBtb3ZlIHRoZSBpdGVtIGludG8gaXRcIjtcbiAgICAgIH1cblxuICAgICAgYWxlcnRUb1NjcmVlblJlYWRlcihtc2cpO1xuICAgIH1cblxuICAgIGRpc3BhdGNoQ29uc2lkZXJFdmVudChub2RlLCBkelRvQ29uZmlnJDEuZ2V0KG5vZGUpLml0ZW1zLCB7XG4gICAgICB0cmlnZ2VyOiBUUklHR0VSUy5EUkFHX1NUQVJURUQsXG4gICAgICBpZDogZm9jdXNlZEl0ZW1JZCxcbiAgICAgIHNvdXJjZTogU09VUkNFUy5LRVlCT0FSRFxuICAgIH0pO1xuICAgIHRyaWdnZXJBbGxEenNVcGRhdGUoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUNsaWNrKGUpIHtcbiAgICBpZiAoIWlzRHJhZ2dpbmcpIHJldHVybjtcbiAgICBpZiAoZS5jdXJyZW50VGFyZ2V0ID09PSBmb2N1c2VkSXRlbSkgcmV0dXJuO1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgaGFuZGxlRHJvcCQxKGZhbHNlKTtcbiAgICBoYW5kbGVEcmFnU3RhcnQoZSk7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRDdXJyZW50Rm9jdXNlZEl0ZW0oZHJhZ2dhYmxlRWwpIHtcbiAgICB2YXIgX2R6VG9Db25maWckZ2V0NSA9IGR6VG9Db25maWckMS5nZXQobm9kZSksXG4gICAgICAgIGl0ZW1zID0gX2R6VG9Db25maWckZ2V0NS5pdGVtcztcblxuICAgIHZhciBjaGlsZHJlbiA9IEFycmF5LmZyb20obm9kZS5jaGlsZHJlbik7XG4gICAgdmFyIGZvY3VzZWRJdGVtSWR4ID0gY2hpbGRyZW4uaW5kZXhPZihkcmFnZ2FibGVFbCk7XG4gICAgZm9jdXNlZEl0ZW0gPSBkcmFnZ2FibGVFbDtcbiAgICBmb2N1c2VkSXRlbS50YWJJbmRleCA9IDA7XG4gICAgZm9jdXNlZEl0ZW1JZCA9IGl0ZW1zW2ZvY3VzZWRJdGVtSWR4XVtJVEVNX0lEX0tFWV07XG4gICAgZm9jdXNlZEl0ZW1MYWJlbCA9IGNoaWxkcmVuW2ZvY3VzZWRJdGVtSWR4XS5nZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsXCIpIHx8IFwiXCI7XG4gIH1cblxuICBmdW5jdGlvbiBjb25maWd1cmUoX3JlZjIpIHtcbiAgICB2YXIgX3JlZjIkaXRlbXMgPSBfcmVmMi5pdGVtcyxcbiAgICAgICAgaXRlbXMgPSBfcmVmMiRpdGVtcyA9PT0gdm9pZCAwID8gW10gOiBfcmVmMiRpdGVtcyxcbiAgICAgICAgX3JlZjIkdHlwZSA9IF9yZWYyLnR5cGUsXG4gICAgICAgIG5ld1R5cGUgPSBfcmVmMiR0eXBlID09PSB2b2lkIDAgPyBERUZBVUxUX0RST1BfWk9ORV9UWVBFJDEgOiBfcmVmMiR0eXBlLFxuICAgICAgICBfcmVmMiRkcmFnRGlzYWJsZWQgPSBfcmVmMi5kcmFnRGlzYWJsZWQsXG4gICAgICAgIGRyYWdEaXNhYmxlZCA9IF9yZWYyJGRyYWdEaXNhYmxlZCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmMiRkcmFnRGlzYWJsZWQsXG4gICAgICAgIF9yZWYyJHpvbmVUYWJJbmRleCA9IF9yZWYyLnpvbmVUYWJJbmRleCxcbiAgICAgICAgem9uZVRhYkluZGV4ID0gX3JlZjIkem9uZVRhYkluZGV4ID09PSB2b2lkIDAgPyAwIDogX3JlZjIkem9uZVRhYkluZGV4LFxuICAgICAgICBfcmVmMiRkcm9wRnJvbU90aGVyc0QgPSBfcmVmMi5kcm9wRnJvbU90aGVyc0Rpc2FibGVkLFxuICAgICAgICBkcm9wRnJvbU90aGVyc0Rpc2FibGVkID0gX3JlZjIkZHJvcEZyb21PdGhlcnNEID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYyJGRyb3BGcm9tT3RoZXJzRCxcbiAgICAgICAgX3JlZjIkZHJvcFRhcmdldFN0eWxlID0gX3JlZjIuZHJvcFRhcmdldFN0eWxlLFxuICAgICAgICBkcm9wVGFyZ2V0U3R5bGUgPSBfcmVmMiRkcm9wVGFyZ2V0U3R5bGUgPT09IHZvaWQgMCA/IERFRkFVTFRfRFJPUF9UQVJHRVRfU1RZTEUkMSA6IF9yZWYyJGRyb3BUYXJnZXRTdHlsZSxcbiAgICAgICAgX3JlZjIkZHJvcFRhcmdldENsYXNzID0gX3JlZjIuZHJvcFRhcmdldENsYXNzZXMsXG4gICAgICAgIGRyb3BUYXJnZXRDbGFzc2VzID0gX3JlZjIkZHJvcFRhcmdldENsYXNzID09PSB2b2lkIDAgPyBbXSA6IF9yZWYyJGRyb3BUYXJnZXRDbGFzcyxcbiAgICAgICAgX3JlZjIkYXV0b0FyaWFEaXNhYmxlID0gX3JlZjIuYXV0b0FyaWFEaXNhYmxlZCxcbiAgICAgICAgYXV0b0FyaWFEaXNhYmxlZCA9IF9yZWYyJGF1dG9BcmlhRGlzYWJsZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmMiRhdXRvQXJpYURpc2FibGU7XG4gICAgY29uZmlnLml0ZW1zID0gX3RvQ29uc3VtYWJsZUFycmF5KGl0ZW1zKTtcbiAgICBjb25maWcuZHJhZ0Rpc2FibGVkID0gZHJhZ0Rpc2FibGVkO1xuICAgIGNvbmZpZy5kcm9wRnJvbU90aGVyc0Rpc2FibGVkID0gZHJvcEZyb21PdGhlcnNEaXNhYmxlZDtcbiAgICBjb25maWcuem9uZVRhYkluZGV4ID0gem9uZVRhYkluZGV4O1xuICAgIGNvbmZpZy5kcm9wVGFyZ2V0U3R5bGUgPSBkcm9wVGFyZ2V0U3R5bGU7XG4gICAgY29uZmlnLmRyb3BUYXJnZXRDbGFzc2VzID0gZHJvcFRhcmdldENsYXNzZXM7XG4gICAgY29uZmlnLmF1dG9BcmlhRGlzYWJsZWQgPSBhdXRvQXJpYURpc2FibGVkO1xuXG4gICAgaWYgKCFhdXRvQXJpYURpc2FibGVkKSB7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZShcImFyaWEtZGlzYWJsZWRcIiwgZHJhZ0Rpc2FibGVkKTtcbiAgICAgIG5vZGUuc2V0QXR0cmlidXRlKFwicm9sZVwiLCBcImxpc3RcIik7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZShcImFyaWEtZGVzY3JpYmVkYnlcIiwgZHJhZ0Rpc2FibGVkID8gSU5TVFJVQ1RJT05fSURzJDEuRE5EX1pPTkVfRFJBR19ESVNBQkxFRCA6IElOU1RSVUNUSU9OX0lEcyQxLkRORF9aT05FX0FDVElWRSk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy50eXBlICYmIG5ld1R5cGUgIT09IGNvbmZpZy50eXBlKSB7XG4gICAgICB1bnJlZ2lzdGVyRHJvcFpvbmUkMShub2RlLCBjb25maWcudHlwZSk7XG4gICAgfVxuXG4gICAgY29uZmlnLnR5cGUgPSBuZXdUeXBlO1xuICAgIHJlZ2lzdGVyRHJvcFpvbmUkMShub2RlLCBuZXdUeXBlKTtcbiAgICBkelRvQ29uZmlnJDEuc2V0KG5vZGUsIGNvbmZpZyk7XG5cbiAgICBpZiAoaXNEcmFnZ2luZykge1xuICAgICAgbm9kZS50YWJJbmRleCA9IG5vZGUgPT09IGZvY3VzZWREeiB8fCBmb2N1c2VkSXRlbS5jb250YWlucyhub2RlKSB8fCBjb25maWcuZHJvcEZyb21PdGhlcnNEaXNhYmxlZCB8fCBmb2N1c2VkRHogJiYgY29uZmlnLnR5cGUgIT09IGR6VG9Db25maWckMS5nZXQoZm9jdXNlZER6KS50eXBlID8gLTEgOiAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBub2RlLnRhYkluZGV4ID0gY29uZmlnLnpvbmVUYWJJbmRleDtcbiAgICB9XG5cbiAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLCBoYW5kbGVab25lRm9jdXMpO1xuXG4gICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoaSkge1xuICAgICAgdmFyIGRyYWdnYWJsZUVsID0gbm9kZS5jaGlsZHJlbltpXTtcbiAgICAgIGFsbERyYWdUYXJnZXRzLmFkZChkcmFnZ2FibGVFbCk7XG4gICAgICBkcmFnZ2FibGVFbC50YWJJbmRleCA9IGlzRHJhZ2dpbmcgPyAtMSA6IDA7XG5cbiAgICAgIGlmICghYXV0b0FyaWFEaXNhYmxlZCkge1xuICAgICAgICBkcmFnZ2FibGVFbC5zZXRBdHRyaWJ1dGUoXCJyb2xlXCIsIFwibGlzdGl0ZW1cIik7XG4gICAgICB9XG5cbiAgICAgIGRyYWdnYWJsZUVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGVsVG9LZXlEb3duTGlzdGVuZXJzLmdldChkcmFnZ2FibGVFbCkpO1xuICAgICAgZHJhZ2dhYmxlRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGVsVG9Gb2N1c0xpc3RlbmVycy5nZXQoZHJhZ2dhYmxlRWwpKTtcblxuICAgICAgaWYgKCFkcmFnRGlzYWJsZWQpIHtcbiAgICAgICAgZHJhZ2dhYmxlRWwuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93bik7XG4gICAgICAgIGVsVG9LZXlEb3duTGlzdGVuZXJzLnNldChkcmFnZ2FibGVFbCwgaGFuZGxlS2V5RG93bik7XG4gICAgICAgIGRyYWdnYWJsZUVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVDbGljayk7XG4gICAgICAgIGVsVG9Gb2N1c0xpc3RlbmVycy5zZXQoZHJhZ2dhYmxlRWwsIGhhbmRsZUNsaWNrKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzRHJhZ2dpbmcgJiYgY29uZmlnLml0ZW1zW2ldW0lURU1fSURfS0VZXSA9PT0gZm9jdXNlZEl0ZW1JZCkge1xuICAgICAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gW1wiZm9jdXNpbmcgb25cIiwge1xuICAgICAgICAgICAgaTogaSxcbiAgICAgICAgICAgIGZvY3VzZWRJdGVtSWQ6IGZvY3VzZWRJdGVtSWRcbiAgICAgICAgICB9XTtcbiAgICAgICAgfSk7IC8vIGlmIGl0IGlzIGEgbmVzdGVkIGRyb3B6b25lLCBpdCB3YXMgcmUtcmVuZGVyZWQgYW5kIHdlIG5lZWQgdG8gcmVmcmVzaCBvdXIgcG9pbnRlclxuXG4gICAgICAgIGZvY3VzZWRJdGVtID0gZHJhZ2dhYmxlRWw7XG4gICAgICAgIGZvY3VzZWRJdGVtLnRhYkluZGV4ID0gMDsgLy8gd2l0aG91dCB0aGlzIHRoZSBlbGVtZW50IGxvc2VzIGZvY3VzIGlmIGl0IG1vdmVzIGJhY2t3YXJkcyBpbiB0aGUgbGlzdFxuXG4gICAgICAgIGRyYWdnYWJsZUVsLmZvY3VzKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZS5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgX2xvb3AoaSk7XG4gICAgfVxuICB9XG5cbiAgY29uZmlndXJlKG9wdGlvbnMpO1xuICB2YXIgaGFuZGxlcyA9IHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShuZXdPcHRpb25zKSB7XG4gICAgICBwcmludERlYnVnKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwia2V5Ym9hcmQgZG5kem9uZSB3aWxsIHVwZGF0ZSBuZXdPcHRpb25zOiBcIi5jb25jYXQodG9TdHJpbmcobmV3T3B0aW9ucykpO1xuICAgICAgfSk7XG4gICAgICBjb25maWd1cmUobmV3T3B0aW9ucyk7XG4gICAgfSxcbiAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgcHJpbnREZWJ1ZyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcImtleWJvYXJkIGRuZHpvbmUgd2lsbCBkZXN0cm95XCI7XG4gICAgICB9KTtcbiAgICAgIHVucmVnaXN0ZXJEcm9wWm9uZSQxKG5vZGUsIGNvbmZpZy50eXBlKTtcbiAgICAgIGR6VG9Db25maWckMVtcImRlbGV0ZVwiXShub2RlKTtcbiAgICAgIGR6VG9IYW5kbGVzW1wiZGVsZXRlXCJdKG5vZGUpO1xuICAgIH1cbiAgfTtcbiAgZHpUb0hhbmRsZXMuc2V0KG5vZGUsIGhhbmRsZXMpO1xuICByZXR1cm4gaGFuZGxlcztcbn1cblxuLyoqXG4gKiBBIGN1c3RvbSBhY3Rpb24gdG8gdHVybiBhbnkgY29udGFpbmVyIHRvIGEgZG5kIHpvbmUgYW5kIGFsbCBvZiBpdHMgZGlyZWN0IGNoaWxkcmVuIHRvIGRyYWdnYWJsZXNcbiAqIFN1cHBvcnRzIG1vdXNlLCB0b3VjaCBhbmQga2V5Ym9hcmQgaW50ZXJhY3Rpb25zLlxuICogRGlzcGF0Y2hlcyB0d28gZXZlbnRzIHRoYXQgdGhlIGNvbnRhaW5lciBpcyBleHBlY3RlZCB0byByZWFjdCB0byBieSBtb2RpZnlpbmcgaXRzIGxpc3Qgb2YgaXRlbXMsXG4gKiB3aGljaCB3aWxsIHRoZW4gZmVlZCBiYWNrIGluIHRvIHRoaXMgYWN0aW9uIHZpYSB0aGUgdXBkYXRlIGZ1bmN0aW9uXG4gKlxuICogQHR5cGVkZWYge29iamVjdH0gT3B0aW9uc1xuICogQHByb3BlcnR5IHthcnJheX0gaXRlbXMgLSB0aGUgbGlzdCBvZiBpdGVtcyB0aGF0IHdhcyB1c2VkIHRvIGdlbmVyYXRlIHRoZSBjaGlsZHJlbiBvZiB0aGUgZ2l2ZW4gbm9kZSAodGhlIGxpc3QgdXNlZCBpbiB0aGUgI2VhY2ggYmxvY2tcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbdHlwZV0gLSB0aGUgdHlwZSBvZiB0aGUgZG5kIHpvbmUuIGNoaWxkcmVuIGRyYWdnZWQgZnJvbSBoZXJlIGNhbiBvbmx5IGJlIGRyb3BwZWQgaW4gb3RoZXIgem9uZXMgb2YgdGhlIHNhbWUgdHlwZSwgZGVmYXVsdCB0byBhIGJhc2UgdHlwZVxuICogQHByb3BlcnR5IHtudW1iZXJ9IFtmbGlwRHVyYXRpb25Nc10gLSBpZiB0aGUgbGlzdCBhbmltYXRlZCB1c2luZyBmbGlwIChyZWNvbW1lbmRlZCksIHNwZWNpZmllcyB0aGUgZmxpcCBkdXJhdGlvbiBzdWNoIHRoYXQgZXZlcnl0aGluZyBzeW5jcyB3aXRoIGl0IHdpdGhvdXQgY29uZmxpY3QsIGRlZmF1bHRzIHRvIHplcm9cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW2RyYWdEaXNhYmxlZF1cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW21vcnBoRGlzYWJsZWRdIC0gd2hldGhlciBkcmFnZ2VkIGVsZW1lbnQgc2hvdWxkIG1vcnBoIHRvIHpvbmUgZGltZW5zaW9uc1xuICogQHByb3BlcnR5IHtib29sZWFufSBbZHJvcEZyb21PdGhlcnNEaXNhYmxlZF1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbem9uZVRhYkluZGV4XSAtIHNldCB0aGUgdGFiaW5kZXggb2YgdGhlIGxpc3QgY29udGFpbmVyIHdoZW4gbm90IGRyYWdnaW5nXG4gKiBAcHJvcGVydHkge29iamVjdH0gW2Ryb3BUYXJnZXRTdHlsZV1cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nW119IFtkcm9wVGFyZ2V0Q2xhc3Nlc11cbiAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IFt0cmFuc2Zvcm1EcmFnZ2VkRWxlbWVudF1cbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IG5vZGUgLSB0aGUgZWxlbWVudCB0byBlbmhhbmNlXG4gKiBAcGFyYW0ge09wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3t1cGRhdGU6IGZ1bmN0aW9uLCBkZXN0cm95OiBmdW5jdGlvbn19XG4gKi9cblxuZnVuY3Rpb24gZG5kem9uZSQyKG5vZGUsIG9wdGlvbnMpIHtcbiAgdmFsaWRhdGVPcHRpb25zKG9wdGlvbnMpO1xuICB2YXIgcG9pbnRlclpvbmUgPSBkbmR6b25lKG5vZGUsIG9wdGlvbnMpO1xuICB2YXIga2V5Ym9hcmRab25lID0gZG5kem9uZSQxKG5vZGUsIG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG5ld09wdGlvbnMpIHtcbiAgICAgIHZhbGlkYXRlT3B0aW9ucyhuZXdPcHRpb25zKTtcbiAgICAgIHBvaW50ZXJab25lLnVwZGF0ZShuZXdPcHRpb25zKTtcbiAgICAgIGtleWJvYXJkWm9uZS51cGRhdGUobmV3T3B0aW9ucyk7XG4gICAgfSxcbiAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgcG9pbnRlclpvbmUuZGVzdHJveSgpO1xuICAgICAga2V5Ym9hcmRab25lLmRlc3Ryb3koKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlT3B0aW9ucyhvcHRpb25zKSB7XG4gIC8qZXNsaW50LWRpc2FibGUqL1xuICB2YXIgaXRlbXMgPSBvcHRpb25zLml0ZW1zLFxuICAgICAgZmxpcER1cmF0aW9uTXMgPSBvcHRpb25zLmZsaXBEdXJhdGlvbk1zLFxuICAgICAgdHlwZSA9IG9wdGlvbnMudHlwZSxcbiAgICAgIGRyYWdEaXNhYmxlZCA9IG9wdGlvbnMuZHJhZ0Rpc2FibGVkLFxuICAgICAgbW9ycGhEaXNhYmxlZCA9IG9wdGlvbnMubW9ycGhEaXNhYmxlZCxcbiAgICAgIGRyb3BGcm9tT3RoZXJzRGlzYWJsZWQgPSBvcHRpb25zLmRyb3BGcm9tT3RoZXJzRGlzYWJsZWQsXG4gICAgICB6b25lVGFiSW5kZXggPSBvcHRpb25zLnpvbmVUYWJJbmRleCxcbiAgICAgIGRyb3BUYXJnZXRTdHlsZSA9IG9wdGlvbnMuZHJvcFRhcmdldFN0eWxlLFxuICAgICAgZHJvcFRhcmdldENsYXNzZXMgPSBvcHRpb25zLmRyb3BUYXJnZXRDbGFzc2VzLFxuICAgICAgdHJhbnNmb3JtRHJhZ2dlZEVsZW1lbnQgPSBvcHRpb25zLnRyYW5zZm9ybURyYWdnZWRFbGVtZW50LFxuICAgICAgYXV0b0FyaWFEaXNhYmxlZCA9IG9wdGlvbnMuYXV0b0FyaWFEaXNhYmxlZCxcbiAgICAgIGNlbnRyZURyYWdnZWRPbkN1cnNvciA9IG9wdGlvbnMuY2VudHJlRHJhZ2dlZE9uQ3Vyc29yLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvcHRpb25zLCBbXCJpdGVtc1wiLCBcImZsaXBEdXJhdGlvbk1zXCIsIFwidHlwZVwiLCBcImRyYWdEaXNhYmxlZFwiLCBcIm1vcnBoRGlzYWJsZWRcIiwgXCJkcm9wRnJvbU90aGVyc0Rpc2FibGVkXCIsIFwiem9uZVRhYkluZGV4XCIsIFwiZHJvcFRhcmdldFN0eWxlXCIsIFwiZHJvcFRhcmdldENsYXNzZXNcIiwgXCJ0cmFuc2Zvcm1EcmFnZ2VkRWxlbWVudFwiLCBcImF1dG9BcmlhRGlzYWJsZWRcIiwgXCJjZW50cmVEcmFnZ2VkT25DdXJzb3JcIl0pO1xuICAvKmVzbGludC1lbmFibGUqL1xuXG5cbiAgaWYgKE9iamVjdC5rZXlzKHJlc3QpLmxlbmd0aCA+IDApIHtcbiAgICBjb25zb2xlLndhcm4oXCJkbmR6b25lIHdpbGwgaWdub3JlIHVua25vd24gb3B0aW9uc1wiLCByZXN0KTtcbiAgfVxuXG4gIGlmICghaXRlbXMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJubyAnaXRlbXMnIGtleSBwcm92aWRlZCB0byBkbmR6b25lXCIpO1xuICB9XG5cbiAgdmFyIGl0ZW1XaXRoTWlzc2luZ0lkID0gaXRlbXMuZmluZChmdW5jdGlvbiAoaXRlbSkge1xuICAgIHJldHVybiAhe30uaGFzT3duUHJvcGVydHkuY2FsbChpdGVtLCBJVEVNX0lEX0tFWSk7XG4gIH0pO1xuXG4gIGlmIChpdGVtV2l0aE1pc3NpbmdJZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIm1pc3NpbmcgJ1wiLmNvbmNhdChJVEVNX0lEX0tFWSwgXCInIHByb3BlcnR5IGZvciBpdGVtIFwiKS5jb25jYXQodG9TdHJpbmcoaXRlbVdpdGhNaXNzaW5nSWQpKSk7XG4gIH1cblxuICBpZiAoZHJvcFRhcmdldENsYXNzZXMgJiYgIUFycmF5LmlzQXJyYXkoZHJvcFRhcmdldENsYXNzZXMpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZHJvcFRhcmdldENsYXNzZXMgc2hvdWxkIGJlIGFuIGFycmF5IGJ1dCBpbnN0ZWFkIGl0IGlzIGEgXCIuY29uY2F0KF90eXBlb2YoZHJvcFRhcmdldENsYXNzZXMpLCBcIiwgXCIpLmNvbmNhdCh0b1N0cmluZyhkcm9wVGFyZ2V0Q2xhc3NlcykpKTtcbiAgfVxuXG4gIGlmICh6b25lVGFiSW5kZXggJiYgIWlzSW50KHpvbmVUYWJJbmRleCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ6b25lVGFiSW5kZXggc2hvdWxkIGJlIGEgbnVtYmVyIGJ1dCBpbnN0ZWFkIGl0IGlzIGEgXCIuY29uY2F0KF90eXBlb2Yoem9uZVRhYkluZGV4KSwgXCIsIFwiKS5jb25jYXQodG9TdHJpbmcoem9uZVRhYkluZGV4KSkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGlzSW50KHZhbHVlKSB7XG4gIHJldHVybiAhaXNOYU4odmFsdWUpICYmIGZ1bmN0aW9uICh4KSB7XG4gICAgcmV0dXJuICh4IHwgMCkgPT09IHg7XG4gIH0ocGFyc2VGbG9hdCh2YWx1ZSkpO1xufVxuXG5leHBvcnQgeyBEUkFHR0VEX0VMRU1FTlRfSUQsIFNIQURPV19JVEVNX01BUktFUl9QUk9QRVJUWV9OQU1FLCBTSEFET1dfUExBQ0VIT0xERVJfSVRFTV9JRCwgU09VUkNFUywgVFJJR0dFUlMsIGFsZXJ0VG9TY3JlZW5SZWFkZXIsIGRuZHpvbmUkMiBhcyBkbmR6b25lLCBvdmVycmlkZUl0ZW1JZEtleU5hbWVCZWZvcmVJbml0aWFsaXNpbmdEbmRab25lcywgc2V0RGVidWdNb2RlIH07XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tIFwic3ZlbHRlXCI7XG4gICAgaW1wb3J0IHsgZmxpcCB9IGZyb20gXCJzdmVsdGUvYW5pbWF0ZVwiO1xuICAgIGltcG9ydCB7IGRuZHpvbmUsIFNPVVJDRVMsIFRSSUdHRVJTIH0gZnJvbSBcInN2ZWx0ZS1kbmQtYWN0aW9uXCI7XG4gICAgaW1wb3J0IHsgRXh0cmFCdXR0b25Db21wb25lbnQsIHNldEljb24sIFRleHRDb21wb25lbnQgfSBmcm9tIFwib2JzaWRpYW5cIjtcbiAgICBpbXBvcnQgdHlwZSB7IENhbGVuZGFyLCBEYXkgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuXG4gICAgaW1wb3J0IHsgbmFub2lkIH0gZnJvbSBcInNyYy91dGlscy9mdW5jdGlvbnNcIjtcblxuICAgIGltcG9ydCBUb2dnbGVDb21wb25lbnQgZnJvbSBcIi4uL1NldHRpbmdzL1RvZ2dsZUNvbXBvbmVudC5zdmVsdGVcIjtcbiAgICBpbXBvcnQgQWRkTmV3IGZyb20gXCIuLi9VdGlsaXRpZXMvQWRkTmV3LnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBOb0V4aXN0aW5nSXRlbXMgZnJvbSBcIi4uL1V0aWxpdGllcy9Ob0V4aXN0aW5nSXRlbXMuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IERldGFpbHMgZnJvbSBcIi4uL1V0aWxpdGllcy9EZXRhaWxzLnN2ZWx0ZVwiO1xuXG4gICAgY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcbiAgICBleHBvcnQgbGV0IGNhbGVuZGFyOiBDYWxlbmRhcjtcblxuICAgICQ6IHdlZWtkYXlzID0gY2FsZW5kYXIuc3RhdGljLndlZWtkYXlzO1xuICAgIGxldCBmaXJzdFdlZWtkYXkgPSBjYWxlbmRhci5zdGF0aWMuZmlyc3RXZWVrRGF5O1xuICAgICQ6IHtcbiAgICAgICAgZmlyc3RXZWVrZGF5ID0gY2FsZW5kYXIuc3RhdGljLmZpcnN0V2Vla0RheTtcbiAgICB9XG4gICAgJDogb3ZlcmZsb3cgPSBjYWxlbmRhci5zdGF0aWMub3ZlcmZsb3c7XG5cbiAgICAkOiB7XG4gICAgICAgIGRpc3BhdGNoKFwid2Vla2RheS11cGRhdGVcIiwgd2Vla2RheXMpO1xuICAgIH1cblxuICAgICQ6IHtcbiAgICAgICAgZGlzcGF0Y2goXCJmaXJzdC13ZWVrZGF5LXVwZGF0ZVwiLCBmaXJzdFdlZWtkYXkpO1xuICAgIH1cblxuICAgICQ6IHtcbiAgICAgICAgZGlzcGF0Y2goXCJvdmVyZmxvdy11cGRhdGVcIiwgb3ZlcmZsb3cpO1xuICAgIH1cbiAgICBjb25zdCBncmlwID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIHNldEljb24obm9kZSwgXCJmYW50YXN5LWNhbGVuZGFyLWdyaXBcIik7XG4gICAgfTtcblxuICAgIGNvbnN0IHRyYXNoID0gKG5vZGU6IEhUTUxFbGVtZW50LCBpdGVtOiBEYXkpID0+IHtcbiAgICAgICAgbmV3IEV4dHJhQnV0dG9uQ29tcG9uZW50KG5vZGUpXG4gICAgICAgICAgICAuc2V0SWNvbihcInRyYXNoXCIpXG4gICAgICAgICAgICAub25DbGljayhcbiAgICAgICAgICAgICAgICAoKSA9PiAod2Vla2RheXMgPSB3ZWVrZGF5cy5maWx0ZXIoKGRheSkgPT4gZGF5LmlkICE9PSBpdGVtLmlkKSlcbiAgICAgICAgICAgICk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBzdGFydERyYWcoZTogRXZlbnQpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBkcmFnRGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgZmxpcER1cmF0aW9uTXMgPSAzMDA7XG4gICAgbGV0IGRyYWdEaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgZnVuY3Rpb24gaGFuZGxlQ29uc2lkZXIoZTogQ3VzdG9tRXZlbnQ8R2VuZXJpY0RuZEV2ZW50PERheT4+KSB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGl0ZW1zOiBuZXdJdGVtcyxcbiAgICAgICAgICAgIGluZm86IHsgc291cmNlLCB0cmlnZ2VyIH1cbiAgICAgICAgfSA9IGUuZGV0YWlsO1xuICAgICAgICB3ZWVrZGF5cyA9IG5ld0l0ZW1zO1xuICAgICAgICAvLyBFbnN1cmUgZHJhZ2dpbmcgaXMgc3RvcHBlZCBvbiBkcmFnIGZpbmlzaCB2aWEga2V5Ym9hcmRcbiAgICAgICAgaWYgKHNvdXJjZSA9PT0gU09VUkNFUy5LRVlCT0FSRCAmJiB0cmlnZ2VyID09PSBUUklHR0VSUy5EUkFHX1NUT1BQRUQpIHtcbiAgICAgICAgICAgIGRyYWdEaXNhYmxlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gaGFuZGxlRmluYWxpemUoZTogQ3VzdG9tRXZlbnQ8R2VuZXJpY0RuZEV2ZW50PERheT4+KSB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGl0ZW1zOiBuZXdJdGVtcyxcbiAgICAgICAgICAgIGluZm86IHsgc291cmNlIH1cbiAgICAgICAgfSA9IGUuZGV0YWlsO1xuICAgICAgICB3ZWVrZGF5cyA9IG5ld0l0ZW1zO1xuICAgICAgICAvLyBFbnN1cmUgZHJhZ2dpbmcgaXMgc3RvcHBlZCBvbiBkcmFnIGZpbmlzaCB2aWEgcG9pbnRlciAobW91c2UsIHRvdWNoKVxuICAgICAgICBpZiAoc291cmNlID09PSBTT1VSQ0VTLlBPSU5URVIpIHtcbiAgICAgICAgICAgIGRyYWdEaXNhYmxlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBuYW1lID0gKG5vZGU6IEhUTUxFbGVtZW50LCBpdGVtOiBEYXkpID0+IHtcbiAgICAgICAgbmV3IFRleHRDb21wb25lbnQobm9kZSlcbiAgICAgICAgICAgIC5zZXRWYWx1ZShpdGVtLm5hbWUpXG4gICAgICAgICAgICAuc2V0UGxhY2Vob2xkZXIoXCJOYW1lXCIpXG4gICAgICAgICAgICAub25DaGFuZ2UoKHYpID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtLm5hbWUgPSB2O1xuICAgICAgICAgICAgICAgIGRpc3BhdGNoKFwid2Vla2RheS11cGRhdGVcIiwgd2Vla2RheXMpO1xuICAgICAgICAgICAgICAgIHdlZWtkYXlzID0gd2Vla2RheXM7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmlucHV0RWwuc2V0QXR0cihcInN0eWxlXCIsIFwid2lkdGg6IDEwMCU7XCIpO1xuICAgIH07XG48L3NjcmlwdD5cblxuPERldGFpbHNcbiAgICBuYW1lPXtcIldlZWtkYXlzXCJ9XG4gICAgd2Fybj17IXdlZWtkYXlzPy5sZW5ndGh9XG4gICAgbGFiZWw9e1wiQXQgbGVhc3Qgb25lIHdlZWtkYXkgaXMgcmVxdWlyZWRcIn1cbj5cbiAgICA8VG9nZ2xlQ29tcG9uZW50XG4gICAgICAgIG5hbWU9e1wiT3ZlcmZsb3cgV2Vla3NcIn1cbiAgICAgICAgZGVzYz17XCJUdXJuIHRoaXMgb2ZmIHRvIG1ha2UgZWFjaCBtb250aCBzdGFydCBvbiB0aGUgZmlyc3Qgb2YgdGhlIHdlZWsuXCJ9XG4gICAgICAgIHZhbHVlPXtjYWxlbmRhci5zdGF0aWMub3ZlcmZsb3d9XG4gICAgICAgIG9uOmNsaWNrPXsoKSA9PiAoY2FsZW5kYXIuc3RhdGljLm92ZXJmbG93ID0gIWNhbGVuZGFyLnN0YXRpYy5vdmVyZmxvdyl9XG4gICAgLz5cblxuICAgIDxBZGROZXdcbiAgICAgICAgb246Y2xpY2s9eygpID0+XG4gICAgICAgICAgICAoY2FsZW5kYXIuc3RhdGljLndlZWtkYXlzID0gW1xuICAgICAgICAgICAgICAgIC4uLndlZWtkYXlzLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXlcIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IG5hbm9pZCg2KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0pfVxuICAgIC8+XG5cbiAgICB7I2lmICF3ZWVrZGF5cy5sZW5ndGh9XG4gICAgICAgIDxOb0V4aXN0aW5nSXRlbXMgbWVzc2FnZT17XCJDcmVhdGUgYSBuZXcgd2Vla2RheSB0byBzZWUgaXQgaGVyZS5cIn0gLz5cbiAgICB7OmVsc2V9XG4gICAgICAgIDxkaXZcbiAgICAgICAgICAgIHVzZTpkbmR6b25lPXt7IGl0ZW1zOiB3ZWVrZGF5cywgZmxpcER1cmF0aW9uTXMsIGRyYWdEaXNhYmxlZCB9fVxuICAgICAgICAgICAgY2xhc3M9XCJleGlzdGluZy1pdGVtc1wiXG4gICAgICAgICAgICBvbjpjb25zaWRlcj17aGFuZGxlQ29uc2lkZXJ9XG4gICAgICAgICAgICBvbjpmaW5hbGl6ZT17aGFuZGxlRmluYWxpemV9XG4gICAgICAgID5cbiAgICAgICAgICAgIHsjZWFjaCB3ZWVrZGF5cyBhcyBpdGVtIChpdGVtLmlkKX1cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGU6ZmxpcD17eyBkdXJhdGlvbjogZmxpcER1cmF0aW9uTXMgfX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJ3ZWVrZGF5XCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaWNvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2U6Z3JpcFxuICAgICAgICAgICAgICAgICAgICAgICAgb246bW91c2Vkb3duPXtzdGFydERyYWd9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbjp0b3VjaHN0YXJ0PXtzdGFydERyYWd9XG4gICAgICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiB1c2U6bmFtZT17aXRlbX0gLz5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaWNvblwiIHVzZTp0cmFzaD17aXRlbX0gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgPC9kaXY+XG4gICAgey9pZn1cblxuICAgIDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW1cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1pbmZvXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLW5hbWVcIj5GaXJzdCBEYXk8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICAgICAgICBUaGUgZGF5IG9mIHRoZSB3ZWVrIHRoZSBmaXJzdCB5ZWFyIHN0YXJ0cyBvbi5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1jb250cm9sXCI+XG4gICAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICAgICAgY2xhc3M9XCJkcm9wZG93blwiXG4gICAgICAgICAgICAgICAgYXJpYS1sYWJlbD17d2Vla2RheXMuZmlsdGVyKCh2KSA9PiB2Lm5hbWU/Lmxlbmd0aCkubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgID8gbnVsbFxuICAgICAgICAgICAgICAgICAgICA6IFwiTmFtZWQgV2Vla2RheSBSZXF1aXJlZFwifVxuICAgICAgICAgICAgICAgIGJpbmQ6dmFsdWU9e2NhbGVuZGFyLnN0YXRpYy5maXJzdFdlZWtEYXl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPG9wdGlvbiBzZWxlY3RlZCBoaWRkZW4gZGlzYWJsZWQ+U2VsZWN0IGEgV2Vla2RheTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIHsjZWFjaCB3ZWVrZGF5cy5maWx0ZXIoKHYpID0+IHYubmFtZT8ubGVuZ3RoKSBhcyB3ZWVrZGF5LCBpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiBkaXNhYmxlZD17IW92ZXJmbG93fSB2YWx1ZT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICAgICAge3dlZWtkYXkubmFtZSA/PyBcIlwifVxuICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICAgICB7L2VhY2h9XG4gICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L0RldGFpbHM+XG5cbjxzdHlsZT5cbiAgICAuZXhpc3RpbmctaXRlbXMge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAud2Vla2RheSB7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byAxZnIgYXV0bztcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBnYXA6IDFyZW07XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC53ZWVrZGF5IC5pY29uIHtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLndlZWtkYXkge1xuICAgICAgICBtYXJnaW4tdG9wOiAwLjVyZW07XG4gICAgfVxuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuICAgIGltcG9ydCB7IEJ1dHRvbkNvbXBvbmVudCB9IGZyb20gXCJvYnNpZGlhblwiO1xuXG4gICAgZXhwb3J0IGxldCBkaXNhYmxlZCA9IGZhbHNlO1xuICAgICQ6IHtcbiAgICAgICAgaWYgKGJ1dHRvbikge1xuICAgICAgICAgICAgYnV0dG9uLnNldERpc2FibGVkKGRpc2FibGVkKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBleHBvcnQgbGV0IGxhYmVsOiBzdHJpbmcgPSBcIkFkZCBOZXdcIjtcblxuICAgIGxldCBidXR0b246IEJ1dHRvbkNvbXBvbmVudDtcbiAgICBjb25zdCBhZGQgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgYnV0dG9uID0gbmV3IEJ1dHRvbkNvbXBvbmVudChub2RlKVxuICAgICAgICAgICAgLnNldEJ1dHRvblRleHQoXCIrXCIpXG4gICAgICAgICAgICAuc2V0RGlzYWJsZWQoZGlzYWJsZWQpO1xuICAgIH07XG48L3NjcmlwdD5cblxuPGRpdlxuICAgIGNsYXNzOmRpc2FibGVkXG4gICAgY2xhc3M9XCJhZGQtbmV3IHNldHRpbmctaXRlbVwiXG4gICAgdXNlOmFkZFxuICAgIG9uOmNsaWNrXG4gICAgYXJpYS1sYWJlbD17bGFiZWx9XG4vPlxuXG48c3R5bGU+XG4gICAgLmFkZC1uZXcsXG4gICAgLmFkZC1uZXcgOmdsb2JhbChidXR0b24pIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICAgIC5kaXNhYmxlZCA6Z2xvYmFsKGJ1dHRvbikge1xuICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIH1cbjwvc3R5bGU+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBleHBvcnQgbGV0IG1lc3NhZ2U6IHN0cmluZztcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwibm8tZXhpc3RpbmctaXRlbXMgc2V0dGluZy1pdGVtXCI+XG4gICAgPHNwYW4+e21lc3NhZ2V9PC9zcGFuPlxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAubm8tZXhpc3RpbmctaXRlbXMgc3BhbiB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGNvbG9yOiB2YXIoLS10ZXh0LWZhaW50KTtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyLCBnZXRDb250ZXh0IH0gZnJvbSBcInN2ZWx0ZVwiO1xuICAgIGltcG9ydCB7IGZsaXAgfSBmcm9tIFwic3ZlbHRlL2FuaW1hdGVcIjtcbiAgICBpbXBvcnQgeyBkbmR6b25lLCBTT1VSQ0VTLCBUUklHR0VSUyB9IGZyb20gXCJzdmVsdGUtZG5kLWFjdGlvblwiO1xuICAgIGltcG9ydCB7IEJ1dHRvbkNvbXBvbmVudCwgc2V0SWNvbiB9IGZyb20gXCJvYnNpZGlhblwiO1xuICAgIGltcG9ydCB0eXBlIHsgQ2FsZW5kYXIsIE1vbnRoIH0gZnJvbSBcInNyYy9AdHlwZXNcIjtcblxuICAgIGltcG9ydCBNb250aEluc3RhbmNlIGZyb20gXCIuL01vbnRoSW5zdGFuY2Uuc3ZlbHRlXCI7XG5cbiAgICBpbXBvcnQgeyBuYW5vaWQgfSBmcm9tIFwic3JjL3V0aWxzL2Z1bmN0aW9uc1wiO1xuICAgIGltcG9ydCBBZGROZXcgZnJvbSBcIi4uL1V0aWxpdGllcy9BZGROZXcuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IE5vRXhpc3RpbmdJdGVtcyBmcm9tIFwiLi4vVXRpbGl0aWVzL05vRXhpc3RpbmdJdGVtcy5zdmVsdGVcIjtcbiAgICBpbXBvcnQgeyBXcml0YWJsZSB9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcbiAgICBpbXBvcnQgRGV0YWlscyBmcm9tIFwiLi4vVXRpbGl0aWVzL0RldGFpbHMuc3ZlbHRlXCI7XG5cbiAgICBsZXQgY2FsZW5kYXI6IENhbGVuZGFyO1xuXG4gICAgY29uc3Qgc3RvcmUgPSBnZXRDb250ZXh0PFdyaXRhYmxlPENhbGVuZGFyPj4oXCJzdG9yZVwiKTtcbiAgICBzdG9yZS5zdWJzY3JpYmUoKHYpID0+IChjYWxlbmRhciA9IHYpKTtcblxuICAgICQ6IG1vbnRocyA9IGNhbGVuZGFyLnN0YXRpYy5tb250aHM7XG5cbiAgICBjb25zdCBkZWxldGVNb250aCA9IChtb250aDogTW9udGgpID0+IHtcbiAgICAgICAgbW9udGhzID0gbW9udGhzLmZpbHRlcigobSkgPT4gbS5pZCAhPSBtb250aC5pZCk7XG5cbiAgICAgICAgc3RvcmUuc2V0KGNhbGVuZGFyKTtcbiAgICB9O1xuICAgIGNvbnN0IGdyaXAgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgc2V0SWNvbihub2RlLCBcImZhbnRhc3ktY2FsZW5kYXItZ3JpcFwiKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gc3RhcnREcmFnKGU6IEV2ZW50KSB7XG4gICAgICAgIC8vIHByZXZlbnRpbmcgZGVmYXVsdCB0byBwcmV2ZW50IGxhZyBvbiB0b3VjaCBkZXZpY2VzIChiZWNhdXNlIG9mIHRoZSBicm93c2VyIGNoZWNraW5nIGZvciBzY3JlZW4gc2Nyb2xsaW5nKVxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGRyYWdEaXNhYmxlZCA9IGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBmbGlwRHVyYXRpb25NcyA9IDMwMDtcbiAgICBsZXQgZHJhZ0Rpc2FibGVkID0gZmFsc2U7XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVDb25zaWRlcihlOiBDdXN0b21FdmVudDxHZW5lcmljRG5kRXZlbnQ8TW9udGg+Pikge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBpdGVtczogbmV3SXRlbXMsXG4gICAgICAgICAgICBpbmZvOiB7IHNvdXJjZSwgdHJpZ2dlciB9XG4gICAgICAgIH0gPSBlLmRldGFpbDtcbiAgICAgICAgbW9udGhzID0gbmV3SXRlbXM7XG4gICAgICAgIC8vIEVuc3VyZSBkcmFnZ2luZyBpcyBzdG9wcGVkIG9uIGRyYWcgZmluaXNoIHZpYSBrZXlib2FyZFxuICAgICAgICBpZiAoc291cmNlID09PSBTT1VSQ0VTLktFWUJPQVJEICYmIHRyaWdnZXIgPT09IFRSSUdHRVJTLkRSQUdfU1RPUFBFRCkge1xuICAgICAgICAgICAgZHJhZ0Rpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBoYW5kbGVGaW5hbGl6ZShlOiBDdXN0b21FdmVudDxHZW5lcmljRG5kRXZlbnQ8TW9udGg+Pikge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBpdGVtczogbmV3SXRlbXMsXG4gICAgICAgICAgICBpbmZvOiB7IHNvdXJjZSB9XG4gICAgICAgIH0gPSBlLmRldGFpbDtcbiAgICAgICAgbW9udGhzID0gbmV3SXRlbXM7XG4gICAgICAgIGRpc3BhdGNoKFwibW9udGgtdXBkYXRlXCIsIG1vbnRocyk7XG4gICAgICAgIC8vIEVuc3VyZSBkcmFnZ2luZyBpcyBzdG9wcGVkIG9uIGRyYWcgZmluaXNoIHZpYSBwb2ludGVyIChtb3VzZSwgdG91Y2gpXG4gICAgICAgIGlmIChzb3VyY2UgPT09IFNPVVJDRVMuUE9JTlRFUikge1xuICAgICAgICAgICAgZHJhZ0Rpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cbiAgICBjb25zdCBhZGQgPSAoKSA9PiB7XG4gICAgICAgIGNhbGVuZGFyLnN0YXRpYy5tb250aHMgPSBbXG4gICAgICAgICAgICAuLi5tb250aHMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgICAgICAgICAgbGVuZ3RoOiBudWxsLFxuICAgICAgICAgICAgICAgIGlkOiBuYW5vaWQoNilcbiAgICAgICAgICAgIH1cbiAgICAgICAgXTtcbiAgICAgICAgc3RvcmUuc2V0KGNhbGVuZGFyKTtcbiAgICB9O1xuPC9zY3JpcHQ+XG5cbjxEZXRhaWxzIG5hbWU9e1wiTW9udGhzXCJ9IHdhcm49eyFtb250aHM/Lmxlbmd0aH0gbGFiZWw9e1wiQXQgbGVhc3Qgb25lIG1vbnRoIGlzIHJlcXVpcmVkXCJ9PlxuICAgIDxBZGROZXcgb246Y2xpY2s9eygpID0+IGFkZCgpfSAvPlxuXG4gICAgeyNpZiAhbW9udGhzLmxlbmd0aH1cbiAgICAgICAgPE5vRXhpc3RpbmdJdGVtcyBtZXNzYWdlPXtcIkNyZWF0ZSBhIG5ldyBtb250aCB0byBzZWUgaXQgaGVyZS5cIn0gLz5cbiAgICB7OmVsc2V9XG4gICAgICAgIDxkaXZcbiAgICAgICAgICAgIHVzZTpkbmR6b25lPXt7IGl0ZW1zOiBtb250aHMsIGZsaXBEdXJhdGlvbk1zLCBkcmFnRGlzYWJsZWQgfX1cbiAgICAgICAgICAgIGNsYXNzPVwiZXhpc3RpbmctaXRlbXNcIlxuICAgICAgICAgICAgb246Y29uc2lkZXI9e2hhbmRsZUNvbnNpZGVyfVxuICAgICAgICAgICAgb246ZmluYWxpemU9e2hhbmRsZUZpbmFsaXplfVxuICAgICAgICA+XG4gICAgICAgICAgICB7I2VhY2ggbW9udGhzIGFzIG1vbnRoIChtb250aC5pZCl9XG4gICAgICAgICAgICAgICAgPGRpdiBhbmltYXRlOmZsaXA9e3sgZHVyYXRpb246IGZsaXBEdXJhdGlvbk1zIH19IGNsYXNzPVwibW9udGhcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJpY29uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZTpncmlwXG4gICAgICAgICAgICAgICAgICAgICAgICBvbjptb3VzZWRvd249e3N0YXJ0RHJhZ31cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uOnRvdWNoc3RhcnQ9e3N0YXJ0RHJhZ31cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPE1vbnRoSW5zdGFuY2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHttb250aH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uOm1vdXNlZG93bj17c3RhcnREcmFnfVxuICAgICAgICAgICAgICAgICAgICAgICAgb246bW9udGgtZGVsZXRlPXsoKSA9PiBkZWxldGVNb250aChtb250aCl9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbjptb250aC11cGRhdGU9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9yZS5zZXQoY2FsZW5kYXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgPC9kaXY+XG4gICAgey9pZn1cbjwvRGV0YWlscz5cblxuPHN0eWxlPlxuICAgIC5tb250aCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi10b3A6IDAuNXJlbTtcbiAgICAgICAgZ2FwOiAxcmVtO1xuICAgIH1cbjwvc3R5bGU+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBpbXBvcnQgeyBkZWJvdW5jZSwgRXh0cmFCdXR0b25Db21wb25lbnQgfSBmcm9tIFwib2JzaWRpYW5cIjtcbiAgICBpbXBvcnQgdHlwZSB7IE1vbnRoIH0gZnJvbSBcInNyYy9AdHlwZXNcIjtcbiAgICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tIFwic3ZlbHRlXCI7XG5cbiAgICBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG4gICAgZXhwb3J0IGxldCBtb250aDogTW9udGg7XG5cbiAgICBsZXQgbmFtZSA9IG1vbnRoLm5hbWU7XG4gICAgbGV0IHR5cGUgPSBtb250aC50eXBlO1xuICAgIGxldCBsZW5ndGggPSBtb250aC5sZW5ndGg7XG5cbiAgICBjb25zdCB0cmFzaCA9IChub2RlOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgICAgICBuZXcgRXh0cmFCdXR0b25Db21wb25lbnQobm9kZSkuc2V0SWNvbihcInRyYXNoXCIpLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgZGlzcGF0Y2goXCJtb250aC1kZWxldGVcIik7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCB1cGRhdGUgPSBkZWJvdW5jZShcbiAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgbW9udGgubmFtZSA9IG5hbWU7XG4gICAgICAgICAgICBtb250aC50eXBlID0gdHlwZTtcbiAgICAgICAgICAgIG1vbnRoLmxlbmd0aCA9IGxlbmd0aDtcbiAgICAgICAgICAgIGRpc3BhdGNoKFwibW9udGgtdXBkYXRlXCIsIG1vbnRoKTtcbiAgICAgICAgfSxcbiAgICAgICAgMzAwLFxuICAgICAgICB0cnVlXG4gICAgKTtcblxuICAgICQ6IHtcbiAgICAgICAgbW9udGgudHlwZSA9IHR5cGU7XG4gICAgfVxuPC9zY3JpcHQ+XG5cbiAgICA8ZGl2IGNsYXNzPVwibW9udGhcIj5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICBzcGVsbGNoZWNrPVwiZmFsc2VcIlxuICAgICAgICAgICAgYmluZDp2YWx1ZT17bmFtZX1cbiAgICAgICAgICAgIG9uOmlucHV0PXt1cGRhdGV9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIk5hbWVcIlxuICAgICAgICAgICAgc3R5bGU9XCJ3aWR0aDogMTAwJTtcIlxuICAgICAgICAvPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgc3BlbGxjaGVjaz1cImZhbHNlXCJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiTGVuZ3RoXCJcbiAgICAgICAgICAgIGJpbmQ6dmFsdWU9e2xlbmd0aH1cbiAgICAgICAgICAgIG9uOmlucHV0PXt1cGRhdGV9XG4gICAgICAgICAgICBzdHlsZT1cIndpZHRoOiAxMDAlO1wiXG4gICAgICAgICAgICBtaW49XCIwXCJcbiAgICAgICAgLz5cbiAgICAgICAgPHNlbGVjdCBjbGFzcz1cImRyb3Bkb3duXCIgYmluZDp2YWx1ZT17dHlwZX0gb246aW5wdXQ9e3VwZGF0ZX0+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwibW9udGhcIj5Nb250aDwvb3B0aW9uPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImludGVyY2FsYXJ5XCI+SW50ZXJjYWxhcnk8L29wdGlvbj5cbiAgICAgICAgPC9zZWxlY3Q+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cImljb25cIiB1c2U6dHJhc2ggLz5cbiAgICA8L2Rpdj5cblxuPHN0eWxlPlxuICAgIC5tb250aCB7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciBhdXRvIGF1dG87XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgZ2FwOiAxcmVtO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAubW9udGggLmljb24ge1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbjwvc3R5bGU+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIsIGdldENvbnRleHQgfSBmcm9tIFwic3ZlbHRlXCI7XG4gICAgaW1wb3J0IHsgZmxpcCB9IGZyb20gXCJzdmVsdGUvYW5pbWF0ZVwiO1xuICAgIGltcG9ydCB7IGRuZHpvbmUsIFNPVVJDRVMsIFRSSUdHRVJTIH0gZnJvbSBcInN2ZWx0ZS1kbmQtYWN0aW9uXCI7XG4gICAgaW1wb3J0IHtcbiAgICAgICAgQXBwLFxuICAgICAgICBCdXR0b25Db21wb25lbnQsXG4gICAgICAgIEV4dHJhQnV0dG9uQ29tcG9uZW50LFxuICAgICAgICBzZXRJY29uLFxuICAgICAgICBTZXR0aW5nLFxuICAgICAgICBUZXh0Q29tcG9uZW50XG4gICAgfSBmcm9tIFwib2JzaWRpYW5cIjtcbiAgICBpbXBvcnQgdHlwZSB7IENhbGVuZGFyLCBZZWFyIH0gZnJvbSBcInNyYy9AdHlwZXNcIjtcblxuICAgIGltcG9ydCB7IG5hbm9pZCB9IGZyb20gXCJzcmMvdXRpbHMvZnVuY3Rpb25zXCI7XG4gICAgaW1wb3J0IHsgY29uZmlybVdpdGhNb2RhbCB9IGZyb20gXCIuLi8uLi9tb2RhbHMvY29uZmlybVwiO1xuICAgIGltcG9ydCBUb2dnbGVDb21wb25lbnQgZnJvbSBcIi4uL1NldHRpbmdzL1RvZ2dsZUNvbXBvbmVudC5zdmVsdGVcIjtcbiAgICBpbXBvcnQgQWRkTmV3IGZyb20gXCIuLi9VdGlsaXRpZXMvQWRkTmV3LnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBOb0V4aXN0aW5nSXRlbXMgZnJvbSBcIi4uL1V0aWxpdGllcy9Ob0V4aXN0aW5nSXRlbXMuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IHR5cGUgeyBXcml0YWJsZSB9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcbiAgICBpbXBvcnQgRGV0YWlscyBmcm9tIFwiLi4vVXRpbGl0aWVzL0RldGFpbHMuc3ZlbHRlXCI7XG5cbiAgICBleHBvcnQgbGV0IGNhbGVuZGFyOiBDYWxlbmRhcjtcblxuICAgIGNvbnN0IHN0b3JlID0gZ2V0Q29udGV4dDxXcml0YWJsZTxDYWxlbmRhcj4+KFwic3RvcmVcIik7XG4gICAgc3RvcmUuc3Vic2NyaWJlKCh2KSA9PiAoY2FsZW5kYXIgPSB2KSk7XG5cbiAgICAkOiB5ZWFycyA9IGNhbGVuZGFyLnN0YXRpYy55ZWFycztcbiAgICAkOiB1c2VDdXN0b21ZZWFycyA9IGNhbGVuZGFyLnN0YXRpYy51c2VDdXN0b21ZZWFycztcblxuICAgIGNvbnN0IGdyaXAgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgc2V0SWNvbihub2RlLCBcImZhbnRhc3ktY2FsZW5kYXItZ3JpcFwiKTtcbiAgICB9O1xuXG4gICAgY29uc3QgdHJhc2ggPSAobm9kZTogSFRNTEVsZW1lbnQsIGl0ZW06IFllYXIpID0+IHtcbiAgICAgICAgbmV3IEV4dHJhQnV0dG9uQ29tcG9uZW50KG5vZGUpXG4gICAgICAgICAgICAuc2V0SWNvbihcInRyYXNoXCIpXG4gICAgICAgICAgICAub25DbGljayhcbiAgICAgICAgICAgICAgICAoKSA9PiAoeWVhcnMgPSB5ZWFycy5maWx0ZXIoKHllYXIpID0+IHllYXIuaWQgIT09IGl0ZW0uaWQpKVxuICAgICAgICAgICAgKTtcbiAgICB9O1xuXG4gICAgY29uc3QgbmFtZSA9IChub2RlOiBIVE1MRWxlbWVudCwgaXRlbTogWWVhcikgPT4ge1xuICAgICAgICBjb25zdCBjb21wID0gbmV3IFRleHRDb21wb25lbnQobm9kZSlcbiAgICAgICAgICAgIC5zZXRWYWx1ZShpdGVtLm5hbWUpXG4gICAgICAgICAgICAuc2V0UGxhY2Vob2xkZXIoXCJOYW1lXCIpXG4gICAgICAgICAgICAub25DaGFuZ2UoKHYpID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtLm5hbWUgPSB2O1xuICAgICAgICAgICAgICAgIGRpc3BhdGNoKFwieWVhcnMtdXBkYXRlXCIsIHllYXJzKTtcbiAgICAgICAgICAgICAgICB5ZWFycyA9IHllYXJzO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNvbXAuaW5wdXRFbC5zZXRBdHRyKFwic3R5bGVcIiwgXCJ3aWR0aDogMTAwJTtcIik7XG4gICAgfTtcblxuICAgIGV4cG9ydCBsZXQgYXBwOiBBcHA7XG5cbiAgICBjb25zdCBjdXN0b21EZXNjID0gY3JlYXRlRnJhZ21lbnQoKGVsKSA9PiB7XG4gICAgICAgIGVsLmNyZWF0ZVNwYW4oe1xuICAgICAgICAgICAgdGV4dDogXCJDcmVhdGUgY3VzdG9tIHllYXJzIHRvIGRpc3BsYXkgaW5zdGVhZCBvZiBpbmNyZW1lbnRpbmcgZnJvbSAxLlwiXG4gICAgICAgIH0pO1xuICAgICAgICBlbC5jcmVhdGVFbChcImJyXCIpO1xuICAgICAgICBlbC5jcmVhdGVTcGFuKHsgdGV4dDogXCJJZiBvbiwgXCIgfSk7XG4gICAgICAgIGVsLmNyZWF0ZUVsKFwic3Ryb25nXCIsIHtcbiAgICAgICAgICAgIHRleHQ6IFwib25seSB0aGUgeWVhcnMgYWRkZWQgYmVsb3cgd2lsbCBiZSBkaXNwbGF5ZWQuXCJcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBlbDtcbiAgICB9KTtcblxuICAgIGNvbnN0IGNvbmZpcm1DdXN0b20gPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGNhbGVuZGFyLnN0YXRpYy51c2VDdXN0b21ZZWFycyAmJlxuICAgICAgICAgICAgeWVhcnM/Lmxlbmd0aCAmJlxuICAgICAgICAgICAgKGF3YWl0IGNvbmZpcm1XaXRoTW9kYWwoXG4gICAgICAgICAgICAgICAgYXBwLFxuICAgICAgICAgICAgICAgIFwiVGhlIGN1c3RvbSB5ZWFycyB5b3UgaGF2ZSBjcmVhdGVkIHdpbGwgYmUgcmVtb3ZlZC4gUHJvY2VlZD9cIlxuICAgICAgICAgICAgKSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBjYWxlbmRhci5zdGF0aWMueWVhcnMgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBjYWxlbmRhci5zdGF0aWMudXNlQ3VzdG9tWWVhcnMgPSAhY2FsZW5kYXIuc3RhdGljLnVzZUN1c3RvbVllYXJzO1xuICAgICAgICBzdG9yZS5zZXQoY2FsZW5kYXIpO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBzdGFydERyYWcoZTogRXZlbnQpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBkcmFnRGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgZmxpcER1cmF0aW9uTXMgPSAzMDA7XG4gICAgbGV0IGRyYWdEaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgZnVuY3Rpb24gaGFuZGxlQ29uc2lkZXIoZTogQ3VzdG9tRXZlbnQ8R2VuZXJpY0RuZEV2ZW50PFllYXI+Pikge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBpdGVtczogbmV3SXRlbXMsXG4gICAgICAgICAgICBpbmZvOiB7IHNvdXJjZSwgdHJpZ2dlciB9XG4gICAgICAgIH0gPSBlLmRldGFpbDtcbiAgICAgICAgeWVhcnMgPSBuZXdJdGVtcztcbiAgICAgICAgLy8gRW5zdXJlIGRyYWdnaW5nIGlzIHN0b3BwZWQgb24gZHJhZyBmaW5pc2ggdmlhIGtleWJvYXJkXG4gICAgICAgIGlmIChzb3VyY2UgPT09IFNPVVJDRVMuS0VZQk9BUkQgJiYgdHJpZ2dlciA9PT0gVFJJR0dFUlMuRFJBR19TVE9QUEVEKSB7XG4gICAgICAgICAgICBkcmFnRGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGhhbmRsZUZpbmFsaXplKGU6IEN1c3RvbUV2ZW50PEdlbmVyaWNEbmRFdmVudDxZZWFyPj4pIHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgaXRlbXM6IG5ld0l0ZW1zLFxuICAgICAgICAgICAgaW5mbzogeyBzb3VyY2UgfVxuICAgICAgICB9ID0gZS5kZXRhaWw7XG4gICAgICAgIHllYXJzID0gbmV3SXRlbXM7XG4gICAgICAgIC8vIEVuc3VyZSBkcmFnZ2luZyBpcyBzdG9wcGVkIG9uIGRyYWcgZmluaXNoIHZpYSBwb2ludGVyIChtb3VzZSwgdG91Y2gpXG4gICAgICAgIGlmIChzb3VyY2UgPT09IFNPVVJDRVMuUE9JTlRFUikge1xuICAgICAgICAgICAgZHJhZ0Rpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cbiAgICAkOiB7XG4gICAgICAgIGRpc3BhdGNoKFwieWVhcnMtdXBkYXRlXCIsIHllYXJzKTtcbiAgICAgICAgLy9UT0RPOiBhZGQgbmV3IGRheXMgdG8gZHJvcGRvd24sIHJlbW92ZSByZW1vdmVkIGRheXMgZnJvbSBkcm9wZG93blxuICAgIH1cblxuICAgICQ6IHtcbiAgICAgICAgZGlzcGF0Y2goXCJ1c2UtY3VzdG9tLXVwZGF0ZVwiLCB1c2VDdXN0b21ZZWFycyk7XG4gICAgfVxuPC9zY3JpcHQ+XG5cbjxEZXRhaWxzXG4gICAgbmFtZT17XCJZZWFyc1wifVxuICAgIHdhcm49e3VzZUN1c3RvbVllYXJzICYmICF5ZWFycz8ubGVuZ3RofVxuICAgIGxhYmVsPXtcIkF0IGxlYXN0IG9uZSB5ZWFyIGlzIHJlcXVpcmVkIHdoZW4gdXNpbmcgY3VzdG9tIHllYXJzXCJ9XG4+XG4gICAgPFRvZ2dsZUNvbXBvbmVudFxuICAgICAgICBuYW1lPVwiVXNlIEN1c3RvbSBZZWFyc1wiXG4gICAgICAgIGRlc2M9e2N1c3RvbURlc2N9XG4gICAgICAgIHZhbHVlPXt1c2VDdXN0b21ZZWFyc31cbiAgICAgICAgb246Y2xpY2s9eygpID0+IGNvbmZpcm1DdXN0b20oKX1cbiAgICAvPlxuXG4gICAgeyNpZiB1c2VDdXN0b21ZZWFyc31cbiAgICAgICAgPEFkZE5ld1xuICAgICAgICAgICAgb246Y2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICBjYWxlbmRhci5zdGF0aWMueWVhcnMgPSBbXG4gICAgICAgICAgICAgICAgICAgIC4uLih5ZWFycyA/PyBbXSksXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogbmFub2lkKDYpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJ5ZWFyXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgc3RvcmUuc2V0KGNhbGVuZGFyKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgIC8+XG5cbiAgICAgICAgeyNpZiAheWVhcnMgfHwgIXllYXJzLmxlbmd0aH1cbiAgICAgICAgICAgIDxOb0V4aXN0aW5nSXRlbXMgbWVzc2FnZT17XCJDcmVhdGUgYSBuZXcgeWVhciB0byBzZWUgaXQgaGVyZS5cIn0gLz5cbiAgICAgICAgezplbHNlfVxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIHVzZTpkbmR6b25lPXt7IGl0ZW1zOiB5ZWFycywgZmxpcER1cmF0aW9uTXMsIGRyYWdEaXNhYmxlZCB9fVxuICAgICAgICAgICAgICAgIGNsYXNzPVwiZXhpc3RpbmctaXRlbXNcIlxuICAgICAgICAgICAgICAgIG9uOmNvbnNpZGVyPXtoYW5kbGVDb25zaWRlcn1cbiAgICAgICAgICAgICAgICBvbjpmaW5hbGl6ZT17aGFuZGxlRmluYWxpemV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgeyNlYWNoIHllYXJzIGFzIGl0ZW0gKGl0ZW0uaWQpfVxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICBhbmltYXRlOmZsaXA9e3sgZHVyYXRpb246IGZsaXBEdXJhdGlvbk1zIH19XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIndlZWtkYXlcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJpY29uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2U6Z3JpcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOm1vdXNlZG93bj17c3RhcnREcmFnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOnRvdWNoc3RhcnQ9e3N0YXJ0RHJhZ31cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdXNlOm5hbWU9e2l0ZW19IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpY29uXCIgdXNlOnRyYXNoPXtpdGVtfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7L2VhY2h9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgey9pZn1cbiAgICB7L2lmfVxuPC9EZXRhaWxzPlxuXG48c3R5bGU+XG4gICAgLndlZWtkYXkge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gMWZyIGF1dG87XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgZ2FwOiAxcmVtO1xuICAgIH1cblxuICAgIC53ZWVrZGF5IC5pY29uIHtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLndlZWtkYXkge1xuICAgICAgICBtYXJnaW4tdG9wOiAwLjVyZW07XG4gICAgfVxuPC9zdHlsZT5cbiIsICJpbXBvcnQgeyBBcHAsIEJ1dHRvbkNvbXBvbmVudCwgRXh0cmFCdXR0b25Db21wb25lbnQsIE1vZGFsIH0gZnJvbSBcIm9ic2lkaWFuXCI7XG5pbXBvcnQgRmFudGFzeUNhbGVuZGFyIGZyb20gXCJzcmMvbWFpblwiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29uZmlybVdpdGhNb2RhbChcbiAgICBhcHA6IEFwcCxcbiAgICB0ZXh0OiBzdHJpbmcsXG4gICAgYnV0dG9uczogeyBjdGE6IHN0cmluZzsgc2Vjb25kYXJ5OiBzdHJpbmcgfSA9IHtcbiAgICAgICAgY3RhOiBcIlllc1wiLFxuICAgICAgICBzZWNvbmRhcnk6IFwiTm9cIlxuICAgIH1cbik6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IG1vZGFsID0gbmV3IENvbmZpcm1Nb2RhbChhcHAsIHRleHQsIGJ1dHRvbnMpO1xuICAgICAgICBtb2RhbC5vbkNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZShtb2RhbC5jb25maXJtZWQpO1xuICAgICAgICB9O1xuICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgfSk7XG59XG5cbmV4cG9ydCBjbGFzcyBDb25maXJtTW9kYWwgZXh0ZW5kcyBNb2RhbCB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIGFwcDogQXBwLFxuICAgICAgICBwdWJsaWMgdGV4dDogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgYnV0dG9uczogeyBjdGE6IHN0cmluZzsgc2Vjb25kYXJ5OiBzdHJpbmcgfVxuICAgICkge1xuICAgICAgICBzdXBlcihhcHApO1xuICAgIH1cbiAgICBjb25maXJtZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBhc3luYyBkaXNwbGF5KCkge1xuICAgICAgICB0aGlzLmNvbnRlbnRFbC5lbXB0eSgpO1xuICAgICAgICB0aGlzLmNvbnRlbnRFbC5hZGRDbGFzcyhcImNvbmZpcm0tbW9kYWxcIik7XG4gICAgICAgIHRoaXMuY29udGVudEVsLmNyZWF0ZUVsKFwicFwiLCB7XG4gICAgICAgICAgICB0ZXh0OiB0aGlzLnRleHRcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGJ1dHRvbkVsID0gdGhpcy5jb250ZW50RWwuY3JlYXRlRGl2KFxuICAgICAgICAgICAgXCJmYW50YXN5LWNhbGVuZGFyLWNvbmZpcm0tYnV0dG9uc1wiXG4gICAgICAgICk7XG4gICAgICAgIG5ldyBCdXR0b25Db21wb25lbnQoYnV0dG9uRWwpXG4gICAgICAgICAgICAuc2V0QnV0dG9uVGV4dCh0aGlzLmJ1dHRvbnMuY3RhKVxuICAgICAgICAgICAgLnNldEN0YSgpXG4gICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25maXJtZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBuZXcgQnV0dG9uQ29tcG9uZW50KGJ1dHRvbkVsKVxuICAgICAgICAgICAgLnNldEJ1dHRvblRleHQodGhpcy5idXR0b25zLnNlY29uZGFyeSlcbiAgICAgICAgICAgIC5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICB9XG4gICAgb25PcGVuKCkge1xuICAgICAgICB0aGlzLmRpc3BsYXkoKTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDb25maXJtRXhpdE1vZGFsIGV4dGVuZHMgTW9kYWwge1xuICAgIGNvbmZpcm1lZDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBwbHVnaW46IEZhbnRhc3lDYWxlbmRhcikge1xuICAgICAgICBzdXBlcihwbHVnaW4uYXBwKTtcbiAgICB9XG4gICAgYXN5bmMgZGlzcGxheSgpIHtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuZW1wdHkoKTtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuYWRkQ2xhc3MoXCJjb25maXJtLW1vZGFsXCIpO1xuICAgICAgICB0aGlzLmNvbnRlbnRFbC5jcmVhdGVFbChcInBcIiwge1xuICAgICAgICAgICAgdGV4dDogXCJBZGRpdGlvbmFsIGluZm9ybWF0aW9uIGlzIHJlcXVpcmVkIHRvIHNhdmUgdGhpcyBjYWxlbmRhci4gQW55IGNoYW5nZXMgeW91IG1heSBoYXZlIG1hZGUgd2lsbCBiZSBkaXNjYXJkZWQgaWYgeW91IGV4aXQgbm93LlwiXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IGJ1dHRvbkNvbnRhaW5lckVsID0gdGhpcy5jb250ZW50RWwuY3JlYXRlRGl2KFxuICAgICAgICAgICAgXCJmYW50YXN5LWNhbGVuZGFyLWNvbmZpcm0tYnV0dG9ucy1jb250YWluZXJcIlxuICAgICAgICApO1xuICAgICAgICBidXR0b25Db250YWluZXJFbC5jcmVhdGVFbChcImFcIikuY3JlYXRlRWwoXCJzbWFsbFwiLCB7XG4gICAgICAgICAgICBjbHM6IFwiZG9udC1hc2tcIixcbiAgICAgICAgICAgIHRleHQ6IFwiRXhpdCBhbmQgZG9uJ3QgYXNrIGFnYWluXCJcbiAgICAgICAgfSkub25jbGljayA9ICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY29uZmlybWVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMucGx1Z2luLmRhdGEuZXhpdFdpdGhvdXRTYXZpbmcgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgYnV0dG9uRWwgPSBidXR0b25Db250YWluZXJFbC5jcmVhdGVEaXYoXG4gICAgICAgICAgICBcImZhbnRhc3ktY2FsZW5kYXItY29uZmlybS1idXR0b25zXCJcbiAgICAgICAgKTtcbiAgICAgICAgbmV3IEJ1dHRvbkNvbXBvbmVudChidXR0b25FbClcbiAgICAgICAgICAgIC5zZXRCdXR0b25UZXh0KFwiRXhpdFwiKVxuICAgICAgICAgICAgLnNldEN0YSgpXG4gICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25maXJtZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBidXR0b25FbC5jcmVhdGVFbChcImFcIikuY3JlYXRlRWwoXCJzbWFsbFwiLCB7XG4gICAgICAgICAgICBjbHM6IFwiZG9udC1hc2tcIixcbiAgICAgICAgICAgIHRleHQ6IFwiS2VlcCBlZGl0aW5nXCJcbiAgICAgICAgfSkub25jbGljayA9ICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucGx1Z2luLnNhdmVTZXR0aW5ncygpO1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9O1xuICAgICAgICAvKiBuZXcgRXh0cmFCdXR0b25Db21wb25lbnQoYnV0dG9uRWwpLnNldEljb24oXCJjcm9zc1wiKS5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgfSk7ICovXG4gICAgfVxuICAgIG9uT3BlbigpIHtcbiAgICAgICAgdGhpcy5kaXNwbGF5KCk7XG4gICAgfVxufVxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSBcInN2ZWx0ZVwiO1xuICAgIGltcG9ydCB0eXBlIHsgRXZlbnQsIEV2ZW50Q2F0ZWdvcnkgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuICAgIGltcG9ydCB7IEV4dHJhQnV0dG9uQ29tcG9uZW50IH0gZnJvbSBcIm9ic2lkaWFuXCI7XG4gICAgaW1wb3J0IERvdCBmcm9tIFwiLi4vVXRpbGl0aWVzL0RvdC5zdmVsdGVcIjtcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cbiAgICBjb25zdCB0cmFzaCA9IChub2RlOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgICAgICBsZXQgYiA9IG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKVxuICAgICAgICAgICAgLnNldEljb24oXCJ0cmFzaFwiKVxuICAgICAgICAgICAgLnNldFRvb2x0aXAoXCJEZWxldGVcIik7XG4gICAgICAgIGIuZXh0cmFTZXR0aW5nc0VsLnNldEF0dHIoXCJzdHlsZVwiLCBcIm1hcmdpbi1sZWZ0OiAwO1wiKTtcbiAgICB9O1xuICAgIGNvbnN0IGVkaXQgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgbmV3IEV4dHJhQnV0dG9uQ29tcG9uZW50KG5vZGUpLnNldEljb24oXCJwZW5jaWxcIikuc2V0VG9vbHRpcChcIkVkaXRcIik7XG4gICAgfTtcbiAgICBleHBvcnQgbGV0IGV2ZW50OiBFdmVudDtcbiAgICBleHBvcnQgbGV0IGNhdGVnb3J5OiBFdmVudENhdGVnb3J5O1xuICAgIGV4cG9ydCBsZXQgZGF0ZTogc3RyaW5nO1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJldmVudFwiPlxuICAgIDxkaXYgY2xhc3M9XCJldmVudC1pbmZvXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwic2V0dGluZy1pdGVtLW5hbWVcIj5cbiAgICAgICAgICAgIHsjaWYgY2F0ZWdvcnkgIT0gbnVsbH1cbiAgICAgICAgICAgICAgICA8RG90IGNvbG9yPXtjYXRlZ29yeS5jb2xvcn0gbGFiZWw9e2NhdGVnb3J5Lm5hbWV9IC8+XG4gICAgICAgICAgICB7L2lmfVxuICAgICAgICAgICAge2V2ZW50Lm5hbWV9XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVcIj5cbiAgICAgICAgICAgICAgICB7ZGF0ZX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJjbGFtcFwiPntldmVudC5kZXNjcmlwdGlvbiA/PyBcIlwifTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiaWNvbnNcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImljb25cIiB1c2U6ZWRpdCBvbjpjbGljaz17KCkgPT4gZGlzcGF0Y2goXCJlZGl0XCIpfSAvPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiaWNvblwiIHVzZTp0cmFzaCBvbjpjbGljaz17KCkgPT4gZGlzcGF0Y2goXCJkZWxldGVcIil9IC8+XG4gICAgPC9kaXY+XG48L2Rpdj5cblxuPHN0eWxlPlxuICAgIC5ldmVudCB7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIGF1dG87XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgZ2FwOiAxcmVtO1xuICAgICAgICBtYXJnaW4tdG9wOiAwLjVyZW07XG4gICAgfVxuICAgIC5ldmVudC1pbmZvIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgLmljb25zIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgICAgICAganVzdGlmeS1zZWxmOiBmbGV4LWVuZDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLmV2ZW50IC5pY29uIHtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLmRhdGUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIGdhcDogMC4yNXJlbTtcbiAgICB9XG4gICAgLmNsYW1wIHtcbiAgICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgICAgIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAgICAgd29yZC1icmVhazoga2VlcC1hbGw7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIHdpZHRoOiBjYWxjKHZhcigtLWV2ZW50LW1heC13aWR0aCkgKiAwLjc1KTtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgZXhwb3J0IGxldCBjb2xvcjogc3RyaW5nO1xuICAgIGV4cG9ydCBsZXQgbGFiZWw6IHN0cmluZztcbjwvc2NyaXB0PlxuXG48c3ZnXG4gICAgY2xhc3M9XCJkb3RcIlxuICAgIHZpZXdCb3g9XCIwIDAgNiA2XCJcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICBhcmlhLWxhYmVsPXtsYWJlbH1cbj5cbiAgICA8Y2lyY2xlIHN0cm9rZT17Y29sb3J9IGZpbGw9e2NvbG9yfSBjeD1cIjNcIiBjeT1cIjNcIiByPVwiMlwiIC8+XG48L3N2Zz5cblxuPHN0eWxlPlxuICAgIC5kb3Qge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cbiAgICAgICAgaGVpZ2h0OiAwLjg3NWVtO1xuICAgICAgICB3aWR0aDogMC44NzVlbTtcbiAgICAgICAgbWFyZ2luOiAwIDFweDtcbiAgICB9XG48L3N0eWxlPlxuIiwgImltcG9ydCB7XG4gICAgTW9kYWwsXG4gICAgQXBwLFxuICAgIFNldHRpbmcsXG4gICAgTm90aWNlLFxuICAgIFRleHRDb21wb25lbnQsXG4gICAgRHJvcGRvd25Db21wb25lbnQsXG4gICAgVGV4dEFyZWFDb21wb25lbnQsXG4gICAgVEZpbGVcbn0gZnJvbSBcIm9ic2lkaWFuXCI7XG5pbXBvcnQgdHlwZSB7IENhbGVuZGFyLCBFdmVudCB9IGZyb20gXCIuLi8uLi9AdHlwZXNcIjtcblxuaW1wb3J0IHsgZGF0ZVN0cmluZywgbmFub2lkIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2Z1bmN0aW9uc1wiO1xuXG5pbXBvcnQgUGF0aFN1Z2dlc3Rpb25Nb2RhbCBmcm9tIFwiLi4vLi4vc3VnZ2VzdGVyL3BhdGhcIjtcbmltcG9ydCB7IGNvbmZpcm1XaXRoTW9kYWwgfSBmcm9tIFwiLi9jb25maXJtXCI7XG5cbmV4cG9ydCBjbGFzcyBDcmVhdGVFdmVudE1vZGFsIGV4dGVuZHMgTW9kYWwge1xuICAgIHNhdmVkID0gZmFsc2U7XG4gICAgZXZlbnQ6IEV2ZW50ID0ge1xuICAgICAgICBuYW1lOiBudWxsLFxuICAgICAgICBkZXNjcmlwdGlvbjogbnVsbCxcbiAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgbW9udGg6IG51bGwsXG4gICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICB5ZWFyOiBudWxsXG4gICAgICAgIH0sXG4gICAgICAgIGlkOiBuYW5vaWQoNiksXG4gICAgICAgIG5vdGU6IG51bGwsXG4gICAgICAgIGNhdGVnb3J5OiBudWxsXG4gICAgfTtcbiAgICBlZGl0aW5nOiBib29sZWFuO1xuICAgIGluZm9FbDogSFRNTERpdkVsZW1lbnQ7XG4gICAgZGF0ZUVsOiBIVE1MRWxlbWVudDtcbiAgICBtb250aEVsOiBIVE1MRGl2RWxlbWVudDtcbiAgICBkYXlFbDogSFRNTERpdkVsZW1lbnQ7XG4gICAgeWVhckVsOiBIVE1MRGl2RWxlbWVudDtcbiAgICBmaWVsZHNFbDogSFRNTERpdkVsZW1lbnQ7XG4gICAgc3RyaW5nRWw6IEhUTUxEaXZFbGVtZW50O1xuICAgIHN0YXJ0RGF0ZUVsOiBIVE1MRGl2RWxlbWVudDtcbiAgICBlbmREYXRlRWw6IEhUTUxEaXZFbGVtZW50O1xuICAgIHN0YXJ0RWw6IEhUTUxEaXZFbGVtZW50O1xuICAgIGVuZEVsOiBIVE1MRGl2RWxlbWVudDtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgYXBwOiBBcHAsXG4gICAgICAgIHB1YmxpYyBjYWxlbmRhcjogQ2FsZW5kYXIsXG4gICAgICAgIGV2ZW50PzogRXZlbnQsXG4gICAgICAgIGRhdGU/OiB7IG1vbnRoOiBudW1iZXI7IGRheTogbnVtYmVyOyB5ZWFyOiBudW1iZXIgfVxuICAgICkge1xuICAgICAgICBzdXBlcihhcHApO1xuICAgICAgICBpZiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHRoaXMuZXZlbnQgPSB7IC4uLmV2ZW50IH07XG4gICAgICAgICAgICB0aGlzLmVkaXRpbmcgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRlKSB7XG4gICAgICAgICAgICB0aGlzLmV2ZW50LmRhdGUgPSB7IC4uLmRhdGUgfTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbnRhaW5lckVsLmFkZENsYXNzKFwiZmFudGFzeS1jYWxlbmRhci1jcmVhdGUtZXZlbnRcIik7XG4gICAgfVxuXG4gICAgYXN5bmMgZGlzcGxheSgpIHtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuZW1wdHkoKTtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuY3JlYXRlRWwoXCJoM1wiLCB7XG4gICAgICAgICAgICB0ZXh0OiB0aGlzLmVkaXRpbmcgPyBcIkVkaXQgRXZlbnRcIiA6IFwiTmV3IEV2ZW50XCJcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5pbmZvRWwgPSB0aGlzLmNvbnRlbnRFbC5jcmVhdGVEaXYoXCJldmVudC1pbmZvXCIpO1xuICAgICAgICB0aGlzLmJ1aWxkSW5mbygpO1xuXG4gICAgICAgIHRoaXMuZGF0ZUVsID0gdGhpcy5jb250ZW50RWwuY3JlYXRlRGl2KFwiZXZlbnQtZGF0ZVwiKTtcbiAgICAgICAgdGhpcy5idWlsZERhdGUoKTtcblxuICAgICAgICBuZXcgU2V0dGluZyh0aGlzLmNvbnRlbnRFbClcbiAgICAgICAgICAgIC5hZGRCdXR0b24oKGIpID0+IHtcbiAgICAgICAgICAgICAgICBiLnNldEJ1dHRvblRleHQoXCJTYXZlXCIpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRDdGEoKVxuICAgICAgICAgICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZXZlbnQubmFtZT8ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IE5vdGljZShcIlRoZSBldmVudCBtdXN0IGhhdmUgYSBuYW1lLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmV2ZW50LmVuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQuZW5kID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudC5lbmQueWVhciA/PyB0aGlzLmV2ZW50LmRhdGUueWVhcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9udGg6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmV2ZW50LmVuZC5tb250aCA/P1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudC5kYXRlLm1vbnRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXk6IHRoaXMuZXZlbnQuZW5kLmRheSA/PyB0aGlzLmV2ZW50LmRhdGUuZGF5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlID0gdGhpcy5ldmVudC5kYXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVuZCA9IHRoaXMuZXZlbnQuZW5kO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF4RGF5cyA9IE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi50aGlzLmNhbGVuZGFyLnN0YXRpYy5tb250aHMubWFwKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG0pID0+IG0ubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdG90YWwgZGF5cyBwZXIgeWVhciAoZG9lcyBub3QgbmVlZCB0byBiZSBhY2N1cmF0ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b3RhbERheXMgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhEYXlzICogdGhpcy5jYWxlbmRhci5zdGF0aWMubW9udGhzLmxlbmd0aDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGVOdW1iZXIgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZGF0ZS55ZWFyIC0gMSkgKiB0b3RhbERheXMgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZGF0ZS5tb250aCA/PyAtMSkgKiBtYXhEYXlzICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZS5kYXk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmROdW1iZXIgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZW5kLnllYXIgLSAxKSAqIHRvdGFsRGF5cyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChlbmQubW9udGggPz8gLTEpICogbWF4RGF5cyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZC5kYXk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0ZU51bWJlciA+IGVuZE51bWJlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZW1wID0geyAuLi50aGlzLmV2ZW50LmVuZCB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmV2ZW50LmVuZCA9IHsgLi4udGhpcy5ldmVudC5kYXRlIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQuZGF0ZSA9IHsgLi4udGVtcCB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuYWRkRXh0cmFCdXR0b24oKGIpID0+IHtcbiAgICAgICAgICAgICAgICBiLnNldEljb24oXCJjcm9zc1wiKVxuICAgICAgICAgICAgICAgICAgICAuc2V0VG9vbHRpcChcIkNhbmNlbFwiKVxuICAgICAgICAgICAgICAgICAgICAub25DbGljaygoKSA9PiB0aGlzLmNsb3NlKCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxuICAgIGJ1aWxkRGF0ZSgpIHtcbiAgICAgICAgdGhpcy5kYXRlRWwuZW1wdHkoKTtcbiAgICAgICAgdGhpcy5idWlsZFN0YXJ0RGF0ZSgpO1xuXG4gICAgICAgIHRoaXMuZW5kRWwgPSB0aGlzLmRhdGVFbC5jcmVhdGVEaXYoKTtcblxuICAgICAgICBpZiAoIXRoaXMuZXZlbnQuZW5kKSB7XG4gICAgICAgICAgICBuZXcgU2V0dGluZyh0aGlzLmVuZEVsKS5zZXROYW1lKFwiQWRkIEVuZCBEYXRlXCIpLmFkZFRvZ2dsZSgodCkgPT4ge1xuICAgICAgICAgICAgICAgIHQuc2V0VmFsdWUoZmFsc2UpLm9uQ2hhbmdlKCh2KSA9PiB0aGlzLmJ1aWxkRW5kRGF0ZSgpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5idWlsZEVuZERhdGUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qIHRoaXMuYnVpbGREYXRlRmllbGRzKHRoaXMuZW5kRGF0ZUVsKTsgKi9cblxuICAgICAgICB0aGlzLnN0cmluZ0VsID0gdGhpcy5kYXRlRWwuY3JlYXRlRGl2KFxuICAgICAgICAgICAgXCJldmVudC1kYXRlLXN0cmluZyBzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb25cIlxuICAgICAgICApO1xuICAgICAgICB0aGlzLmJ1aWxkRGF0ZVN0cmluZygpO1xuICAgIH1cbiAgICBidWlsZFN0YXJ0RGF0ZSgpIHtcbiAgICAgICAgdGhpcy5zdGFydEVsID0gdGhpcy5kYXRlRWwuY3JlYXRlRGl2KFwiZmFudGFzeS1jYWxlbmRhci1ldmVudC1kYXRlXCIpO1xuICAgICAgICB0aGlzLnN0YXJ0RWwuY3JlYXRlU3Bhbih7IHRleHQ6IFwiU3RhcnQ6XCIgfSk7XG4gICAgICAgIHRoaXMuc3RhcnREYXRlRWwgPSB0aGlzLnN0YXJ0RWwuY3JlYXRlRGl2KFxuICAgICAgICAgICAgXCJmYW50YXN5LWNhbGVuZGFyLWRhdGUtZmllbGRzXCJcbiAgICAgICAgKTtcblxuICAgICAgICB0aGlzLmJ1aWxkRGF0ZUZpZWxkcyh0aGlzLnN0YXJ0RGF0ZUVsLCB0aGlzLmV2ZW50LmRhdGUpO1xuICAgIH1cbiAgICBidWlsZEVuZERhdGUoKSB7XG4gICAgICAgIHRoaXMuZXZlbnQuZW5kID0gdGhpcy5ldmVudC5lbmQgPz8geyAuLi50aGlzLmV2ZW50LmRhdGUgfTtcbiAgICAgICAgdGhpcy5lbmRFbC5lbXB0eSgpO1xuICAgICAgICB0aGlzLmVuZEVsLmFkZENsYXNzKFwiZmFudGFzeS1jYWxlbmRhci1ldmVudC1kYXRlXCIpO1xuICAgICAgICB0aGlzLmVuZEVsLmNyZWF0ZVNwYW4oeyB0ZXh0OiBcIkVuZDpcIiB9KTtcbiAgICAgICAgdGhpcy5lbmREYXRlRWwgPSB0aGlzLmVuZEVsLmNyZWF0ZURpdihcImZhbnRhc3ktY2FsZW5kYXItZGF0ZS1maWVsZHNcIik7XG5cbiAgICAgICAgdGhpcy5idWlsZERhdGVGaWVsZHModGhpcy5lbmREYXRlRWwsIHRoaXMuZXZlbnQuZW5kKTtcbiAgICB9XG4gICAgYnVpbGREYXRlU3RyaW5nKCkge1xuICAgICAgICB0aGlzLnN0cmluZ0VsLmVtcHR5KCk7XG4gICAgICAgIHRoaXMuc3RyaW5nRWwuY3JlYXRlU3Bhbih7XG4gICAgICAgICAgICB0ZXh0OiBkYXRlU3RyaW5nKFxuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQuZGF0ZSxcbiAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLnN0YXRpYy5tb250aHMsXG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudC5lbmRcbiAgICAgICAgICAgIClcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGJ1aWxkRGF0ZUZpZWxkcyhlbDogSFRNTEVsZW1lbnQsIGZpZWxkID0gdGhpcy5ldmVudC5kYXRlKSB7XG4gICAgICAgIGVsLmVtcHR5KCk7XG4gICAgICAgIGNvbnN0IGRheUVsID0gZWwuY3JlYXRlRGl2KFwiZmFudGFzeS1jYWxlbmRhci1kYXRlLWZpZWxkXCIpO1xuICAgICAgICBkYXlFbC5jcmVhdGVFbChcImxhYmVsXCIsIHsgdGV4dDogXCJEYXlcIiB9KTtcbiAgICAgICAgY29uc3QgZGF5ID0gbmV3IFRleHRDb21wb25lbnQoZGF5RWwpXG4gICAgICAgICAgICAuc2V0UGxhY2Vob2xkZXIoXCJEYXlcIilcbiAgICAgICAgICAgIC5zZXRWYWx1ZShgJHtmaWVsZC5kYXl9YClcbiAgICAgICAgICAgIC5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgIGZpZWxkLmRheSA9IE51bWJlcih2KTtcbiAgICAgICAgICAgICAgICB0aGlzLmJ1aWxkRGF0ZVN0cmluZygpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIGRheS5pbnB1dEVsLnNldEF0dHIoXCJ0eXBlXCIsIFwibnVtYmVyXCIpO1xuXG4gICAgICAgIGNvbnN0IG1vbnRoRWwgPSBlbC5jcmVhdGVEaXYoXCJmYW50YXN5LWNhbGVuZGFyLWRhdGUtZmllbGRcIik7XG4gICAgICAgIG1vbnRoRWwuY3JlYXRlRWwoXCJsYWJlbFwiLCB7IHRleHQ6IFwiTW9udGhcIiB9KTtcbiAgICAgICAgbmV3IERyb3Bkb3duQ29tcG9uZW50KG1vbnRoRWwpXG4gICAgICAgICAgICAuYWRkT3B0aW9ucyhcbiAgICAgICAgICAgICAgICBPYmplY3QuZnJvbUVudHJpZXMoW1xuICAgICAgICAgICAgICAgICAgICBbXCJzZWxlY3RcIiwgXCJTZWxlY3QgTW9udGhcIl0sXG4gICAgICAgICAgICAgICAgICAgIC4uLnRoaXMuY2FsZW5kYXIuc3RhdGljLm1vbnRocy5tYXAoKG1vbnRoKSA9PiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBtb250aC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGgubmFtZVxuICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuc2V0VmFsdWUoXG4gICAgICAgICAgICAgICAgZmllbGQubW9udGggIT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gdGhpcy5jYWxlbmRhci5zdGF0aWMubW9udGhzW2ZpZWxkLm1vbnRoXS5uYW1lXG4gICAgICAgICAgICAgICAgICAgIDogXCJzZWxlY3RcIlxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHYgPT09IFwic2VsZWN0XCIpIGZpZWxkLm1vbnRoID0gbnVsbDtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuY2FsZW5kYXIuc3RhdGljLm1vbnRocy5maW5kKFxuICAgICAgICAgICAgICAgICAgICAobSkgPT4gbS5uYW1lID09IHZcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGZpZWxkLm1vbnRoID0gdGhpcy5jYWxlbmRhci5zdGF0aWMubW9udGhzLmluZGV4T2YoaW5kZXgpO1xuICAgICAgICAgICAgICAgIHRoaXMuYnVpbGREYXRlU3RyaW5nKCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCB5ZWFyRWwgPSBlbC5jcmVhdGVEaXYoXCJmYW50YXN5LWNhbGVuZGFyLWRhdGUtZmllbGRcIik7XG4gICAgICAgIHllYXJFbC5jcmVhdGVFbChcImxhYmVsXCIsIHsgdGV4dDogXCJZZWFyXCIgfSk7XG4gICAgICAgIGNvbnN0IHllYXIgPSBuZXcgVGV4dENvbXBvbmVudCh5ZWFyRWwpXG4gICAgICAgICAgICAuc2V0UGxhY2Vob2xkZXIoXCJZZWFyXCIpXG4gICAgICAgICAgICAuc2V0VmFsdWUoYCR7ZmllbGQueWVhcn1gKVxuICAgICAgICAgICAgLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCF2IHx8IHYgPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkLnllYXIgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGQueWVhciA9IE51bWJlcih2KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5idWlsZERhdGVTdHJpbmcoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB5ZWFyLmlucHV0RWwuc2V0QXR0cihcInR5cGVcIiwgXCJudW1iZXJcIik7XG4gICAgfVxuICAgIGJ1aWxkSW5mbygpIHtcbiAgICAgICAgdGhpcy5pbmZvRWwuZW1wdHkoKTtcbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5pbmZvRWwpXG4gICAgICAgICAgICAuc2V0TmFtZShcIk5vdGVcIilcbiAgICAgICAgICAgIC5zZXREZXNjKFwiTGluayB0aGUgZXZlbnQgdG8gYSBub3RlLlwiKVxuICAgICAgICAgICAgLmFkZFRleHQoKHRleHQpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgZmlsZXMgPSB0aGlzLmFwcC52YXVsdC5nZXRGaWxlcygpO1xuICAgICAgICAgICAgICAgIHRleHQuc2V0UGxhY2Vob2xkZXIoXCJQYXRoXCIpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmV2ZW50Lm5vdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm90ZSA9IHRoaXMuYXBwLnZhdWx0LmdldEFic3RyYWN0RmlsZUJ5UGF0aChcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQubm90ZVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICBpZiAobm90ZSAmJiBub3RlIGluc3RhbmNlb2YgVEZpbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQuc2V0VmFsdWUobm90ZS5iYXNlbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjb25zdCBtb2RhbCA9IG5ldyBQYXRoU3VnZ2VzdGlvbk1vZGFsKHRoaXMuYXBwLCB0ZXh0LCBbXG4gICAgICAgICAgICAgICAgICAgIC4uLmZpbGVzXG4gICAgICAgICAgICAgICAgXSk7XG5cbiAgICAgICAgICAgICAgICBtb2RhbC5vbkNsb3NlID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LmlucHV0RWwuYmx1cigpO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQubm90ZSA9IG1vZGFsLmZpbGUucGF0aDtcblxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRyeVBhcnNlKG1vZGFsLmZpbGUpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBuZXcgU2V0dGluZyh0aGlzLmluZm9FbCkuc2V0TmFtZShcIkV2ZW50IE5hbWVcIikuYWRkVGV4dCgodCkgPT5cbiAgICAgICAgICAgIHRcbiAgICAgICAgICAgICAgICAuc2V0UGxhY2Vob2xkZXIoXCJFdmVudCBOYW1lXCIpXG4gICAgICAgICAgICAgICAgLnNldFZhbHVlKHRoaXMuZXZlbnQubmFtZSlcbiAgICAgICAgICAgICAgICAub25DaGFuZ2UoKHYpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudC5uYW1lID0gdjtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uRWwgPSB0aGlzLmluZm9FbC5jcmVhdGVEaXYoXCJldmVudC1kZXNjcmlwdGlvblwiKTtcbiAgICAgICAgZGVzY3JpcHRpb25FbC5jcmVhdGVFbChcImxhYmVsXCIsIHsgdGV4dDogXCJFdmVudCBEZXNjcmlwdGlvblwiIH0pO1xuICAgICAgICBuZXcgVGV4dEFyZWFDb21wb25lbnQoZGVzY3JpcHRpb25FbClcbiAgICAgICAgICAgIC5zZXRQbGFjZWhvbGRlcihcIkV2ZW50IERlc2NyaXB0aW9uXCIpXG4gICAgICAgICAgICAuc2V0VmFsdWUodGhpcy5ldmVudC5kZXNjcmlwdGlvbilcbiAgICAgICAgICAgIC5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQuZGVzY3JpcHRpb24gPSB2O1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5pbmZvRWwpLnNldE5hbWUoXCJFdmVudCBDYXRlZ29yeVwiKS5hZGREcm9wZG93bigoZCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLmNhdGVnb3JpZXMubWFwKChjYXRlZ29yeSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NhdGVnb3J5LmlkLCBjYXRlZ29yeS5uYW1lXTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgZC5hZGRPcHRpb25zKG9wdGlvbnMpXG4gICAgICAgICAgICAgICAgLnNldFZhbHVlKHRoaXMuZXZlbnQuY2F0ZWdvcnkpXG4gICAgICAgICAgICAgICAgLm9uQ2hhbmdlKCh2KSA9PiAodGhpcy5ldmVudC5jYXRlZ29yeSA9IHYpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jIHRyeVBhcnNlKC8qIG5vdGU6IHN0cmluZywgICovIGZpbGU6IFRGaWxlKSB7XG4gICAgICAgIHRoaXMuZXZlbnQubmFtZSA9IGZpbGUuYmFzZW5hbWU7XG4gICAgICAgIGNvbnN0IGNhY2hlID0gdGhpcy5hcHAubWV0YWRhdGFDYWNoZS5nZXRGaWxlQ2FjaGUoZmlsZSk7XG5cbiAgICAgICAgY29uc3QgeyBmcm9udG1hdHRlciB9ID0gY2FjaGU7XG4gICAgICAgIGlmIChmcm9udG1hdHRlcikge1xuICAgICAgICAgICAgaWYgKFwiZmMtZGF0ZVwiIGluIGZyb250bWF0dGVyKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBkYXksIG1vbnRoLCB5ZWFyIH0gPSBmcm9udG1hdHRlcltcImZjLWRhdGVcIl07XG4gICAgICAgICAgICAgICAgaWYgKGRheSkgdGhpcy5ldmVudC5kYXRlLmRheSA9IGRheTtcbiAgICAgICAgICAgICAgICBpZiAobW9udGgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtb250aCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW5kZXhlciA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5zdGF0aWMubW9udGhzPy5maW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAobSkgPT4gbS5uYW1lID09IG1vbnRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA/PyB0aGlzLmNhbGVuZGFyLnN0YXRpYy5tb250aHM/LlswXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQuZGF0ZS5tb250aCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5zdGF0aWMubW9udGhzPy5pbmRleE9mKGluZGV4ZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbW9udGggPT0gXCJudW1iZXJcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudC5kYXRlLm1vbnRoID0gbW9udGggLSAxO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh5ZWFyKSB0aGlzLmV2ZW50LmRhdGUueWVhciA9IHllYXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoXCJmYy1jYXRlZ29yeVwiIGluIGZyb250bWF0dGVyKSB7XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAhdGhpcy5jYWxlbmRhci5jYXRlZ29yaWVzLmZpbmQoXG4gICAgICAgICAgICAgICAgICAgICAgICAoYykgPT4gYy5uYW1lID09PSBmcm9udG1hdHRlcltcImZjLWNhdGVnb3J5XCJdXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5jYXRlZ29yaWVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZnJvbnRtYXR0ZXJbXCJmYW50YXN5LWNhdGVnb3J5XCJdLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwiIzgwODA4MFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IG5hbm9pZCg2KVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudC5jYXRlZ29yeSA9IHRoaXMuY2FsZW5kYXIuY2F0ZWdvcmllcy5maW5kKFxuICAgICAgICAgICAgICAgICAgICAoYykgPT4gYy5uYW1lID09PSBmcm9udG1hdHRlcltcImZjLWNhdGVnb3J5XCJdXG4gICAgICAgICAgICAgICAgKT8uaWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBhd2FpdCB0aGlzLmRpc3BsYXkoKTtcbiAgICB9XG4gICAgYXN5bmMgb25PcGVuKCkge1xuICAgICAgICBhd2FpdCB0aGlzLmRpc3BsYXkoKTtcbiAgICB9XG59XG4iLCAiaW1wb3J0IHtcbiAgICBBcHAsXG4gICAgRnV6enlNYXRjaCxcbiAgICBGdXp6eVN1Z2dlc3RNb2RhbCxcbiAgICBTY29wZSxcbiAgICBTdWdnZXN0TW9kYWxcbn0gZnJvbSBcIm9ic2lkaWFuXCI7XG5pbXBvcnQgeyBjcmVhdGVQb3BwZXIsIEluc3RhbmNlIGFzIFBvcHBlckluc3RhbmNlIH0gZnJvbSBcIkBwb3BwZXJqcy9jb3JlXCI7XG5kZWNsYXJlIG1vZHVsZSBcIm9ic2lkaWFuXCIge1xuICAgIGludGVyZmFjZSBBcHAge1xuICAgICAgICBrZXltYXA6IHtcbiAgICAgICAgICAgIHB1c2hTY29wZShzY29wZTogU2NvcGUpOiB2b2lkO1xuICAgICAgICAgICAgcG9wU2NvcGUoc2NvcGU6IFNjb3BlKTogdm9pZDtcbiAgICAgICAgfTtcbiAgICB9XG59XG5jbGFzcyBTdWdnZXN0ZXI8VD4ge1xuICAgIG93bmVyOiBTdWdnZXN0TW9kYWw8VD47XG4gICAgaXRlbXM6IFRbXTtcbiAgICBzdWdnZXN0aW9uczogSFRNTERpdkVsZW1lbnRbXTtcbiAgICBzZWxlY3RlZEl0ZW06IG51bWJlcjtcbiAgICBjb250YWluZXJFbDogSFRNTEVsZW1lbnQ7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIG93bmVyOiBTdWdnZXN0TW9kYWw8VD4sXG4gICAgICAgIGNvbnRhaW5lckVsOiBIVE1MRWxlbWVudCxcbiAgICAgICAgc2NvcGU6IFNjb3BlXG4gICAgKSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyRWwgPSBjb250YWluZXJFbDtcbiAgICAgICAgdGhpcy5vd25lciA9IG93bmVyO1xuICAgICAgICBjb250YWluZXJFbC5vbihcbiAgICAgICAgICAgIFwiY2xpY2tcIixcbiAgICAgICAgICAgIFwiLnN1Z2dlc3Rpb24taXRlbVwiLFxuICAgICAgICAgICAgdGhpcy5vblN1Z2dlc3Rpb25DbGljay5iaW5kKHRoaXMpXG4gICAgICAgICk7XG4gICAgICAgIGNvbnRhaW5lckVsLm9uKFxuICAgICAgICAgICAgXCJtb3VzZW1vdmVcIixcbiAgICAgICAgICAgIFwiLnN1Z2dlc3Rpb24taXRlbVwiLFxuICAgICAgICAgICAgdGhpcy5vblN1Z2dlc3Rpb25Nb3VzZW92ZXIuYmluZCh0aGlzKVxuICAgICAgICApO1xuXG4gICAgICAgIHNjb3BlLnJlZ2lzdGVyKFtdLCBcIkFycm93VXBcIiwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZXRTZWxlY3RlZEl0ZW0odGhpcy5zZWxlY3RlZEl0ZW0gLSAxLCB0cnVlKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgc2NvcGUucmVnaXN0ZXIoW10sIFwiQXJyb3dEb3duXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0U2VsZWN0ZWRJdGVtKHRoaXMuc2VsZWN0ZWRJdGVtICsgMSwgdHJ1ZSk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHNjb3BlLnJlZ2lzdGVyKFtdLCBcIkVudGVyXCIsIChldnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMudXNlU2VsZWN0ZWRJdGVtKGV2dCk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHNjb3BlLnJlZ2lzdGVyKFtdLCBcIlRhYlwiLCAoZXZ0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNob29zZVN1Z2dlc3Rpb24oZXZ0KTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNob29zZVN1Z2dlc3Rpb24oZXZ0OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgICAgIGlmICghdGhpcy5pdGVtcyB8fCAhdGhpcy5pdGVtcy5sZW5ndGgpIHJldHVybjtcbiAgICAgICAgY29uc3QgY3VycmVudFZhbHVlID0gdGhpcy5pdGVtc1t0aGlzLnNlbGVjdGVkSXRlbV07XG4gICAgICAgIGlmIChjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMub3duZXIub25DaG9vc2VTdWdnZXN0aW9uKGN1cnJlbnRWYWx1ZSwgZXZ0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblN1Z2dlc3Rpb25DbGljayhldmVudDogTW91c2VFdmVudCwgZWw6IEhUTUxEaXZFbGVtZW50KTogdm9pZCB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmICghdGhpcy5zdWdnZXN0aW9ucyB8fCAhdGhpcy5zdWdnZXN0aW9ucy5sZW5ndGgpIHJldHVybjtcblxuICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5zdWdnZXN0aW9ucy5pbmRleE9mKGVsKTtcbiAgICAgICAgdGhpcy5zZXRTZWxlY3RlZEl0ZW0oaXRlbSwgZmFsc2UpO1xuICAgICAgICB0aGlzLnVzZVNlbGVjdGVkSXRlbShldmVudCk7XG4gICAgfVxuXG4gICAgb25TdWdnZXN0aW9uTW91c2VvdmVyKGV2ZW50OiBNb3VzZUV2ZW50LCBlbDogSFRNTERpdkVsZW1lbnQpOiB2b2lkIHtcbiAgICAgICAgaWYgKCF0aGlzLnN1Z2dlc3Rpb25zIHx8ICF0aGlzLnN1Z2dlc3Rpb25zLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5zdWdnZXN0aW9ucy5pbmRleE9mKGVsKTtcbiAgICAgICAgdGhpcy5zZXRTZWxlY3RlZEl0ZW0oaXRlbSwgZmFsc2UpO1xuICAgIH1cbiAgICBlbXB0eSgpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXJFbC5lbXB0eSgpO1xuICAgIH1cbiAgICBzZXRTdWdnZXN0aW9ucyhpdGVtczogVFtdKSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyRWwuZW1wdHkoKTtcbiAgICAgICAgY29uc3QgZWxzOiBIVE1MRGl2RWxlbWVudFtdID0gW107XG5cbiAgICAgICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc3VnZ2VzdGlvbkVsID0gdGhpcy5jb250YWluZXJFbC5jcmVhdGVEaXYoXCJzdWdnZXN0aW9uLWl0ZW1cIik7XG4gICAgICAgICAgICB0aGlzLm93bmVyLnJlbmRlclN1Z2dlc3Rpb24oaXRlbSwgc3VnZ2VzdGlvbkVsKTtcbiAgICAgICAgICAgIGVscy5wdXNoKHN1Z2dlc3Rpb25FbCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLml0ZW1zID0gaXRlbXM7XG4gICAgICAgIHRoaXMuc3VnZ2VzdGlvbnMgPSBlbHM7XG4gICAgICAgIHRoaXMuc2V0U2VsZWN0ZWRJdGVtKDAsIGZhbHNlKTtcbiAgICB9XG4gICAgdXNlU2VsZWN0ZWRJdGVtKGV2ZW50OiBNb3VzZUV2ZW50IHwgS2V5Ym9hcmRFdmVudCkge1xuICAgICAgICBpZiAoIXRoaXMuaXRlbXMgfHwgIXRoaXMuaXRlbXMubGVuZ3RoKSByZXR1cm47XG4gICAgICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IHRoaXMuaXRlbXNbdGhpcy5zZWxlY3RlZEl0ZW1dO1xuICAgICAgICBpZiAoY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLm93bmVyLnNlbGVjdFN1Z2dlc3Rpb24oY3VycmVudFZhbHVlLCBldmVudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgd3JhcCh2YWx1ZTogbnVtYmVyLCBzaXplOiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gKCh2YWx1ZSAlIHNpemUpICsgc2l6ZSkgJSBzaXplO1xuICAgIH1cbiAgICBzZXRTZWxlY3RlZEl0ZW0oaW5kZXg6IG51bWJlciwgc2Nyb2xsOiBib29sZWFuKSB7XG4gICAgICAgIGNvbnN0IG5JbmRleCA9IHRoaXMud3JhcChpbmRleCwgdGhpcy5zdWdnZXN0aW9ucy5sZW5ndGgpO1xuICAgICAgICBjb25zdCBwcmV2ID0gdGhpcy5zdWdnZXN0aW9uc1t0aGlzLnNlbGVjdGVkSXRlbV07XG4gICAgICAgIGNvbnN0IG5leHQgPSB0aGlzLnN1Z2dlc3Rpb25zW25JbmRleF07XG5cbiAgICAgICAgaWYgKHByZXYpIHByZXYucmVtb3ZlQ2xhc3MoXCJpcy1zZWxlY3RlZFwiKTtcbiAgICAgICAgaWYgKG5leHQpIG5leHQuYWRkQ2xhc3MoXCJpcy1zZWxlY3RlZFwiKTtcblxuICAgICAgICB0aGlzLnNlbGVjdGVkSXRlbSA9IG5JbmRleDtcblxuICAgICAgICBpZiAoc2Nyb2xsKSB7XG4gICAgICAgICAgICBuZXh0LnNjcm9sbEludG9WaWV3KGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFN1Z2dlc3Rpb25Nb2RhbDxUPiBleHRlbmRzIEZ1enp5U3VnZ2VzdE1vZGFsPFQ+IHtcbiAgICBpdGVtczogVFtdID0gW107XG4gICAgc3VnZ2VzdGlvbnM6IEhUTUxEaXZFbGVtZW50W107XG4gICAgcG9wcGVyOiBQb3BwZXJJbnN0YW5jZTtcbiAgICBzY29wZTogU2NvcGUgPSBuZXcgU2NvcGUoKTtcbiAgICBzdWdnZXN0ZXI6IFN1Z2dlc3RlcjxGdXp6eU1hdGNoPFQ+PjtcbiAgICBzdWdnZXN0RWw6IEhUTUxEaXZFbGVtZW50O1xuICAgIHByb21wdEVsOiBIVE1MRGl2RWxlbWVudDtcbiAgICBlbXB0eVN0YXRlVGV4dDogc3RyaW5nID0gXCJObyBtYXRjaCBmb3VuZFwiO1xuICAgIGxpbWl0OiBudW1iZXIgPSAxMDA7XG4gICAgc2hvdWxkTm90T3BlbjogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihhcHA6IEFwcCwgaW5wdXRFbDogSFRNTElucHV0RWxlbWVudCwgaXRlbXM6IFRbXSkge1xuICAgICAgICBzdXBlcihhcHApO1xuICAgICAgICB0aGlzLmlucHV0RWwgPSBpbnB1dEVsO1xuICAgICAgICB0aGlzLml0ZW1zID0gaXRlbXM7XG5cbiAgICAgICAgdGhpcy5zdWdnZXN0RWwgPSBjcmVhdGVEaXYoXCJzdWdnZXN0aW9uLWNvbnRhaW5lclwiKTtcblxuICAgICAgICB0aGlzLmNvbnRlbnRFbCA9IHRoaXMuc3VnZ2VzdEVsLmNyZWF0ZURpdihcInN1Z2dlc3Rpb25cIik7XG5cbiAgICAgICAgdGhpcy5zdWdnZXN0ZXIgPSBuZXcgU3VnZ2VzdGVyKHRoaXMsIHRoaXMuY29udGVudEVsLCB0aGlzLnNjb3BlKTtcblxuICAgICAgICB0aGlzLnNjb3BlLnJlZ2lzdGVyKFtdLCBcIkVzY2FwZVwiLCB0aGlzLm9uRXNjYXBlLmJpbmQodGhpcykpO1xuXG4gICAgICAgIHRoaXMuaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgdGhpcy5vbklucHV0Q2hhbmdlZC5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy5pbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLCB0aGlzLm9uRm9jdXMuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiYmx1clwiLCB0aGlzLmNsb3NlLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLnN1Z2dlc3RFbC5vbihcbiAgICAgICAgICAgIFwibW91c2Vkb3duXCIsXG4gICAgICAgICAgICBcIi5zdWdnZXN0aW9uLWNvbnRhaW5lclwiLFxuICAgICAgICAgICAgKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICB9XG4gICAgZW1wdHkoKSB7XG4gICAgICAgIHRoaXMuc3VnZ2VzdGVyLmVtcHR5KCk7XG4gICAgfVxuICAgIG9uSW5wdXRDaGFuZ2VkKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5zaG91bGROb3RPcGVuKSByZXR1cm47XG4gICAgICAgIGNvbnN0IGlucHV0U3RyID0gdGhpcy5tb2RpZnlJbnB1dCh0aGlzLmlucHV0RWwudmFsdWUpO1xuICAgICAgICBjb25zdCBzdWdnZXN0aW9ucyA9IHRoaXMuZ2V0U3VnZ2VzdGlvbnMoaW5wdXRTdHIpO1xuICAgICAgICBpZiAoc3VnZ2VzdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdGhpcy5zdWdnZXN0ZXIuc2V0U3VnZ2VzdGlvbnMoc3VnZ2VzdGlvbnMuc2xpY2UoMCwgdGhpcy5saW1pdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vbk5vU3VnZ2VzdGlvbigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub3BlbigpO1xuICAgIH1cbiAgICBvbkZvY3VzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnNob3VsZE5vdE9wZW4gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5vbklucHV0Q2hhbmdlZCgpO1xuICAgIH1cbiAgICBtb2RpZnlJbnB1dChpbnB1dDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgIH1cbiAgICBvbk5vU3VnZ2VzdGlvbigpIHtcbiAgICAgICAgdGhpcy5lbXB0eSgpO1xuICAgICAgICB0aGlzLnJlbmRlclN1Z2dlc3Rpb24oXG4gICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgdGhpcy5jb250ZW50RWwuY3JlYXRlRGl2KFwic3VnZ2VzdGlvbi1pdGVtXCIpXG4gICAgICAgICk7XG4gICAgfVxuICAgIG9wZW4oKTogdm9pZCB7XG4gICAgICAgIC8vIFRPRE86IEZpZ3VyZSBvdXQgYSBiZXR0ZXIgd2F5IHRvIGRvIHRoaXMuIElkZWEgZnJvbSBQZXJpb2RpYyBOb3RlcyBwbHVnaW5cbiAgICAgICAgdGhpcy5hcHAua2V5bWFwLnB1c2hTY29wZSh0aGlzLnNjb3BlKTtcblxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuc3VnZ2VzdEVsKTtcbiAgICAgICAgdGhpcy5wb3BwZXIgPSBjcmVhdGVQb3BwZXIodGhpcy5pbnB1dEVsLCB0aGlzLnN1Z2dlc3RFbCwge1xuICAgICAgICAgICAgcGxhY2VtZW50OiBcImJvdHRvbS1zdGFydFwiLFxuICAgICAgICAgICAgbW9kaWZpZXJzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm9mZnNldFwiLFxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IFswLCAxMF1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImZsaXBcIixcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmFsbGJhY2tQbGFjZW1lbnRzOiBbXCJ0b3BcIl1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgb25Fc2NhcGUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgdGhpcy5zaG91bGROb3RPcGVuID0gdHJ1ZTtcbiAgICB9XG4gICAgY2xvc2UoKTogdm9pZCB7XG4gICAgICAgIC8vIFRPRE86IEZpZ3VyZSBvdXQgYSBiZXR0ZXIgd2F5IHRvIGRvIHRoaXMuIElkZWEgZnJvbSBQZXJpb2RpYyBOb3RlcyBwbHVnaW5cbiAgICAgICAgdGhpcy5hcHAua2V5bWFwLnBvcFNjb3BlKHRoaXMuc2NvcGUpO1xuXG4gICAgICAgIHRoaXMuc3VnZ2VzdGVyLnNldFN1Z2dlc3Rpb25zKFtdKTtcbiAgICAgICAgaWYgKHRoaXMucG9wcGVyKSB7XG4gICAgICAgICAgICB0aGlzLnBvcHBlci5kZXN0cm95KCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnN1Z2dlc3RFbC5kZXRhY2goKTtcbiAgICB9XG4gICAgY3JlYXRlUHJvbXB0KHByb21wdHM6IEhUTUxTcGFuRWxlbWVudFtdKSB7XG4gICAgICAgIGlmICghdGhpcy5wcm9tcHRFbClcbiAgICAgICAgICAgIHRoaXMucHJvbXB0RWwgPSB0aGlzLnN1Z2dlc3RFbC5jcmVhdGVEaXYoXCJwcm9tcHQtaW5zdHJ1Y3Rpb25zXCIpO1xuICAgICAgICBsZXQgcHJvbXB0ID0gdGhpcy5wcm9tcHRFbC5jcmVhdGVEaXYoXCJwcm9tcHQtaW5zdHJ1Y3Rpb25cIik7XG4gICAgICAgIGZvciAobGV0IHAgb2YgcHJvbXB0cykge1xuICAgICAgICAgICAgcHJvbXB0LmFwcGVuZENoaWxkKHApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFic3RyYWN0IG9uQ2hvb3NlSXRlbShpdGVtOiBULCBldnQ6IE1vdXNlRXZlbnQgfCBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBhYnN0cmFjdCBnZXRJdGVtVGV4dChhcmc6IFQpOiBzdHJpbmc7XG4gICAgYWJzdHJhY3QgZ2V0SXRlbXMoKTogVFtdO1xufVxuIiwgImV4cG9ydCB2YXIgdG9wID0gJ3RvcCc7XG5leHBvcnQgdmFyIGJvdHRvbSA9ICdib3R0b20nO1xuZXhwb3J0IHZhciByaWdodCA9ICdyaWdodCc7XG5leHBvcnQgdmFyIGxlZnQgPSAnbGVmdCc7XG5leHBvcnQgdmFyIGF1dG8gPSAnYXV0byc7XG5leHBvcnQgdmFyIGJhc2VQbGFjZW1lbnRzID0gW3RvcCwgYm90dG9tLCByaWdodCwgbGVmdF07XG5leHBvcnQgdmFyIHN0YXJ0ID0gJ3N0YXJ0JztcbmV4cG9ydCB2YXIgZW5kID0gJ2VuZCc7XG5leHBvcnQgdmFyIGNsaXBwaW5nUGFyZW50cyA9ICdjbGlwcGluZ1BhcmVudHMnO1xuZXhwb3J0IHZhciB2aWV3cG9ydCA9ICd2aWV3cG9ydCc7XG5leHBvcnQgdmFyIHBvcHBlciA9ICdwb3BwZXInO1xuZXhwb3J0IHZhciByZWZlcmVuY2UgPSAncmVmZXJlbmNlJztcbmV4cG9ydCB2YXIgdmFyaWF0aW9uUGxhY2VtZW50cyA9IC8qI19fUFVSRV9fKi9iYXNlUGxhY2VtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gIHJldHVybiBhY2MuY29uY2F0KFtwbGFjZW1lbnQgKyBcIi1cIiArIHN0YXJ0LCBwbGFjZW1lbnQgKyBcIi1cIiArIGVuZF0pO1xufSwgW10pO1xuZXhwb3J0IHZhciBwbGFjZW1lbnRzID0gLyojX19QVVJFX18qL1tdLmNvbmNhdChiYXNlUGxhY2VtZW50cywgW2F1dG9dKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gIHJldHVybiBhY2MuY29uY2F0KFtwbGFjZW1lbnQsIHBsYWNlbWVudCArIFwiLVwiICsgc3RhcnQsIHBsYWNlbWVudCArIFwiLVwiICsgZW5kXSk7XG59LCBbXSk7IC8vIG1vZGlmaWVycyB0aGF0IG5lZWQgdG8gcmVhZCB0aGUgRE9NXG5cbmV4cG9ydCB2YXIgYmVmb3JlUmVhZCA9ICdiZWZvcmVSZWFkJztcbmV4cG9ydCB2YXIgcmVhZCA9ICdyZWFkJztcbmV4cG9ydCB2YXIgYWZ0ZXJSZWFkID0gJ2FmdGVyUmVhZCc7IC8vIHB1cmUtbG9naWMgbW9kaWZpZXJzXG5cbmV4cG9ydCB2YXIgYmVmb3JlTWFpbiA9ICdiZWZvcmVNYWluJztcbmV4cG9ydCB2YXIgbWFpbiA9ICdtYWluJztcbmV4cG9ydCB2YXIgYWZ0ZXJNYWluID0gJ2FmdGVyTWFpbic7IC8vIG1vZGlmaWVyIHdpdGggdGhlIHB1cnBvc2UgdG8gd3JpdGUgdG8gdGhlIERPTSAob3Igd3JpdGUgaW50byBhIGZyYW1ld29yayBzdGF0ZSlcblxuZXhwb3J0IHZhciBiZWZvcmVXcml0ZSA9ICdiZWZvcmVXcml0ZSc7XG5leHBvcnQgdmFyIHdyaXRlID0gJ3dyaXRlJztcbmV4cG9ydCB2YXIgYWZ0ZXJXcml0ZSA9ICdhZnRlcldyaXRlJztcbmV4cG9ydCB2YXIgbW9kaWZpZXJQaGFzZXMgPSBbYmVmb3JlUmVhZCwgcmVhZCwgYWZ0ZXJSZWFkLCBiZWZvcmVNYWluLCBtYWluLCBhZnRlck1haW4sIGJlZm9yZVdyaXRlLCB3cml0ZSwgYWZ0ZXJXcml0ZV07IiwgImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE5vZGVOYW1lKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsZW1lbnQgPyAoZWxlbWVudC5ub2RlTmFtZSB8fCAnJykudG9Mb3dlckNhc2UoKSA6IG51bGw7XG59IiwgImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFdpbmRvdyhub2RlKSB7XG4gIGlmIChub2RlID09IG51bGwpIHtcbiAgICByZXR1cm4gd2luZG93O1xuICB9XG5cbiAgaWYgKG5vZGUudG9TdHJpbmcoKSAhPT0gJ1tvYmplY3QgV2luZG93XScpIHtcbiAgICB2YXIgb3duZXJEb2N1bWVudCA9IG5vZGUub3duZXJEb2N1bWVudDtcbiAgICByZXR1cm4gb3duZXJEb2N1bWVudCA/IG93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgd2luZG93IDogd2luZG93O1xuICB9XG5cbiAgcmV0dXJuIG5vZGU7XG59IiwgImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5cbmZ1bmN0aW9uIGlzRWxlbWVudChub2RlKSB7XG4gIHZhciBPd25FbGVtZW50ID0gZ2V0V2luZG93KG5vZGUpLkVsZW1lbnQ7XG4gIHJldHVybiBub2RlIGluc3RhbmNlb2YgT3duRWxlbWVudCB8fCBub2RlIGluc3RhbmNlb2YgRWxlbWVudDtcbn1cblxuZnVuY3Rpb24gaXNIVE1MRWxlbWVudChub2RlKSB7XG4gIHZhciBPd25FbGVtZW50ID0gZ2V0V2luZG93KG5vZGUpLkhUTUxFbGVtZW50O1xuICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE93bkVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50O1xufVxuXG5mdW5jdGlvbiBpc1NoYWRvd1Jvb3Qobm9kZSkge1xuICAvLyBJRSAxMSBoYXMgbm8gU2hhZG93Um9vdFxuICBpZiAodHlwZW9mIFNoYWRvd1Jvb3QgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIE93bkVsZW1lbnQgPSBnZXRXaW5kb3cobm9kZSkuU2hhZG93Um9vdDtcbiAgcmV0dXJuIG5vZGUgaW5zdGFuY2VvZiBPd25FbGVtZW50IHx8IG5vZGUgaW5zdGFuY2VvZiBTaGFkb3dSb290O1xufVxuXG5leHBvcnQgeyBpc0VsZW1lbnQsIGlzSFRNTEVsZW1lbnQsIGlzU2hhZG93Um9vdCB9OyIsICJpbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4uL2RvbS11dGlscy9nZXROb2RlTmFtZS5qc1wiO1xuaW1wb3J0IHsgaXNIVE1MRWxlbWVudCB9IGZyb20gXCIuLi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qc1wiOyAvLyBUaGlzIG1vZGlmaWVyIHRha2VzIHRoZSBzdHlsZXMgcHJlcGFyZWQgYnkgdGhlIGBjb21wdXRlU3R5bGVzYCBtb2RpZmllclxuLy8gYW5kIGFwcGxpZXMgdGhlbSB0byB0aGUgSFRNTEVsZW1lbnRzIHN1Y2ggYXMgcG9wcGVyIGFuZCBhcnJvd1xuXG5mdW5jdGlvbiBhcHBseVN0eWxlcyhfcmVmKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGU7XG4gIE9iamVjdC5rZXlzKHN0YXRlLmVsZW1lbnRzKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdmFyIHN0eWxlID0gc3RhdGUuc3R5bGVzW25hbWVdIHx8IHt9O1xuICAgIHZhciBhdHRyaWJ1dGVzID0gc3RhdGUuYXR0cmlidXRlc1tuYW1lXSB8fCB7fTtcbiAgICB2YXIgZWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzW25hbWVdOyAvLyBhcnJvdyBpcyBvcHRpb25hbCArIHZpcnR1YWwgZWxlbWVudHNcblxuICAgIGlmICghaXNIVE1MRWxlbWVudChlbGVtZW50KSB8fCAhZ2V0Tm9kZU5hbWUoZWxlbWVudCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIEZsb3cgZG9lc24ndCBzdXBwb3J0IHRvIGV4dGVuZCB0aGlzIHByb3BlcnR5LCBidXQgaXQncyB0aGUgbW9zdFxuICAgIC8vIGVmZmVjdGl2ZSB3YXkgdG8gYXBwbHkgc3R5bGVzIHRvIGFuIEhUTUxFbGVtZW50XG4gICAgLy8gJEZsb3dGaXhNZVtjYW5ub3Qtd3JpdGVdXG5cblxuICAgIE9iamVjdC5hc3NpZ24oZWxlbWVudC5zdHlsZSwgc3R5bGUpO1xuICAgIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgIHZhciB2YWx1ZSA9IGF0dHJpYnV0ZXNbbmFtZV07XG5cbiAgICAgIGlmICh2YWx1ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSA9PT0gdHJ1ZSA/ICcnIDogdmFsdWUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZWZmZWN0KF9yZWYyKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYyLnN0YXRlO1xuICB2YXIgaW5pdGlhbFN0eWxlcyA9IHtcbiAgICBwb3BwZXI6IHtcbiAgICAgIHBvc2l0aW9uOiBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5LFxuICAgICAgbGVmdDogJzAnLFxuICAgICAgdG9wOiAnMCcsXG4gICAgICBtYXJnaW46ICcwJ1xuICAgIH0sXG4gICAgYXJyb3c6IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnXG4gICAgfSxcbiAgICByZWZlcmVuY2U6IHt9XG4gIH07XG4gIE9iamVjdC5hc3NpZ24oc3RhdGUuZWxlbWVudHMucG9wcGVyLnN0eWxlLCBpbml0aWFsU3R5bGVzLnBvcHBlcik7XG4gIHN0YXRlLnN0eWxlcyA9IGluaXRpYWxTdHlsZXM7XG5cbiAgaWYgKHN0YXRlLmVsZW1lbnRzLmFycm93KSB7XG4gICAgT2JqZWN0LmFzc2lnbihzdGF0ZS5lbGVtZW50cy5hcnJvdy5zdHlsZSwgaW5pdGlhbFN0eWxlcy5hcnJvdyk7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIE9iamVjdC5rZXlzKHN0YXRlLmVsZW1lbnRzKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICB2YXIgZWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzW25hbWVdO1xuICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBzdGF0ZS5hdHRyaWJ1dGVzW25hbWVdIHx8IHt9O1xuICAgICAgdmFyIHN0eWxlUHJvcGVydGllcyA9IE9iamVjdC5rZXlzKHN0YXRlLnN0eWxlcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSA/IHN0YXRlLnN0eWxlc1tuYW1lXSA6IGluaXRpYWxTdHlsZXNbbmFtZV0pOyAvLyBTZXQgYWxsIHZhbHVlcyB0byBhbiBlbXB0eSBzdHJpbmcgdG8gdW5zZXQgdGhlbVxuXG4gICAgICB2YXIgc3R5bGUgPSBzdHlsZVByb3BlcnRpZXMucmVkdWNlKGZ1bmN0aW9uIChzdHlsZSwgcHJvcGVydHkpIHtcbiAgICAgICAgc3R5bGVbcHJvcGVydHldID0gJyc7XG4gICAgICAgIHJldHVybiBzdHlsZTtcbiAgICAgIH0sIHt9KTsgLy8gYXJyb3cgaXMgb3B0aW9uYWwgKyB2aXJ0dWFsIGVsZW1lbnRzXG5cbiAgICAgIGlmICghaXNIVE1MRWxlbWVudChlbGVtZW50KSB8fCAhZ2V0Tm9kZU5hbWUoZWxlbWVudCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBPYmplY3QuYXNzaWduKGVsZW1lbnQuc3R5bGUsIHN0eWxlKTtcbiAgICAgIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGF0dHJpYnV0ZSkge1xuICAgICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGUpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdhcHBseVN0eWxlcycsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAnd3JpdGUnLFxuICBmbjogYXBwbHlTdHlsZXMsXG4gIGVmZmVjdDogZWZmZWN0LFxuICByZXF1aXJlczogWydjb21wdXRlU3R5bGVzJ11cbn07IiwgImltcG9ydCB7IGF1dG8gfSBmcm9tIFwiLi4vZW51bXMuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQuc3BsaXQoJy0nKVswXTtcbn0iLCAiLy8gaW1wb3J0IHsgaXNIVE1MRWxlbWVudCB9IGZyb20gJy4vaW5zdGFuY2VPZic7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVudXNlZC1pbXBvcnRzL25vLXVudXNlZC12YXJzXG5pbmNsdWRlU2NhbGUpIHtcbiAgaWYgKGluY2x1ZGVTY2FsZSA9PT0gdm9pZCAwKSB7XG4gICAgaW5jbHVkZVNjYWxlID0gZmFsc2U7XG4gIH1cblxuICB2YXIgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciBzY2FsZVggPSAxO1xuICB2YXIgc2NhbGVZID0gMTsgLy8gRklYTUU6XG4gIC8vIGBvZmZzZXRXaWR0aGAgcmV0dXJucyBhbiBpbnRlZ2VyIHdoaWxlIGBnZXRCb3VuZGluZ0NsaWVudFJlY3RgXG4gIC8vIHJldHVybnMgYSBmbG9hdC4gVGhpcyByZXN1bHRzIGluIGBzY2FsZVhgIG9yIGBzY2FsZVlgIGJlaW5nXG4gIC8vIG5vbi0xIHdoZW4gaXQgc2hvdWxkIGJlIGZvciBlbGVtZW50cyB0aGF0IGFyZW4ndCBhIGZ1bGwgcGl4ZWwgaW5cbiAgLy8gd2lkdGggb3IgaGVpZ2h0LlxuICAvLyBpZiAoaXNIVE1MRWxlbWVudChlbGVtZW50KSAmJiBpbmNsdWRlU2NhbGUpIHtcbiAgLy8gICBjb25zdCBvZmZzZXRIZWlnaHQgPSBlbGVtZW50Lm9mZnNldEhlaWdodDtcbiAgLy8gICBjb25zdCBvZmZzZXRXaWR0aCA9IGVsZW1lbnQub2Zmc2V0V2lkdGg7XG4gIC8vICAgLy8gRG8gbm90IGF0dGVtcHQgdG8gZGl2aWRlIGJ5IDAsIG90aGVyd2lzZSB3ZSBnZXQgYEluZmluaXR5YCBhcyBzY2FsZVxuICAvLyAgIC8vIEZhbGxiYWNrIHRvIDEgaW4gY2FzZSBib3RoIHZhbHVlcyBhcmUgYDBgXG4gIC8vICAgaWYgKG9mZnNldFdpZHRoID4gMCkge1xuICAvLyAgICAgc2NhbGVYID0gcmVjdC53aWR0aCAvIG9mZnNldFdpZHRoIHx8IDE7XG4gIC8vICAgfVxuICAvLyAgIGlmIChvZmZzZXRIZWlnaHQgPiAwKSB7XG4gIC8vICAgICBzY2FsZVkgPSByZWN0LmhlaWdodCAvIG9mZnNldEhlaWdodCB8fCAxO1xuICAvLyAgIH1cbiAgLy8gfVxuXG4gIHJldHVybiB7XG4gICAgd2lkdGg6IHJlY3Qud2lkdGggLyBzY2FsZVgsXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodCAvIHNjYWxlWSxcbiAgICB0b3A6IHJlY3QudG9wIC8gc2NhbGVZLFxuICAgIHJpZ2h0OiByZWN0LnJpZ2h0IC8gc2NhbGVYLFxuICAgIGJvdHRvbTogcmVjdC5ib3R0b20gLyBzY2FsZVksXG4gICAgbGVmdDogcmVjdC5sZWZ0IC8gc2NhbGVYLFxuICAgIHg6IHJlY3QubGVmdCAvIHNjYWxlWCxcbiAgICB5OiByZWN0LnRvcCAvIHNjYWxlWVxuICB9O1xufSIsICJpbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiOyAvLyBSZXR1cm5zIHRoZSBsYXlvdXQgcmVjdCBvZiBhbiBlbGVtZW50IHJlbGF0aXZlIHRvIGl0cyBvZmZzZXRQYXJlbnQuIExheW91dFxuLy8gbWVhbnMgaXQgZG9lc24ndCB0YWtlIGludG8gYWNjb3VudCB0cmFuc2Zvcm1zLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRMYXlvdXRSZWN0KGVsZW1lbnQpIHtcbiAgdmFyIGNsaWVudFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCk7IC8vIFVzZSB0aGUgY2xpZW50UmVjdCBzaXplcyBpZiBpdCdzIG5vdCBiZWVuIHRyYW5zZm9ybWVkLlxuICAvLyBGaXhlcyBodHRwczovL2dpdGh1Yi5jb20vcG9wcGVyanMvcG9wcGVyLWNvcmUvaXNzdWVzLzEyMjNcblxuICB2YXIgd2lkdGggPSBlbGVtZW50Lm9mZnNldFdpZHRoO1xuICB2YXIgaGVpZ2h0ID0gZWxlbWVudC5vZmZzZXRIZWlnaHQ7XG5cbiAgaWYgKE1hdGguYWJzKGNsaWVudFJlY3Qud2lkdGggLSB3aWR0aCkgPD0gMSkge1xuICAgIHdpZHRoID0gY2xpZW50UmVjdC53aWR0aDtcbiAgfVxuXG4gIGlmIChNYXRoLmFicyhjbGllbnRSZWN0LmhlaWdodCAtIGhlaWdodCkgPD0gMSkge1xuICAgIGhlaWdodCA9IGNsaWVudFJlY3QuaGVpZ2h0O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB4OiBlbGVtZW50Lm9mZnNldExlZnQsXG4gICAgeTogZWxlbWVudC5vZmZzZXRUb3AsXG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0XG4gIH07XG59IiwgImltcG9ydCB7IGlzU2hhZG93Um9vdCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnRhaW5zKHBhcmVudCwgY2hpbGQpIHtcbiAgdmFyIHJvb3ROb2RlID0gY2hpbGQuZ2V0Um9vdE5vZGUgJiYgY2hpbGQuZ2V0Um9vdE5vZGUoKTsgLy8gRmlyc3QsIGF0dGVtcHQgd2l0aCBmYXN0ZXIgbmF0aXZlIG1ldGhvZFxuXG4gIGlmIChwYXJlbnQuY29udGFpbnMoY2hpbGQpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gLy8gdGhlbiBmYWxsYmFjayB0byBjdXN0b20gaW1wbGVtZW50YXRpb24gd2l0aCBTaGFkb3cgRE9NIHN1cHBvcnRcbiAgZWxzZSBpZiAocm9vdE5vZGUgJiYgaXNTaGFkb3dSb290KHJvb3ROb2RlKSkge1xuICAgICAgdmFyIG5leHQgPSBjaGlsZDtcblxuICAgICAgZG8ge1xuICAgICAgICBpZiAobmV4dCAmJiBwYXJlbnQuaXNTYW1lTm9kZShuZXh0KSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXTogbmVlZCBhIGJldHRlciB3YXkgdG8gaGFuZGxlIHRoaXMuLi5cblxuXG4gICAgICAgIG5leHQgPSBuZXh0LnBhcmVudE5vZGUgfHwgbmV4dC5ob3N0O1xuICAgICAgfSB3aGlsZSAobmV4dCk7XG4gICAgfSAvLyBHaXZlIHVwLCB0aGUgcmVzdWx0IGlzIGZhbHNlXG5cblxuICByZXR1cm4gZmFsc2U7XG59IiwgImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGdldFdpbmRvdyhlbGVtZW50KS5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xufSIsICJpbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzVGFibGVFbGVtZW50KGVsZW1lbnQpIHtcbiAgcmV0dXJuIFsndGFibGUnLCAndGQnLCAndGgnXS5pbmRleE9mKGdldE5vZGVOYW1lKGVsZW1lbnQpKSA+PSAwO1xufSIsICJpbXBvcnQgeyBpc0VsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkge1xuICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBhc3N1bWUgYm9keSBpcyBhbHdheXMgYXZhaWxhYmxlXG4gIHJldHVybiAoKGlzRWxlbWVudChlbGVtZW50KSA/IGVsZW1lbnQub3duZXJEb2N1bWVudCA6IC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuICBlbGVtZW50LmRvY3VtZW50KSB8fCB3aW5kb3cuZG9jdW1lbnQpLmRvY3VtZW50RWxlbWVudDtcbn0iLCAiaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IHsgaXNTaGFkb3dSb290IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0UGFyZW50Tm9kZShlbGVtZW50KSB7XG4gIGlmIChnZXROb2RlTmFtZShlbGVtZW50KSA9PT0gJ2h0bWwnKSB7XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH1cblxuICByZXR1cm4gKC8vIHRoaXMgaXMgYSBxdWlja2VyIChidXQgbGVzcyB0eXBlIHNhZmUpIHdheSB0byBzYXZlIHF1aXRlIHNvbWUgYnl0ZXMgZnJvbSB0aGUgYnVuZGxlXG4gICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtcmV0dXJuXVxuICAgIC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuICAgIGVsZW1lbnQuYXNzaWduZWRTbG90IHx8IC8vIHN0ZXAgaW50byB0aGUgc2hhZG93IERPTSBvZiB0aGUgcGFyZW50IG9mIGEgc2xvdHRlZCBub2RlXG4gICAgZWxlbWVudC5wYXJlbnROb2RlIHx8ICggLy8gRE9NIEVsZW1lbnQgZGV0ZWN0ZWRcbiAgICBpc1NoYWRvd1Jvb3QoZWxlbWVudCkgPyBlbGVtZW50Lmhvc3QgOiBudWxsKSB8fCAvLyBTaGFkb3dSb290IGRldGVjdGVkXG4gICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtY2FsbF06IEhUTUxFbGVtZW50IGlzIGEgTm9kZVxuICAgIGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSAvLyBmYWxsYmFja1xuXG4gICk7XG59IiwgImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCBnZXRDb21wdXRlZFN0eWxlIGZyb20gXCIuL2dldENvbXB1dGVkU3R5bGUuanNcIjtcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgaXNUYWJsZUVsZW1lbnQgZnJvbSBcIi4vaXNUYWJsZUVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRQYXJlbnROb2RlIGZyb20gXCIuL2dldFBhcmVudE5vZGUuanNcIjtcblxuZnVuY3Rpb24gZ2V0VHJ1ZU9mZnNldFBhcmVudChlbGVtZW50KSB7XG4gIGlmICghaXNIVE1MRWxlbWVudChlbGVtZW50KSB8fCAvLyBodHRwczovL2dpdGh1Yi5jb20vcG9wcGVyanMvcG9wcGVyLWNvcmUvaXNzdWVzLzgzN1xuICBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLnBvc2l0aW9uID09PSAnZml4ZWQnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gZWxlbWVudC5vZmZzZXRQYXJlbnQ7XG59IC8vIGAub2Zmc2V0UGFyZW50YCByZXBvcnRzIGBudWxsYCBmb3IgZml4ZWQgZWxlbWVudHMsIHdoaWxlIGFic29sdXRlIGVsZW1lbnRzXG4vLyByZXR1cm4gdGhlIGNvbnRhaW5pbmcgYmxvY2tcblxuXG5mdW5jdGlvbiBnZXRDb250YWluaW5nQmxvY2soZWxlbWVudCkge1xuICB2YXIgaXNGaXJlZm94ID0gbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2ZpcmVmb3gnKSAhPT0gLTE7XG4gIHZhciBpc0lFID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgIT09IC0xO1xuXG4gIGlmIChpc0lFICYmIGlzSFRNTEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICAvLyBJbiBJRSA5LCAxMCBhbmQgMTEgZml4ZWQgZWxlbWVudHMgY29udGFpbmluZyBibG9jayBpcyBhbHdheXMgZXN0YWJsaXNoZWQgYnkgdGhlIHZpZXdwb3J0XG4gICAgdmFyIGVsZW1lbnRDc3MgPSBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xuXG4gICAgaWYgKGVsZW1lbnRDc3MucG9zaXRpb24gPT09ICdmaXhlZCcpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjdXJyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUoZWxlbWVudCk7XG5cbiAgd2hpbGUgKGlzSFRNTEVsZW1lbnQoY3VycmVudE5vZGUpICYmIFsnaHRtbCcsICdib2R5J10uaW5kZXhPZihnZXROb2RlTmFtZShjdXJyZW50Tm9kZSkpIDwgMCkge1xuICAgIHZhciBjc3MgPSBnZXRDb21wdXRlZFN0eWxlKGN1cnJlbnROb2RlKTsgLy8gVGhpcyBpcyBub24tZXhoYXVzdGl2ZSBidXQgY292ZXJzIHRoZSBtb3N0IGNvbW1vbiBDU1MgcHJvcGVydGllcyB0aGF0XG4gICAgLy8gY3JlYXRlIGEgY29udGFpbmluZyBibG9jay5cbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvQ29udGFpbmluZ19ibG9jayNpZGVudGlmeWluZ190aGVfY29udGFpbmluZ19ibG9ja1xuXG4gICAgaWYgKGNzcy50cmFuc2Zvcm0gIT09ICdub25lJyB8fCBjc3MucGVyc3BlY3RpdmUgIT09ICdub25lJyB8fCBjc3MuY29udGFpbiA9PT0gJ3BhaW50JyB8fCBbJ3RyYW5zZm9ybScsICdwZXJzcGVjdGl2ZSddLmluZGV4T2YoY3NzLndpbGxDaGFuZ2UpICE9PSAtMSB8fCBpc0ZpcmVmb3ggJiYgY3NzLndpbGxDaGFuZ2UgPT09ICdmaWx0ZXInIHx8IGlzRmlyZWZveCAmJiBjc3MuZmlsdGVyICYmIGNzcy5maWx0ZXIgIT09ICdub25lJykge1xuICAgICAgcmV0dXJuIGN1cnJlbnROb2RlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLnBhcmVudE5vZGU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59IC8vIEdldHMgdGhlIGNsb3Nlc3QgYW5jZXN0b3IgcG9zaXRpb25lZCBlbGVtZW50LiBIYW5kbGVzIHNvbWUgZWRnZSBjYXNlcyxcbi8vIHN1Y2ggYXMgdGFibGUgYW5jZXN0b3JzIGFuZCBjcm9zcyBicm93c2VyIGJ1Z3MuXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpIHtcbiAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdyhlbGVtZW50KTtcbiAgdmFyIG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCk7XG5cbiAgd2hpbGUgKG9mZnNldFBhcmVudCAmJiBpc1RhYmxlRWxlbWVudChvZmZzZXRQYXJlbnQpICYmIGdldENvbXB1dGVkU3R5bGUob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gJ3N0YXRpYycpIHtcbiAgICBvZmZzZXRQYXJlbnQgPSBnZXRUcnVlT2Zmc2V0UGFyZW50KG9mZnNldFBhcmVudCk7XG4gIH1cblxuICBpZiAob2Zmc2V0UGFyZW50ICYmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpID09PSAnaHRtbCcgfHwgZ2V0Tm9kZU5hbWUob2Zmc2V0UGFyZW50KSA9PT0gJ2JvZHknICYmIGdldENvbXB1dGVkU3R5bGUob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gJ3N0YXRpYycpKSB7XG4gICAgcmV0dXJuIHdpbmRvdztcbiAgfVxuXG4gIHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZ2V0Q29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHx8IHdpbmRvdztcbn0iLCAiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gWyd0b3AnLCAnYm90dG9tJ10uaW5kZXhPZihwbGFjZW1lbnQpID49IDAgPyAneCcgOiAneSc7XG59IiwgImV4cG9ydCB2YXIgbWF4ID0gTWF0aC5tYXg7XG5leHBvcnQgdmFyIG1pbiA9IE1hdGgubWluO1xuZXhwb3J0IHZhciByb3VuZCA9IE1hdGgucm91bmQ7IiwgImltcG9ydCB7IG1heCBhcyBtYXRoTWF4LCBtaW4gYXMgbWF0aE1pbiB9IGZyb20gXCIuL21hdGguanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHdpdGhpbihtaW4sIHZhbHVlLCBtYXgpIHtcbiAgcmV0dXJuIG1hdGhNYXgobWluLCBtYXRoTWluKHZhbHVlLCBtYXgpKTtcbn0iLCAiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RnJlc2hTaWRlT2JqZWN0KCkge1xuICByZXR1cm4ge1xuICAgIHRvcDogMCxcbiAgICByaWdodDogMCxcbiAgICBib3R0b206IDAsXG4gICAgbGVmdDogMFxuICB9O1xufSIsICJpbXBvcnQgZ2V0RnJlc2hTaWRlT2JqZWN0IGZyb20gXCIuL2dldEZyZXNoU2lkZU9iamVjdC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVyZ2VQYWRkaW5nT2JqZWN0KHBhZGRpbmdPYmplY3QpIHtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGdldEZyZXNoU2lkZU9iamVjdCgpLCBwYWRkaW5nT2JqZWN0KTtcbn0iLCAiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXhwYW5kVG9IYXNoTWFwKHZhbHVlLCBrZXlzKSB7XG4gIHJldHVybiBrZXlzLnJlZHVjZShmdW5jdGlvbiAoaGFzaE1hcCwga2V5KSB7XG4gICAgaGFzaE1hcFtrZXldID0gdmFsdWU7XG4gICAgcmV0dXJuIGhhc2hNYXA7XG4gIH0sIHt9KTtcbn0iLCAiaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRMYXlvdXRSZWN0IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0TGF5b3V0UmVjdC5qc1wiO1xuaW1wb3J0IGNvbnRhaW5zIGZyb20gXCIuLi9kb20tdXRpbHMvY29udGFpbnMuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldE1haW5BeGlzRnJvbVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IHdpdGhpbiBmcm9tIFwiLi4vdXRpbHMvd2l0aGluLmpzXCI7XG5pbXBvcnQgbWVyZ2VQYWRkaW5nT2JqZWN0IGZyb20gXCIuLi91dGlscy9tZXJnZVBhZGRpbmdPYmplY3QuanNcIjtcbmltcG9ydCBleHBhbmRUb0hhc2hNYXAgZnJvbSBcIi4uL3V0aWxzL2V4cGFuZFRvSGFzaE1hcC5qc1wiO1xuaW1wb3J0IHsgbGVmdCwgcmlnaHQsIGJhc2VQbGFjZW1lbnRzLCB0b3AsIGJvdHRvbSB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IHsgaXNIVE1MRWxlbWVudCB9IGZyb20gXCIuLi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbnZhciB0b1BhZGRpbmdPYmplY3QgPSBmdW5jdGlvbiB0b1BhZGRpbmdPYmplY3QocGFkZGluZywgc3RhdGUpIHtcbiAgcGFkZGluZyA9IHR5cGVvZiBwYWRkaW5nID09PSAnZnVuY3Rpb24nID8gcGFkZGluZyhPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5yZWN0cywge1xuICAgIHBsYWNlbWVudDogc3RhdGUucGxhY2VtZW50XG4gIH0pKSA6IHBhZGRpbmc7XG4gIHJldHVybiBtZXJnZVBhZGRpbmdPYmplY3QodHlwZW9mIHBhZGRpbmcgIT09ICdudW1iZXInID8gcGFkZGluZyA6IGV4cGFuZFRvSGFzaE1hcChwYWRkaW5nLCBiYXNlUGxhY2VtZW50cykpO1xufTtcblxuZnVuY3Rpb24gYXJyb3coX3JlZikge1xuICB2YXIgX3N0YXRlJG1vZGlmaWVyc0RhdGEkO1xuXG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsXG4gICAgICBuYW1lID0gX3JlZi5uYW1lLFxuICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucztcbiAgdmFyIGFycm93RWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzLmFycm93O1xuICB2YXIgcG9wcGVyT2Zmc2V0cyA9IHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cztcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHN0YXRlLnBsYWNlbWVudCk7XG4gIHZhciBheGlzID0gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KGJhc2VQbGFjZW1lbnQpO1xuICB2YXIgaXNWZXJ0aWNhbCA9IFtsZWZ0LCByaWdodF0uaW5kZXhPZihiYXNlUGxhY2VtZW50KSA+PSAwO1xuICB2YXIgbGVuID0gaXNWZXJ0aWNhbCA/ICdoZWlnaHQnIDogJ3dpZHRoJztcblxuICBpZiAoIWFycm93RWxlbWVudCB8fCAhcG9wcGVyT2Zmc2V0cykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBwYWRkaW5nT2JqZWN0ID0gdG9QYWRkaW5nT2JqZWN0KG9wdGlvbnMucGFkZGluZywgc3RhdGUpO1xuICB2YXIgYXJyb3dSZWN0ID0gZ2V0TGF5b3V0UmVjdChhcnJvd0VsZW1lbnQpO1xuICB2YXIgbWluUHJvcCA9IGF4aXMgPT09ICd5JyA/IHRvcCA6IGxlZnQ7XG4gIHZhciBtYXhQcm9wID0gYXhpcyA9PT0gJ3knID8gYm90dG9tIDogcmlnaHQ7XG4gIHZhciBlbmREaWZmID0gc3RhdGUucmVjdHMucmVmZXJlbmNlW2xlbl0gKyBzdGF0ZS5yZWN0cy5yZWZlcmVuY2VbYXhpc10gLSBwb3BwZXJPZmZzZXRzW2F4aXNdIC0gc3RhdGUucmVjdHMucG9wcGVyW2xlbl07XG4gIHZhciBzdGFydERpZmYgPSBwb3BwZXJPZmZzZXRzW2F4aXNdIC0gc3RhdGUucmVjdHMucmVmZXJlbmNlW2F4aXNdO1xuICB2YXIgYXJyb3dPZmZzZXRQYXJlbnQgPSBnZXRPZmZzZXRQYXJlbnQoYXJyb3dFbGVtZW50KTtcbiAgdmFyIGNsaWVudFNpemUgPSBhcnJvd09mZnNldFBhcmVudCA/IGF4aXMgPT09ICd5JyA/IGFycm93T2Zmc2V0UGFyZW50LmNsaWVudEhlaWdodCB8fCAwIDogYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50V2lkdGggfHwgMCA6IDA7XG4gIHZhciBjZW50ZXJUb1JlZmVyZW5jZSA9IGVuZERpZmYgLyAyIC0gc3RhcnREaWZmIC8gMjsgLy8gTWFrZSBzdXJlIHRoZSBhcnJvdyBkb2Vzbid0IG92ZXJmbG93IHRoZSBwb3BwZXIgaWYgdGhlIGNlbnRlciBwb2ludCBpc1xuICAvLyBvdXRzaWRlIG9mIHRoZSBwb3BwZXIgYm91bmRzXG5cbiAgdmFyIG1pbiA9IHBhZGRpbmdPYmplY3RbbWluUHJvcF07XG4gIHZhciBtYXggPSBjbGllbnRTaXplIC0gYXJyb3dSZWN0W2xlbl0gLSBwYWRkaW5nT2JqZWN0W21heFByb3BdO1xuICB2YXIgY2VudGVyID0gY2xpZW50U2l6ZSAvIDIgLSBhcnJvd1JlY3RbbGVuXSAvIDIgKyBjZW50ZXJUb1JlZmVyZW5jZTtcbiAgdmFyIG9mZnNldCA9IHdpdGhpbihtaW4sIGNlbnRlciwgbWF4KTsgLy8gUHJldmVudHMgYnJlYWtpbmcgc3ludGF4IGhpZ2hsaWdodGluZy4uLlxuXG4gIHZhciBheGlzUHJvcCA9IGF4aXM7XG4gIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0gPSAoX3N0YXRlJG1vZGlmaWVyc0RhdGEkID0ge30sIF9zdGF0ZSRtb2RpZmllcnNEYXRhJFtheGlzUHJvcF0gPSBvZmZzZXQsIF9zdGF0ZSRtb2RpZmllcnNEYXRhJC5jZW50ZXJPZmZzZXQgPSBvZmZzZXQgLSBjZW50ZXIsIF9zdGF0ZSRtb2RpZmllcnNEYXRhJCk7XG59XG5cbmZ1bmN0aW9uIGVmZmVjdChfcmVmMikge1xuICB2YXIgc3RhdGUgPSBfcmVmMi5zdGF0ZSxcbiAgICAgIG9wdGlvbnMgPSBfcmVmMi5vcHRpb25zO1xuICB2YXIgX29wdGlvbnMkZWxlbWVudCA9IG9wdGlvbnMuZWxlbWVudCxcbiAgICAgIGFycm93RWxlbWVudCA9IF9vcHRpb25zJGVsZW1lbnQgPT09IHZvaWQgMCA/ICdbZGF0YS1wb3BwZXItYXJyb3ddJyA6IF9vcHRpb25zJGVsZW1lbnQ7XG5cbiAgaWYgKGFycm93RWxlbWVudCA9PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9IC8vIENTUyBzZWxlY3RvclxuXG5cbiAgaWYgKHR5cGVvZiBhcnJvd0VsZW1lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgYXJyb3dFbGVtZW50ID0gc3RhdGUuZWxlbWVudHMucG9wcGVyLnF1ZXJ5U2VsZWN0b3IoYXJyb3dFbGVtZW50KTtcblxuICAgIGlmICghYXJyb3dFbGVtZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIGlmICghaXNIVE1MRWxlbWVudChhcnJvd0VsZW1lbnQpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiBcImFycm93XCIgZWxlbWVudCBtdXN0IGJlIGFuIEhUTUxFbGVtZW50IChub3QgYW4gU1ZHRWxlbWVudCkuJywgJ1RvIHVzZSBhbiBTVkcgYXJyb3csIHdyYXAgaXQgaW4gYW4gSFRNTEVsZW1lbnQgdGhhdCB3aWxsIGJlIHVzZWQgYXMnLCAndGhlIGFycm93LiddLmpvaW4oJyAnKSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb250YWlucyhzdGF0ZS5lbGVtZW50cy5wb3BwZXIsIGFycm93RWxlbWVudCkpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiBcImFycm93XCIgbW9kaWZpZXJcXCdzIGBlbGVtZW50YCBtdXN0IGJlIGEgY2hpbGQgb2YgdGhlIHBvcHBlcicsICdlbGVtZW50LiddLmpvaW4oJyAnKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3RhdGUuZWxlbWVudHMuYXJyb3cgPSBhcnJvd0VsZW1lbnQ7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdhcnJvdycsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAnbWFpbicsXG4gIGZuOiBhcnJvdyxcbiAgZWZmZWN0OiBlZmZlY3QsXG4gIHJlcXVpcmVzOiBbJ3BvcHBlck9mZnNldHMnXSxcbiAgcmVxdWlyZXNJZkV4aXN0czogWydwcmV2ZW50T3ZlcmZsb3cnXVxufTsiLCAiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KCctJylbMV07XG59IiwgImltcG9ydCB7IHRvcCwgbGVmdCwgcmlnaHQsIGJvdHRvbSwgZW5kIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0T2Zmc2V0UGFyZW50IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanNcIjtcbmltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0VmFyaWF0aW9uIGZyb20gXCIuLi91dGlscy9nZXRWYXJpYXRpb24uanNcIjtcbmltcG9ydCB7IHJvdW5kIH0gZnJvbSBcIi4uL3V0aWxzL21hdGguanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG52YXIgdW5zZXRTaWRlcyA9IHtcbiAgdG9wOiAnYXV0bycsXG4gIHJpZ2h0OiAnYXV0bycsXG4gIGJvdHRvbTogJ2F1dG8nLFxuICBsZWZ0OiAnYXV0bydcbn07IC8vIFJvdW5kIHRoZSBvZmZzZXRzIHRvIHRoZSBuZWFyZXN0IHN1aXRhYmxlIHN1YnBpeGVsIGJhc2VkIG9uIHRoZSBEUFIuXG4vLyBab29taW5nIGNhbiBjaGFuZ2UgdGhlIERQUiwgYnV0IGl0IHNlZW1zIHRvIHJlcG9ydCBhIHZhbHVlIHRoYXQgd2lsbFxuLy8gY2xlYW5seSBkaXZpZGUgdGhlIHZhbHVlcyBpbnRvIHRoZSBhcHByb3ByaWF0ZSBzdWJwaXhlbHMuXG5cbmZ1bmN0aW9uIHJvdW5kT2Zmc2V0c0J5RFBSKF9yZWYpIHtcbiAgdmFyIHggPSBfcmVmLngsXG4gICAgICB5ID0gX3JlZi55O1xuICB2YXIgd2luID0gd2luZG93O1xuICB2YXIgZHByID0gd2luLmRldmljZVBpeGVsUmF0aW8gfHwgMTtcbiAgcmV0dXJuIHtcbiAgICB4OiByb3VuZChyb3VuZCh4ICogZHByKSAvIGRwcikgfHwgMCxcbiAgICB5OiByb3VuZChyb3VuZCh5ICogZHByKSAvIGRwcikgfHwgMFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFwVG9TdHlsZXMoX3JlZjIpIHtcbiAgdmFyIF9PYmplY3QkYXNzaWduMjtcblxuICB2YXIgcG9wcGVyID0gX3JlZjIucG9wcGVyLFxuICAgICAgcG9wcGVyUmVjdCA9IF9yZWYyLnBvcHBlclJlY3QsXG4gICAgICBwbGFjZW1lbnQgPSBfcmVmMi5wbGFjZW1lbnQsXG4gICAgICB2YXJpYXRpb24gPSBfcmVmMi52YXJpYXRpb24sXG4gICAgICBvZmZzZXRzID0gX3JlZjIub2Zmc2V0cyxcbiAgICAgIHBvc2l0aW9uID0gX3JlZjIucG9zaXRpb24sXG4gICAgICBncHVBY2NlbGVyYXRpb24gPSBfcmVmMi5ncHVBY2NlbGVyYXRpb24sXG4gICAgICBhZGFwdGl2ZSA9IF9yZWYyLmFkYXB0aXZlLFxuICAgICAgcm91bmRPZmZzZXRzID0gX3JlZjIucm91bmRPZmZzZXRzO1xuXG4gIHZhciBfcmVmMyA9IHJvdW5kT2Zmc2V0cyA9PT0gdHJ1ZSA/IHJvdW5kT2Zmc2V0c0J5RFBSKG9mZnNldHMpIDogdHlwZW9mIHJvdW5kT2Zmc2V0cyA9PT0gJ2Z1bmN0aW9uJyA/IHJvdW5kT2Zmc2V0cyhvZmZzZXRzKSA6IG9mZnNldHMsXG4gICAgICBfcmVmMyR4ID0gX3JlZjMueCxcbiAgICAgIHggPSBfcmVmMyR4ID09PSB2b2lkIDAgPyAwIDogX3JlZjMkeCxcbiAgICAgIF9yZWYzJHkgPSBfcmVmMy55LFxuICAgICAgeSA9IF9yZWYzJHkgPT09IHZvaWQgMCA/IDAgOiBfcmVmMyR5O1xuXG4gIHZhciBoYXNYID0gb2Zmc2V0cy5oYXNPd25Qcm9wZXJ0eSgneCcpO1xuICB2YXIgaGFzWSA9IG9mZnNldHMuaGFzT3duUHJvcGVydHkoJ3knKTtcbiAgdmFyIHNpZGVYID0gbGVmdDtcbiAgdmFyIHNpZGVZID0gdG9wO1xuICB2YXIgd2luID0gd2luZG93O1xuXG4gIGlmIChhZGFwdGl2ZSkge1xuICAgIHZhciBvZmZzZXRQYXJlbnQgPSBnZXRPZmZzZXRQYXJlbnQocG9wcGVyKTtcbiAgICB2YXIgaGVpZ2h0UHJvcCA9ICdjbGllbnRIZWlnaHQnO1xuICAgIHZhciB3aWR0aFByb3AgPSAnY2xpZW50V2lkdGgnO1xuXG4gICAgaWYgKG9mZnNldFBhcmVudCA9PT0gZ2V0V2luZG93KHBvcHBlcikpIHtcbiAgICAgIG9mZnNldFBhcmVudCA9IGdldERvY3VtZW50RWxlbWVudChwb3BwZXIpO1xuXG4gICAgICBpZiAoZ2V0Q29tcHV0ZWRTdHlsZShvZmZzZXRQYXJlbnQpLnBvc2l0aW9uICE9PSAnc3RhdGljJyAmJiBwb3NpdGlvbiA9PT0gJ2Fic29sdXRlJykge1xuICAgICAgICBoZWlnaHRQcm9wID0gJ3Njcm9sbEhlaWdodCc7XG4gICAgICAgIHdpZHRoUHJvcCA9ICdzY3JvbGxXaWR0aCc7XG4gICAgICB9XG4gICAgfSAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1jYXN0XTogZm9yY2UgdHlwZSByZWZpbmVtZW50LCB3ZSBjb21wYXJlIG9mZnNldFBhcmVudCB3aXRoIHdpbmRvdyBhYm92ZSwgYnV0IEZsb3cgZG9lc24ndCBkZXRlY3QgaXRcblxuXG4gICAgb2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50O1xuXG4gICAgaWYgKHBsYWNlbWVudCA9PT0gdG9wIHx8IChwbGFjZW1lbnQgPT09IGxlZnQgfHwgcGxhY2VtZW50ID09PSByaWdodCkgJiYgdmFyaWF0aW9uID09PSBlbmQpIHtcbiAgICAgIHNpZGVZID0gYm90dG9tOyAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cblxuICAgICAgeSAtPSBvZmZzZXRQYXJlbnRbaGVpZ2h0UHJvcF0gLSBwb3BwZXJSZWN0LmhlaWdodDtcbiAgICAgIHkgKj0gZ3B1QWNjZWxlcmF0aW9uID8gMSA6IC0xO1xuICAgIH1cblxuICAgIGlmIChwbGFjZW1lbnQgPT09IGxlZnQgfHwgKHBsYWNlbWVudCA9PT0gdG9wIHx8IHBsYWNlbWVudCA9PT0gYm90dG9tKSAmJiB2YXJpYXRpb24gPT09IGVuZCkge1xuICAgICAgc2lkZVggPSByaWdodDsgLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddXG5cbiAgICAgIHggLT0gb2Zmc2V0UGFyZW50W3dpZHRoUHJvcF0gLSBwb3BwZXJSZWN0LndpZHRoO1xuICAgICAgeCAqPSBncHVBY2NlbGVyYXRpb24gPyAxIDogLTE7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNvbW1vblN0eWxlcyA9IE9iamVjdC5hc3NpZ24oe1xuICAgIHBvc2l0aW9uOiBwb3NpdGlvblxuICB9LCBhZGFwdGl2ZSAmJiB1bnNldFNpZGVzKTtcblxuICBpZiAoZ3B1QWNjZWxlcmF0aW9uKSB7XG4gICAgdmFyIF9PYmplY3QkYXNzaWduO1xuXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGNvbW1vblN0eWxlcywgKF9PYmplY3QkYXNzaWduID0ge30sIF9PYmplY3QkYXNzaWduW3NpZGVZXSA9IGhhc1kgPyAnMCcgOiAnJywgX09iamVjdCRhc3NpZ25bc2lkZVhdID0gaGFzWCA/ICcwJyA6ICcnLCBfT2JqZWN0JGFzc2lnbi50cmFuc2Zvcm0gPSAod2luLmRldmljZVBpeGVsUmF0aW8gfHwgMSkgPD0gMSA/IFwidHJhbnNsYXRlKFwiICsgeCArIFwicHgsIFwiICsgeSArIFwicHgpXCIgOiBcInRyYW5zbGF0ZTNkKFwiICsgeCArIFwicHgsIFwiICsgeSArIFwicHgsIDApXCIsIF9PYmplY3QkYXNzaWduKSk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgY29tbW9uU3R5bGVzLCAoX09iamVjdCRhc3NpZ24yID0ge30sIF9PYmplY3QkYXNzaWduMltzaWRlWV0gPSBoYXNZID8geSArIFwicHhcIiA6ICcnLCBfT2JqZWN0JGFzc2lnbjJbc2lkZVhdID0gaGFzWCA/IHggKyBcInB4XCIgOiAnJywgX09iamVjdCRhc3NpZ24yLnRyYW5zZm9ybSA9ICcnLCBfT2JqZWN0JGFzc2lnbjIpKTtcbn1cblxuZnVuY3Rpb24gY29tcHV0ZVN0eWxlcyhfcmVmNCkge1xuICB2YXIgc3RhdGUgPSBfcmVmNC5zdGF0ZSxcbiAgICAgIG9wdGlvbnMgPSBfcmVmNC5vcHRpb25zO1xuICB2YXIgX29wdGlvbnMkZ3B1QWNjZWxlcmF0ID0gb3B0aW9ucy5ncHVBY2NlbGVyYXRpb24sXG4gICAgICBncHVBY2NlbGVyYXRpb24gPSBfb3B0aW9ucyRncHVBY2NlbGVyYXQgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRncHVBY2NlbGVyYXQsXG4gICAgICBfb3B0aW9ucyRhZGFwdGl2ZSA9IG9wdGlvbnMuYWRhcHRpdmUsXG4gICAgICBhZGFwdGl2ZSA9IF9vcHRpb25zJGFkYXB0aXZlID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkYWRhcHRpdmUsXG4gICAgICBfb3B0aW9ucyRyb3VuZE9mZnNldHMgPSBvcHRpb25zLnJvdW5kT2Zmc2V0cyxcbiAgICAgIHJvdW5kT2Zmc2V0cyA9IF9vcHRpb25zJHJvdW5kT2Zmc2V0cyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJHJvdW5kT2Zmc2V0cztcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgdmFyIHRyYW5zaXRpb25Qcm9wZXJ0eSA9IGdldENvbXB1dGVkU3R5bGUoc3RhdGUuZWxlbWVudHMucG9wcGVyKS50cmFuc2l0aW9uUHJvcGVydHkgfHwgJyc7XG5cbiAgICBpZiAoYWRhcHRpdmUgJiYgWyd0cmFuc2Zvcm0nLCAndG9wJywgJ3JpZ2h0JywgJ2JvdHRvbScsICdsZWZ0J10uc29tZShmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICAgIHJldHVybiB0cmFuc2l0aW9uUHJvcGVydHkuaW5kZXhPZihwcm9wZXJ0eSkgPj0gMDtcbiAgICB9KSkge1xuICAgICAgY29uc29sZS53YXJuKFsnUG9wcGVyOiBEZXRlY3RlZCBDU1MgdHJhbnNpdGlvbnMgb24gYXQgbGVhc3Qgb25lIG9mIHRoZSBmb2xsb3dpbmcnLCAnQ1NTIHByb3BlcnRpZXM6IFwidHJhbnNmb3JtXCIsIFwidG9wXCIsIFwicmlnaHRcIiwgXCJib3R0b21cIiwgXCJsZWZ0XCIuJywgJ1xcblxcbicsICdEaXNhYmxlIHRoZSBcImNvbXB1dGVTdHlsZXNcIiBtb2RpZmllclxcJ3MgYGFkYXB0aXZlYCBvcHRpb24gdG8gYWxsb3cnLCAnZm9yIHNtb290aCB0cmFuc2l0aW9ucywgb3IgcmVtb3ZlIHRoZXNlIHByb3BlcnRpZXMgZnJvbSB0aGUgQ1NTJywgJ3RyYW5zaXRpb24gZGVjbGFyYXRpb24gb24gdGhlIHBvcHBlciBlbGVtZW50IGlmIG9ubHkgdHJhbnNpdGlvbmluZycsICdvcGFjaXR5IG9yIGJhY2tncm91bmQtY29sb3IgZm9yIGV4YW1wbGUuJywgJ1xcblxcbicsICdXZSByZWNvbW1lbmQgdXNpbmcgdGhlIHBvcHBlciBlbGVtZW50IGFzIGEgd3JhcHBlciBhcm91bmQgYW4gaW5uZXInLCAnZWxlbWVudCB0aGF0IGNhbiBoYXZlIGFueSBDU1MgcHJvcGVydHkgdHJhbnNpdGlvbmVkIGZvciBhbmltYXRpb25zLiddLmpvaW4oJyAnKSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNvbW1vblN0eWxlcyA9IHtcbiAgICBwbGFjZW1lbnQ6IGdldEJhc2VQbGFjZW1lbnQoc3RhdGUucGxhY2VtZW50KSxcbiAgICB2YXJpYXRpb246IGdldFZhcmlhdGlvbihzdGF0ZS5wbGFjZW1lbnQpLFxuICAgIHBvcHBlcjogc3RhdGUuZWxlbWVudHMucG9wcGVyLFxuICAgIHBvcHBlclJlY3Q6IHN0YXRlLnJlY3RzLnBvcHBlcixcbiAgICBncHVBY2NlbGVyYXRpb246IGdwdUFjY2VsZXJhdGlvblxuICB9O1xuXG4gIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMgIT0gbnVsbCkge1xuICAgIHN0YXRlLnN0eWxlcy5wb3BwZXIgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5zdHlsZXMucG9wcGVyLCBtYXBUb1N0eWxlcyhPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIHtcbiAgICAgIG9mZnNldHM6IHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cyxcbiAgICAgIHBvc2l0aW9uOiBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5LFxuICAgICAgYWRhcHRpdmU6IGFkYXB0aXZlLFxuICAgICAgcm91bmRPZmZzZXRzOiByb3VuZE9mZnNldHNcbiAgICB9KSkpO1xuICB9XG5cbiAgaWYgKHN0YXRlLm1vZGlmaWVyc0RhdGEuYXJyb3cgIT0gbnVsbCkge1xuICAgIHN0YXRlLnN0eWxlcy5hcnJvdyA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnN0eWxlcy5hcnJvdywgbWFwVG9TdHlsZXMoT2JqZWN0LmFzc2lnbih7fSwgY29tbW9uU3R5bGVzLCB7XG4gICAgICBvZmZzZXRzOiBzdGF0ZS5tb2RpZmllcnNEYXRhLmFycm93LFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBhZGFwdGl2ZTogZmFsc2UsXG4gICAgICByb3VuZE9mZnNldHM6IHJvdW5kT2Zmc2V0c1xuICAgIH0pKSk7XG4gIH1cblxuICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyLCB7XG4gICAgJ2RhdGEtcG9wcGVyLXBsYWNlbWVudCc6IHN0YXRlLnBsYWNlbWVudFxuICB9KTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2NvbXB1dGVTdHlsZXMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ2JlZm9yZVdyaXRlJyxcbiAgZm46IGNvbXB1dGVTdHlsZXMsXG4gIGRhdGE6IHt9XG59OyIsICJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0V2luZG93LmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxudmFyIHBhc3NpdmUgPSB7XG4gIHBhc3NpdmU6IHRydWVcbn07XG5cbmZ1bmN0aW9uIGVmZmVjdChfcmVmKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsXG4gICAgICBpbnN0YW5jZSA9IF9yZWYuaW5zdGFuY2UsXG4gICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zO1xuICB2YXIgX29wdGlvbnMkc2Nyb2xsID0gb3B0aW9ucy5zY3JvbGwsXG4gICAgICBzY3JvbGwgPSBfb3B0aW9ucyRzY3JvbGwgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRzY3JvbGwsXG4gICAgICBfb3B0aW9ucyRyZXNpemUgPSBvcHRpb25zLnJlc2l6ZSxcbiAgICAgIHJlc2l6ZSA9IF9vcHRpb25zJHJlc2l6ZSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJHJlc2l6ZTtcbiAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdyhzdGF0ZS5lbGVtZW50cy5wb3BwZXIpO1xuICB2YXIgc2Nyb2xsUGFyZW50cyA9IFtdLmNvbmNhdChzdGF0ZS5zY3JvbGxQYXJlbnRzLnJlZmVyZW5jZSwgc3RhdGUuc2Nyb2xsUGFyZW50cy5wb3BwZXIpO1xuXG4gIGlmIChzY3JvbGwpIHtcbiAgICBzY3JvbGxQYXJlbnRzLmZvckVhY2goZnVuY3Rpb24gKHNjcm9sbFBhcmVudCkge1xuICAgICAgc2Nyb2xsUGFyZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gICAgfSk7XG4gIH1cblxuICBpZiAocmVzaXplKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGlmIChzY3JvbGwpIHtcbiAgICAgIHNjcm9sbFBhcmVudHMuZm9yRWFjaChmdW5jdGlvbiAoc2Nyb2xsUGFyZW50KSB7XG4gICAgICAgIHNjcm9sbFBhcmVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBpbnN0YW5jZS51cGRhdGUsIHBhc3NpdmUpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHJlc2l6ZSkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gICAgfVxuICB9O1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnZXZlbnRMaXN0ZW5lcnMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ3dyaXRlJyxcbiAgZm46IGZ1bmN0aW9uIGZuKCkge30sXG4gIGVmZmVjdDogZWZmZWN0LFxuICBkYXRhOiB7fVxufTsiLCAidmFyIGhhc2ggPSB7XG4gIGxlZnQ6ICdyaWdodCcsXG4gIHJpZ2h0OiAnbGVmdCcsXG4gIGJvdHRvbTogJ3RvcCcsXG4gIHRvcDogJ2JvdHRvbSdcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRPcHBvc2l0ZVBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5yZXBsYWNlKC9sZWZ0fHJpZ2h0fGJvdHRvbXx0b3AvZywgZnVuY3Rpb24gKG1hdGNoZWQpIHtcbiAgICByZXR1cm4gaGFzaFttYXRjaGVkXTtcbiAgfSk7XG59IiwgInZhciBoYXNoID0ge1xuICBzdGFydDogJ2VuZCcsXG4gIGVuZDogJ3N0YXJ0J1xufTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnJlcGxhY2UoL3N0YXJ0fGVuZC9nLCBmdW5jdGlvbiAobWF0Y2hlZCkge1xuICAgIHJldHVybiBoYXNoW21hdGNoZWRdO1xuICB9KTtcbn0iLCAiaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi9nZXRXaW5kb3cuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFdpbmRvd1Njcm9sbChub2RlKSB7XG4gIHZhciB3aW4gPSBnZXRXaW5kb3cobm9kZSk7XG4gIHZhciBzY3JvbGxMZWZ0ID0gd2luLnBhZ2VYT2Zmc2V0O1xuICB2YXIgc2Nyb2xsVG9wID0gd2luLnBhZ2VZT2Zmc2V0O1xuICByZXR1cm4ge1xuICAgIHNjcm9sbExlZnQ6IHNjcm9sbExlZnQsXG4gICAgc2Nyb2xsVG9wOiBzY3JvbGxUb3BcbiAgfTtcbn0iLCAiaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0V2luZG93U2Nyb2xsQmFyWChlbGVtZW50KSB7XG4gIC8vIElmIDxodG1sPiBoYXMgYSBDU1Mgd2lkdGggZ3JlYXRlciB0aGFuIHRoZSB2aWV3cG9ydCwgdGhlbiB0aGlzIHdpbGwgYmVcbiAgLy8gaW5jb3JyZWN0IGZvciBSVEwuXG4gIC8vIFBvcHBlciAxIGlzIGJyb2tlbiBpbiB0aGlzIGNhc2UgYW5kIG5ldmVyIGhhZCBhIGJ1ZyByZXBvcnQgc28gbGV0J3MgYXNzdW1lXG4gIC8vIGl0J3Mgbm90IGFuIGlzc3VlLiBJIGRvbid0IHRoaW5rIGFueW9uZSBldmVyIHNwZWNpZmllcyB3aWR0aCBvbiA8aHRtbD5cbiAgLy8gYW55d2F5LlxuICAvLyBCcm93c2VycyB3aGVyZSB0aGUgbGVmdCBzY3JvbGxiYXIgZG9lc24ndCBjYXVzZSBhbiBpc3N1ZSByZXBvcnQgYDBgIGZvclxuICAvLyB0aGlzIChlLmcuIEVkZ2UgMjAxOSwgSUUxMSwgU2FmYXJpKVxuICByZXR1cm4gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSkubGVmdCArIGdldFdpbmRvd1Njcm9sbChlbGVtZW50KS5zY3JvbGxMZWZ0O1xufSIsICJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRXaW5kb3dTY3JvbGxCYXJYIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbEJhclguanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFZpZXdwb3J0UmVjdChlbGVtZW50KSB7XG4gIHZhciB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIHZhciBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICB2YXIgdmlzdWFsVmlld3BvcnQgPSB3aW4udmlzdWFsVmlld3BvcnQ7XG4gIHZhciB3aWR0aCA9IGh0bWwuY2xpZW50V2lkdGg7XG4gIHZhciBoZWlnaHQgPSBodG1sLmNsaWVudEhlaWdodDtcbiAgdmFyIHggPSAwO1xuICB2YXIgeSA9IDA7IC8vIE5COiBUaGlzIGlzbid0IHN1cHBvcnRlZCBvbiBpT1MgPD0gMTIuIElmIHRoZSBrZXlib2FyZCBpcyBvcGVuLCB0aGUgcG9wcGVyXG4gIC8vIGNhbiBiZSBvYnNjdXJlZCB1bmRlcm5lYXRoIGl0LlxuICAvLyBBbHNvLCBgaHRtbC5jbGllbnRIZWlnaHRgIGFkZHMgdGhlIGJvdHRvbSBiYXIgaGVpZ2h0IGluIFNhZmFyaSBpT1MsIGV2ZW5cbiAgLy8gaWYgaXQgaXNuJ3Qgb3Blbiwgc28gaWYgdGhpcyBpc24ndCBhdmFpbGFibGUsIHRoZSBwb3BwZXIgd2lsbCBiZSBkZXRlY3RlZFxuICAvLyB0byBvdmVyZmxvdyB0aGUgYm90dG9tIG9mIHRoZSBzY3JlZW4gdG9vIGVhcmx5LlxuXG4gIGlmICh2aXN1YWxWaWV3cG9ydCkge1xuICAgIHdpZHRoID0gdmlzdWFsVmlld3BvcnQud2lkdGg7XG4gICAgaGVpZ2h0ID0gdmlzdWFsVmlld3BvcnQuaGVpZ2h0OyAvLyBVc2VzIExheW91dCBWaWV3cG9ydCAobGlrZSBDaHJvbWU7IFNhZmFyaSBkb2VzIG5vdCBjdXJyZW50bHkpXG4gICAgLy8gSW4gQ2hyb21lLCBpdCByZXR1cm5zIGEgdmFsdWUgdmVyeSBjbG9zZSB0byAwICgrLy0pIGJ1dCBjb250YWlucyByb3VuZGluZ1xuICAgIC8vIGVycm9ycyBkdWUgdG8gZmxvYXRpbmcgcG9pbnQgbnVtYmVycywgc28gd2UgbmVlZCB0byBjaGVjayBwcmVjaXNpb24uXG4gICAgLy8gU2FmYXJpIHJldHVybnMgYSBudW1iZXIgPD0gMCwgdXN1YWxseSA8IC0xIHdoZW4gcGluY2gtem9vbWVkXG4gICAgLy8gRmVhdHVyZSBkZXRlY3Rpb24gZmFpbHMgaW4gbW9iaWxlIGVtdWxhdGlvbiBtb2RlIGluIENocm9tZS5cbiAgICAvLyBNYXRoLmFicyh3aW4uaW5uZXJXaWR0aCAvIHZpc3VhbFZpZXdwb3J0LnNjYWxlIC0gdmlzdWFsVmlld3BvcnQud2lkdGgpIDxcbiAgICAvLyAwLjAwMVxuICAgIC8vIEZhbGxiYWNrIGhlcmU6IFwiTm90IFNhZmFyaVwiIHVzZXJBZ2VudFxuXG4gICAgaWYgKCEvXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgICB4ID0gdmlzdWFsVmlld3BvcnQub2Zmc2V0TGVmdDtcbiAgICAgIHkgPSB2aXN1YWxWaWV3cG9ydC5vZmZzZXRUb3A7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgeDogeCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCksXG4gICAgeTogeVxuICB9O1xufSIsICJpbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldENvbXB1dGVkU3R5bGUgZnJvbSBcIi4vZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IGdldFdpbmRvd1Njcm9sbEJhclggZnJvbSBcIi4vZ2V0V2luZG93U2Nyb2xsQmFyWC5qc1wiO1xuaW1wb3J0IGdldFdpbmRvd1Njcm9sbCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGwuanNcIjtcbmltcG9ydCB7IG1heCB9IGZyb20gXCIuLi91dGlscy9tYXRoLmpzXCI7IC8vIEdldHMgdGhlIGVudGlyZSBzaXplIG9mIHRoZSBzY3JvbGxhYmxlIGRvY3VtZW50IGFyZWEsIGV2ZW4gZXh0ZW5kaW5nIG91dHNpZGVcbi8vIG9mIHRoZSBgPGh0bWw+YCBhbmQgYDxib2R5PmAgcmVjdCBib3VuZHMgaWYgaG9yaXpvbnRhbGx5IHNjcm9sbGFibGVcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RG9jdW1lbnRSZWN0KGVsZW1lbnQpIHtcbiAgdmFyIF9lbGVtZW50JG93bmVyRG9jdW1lbjtcblxuICB2YXIgaHRtbCA9IGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KTtcbiAgdmFyIHdpblNjcm9sbCA9IGdldFdpbmRvd1Njcm9sbChlbGVtZW50KTtcbiAgdmFyIGJvZHkgPSAoX2VsZW1lbnQkb3duZXJEb2N1bWVuID0gZWxlbWVudC5vd25lckRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2VsZW1lbnQkb3duZXJEb2N1bWVuLmJvZHk7XG4gIHZhciB3aWR0aCA9IG1heChodG1sLnNjcm9sbFdpZHRoLCBodG1sLmNsaWVudFdpZHRoLCBib2R5ID8gYm9keS5zY3JvbGxXaWR0aCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCk7XG4gIHZhciBoZWlnaHQgPSBtYXgoaHRtbC5zY3JvbGxIZWlnaHQsIGh0bWwuY2xpZW50SGVpZ2h0LCBib2R5ID8gYm9keS5zY3JvbGxIZWlnaHQgOiAwLCBib2R5ID8gYm9keS5jbGllbnRIZWlnaHQgOiAwKTtcbiAgdmFyIHggPSAtd2luU2Nyb2xsLnNjcm9sbExlZnQgKyBnZXRXaW5kb3dTY3JvbGxCYXJYKGVsZW1lbnQpO1xuICB2YXIgeSA9IC13aW5TY3JvbGwuc2Nyb2xsVG9wO1xuXG4gIGlmIChnZXRDb21wdXRlZFN0eWxlKGJvZHkgfHwgaHRtbCkuZGlyZWN0aW9uID09PSAncnRsJykge1xuICAgIHggKz0gbWF4KGh0bWwuY2xpZW50V2lkdGgsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCkgLSB3aWR0aDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0LFxuICAgIHg6IHgsXG4gICAgeTogeVxuICB9O1xufSIsICJpbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9nZXRDb21wdXRlZFN0eWxlLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1Njcm9sbFBhcmVudChlbGVtZW50KSB7XG4gIC8vIEZpcmVmb3ggd2FudHMgdXMgdG8gY2hlY2sgYC14YCBhbmQgYC15YCB2YXJpYXRpb25zIGFzIHdlbGxcbiAgdmFyIF9nZXRDb21wdXRlZFN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KSxcbiAgICAgIG92ZXJmbG93ID0gX2dldENvbXB1dGVkU3R5bGUub3ZlcmZsb3csXG4gICAgICBvdmVyZmxvd1ggPSBfZ2V0Q29tcHV0ZWRTdHlsZS5vdmVyZmxvd1gsXG4gICAgICBvdmVyZmxvd1kgPSBfZ2V0Q29tcHV0ZWRTdHlsZS5vdmVyZmxvd1k7XG5cbiAgcmV0dXJuIC9hdXRvfHNjcm9sbHxvdmVybGF5fGhpZGRlbi8udGVzdChvdmVyZmxvdyArIG92ZXJmbG93WSArIG92ZXJmbG93WCk7XG59IiwgImltcG9ydCBnZXRQYXJlbnROb2RlIGZyb20gXCIuL2dldFBhcmVudE5vZGUuanNcIjtcbmltcG9ydCBpc1Njcm9sbFBhcmVudCBmcm9tIFwiLi9pc1Njcm9sbFBhcmVudC5qc1wiO1xuaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0U2Nyb2xsUGFyZW50KG5vZGUpIHtcbiAgaWYgKFsnaHRtbCcsICdib2R5JywgJyNkb2N1bWVudCddLmluZGV4T2YoZ2V0Tm9kZU5hbWUobm9kZSkpID49IDApIHtcbiAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBhc3N1bWUgYm9keSBpcyBhbHdheXMgYXZhaWxhYmxlXG4gICAgcmV0dXJuIG5vZGUub3duZXJEb2N1bWVudC5ib2R5O1xuICB9XG5cbiAgaWYgKGlzSFRNTEVsZW1lbnQobm9kZSkgJiYgaXNTY3JvbGxQYXJlbnQobm9kZSkpIHtcbiAgICByZXR1cm4gbm9kZTtcbiAgfVxuXG4gIHJldHVybiBnZXRTY3JvbGxQYXJlbnQoZ2V0UGFyZW50Tm9kZShub2RlKSk7XG59IiwgImltcG9ydCBnZXRTY3JvbGxQYXJlbnQgZnJvbSBcIi4vZ2V0U2Nyb2xsUGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0UGFyZW50Tm9kZSBmcm9tIFwiLi9nZXRQYXJlbnROb2RlLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuaW1wb3J0IGlzU2Nyb2xsUGFyZW50IGZyb20gXCIuL2lzU2Nyb2xsUGFyZW50LmpzXCI7XG4vKlxuZ2l2ZW4gYSBET00gZWxlbWVudCwgcmV0dXJuIHRoZSBsaXN0IG9mIGFsbCBzY3JvbGwgcGFyZW50cywgdXAgdGhlIGxpc3Qgb2YgYW5jZXNvcnNcbnVudGlsIHdlIGdldCB0byB0aGUgdG9wIHdpbmRvdyBvYmplY3QuIFRoaXMgbGlzdCBpcyB3aGF0IHdlIGF0dGFjaCBzY3JvbGwgbGlzdGVuZXJzXG50bywgYmVjYXVzZSBpZiBhbnkgb2YgdGhlc2UgcGFyZW50IGVsZW1lbnRzIHNjcm9sbCwgd2UnbGwgbmVlZCB0byByZS1jYWxjdWxhdGUgdGhlXG5yZWZlcmVuY2UgZWxlbWVudCdzIHBvc2l0aW9uLlxuKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbGlzdFNjcm9sbFBhcmVudHMoZWxlbWVudCwgbGlzdCkge1xuICB2YXIgX2VsZW1lbnQkb3duZXJEb2N1bWVuO1xuXG4gIGlmIChsaXN0ID09PSB2b2lkIDApIHtcbiAgICBsaXN0ID0gW107XG4gIH1cblxuICB2YXIgc2Nyb2xsUGFyZW50ID0gZ2V0U2Nyb2xsUGFyZW50KGVsZW1lbnQpO1xuICB2YXIgaXNCb2R5ID0gc2Nyb2xsUGFyZW50ID09PSAoKF9lbGVtZW50JG93bmVyRG9jdW1lbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lbGVtZW50JG93bmVyRG9jdW1lbi5ib2R5KTtcbiAgdmFyIHdpbiA9IGdldFdpbmRvdyhzY3JvbGxQYXJlbnQpO1xuICB2YXIgdGFyZ2V0ID0gaXNCb2R5ID8gW3dpbl0uY29uY2F0KHdpbi52aXN1YWxWaWV3cG9ydCB8fCBbXSwgaXNTY3JvbGxQYXJlbnQoc2Nyb2xsUGFyZW50KSA/IHNjcm9sbFBhcmVudCA6IFtdKSA6IHNjcm9sbFBhcmVudDtcbiAgdmFyIHVwZGF0ZWRMaXN0ID0gbGlzdC5jb25jYXQodGFyZ2V0KTtcbiAgcmV0dXJuIGlzQm9keSA/IHVwZGF0ZWRMaXN0IDogLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtY2FsbF06IGlzQm9keSB0ZWxscyB1cyB0YXJnZXQgd2lsbCBiZSBhbiBIVE1MRWxlbWVudCBoZXJlXG4gIHVwZGF0ZWRMaXN0LmNvbmNhdChsaXN0U2Nyb2xsUGFyZW50cyhnZXRQYXJlbnROb2RlKHRhcmdldCkpKTtcbn0iLCAiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVjdFRvQ2xpZW50UmVjdChyZWN0KSB7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCByZWN0LCB7XG4gICAgbGVmdDogcmVjdC54LFxuICAgIHRvcDogcmVjdC55LFxuICAgIHJpZ2h0OiByZWN0LnggKyByZWN0LndpZHRoLFxuICAgIGJvdHRvbTogcmVjdC55ICsgcmVjdC5oZWlnaHRcbiAgfSk7XG59IiwgImltcG9ydCB7IHZpZXdwb3J0IH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0Vmlld3BvcnRSZWN0IGZyb20gXCIuL2dldFZpZXdwb3J0UmVjdC5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50UmVjdCBmcm9tIFwiLi9nZXREb2N1bWVudFJlY3QuanNcIjtcbmltcG9ydCBsaXN0U2Nyb2xsUGFyZW50cyBmcm9tIFwiLi9saXN0U2Nyb2xsUGFyZW50cy5qc1wiO1xuaW1wb3J0IGdldE9mZnNldFBhcmVudCBmcm9tIFwiLi9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9nZXRDb21wdXRlZFN0eWxlLmpzXCI7XG5pbXBvcnQgeyBpc0VsZW1lbnQsIGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IGdldFBhcmVudE5vZGUgZnJvbSBcIi4vZ2V0UGFyZW50Tm9kZS5qc1wiO1xuaW1wb3J0IGNvbnRhaW5zIGZyb20gXCIuL2NvbnRhaW5zLmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCByZWN0VG9DbGllbnRSZWN0IGZyb20gXCIuLi91dGlscy9yZWN0VG9DbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgeyBtYXgsIG1pbiB9IGZyb20gXCIuLi91dGlscy9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIGdldElubmVyQm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQpIHtcbiAgdmFyIHJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCk7XG4gIHJlY3QudG9wID0gcmVjdC50b3AgKyBlbGVtZW50LmNsaWVudFRvcDtcbiAgcmVjdC5sZWZ0ID0gcmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRMZWZ0O1xuICByZWN0LmJvdHRvbSA9IHJlY3QudG9wICsgZWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gIHJlY3QucmlnaHQgPSByZWN0LmxlZnQgKyBlbGVtZW50LmNsaWVudFdpZHRoO1xuICByZWN0LndpZHRoID0gZWxlbWVudC5jbGllbnRXaWR0aDtcbiAgcmVjdC5oZWlnaHQgPSBlbGVtZW50LmNsaWVudEhlaWdodDtcbiAgcmVjdC54ID0gcmVjdC5sZWZ0O1xuICByZWN0LnkgPSByZWN0LnRvcDtcbiAgcmV0dXJuIHJlY3Q7XG59XG5cbmZ1bmN0aW9uIGdldENsaWVudFJlY3RGcm9tTWl4ZWRUeXBlKGVsZW1lbnQsIGNsaXBwaW5nUGFyZW50KSB7XG4gIHJldHVybiBjbGlwcGluZ1BhcmVudCA9PT0gdmlld3BvcnQgPyByZWN0VG9DbGllbnRSZWN0KGdldFZpZXdwb3J0UmVjdChlbGVtZW50KSkgOiBpc0hUTUxFbGVtZW50KGNsaXBwaW5nUGFyZW50KSA/IGdldElubmVyQm91bmRpbmdDbGllbnRSZWN0KGNsaXBwaW5nUGFyZW50KSA6IHJlY3RUb0NsaWVudFJlY3QoZ2V0RG9jdW1lbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSkpO1xufSAvLyBBIFwiY2xpcHBpbmcgcGFyZW50XCIgaXMgYW4gb3ZlcmZsb3dhYmxlIGNvbnRhaW5lciB3aXRoIHRoZSBjaGFyYWN0ZXJpc3RpYyBvZlxuLy8gY2xpcHBpbmcgKG9yIGhpZGluZykgb3ZlcmZsb3dpbmcgZWxlbWVudHMgd2l0aCBhIHBvc2l0aW9uIGRpZmZlcmVudCBmcm9tXG4vLyBgaW5pdGlhbGBcblxuXG5mdW5jdGlvbiBnZXRDbGlwcGluZ1BhcmVudHMoZWxlbWVudCkge1xuICB2YXIgY2xpcHBpbmdQYXJlbnRzID0gbGlzdFNjcm9sbFBhcmVudHMoZ2V0UGFyZW50Tm9kZShlbGVtZW50KSk7XG4gIHZhciBjYW5Fc2NhcGVDbGlwcGluZyA9IFsnYWJzb2x1dGUnLCAnZml4ZWQnXS5pbmRleE9mKGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucG9zaXRpb24pID49IDA7XG4gIHZhciBjbGlwcGVyRWxlbWVudCA9IGNhbkVzY2FwZUNsaXBwaW5nICYmIGlzSFRNTEVsZW1lbnQoZWxlbWVudCkgPyBnZXRPZmZzZXRQYXJlbnQoZWxlbWVudCkgOiBlbGVtZW50O1xuXG4gIGlmICghaXNFbGVtZW50KGNsaXBwZXJFbGVtZW50KSkge1xuICAgIHJldHVybiBbXTtcbiAgfSAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZmxvdy9pc3N1ZXMvMTQxNFxuXG5cbiAgcmV0dXJuIGNsaXBwaW5nUGFyZW50cy5maWx0ZXIoZnVuY3Rpb24gKGNsaXBwaW5nUGFyZW50KSB7XG4gICAgcmV0dXJuIGlzRWxlbWVudChjbGlwcGluZ1BhcmVudCkgJiYgY29udGFpbnMoY2xpcHBpbmdQYXJlbnQsIGNsaXBwZXJFbGVtZW50KSAmJiBnZXROb2RlTmFtZShjbGlwcGluZ1BhcmVudCkgIT09ICdib2R5JztcbiAgfSk7XG59IC8vIEdldHMgdGhlIG1heGltdW0gYXJlYSB0aGF0IHRoZSBlbGVtZW50IGlzIHZpc2libGUgaW4gZHVlIHRvIGFueSBudW1iZXIgb2Zcbi8vIGNsaXBwaW5nIHBhcmVudHNcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRDbGlwcGluZ1JlY3QoZWxlbWVudCwgYm91bmRhcnksIHJvb3RCb3VuZGFyeSkge1xuICB2YXIgbWFpbkNsaXBwaW5nUGFyZW50cyA9IGJvdW5kYXJ5ID09PSAnY2xpcHBpbmdQYXJlbnRzJyA/IGdldENsaXBwaW5nUGFyZW50cyhlbGVtZW50KSA6IFtdLmNvbmNhdChib3VuZGFyeSk7XG4gIHZhciBjbGlwcGluZ1BhcmVudHMgPSBbXS5jb25jYXQobWFpbkNsaXBwaW5nUGFyZW50cywgW3Jvb3RCb3VuZGFyeV0pO1xuICB2YXIgZmlyc3RDbGlwcGluZ1BhcmVudCA9IGNsaXBwaW5nUGFyZW50c1swXTtcbiAgdmFyIGNsaXBwaW5nUmVjdCA9IGNsaXBwaW5nUGFyZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjY1JlY3QsIGNsaXBwaW5nUGFyZW50KSB7XG4gICAgdmFyIHJlY3QgPSBnZXRDbGllbnRSZWN0RnJvbU1peGVkVHlwZShlbGVtZW50LCBjbGlwcGluZ1BhcmVudCk7XG4gICAgYWNjUmVjdC50b3AgPSBtYXgocmVjdC50b3AsIGFjY1JlY3QudG9wKTtcbiAgICBhY2NSZWN0LnJpZ2h0ID0gbWluKHJlY3QucmlnaHQsIGFjY1JlY3QucmlnaHQpO1xuICAgIGFjY1JlY3QuYm90dG9tID0gbWluKHJlY3QuYm90dG9tLCBhY2NSZWN0LmJvdHRvbSk7XG4gICAgYWNjUmVjdC5sZWZ0ID0gbWF4KHJlY3QubGVmdCwgYWNjUmVjdC5sZWZ0KTtcbiAgICByZXR1cm4gYWNjUmVjdDtcbiAgfSwgZ2V0Q2xpZW50UmVjdEZyb21NaXhlZFR5cGUoZWxlbWVudCwgZmlyc3RDbGlwcGluZ1BhcmVudCkpO1xuICBjbGlwcGluZ1JlY3Qud2lkdGggPSBjbGlwcGluZ1JlY3QucmlnaHQgLSBjbGlwcGluZ1JlY3QubGVmdDtcbiAgY2xpcHBpbmdSZWN0LmhlaWdodCA9IGNsaXBwaW5nUmVjdC5ib3R0b20gLSBjbGlwcGluZ1JlY3QudG9wO1xuICBjbGlwcGluZ1JlY3QueCA9IGNsaXBwaW5nUmVjdC5sZWZ0O1xuICBjbGlwcGluZ1JlY3QueSA9IGNsaXBwaW5nUmVjdC50b3A7XG4gIHJldHVybiBjbGlwcGluZ1JlY3Q7XG59IiwgImltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4vZ2V0VmFyaWF0aW9uLmpzXCI7XG5pbXBvcnQgZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50IGZyb20gXCIuL2dldE1haW5BeGlzRnJvbVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IHsgdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0LCBzdGFydCwgZW5kIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wdXRlT2Zmc2V0cyhfcmVmKSB7XG4gIHZhciByZWZlcmVuY2UgPSBfcmVmLnJlZmVyZW5jZSxcbiAgICAgIGVsZW1lbnQgPSBfcmVmLmVsZW1lbnQsXG4gICAgICBwbGFjZW1lbnQgPSBfcmVmLnBsYWNlbWVudDtcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBwbGFjZW1lbnQgPyBnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCkgOiBudWxsO1xuICB2YXIgdmFyaWF0aW9uID0gcGxhY2VtZW50ID8gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkgOiBudWxsO1xuICB2YXIgY29tbW9uWCA9IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoIC8gMiAtIGVsZW1lbnQud2lkdGggLyAyO1xuICB2YXIgY29tbW9uWSA9IHJlZmVyZW5jZS55ICsgcmVmZXJlbmNlLmhlaWdodCAvIDIgLSBlbGVtZW50LmhlaWdodCAvIDI7XG4gIHZhciBvZmZzZXRzO1xuXG4gIHN3aXRjaCAoYmFzZVBsYWNlbWVudCkge1xuICAgIGNhc2UgdG9wOlxuICAgICAgb2Zmc2V0cyA9IHtcbiAgICAgICAgeDogY29tbW9uWCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnkgLSBlbGVtZW50LmhlaWdodFxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBib3R0b206XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSArIHJlZmVyZW5jZS5oZWlnaHRcbiAgICAgIH07XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgcmlnaHQ6XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiByZWZlcmVuY2UueCArIHJlZmVyZW5jZS53aWR0aCxcbiAgICAgICAgeTogY29tbW9uWVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBsZWZ0OlxuICAgICAgb2Zmc2V0cyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLnggLSBlbGVtZW50LndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgb2Zmc2V0cyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLngsXG4gICAgICAgIHk6IHJlZmVyZW5jZS55XG4gICAgICB9O1xuICB9XG5cbiAgdmFyIG1haW5BeGlzID0gYmFzZVBsYWNlbWVudCA/IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChiYXNlUGxhY2VtZW50KSA6IG51bGw7XG5cbiAgaWYgKG1haW5BeGlzICE9IG51bGwpIHtcbiAgICB2YXIgbGVuID0gbWFpbkF4aXMgPT09ICd5JyA/ICdoZWlnaHQnIDogJ3dpZHRoJztcblxuICAgIHN3aXRjaCAodmFyaWF0aW9uKSB7XG4gICAgICBjYXNlIHN0YXJ0OlxuICAgICAgICBvZmZzZXRzW21haW5BeGlzXSA9IG9mZnNldHNbbWFpbkF4aXNdIC0gKHJlZmVyZW5jZVtsZW5dIC8gMiAtIGVsZW1lbnRbbGVuXSAvIDIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBlbmQ6XG4gICAgICAgIG9mZnNldHNbbWFpbkF4aXNdID0gb2Zmc2V0c1ttYWluQXhpc10gKyAocmVmZXJlbmNlW2xlbl0gLyAyIC0gZWxlbWVudFtsZW5dIC8gMik7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvZmZzZXRzO1xufSIsICJpbXBvcnQgZ2V0Q2xpcHBpbmdSZWN0IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0Q2xpcHBpbmdSZWN0LmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgY29tcHV0ZU9mZnNldHMgZnJvbSBcIi4vY29tcHV0ZU9mZnNldHMuanNcIjtcbmltcG9ydCByZWN0VG9DbGllbnRSZWN0IGZyb20gXCIuL3JlY3RUb0NsaWVudFJlY3QuanNcIjtcbmltcG9ydCB7IGNsaXBwaW5nUGFyZW50cywgcmVmZXJlbmNlLCBwb3BwZXIsIGJvdHRvbSwgdG9wLCByaWdodCwgYmFzZVBsYWNlbWVudHMsIHZpZXdwb3J0IH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgeyBpc0VsZW1lbnQgfSBmcm9tIFwiLi4vZG9tLXV0aWxzL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCBtZXJnZVBhZGRpbmdPYmplY3QgZnJvbSBcIi4vbWVyZ2VQYWRkaW5nT2JqZWN0LmpzXCI7XG5pbXBvcnQgZXhwYW5kVG9IYXNoTWFwIGZyb20gXCIuL2V4cGFuZFRvSGFzaE1hcC5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRldGVjdE92ZXJmbG93KHN0YXRlLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgX29wdGlvbnMkcGxhY2VtZW50ID0gX29wdGlvbnMucGxhY2VtZW50LFxuICAgICAgcGxhY2VtZW50ID0gX29wdGlvbnMkcGxhY2VtZW50ID09PSB2b2lkIDAgPyBzdGF0ZS5wbGFjZW1lbnQgOiBfb3B0aW9ucyRwbGFjZW1lbnQsXG4gICAgICBfb3B0aW9ucyRib3VuZGFyeSA9IF9vcHRpb25zLmJvdW5kYXJ5LFxuICAgICAgYm91bmRhcnkgPSBfb3B0aW9ucyRib3VuZGFyeSA9PT0gdm9pZCAwID8gY2xpcHBpbmdQYXJlbnRzIDogX29wdGlvbnMkYm91bmRhcnksXG4gICAgICBfb3B0aW9ucyRyb290Qm91bmRhcnkgPSBfb3B0aW9ucy5yb290Qm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBfb3B0aW9ucyRyb290Qm91bmRhcnkgPT09IHZvaWQgMCA/IHZpZXdwb3J0IDogX29wdGlvbnMkcm9vdEJvdW5kYXJ5LFxuICAgICAgX29wdGlvbnMkZWxlbWVudENvbnRlID0gX29wdGlvbnMuZWxlbWVudENvbnRleHQsXG4gICAgICBlbGVtZW50Q29udGV4dCA9IF9vcHRpb25zJGVsZW1lbnRDb250ZSA9PT0gdm9pZCAwID8gcG9wcGVyIDogX29wdGlvbnMkZWxlbWVudENvbnRlLFxuICAgICAgX29wdGlvbnMkYWx0Qm91bmRhcnkgPSBfb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gX29wdGlvbnMkYWx0Qm91bmRhcnkgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkYWx0Qm91bmRhcnksXG4gICAgICBfb3B0aW9ucyRwYWRkaW5nID0gX29wdGlvbnMucGFkZGluZyxcbiAgICAgIHBhZGRpbmcgPSBfb3B0aW9ucyRwYWRkaW5nID09PSB2b2lkIDAgPyAwIDogX29wdGlvbnMkcGFkZGluZztcbiAgdmFyIHBhZGRpbmdPYmplY3QgPSBtZXJnZVBhZGRpbmdPYmplY3QodHlwZW9mIHBhZGRpbmcgIT09ICdudW1iZXInID8gcGFkZGluZyA6IGV4cGFuZFRvSGFzaE1hcChwYWRkaW5nLCBiYXNlUGxhY2VtZW50cykpO1xuICB2YXIgYWx0Q29udGV4dCA9IGVsZW1lbnRDb250ZXh0ID09PSBwb3BwZXIgPyByZWZlcmVuY2UgOiBwb3BwZXI7XG4gIHZhciBwb3BwZXJSZWN0ID0gc3RhdGUucmVjdHMucG9wcGVyO1xuICB2YXIgZWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzW2FsdEJvdW5kYXJ5ID8gYWx0Q29udGV4dCA6IGVsZW1lbnRDb250ZXh0XTtcbiAgdmFyIGNsaXBwaW5nQ2xpZW50UmVjdCA9IGdldENsaXBwaW5nUmVjdChpc0VsZW1lbnQoZWxlbWVudCkgPyBlbGVtZW50IDogZWxlbWVudC5jb250ZXh0RWxlbWVudCB8fCBnZXREb2N1bWVudEVsZW1lbnQoc3RhdGUuZWxlbWVudHMucG9wcGVyKSwgYm91bmRhcnksIHJvb3RCb3VuZGFyeSk7XG4gIHZhciByZWZlcmVuY2VDbGllbnRSZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KHN0YXRlLmVsZW1lbnRzLnJlZmVyZW5jZSk7XG4gIHZhciBwb3BwZXJPZmZzZXRzID0gY29tcHV0ZU9mZnNldHMoe1xuICAgIHJlZmVyZW5jZTogcmVmZXJlbmNlQ2xpZW50UmVjdCxcbiAgICBlbGVtZW50OiBwb3BwZXJSZWN0LFxuICAgIHN0cmF0ZWd5OiAnYWJzb2x1dGUnLFxuICAgIHBsYWNlbWVudDogcGxhY2VtZW50XG4gIH0pO1xuICB2YXIgcG9wcGVyQ2xpZW50UmVjdCA9IHJlY3RUb0NsaWVudFJlY3QoT2JqZWN0LmFzc2lnbih7fSwgcG9wcGVyUmVjdCwgcG9wcGVyT2Zmc2V0cykpO1xuICB2YXIgZWxlbWVudENsaWVudFJlY3QgPSBlbGVtZW50Q29udGV4dCA9PT0gcG9wcGVyID8gcG9wcGVyQ2xpZW50UmVjdCA6IHJlZmVyZW5jZUNsaWVudFJlY3Q7IC8vIHBvc2l0aXZlID0gb3ZlcmZsb3dpbmcgdGhlIGNsaXBwaW5nIHJlY3RcbiAgLy8gMCBvciBuZWdhdGl2ZSA9IHdpdGhpbiB0aGUgY2xpcHBpbmcgcmVjdFxuXG4gIHZhciBvdmVyZmxvd09mZnNldHMgPSB7XG4gICAgdG9wOiBjbGlwcGluZ0NsaWVudFJlY3QudG9wIC0gZWxlbWVudENsaWVudFJlY3QudG9wICsgcGFkZGluZ09iamVjdC50b3AsXG4gICAgYm90dG9tOiBlbGVtZW50Q2xpZW50UmVjdC5ib3R0b20gLSBjbGlwcGluZ0NsaWVudFJlY3QuYm90dG9tICsgcGFkZGluZ09iamVjdC5ib3R0b20sXG4gICAgbGVmdDogY2xpcHBpbmdDbGllbnRSZWN0LmxlZnQgLSBlbGVtZW50Q2xpZW50UmVjdC5sZWZ0ICsgcGFkZGluZ09iamVjdC5sZWZ0LFxuICAgIHJpZ2h0OiBlbGVtZW50Q2xpZW50UmVjdC5yaWdodCAtIGNsaXBwaW5nQ2xpZW50UmVjdC5yaWdodCArIHBhZGRpbmdPYmplY3QucmlnaHRcbiAgfTtcbiAgdmFyIG9mZnNldERhdGEgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLm9mZnNldDsgLy8gT2Zmc2V0cyBjYW4gYmUgYXBwbGllZCBvbmx5IHRvIHRoZSBwb3BwZXIgZWxlbWVudFxuXG4gIGlmIChlbGVtZW50Q29udGV4dCA9PT0gcG9wcGVyICYmIG9mZnNldERhdGEpIHtcbiAgICB2YXIgb2Zmc2V0ID0gb2Zmc2V0RGF0YVtwbGFjZW1lbnRdO1xuICAgIE9iamVjdC5rZXlzKG92ZXJmbG93T2Zmc2V0cykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICB2YXIgbXVsdGlwbHkgPSBbcmlnaHQsIGJvdHRvbV0uaW5kZXhPZihrZXkpID49IDAgPyAxIDogLTE7XG4gICAgICB2YXIgYXhpcyA9IFt0b3AsIGJvdHRvbV0uaW5kZXhPZihrZXkpID49IDAgPyAneScgOiAneCc7XG4gICAgICBvdmVyZmxvd09mZnNldHNba2V5XSArPSBvZmZzZXRbYXhpc10gKiBtdWx0aXBseTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBvdmVyZmxvd09mZnNldHM7XG59IiwgImltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4vZ2V0VmFyaWF0aW9uLmpzXCI7XG5pbXBvcnQgeyB2YXJpYXRpb25QbGFjZW1lbnRzLCBiYXNlUGxhY2VtZW50cywgcGxhY2VtZW50cyBhcyBhbGxQbGFjZW1lbnRzIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZGV0ZWN0T3ZlcmZsb3cgZnJvbSBcIi4vZGV0ZWN0T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXB1dGVBdXRvUGxhY2VtZW50KHN0YXRlLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGxhY2VtZW50ID0gX29wdGlvbnMucGxhY2VtZW50LFxuICAgICAgYm91bmRhcnkgPSBfb3B0aW9ucy5ib3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeSA9IF9vcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmcgPSBfb3B0aW9ucy5wYWRkaW5nLFxuICAgICAgZmxpcFZhcmlhdGlvbnMgPSBfb3B0aW9ucy5mbGlwVmFyaWF0aW9ucyxcbiAgICAgIF9vcHRpb25zJGFsbG93ZWRBdXRvUCA9IF9vcHRpb25zLmFsbG93ZWRBdXRvUGxhY2VtZW50cyxcbiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50cyA9IF9vcHRpb25zJGFsbG93ZWRBdXRvUCA9PT0gdm9pZCAwID8gYWxsUGxhY2VtZW50cyA6IF9vcHRpb25zJGFsbG93ZWRBdXRvUDtcbiAgdmFyIHZhcmlhdGlvbiA9IGdldFZhcmlhdGlvbihwbGFjZW1lbnQpO1xuICB2YXIgcGxhY2VtZW50cyA9IHZhcmlhdGlvbiA/IGZsaXBWYXJpYXRpb25zID8gdmFyaWF0aW9uUGxhY2VtZW50cyA6IHZhcmlhdGlvblBsYWNlbWVudHMuZmlsdGVyKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICByZXR1cm4gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkgPT09IHZhcmlhdGlvbjtcbiAgfSkgOiBiYXNlUGxhY2VtZW50cztcbiAgdmFyIGFsbG93ZWRQbGFjZW1lbnRzID0gcGxhY2VtZW50cy5maWx0ZXIoZnVuY3Rpb24gKHBsYWNlbWVudCkge1xuICAgIHJldHVybiBhbGxvd2VkQXV0b1BsYWNlbWVudHMuaW5kZXhPZihwbGFjZW1lbnQpID49IDA7XG4gIH0pO1xuXG4gIGlmIChhbGxvd2VkUGxhY2VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICBhbGxvd2VkUGxhY2VtZW50cyA9IHBsYWNlbWVudHM7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiBUaGUgYGFsbG93ZWRBdXRvUGxhY2VtZW50c2Agb3B0aW9uIGRpZCBub3QgYWxsb3cgYW55JywgJ3BsYWNlbWVudHMuIEVuc3VyZSB0aGUgYHBsYWNlbWVudGAgb3B0aW9uIG1hdGNoZXMgdGhlIHZhcmlhdGlvbicsICdvZiB0aGUgYWxsb3dlZCBwbGFjZW1lbnRzLicsICdGb3IgZXhhbXBsZSwgXCJhdXRvXCIgY2Fubm90IGJlIHVzZWQgdG8gYWxsb3cgXCJib3R0b20tc3RhcnRcIi4nLCAnVXNlIFwiYXV0by1zdGFydFwiIGluc3RlYWQuJ10uam9pbignICcpKTtcbiAgICB9XG4gIH0gLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtdHlwZV06IEZsb3cgc2VlbXMgdG8gaGF2ZSBwcm9ibGVtcyB3aXRoIHR3byBhcnJheSB1bmlvbnMuLi5cblxuXG4gIHZhciBvdmVyZmxvd3MgPSBhbGxvd2VkUGxhY2VtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gICAgYWNjW3BsYWNlbWVudF0gPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQsXG4gICAgICBib3VuZGFyeTogYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmc6IHBhZGRpbmdcbiAgICB9KVtnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCldO1xuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG92ZXJmbG93cykuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBvdmVyZmxvd3NbYV0gLSBvdmVyZmxvd3NbYl07XG4gIH0pO1xufSIsICJpbXBvcnQgZ2V0T3Bwb3NpdGVQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldE9wcG9zaXRlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGRldGVjdE92ZXJmbG93IGZyb20gXCIuLi91dGlscy9kZXRlY3RPdmVyZmxvdy5qc1wiO1xuaW1wb3J0IGNvbXB1dGVBdXRvUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9jb21wdXRlQXV0b1BsYWNlbWVudC5qc1wiO1xuaW1wb3J0IHsgYm90dG9tLCB0b3AsIHN0YXJ0LCByaWdodCwgbGVmdCwgYXV0byB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGdldFZhcmlhdGlvbiBmcm9tIFwiLi4vdXRpbHMvZ2V0VmFyaWF0aW9uLmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuZnVuY3Rpb24gZ2V0RXhwYW5kZWRGYWxsYmFja1BsYWNlbWVudHMocGxhY2VtZW50KSB7XG4gIGlmIChnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCkgPT09IGF1dG8pIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICB2YXIgb3Bwb3NpdGVQbGFjZW1lbnQgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChwbGFjZW1lbnQpO1xuICByZXR1cm4gW2dldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50KHBsYWNlbWVudCksIG9wcG9zaXRlUGxhY2VtZW50LCBnZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudChvcHBvc2l0ZVBsYWNlbWVudCldO1xufVxuXG5mdW5jdGlvbiBmbGlwKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG9wdGlvbnMgPSBfcmVmLm9wdGlvbnMsXG4gICAgICBuYW1lID0gX3JlZi5uYW1lO1xuXG4gIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdLl9za2lwKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIF9vcHRpb25zJG1haW5BeGlzID0gb3B0aW9ucy5tYWluQXhpcyxcbiAgICAgIGNoZWNrTWFpbkF4aXMgPSBfb3B0aW9ucyRtYWluQXhpcyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJG1haW5BeGlzLFxuICAgICAgX29wdGlvbnMkYWx0QXhpcyA9IG9wdGlvbnMuYWx0QXhpcyxcbiAgICAgIGNoZWNrQWx0QXhpcyA9IF9vcHRpb25zJGFsdEF4aXMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRhbHRBeGlzLFxuICAgICAgc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzID0gb3B0aW9ucy5mYWxsYmFja1BsYWNlbWVudHMsXG4gICAgICBwYWRkaW5nID0gb3B0aW9ucy5wYWRkaW5nLFxuICAgICAgYm91bmRhcnkgPSBvcHRpb25zLmJvdW5kYXJ5LFxuICAgICAgcm9vdEJvdW5kYXJ5ID0gb3B0aW9ucy5yb290Qm91bmRhcnksXG4gICAgICBhbHRCb3VuZGFyeSA9IG9wdGlvbnMuYWx0Qm91bmRhcnksXG4gICAgICBfb3B0aW9ucyRmbGlwVmFyaWF0aW8gPSBvcHRpb25zLmZsaXBWYXJpYXRpb25zLFxuICAgICAgZmxpcFZhcmlhdGlvbnMgPSBfb3B0aW9ucyRmbGlwVmFyaWF0aW8gPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRmbGlwVmFyaWF0aW8sXG4gICAgICBhbGxvd2VkQXV0b1BsYWNlbWVudHMgPSBvcHRpb25zLmFsbG93ZWRBdXRvUGxhY2VtZW50cztcbiAgdmFyIHByZWZlcnJlZFBsYWNlbWVudCA9IHN0YXRlLm9wdGlvbnMucGxhY2VtZW50O1xuICB2YXIgYmFzZVBsYWNlbWVudCA9IGdldEJhc2VQbGFjZW1lbnQocHJlZmVycmVkUGxhY2VtZW50KTtcbiAgdmFyIGlzQmFzZVBsYWNlbWVudCA9IGJhc2VQbGFjZW1lbnQgPT09IHByZWZlcnJlZFBsYWNlbWVudDtcbiAgdmFyIGZhbGxiYWNrUGxhY2VtZW50cyA9IHNwZWNpZmllZEZhbGxiYWNrUGxhY2VtZW50cyB8fCAoaXNCYXNlUGxhY2VtZW50IHx8ICFmbGlwVmFyaWF0aW9ucyA/IFtnZXRPcHBvc2l0ZVBsYWNlbWVudChwcmVmZXJyZWRQbGFjZW1lbnQpXSA6IGdldEV4cGFuZGVkRmFsbGJhY2tQbGFjZW1lbnRzKHByZWZlcnJlZFBsYWNlbWVudCkpO1xuICB2YXIgcGxhY2VtZW50cyA9IFtwcmVmZXJyZWRQbGFjZW1lbnRdLmNvbmNhdChmYWxsYmFja1BsYWNlbWVudHMpLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwbGFjZW1lbnQpIHtcbiAgICByZXR1cm4gYWNjLmNvbmNhdChnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCkgPT09IGF1dG8gPyBjb21wdXRlQXV0b1BsYWNlbWVudChzdGF0ZSwge1xuICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQsXG4gICAgICBib3VuZGFyeTogYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmc6IHBhZGRpbmcsXG4gICAgICBmbGlwVmFyaWF0aW9uczogZmxpcFZhcmlhdGlvbnMsXG4gICAgICBhbGxvd2VkQXV0b1BsYWNlbWVudHM6IGFsbG93ZWRBdXRvUGxhY2VtZW50c1xuICAgIH0pIDogcGxhY2VtZW50KTtcbiAgfSwgW10pO1xuICB2YXIgcmVmZXJlbmNlUmVjdCA9IHN0YXRlLnJlY3RzLnJlZmVyZW5jZTtcbiAgdmFyIHBvcHBlclJlY3QgPSBzdGF0ZS5yZWN0cy5wb3BwZXI7XG4gIHZhciBjaGVja3NNYXAgPSBuZXcgTWFwKCk7XG4gIHZhciBtYWtlRmFsbGJhY2tDaGVja3MgPSB0cnVlO1xuICB2YXIgZmlyc3RGaXR0aW5nUGxhY2VtZW50ID0gcGxhY2VtZW50c1swXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBsYWNlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgcGxhY2VtZW50ID0gcGxhY2VtZW50c1tpXTtcblxuICAgIHZhciBfYmFzZVBsYWNlbWVudCA9IGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KTtcblxuICAgIHZhciBpc1N0YXJ0VmFyaWF0aW9uID0gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkgPT09IHN0YXJ0O1xuICAgIHZhciBpc1ZlcnRpY2FsID0gW3RvcCwgYm90dG9tXS5pbmRleE9mKF9iYXNlUGxhY2VtZW50KSA+PSAwO1xuICAgIHZhciBsZW4gPSBpc1ZlcnRpY2FsID8gJ3dpZHRoJyA6ICdoZWlnaHQnO1xuICAgIHZhciBvdmVyZmxvdyA9IGRldGVjdE92ZXJmbG93KHN0YXRlLCB7XG4gICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudCxcbiAgICAgIGJvdW5kYXJ5OiBib3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeTogcm9vdEJvdW5kYXJ5LFxuICAgICAgYWx0Qm91bmRhcnk6IGFsdEJvdW5kYXJ5LFxuICAgICAgcGFkZGluZzogcGFkZGluZ1xuICAgIH0pO1xuICAgIHZhciBtYWluVmFyaWF0aW9uU2lkZSA9IGlzVmVydGljYWwgPyBpc1N0YXJ0VmFyaWF0aW9uID8gcmlnaHQgOiBsZWZ0IDogaXNTdGFydFZhcmlhdGlvbiA/IGJvdHRvbSA6IHRvcDtcblxuICAgIGlmIChyZWZlcmVuY2VSZWN0W2xlbl0gPiBwb3BwZXJSZWN0W2xlbl0pIHtcbiAgICAgIG1haW5WYXJpYXRpb25TaWRlID0gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQobWFpblZhcmlhdGlvblNpZGUpO1xuICAgIH1cblxuICAgIHZhciBhbHRWYXJpYXRpb25TaWRlID0gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQobWFpblZhcmlhdGlvblNpZGUpO1xuICAgIHZhciBjaGVja3MgPSBbXTtcblxuICAgIGlmIChjaGVja01haW5BeGlzKSB7XG4gICAgICBjaGVja3MucHVzaChvdmVyZmxvd1tfYmFzZVBsYWNlbWVudF0gPD0gMCk7XG4gICAgfVxuXG4gICAgaWYgKGNoZWNrQWx0QXhpcykge1xuICAgICAgY2hlY2tzLnB1c2gob3ZlcmZsb3dbbWFpblZhcmlhdGlvblNpZGVdIDw9IDAsIG92ZXJmbG93W2FsdFZhcmlhdGlvblNpZGVdIDw9IDApO1xuICAgIH1cblxuICAgIGlmIChjaGVja3MuZXZlcnkoZnVuY3Rpb24gKGNoZWNrKSB7XG4gICAgICByZXR1cm4gY2hlY2s7XG4gICAgfSkpIHtcbiAgICAgIGZpcnN0Rml0dGluZ1BsYWNlbWVudCA9IHBsYWNlbWVudDtcbiAgICAgIG1ha2VGYWxsYmFja0NoZWNrcyA9IGZhbHNlO1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgY2hlY2tzTWFwLnNldChwbGFjZW1lbnQsIGNoZWNrcyk7XG4gIH1cblxuICBpZiAobWFrZUZhbGxiYWNrQ2hlY2tzKSB7XG4gICAgLy8gYDJgIG1heSBiZSBkZXNpcmVkIGluIHNvbWUgY2FzZXMgXHUyMDEzIHJlc2VhcmNoIGxhdGVyXG4gICAgdmFyIG51bWJlck9mQ2hlY2tzID0gZmxpcFZhcmlhdGlvbnMgPyAzIDogMTtcblxuICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKF9pKSB7XG4gICAgICB2YXIgZml0dGluZ1BsYWNlbWVudCA9IHBsYWNlbWVudHMuZmluZChmdW5jdGlvbiAocGxhY2VtZW50KSB7XG4gICAgICAgIHZhciBjaGVja3MgPSBjaGVja3NNYXAuZ2V0KHBsYWNlbWVudCk7XG5cbiAgICAgICAgaWYgKGNoZWNrcykge1xuICAgICAgICAgIHJldHVybiBjaGVja3Muc2xpY2UoMCwgX2kpLmV2ZXJ5KGZ1bmN0aW9uIChjaGVjaykge1xuICAgICAgICAgICAgcmV0dXJuIGNoZWNrO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgaWYgKGZpdHRpbmdQbGFjZW1lbnQpIHtcbiAgICAgICAgZmlyc3RGaXR0aW5nUGxhY2VtZW50ID0gZml0dGluZ1BsYWNlbWVudDtcbiAgICAgICAgcmV0dXJuIFwiYnJlYWtcIjtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZm9yICh2YXIgX2kgPSBudW1iZXJPZkNoZWNrczsgX2kgPiAwOyBfaS0tKSB7XG4gICAgICB2YXIgX3JldCA9IF9sb29wKF9pKTtcblxuICAgICAgaWYgKF9yZXQgPT09IFwiYnJlYWtcIikgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgaWYgKHN0YXRlLnBsYWNlbWVudCAhPT0gZmlyc3RGaXR0aW5nUGxhY2VtZW50KSB7XG4gICAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXS5fc2tpcCA9IHRydWU7XG4gICAgc3RhdGUucGxhY2VtZW50ID0gZmlyc3RGaXR0aW5nUGxhY2VtZW50O1xuICAgIHN0YXRlLnJlc2V0ID0gdHJ1ZTtcbiAgfVxufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnZmxpcCcsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAnbWFpbicsXG4gIGZuOiBmbGlwLFxuICByZXF1aXJlc0lmRXhpc3RzOiBbJ29mZnNldCddLFxuICBkYXRhOiB7XG4gICAgX3NraXA6IGZhbHNlXG4gIH1cbn07IiwgImltcG9ydCB7IHRvcCwgYm90dG9tLCBsZWZ0LCByaWdodCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGRldGVjdE92ZXJmbG93IGZyb20gXCIuLi91dGlscy9kZXRlY3RPdmVyZmxvdy5qc1wiO1xuXG5mdW5jdGlvbiBnZXRTaWRlT2Zmc2V0cyhvdmVyZmxvdywgcmVjdCwgcHJldmVudGVkT2Zmc2V0cykge1xuICBpZiAocHJldmVudGVkT2Zmc2V0cyA9PT0gdm9pZCAwKSB7XG4gICAgcHJldmVudGVkT2Zmc2V0cyA9IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdG9wOiBvdmVyZmxvdy50b3AgLSByZWN0LmhlaWdodCAtIHByZXZlbnRlZE9mZnNldHMueSxcbiAgICByaWdodDogb3ZlcmZsb3cucmlnaHQgLSByZWN0LndpZHRoICsgcHJldmVudGVkT2Zmc2V0cy54LFxuICAgIGJvdHRvbTogb3ZlcmZsb3cuYm90dG9tIC0gcmVjdC5oZWlnaHQgKyBwcmV2ZW50ZWRPZmZzZXRzLnksXG4gICAgbGVmdDogb3ZlcmZsb3cubGVmdCAtIHJlY3Qud2lkdGggLSBwcmV2ZW50ZWRPZmZzZXRzLnhcbiAgfTtcbn1cblxuZnVuY3Rpb24gaXNBbnlTaWRlRnVsbHlDbGlwcGVkKG92ZXJmbG93KSB7XG4gIHJldHVybiBbdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0XS5zb21lKGZ1bmN0aW9uIChzaWRlKSB7XG4gICAgcmV0dXJuIG92ZXJmbG93W3NpZGVdID49IDA7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoaWRlKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIHByZXZlbnRlZE9mZnNldHMgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLnByZXZlbnRPdmVyZmxvdztcbiAgdmFyIHJlZmVyZW5jZU92ZXJmbG93ID0gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICBlbGVtZW50Q29udGV4dDogJ3JlZmVyZW5jZSdcbiAgfSk7XG4gIHZhciBwb3BwZXJBbHRPdmVyZmxvdyA9IGRldGVjdE92ZXJmbG93KHN0YXRlLCB7XG4gICAgYWx0Qm91bmRhcnk6IHRydWVcbiAgfSk7XG4gIHZhciByZWZlcmVuY2VDbGlwcGluZ09mZnNldHMgPSBnZXRTaWRlT2Zmc2V0cyhyZWZlcmVuY2VPdmVyZmxvdywgcmVmZXJlbmNlUmVjdCk7XG4gIHZhciBwb3BwZXJFc2NhcGVPZmZzZXRzID0gZ2V0U2lkZU9mZnNldHMocG9wcGVyQWx0T3ZlcmZsb3csIHBvcHBlclJlY3QsIHByZXZlbnRlZE9mZnNldHMpO1xuICB2YXIgaXNSZWZlcmVuY2VIaWRkZW4gPSBpc0FueVNpZGVGdWxseUNsaXBwZWQocmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzKTtcbiAgdmFyIGhhc1BvcHBlckVzY2FwZWQgPSBpc0FueVNpZGVGdWxseUNsaXBwZWQocG9wcGVyRXNjYXBlT2Zmc2V0cyk7XG4gIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0gPSB7XG4gICAgcmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzOiByZWZlcmVuY2VDbGlwcGluZ09mZnNldHMsXG4gICAgcG9wcGVyRXNjYXBlT2Zmc2V0czogcG9wcGVyRXNjYXBlT2Zmc2V0cyxcbiAgICBpc1JlZmVyZW5jZUhpZGRlbjogaXNSZWZlcmVuY2VIaWRkZW4sXG4gICAgaGFzUG9wcGVyRXNjYXBlZDogaGFzUG9wcGVyRXNjYXBlZFxuICB9O1xuICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyLCB7XG4gICAgJ2RhdGEtcG9wcGVyLXJlZmVyZW5jZS1oaWRkZW4nOiBpc1JlZmVyZW5jZUhpZGRlbixcbiAgICAnZGF0YS1wb3BwZXItZXNjYXBlZCc6IGhhc1BvcHBlckVzY2FwZWRcbiAgfSk7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdoaWRlJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgcmVxdWlyZXNJZkV4aXN0czogWydwcmV2ZW50T3ZlcmZsb3cnXSxcbiAgZm46IGhpZGVcbn07IiwgImltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgeyB0b3AsIGxlZnQsIHJpZ2h0LCBwbGFjZW1lbnRzIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gZGlzdGFuY2VBbmRTa2lkZGluZ1RvWFkocGxhY2VtZW50LCByZWN0cywgb2Zmc2V0KSB7XG4gIHZhciBiYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpO1xuICB2YXIgaW52ZXJ0RGlzdGFuY2UgPSBbbGVmdCwgdG9wXS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpID49IDAgPyAtMSA6IDE7XG5cbiAgdmFyIF9yZWYgPSB0eXBlb2Ygb2Zmc2V0ID09PSAnZnVuY3Rpb24nID8gb2Zmc2V0KE9iamVjdC5hc3NpZ24oe30sIHJlY3RzLCB7XG4gICAgcGxhY2VtZW50OiBwbGFjZW1lbnRcbiAgfSkpIDogb2Zmc2V0LFxuICAgICAgc2tpZGRpbmcgPSBfcmVmWzBdLFxuICAgICAgZGlzdGFuY2UgPSBfcmVmWzFdO1xuXG4gIHNraWRkaW5nID0gc2tpZGRpbmcgfHwgMDtcbiAgZGlzdGFuY2UgPSAoZGlzdGFuY2UgfHwgMCkgKiBpbnZlcnREaXN0YW5jZTtcbiAgcmV0dXJuIFtsZWZ0LCByaWdodF0uaW5kZXhPZihiYXNlUGxhY2VtZW50KSA+PSAwID8ge1xuICAgIHg6IGRpc3RhbmNlLFxuICAgIHk6IHNraWRkaW5nXG4gIH0gOiB7XG4gICAgeDogc2tpZGRpbmcsXG4gICAgeTogZGlzdGFuY2VcbiAgfTtcbn1cblxuZnVuY3Rpb24gb2Zmc2V0KF9yZWYyKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYyLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYyLm9wdGlvbnMsXG4gICAgICBuYW1lID0gX3JlZjIubmFtZTtcbiAgdmFyIF9vcHRpb25zJG9mZnNldCA9IG9wdGlvbnMub2Zmc2V0LFxuICAgICAgb2Zmc2V0ID0gX29wdGlvbnMkb2Zmc2V0ID09PSB2b2lkIDAgPyBbMCwgMF0gOiBfb3B0aW9ucyRvZmZzZXQ7XG4gIHZhciBkYXRhID0gcGxhY2VtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gICAgYWNjW3BsYWNlbWVudF0gPSBkaXN0YW5jZUFuZFNraWRkaW5nVG9YWShwbGFjZW1lbnQsIHN0YXRlLnJlY3RzLCBvZmZzZXQpO1xuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbiAgdmFyIF9kYXRhJHN0YXRlJHBsYWNlbWVudCA9IGRhdGFbc3RhdGUucGxhY2VtZW50XSxcbiAgICAgIHggPSBfZGF0YSRzdGF0ZSRwbGFjZW1lbnQueCxcbiAgICAgIHkgPSBfZGF0YSRzdGF0ZSRwbGFjZW1lbnQueTtcblxuICBpZiAoc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzICE9IG51bGwpIHtcbiAgICBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMueCArPSB4O1xuICAgIHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cy55ICs9IHk7XG4gIH1cblxuICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0gZGF0YTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ29mZnNldCcsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAnbWFpbicsXG4gIHJlcXVpcmVzOiBbJ3BvcHBlck9mZnNldHMnXSxcbiAgZm46IG9mZnNldFxufTsiLCAiaW1wb3J0IGNvbXB1dGVPZmZzZXRzIGZyb20gXCIuLi91dGlscy9jb21wdXRlT2Zmc2V0cy5qc1wiO1xuXG5mdW5jdGlvbiBwb3BwZXJPZmZzZXRzKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIC8vIE9mZnNldHMgYXJlIHRoZSBhY3R1YWwgcG9zaXRpb24gdGhlIHBvcHBlciBuZWVkcyB0byBoYXZlIHRvIGJlXG4gIC8vIHByb3Blcmx5IHBvc2l0aW9uZWQgbmVhciBpdHMgcmVmZXJlbmNlIGVsZW1lbnRcbiAgLy8gVGhpcyBpcyB0aGUgbW9zdCBiYXNpYyBwbGFjZW1lbnQsIGFuZCB3aWxsIGJlIGFkanVzdGVkIGJ5XG4gIC8vIHRoZSBtb2RpZmllcnMgaW4gdGhlIG5leHQgc3RlcFxuICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0gY29tcHV0ZU9mZnNldHMoe1xuICAgIHJlZmVyZW5jZTogc3RhdGUucmVjdHMucmVmZXJlbmNlLFxuICAgIGVsZW1lbnQ6IHN0YXRlLnJlY3RzLnBvcHBlcixcbiAgICBzdHJhdGVneTogJ2Fic29sdXRlJyxcbiAgICBwbGFjZW1lbnQ6IHN0YXRlLnBsYWNlbWVudFxuICB9KTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ3BvcHBlck9mZnNldHMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ3JlYWQnLFxuICBmbjogcG9wcGVyT2Zmc2V0cyxcbiAgZGF0YToge31cbn07IiwgImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEFsdEF4aXMoYXhpcykge1xuICByZXR1cm4gYXhpcyA9PT0gJ3gnID8gJ3knIDogJ3gnO1xufSIsICJpbXBvcnQgeyB0b3AsIGxlZnQsIHJpZ2h0LCBib3R0b20sIHN0YXJ0IH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0QWx0QXhpcyBmcm9tIFwiLi4vdXRpbHMvZ2V0QWx0QXhpcy5qc1wiO1xuaW1wb3J0IHdpdGhpbiBmcm9tIFwiLi4vdXRpbHMvd2l0aGluLmpzXCI7XG5pbXBvcnQgZ2V0TGF5b3V0UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBkZXRlY3RPdmVyZmxvdyBmcm9tIFwiLi4vdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4uL3V0aWxzL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IGdldEZyZXNoU2lkZU9iamVjdCBmcm9tIFwiLi4vdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzXCI7XG5pbXBvcnQgeyBtYXggYXMgbWF0aE1heCwgbWluIGFzIG1hdGhNaW4gfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBwcmV2ZW50T3ZlcmZsb3coX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIHZhciBfb3B0aW9ucyRtYWluQXhpcyA9IG9wdGlvbnMubWFpbkF4aXMsXG4gICAgICBjaGVja01haW5BeGlzID0gX29wdGlvbnMkbWFpbkF4aXMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRtYWluQXhpcyxcbiAgICAgIF9vcHRpb25zJGFsdEF4aXMgPSBvcHRpb25zLmFsdEF4aXMsXG4gICAgICBjaGVja0FsdEF4aXMgPSBfb3B0aW9ucyRhbHRBeGlzID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGFsdEF4aXMsXG4gICAgICBib3VuZGFyeSA9IG9wdGlvbnMuYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBvcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmcgPSBvcHRpb25zLnBhZGRpbmcsXG4gICAgICBfb3B0aW9ucyR0ZXRoZXIgPSBvcHRpb25zLnRldGhlcixcbiAgICAgIHRldGhlciA9IF9vcHRpb25zJHRldGhlciA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJHRldGhlcixcbiAgICAgIF9vcHRpb25zJHRldGhlck9mZnNldCA9IG9wdGlvbnMudGV0aGVyT2Zmc2V0LFxuICAgICAgdGV0aGVyT2Zmc2V0ID0gX29wdGlvbnMkdGV0aGVyT2Zmc2V0ID09PSB2b2lkIDAgPyAwIDogX29wdGlvbnMkdGV0aGVyT2Zmc2V0O1xuICB2YXIgb3ZlcmZsb3cgPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgIGJvdW5kYXJ5OiBib3VuZGFyeSxcbiAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSxcbiAgICBwYWRkaW5nOiBwYWRkaW5nLFxuICAgIGFsdEJvdW5kYXJ5OiBhbHRCb3VuZGFyeVxuICB9KTtcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHN0YXRlLnBsYWNlbWVudCk7XG4gIHZhciB2YXJpYXRpb24gPSBnZXRWYXJpYXRpb24oc3RhdGUucGxhY2VtZW50KTtcbiAgdmFyIGlzQmFzZVBsYWNlbWVudCA9ICF2YXJpYXRpb247XG4gIHZhciBtYWluQXhpcyA9IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChiYXNlUGxhY2VtZW50KTtcbiAgdmFyIGFsdEF4aXMgPSBnZXRBbHRBeGlzKG1haW5BeGlzKTtcbiAgdmFyIHBvcHBlck9mZnNldHMgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHM7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIHRldGhlck9mZnNldFZhbHVlID0gdHlwZW9mIHRldGhlck9mZnNldCA9PT0gJ2Z1bmN0aW9uJyA/IHRldGhlck9mZnNldChPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5yZWN0cywge1xuICAgIHBsYWNlbWVudDogc3RhdGUucGxhY2VtZW50XG4gIH0pKSA6IHRldGhlck9mZnNldDtcbiAgdmFyIGRhdGEgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG5cbiAgaWYgKCFwb3BwZXJPZmZzZXRzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGNoZWNrTWFpbkF4aXMgfHwgY2hlY2tBbHRBeGlzKSB7XG4gICAgdmFyIG1haW5TaWRlID0gbWFpbkF4aXMgPT09ICd5JyA/IHRvcCA6IGxlZnQ7XG4gICAgdmFyIGFsdFNpZGUgPSBtYWluQXhpcyA9PT0gJ3knID8gYm90dG9tIDogcmlnaHQ7XG4gICAgdmFyIGxlbiA9IG1haW5BeGlzID09PSAneScgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7XG4gICAgdmFyIG9mZnNldCA9IHBvcHBlck9mZnNldHNbbWFpbkF4aXNdO1xuICAgIHZhciBtaW4gPSBwb3BwZXJPZmZzZXRzW21haW5BeGlzXSArIG92ZXJmbG93W21haW5TaWRlXTtcbiAgICB2YXIgbWF4ID0gcG9wcGVyT2Zmc2V0c1ttYWluQXhpc10gLSBvdmVyZmxvd1thbHRTaWRlXTtcbiAgICB2YXIgYWRkaXRpdmUgPSB0ZXRoZXIgPyAtcG9wcGVyUmVjdFtsZW5dIC8gMiA6IDA7XG4gICAgdmFyIG1pbkxlbiA9IHZhcmlhdGlvbiA9PT0gc3RhcnQgPyByZWZlcmVuY2VSZWN0W2xlbl0gOiBwb3BwZXJSZWN0W2xlbl07XG4gICAgdmFyIG1heExlbiA9IHZhcmlhdGlvbiA9PT0gc3RhcnQgPyAtcG9wcGVyUmVjdFtsZW5dIDogLXJlZmVyZW5jZVJlY3RbbGVuXTsgLy8gV2UgbmVlZCB0byBpbmNsdWRlIHRoZSBhcnJvdyBpbiB0aGUgY2FsY3VsYXRpb24gc28gdGhlIGFycm93IGRvZXNuJ3QgZ29cbiAgICAvLyBvdXRzaWRlIHRoZSByZWZlcmVuY2UgYm91bmRzXG5cbiAgICB2YXIgYXJyb3dFbGVtZW50ID0gc3RhdGUuZWxlbWVudHMuYXJyb3c7XG4gICAgdmFyIGFycm93UmVjdCA9IHRldGhlciAmJiBhcnJvd0VsZW1lbnQgPyBnZXRMYXlvdXRSZWN0KGFycm93RWxlbWVudCkgOiB7XG4gICAgICB3aWR0aDogMCxcbiAgICAgIGhlaWdodDogMFxuICAgIH07XG4gICAgdmFyIGFycm93UGFkZGluZ09iamVjdCA9IHN0YXRlLm1vZGlmaWVyc0RhdGFbJ2Fycm93I3BlcnNpc3RlbnQnXSA/IHN0YXRlLm1vZGlmaWVyc0RhdGFbJ2Fycm93I3BlcnNpc3RlbnQnXS5wYWRkaW5nIDogZ2V0RnJlc2hTaWRlT2JqZWN0KCk7XG4gICAgdmFyIGFycm93UGFkZGluZ01pbiA9IGFycm93UGFkZGluZ09iamVjdFttYWluU2lkZV07XG4gICAgdmFyIGFycm93UGFkZGluZ01heCA9IGFycm93UGFkZGluZ09iamVjdFthbHRTaWRlXTsgLy8gSWYgdGhlIHJlZmVyZW5jZSBsZW5ndGggaXMgc21hbGxlciB0aGFuIHRoZSBhcnJvdyBsZW5ndGgsIHdlIGRvbid0IHdhbnRcbiAgICAvLyB0byBpbmNsdWRlIGl0cyBmdWxsIHNpemUgaW4gdGhlIGNhbGN1bGF0aW9uLiBJZiB0aGUgcmVmZXJlbmNlIGlzIHNtYWxsXG4gICAgLy8gYW5kIG5lYXIgdGhlIGVkZ2Ugb2YgYSBib3VuZGFyeSwgdGhlIHBvcHBlciBjYW4gb3ZlcmZsb3cgZXZlbiBpZiB0aGVcbiAgICAvLyByZWZlcmVuY2UgaXMgbm90IG92ZXJmbG93aW5nIGFzIHdlbGwgKGUuZy4gdmlydHVhbCBlbGVtZW50cyB3aXRoIG5vXG4gICAgLy8gd2lkdGggb3IgaGVpZ2h0KVxuXG4gICAgdmFyIGFycm93TGVuID0gd2l0aGluKDAsIHJlZmVyZW5jZVJlY3RbbGVuXSwgYXJyb3dSZWN0W2xlbl0pO1xuICAgIHZhciBtaW5PZmZzZXQgPSBpc0Jhc2VQbGFjZW1lbnQgPyByZWZlcmVuY2VSZWN0W2xlbl0gLyAyIC0gYWRkaXRpdmUgLSBhcnJvd0xlbiAtIGFycm93UGFkZGluZ01pbiAtIHRldGhlck9mZnNldFZhbHVlIDogbWluTGVuIC0gYXJyb3dMZW4gLSBhcnJvd1BhZGRpbmdNaW4gLSB0ZXRoZXJPZmZzZXRWYWx1ZTtcbiAgICB2YXIgbWF4T2Zmc2V0ID0gaXNCYXNlUGxhY2VtZW50ID8gLXJlZmVyZW5jZVJlY3RbbGVuXSAvIDIgKyBhZGRpdGl2ZSArIGFycm93TGVuICsgYXJyb3dQYWRkaW5nTWF4ICsgdGV0aGVyT2Zmc2V0VmFsdWUgOiBtYXhMZW4gKyBhcnJvd0xlbiArIGFycm93UGFkZGluZ01heCArIHRldGhlck9mZnNldFZhbHVlO1xuICAgIHZhciBhcnJvd09mZnNldFBhcmVudCA9IHN0YXRlLmVsZW1lbnRzLmFycm93ICYmIGdldE9mZnNldFBhcmVudChzdGF0ZS5lbGVtZW50cy5hcnJvdyk7XG4gICAgdmFyIGNsaWVudE9mZnNldCA9IGFycm93T2Zmc2V0UGFyZW50ID8gbWFpbkF4aXMgPT09ICd5JyA/IGFycm93T2Zmc2V0UGFyZW50LmNsaWVudFRvcCB8fCAwIDogYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50TGVmdCB8fCAwIDogMDtcbiAgICB2YXIgb2Zmc2V0TW9kaWZpZXJWYWx1ZSA9IHN0YXRlLm1vZGlmaWVyc0RhdGEub2Zmc2V0ID8gc3RhdGUubW9kaWZpZXJzRGF0YS5vZmZzZXRbc3RhdGUucGxhY2VtZW50XVttYWluQXhpc10gOiAwO1xuICAgIHZhciB0ZXRoZXJNaW4gPSBwb3BwZXJPZmZzZXRzW21haW5BeGlzXSArIG1pbk9mZnNldCAtIG9mZnNldE1vZGlmaWVyVmFsdWUgLSBjbGllbnRPZmZzZXQ7XG4gICAgdmFyIHRldGhlck1heCA9IHBvcHBlck9mZnNldHNbbWFpbkF4aXNdICsgbWF4T2Zmc2V0IC0gb2Zmc2V0TW9kaWZpZXJWYWx1ZTtcblxuICAgIGlmIChjaGVja01haW5BeGlzKSB7XG4gICAgICB2YXIgcHJldmVudGVkT2Zmc2V0ID0gd2l0aGluKHRldGhlciA/IG1hdGhNaW4obWluLCB0ZXRoZXJNaW4pIDogbWluLCBvZmZzZXQsIHRldGhlciA/IG1hdGhNYXgobWF4LCB0ZXRoZXJNYXgpIDogbWF4KTtcbiAgICAgIHBvcHBlck9mZnNldHNbbWFpbkF4aXNdID0gcHJldmVudGVkT2Zmc2V0O1xuICAgICAgZGF0YVttYWluQXhpc10gPSBwcmV2ZW50ZWRPZmZzZXQgLSBvZmZzZXQ7XG4gICAgfVxuXG4gICAgaWYgKGNoZWNrQWx0QXhpcykge1xuICAgICAgdmFyIF9tYWluU2lkZSA9IG1haW5BeGlzID09PSAneCcgPyB0b3AgOiBsZWZ0O1xuXG4gICAgICB2YXIgX2FsdFNpZGUgPSBtYWluQXhpcyA9PT0gJ3gnID8gYm90dG9tIDogcmlnaHQ7XG5cbiAgICAgIHZhciBfb2Zmc2V0ID0gcG9wcGVyT2Zmc2V0c1thbHRBeGlzXTtcblxuICAgICAgdmFyIF9taW4gPSBfb2Zmc2V0ICsgb3ZlcmZsb3dbX21haW5TaWRlXTtcblxuICAgICAgdmFyIF9tYXggPSBfb2Zmc2V0IC0gb3ZlcmZsb3dbX2FsdFNpZGVdO1xuXG4gICAgICB2YXIgX3ByZXZlbnRlZE9mZnNldCA9IHdpdGhpbih0ZXRoZXIgPyBtYXRoTWluKF9taW4sIHRldGhlck1pbikgOiBfbWluLCBfb2Zmc2V0LCB0ZXRoZXIgPyBtYXRoTWF4KF9tYXgsIHRldGhlck1heCkgOiBfbWF4KTtcblxuICAgICAgcG9wcGVyT2Zmc2V0c1thbHRBeGlzXSA9IF9wcmV2ZW50ZWRPZmZzZXQ7XG4gICAgICBkYXRhW2FsdEF4aXNdID0gX3ByZXZlbnRlZE9mZnNldCAtIF9vZmZzZXQ7XG4gICAgfVxuICB9XG5cbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IGRhdGE7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdwcmV2ZW50T3ZlcmZsb3cnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ21haW4nLFxuICBmbjogcHJldmVudE92ZXJmbG93LFxuICByZXF1aXJlc0lmRXhpc3RzOiBbJ29mZnNldCddXG59OyIsICJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRIVE1MRWxlbWVudFNjcm9sbChlbGVtZW50KSB7XG4gIHJldHVybiB7XG4gICAgc2Nyb2xsTGVmdDogZWxlbWVudC5zY3JvbGxMZWZ0LFxuICAgIHNjcm9sbFRvcDogZWxlbWVudC5zY3JvbGxUb3BcbiAgfTtcbn0iLCAiaW1wb3J0IGdldFdpbmRvd1Njcm9sbCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGwuanNcIjtcbmltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IGdldEhUTUxFbGVtZW50U2Nyb2xsIGZyb20gXCIuL2dldEhUTUxFbGVtZW50U2Nyb2xsLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXROb2RlU2Nyb2xsKG5vZGUpIHtcbiAgaWYgKG5vZGUgPT09IGdldFdpbmRvdyhub2RlKSB8fCAhaXNIVE1MRWxlbWVudChub2RlKSkge1xuICAgIHJldHVybiBnZXRXaW5kb3dTY3JvbGwobm9kZSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGdldEhUTUxFbGVtZW50U2Nyb2xsKG5vZGUpO1xuICB9XG59IiwgImltcG9ydCBnZXRCb3VuZGluZ0NsaWVudFJlY3QgZnJvbSBcIi4vZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZVNjcm9sbCBmcm9tIFwiLi9nZXROb2RlU2Nyb2xsLmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsQmFyWCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGxCYXJYLmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGlzU2Nyb2xsUGFyZW50IGZyb20gXCIuL2lzU2Nyb2xsUGFyZW50LmpzXCI7XG5cbmZ1bmN0aW9uIGlzRWxlbWVudFNjYWxlZChlbGVtZW50KSB7XG4gIHZhciByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgdmFyIHNjYWxlWCA9IHJlY3Qud2lkdGggLyBlbGVtZW50Lm9mZnNldFdpZHRoIHx8IDE7XG4gIHZhciBzY2FsZVkgPSByZWN0LmhlaWdodCAvIGVsZW1lbnQub2Zmc2V0SGVpZ2h0IHx8IDE7XG4gIHJldHVybiBzY2FsZVggIT09IDEgfHwgc2NhbGVZICE9PSAxO1xufSAvLyBSZXR1cm5zIHRoZSBjb21wb3NpdGUgcmVjdCBvZiBhbiBlbGVtZW50IHJlbGF0aXZlIHRvIGl0cyBvZmZzZXRQYXJlbnQuXG4vLyBDb21wb3NpdGUgbWVhbnMgaXQgdGFrZXMgaW50byBhY2NvdW50IHRyYW5zZm9ybXMgYXMgd2VsbCBhcyBsYXlvdXQuXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q29tcG9zaXRlUmVjdChlbGVtZW50T3JWaXJ0dWFsRWxlbWVudCwgb2Zmc2V0UGFyZW50LCBpc0ZpeGVkKSB7XG4gIGlmIChpc0ZpeGVkID09PSB2b2lkIDApIHtcbiAgICBpc0ZpeGVkID0gZmFsc2U7XG4gIH1cblxuICB2YXIgaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgPSBpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCk7XG4gIHZhciBvZmZzZXRQYXJlbnRJc1NjYWxlZCA9IGlzSFRNTEVsZW1lbnQob2Zmc2V0UGFyZW50KSAmJiBpc0VsZW1lbnRTY2FsZWQob2Zmc2V0UGFyZW50KTtcbiAgdmFyIGRvY3VtZW50RWxlbWVudCA9IGdldERvY3VtZW50RWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICB2YXIgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50T3JWaXJ0dWFsRWxlbWVudCwgb2Zmc2V0UGFyZW50SXNTY2FsZWQpO1xuICB2YXIgc2Nyb2xsID0ge1xuICAgIHNjcm9sbExlZnQ6IDAsXG4gICAgc2Nyb2xsVG9wOiAwXG4gIH07XG4gIHZhciBvZmZzZXRzID0ge1xuICAgIHg6IDAsXG4gICAgeTogMFxuICB9O1xuXG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgIWlzRml4ZWQpIHtcbiAgICBpZiAoZ2V0Tm9kZU5hbWUob2Zmc2V0UGFyZW50KSAhPT0gJ2JvZHknIHx8IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3BwZXJqcy9wb3BwZXItY29yZS9pc3N1ZXMvMTA3OFxuICAgIGlzU2Nyb2xsUGFyZW50KGRvY3VtZW50RWxlbWVudCkpIHtcbiAgICAgIHNjcm9sbCA9IGdldE5vZGVTY3JvbGwob2Zmc2V0UGFyZW50KTtcbiAgICB9XG5cbiAgICBpZiAoaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpKSB7XG4gICAgICBvZmZzZXRzID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KG9mZnNldFBhcmVudCwgdHJ1ZSk7XG4gICAgICBvZmZzZXRzLnggKz0gb2Zmc2V0UGFyZW50LmNsaWVudExlZnQ7XG4gICAgICBvZmZzZXRzLnkgKz0gb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9IGVsc2UgaWYgKGRvY3VtZW50RWxlbWVudCkge1xuICAgICAgb2Zmc2V0cy54ID0gZ2V0V2luZG93U2Nyb2xsQmFyWChkb2N1bWVudEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgeDogcmVjdC5sZWZ0ICsgc2Nyb2xsLnNjcm9sbExlZnQgLSBvZmZzZXRzLngsXG4gICAgeTogcmVjdC50b3AgKyBzY3JvbGwuc2Nyb2xsVG9wIC0gb2Zmc2V0cy55LFxuICAgIHdpZHRoOiByZWN0LndpZHRoLFxuICAgIGhlaWdodDogcmVjdC5oZWlnaHRcbiAgfTtcbn0iLCAiaW1wb3J0IHsgbW9kaWZpZXJQaGFzZXMgfSBmcm9tIFwiLi4vZW51bXMuanNcIjsgLy8gc291cmNlOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80OTg3NTI1NVxuXG5mdW5jdGlvbiBvcmRlcihtb2RpZmllcnMpIHtcbiAgdmFyIG1hcCA9IG5ldyBNYXAoKTtcbiAgdmFyIHZpc2l0ZWQgPSBuZXcgU2V0KCk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgbW9kaWZpZXJzLmZvckVhY2goZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgbWFwLnNldChtb2RpZmllci5uYW1lLCBtb2RpZmllcik7XG4gIH0pOyAvLyBPbiB2aXNpdGluZyBvYmplY3QsIGNoZWNrIGZvciBpdHMgZGVwZW5kZW5jaWVzIGFuZCB2aXNpdCB0aGVtIHJlY3Vyc2l2ZWx5XG5cbiAgZnVuY3Rpb24gc29ydChtb2RpZmllcikge1xuICAgIHZpc2l0ZWQuYWRkKG1vZGlmaWVyLm5hbWUpO1xuICAgIHZhciByZXF1aXJlcyA9IFtdLmNvbmNhdChtb2RpZmllci5yZXF1aXJlcyB8fCBbXSwgbW9kaWZpZXIucmVxdWlyZXNJZkV4aXN0cyB8fCBbXSk7XG4gICAgcmVxdWlyZXMuZm9yRWFjaChmdW5jdGlvbiAoZGVwKSB7XG4gICAgICBpZiAoIXZpc2l0ZWQuaGFzKGRlcCkpIHtcbiAgICAgICAgdmFyIGRlcE1vZGlmaWVyID0gbWFwLmdldChkZXApO1xuXG4gICAgICAgIGlmIChkZXBNb2RpZmllcikge1xuICAgICAgICAgIHNvcnQoZGVwTW9kaWZpZXIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmVzdWx0LnB1c2gobW9kaWZpZXIpO1xuICB9XG5cbiAgbW9kaWZpZXJzLmZvckVhY2goZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgaWYgKCF2aXNpdGVkLmhhcyhtb2RpZmllci5uYW1lKSkge1xuICAgICAgLy8gY2hlY2sgZm9yIHZpc2l0ZWQgb2JqZWN0XG4gICAgICBzb3J0KG1vZGlmaWVyKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvcmRlck1vZGlmaWVycyhtb2RpZmllcnMpIHtcbiAgLy8gb3JkZXIgYmFzZWQgb24gZGVwZW5kZW5jaWVzXG4gIHZhciBvcmRlcmVkTW9kaWZpZXJzID0gb3JkZXIobW9kaWZpZXJzKTsgLy8gb3JkZXIgYmFzZWQgb24gcGhhc2VcblxuICByZXR1cm4gbW9kaWZpZXJQaGFzZXMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBoYXNlKSB7XG4gICAgcmV0dXJuIGFjYy5jb25jYXQob3JkZXJlZE1vZGlmaWVycy5maWx0ZXIoZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgICByZXR1cm4gbW9kaWZpZXIucGhhc2UgPT09IHBoYXNlO1xuICAgIH0pKTtcbiAgfSwgW10pO1xufSIsICJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWJvdW5jZShmbikge1xuICB2YXIgcGVuZGluZztcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXBlbmRpbmcpIHtcbiAgICAgIHBlbmRpbmcgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBwZW5kaW5nID0gdW5kZWZpbmVkO1xuICAgICAgICAgIHJlc29sdmUoZm4oKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBlbmRpbmc7XG4gIH07XG59IiwgImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1lcmdlQnlOYW1lKG1vZGlmaWVycykge1xuICB2YXIgbWVyZ2VkID0gbW9kaWZpZXJzLnJlZHVjZShmdW5jdGlvbiAobWVyZ2VkLCBjdXJyZW50KSB7XG4gICAgdmFyIGV4aXN0aW5nID0gbWVyZ2VkW2N1cnJlbnQubmFtZV07XG4gICAgbWVyZ2VkW2N1cnJlbnQubmFtZV0gPSBleGlzdGluZyA/IE9iamVjdC5hc3NpZ24oe30sIGV4aXN0aW5nLCBjdXJyZW50LCB7XG4gICAgICBvcHRpb25zOiBPYmplY3QuYXNzaWduKHt9LCBleGlzdGluZy5vcHRpb25zLCBjdXJyZW50Lm9wdGlvbnMpLFxuICAgICAgZGF0YTogT2JqZWN0LmFzc2lnbih7fSwgZXhpc3RpbmcuZGF0YSwgY3VycmVudC5kYXRhKVxuICAgIH0pIDogY3VycmVudDtcbiAgICByZXR1cm4gbWVyZ2VkO1xuICB9LCB7fSk7IC8vIElFMTEgZG9lcyBub3Qgc3VwcG9ydCBPYmplY3QudmFsdWVzXG5cbiAgcmV0dXJuIE9iamVjdC5rZXlzKG1lcmdlZCkubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gbWVyZ2VkW2tleV07XG4gIH0pO1xufSIsICJpbXBvcnQgZ2V0Q29tcG9zaXRlUmVjdCBmcm9tIFwiLi9kb20tdXRpbHMvZ2V0Q29tcG9zaXRlUmVjdC5qc1wiO1xuaW1wb3J0IGdldExheW91dFJlY3QgZnJvbSBcIi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanNcIjtcbmltcG9ydCBsaXN0U2Nyb2xsUGFyZW50cyBmcm9tIFwiLi9kb20tdXRpbHMvbGlzdFNjcm9sbFBhcmVudHMuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4vZG9tLXV0aWxzL2dldE9mZnNldFBhcmVudC5qc1wiO1xuaW1wb3J0IGdldENvbXB1dGVkU3R5bGUgZnJvbSBcIi4vZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanNcIjtcbmltcG9ydCBvcmRlck1vZGlmaWVycyBmcm9tIFwiLi91dGlscy9vcmRlck1vZGlmaWVycy5qc1wiO1xuaW1wb3J0IGRlYm91bmNlIGZyb20gXCIuL3V0aWxzL2RlYm91bmNlLmpzXCI7XG5pbXBvcnQgdmFsaWRhdGVNb2RpZmllcnMgZnJvbSBcIi4vdXRpbHMvdmFsaWRhdGVNb2RpZmllcnMuanNcIjtcbmltcG9ydCB1bmlxdWVCeSBmcm9tIFwiLi91dGlscy91bmlxdWVCeS5qc1wiO1xuaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4vdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IG1lcmdlQnlOYW1lIGZyb20gXCIuL3V0aWxzL21lcmdlQnlOYW1lLmpzXCI7XG5pbXBvcnQgZGV0ZWN0T3ZlcmZsb3cgZnJvbSBcIi4vdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanNcIjtcbmltcG9ydCB7IGlzRWxlbWVudCB9IGZyb20gXCIuL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgeyBhdXRvIH0gZnJvbSBcIi4vZW51bXMuanNcIjtcbnZhciBJTlZBTElEX0VMRU1FTlRfRVJST1IgPSAnUG9wcGVyOiBJbnZhbGlkIHJlZmVyZW5jZSBvciBwb3BwZXIgYXJndW1lbnQgcHJvdmlkZWQuIFRoZXkgbXVzdCBiZSBlaXRoZXIgYSBET00gZWxlbWVudCBvciB2aXJ0dWFsIGVsZW1lbnQuJztcbnZhciBJTkZJTklURV9MT09QX0VSUk9SID0gJ1BvcHBlcjogQW4gaW5maW5pdGUgbG9vcCBpbiB0aGUgbW9kaWZpZXJzIGN5Y2xlIGhhcyBiZWVuIGRldGVjdGVkISBUaGUgY3ljbGUgaGFzIGJlZW4gaW50ZXJydXB0ZWQgdG8gcHJldmVudCBhIGJyb3dzZXIgY3Jhc2guJztcbnZhciBERUZBVUxUX09QVElPTlMgPSB7XG4gIHBsYWNlbWVudDogJ2JvdHRvbScsXG4gIG1vZGlmaWVyczogW10sXG4gIHN0cmF0ZWd5OiAnYWJzb2x1dGUnXG59O1xuXG5mdW5jdGlvbiBhcmVWYWxpZEVsZW1lbnRzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuICFhcmdzLnNvbWUoZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICByZXR1cm4gIShlbGVtZW50ICYmIHR5cGVvZiBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCA9PT0gJ2Z1bmN0aW9uJyk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcG9wcGVyR2VuZXJhdG9yKGdlbmVyYXRvck9wdGlvbnMpIHtcbiAgaWYgKGdlbmVyYXRvck9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIGdlbmVyYXRvck9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIHZhciBfZ2VuZXJhdG9yT3B0aW9ucyA9IGdlbmVyYXRvck9wdGlvbnMsXG4gICAgICBfZ2VuZXJhdG9yT3B0aW9ucyRkZWYgPSBfZ2VuZXJhdG9yT3B0aW9ucy5kZWZhdWx0TW9kaWZpZXJzLFxuICAgICAgZGVmYXVsdE1vZGlmaWVycyA9IF9nZW5lcmF0b3JPcHRpb25zJGRlZiA9PT0gdm9pZCAwID8gW10gOiBfZ2VuZXJhdG9yT3B0aW9ucyRkZWYsXG4gICAgICBfZ2VuZXJhdG9yT3B0aW9ucyRkZWYyID0gX2dlbmVyYXRvck9wdGlvbnMuZGVmYXVsdE9wdGlvbnMsXG4gICAgICBkZWZhdWx0T3B0aW9ucyA9IF9nZW5lcmF0b3JPcHRpb25zJGRlZjIgPT09IHZvaWQgMCA/IERFRkFVTFRfT1BUSU9OUyA6IF9nZW5lcmF0b3JPcHRpb25zJGRlZjI7XG4gIHJldHVybiBmdW5jdGlvbiBjcmVhdGVQb3BwZXIocmVmZXJlbmNlLCBwb3BwZXIsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0gZGVmYXVsdE9wdGlvbnM7XG4gICAgfVxuXG4gICAgdmFyIHN0YXRlID0ge1xuICAgICAgcGxhY2VtZW50OiAnYm90dG9tJyxcbiAgICAgIG9yZGVyZWRNb2RpZmllcnM6IFtdLFxuICAgICAgb3B0aW9uczogT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9PUFRJT05TLCBkZWZhdWx0T3B0aW9ucyksXG4gICAgICBtb2RpZmllcnNEYXRhOiB7fSxcbiAgICAgIGVsZW1lbnRzOiB7XG4gICAgICAgIHJlZmVyZW5jZTogcmVmZXJlbmNlLFxuICAgICAgICBwb3BwZXI6IHBvcHBlclxuICAgICAgfSxcbiAgICAgIGF0dHJpYnV0ZXM6IHt9LFxuICAgICAgc3R5bGVzOiB7fVxuICAgIH07XG4gICAgdmFyIGVmZmVjdENsZWFudXBGbnMgPSBbXTtcbiAgICB2YXIgaXNEZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB2YXIgaW5zdGFuY2UgPSB7XG4gICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICBzZXRPcHRpb25zOiBmdW5jdGlvbiBzZXRPcHRpb25zKHNldE9wdGlvbnNBY3Rpb24pIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygc2V0T3B0aW9uc0FjdGlvbiA9PT0gJ2Z1bmN0aW9uJyA/IHNldE9wdGlvbnNBY3Rpb24oc3RhdGUub3B0aW9ucykgOiBzZXRPcHRpb25zQWN0aW9uO1xuICAgICAgICBjbGVhbnVwTW9kaWZpZXJFZmZlY3RzKCk7XG4gICAgICAgIHN0YXRlLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0T3B0aW9ucywgc3RhdGUub3B0aW9ucywgb3B0aW9ucyk7XG4gICAgICAgIHN0YXRlLnNjcm9sbFBhcmVudHMgPSB7XG4gICAgICAgICAgcmVmZXJlbmNlOiBpc0VsZW1lbnQocmVmZXJlbmNlKSA/IGxpc3RTY3JvbGxQYXJlbnRzKHJlZmVyZW5jZSkgOiByZWZlcmVuY2UuY29udGV4dEVsZW1lbnQgPyBsaXN0U2Nyb2xsUGFyZW50cyhyZWZlcmVuY2UuY29udGV4dEVsZW1lbnQpIDogW10sXG4gICAgICAgICAgcG9wcGVyOiBsaXN0U2Nyb2xsUGFyZW50cyhwb3BwZXIpXG4gICAgICAgIH07IC8vIE9yZGVycyB0aGUgbW9kaWZpZXJzIGJhc2VkIG9uIHRoZWlyIGRlcGVuZGVuY2llcyBhbmQgYHBoYXNlYFxuICAgICAgICAvLyBwcm9wZXJ0aWVzXG5cbiAgICAgICAgdmFyIG9yZGVyZWRNb2RpZmllcnMgPSBvcmRlck1vZGlmaWVycyhtZXJnZUJ5TmFtZShbXS5jb25jYXQoZGVmYXVsdE1vZGlmaWVycywgc3RhdGUub3B0aW9ucy5tb2RpZmllcnMpKSk7IC8vIFN0cmlwIG91dCBkaXNhYmxlZCBtb2RpZmllcnNcblxuICAgICAgICBzdGF0ZS5vcmRlcmVkTW9kaWZpZXJzID0gb3JkZXJlZE1vZGlmaWVycy5maWx0ZXIoZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgICByZXR1cm4gbS5lbmFibGVkO1xuICAgICAgICB9KTsgLy8gVmFsaWRhdGUgdGhlIHByb3ZpZGVkIG1vZGlmaWVycyBzbyB0aGF0IHRoZSBjb25zdW1lciB3aWxsIGdldCB3YXJuZWRcbiAgICAgICAgLy8gaWYgb25lIG9mIHRoZSBtb2RpZmllcnMgaXMgaW52YWxpZCBmb3IgYW55IHJlYXNvblxuXG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgICB2YXIgbW9kaWZpZXJzID0gdW5pcXVlQnkoW10uY29uY2F0KG9yZGVyZWRNb2RpZmllcnMsIHN0YXRlLm9wdGlvbnMubW9kaWZpZXJzKSwgZnVuY3Rpb24gKF9yZWYpIHtcbiAgICAgICAgICAgIHZhciBuYW1lID0gX3JlZi5uYW1lO1xuICAgICAgICAgICAgcmV0dXJuIG5hbWU7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdmFsaWRhdGVNb2RpZmllcnMobW9kaWZpZXJzKTtcblxuICAgICAgICAgIGlmIChnZXRCYXNlUGxhY2VtZW50KHN0YXRlLm9wdGlvbnMucGxhY2VtZW50KSA9PT0gYXV0bykge1xuICAgICAgICAgICAgdmFyIGZsaXBNb2RpZmllciA9IHN0YXRlLm9yZGVyZWRNb2RpZmllcnMuZmluZChmdW5jdGlvbiAoX3JlZjIpIHtcbiAgICAgICAgICAgICAgdmFyIG5hbWUgPSBfcmVmMi5uYW1lO1xuICAgICAgICAgICAgICByZXR1cm4gbmFtZSA9PT0gJ2ZsaXAnO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmICghZmxpcE1vZGlmaWVyKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoWydQb3BwZXI6IFwiYXV0b1wiIHBsYWNlbWVudHMgcmVxdWlyZSB0aGUgXCJmbGlwXCIgbW9kaWZpZXIgYmUnLCAncHJlc2VudCBhbmQgZW5hYmxlZCB0byB3b3JrLiddLmpvaW4oJyAnKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIF9nZXRDb21wdXRlZFN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShwb3BwZXIpLFxuICAgICAgICAgICAgICBtYXJnaW5Ub3AgPSBfZ2V0Q29tcHV0ZWRTdHlsZS5tYXJnaW5Ub3AsXG4gICAgICAgICAgICAgIG1hcmdpblJpZ2h0ID0gX2dldENvbXB1dGVkU3R5bGUubWFyZ2luUmlnaHQsXG4gICAgICAgICAgICAgIG1hcmdpbkJvdHRvbSA9IF9nZXRDb21wdXRlZFN0eWxlLm1hcmdpbkJvdHRvbSxcbiAgICAgICAgICAgICAgbWFyZ2luTGVmdCA9IF9nZXRDb21wdXRlZFN0eWxlLm1hcmdpbkxlZnQ7IC8vIFdlIG5vIGxvbmdlciB0YWtlIGludG8gYWNjb3VudCBgbWFyZ2luc2Agb24gdGhlIHBvcHBlciwgYW5kIGl0IGNhblxuICAgICAgICAgIC8vIGNhdXNlIGJ1Z3Mgd2l0aCBwb3NpdGlvbmluZywgc28gd2UnbGwgd2FybiB0aGUgY29uc3VtZXJcblxuXG4gICAgICAgICAgaWYgKFttYXJnaW5Ub3AsIG1hcmdpblJpZ2h0LCBtYXJnaW5Cb3R0b20sIG1hcmdpbkxlZnRdLnNvbWUoZnVuY3Rpb24gKG1hcmdpbikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQobWFyZ2luKTtcbiAgICAgICAgICB9KSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFsnUG9wcGVyOiBDU1MgXCJtYXJnaW5cIiBzdHlsZXMgY2Fubm90IGJlIHVzZWQgdG8gYXBwbHkgcGFkZGluZycsICdiZXR3ZWVuIHRoZSBwb3BwZXIgYW5kIGl0cyByZWZlcmVuY2UgZWxlbWVudCBvciBib3VuZGFyeS4nLCAnVG8gcmVwbGljYXRlIG1hcmdpbiwgdXNlIHRoZSBgb2Zmc2V0YCBtb2RpZmllciwgYXMgd2VsbCBhcycsICd0aGUgYHBhZGRpbmdgIG9wdGlvbiBpbiB0aGUgYHByZXZlbnRPdmVyZmxvd2AgYW5kIGBmbGlwYCcsICdtb2RpZmllcnMuJ10uam9pbignICcpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBydW5Nb2RpZmllckVmZmVjdHMoKTtcbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLnVwZGF0ZSgpO1xuICAgICAgfSxcbiAgICAgIC8vIFN5bmMgdXBkYXRlIFx1MjAxMyBpdCB3aWxsIGFsd2F5cyBiZSBleGVjdXRlZCwgZXZlbiBpZiBub3QgbmVjZXNzYXJ5LiBUaGlzXG4gICAgICAvLyBpcyB1c2VmdWwgZm9yIGxvdyBmcmVxdWVuY3kgdXBkYXRlcyB3aGVyZSBzeW5jIGJlaGF2aW9yIHNpbXBsaWZpZXMgdGhlXG4gICAgICAvLyBsb2dpYy5cbiAgICAgIC8vIEZvciBoaWdoIGZyZXF1ZW5jeSB1cGRhdGVzIChlLmcuIGByZXNpemVgIGFuZCBgc2Nyb2xsYCBldmVudHMpLCBhbHdheXNcbiAgICAgIC8vIHByZWZlciB0aGUgYXN5bmMgUG9wcGVyI3VwZGF0ZSBtZXRob2RcbiAgICAgIGZvcmNlVXBkYXRlOiBmdW5jdGlvbiBmb3JjZVVwZGF0ZSgpIHtcbiAgICAgICAgaWYgKGlzRGVzdHJveWVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIF9zdGF0ZSRlbGVtZW50cyA9IHN0YXRlLmVsZW1lbnRzLFxuICAgICAgICAgICAgcmVmZXJlbmNlID0gX3N0YXRlJGVsZW1lbnRzLnJlZmVyZW5jZSxcbiAgICAgICAgICAgIHBvcHBlciA9IF9zdGF0ZSRlbGVtZW50cy5wb3BwZXI7IC8vIERvbid0IHByb2NlZWQgaWYgYHJlZmVyZW5jZWAgb3IgYHBvcHBlcmAgYXJlIG5vdCB2YWxpZCBlbGVtZW50c1xuICAgICAgICAvLyBhbnltb3JlXG5cbiAgICAgICAgaWYgKCFhcmVWYWxpZEVsZW1lbnRzKHJlZmVyZW5jZSwgcG9wcGVyKSkge1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoSU5WQUxJRF9FTEVNRU5UX0VSUk9SKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gLy8gU3RvcmUgdGhlIHJlZmVyZW5jZSBhbmQgcG9wcGVyIHJlY3RzIHRvIGJlIHJlYWQgYnkgbW9kaWZpZXJzXG5cblxuICAgICAgICBzdGF0ZS5yZWN0cyA9IHtcbiAgICAgICAgICByZWZlcmVuY2U6IGdldENvbXBvc2l0ZVJlY3QocmVmZXJlbmNlLCBnZXRPZmZzZXRQYXJlbnQocG9wcGVyKSwgc3RhdGUub3B0aW9ucy5zdHJhdGVneSA9PT0gJ2ZpeGVkJyksXG4gICAgICAgICAgcG9wcGVyOiBnZXRMYXlvdXRSZWN0KHBvcHBlcilcbiAgICAgICAgfTsgLy8gTW9kaWZpZXJzIGhhdmUgdGhlIGFiaWxpdHkgdG8gcmVzZXQgdGhlIGN1cnJlbnQgdXBkYXRlIGN5Y2xlLiBUaGVcbiAgICAgICAgLy8gbW9zdCBjb21tb24gdXNlIGNhc2UgZm9yIHRoaXMgaXMgdGhlIGBmbGlwYCBtb2RpZmllciBjaGFuZ2luZyB0aGVcbiAgICAgICAgLy8gcGxhY2VtZW50LCB3aGljaCB0aGVuIG5lZWRzIHRvIHJlLXJ1biBhbGwgdGhlIG1vZGlmaWVycywgYmVjYXVzZSB0aGVcbiAgICAgICAgLy8gbG9naWMgd2FzIHByZXZpb3VzbHkgcmFuIGZvciB0aGUgcHJldmlvdXMgcGxhY2VtZW50IGFuZCBpcyB0aGVyZWZvcmVcbiAgICAgICAgLy8gc3RhbGUvaW5jb3JyZWN0XG5cbiAgICAgICAgc3RhdGUucmVzZXQgPSBmYWxzZTtcbiAgICAgICAgc3RhdGUucGxhY2VtZW50ID0gc3RhdGUub3B0aW9ucy5wbGFjZW1lbnQ7IC8vIE9uIGVhY2ggdXBkYXRlIGN5Y2xlLCB0aGUgYG1vZGlmaWVyc0RhdGFgIHByb3BlcnR5IGZvciBlYWNoIG1vZGlmaWVyXG4gICAgICAgIC8vIGlzIGZpbGxlZCB3aXRoIHRoZSBpbml0aWFsIGRhdGEgc3BlY2lmaWVkIGJ5IHRoZSBtb2RpZmllci4gVGhpcyBtZWFuc1xuICAgICAgICAvLyBpdCBkb2Vzbid0IHBlcnNpc3QgYW5kIGlzIGZyZXNoIG9uIGVhY2ggdXBkYXRlLlxuICAgICAgICAvLyBUbyBlbnN1cmUgcGVyc2lzdGVudCBkYXRhLCB1c2UgYCR7bmFtZX0jcGVyc2lzdGVudGBcblxuICAgICAgICBzdGF0ZS5vcmRlcmVkTW9kaWZpZXJzLmZvckVhY2goZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgICAgICAgcmV0dXJuIHN0YXRlLm1vZGlmaWVyc0RhdGFbbW9kaWZpZXIubmFtZV0gPSBPYmplY3QuYXNzaWduKHt9LCBtb2RpZmllci5kYXRhKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBfX2RlYnVnX2xvb3BzX18gPSAwO1xuXG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBzdGF0ZS5vcmRlcmVkTW9kaWZpZXJzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgICAgIF9fZGVidWdfbG9vcHNfXyArPSAxO1xuXG4gICAgICAgICAgICBpZiAoX19kZWJ1Z19sb29wc19fID4gMTAwKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoSU5GSU5JVEVfTE9PUF9FUlJPUik7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChzdGF0ZS5yZXNldCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgc3RhdGUucmVzZXQgPSBmYWxzZTtcbiAgICAgICAgICAgIGluZGV4ID0gLTE7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgX3N0YXRlJG9yZGVyZWRNb2RpZmllID0gc3RhdGUub3JkZXJlZE1vZGlmaWVyc1tpbmRleF0sXG4gICAgICAgICAgICAgIGZuID0gX3N0YXRlJG9yZGVyZWRNb2RpZmllLmZuLFxuICAgICAgICAgICAgICBfc3RhdGUkb3JkZXJlZE1vZGlmaWUyID0gX3N0YXRlJG9yZGVyZWRNb2RpZmllLm9wdGlvbnMsXG4gICAgICAgICAgICAgIF9vcHRpb25zID0gX3N0YXRlJG9yZGVyZWRNb2RpZmllMiA9PT0gdm9pZCAwID8ge30gOiBfc3RhdGUkb3JkZXJlZE1vZGlmaWUyLFxuICAgICAgICAgICAgICBuYW1lID0gX3N0YXRlJG9yZGVyZWRNb2RpZmllLm5hbWU7XG5cbiAgICAgICAgICBpZiAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBzdGF0ZSA9IGZuKHtcbiAgICAgICAgICAgICAgc3RhdGU6IHN0YXRlLFxuICAgICAgICAgICAgICBvcHRpb25zOiBfb3B0aW9ucyxcbiAgICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgaW5zdGFuY2U6IGluc3RhbmNlXG4gICAgICAgICAgICB9KSB8fCBzdGF0ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvLyBBc3luYyBhbmQgb3B0aW1pc3RpY2FsbHkgb3B0aW1pemVkIHVwZGF0ZSBcdTIwMTMgaXQgd2lsbCBub3QgYmUgZXhlY3V0ZWQgaWZcbiAgICAgIC8vIG5vdCBuZWNlc3NhcnkgKGRlYm91bmNlZCB0byBydW4gYXQgbW9zdCBvbmNlLXBlci10aWNrKVxuICAgICAgdXBkYXRlOiBkZWJvdW5jZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgICAgIGluc3RhbmNlLmZvcmNlVXBkYXRlKCk7XG4gICAgICAgICAgcmVzb2x2ZShzdGF0ZSk7XG4gICAgICAgIH0pO1xuICAgICAgfSksXG4gICAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgICBjbGVhbnVwTW9kaWZpZXJFZmZlY3RzKCk7XG4gICAgICAgIGlzRGVzdHJveWVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKCFhcmVWYWxpZEVsZW1lbnRzKHJlZmVyZW5jZSwgcG9wcGVyKSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICBjb25zb2xlLmVycm9yKElOVkFMSURfRUxFTUVOVF9FUlJPUik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9XG5cbiAgICBpbnN0YW5jZS5zZXRPcHRpb25zKG9wdGlvbnMpLnRoZW4oZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgICBpZiAoIWlzRGVzdHJveWVkICYmIG9wdGlvbnMub25GaXJzdFVwZGF0ZSkge1xuICAgICAgICBvcHRpb25zLm9uRmlyc3RVcGRhdGUoc3RhdGUpO1xuICAgICAgfVxuICAgIH0pOyAvLyBNb2RpZmllcnMgaGF2ZSB0aGUgYWJpbGl0eSB0byBleGVjdXRlIGFyYml0cmFyeSBjb2RlIGJlZm9yZSB0aGUgZmlyc3RcbiAgICAvLyB1cGRhdGUgY3ljbGUgcnVucy4gVGhleSB3aWxsIGJlIGV4ZWN1dGVkIGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZSB1cGRhdGVcbiAgICAvLyBjeWNsZS4gVGhpcyBpcyB1c2VmdWwgd2hlbiBhIG1vZGlmaWVyIGFkZHMgc29tZSBwZXJzaXN0ZW50IGRhdGEgdGhhdFxuICAgIC8vIG90aGVyIG1vZGlmaWVycyBuZWVkIHRvIHVzZSwgYnV0IHRoZSBtb2RpZmllciBpcyBydW4gYWZ0ZXIgdGhlIGRlcGVuZGVudFxuICAgIC8vIG9uZS5cblxuICAgIGZ1bmN0aW9uIHJ1bk1vZGlmaWVyRWZmZWN0cygpIHtcbiAgICAgIHN0YXRlLm9yZGVyZWRNb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAoX3JlZjMpIHtcbiAgICAgICAgdmFyIG5hbWUgPSBfcmVmMy5uYW1lLFxuICAgICAgICAgICAgX3JlZjMkb3B0aW9ucyA9IF9yZWYzLm9wdGlvbnMsXG4gICAgICAgICAgICBvcHRpb25zID0gX3JlZjMkb3B0aW9ucyA9PT0gdm9pZCAwID8ge30gOiBfcmVmMyRvcHRpb25zLFxuICAgICAgICAgICAgZWZmZWN0ID0gX3JlZjMuZWZmZWN0O1xuXG4gICAgICAgIGlmICh0eXBlb2YgZWZmZWN0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgdmFyIGNsZWFudXBGbiA9IGVmZmVjdCh7XG4gICAgICAgICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgaW5zdGFuY2U6IGluc3RhbmNlLFxuICAgICAgICAgICAgb3B0aW9uczogb3B0aW9uc1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgdmFyIG5vb3BGbiA9IGZ1bmN0aW9uIG5vb3BGbigpIHt9O1xuXG4gICAgICAgICAgZWZmZWN0Q2xlYW51cEZucy5wdXNoKGNsZWFudXBGbiB8fCBub29wRm4pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbGVhbnVwTW9kaWZpZXJFZmZlY3RzKCkge1xuICAgICAgZWZmZWN0Q2xlYW51cEZucy5mb3JFYWNoKGZ1bmN0aW9uIChmbikge1xuICAgICAgICByZXR1cm4gZm4oKTtcbiAgICAgIH0pO1xuICAgICAgZWZmZWN0Q2xlYW51cEZucyA9IFtdO1xuICAgIH1cblxuICAgIHJldHVybiBpbnN0YW5jZTtcbiAgfTtcbn1cbmV4cG9ydCB2YXIgY3JlYXRlUG9wcGVyID0gLyojX19QVVJFX18qL3BvcHBlckdlbmVyYXRvcigpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCB7IGRldGVjdE92ZXJmbG93IH07IiwgImltcG9ydCB7IHBvcHBlckdlbmVyYXRvciwgZGV0ZWN0T3ZlcmZsb3cgfSBmcm9tIFwiLi9jcmVhdGVQb3BwZXIuanNcIjtcbmltcG9ydCBldmVudExpc3RlbmVycyBmcm9tIFwiLi9tb2RpZmllcnMvZXZlbnRMaXN0ZW5lcnMuanNcIjtcbmltcG9ydCBwb3BwZXJPZmZzZXRzIGZyb20gXCIuL21vZGlmaWVycy9wb3BwZXJPZmZzZXRzLmpzXCI7XG5pbXBvcnQgY29tcHV0ZVN0eWxlcyBmcm9tIFwiLi9tb2RpZmllcnMvY29tcHV0ZVN0eWxlcy5qc1wiO1xuaW1wb3J0IGFwcGx5U3R5bGVzIGZyb20gXCIuL21vZGlmaWVycy9hcHBseVN0eWxlcy5qc1wiO1xuaW1wb3J0IG9mZnNldCBmcm9tIFwiLi9tb2RpZmllcnMvb2Zmc2V0LmpzXCI7XG5pbXBvcnQgZmxpcCBmcm9tIFwiLi9tb2RpZmllcnMvZmxpcC5qc1wiO1xuaW1wb3J0IHByZXZlbnRPdmVyZmxvdyBmcm9tIFwiLi9tb2RpZmllcnMvcHJldmVudE92ZXJmbG93LmpzXCI7XG5pbXBvcnQgYXJyb3cgZnJvbSBcIi4vbW9kaWZpZXJzL2Fycm93LmpzXCI7XG5pbXBvcnQgaGlkZSBmcm9tIFwiLi9tb2RpZmllcnMvaGlkZS5qc1wiO1xudmFyIGRlZmF1bHRNb2RpZmllcnMgPSBbZXZlbnRMaXN0ZW5lcnMsIHBvcHBlck9mZnNldHMsIGNvbXB1dGVTdHlsZXMsIGFwcGx5U3R5bGVzLCBvZmZzZXQsIGZsaXAsIHByZXZlbnRPdmVyZmxvdywgYXJyb3csIGhpZGVdO1xudmFyIGNyZWF0ZVBvcHBlciA9IC8qI19fUFVSRV9fKi9wb3BwZXJHZW5lcmF0b3Ioe1xuICBkZWZhdWx0TW9kaWZpZXJzOiBkZWZhdWx0TW9kaWZpZXJzXG59KTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgeyBjcmVhdGVQb3BwZXIsIHBvcHBlckdlbmVyYXRvciwgZGVmYXVsdE1vZGlmaWVycywgZGV0ZWN0T3ZlcmZsb3cgfTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgeyBjcmVhdGVQb3BwZXIgYXMgY3JlYXRlUG9wcGVyTGl0ZSB9IGZyb20gXCIuL3BvcHBlci1saXRlLmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuZXhwb3J0ICogZnJvbSBcIi4vbW9kaWZpZXJzL2luZGV4LmpzXCI7IiwgImltcG9ydCB7IFN1Z2dlc3Rpb25Nb2RhbCB9IGZyb20gXCIuL3N1Z2dlc3RlclwiO1xuaW1wb3J0IHtcbiAgICBGdXp6eU1hdGNoLFxuICAgIFRGaWxlLFxuICAgIEJsb2NrQ2FjaGUsXG4gICAgSGVhZGluZ0NhY2hlLFxuICAgIENhY2hlZE1ldGFkYXRhLFxuICAgIFRleHRDb21wb25lbnQsXG4gICAgQXBwLFxuICAgIFRGb2xkZXJcbn0gZnJvbSBcIm9ic2lkaWFuXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhdGhTdWdnZXN0aW9uTW9kYWwgZXh0ZW5kcyBTdWdnZXN0aW9uTW9kYWw8XG4gICAgVEZpbGUgfCBCbG9ja0NhY2hlIHwgSGVhZGluZ0NhY2hlXG4+IHtcbiAgICBmaWxlOiBURmlsZTtcbiAgICBmaWxlczogVEZpbGVbXTtcbiAgICB0ZXh0OiBUZXh0Q29tcG9uZW50O1xuICAgIGNhY2hlOiBDYWNoZWRNZXRhZGF0YTtcbiAgICBjb25zdHJ1Y3RvcihhcHA6IEFwcCwgaW5wdXQ6IFRleHRDb21wb25lbnQsIGl0ZW1zOiBURmlsZVtdKSB7XG4gICAgICAgIHN1cGVyKGFwcCwgaW5wdXQuaW5wdXRFbCwgaXRlbXMpO1xuICAgICAgICB0aGlzLmZpbGVzID0gWy4uLml0ZW1zXTtcbiAgICAgICAgdGhpcy50ZXh0ID0gaW5wdXQ7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVQcm9tcHRzKCk7XG5cbiAgICAgICAgdGhpcy5pbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCB0aGlzLmdldEZpbGUuYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIGNyZWF0ZVByb21wdHMoKSB7XG4gICAgICAgIHRoaXMuY3JlYXRlUHJvbXB0KFtcbiAgICAgICAgICAgIGNyZWF0ZVNwYW4oe1xuICAgICAgICAgICAgICAgIGNsczogXCJwcm9tcHQtaW5zdHJ1Y3Rpb24tY29tbWFuZFwiLFxuICAgICAgICAgICAgICAgIHRleHQ6IFwiVHlwZSAjXCJcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgY3JlYXRlU3Bhbih7IHRleHQ6IFwidG8gbGluayBoZWFkaW5nXCIgfSlcbiAgICAgICAgXSk7XG4gICAgICAgIHRoaXMuY3JlYXRlUHJvbXB0KFtcbiAgICAgICAgICAgIGNyZWF0ZVNwYW4oe1xuICAgICAgICAgICAgICAgIGNsczogXCJwcm9tcHQtaW5zdHJ1Y3Rpb24tY29tbWFuZFwiLFxuICAgICAgICAgICAgICAgIHRleHQ6IFwiVHlwZSBeXCJcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgY3JlYXRlU3Bhbih7IHRleHQ6IFwidG8gbGluayBibG9ja3NcIiB9KVxuICAgICAgICBdKTtcbiAgICAgICAgdGhpcy5jcmVhdGVQcm9tcHQoW1xuICAgICAgICAgICAgY3JlYXRlU3Bhbih7XG4gICAgICAgICAgICAgICAgY2xzOiBcInByb21wdC1pbnN0cnVjdGlvbi1jb21tYW5kXCIsXG4gICAgICAgICAgICAgICAgdGV4dDogXCJOb3RlOiBcIlxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBjcmVhdGVTcGFuKHtcbiAgICAgICAgICAgICAgICB0ZXh0OiBcIkJsb2NrcyBtdXN0IGhhdmUgYmVlbiBjcmVhdGVkIGFscmVhZHlcIlxuICAgICAgICAgICAgfSlcbiAgICAgICAgXSk7XG4gICAgfVxuICAgIGdldEZpbGUoKSB7XG4gICAgICAgIGNvbnN0IHYgPSB0aGlzLmlucHV0RWwudmFsdWUsXG4gICAgICAgICAgICBmaWxlID0gdGhpcy5hcHAubWV0YWRhdGFDYWNoZS5nZXRGaXJzdExpbmtwYXRoRGVzdChcbiAgICAgICAgICAgICAgICB2LnNwbGl0KC9bXFxeI10vKS5zaGlmdCgpIHx8IFwiXCIsXG4gICAgICAgICAgICAgICAgXCJcIlxuICAgICAgICAgICAgKTtcbiAgICAgICAgaWYgKGZpbGUgPT0gdGhpcy5maWxlKSByZXR1cm47XG4gICAgICAgIHRoaXMuZmlsZSA9IGZpbGU7XG4gICAgICAgIGlmICh0aGlzLmZpbGUpXG4gICAgICAgICAgICB0aGlzLmNhY2hlID0gdGhpcy5hcHAubWV0YWRhdGFDYWNoZS5nZXRGaWxlQ2FjaGUodGhpcy5maWxlKTtcbiAgICAgICAgdGhpcy5vbklucHV0Q2hhbmdlZCgpO1xuICAgIH1cbiAgICBnZXRJdGVtVGV4dChpdGVtOiBURmlsZSB8IEhlYWRpbmdDYWNoZSB8IEJsb2NrQ2FjaGUpIHtcbiAgICAgICAgaWYgKGl0ZW0gaW5zdGFuY2VvZiBURmlsZSkgcmV0dXJuIGl0ZW0ucGF0aDtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChpdGVtLCBcImhlYWRpbmdcIikpIHtcbiAgICAgICAgICAgIHJldHVybiAoPEhlYWRpbmdDYWNoZT5pdGVtKS5oZWFkaW5nO1xuICAgICAgICB9XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaXRlbSwgXCJpZFwiKSkge1xuICAgICAgICAgICAgcmV0dXJuICg8QmxvY2tDYWNoZT5pdGVtKS5pZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkNob29zZUl0ZW0oaXRlbTogVEZpbGUgfCBIZWFkaW5nQ2FjaGUgfCBCbG9ja0NhY2hlKSB7XG4gICAgICAgIGlmIChpdGVtIGluc3RhbmNlb2YgVEZpbGUpIHtcbiAgICAgICAgICAgIHRoaXMudGV4dC5zZXRWYWx1ZShpdGVtLmJhc2VuYW1lKTtcbiAgICAgICAgICAgIHRoaXMuZmlsZSA9IGl0ZW07XG4gICAgICAgICAgICB0aGlzLmNhY2hlID0gdGhpcy5hcHAubWV0YWRhdGFDYWNoZS5nZXRGaWxlQ2FjaGUodGhpcy5maWxlKTtcbiAgICAgICAgfSBlbHNlIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaXRlbSwgXCJoZWFkaW5nXCIpKSB7XG4gICAgICAgICAgICB0aGlzLnRleHQuc2V0VmFsdWUoXG4gICAgICAgICAgICAgICAgdGhpcy5maWxlLmJhc2VuYW1lICsgXCIjXCIgKyAoPEhlYWRpbmdDYWNoZT5pdGVtKS5oZWFkaW5nXG4gICAgICAgICAgICApO1xuICAgICAgICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChpdGVtLCBcImlkXCIpKSB7XG4gICAgICAgICAgICB0aGlzLnRleHQuc2V0VmFsdWUoXG4gICAgICAgICAgICAgICAgdGhpcy5maWxlLmJhc2VuYW1lICsgXCJeXCIgKyAoPEJsb2NrQ2FjaGU+aXRlbSkuaWRcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2VsZWN0U3VnZ2VzdGlvbih7IGl0ZW0gfTogRnV6enlNYXRjaDxURmlsZSB8IEJsb2NrQ2FjaGUgfCBIZWFkaW5nQ2FjaGU+KSB7XG4gICAgICAgIGxldCBsaW5rOiBzdHJpbmc7XG4gICAgICAgIGlmIChpdGVtIGluc3RhbmNlb2YgVEZpbGUpIHtcbiAgICAgICAgICAgIHRoaXMuZmlsZSA9IGl0ZW07XG4gICAgICAgICAgICBsaW5rID0gaXRlbS5iYXNlbmFtZTtcbiAgICAgICAgfSBlbHNlIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaXRlbSwgXCJoZWFkaW5nXCIpKSB7XG4gICAgICAgICAgICBsaW5rID0gdGhpcy5maWxlLmJhc2VuYW1lICsgXCIjXCIgKyAoPEhlYWRpbmdDYWNoZT5pdGVtKS5oZWFkaW5nO1xuICAgICAgICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChpdGVtLCBcImlkXCIpKSB7XG4gICAgICAgICAgICBsaW5rID0gdGhpcy5maWxlLmJhc2VuYW1lICsgXCJeXCIgKyAoPEJsb2NrQ2FjaGU+aXRlbSkuaWQ7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50ZXh0LnNldFZhbHVlKGxpbmspO1xuXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgdGhpcy5vbkNsb3NlKCk7XG4gICAgfVxuICAgIHJlbmRlclN1Z2dlc3Rpb24oXG4gICAgICAgIHJlc3VsdDogRnV6enlNYXRjaDxURmlsZSB8IEJsb2NrQ2FjaGUgfCBIZWFkaW5nQ2FjaGU+LFxuICAgICAgICBlbDogSFRNTEVsZW1lbnRcbiAgICApIHtcbiAgICAgICAgbGV0IHsgaXRlbSwgbWF0Y2g6IG1hdGNoZXMgfSA9IHJlc3VsdCB8fCB7fTtcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBlbC5jcmVhdGVEaXYoe1xuICAgICAgICAgICAgY2xzOiBcInN1Z2dlc3Rpb24tY29udGVudFwiXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIWl0ZW0pIHtcbiAgICAgICAgICAgIGNvbnRlbnQuc2V0VGV4dCh0aGlzLmVtcHR5U3RhdGVUZXh0KTtcbiAgICAgICAgICAgIGNvbnRlbnQucGFyZW50RWxlbWVudC5hZGRDbGFzcyhcImlzLXNlbGVjdGVkXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGl0ZW0gaW5zdGFuY2VvZiBURmlsZSkge1xuICAgICAgICAgICAgbGV0IHBhdGhMZW5ndGggPSBpdGVtLnBhdGgubGVuZ3RoIC0gaXRlbS5uYW1lLmxlbmd0aDtcbiAgICAgICAgICAgIGNvbnN0IG1hdGNoRWxlbWVudHMgPSBtYXRjaGVzLm1hdGNoZXMubWFwKChtKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZVNwYW4oXCJzdWdnZXN0aW9uLWhpZ2hsaWdodFwiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZm9yIChcbiAgICAgICAgICAgICAgICBsZXQgaSA9IHBhdGhMZW5ndGg7XG4gICAgICAgICAgICAgICAgaSA8IGl0ZW0ucGF0aC5sZW5ndGggLSBpdGVtLmV4dGVuc2lvbi5sZW5ndGggLSAxO1xuICAgICAgICAgICAgICAgIGkrK1xuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgbGV0IG1hdGNoID0gbWF0Y2hlcy5tYXRjaGVzLmZpbmQoKG0pID0+IG1bMF0gPT09IGkpO1xuICAgICAgICAgICAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgZWxlbWVudCA9IG1hdGNoRWxlbWVudHNbbWF0Y2hlcy5tYXRjaGVzLmluZGV4T2YobWF0Y2gpXTtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZChlbGVtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5hcHBlbmRUZXh0KGl0ZW0ucGF0aC5zdWJzdHJpbmcobWF0Y2hbMF0sIG1hdGNoWzFdKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgaSArPSBtYXRjaFsxXSAtIG1hdGNoWzBdIC0gMTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29udGVudC5hcHBlbmRUZXh0KGl0ZW0ucGF0aFtpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbC5jcmVhdGVEaXYoe1xuICAgICAgICAgICAgICAgIGNsczogXCJzdWdnZXN0aW9uLW5vdGVcIixcbiAgICAgICAgICAgICAgICB0ZXh0OiBpdGVtLnBhdGhcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChpdGVtLCBcImhlYWRpbmdcIikpIHtcbiAgICAgICAgICAgIGNvbnRlbnQuc2V0VGV4dCgoPEhlYWRpbmdDYWNoZT5pdGVtKS5oZWFkaW5nKTtcbiAgICAgICAgICAgIGNvbnRlbnQucHJlcGVuZChcbiAgICAgICAgICAgICAgICBjcmVhdGVTcGFuKHtcbiAgICAgICAgICAgICAgICAgICAgY2xzOiBcInN1Z2dlc3Rpb24tZmxhaXJcIixcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogYEgkeyg8SGVhZGluZ0NhY2hlPml0ZW0pLmxldmVsfWBcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaXRlbSwgXCJpZFwiKSkge1xuICAgICAgICAgICAgY29udGVudC5zZXRUZXh0KCg8QmxvY2tDYWNoZT5pdGVtKS5pZCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGhlYWRpbmdzKCkge1xuICAgICAgICBpZiAoIXRoaXMuZmlsZSkgcmV0dXJuIFtdO1xuICAgICAgICBpZiAoIXRoaXMuY2FjaGUpIHtcbiAgICAgICAgICAgIHRoaXMuY2FjaGUgPSB0aGlzLmFwcC5tZXRhZGF0YUNhY2hlLmdldEZpbGVDYWNoZSh0aGlzLmZpbGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNhY2hlLmhlYWRpbmdzIHx8IFtdO1xuICAgIH1cbiAgICBnZXQgYmxvY2tzKCkge1xuICAgICAgICBpZiAoIXRoaXMuZmlsZSkgcmV0dXJuIFtdO1xuICAgICAgICBpZiAoIXRoaXMuY2FjaGUpIHtcbiAgICAgICAgICAgIHRoaXMuY2FjaGUgPSB0aGlzLmFwcC5tZXRhZGF0YUNhY2hlLmdldEZpbGVDYWNoZSh0aGlzLmZpbGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuY2FjaGUuYmxvY2tzIHx8IHt9KSB8fCBbXTtcbiAgICB9XG4gICAgZ2V0SXRlbXMoKSB7XG4gICAgICAgIGNvbnN0IHYgPSB0aGlzLmlucHV0RWwudmFsdWU7XG4gICAgICAgIGlmICgvIy8udGVzdCh2KSkge1xuICAgICAgICAgICAgdGhpcy5tb2RpZnlJbnB1dCA9IChpKSA9PiBpLnNwbGl0KC8jLykucG9wKCk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5oZWFkaW5ncztcbiAgICAgICAgfSBlbHNlIGlmICgvXFxeLy50ZXN0KHYpKSB7XG4gICAgICAgICAgICB0aGlzLm1vZGlmeUlucHV0ID0gKGkpID0+IGkuc3BsaXQoL1xcXi8pLnBvcCgpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYmxvY2tzO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGVzO1xuICAgIH1cbn1cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuICAgIGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gXCJzdmVsdGVcIjtcblxuICAgIGltcG9ydCB0eXBlIHsgRXZlbnQsIENhbGVuZGFyIH0gZnJvbSBcInNyYy9AdHlwZXNcIjtcbiAgICBpbXBvcnQgeyBkYXRlU3RyaW5nIH0gZnJvbSBcInNyYy91dGlscy9mdW5jdGlvbnNcIjtcblxuICAgIGltcG9ydCBFdmVudEluc3RhbmNlIGZyb20gXCIuL0V2ZW50SW5zdGFuY2Uuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IEFkZE5ldyBmcm9tIFwiLi4vVXRpbGl0aWVzL0FkZE5ldy5zdmVsdGVcIjtcbiAgICBpbXBvcnQgTm9FeGlzdGluZ0l0ZW1zIGZyb20gXCIuLi9VdGlsaXRpZXMvTm9FeGlzdGluZ0l0ZW1zLnN2ZWx0ZVwiO1xuICAgIGltcG9ydCB0eXBlIEZhbnRhc3lDYWxlbmRhciBmcm9tIFwic3JjL21haW5cIjtcbiAgICBpbXBvcnQgeyBDcmVhdGVFdmVudE1vZGFsIH0gZnJvbSBcInNyYy9zZXR0aW5ncy9tb2RhbHMvZXZlbnRcIjtcbiAgICBpbXBvcnQgRGV0YWlscyBmcm9tIFwiLi4vVXRpbGl0aWVzL0RldGFpbHMuc3ZlbHRlXCI7XG5cbiAgICBleHBvcnQgbGV0IGNhbGVuZGFyOiBDYWxlbmRhcjtcbiAgICBleHBvcnQgbGV0IHBsdWdpbjogRmFudGFzeUNhbGVuZGFyO1xuICAgICQ6IGV2ZW50cyA9IGNhbGVuZGFyLmV2ZW50cztcbiAgICAkOiBtb250aHMgPSBjYWxlbmRhci5zdGF0aWMubW9udGhzO1xuXG4gICAgY29uc3QgZGVsZXRlRXZlbnQgPSAoaXRlbTogRXZlbnQpID0+IHtcbiAgICAgICAgZXZlbnRzID0gZXZlbnRzLmZpbHRlcigoZXZlbnQpID0+IGV2ZW50LmlkICE9PSBpdGVtLmlkKTtcbiAgICB9O1xuXG4gICAgJDoge1xuICAgICAgICBldmVudHMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgaWYgKGEuZGF0ZS55ZWFyICE9IGIuZGF0ZS55ZWFyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGEuZGF0ZS55ZWFyIC0gYi5kYXRlLnllYXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYS5kYXRlLm1vbnRoICE9IGIuZGF0ZS5tb250aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhLmRhdGUubW9udGggLSBiLmRhdGUubW9udGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYS5kYXRlLmRheSAtIGIuZGF0ZS5kYXk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBnZXRDYXRlZ29yeSA9IChjYXRlZ29yeTogc3RyaW5nKSA9PiB7XG4gICAgICAgIHJldHVybiBjYWxlbmRhci5jYXRlZ29yaWVzLmZpbmQoKHsgaWQgfSkgPT4gaWQgPT0gY2F0ZWdvcnkpO1xuICAgIH07XG4gICAgY29uc3QgYWRkID0gKGV2ZW50PzogRXZlbnQpID0+IHtcbiAgICAgICAgY29uc3QgbW9kYWwgPSBuZXcgQ3JlYXRlRXZlbnRNb2RhbChwbHVnaW4uYXBwLCBjYWxlbmRhciwgZXZlbnQpO1xuICAgICAgICBtb2RhbC5vbkNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFtb2RhbC5zYXZlZCkgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKG1vZGFsLmVkaXRpbmcpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IGNhbGVuZGFyLmV2ZW50cy5maW5kSW5kZXgoXG4gICAgICAgICAgICAgICAgICAgIChlKSA9PiBlLmlkID09PSBtb2RhbC5ldmVudC5pZFxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICBjYWxlbmRhci5ldmVudHMuc3BsaWNlKGluZGV4LCAxLCB7IC4uLm1vZGFsLmV2ZW50IH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjYWxlbmRhci5ldmVudHMucHVzaCh7IC4uLm1vZGFsLmV2ZW50IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXZlbnRzID0gY2FsZW5kYXIuZXZlbnRzO1xuICAgICAgICB9O1xuICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgfTtcbjwvc2NyaXB0PlxuXG48RGV0YWlscyBuYW1lPXtcIkV2ZW50c1wifT5cbiAgICA8QWRkTmV3IG9uOmNsaWNrPXsoKSA9PiBhZGQoKX0gLz5cblxuICAgIHsjaWYgIWV2ZW50cy5sZW5ndGh9XG4gICAgICAgIDxOb0V4aXN0aW5nSXRlbXMgbWVzc2FnZT17XCJDcmVhdGUgYSBuZXcgZXZlbnQgdG8gc2VlIGl0IGhlcmUuXCJ9IC8+XG4gICAgezplbHNlfVxuICAgICAgICA8ZGl2IGNsYXNzPVwiZXhpc3RpbmctaXRlbXNcIj5cbiAgICAgICAgICAgIHsjZWFjaCBldmVudHMgYXMgZXZlbnR9XG4gICAgICAgICAgICAgICAgPEV2ZW50SW5zdGFuY2VcbiAgICAgICAgICAgICAgICAgICAge2V2ZW50fVxuICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeT17Z2V0Q2F0ZWdvcnkoZXZlbnQuY2F0ZWdvcnkpfVxuICAgICAgICAgICAgICAgICAgICBkYXRlPXtkYXRlU3RyaW5nKGV2ZW50LmRhdGUsIG1vbnRocywgZXZlbnQuZW5kKX1cbiAgICAgICAgICAgICAgICAgICAgb246ZWRpdD17KCkgPT4gYWRkKGV2ZW50KX1cbiAgICAgICAgICAgICAgICAgICAgb246ZGVsZXRlPXsoKSA9PiBkZWxldGVFdmVudChldmVudCl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgPC9kaXY+XG4gICAgey9pZn1cbjwvRGV0YWlscz5cblxuPHN0eWxlPlxuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuICAgIGltcG9ydCB7IEV4dHJhQnV0dG9uQ29tcG9uZW50LCBUZXh0Q29tcG9uZW50IH0gZnJvbSBcIm9ic2lkaWFuXCI7XG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSBcInN2ZWx0ZVwiO1xuICAgIGltcG9ydCByYW5kb21Db2xvciBmcm9tIFwicmFuZG9tY29sb3JcIjtcblxuICAgIGltcG9ydCB0eXBlIHsgQ2FsZW5kYXIsIEV2ZW50Q2F0ZWdvcnkgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuICAgIGltcG9ydCB7IG5hbm9pZCB9IGZyb20gXCJzcmMvdXRpbHMvZnVuY3Rpb25zXCI7XG4gICAgaW1wb3J0IEFkZE5ldyBmcm9tIFwiLi4vVXRpbGl0aWVzL0FkZE5ldy5zdmVsdGVcIjtcbiAgICBpbXBvcnQgTm9FeGlzdGluZ0l0ZW1zIGZyb20gXCIuLi9VdGlsaXRpZXMvTm9FeGlzdGluZ0l0ZW1zLnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBEZXRhaWxzIGZyb20gXCIuLi9VdGlsaXRpZXMvRGV0YWlscy5zdmVsdGVcIjtcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cbiAgICBleHBvcnQgbGV0IGNhbGVuZGFyOiBDYWxlbmRhcjtcblxuICAgICQ6IGNhdGVnb3JpZXMgPSBjYWxlbmRhci5jYXRlZ29yaWVzO1xuXG4gICAgY29uc3QgbmFtZSA9IChub2RlOiBIVE1MRWxlbWVudCwgY2F0ZWdvcnk6IEV2ZW50Q2F0ZWdvcnkpID0+IHtcbiAgICAgICAgY29uc3QgY29tcCA9IG5ldyBUZXh0Q29tcG9uZW50KG5vZGUpXG4gICAgICAgICAgICAuc2V0VmFsdWUoY2F0ZWdvcnkubmFtZSlcbiAgICAgICAgICAgIC5zZXRQbGFjZWhvbGRlcihcIk5hbWVcIilcbiAgICAgICAgICAgIC5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgIGNhdGVnb3J5Lm5hbWUgPSB2O1xuICAgICAgICAgICAgICAgIGRpc3BhdGNoKFwidXBkYXRlXCIsIGNhdGVnb3J5KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjb21wLmlucHV0RWwuc2V0QXR0cihcInN0eWxlXCIsIFwid2lkdGg6IDEwMCU7XCIpO1xuICAgIH07XG4gICAgY29uc3QgdHJhc2ggPSAobm9kZTogSFRNTEVsZW1lbnQsIGl0ZW06IEV2ZW50Q2F0ZWdvcnkpID0+IHtcbiAgICAgICAgbmV3IEV4dHJhQnV0dG9uQ29tcG9uZW50KG5vZGUpLnNldEljb24oXCJ0cmFzaFwiKS5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIGNhdGVnb3JpZXMgPSBjYXRlZ29yaWVzLmZpbHRlcihcbiAgICAgICAgICAgICAgICAoY2F0ZWdvcnkpID0+IGNhdGVnb3J5LmlkICE9PSBpdGVtLmlkXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBkaXNwYXRjaChcImRlbGV0ZVwiLCBpdGVtKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBjb25zdCB1cGRhdGVDb2xvciA9IChldmVudDogRXZlbnQsIGNhdGVnb3J5OiBFdmVudENhdGVnb3J5KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgdGFyZ2V0IH0gPSBldmVudDtcbiAgICAgICAgaWYgKCEodGFyZ2V0IGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCkpIHJldHVybjtcbiAgICAgICAgY2F0ZWdvcnkuY29sb3IgPSB0YXJnZXQudmFsdWU7XG4gICAgICAgIGRpc3BhdGNoKFwidXBkYXRlXCIsIGNhdGVnb3J5KTtcbiAgICB9O1xuPC9zY3JpcHQ+XG5cbjxEZXRhaWxzIG5hbWU9e1wiQ2F0ZWdvcmllc1wifT5cbiAgICA8QWRkTmV3XG4gICAgICAgIG9uOmNsaWNrPXsoKSA9PlxuICAgICAgICAgICAgKGNhbGVuZGFyLmNhdGVnb3JpZXMgPSBbXG4gICAgICAgICAgICAgICAgLi4uY2F0ZWdvcmllcyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiBuYW5vaWQoNiksXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiByYW5kb21Db2xvcigpLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNhdGVnb3J5XCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdKX1cbiAgICAvPlxuXG4gICAgeyNpZiAhY2F0ZWdvcmllcy5sZW5ndGh9XG4gICAgICAgIDxOb0V4aXN0aW5nSXRlbXNcbiAgICAgICAgICAgIG1lc3NhZ2U9e1wiQ3JlYXRlIGEgbmV3IGV2ZW50IGNhdGVnb3J5IHRvIHNlZSBpdCBoZXJlLlwifVxuICAgICAgICAvPlxuICAgIHs6ZWxzZX1cbiAgICAgICAgPGRpdiBjbGFzcz1cImV4aXN0aW5nLWl0ZW1zXCI+XG4gICAgICAgICAgICB7I2VhY2ggY2F0ZWdvcmllcyBhcyBjYXRlZ29yeX1cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2F0ZWdvcnlcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiB1c2U6bmFtZT17Y2F0ZWdvcnl9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImNvbG9yXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y2F0ZWdvcnkuY29sb3J9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb246Y2hhbmdlPXsoZXZ0KSA9PiB1cGRhdGVDb2xvcihldnQsIGNhdGVnb3J5KX1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHVzZTp0cmFzaD17Y2F0ZWdvcnl9IC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7L2VhY2h9XG4gICAgICAgIDwvZGl2PlxuICAgIHsvaWZ9XG48L0RldGFpbHM+XG5cbjxzdHlsZT5cbiAgICAuY2F0ZWdvcnkge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBhdXRvIGF1dG87XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGdhcDogMC41cmVtO1xuICAgICAgICBwYWRkaW5nLXRvcDogMC43NXJlbTtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSBcInN2ZWx0ZVwiO1xuXG4gICAgaW1wb3J0IHR5cGUgeyBDYWxlbmRhciwgTW9vbiB9IGZyb20gXCJzcmMvQHR5cGVzXCI7XG4gICAgaW1wb3J0IHsgQnV0dG9uQ29tcG9uZW50LCBFeHRyYUJ1dHRvbkNvbXBvbmVudCwgU2V0dGluZyB9IGZyb20gXCJvYnNpZGlhblwiO1xuICAgIGltcG9ydCBNb29uU1ZHIGZyb20gXCJzcmMvdmlldy91aS9Nb29uLnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBBZGROZXcgZnJvbSBcIi4uL1V0aWxpdGllcy9BZGROZXcuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IE5vRXhpc3RpbmdJdGVtcyBmcm9tIFwiLi4vVXRpbGl0aWVzL05vRXhpc3RpbmdJdGVtcy5zdmVsdGVcIjtcbiAgICBpbXBvcnQgVG9nZ2xlQ29tcG9uZW50IGZyb20gXCIuLi9TZXR0aW5ncy9Ub2dnbGVDb21wb25lbnQuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IHsgQ3JlYXRlTW9vbk1vZGFsIH0gZnJvbSBcInNyYy9zZXR0aW5ncy9tb2RhbHMvbW9vbnNcIjtcbiAgICBpbXBvcnQgdHlwZSBGYW50YXN5Q2FsZW5kYXIgZnJvbSBcInNyYy9tYWluXCI7XG5pbXBvcnQgRGV0YWlscyBmcm9tIFwiLi4vVXRpbGl0aWVzL0RldGFpbHMuc3ZlbHRlXCI7XG5cbiAgICBleHBvcnQgbGV0IGNhbGVuZGFyOiBDYWxlbmRhcjtcbiAgICBleHBvcnQgbGV0IHBsdWdpbjogRmFudGFzeUNhbGVuZGFyO1xuXG4gICAgJDogbW9vbnMgPSBjYWxlbmRhci5zdGF0aWMubW9vbnM7XG4gICAgJDogZGlzcGxheU1vb25zID0gY2FsZW5kYXIuc3RhdGljLmRpc3BsYXlNb29ucztcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cbiAgICBjb25zdCB0cmFzaCA9IChub2RlOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgICAgICBsZXQgYiA9IG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKVxuICAgICAgICAgICAgLnNldEljb24oXCJ0cmFzaFwiKVxuICAgICAgICAgICAgLnNldFRvb2x0aXAoXCJEZWxldGVcIik7XG4gICAgfTtcbiAgICBjb25zdCBlZGl0ID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKS5zZXRJY29uKFwicGVuY2lsXCIpLnNldFRvb2x0aXAoXCJFZGl0XCIpO1xuICAgIH07XG4gICAgY29uc3QgZGVsZXRlTW9vbiA9IChpdGVtOiBNb29uKSA9PiB7XG4gICAgICAgIGNhbGVuZGFyLnN0YXRpYy5tb29ucyA9IGNhbGVuZGFyLnN0YXRpYy5tb29ucy5maWx0ZXIoXG4gICAgICAgICAgICAobW9vbikgPT4gbW9vbi5pZCAhPT0gaXRlbS5pZFxuICAgICAgICApO1xuICAgIH07XG5cbiAgICBjb25zdCBhZGQgPSAobW9vbj86IE1vb24pID0+IHtcbiAgICAgICAgY29uc3QgbW9kYWwgPSBuZXcgQ3JlYXRlTW9vbk1vZGFsKHBsdWdpbi5hcHAsIGNhbGVuZGFyLCBtb29uKTtcbiAgICAgICAgbW9kYWwub25DbG9zZSA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmICghbW9kYWwuc2F2ZWQpIHJldHVybjtcbiAgICAgICAgICAgIGlmIChtb2RhbC5lZGl0aW5nKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSBjYWxlbmRhci5zdGF0aWMubW9vbnMuZmluZEluZGV4KFxuICAgICAgICAgICAgICAgICAgICAoZSkgPT4gZS5pZCA9PT0gbW9kYWwubW9vbi5pZFxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICBjYWxlbmRhci5zdGF0aWMubW9vbnMuc3BsaWNlKGluZGV4LCAxLCB7XG4gICAgICAgICAgICAgICAgICAgIC4uLm1vZGFsLm1vb25cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY2FsZW5kYXIuc3RhdGljLm1vb25zLnB1c2goeyAuLi5tb2RhbC5tb29uIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbW9vbnMgPSBjYWxlbmRhci5zdGF0aWMubW9vbnM7XG4gICAgICAgIH07XG4gICAgICAgIG1vZGFsLm9wZW4oKTtcbiAgICB9O1xuPC9zY3JpcHQ+XG5cbjxEZXRhaWxzIG5hbWU9e1wiTW9vbnNcIn0+XG4gICAgPFRvZ2dsZUNvbXBvbmVudFxuICAgICAgICBuYW1lPXtcIkRpc3BsYXkgTW9vbnNcIn1cbiAgICAgICAgZGVzYz17XCJEaXNwbGF5IG1vb25zIGJ5IGRlZmF1bHQgd2hlbiB2aWV3aW5nIHRoaXMgY2FsZW5kYXIuXCJ9XG4gICAgICAgIHZhbHVlPXtkaXNwbGF5TW9vbnN9XG4gICAgICAgIG9uOmNsaWNrPXsoKSA9PlxuICAgICAgICAgICAgKGNhbGVuZGFyLnN0YXRpYy5kaXNwbGF5TW9vbnMgPSAhY2FsZW5kYXIuc3RhdGljLmRpc3BsYXlNb29ucyl9XG4gICAgLz5cblxuICAgIDxBZGROZXcgb246Y2xpY2s9eygpID0+IGFkZCgpfSAvPlxuXG4gICAgeyNpZiAhbW9vbnMubGVuZ3RofVxuICAgICAgICA8Tm9FeGlzdGluZ0l0ZW1zIG1lc3NhZ2U9e1wiQ3JlYXRlIGEgbmV3IG1vb24gdG8gc2VlIGl0IGhlcmUuXCJ9IC8+XG4gICAgezplbHNlfVxuICAgICAgICA8ZGl2IGNsYXNzPVwiZXhpc3RpbmctaXRlbXNcIj5cbiAgICAgICAgICAgIHsjZWFjaCBtb29ucyBhcyBtb29ufVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb29uXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb29uLWluZm9cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic2V0dGluZy1pdGVtLW5hbWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TW9vblNWR1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bW9vbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGhhc2U9e1wiRmlyc3QgUXVhcnRlclwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9ezIwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge21vb24ubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDeWNsZToge21vb24uY3ljbGV9IGRheXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImljb25zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaWNvblwiIHVzZTplZGl0IG9uOmNsaWNrPXsoKSA9PiBhZGQobW9vbil9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJpY29uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2U6dHJhc2hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjpjbGljaz17KCkgPT4gZGVsZXRlTW9vbihtb29uKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgey9lYWNofVxuICAgICAgICA8L2Rpdj5cbiAgICB7L2lmfVxuPC9EZXRhaWxzPlxuXG48c3R5bGU+XG4gICAgLm1vb24ge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBhdXRvO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIGdhcDogMXJlbTtcbiAgICAgICAgbWFyZ2luLXRvcDogMC41cmVtO1xuICAgIH1cbiAgICAuc2V0dGluZy1pdGVtLW5hbWUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAuaWNvbnMge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgICAgICBqdXN0aWZ5LXNlbGY6IGZsZXgtZW5kO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAuaWNvbiB7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuPC9zdHlsZT5cbiIsICJleHBvcnQgY29uc3QgREVGQVVMVF9DQVRFR09SWV9DT0xPUiA9IFwiIzgwODA4MFwiO1xuXG5leHBvcnQgY29uc3QgTU9PTl9TSEFET1dTID0gW1xuICAgIFwiTTYuNSwxNmE5LjUsOS41IDAgMSwwIDE5LDBhOS41LDkuNSAwIDEsMCAtMTksMFwiLFxuICAgIFwiTTE5Ljc5LDZDMjIuMjUsNy4yLDI1LDkuOTIsMjUsMTZzLTIuNzUsOC44LTUuMjEsMTBhMTAuNTksMTAuNTksMCwwLDEtMy43OS43MUExMC43MiwxMC43MiwwLDAsMSwxNiw1LjI4LDEwLjU5LDEwLjU5LDAsMCwxLDE5Ljc5LDZaXCIsXG4gICAgXCJNMTkuNDMsNS44NkMyMS43OSw3LDI0LjUsOS43LDI0LjUsMTZzLTIuNzEsOS01LjA3LDEwLjE0YTEwLjU1LDEwLjU1LDAsMCwxLTMuNDMuNThBMTAuNzIsMTAuNzIsMCwwLDEsMTYsNS4yOCwxMC41NSwxMC41NSwwLDAsMSwxOS40Myw1Ljg2WlwiLFxuICAgIFwiTTE3Ljg3LDUuNDZDMjAuMjMsNi4zNCwyNCw4Ljg4LDI0LDE2LjE3YzAsNi44NS0zLjMzLDkuMzYtNS42OSwxMC4yOWExMSwxMSwwLDAsMS0yLjMxLjI2QTEwLjcyLDEwLjcyLDAsMCwxLDE2LDUuMjgsMTAuNDksMTAuNDksMCwwLDEsMTcuODcsNS40NlpcIixcbiAgICBcIk0xNy43OSw1LjQ1QzIwLDYuMywyMy41LDguNzcsMjMuNSwxNS44OGMwLDcuMzctMy43NSw5Ljg3LTUuOTUsMTAuNzFhOS45Miw5LjkyLDAsMCwxLTEuNTUuMTNBMTAuNzIsMTAuNzIsMCwwLDEsMTYsNS4yOCwxMC41NCwxMC41NCwwLDAsMSwxNy43OSw1LjQ1WlwiLFxuICAgIFwiTTE3LjM1LDUuMzhjMS45Ljc5LDUuMTUsMy4yNSw1LjE1LDEwLjcyLDAsNy4yNS0zLjA2LDkuNjgtNSwxMC41YTEwLjg3LDEwLjg3LDAsMCwxLTEuNTIuMTJBMTAuNzIsMTAuNzIsMCwwLDEsMTYsNS4yOCwxMC4xLDEwLjEsMCwwLDEsMTcuMzUsNS4zOFpcIixcbiAgICBcIk0xNy4wNSw1LjM0YzEuNi43NSw0LjQ1LDMuMTcsNC40NSwxMC43OSwwLDcuMzktMi42OCw5Ljc2LTQuMywxMC41MmExMS45LDExLjksMCwwLDEtMS4yLjA3QTEwLjcyLDEwLjcyLDAsMCwxLDE2LDUuMjgsOSw5LDAsMCwxLDE3LjA1LDUuMzRaXCIsXG4gICAgXCJNMTYuODUsNS4zM2MxLjMuNzQsMy42NSwzLjEyLDMuNjUsMTAuNjdzLTIuMzUsOS45My0zLjY1LDEwLjY3Yy0uMjgsMC0uNTYsMC0uODUsMEExMC43MiwxMC43MiwwLDAsMSwxNiw1LjI4LDcuOTIsNy45MiwwLDAsMSwxNi44NSw1LjMzWlwiLFxuICAgIFwiTTE2LjQ2LDUuMzFjLjk1Ljc4LDMsMy4zNCwzLDEwLjY5cy0yLjA5LDkuOTEtMywxMC42OWwtLjQ2LDBBMTAuNzIsMTAuNzIsMCwwLDEsMTYsNS4yOFpcIixcbiAgICBcIk0xNi4yOSw1LjNjLjY1LjgsMi4yMSwzLjQ4LDIuMjEsMTAuNzhTMTcsMjUuOTEsMTYuMywyNi43bC0uMywwQTEwLjcyLDEwLjcyLDAsMCwxLDE2LDUuMjhaXCIsXG4gICAgXCJNMTYuMTMsNS4yOWMuMzcuODksMS4zNywzLjkyLDEuMzcsMTAuNzlzLTEsOS43Ni0xLjM2LDEwLjYzSDE2QTEwLjcyLDEwLjcyLDAsMCwxLDE2LDUuMjhaXCIsXG4gICAgXCJNMTYsNS4yOUE4NS41LDg1LjUsMCwwLDEsMTYuNSwxNiw4NS41LDg1LjUsMCwwLDEsMTYsMjYuNzFoMEExMC43MiwxMC43MiwwLDAsMSwxNiw1LjI4WlwiLFxuICAgIFwiTTE2LDI2LjcyQTEwLjcyLDEwLjcyLDAsMCwxLDE2LDUuMjhaXCIsXG4gICAgXCJNMTUuNSwxNkE4NS41OSw4NS41OSwwLDAsMCwxNiwyNi43MiwxMC43MiwxMC43MiwwLDAsMSwxNiw1LjI4LDg1LjU5LDg1LjU5LDAsMCwwLDE1LjUsMTZaXCIsXG4gICAgXCJNMTQuNSwxNi4wOGMwLDYuODQsMSw5Ljc3LDEuMzYsMTAuNjNhMTAuNzEsMTAuNzEsMCwwLDEsMC0yMS40MkMxNS41LDYuMTcsMTQuNSw5LjIsMTQuNSwxNi4wOFpcIixcbiAgICBcIk0xNS43LDI2LjdhMTAuNywxMC43LDAsMCwxLDAtMjEuNGMtLjY1LjgtMi4yMSwzLjQ3LTIuMjEsMTAuNzhTMTUsMjUuOTIsMTUuNywyNi43WlwiLFxuICAgIFwiTTE1LjU1LDI2LjdhMTAuNzEsMTAuNzEsMCwwLDEsMC0yMS40Yy0xLC43OC0zLjA1LDMuMzQtMy4wNSwxMC43UzE0LjYsMjUuOTIsMTUuNTUsMjYuN1pcIixcbiAgICBcIk0xNS4xNiwyNi42OGExMC43MSwxMC43MSwwLDAsMSwwLTIxLjM2QzEzLjg1LDYuMDYsMTEuNSw4LjQzLDExLjUsMTZTMTMuODUsMjUuOTQsMTUuMTYsMjYuNjhaXCIsXG4gICAgXCJNMTQuODEsMjYuNjVBMTAuNzIsMTAuNzIsMCwwLDEsMTUsNS4zM2MtMS41OS43Ni00LjQ1LDMuMTctNC40NSwxMC44QzEwLjUsMjMuNTMsMTMuMTksMjUuOSwxNC44MSwyNi42NVpcIixcbiAgICBcIk0xNC40OSwyNi42YTEwLjcxLDEwLjcxLDAsMCwxLC4xNy0yMS4yM2MtMS45LjgtNS4xNiwzLjI0LTUuMTYsMTAuNzNDOS41LDIzLjM3LDEyLjU3LDI1Ljc5LDE0LjQ5LDI2LjZaXCIsXG4gICAgXCJNMTQuNDYsMjYuNmExMC43MSwxMC43MSwwLDAsMS0uMjQtMjEuMTZDMTIsNi4yOSw4LjUsOC43Niw4LjUsMTUuODgsOC41LDIzLjI2LDEyLjI3LDI1Ljc2LDE0LjQ2LDI2LjZaXCIsXG4gICAgXCJNMTMuNzIsMjYuNDdhMTAuNzEsMTAuNzEsMCwwLDEsLjQzLTIxQzExLjc4LDYuMzMsOCw4Ljg3LDgsMTYuMTcsOCwyMywxMS4zNSwyNS41NSwxMy43MiwyNi40N1pcIixcbiAgICBcIk0xMi42LDI2LjE5YTEwLjczLDEwLjczLDAsMCwxLDAtMjAuMzVDMTAuMjMsNyw3LjUsOS42Nyw3LjUsMTZzMi43Myw5LDUuMSwxMC4xNlpcIixcbiAgICBcIk0xMi4yMywyNmExMC43LDEwLjcsMCwwLDEsMC0yMEM5Ljc3LDcuMTksNyw5LjksNywxNlM5Ljc3LDI0LjgxLDEyLjIzLDI2WlwiLFxuICAgIG51bGwsXG4gICAgXCJNMTkuNzcsMjZDMjIuMjMsMjQuODEsMjUsMjIuMSwyNSwxNlMyMi4yMyw3LjE5LDE5Ljc3LDZhMTAuNywxMC43LDAsMCwxLDAsMjBaXCIsXG4gICAgXCJNMTkuNCwyNi4xNkMyMS43NywyNSwyNC41LDIyLjMzLDI0LjUsMTZTMjEuNzcsNywxOS40LDUuODRhMTAuNzEsMTAuNzEsMCwwLDEsMCwyMC4zMlpcIixcbiAgICBcIk0xOC4yOCwyNi40N0MyMC42NSwyNS41NSwyNCwyMywyNCwxNi4xN2MwLTcuMy0zLjc4LTkuODQtNi4xNS0xMC43MmExMC43MSwxMC43MSwwLDAsMSwuNDMsMjFaXCIsXG4gICAgXCJNMTcuNTQsMjYuNmMyLjE5LS44NCw2LTMuMzQsNi0xMC43MiwwLTcuMTItMy41LTkuNTktNS43Mi0xMC40NGExMC43MSwxMC43MSwwLDAsMS0uMjQsMjEuMTZaXCIsXG4gICAgXCJNMTcuNTEsMjYuNmMxLjkyLS44MSw1LTMuMjMsNS0xMC41LDAtNy40OS0zLjI2LTkuOTMtNS4xNi0xMC43M2ExMC43MSwxMC43MSwwLDAsMSwuMTcsMjEuMjNaXCIsXG4gICAgXCJNMTcuMTksMjYuNjVjMS42Mi0uNzUsNC4zMS0zLjEyLDQuMzEtMTAuNTIsMC03LjYzLTIuODYtMTAtNC40NS0xMC44YTEwLjcyLDEwLjcyLDAsMCwxLC4xNCwyMS4zMlpcIixcbiAgICBcIk0xNi44NCwyNi42OGMxLjMxLS43NCwzLjY2LTMuMTEsMy42Ni0xMC42OFMxOC4xNSw2LjA2LDE2Ljg0LDUuMzJhMTAuNzEsMTAuNzEsMCwwLDEsMCwyMS4zNlpcIixcbiAgICBcIk0xNi40NSwyNi43Yy45NS0uNzgsMy4wNS0zLjM0LDMuMDUtMTAuN1MxNy40LDYuMDgsMTYuNDUsNS4zYTEwLjcxLDEwLjcxLDAsMCwxLDAsMjEuNFpcIixcbiAgICBcIk0xNi4zLDI2LjdjLjY3LS43OCwyLjItMy4zNywyLjItMTAuNjJTMTYuOTQsNi4xLDE2LjI5LDUuM2ExMC43LDEwLjcsMCwwLDEsMCwyMS40WlwiLFxuICAgIFwiTTE2LjE0LDI2LjcxYy4zNy0uODYsMS4zNi0zLjc5LDEuMzYtMTAuNjNzLTEtOS45MS0xLjM3LTEwLjc5YTEwLjcxLDEwLjcxLDAsMCwxLDAsMjEuNDJaXCIsXG4gICAgXCJNMTYsMjYuNzJBODUuNTksODUuNTksMCwwLDAsMTYuNSwxNiw4NS41OSw4NS41OSwwLDAsMCwxNiw1LjI4YTEwLjcyLDEwLjcyLDAsMCwxLDAsMjEuNDRaXCIsXG4gICAgXCJNMTYsMjYuNzJWNS4yOGExMC43MiwxMC43MiwwLDAsMSwwLDIxLjQ0WlwiLFxuICAgIFwiTTE2LDI2LjcyaDBBODUuNTksODUuNTksMCwwLDEsMTUuNSwxNiw4NS41OSw4NS41OSwwLDAsMSwxNiw1LjI4aDBhMTAuNzIsMTAuNzIsMCwwLDEsMCwyMS40NFpcIixcbiAgICBcIk0xNiwyNi43MmgtLjE0Yy0uMzctLjg2LTEuMzYtMy43OS0xLjM2LTEwLjYzczEtOS45MSwxLjM3LTEwLjc5SDE2YTEwLjcyLDEwLjcyLDAsMCwxLDAsMjEuNDRaXCIsXG4gICAgXCJNMTYsMjYuNzJsLS4zLDBjLS42Ny0uNzgtMi4yLTMuMzctMi4yLTEwLjYyczEuNTYtMTAsMi4yMS0xMC43OGwuMjksMGExMC43MiwxMC43MiwwLDAsMSwwLDIxLjQ0WlwiLFxuICAgIFwiTTE2LDI2LjcybC0uNDUsMGMtMS0uNzgtMy4wNS0zLjM0LTMuMDUtMTAuN3MyLjEtOS45MiwzLjA1LTEwLjdsLjQ1LDBhMTAuNzIsMTAuNzIsMCwwLDEsMCwyMS40NFpcIixcbiAgICBcIk0xNiwyNi43MmMtLjI4LDAtLjU2LDAtLjg0LDBDMTMuODUsMjUuOTQsMTEuNSwyMy41NywxMS41LDE2czIuMzUtOS45NCwzLjY2LTEwLjY4Yy4yOCwwLC41NiwwLC44NCwwYTEwLjcyLDEwLjcyLDAsMCwxLDAsMjEuNDRaXCIsXG4gICAgXCJNMTYsMjYuNzJhMTEuNywxMS43LDAsMCwxLTEuMTktLjA3Yy0xLjYyLS43NS00LjMxLTMuMTItNC4zMS0xMC41MiwwLTcuNjMsMi44Ni0xMCw0LjQ1LTEwLjguMzUsMCwuNywwLDEuMDUsMGExMC43MiwxMC43MiwwLDAsMSwwLDIxLjQ0WlwiLFxuICAgIFwiTTE2LDI2LjcyYTEwLjg1LDEwLjg1LDAsMCwxLTEuNTEtLjEyYy0xLjkyLS44MS01LTMuMjMtNS0xMC41LDAtNy40OSwzLjI2LTkuOTMsNS4xNi0xMC43M0ExMS45LDExLjksMCwwLDEsMTYsNS4yOGExMC43MiwxMC43MiwwLDAsMSwwLDIxLjQ0WlwiLFxuICAgIFwiTTE2LDI2LjcyYTExLjE2LDExLjE2LDAsMCwxLTEuNTQtLjEyYy0yLjE5LS44NC02LTMuMzQtNi0xMC43MiwwLTcuMTIsMy41LTkuNTksNS43Mi0xMC40NEExMC40MywxMC40MywwLDAsMSwxNiw1LjI4YTEwLjcyLDEwLjcyLDAsMCwxLDAsMjEuNDRaXCIsXG4gICAgXCJNMTYsMjYuNzJhMTAuNjksMTAuNjksMCwwLDEtMi4yOC0uMjVDMTEuMzUsMjUuNTUsOCwyMyw4LDE2LjE3YzAtNy4zLDMuNzgtOS44NCw2LjE1LTEwLjcyQTExLjI2LDExLjI2LDAsMCwxLDE2LDUuMjhhMTAuNzIsMTAuNzIsMCwwLDEsMCwyMS40NFpcIixcbiAgICBcIk0xNiwyNi43MmExMC42MywxMC42MywwLDAsMS0zLjQtLjU2QzEwLjIzLDI1LDcuNSwyMi4zMyw3LjUsMTZzMi43My05LDUuMS0xMC4xNkExMC43MiwxMC43MiwwLDEsMSwxNiwyNi43MlpcIixcbiAgICBcIk0xNiwyNi43MmExMC41MiwxMC41MiwwLDAsMS0zLjc3LS43QzkuNzcsMjQuODEsNywyMi4xLDcsMTZTOS43Nyw3LjE5LDEyLjIzLDZBMTAuNTIsMTAuNTIsMCwwLDEsMTYsNS4yOGExMC43MiwxMC43MiwwLDAsMSwwLDIxLjQ0WlwiXG5dO1xuXG5leHBvcnQgY29uc3QgU0hBRE9XX01BUCA9IHtcbiAgICBcIk5ldyBNb29uXCI6IE1PT05fU0hBRE9XU1swXSxcbiAgICBcIk5ldyBNb29uIEZhZGluZ1wiOiBNT09OX1NIQURPV1NbMV0sXG4gICAgXCJOZXcgTW9vbiBGYWRlZFwiOiBNT09OX1NIQURPV1NbMl0sXG4gICAgXCJXYXhpbmcgQ3Jlc2NlbnQgUmlzaW5nXCI6IE1PT05fU0hBRE9XU1szXSxcbiAgICBcIldheGluZyBDcmVzY2VudCBSaXNlblwiOiBNT09OX1NIQURPV1NbNF0sXG4gICAgXCJXYXhpbmcgQ3Jlc2NlbnRcIjogTU9PTl9TSEFET1dTWzZdLFxuICAgIFwiV2F4aW5nIENyZXNjZW50IEZhZGluZ1wiOiBNT09OX1NIQURPV1NbN10sXG4gICAgXCJXYXhpbmcgQ3Jlc2NlbnQgRmFkZWRcIjogTU9PTl9TSEFET1dTWzhdLFxuICAgIFwiRmlyc3QgUXVhcnRlciBSaXNpbmdcIjogTU9PTl9TSEFET1dTWzldLFxuICAgIFwiRmlyc3QgUXVhcnRlciBSaXNlblwiOiBNT09OX1NIQURPV1NbMTBdLFxuICAgIFwiRmlyc3QgUXVhcnRlclwiOiBNT09OX1NIQURPV1NbMTJdLFxuICAgIFwiRmlyc3QgUXVhcnRlciBGYWRpbmdcIjogTU9PTl9TSEFET1dTWzEzXSxcbiAgICBcIkZpcnN0IFF1YXJ0ZXIgRmFkZWRcIjogTU9PTl9TSEFET1dTWzE0XSxcbiAgICBcIldheGluZyBHaWJib3VzIFJpc2luZ1wiOiBNT09OX1NIQURPV1NbMTVdLFxuICAgIFwiV2F4aW5nIEdpYmJvdXMgUmlzZW5cIjogTU9PTl9TSEFET1dTWzE2XSxcbiAgICBcIldheGluZyBHaWJib3VzXCI6IE1PT05fU0hBRE9XU1sxOF0sXG4gICAgXCJXYXhpbmcgR2liYm91cyBGYWRpbmdcIjogTU9PTl9TSEFET1dTWzE5XSxcbiAgICBcIldheGluZyBHaWJib3VzIEZhZGVkXCI6IE1PT05fU0hBRE9XU1syMF0sXG4gICAgXCJGdWxsIE1vb24gUmlzaW5nXCI6IE1PT05fU0hBRE9XU1syMV0sXG4gICAgXCJGdWxsIE1vb24gUmlzZW5cIjogTU9PTl9TSEFET1dTWzIyXSxcbiAgICBcIkZ1bGwgTW9vblwiOiBNT09OX1NIQURPV1NbMjRdLFxuICAgIFwiRnVsbCBNb29uIEZhZGluZ1wiOiBNT09OX1NIQURPV1NbMjVdLFxuICAgIFwiRnVsbCBNb29uIEZhZGVkXCI6IE1PT05fU0hBRE9XU1syNl0sXG4gICAgXCJXYW5pbmcgR2liYm91cyBSaXNpbmdcIjogTU9PTl9TSEFET1dTWzI3XSxcbiAgICBcIldhbmluZyBHaWJib3VzIFJpc2VuXCI6IE1PT05fU0hBRE9XU1syOF0sXG4gICAgXCJXYW5pbmcgR2liYm91c1wiOiBNT09OX1NIQURPV1NbMzBdLFxuICAgIFwiV2FuaW5nIEdpYmJvdXMgRmFkaW5nXCI6IE1PT05fU0hBRE9XU1szMV0sXG4gICAgXCJXYW5pbmcgR2liYm91cyBGYWRlZFwiOiBNT09OX1NIQURPV1NbMzJdLFxuICAgIFwiTGFzdCBRdWFydGVyIFJpc2luZ1wiOiBNT09OX1NIQURPV1NbMzNdLFxuICAgIFwiTGFzdCBRdWFydGVyIFJpc2VuXCI6IE1PT05fU0hBRE9XU1szNF0sXG4gICAgXCJMYXN0IFF1YXJ0ZXJcIjogTU9PTl9TSEFET1dTWzM2XSxcbiAgICBcIkxhc3QgUXVhcnRlciBGYWRpbmdcIjogTU9PTl9TSEFET1dTWzM3XSxcbiAgICBcIkxhc3QgUXVhcnRlciBGYWRlZFwiOiBNT09OX1NIQURPV1NbMzhdLFxuICAgIFwiV2FuaW5nIENyZXNjZW50IFJpc2luZ1wiOiBNT09OX1NIQURPV1NbMzldLFxuICAgIFwiV2FuaW5nIENyZXNjZW50IFJpc2VuXCI6IE1PT05fU0hBRE9XU1s0MF0sXG4gICAgXCJXYW5pbmcgQ3Jlc2NlbnRcIjogTU9PTl9TSEFET1dTWzQyXSxcbiAgICBcIldhbmluZyBDcmVzY2VudCBGYWRpbmdcIjogTU9PTl9TSEFET1dTWzQzXSxcbiAgICBcIldhbmluZyBDcmVzY2VudCBGYWRlZFwiOiBNT09OX1NIQURPV1NbNDRdLFxuICAgIFwiTmV3IE1vb24gUmlzaW5nXCI6IE1PT05fU0hBRE9XU1s0NV0sXG4gICAgXCJOZXcgTW9vbiBSaXNlblwiOiBNT09OX1NIQURPV1NbNDZdXG59O1xuXG5leHBvcnQgY29uc3QgTU9PTl9QSEFTRVM6IHtcbiAgICBbZ3JhbnVsYXJpdHk6IG51bWJlcl06IEFycmF5PFBoYXNlPjtcbn0gPSB7XG4gICAgNDogW1wiTmV3IE1vb25cIiwgXCJGaXJzdCBRdWFydGVyXCIsIFwiRnVsbCBNb29uXCIsIFwiTGFzdCBRdWFydGVyXCJdLFxuXG4gICAgODogW1xuICAgICAgICBcIk5ldyBNb29uXCIsXG4gICAgICAgIFwiV2F4aW5nIENyZXNjZW50XCIsXG4gICAgICAgIFwiRmlyc3QgUXVhcnRlclwiLFxuICAgICAgICBcIldheGluZyBHaWJib3VzXCIsXG4gICAgICAgIFwiRnVsbCBNb29uXCIsXG4gICAgICAgIFwiV2FuaW5nIEdpYmJvdXNcIixcbiAgICAgICAgXCJMYXN0IFF1YXJ0ZXJcIixcbiAgICAgICAgXCJXYW5pbmcgQ3Jlc2NlbnRcIlxuICAgIF0sXG5cbiAgICAxNjogW1xuICAgICAgICBcIk5ldyBNb29uXCIsXG4gICAgICAgIFwiTmV3IE1vb24gRmFkaW5nXCIsXG4gICAgICAgIFwiV2F4aW5nIENyZXNjZW50XCIsXG4gICAgICAgIFwiV2F4aW5nIENyZXNjZW50IEZhZGluZ1wiLFxuICAgICAgICBcIkZpcnN0IFF1YXJ0ZXJcIixcbiAgICAgICAgXCJGaXJzdCBRdWFydGVyIEZhZGluZ1wiLFxuICAgICAgICBcIldheGluZyBHaWJib3VzXCIsXG4gICAgICAgIFwiV2F4aW5nIEdpYmJvdXMgRmFkaW5nXCIsXG4gICAgICAgIFwiRnVsbCBNb29uXCIsXG4gICAgICAgIFwiRnVsbCBNb29uIEZhZGluZ1wiLFxuICAgICAgICBcIldhbmluZyBHaWJib3VzXCIsXG4gICAgICAgIFwiV2FuaW5nIEdpYmJvdXMgRmFkaW5nXCIsXG4gICAgICAgIFwiTGFzdCBRdWFydGVyXCIsXG4gICAgICAgIFwiTGFzdCBRdWFydGVyIEZhZGluZ1wiLFxuICAgICAgICBcIldhbmluZyBDcmVzY2VudFwiLFxuICAgICAgICBcIldhbmluZyBDcmVzY2VudCBGYWRpbmdcIlxuICAgIF0sXG5cbiAgICAyNDogW1xuICAgICAgICBcIk5ldyBNb29uXCIsXG4gICAgICAgIFwiTmV3IE1vb24gRmFkaW5nXCIsXG4gICAgICAgIFwiV2F4aW5nIENyZXNjZW50IFJpc2luZ1wiLFxuICAgICAgICBcIldheGluZyBDcmVzY2VudFwiLFxuICAgICAgICBcIldheGluZyBDcmVzY2VudCBGYWRpbmdcIixcbiAgICAgICAgXCJGaXJzdCBRdWFydGVyIFJpc2luZ1wiLFxuICAgICAgICBcIkZpcnN0IFF1YXJ0ZXJcIixcbiAgICAgICAgXCJGaXJzdCBRdWFydGVyIEZhZGluZ1wiLFxuICAgICAgICBcIldheGluZyBHaWJib3VzIFJpc2luZ1wiLFxuICAgICAgICBcIldheGluZyBHaWJib3VzXCIsXG4gICAgICAgIFwiV2F4aW5nIEdpYmJvdXMgRmFkaW5nXCIsXG4gICAgICAgIFwiRnVsbCBNb29uIFJpc2luZ1wiLFxuICAgICAgICBcIkZ1bGwgTW9vblwiLFxuICAgICAgICBcIkZ1bGwgTW9vbiBGYWRpbmdcIixcbiAgICAgICAgXCJXYW5pbmcgR2liYm91cyBSaXNpbmdcIixcbiAgICAgICAgXCJXYW5pbmcgR2liYm91c1wiLFxuICAgICAgICBcIldhbmluZyBHaWJib3VzIEZhZGluZ1wiLFxuICAgICAgICBcIkxhc3QgUXVhcnRlciBSaXNpbmdcIixcbiAgICAgICAgXCJMYXN0IFF1YXJ0ZXJcIixcbiAgICAgICAgXCJMYXN0IFF1YXJ0ZXIgRmFkaW5nXCIsXG4gICAgICAgIFwiV2FuaW5nIENyZXNjZW50IFJpc2luZ1wiLFxuICAgICAgICBcIldhbmluZyBDcmVzY2VudFwiLFxuICAgICAgICBcIldhbmluZyBDcmVzY2VudCBGYWRpbmdcIixcbiAgICAgICAgXCJOZXcgTW9vbiBSaXNpbmdcIlxuICAgIF0sXG5cbiAgICA0MDogW1xuICAgICAgICBcIk5ldyBNb29uXCIsXG4gICAgICAgIFwiTmV3IE1vb24gRmFkaW5nXCIsXG4gICAgICAgIFwiTmV3IE1vb24gRmFkZWRcIixcbiAgICAgICAgXCJXYXhpbmcgQ3Jlc2NlbnQgUmlzaW5nXCIsXG4gICAgICAgIFwiV2F4aW5nIENyZXNjZW50IFJpc2VuXCIsXG4gICAgICAgIFwiV2F4aW5nIENyZXNjZW50XCIsXG4gICAgICAgIFwiV2F4aW5nIENyZXNjZW50IEZhZGluZ1wiLFxuICAgICAgICBcIldheGluZyBDcmVzY2VudCBGYWRlZFwiLFxuICAgICAgICBcIkZpcnN0IFF1YXJ0ZXIgUmlzaW5nXCIsXG4gICAgICAgIFwiRmlyc3QgUXVhcnRlciBSaXNlblwiLFxuICAgICAgICBcIkZpcnN0IFF1YXJ0ZXJcIixcbiAgICAgICAgXCJGaXJzdCBRdWFydGVyIEZhZGluZ1wiLFxuICAgICAgICBcIkZpcnN0IFF1YXJ0ZXIgRmFkZWRcIixcbiAgICAgICAgXCJXYXhpbmcgR2liYm91cyBSaXNpbmdcIixcbiAgICAgICAgXCJXYXhpbmcgR2liYm91cyBSaXNlblwiLFxuICAgICAgICBcIldheGluZyBHaWJib3VzXCIsXG4gICAgICAgIFwiV2F4aW5nIEdpYmJvdXMgRmFkaW5nXCIsXG4gICAgICAgIFwiV2F4aW5nIEdpYmJvdXMgRmFkZWRcIixcbiAgICAgICAgXCJGdWxsIE1vb24gUmlzaW5nXCIsXG4gICAgICAgIFwiRnVsbCBNb29uIFJpc2VuXCIsXG4gICAgICAgIFwiRnVsbCBNb29uXCIsXG4gICAgICAgIFwiRnVsbCBNb29uIEZhZGluZ1wiLFxuICAgICAgICBcIkZ1bGwgTW9vbiBGYWRlZFwiLFxuICAgICAgICBcIldhbmluZyBHaWJib3VzIFJpc2luZ1wiLFxuICAgICAgICBcIldhbmluZyBHaWJib3VzIFJpc2VuXCIsXG4gICAgICAgIFwiV2FuaW5nIEdpYmJvdXNcIixcbiAgICAgICAgXCJXYW5pbmcgR2liYm91cyBGYWRpbmdcIixcbiAgICAgICAgXCJXYW5pbmcgR2liYm91cyBGYWRlZFwiLFxuICAgICAgICBcIkxhc3QgUXVhcnRlciBSaXNpbmdcIixcbiAgICAgICAgXCJMYXN0IFF1YXJ0ZXIgUmlzZW5cIixcbiAgICAgICAgXCJMYXN0IFF1YXJ0ZXJcIixcbiAgICAgICAgXCJMYXN0IFF1YXJ0ZXIgRmFkaW5nXCIsXG4gICAgICAgIFwiTGFzdCBRdWFydGVyIEZhZGVkXCIsXG4gICAgICAgIFwiV2FuaW5nIENyZXNjZW50IFJpc2luZ1wiLFxuICAgICAgICBcIldhbmluZyBDcmVzY2VudCBSaXNlblwiLFxuICAgICAgICBcIldhbmluZyBDcmVzY2VudFwiLFxuICAgICAgICBcIldhbmluZyBDcmVzY2VudCBGYWRpbmdcIixcbiAgICAgICAgXCJXYW5pbmcgQ3Jlc2NlbnQgRmFkZWRcIixcbiAgICAgICAgXCJOZXcgTW9vbiBSaXNpbmdcIixcbiAgICAgICAgXCJOZXcgTW9vbiBSaXNlblwiXG4gICAgXVxufTtcblxuZXhwb3J0IHR5cGUgUGhhc2UgPVxuICAgIHwgXCJOZXcgTW9vblwiXG4gICAgfCBcIk5ldyBNb29uIEZhZGluZ1wiXG4gICAgfCBcIk5ldyBNb29uIEZhZGVkXCJcbiAgICB8IFwiV2F4aW5nIENyZXNjZW50IFJpc2luZ1wiXG4gICAgfCBcIldheGluZyBDcmVzY2VudCBSaXNlblwiXG4gICAgfCBcIldheGluZyBDcmVzY2VudFwiXG4gICAgfCBcIldheGluZyBDcmVzY2VudCBGYWRpbmdcIlxuICAgIHwgXCJXYXhpbmcgQ3Jlc2NlbnQgRmFkZWRcIlxuICAgIHwgXCJGaXJzdCBRdWFydGVyIFJpc2luZ1wiXG4gICAgfCBcIkZpcnN0IFF1YXJ0ZXIgUmlzZW5cIlxuICAgIHwgXCJGaXJzdCBRdWFydGVyXCJcbiAgICB8IFwiRmlyc3QgUXVhcnRlciBGYWRpbmdcIlxuICAgIHwgXCJGaXJzdCBRdWFydGVyIEZhZGVkXCJcbiAgICB8IFwiV2F4aW5nIEdpYmJvdXMgUmlzaW5nXCJcbiAgICB8IFwiV2F4aW5nIEdpYmJvdXMgUmlzZW5cIlxuICAgIHwgXCJXYXhpbmcgR2liYm91c1wiXG4gICAgfCBcIldheGluZyBHaWJib3VzIEZhZGluZ1wiXG4gICAgfCBcIldheGluZyBHaWJib3VzIEZhZGVkXCJcbiAgICB8IFwiRnVsbCBNb29uIFJpc2luZ1wiXG4gICAgfCBcIkZ1bGwgTW9vbiBSaXNlblwiXG4gICAgfCBcIkZ1bGwgTW9vblwiXG4gICAgfCBcIkZ1bGwgTW9vbiBGYWRpbmdcIlxuICAgIHwgXCJGdWxsIE1vb24gRmFkZWRcIlxuICAgIHwgXCJXYW5pbmcgR2liYm91cyBSaXNpbmdcIlxuICAgIHwgXCJXYW5pbmcgR2liYm91cyBSaXNlblwiXG4gICAgfCBcIldhbmluZyBHaWJib3VzXCJcbiAgICB8IFwiV2FuaW5nIEdpYmJvdXMgRmFkaW5nXCJcbiAgICB8IFwiV2FuaW5nIEdpYmJvdXMgRmFkZWRcIlxuICAgIHwgXCJMYXN0IFF1YXJ0ZXIgUmlzaW5nXCJcbiAgICB8IFwiTGFzdCBRdWFydGVyIFJpc2VuXCJcbiAgICB8IFwiTGFzdCBRdWFydGVyXCJcbiAgICB8IFwiTGFzdCBRdWFydGVyIEZhZGluZ1wiXG4gICAgfCBcIkxhc3QgUXVhcnRlciBGYWRlZFwiXG4gICAgfCBcIldhbmluZyBDcmVzY2VudCBSaXNpbmdcIlxuICAgIHwgXCJXYW5pbmcgQ3Jlc2NlbnQgUmlzZW5cIlxuICAgIHwgXCJXYW5pbmcgQ3Jlc2NlbnRcIlxuICAgIHwgXCJXYW5pbmcgQ3Jlc2NlbnQgRmFkaW5nXCJcbiAgICB8IFwiV2FuaW5nIENyZXNjZW50IEZhZGVkXCJcbiAgICB8IFwiTmV3IE1vb24gUmlzaW5nXCJcbiAgICB8IFwiTmV3IE1vb24gUmlzZW5cIjtcbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuICAgIGltcG9ydCB0eXBlIHsgTW9vbiB9IGZyb20gXCJzcmMvQHR5cGVzXCI7XG4gICAgaW1wb3J0IHsgUGhhc2UsIFNIQURPV19NQVAgfSBmcm9tIFwic3JjL3V0aWxzL2NvbnN0YW50c1wiO1xuXG4gICAgZXhwb3J0IGxldCBtb29uOiBNb29uO1xuICAgIGV4cG9ydCBsZXQgbGFiZWw6IGJvb2xlYW4gPSB0cnVlO1xuICAgIGV4cG9ydCBsZXQgc2l6ZSA9IDI4O1xuICAgIGV4cG9ydCBsZXQgcGhhc2U6IFBoYXNlO1xuXG4gICAgJDogcGF0aCA9IFNIQURPV19NQVBbcGhhc2VdO1xuPC9zY3JpcHQ+XG5cbjxzdmdcbiAgICBjbGFzcz1cIm1vb25cIlxuICAgIGlkPXttb29uLmlkfVxuICAgIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZFwiXG4gICAgYXJpYS1sYWJlbD17bGFiZWwgPyBgJHttb29uLm5hbWV9XFxuJHtwaGFzZX1gIDogbnVsbH1cbiAgICB3aWR0aD17c2l6ZX1cbiAgICBoZWlnaHQ9e3NpemV9XG4gICAgdmlld0JveD1cIjAgMCAzMiAzMlwiXG4+XG4gICAgPGNpcmNsZSBjeD1cIjE2XCIgY3k9XCIxNlwiIHI9XCIxMFwiIGZpbGw9e21vb24uZmFjZUNvbG9yfSAvPlxuICAgIDxwYXRoIGNsYXNzPVwic2hhZG93XCIgZmlsbD17bW9vbi5zaGFkb3dDb2xvcn0gZD17cGF0aH0gLz5cbiAgICA8Y2lyY2xlXG4gICAgICAgIGN4PVwiMTZcIlxuICAgICAgICBjeT1cIjE2XCJcbiAgICAgICAgcj1cIjEwXCJcbiAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICBzdHJva2U9XCIjMDAwXCJcbiAgICAgICAgc3Ryb2tlLXdpZHRoPVwiMnB4XCJcbiAgICAvPlxuPC9zdmc+XG5cbjxzdHlsZT5cbjwvc3R5bGU+XG4iLCAiaW1wb3J0IHsgTW9kYWwsIEFwcCwgU2V0dGluZywgTm90aWNlIH0gZnJvbSBcIm9ic2lkaWFuXCI7XG5pbXBvcnQgdHlwZSB7IENhbGVuZGFyLCBNb29uIH0gZnJvbSBcIi4uLy4uL0B0eXBlc1wiO1xuXG5pbXBvcnQgeyBuYW5vaWQgfSBmcm9tIFwiLi4vLi4vdXRpbHMvZnVuY3Rpb25zXCI7XG5cbmV4cG9ydCBjbGFzcyBDcmVhdGVNb29uTW9kYWwgZXh0ZW5kcyBNb2RhbCB7XG4gICAgc2F2ZWQgPSBmYWxzZTtcbiAgICBtb29uOiBNb29uID0ge1xuICAgICAgICBuYW1lOiBudWxsLFxuICAgICAgICBjeWNsZTogbnVsbCxcbiAgICAgICAgb2Zmc2V0OiBudWxsLFxuICAgICAgICBmYWNlQ29sb3I6IFwiI2ZmZlwiLFxuICAgICAgICBzaGFkb3dDb2xvcjogXCIjMDAwXCIsXG4gICAgICAgIGlkOiBuYW5vaWQoNilcbiAgICB9O1xuICAgIGVkaXRpbmc6IGJvb2xlYW47XG4gICAgaW5mb0VsOiBIVE1MRGl2RWxlbWVudDtcbiAgICBjb25zdHJ1Y3RvcihhcHA6IEFwcCwgcHVibGljIGNhbGVuZGFyOiBDYWxlbmRhciwgbW9vbj86IE1vb24pIHtcbiAgICAgICAgc3VwZXIoYXBwKTtcbiAgICAgICAgaWYgKG1vb24pIHtcbiAgICAgICAgICAgIHRoaXMubW9vbiA9IHsgLi4ubW9vbiB9O1xuICAgICAgICAgICAgdGhpcy5lZGl0aW5nID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbnRhaW5lckVsLmFkZENsYXNzKFwiZmFudGFzeS1jYWxlbmRhci1jcmVhdGUtbW9vblwiKTtcbiAgICB9XG5cbiAgICBhc3luYyBkaXNwbGF5KCkge1xuICAgICAgICB0aGlzLmNvbnRlbnRFbC5lbXB0eSgpO1xuICAgICAgICB0aGlzLmNvbnRlbnRFbC5jcmVhdGVFbChcImgzXCIsIHtcbiAgICAgICAgICAgIHRleHQ6IHRoaXMuZWRpdGluZyA/IFwiRWRpdCBNb29uXCIgOiBcIk5ldyBNb29uXCJcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5pbmZvRWwgPSB0aGlzLmNvbnRlbnRFbC5jcmVhdGVEaXYoXCJtb29uLWluZm9cIik7XG4gICAgICAgIHRoaXMuYnVpbGRJbmZvKCk7XG5cbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5jb250ZW50RWwpXG4gICAgICAgICAgICAuYWRkQnV0dG9uKChiKSA9PiB7XG4gICAgICAgICAgICAgICAgYi5zZXRCdXR0b25UZXh0KFwiU2F2ZVwiKVxuICAgICAgICAgICAgICAgICAgICAuc2V0Q3RhKClcbiAgICAgICAgICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLm1vb24ubmFtZT8ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IE5vdGljZShcIlRoZSBtb29uIG11c3QgaGF2ZSBhIG5hbWUuXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5tb29uLmN5Y2xlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IE5vdGljZShcIlRoZSBtb29uIG11c3QgaGF2ZSBhIHBvc2l0aXZlIGN5Y2xlLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNhdmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmFkZEV4dHJhQnV0dG9uKChiKSA9PiB7XG4gICAgICAgICAgICAgICAgYi5zZXRJY29uKFwiY3Jvc3NcIilcbiAgICAgICAgICAgICAgICAgICAgLnNldFRvb2x0aXAoXCJDYW5jZWxcIilcbiAgICAgICAgICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4gdGhpcy5jbG9zZSgpKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cbiAgICBidWlsZEluZm8oKSB7XG4gICAgICAgIHRoaXMuaW5mb0VsLmVtcHR5KCk7XG5cbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5pbmZvRWwpLnNldE5hbWUoXCJOYW1lXCIpLmFkZFRleHQoKHQpID0+IHtcbiAgICAgICAgICAgIHQuc2V0VmFsdWUodGhpcy5tb29uLm5hbWUpLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5tb29uLm5hbWUgPSB2O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBuZXcgU2V0dGluZyh0aGlzLmluZm9FbClcbiAgICAgICAgICAgIC5zZXROYW1lKFwiQ3ljbGVcIilcbiAgICAgICAgICAgIC5zZXREZXNjKFxuICAgICAgICAgICAgICAgIFwiSG93IG1hbnkgZGF5cyBpdCB0YWtlcyBmb3IgdGhlIG1vb24gdG8gY29tcGxldGUgYSBmdWxsIGN5Y2xlLlwiXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuYWRkVGV4dCgodCkgPT4ge1xuICAgICAgICAgICAgICAgIHQuaW5wdXRFbC5zZXRBdHRyKFwidHlwZVwiLCBcIm51bWJlclwiKTtcbiAgICAgICAgICAgICAgICB0LnNldFZhbHVlKGAke3RoaXMubW9vbi5jeWNsZX1gKS5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNOYU4oTnVtYmVyKHYpKSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1vb24uY3ljbGUgPSBOdW1iZXIodik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5pbmZvRWwpXG4gICAgICAgICAgICAuc2V0TmFtZShcIk9mZnNldFwiKVxuICAgICAgICAgICAgLnNldERlc2MoXCJTaGlmdCB0aGUgc3RhcnRpbmcgbW9vbiBwaGFzZSBieSBhIG51bWJlciBvZiBkYXlzLlwiKVxuICAgICAgICAgICAgLmFkZFRleHQoKHQpID0+IHtcbiAgICAgICAgICAgICAgICB0LmlucHV0RWwuc2V0QXR0cihcInR5cGVcIiwgXCJudW1iZXJcIik7XG4gICAgICAgICAgICAgICAgdC5zZXRWYWx1ZShgJHt0aGlzLm1vb24ub2Zmc2V0fWApLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc05hTihOdW1iZXIodikpKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubW9vbi5vZmZzZXQgPSBOdW1iZXIodik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBuZXcgU2V0dGluZyh0aGlzLmluZm9FbCkuc2V0TmFtZShcIkZhY2UgQ29sb3JcIikuYWRkVGV4dCgodCkgPT4ge1xuICAgICAgICAgICAgdC5pbnB1dEVsLnNldEF0dHIoXCJ0eXBlXCIsIFwiY29sb3JcIik7XG4gICAgICAgICAgICB0LnNldFZhbHVlKHRoaXMubW9vbi5mYWNlQ29sb3IpLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5tb29uLmZhY2VDb2xvciA9IHY7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5pbmZvRWwpLnNldE5hbWUoXCJTaGFkb3cgQ29sb3JcIikuYWRkVGV4dCgodCkgPT4ge1xuICAgICAgICAgICAgdC5pbnB1dEVsLnNldEF0dHIoXCJ0eXBlXCIsIFwiY29sb3JcIik7XG4gICAgICAgICAgICB0LnNldFZhbHVlKHRoaXMubW9vbi5zaGFkb3dDb2xvcikub25DaGFuZ2UoKHYpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLm1vb24uc2hhZG93Q29sb3IgPSB2O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhc3luYyBvbk9wZW4oKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuZGlzcGxheSgpO1xuICAgIH1cbn1cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuICAgIGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gXCJzdmVsdGVcIjtcbiAgICBpbXBvcnQgdHlwZSB7IExlYXBEYXkgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuICAgIGltcG9ydCB7IEV4dHJhQnV0dG9uQ29tcG9uZW50IH0gZnJvbSBcIm9ic2lkaWFuXCI7XG4gICAgaW1wb3J0IHsgZ2V0SW50ZXJ2YWxEZXNjcmlwdGlvbiB9IGZyb20gXCJzcmMvdXRpbHMvZnVuY3Rpb25zXCI7XG5cbiAgICBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG4gICAgY29uc3QgdHJhc2ggPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgbGV0IGIgPSBuZXcgRXh0cmFCdXR0b25Db21wb25lbnQobm9kZSlcbiAgICAgICAgICAgIC5zZXRJY29uKFwidHJhc2hcIilcbiAgICAgICAgICAgIC5zZXRUb29sdGlwKFwiRGVsZXRlXCIpO1xuICAgICAgICBiLmV4dHJhU2V0dGluZ3NFbC5zZXRBdHRyKFwic3R5bGVcIiwgXCJtYXJnaW4tbGVmdDogMDtcIik7XG4gICAgfTtcbiAgICBjb25zdCBlZGl0ID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKS5zZXRJY29uKFwicGVuY2lsXCIpLnNldFRvb2x0aXAoXCJFZGl0XCIpO1xuICAgIH07XG4gICAgZXhwb3J0IGxldCBsZWFwZGF5OiBMZWFwRGF5O1xuXG4gICAgJDogZGVzY3JpcHRpb24gPSBnZXRJbnRlcnZhbERlc2NyaXB0aW9uKGxlYXBkYXkpO1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJsZWFwZGF5XCI+XG4gICAgPGRpdiBjbGFzcz1cImxlYXBkYXktaW5mb1wiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInNldHRpbmctaXRlbS1uYW1lXCI+XG4gICAgICAgICAgICB7bGVhcGRheS5uYW1lfVxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb25cIj57ZGVzY3JpcHRpb259PC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiaWNvbnNcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImljb25cIiB1c2U6ZWRpdCBvbjpjbGljaz17KCkgPT4gZGlzcGF0Y2goXCJlZGl0XCIpfSAvPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiaWNvblwiIHVzZTp0cmFzaCBvbjpjbGljaz17KCkgPT4gZGlzcGF0Y2goXCJkZWxldGVcIil9IC8+XG4gICAgPC9kaXY+XG48L2Rpdj5cblxuPHN0eWxlPlxuICAgIC5sZWFwZGF5IHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgYXV0bztcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBnYXA6IDFyZW07XG4gICAgICAgIG1hcmdpbi10b3A6IDAuNXJlbTtcbiAgICB9XG4gICAgLmxlYXBkYXktaW5mbyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC5pY29ucyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1zZWxmOiBmbGV4LWVuZDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLmxlYXBkYXkgLmljb24ge1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbjwvc3R5bGU+IiwgImltcG9ydCB7XG4gICAgTW9kYWwsXG4gICAgQXBwLFxuICAgIFNldHRpbmcsXG4gICAgTm90aWNlLFxuICAgIEJ1dHRvbkNvbXBvbmVudCxcbiAgICBFeHRyYUJ1dHRvbkNvbXBvbmVudFxufSBmcm9tIFwib2JzaWRpYW5cIjtcbmltcG9ydCB0eXBlIHsgQ2FsZW5kYXIsIExlYXBEYXksIExlYXBEYXlDb25kaXRpb24gfSBmcm9tIFwiLi4vLi4vQHR5cGVzXCI7XG5cbmltcG9ydCB7IGdldEludGVydmFsRGVzY3JpcHRpb24sIG5hbm9pZCB9IGZyb20gXCIuLi8uLi91dGlscy9mdW5jdGlvbnNcIjtcblxuZXhwb3J0IGNsYXNzIENyZWF0ZUxlYXBEYXlNb2RhbCBleHRlbmRzIE1vZGFsIHtcbiAgICBzYXZlZCA9IGZhbHNlO1xuICAgIGxlYXBkYXk6IExlYXBEYXkgPSB7XG4gICAgICAgIGlkOiBuYW5vaWQoNiksXG4gICAgICAgIG5hbWU6IFwiTGVhcCBEYXlcIixcbiAgICAgICAgaW50ZXJ2YWw6IFtdLFxuICAgICAgICBpbnRlcmNhbGFyeTogZmFsc2UsXG4gICAgICAgIHRpbWVzcGFuOiBudWxsLFxuICAgICAgICBvZmZzZXQ6IDAsXG4gICAgICAgIHR5cGU6IFwibGVhcGRheVwiXG4gICAgfTtcbiAgICBlZGl0aW5nOiBib29sZWFuO1xuICAgIGluZm9FbDogSFRNTERpdkVsZW1lbnQ7XG4gICAgY29uZGl0aW9uc0VsOiBIVE1MRGl2RWxlbWVudDtcbiAgICBjb25zdHJ1Y3RvcihhcHA6IEFwcCwgcHVibGljIGNhbGVuZGFyOiBDYWxlbmRhciwgbGVhcGRheT86IExlYXBEYXkpIHtcbiAgICAgICAgc3VwZXIoYXBwKTtcbiAgICAgICAgaWYgKGxlYXBkYXkpIHtcbiAgICAgICAgICAgIHRoaXMubGVhcGRheSA9IHsgLi4ubGVhcGRheSB9O1xuICAgICAgICAgICAgdGhpcy5lZGl0aW5nID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbnRhaW5lckVsLmFkZENsYXNzKFwiZmFudGFzeS1jYWxlbmRhci1jcmVhdGUtbGVhcGRheVwiKTtcbiAgICB9XG5cbiAgICBhc3luYyBkaXNwbGF5KCkge1xuICAgICAgICB0aGlzLmNvbnRlbnRFbC5lbXB0eSgpO1xuICAgICAgICB0aGlzLmNvbnRlbnRFbC5jcmVhdGVFbChcImgzXCIsIHtcbiAgICAgICAgICAgIHRleHQ6IHRoaXMuZWRpdGluZyA/IFwiRWRpdCBMZWFwIERheVwiIDogXCJOZXcgTGVhcCBEYXlcIlxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmluZm9FbCA9IHRoaXMuY29udGVudEVsLmNyZWF0ZURpdihcImxlYXBkYXktaW5mb1wiKTtcbiAgICAgICAgdGhpcy5idWlsZEluZm8oKTtcblxuICAgICAgICBuZXcgU2V0dGluZyh0aGlzLmNvbnRlbnRFbClcbiAgICAgICAgICAgIC5hZGRCdXR0b24oKGIpID0+IHtcbiAgICAgICAgICAgICAgICBiLnNldEJ1dHRvblRleHQoXCJTYXZlXCIpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRDdGEoKVxuICAgICAgICAgICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMubGVhcGRheS5pbnRlcnZhbC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgTm90aWNlKFwiVGhlIGxlYXAgZGF5IG11c3QgaGF2ZSBhbiBpbnRlcnZhbC5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubGVhcGRheS50aW1lc3BhbiA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgTm90aWNlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlRoZSBsZWFwIGRheSBtdXN0IGJlIGF0dGFjaGVkIHRvIGEgTW9udGguXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuYWRkRXh0cmFCdXR0b24oKGIpID0+IHtcbiAgICAgICAgICAgICAgICBiLnNldEljb24oXCJjcm9zc1wiKVxuICAgICAgICAgICAgICAgICAgICAuc2V0VG9vbHRpcChcIkNhbmNlbFwiKVxuICAgICAgICAgICAgICAgICAgICAub25DbGljaygoKSA9PiB0aGlzLmNsb3NlKCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxuICAgIGJ1aWxkSW5mbygpIHtcbiAgICAgICAgdGhpcy5pbmZvRWwuZW1wdHkoKTtcblxuICAgICAgICBuZXcgU2V0dGluZyh0aGlzLmluZm9FbCkuc2V0TmFtZShcIk5hbWVcIikuYWRkVGV4dCgodCkgPT4ge1xuICAgICAgICAgICAgdC5zZXRWYWx1ZSh0aGlzLmxlYXBkYXkubmFtZSkub25DaGFuZ2UoKHYpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmxlYXBkYXkubmFtZSA9IHY7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5pbmZvRWwpLnNldE5hbWUoXCJJbnRlcmNhbGFyeVwiKS5hZGRUb2dnbGUoKHQpID0+IHtcbiAgICAgICAgICAgIHQuc2V0VmFsdWUodGhpcy5sZWFwZGF5LmludGVyY2FsYXJ5KS5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMubGVhcGRheS5pbnRlcmNhbGFyeSA9IHY7XG4gICAgICAgICAgICAgICAgdGhpcy5kaXNwbGF5KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5pbmZvRWwpXG4gICAgICAgICAgICAuc2V0TmFtZShcIk1vbnRoXCIpXG4gICAgICAgICAgICAuc2V0RGVzYyhcIlRoZSBsZWFwIGRheSB3aWxsIGJlIGFkZGVkIHRvIHRoaXMgbW9udGguXCIpXG4gICAgICAgICAgICAuYWRkRHJvcGRvd24oKGQpID0+IHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBtb250aCBvZiB0aGlzLmNhbGVuZGFyLnN0YXRpYy5tb250aHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmNhbGVuZGFyLnN0YXRpYy5tb250aHMuaW5kZXhPZihtb250aCk7XG4gICAgICAgICAgICAgICAgICAgIGQuYWRkT3B0aW9uKGAke2luZGV4fWAsIG1vbnRoLm5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkLnNldFZhbHVlKGAke3RoaXMubGVhcGRheS50aW1lc3Bhbn1gKS5vbkNoYW5nZShcbiAgICAgICAgICAgICAgICAgICAgKHYpID0+ICh0aGlzLmxlYXBkYXkudGltZXNwYW4gPSBOdW1iZXIodikpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBuZXcgU2V0dGluZyh0aGlzLmluZm9FbClcbiAgICAgICAgICAgIC5zZXROYW1lKFwiT2Zmc2V0XCIpXG4gICAgICAgICAgICAuc2V0RGVzYyhcIlNoaWZ0IHRoZSB5ZWFycyB0aGUgbGVhcCBkYXkgaXMgYXBwbGllZCB0by5cIilcbiAgICAgICAgICAgIC5hZGRUZXh0KCh0KSA9PiB7XG4gICAgICAgICAgICAgICAgdC5pbnB1dEVsLnNldEF0dHIoXCJ0eXBlXCIsIFwibnVtYmVyXCIpO1xuICAgICAgICAgICAgICAgIHQuc2V0VmFsdWUoYCR7dGhpcy5sZWFwZGF5Lm9mZnNldH1gKS5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNOYU4oTnVtYmVyKHYpKSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxlYXBkYXkub2Zmc2V0ID0gTnVtYmVyKHYpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5jb25kaXRpb25zRWwgPSB0aGlzLmluZm9FbC5jcmVhdGVEaXYoKTtcbiAgICAgICAgdGhpcy5idWlsZENvbmRpdGlvbnMoKTtcbiAgICB9XG4gICAgYnVpbGRDb25kaXRpb25zKCkge1xuICAgICAgICB0aGlzLmNvbmRpdGlvbnNFbC5lbXB0eSgpO1xuXG4gICAgICAgIGNvbnN0IGIgPSBuZXcgQnV0dG9uQ29tcG9uZW50KHRoaXMuY29uZGl0aW9uc0VsKVxuICAgICAgICAgICAgLnNldFRvb2x0aXAoXCJBZGQgTmV3XCIpXG4gICAgICAgICAgICAuc2V0QnV0dG9uVGV4dChcIitcIilcbiAgICAgICAgICAgIC5vbkNsaWNrKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBtb2RhbCA9IG5ldyBJbnRlcnZhbE1vZGFsKFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFwcCxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnRlcnZhbHMubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgbW9kYWwub25DbG9zZSA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFtb2RhbC5zYXZlZCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxlYXBkYXkuaW50ZXJ2YWwucHVzaChtb2RhbC5jb25kaXRpb24pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1aWxkQ29uZGl0aW9ucygpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgbW9kYWwub3BlbigpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIGIuYnV0dG9uRWwuc3R5bGUud2lkdGggPSBcIjEwMCVcIjtcblxuICAgICAgICB0aGlzLmNvbmRpdGlvbnNFbC5jcmVhdGVTcGFuKHtcbiAgICAgICAgICAgIHRleHQ6IGdldEludGVydmFsRGVzY3JpcHRpb24odGhpcy5sZWFwZGF5KSxcbiAgICAgICAgICAgIGNsczogXCJmYW50YXN5LWxlYXAtZGF5LWludGVydmFsLWRlc2NyaXB0aW9uIHNldHRpbmctaXRlbVwiXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGZvciAobGV0IGludGVydmFsIG9mIHRoaXMuaW50ZXJ2YWxzKSB7XG4gICAgICAgICAgICBuZXcgU2V0dGluZyh0aGlzLmNvbmRpdGlvbnNFbClcbiAgICAgICAgICAgICAgICAuc2V0TmFtZSh0aGlzLmdldEludGVydmFsTmFtZShpbnRlcnZhbCkpXG4gICAgICAgICAgICAgICAgLmFkZEV4dHJhQnV0dG9uKChiKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGIuc2V0SWNvbihcInBlbmNpbFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldFRvb2x0aXAoXCJFZGl0XCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbW9kYWwgPSBuZXcgSW50ZXJ2YWxNb2RhbChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWxzLmluZGV4T2YoaW50ZXJ2YWwpICE9IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVydmFsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RhbC5vbkNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW1vZGFsLnNhdmVkKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubGVhcGRheS5pbnRlcnZhbC5zcGxpY2UoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxlYXBkYXkuaW50ZXJ2YWwuaW5kZXhPZihpbnRlcnZhbCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kYWwuY29uZGl0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVpbGRDb25kaXRpb25zKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5hZGRFeHRyYUJ1dHRvbigoYikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBiLnNldEljb24oXCJ0cmFzaFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldFRvb2x0aXAoXCJEZWxldGVcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxlYXBkYXkuaW50ZXJ2YWwuc3BsaWNlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxlYXBkYXkuaW50ZXJ2YWwuaW5kZXhPZihpbnRlcnZhbCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnRlcnZhbHMubGVuZ3RoICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWxzWzBdLmV4Y2x1c2l2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmludGVydmFsc1swXS5leGNsdXNpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idWlsZENvbmRpdGlvbnMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBpbnRlcnZhbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxlYXBkYXkuaW50ZXJ2YWwuc29ydCgoYSwgYikgPT4gYS5pbnRlcnZhbCAtIGIuaW50ZXJ2YWwpO1xuICAgIH1cbiAgICBnZXRJbnRlcnZhbE5hbWUoaW50ZXJ2YWw6IExlYXBEYXlDb25kaXRpb24pIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IFtgJHtpbnRlcnZhbC5pbnRlcnZhbH1gXTtcbiAgICAgICAgaWYgKGludGVydmFsLmV4Y2x1c2l2ZSkge1xuICAgICAgICAgICAgbmFtZS5wdXNoKFwiKEV4Y2x1c2l2ZSlcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGludGVydmFsLmlnbm9yZSkge1xuICAgICAgICAgICAgbmFtZS5wdXNoKFwiIC0gSWdub3JpbmcgT2Zmc2V0XCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuYW1lLmpvaW4oXCIgXCIpO1xuICAgIH1cbiAgICBhc3luYyBvbk9wZW4oKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuZGlzcGxheSgpO1xuICAgIH1cbn1cblxuY2xhc3MgSW50ZXJ2YWxNb2RhbCBleHRlbmRzIE1vZGFsIHtcbiAgICBzYXZlZDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGVkaXRpbmc6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBjb25kaXRpb246IExlYXBEYXlDb25kaXRpb24gPSB7XG4gICAgICAgIGludGVydmFsOiBudWxsLFxuICAgICAgICBleGNsdXNpdmU6IGZhbHNlLFxuICAgICAgICBpZ25vcmU6IGZhbHNlXG4gICAgfTtcbiAgICBidXR0b25zRWw6IEhUTUxEaXZFbGVtZW50O1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgYXBwOiBBcHAsXG4gICAgICAgIHB1YmxpYyBjYW5CZUV4Y2x1c2l2ZT86IGJvb2xlYW4sXG4gICAgICAgIGNvbmRpdGlvbj86IExlYXBEYXlDb25kaXRpb25cbiAgICApIHtcbiAgICAgICAgc3VwZXIoYXBwKTtcblxuICAgICAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmRpdGlvbiA9IHsgLi4uY29uZGl0aW9uIH07XG4gICAgICAgICAgICB0aGlzLmVkaXRpbmcgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uT3BlbigpIHtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuZW1wdHkoKTtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuY3JlYXRlRWwoXCJoM1wiLCB7IHRleHQ6IFwiTGVhcCBEYXkgQ29uZGl0aW9uXCIgfSk7XG5cbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5jb250ZW50RWwpXG4gICAgICAgICAgICAuc2V0TmFtZShcIkludGVydmFsXCIpXG4gICAgICAgICAgICAuc2V0RGVzYyhcIkhvdyBvZnRlbiB0aGUgY29uZGl0aW9uIGFwcGxpZXMuXCIpXG4gICAgICAgICAgICAuYWRkVGV4dCgodCkgPT4ge1xuICAgICAgICAgICAgICAgIHQuaW5wdXRFbC5zZXRBdHRyKFwidHlwZVwiLCBcIm51bWJlclwiKTtcbiAgICAgICAgICAgICAgICB0LnNldFZhbHVlKGAke3RoaXMuY29uZGl0aW9uLmludGVydmFsfWApLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc05hTihOdW1iZXIodikpKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29uZGl0aW9uLmludGVydmFsID0gTnVtYmVyKHYpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5jb250ZW50RWwpXG4gICAgICAgICAgICAuc2V0TmFtZShcIkV4Y2x1c2l2ZVwiKVxuICAgICAgICAgICAgLnNldERlc2MoXG4gICAgICAgICAgICAgICAgXCJJZiB0cnVlLCB0aGUgbGVhcCBkYXkgd2lsbCBub3QgYXBwbHkgd2hlbiB0aGUgeWVhciBtZWV0cyB0aGUgY29uZGl0aW9uLlxcblxcblJlcXVpcmVzIHRoZSBsZWFwIGRheSB0byBoYXZlIGF0IGxlYXN0IG9uZSBub24tZXhjbHVzaXZlIGNvbmRpdGlvbi5cIlxuICAgICAgICAgICAgKVxuXG4gICAgICAgICAgICAuYWRkVG9nZ2xlKCh0KSA9PlxuICAgICAgICAgICAgICAgIHRcbiAgICAgICAgICAgICAgICAgICAgLnNldERpc2FibGVkKCF0aGlzLmNhbkJlRXhjbHVzaXZlKVxuICAgICAgICAgICAgICAgICAgICAuc2V0VmFsdWUodGhpcy5jb25kaXRpb24uZXhjbHVzaXZlKVxuICAgICAgICAgICAgICAgICAgICAub25DaGFuZ2UoKHYpID0+ICh0aGlzLmNvbmRpdGlvbi5leGNsdXNpdmUgPSB2KSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIG5ldyBTZXR0aW5nKHRoaXMuY29udGVudEVsKVxuICAgICAgICAgICAgLnNldE5hbWUoXCJJZ25vcmUgT2Zmc2V0XCIpXG4gICAgICAgICAgICAuc2V0RGVzYyhcbiAgICAgICAgICAgICAgICBcIlRoZSBjb25kaXRpb24gd2lsbCBpZ25vcmUgdGhlIGxlYXAgZGF5J3Mgb2Zmc2V0IHdoZW4gY2hlY2tpbmcgdG8gYXBwbHkuXCJcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIC5hZGRUb2dnbGUoKHQpID0+XG4gICAgICAgICAgICAgICAgdFxuICAgICAgICAgICAgICAgICAgICAuc2V0VmFsdWUodGhpcy5jb25kaXRpb24uaWdub3JlKVxuICAgICAgICAgICAgICAgICAgICAub25DaGFuZ2UoKHYpID0+ICh0aGlzLmNvbmRpdGlvbi5pZ25vcmUgPSB2KSlcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5idXR0b25zRWwgPSB0aGlzLmNvbnRlbnRFbC5jcmVhdGVEaXYoXCJmYW50YXN5LWNvbnRleHQtYnV0dG9uc1wiKTtcbiAgICAgICAgbmV3IEJ1dHRvbkNvbXBvbmVudCh0aGlzLmJ1dHRvbnNFbClcbiAgICAgICAgICAgIC5zZXRDdGEoKVxuICAgICAgICAgICAgLnNldEJ1dHRvblRleHQodGhpcy5lZGl0aW5nID8gXCJTYXZlXCIgOiBcIkNyZWF0ZVwiKVxuICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5jb25kaXRpb24uaW50ZXJ2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3IE5vdGljZShcIlRoZSBjb25kaXRpb24gcmVxdWlyZXMgYW4gaW50ZXJ2YWwuXCIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc2F2ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBuZXcgRXh0cmFCdXR0b25Db21wb25lbnQodGhpcy5idXR0b25zRWwpXG4gICAgICAgICAgICAuc2V0VG9vbHRpcChcIkNhbmNlbFwiKVxuICAgICAgICAgICAgLnNldEljb24oXCJjcm9zc1wiKVxuICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4gdGhpcy5jbG9zZSgpKTtcbiAgICB9XG59XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIsIGdldENvbnRleHQgfSBmcm9tIFwic3ZlbHRlXCI7XG5cbiAgICBpbXBvcnQgdHlwZSB7IENhbGVuZGFyLCBMZWFwRGF5IH0gZnJvbSBcInNyYy9AdHlwZXNcIjtcbiAgICBpbXBvcnQgTGVhcERheVVJIGZyb20gXCIuL0xlYXBEYXlJbnN0YW5jZS5zdmVsdGVcIjtcbiAgICBpbXBvcnQgQWRkTmV3IGZyb20gXCIuLi9VdGlsaXRpZXMvQWRkTmV3LnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBOb0V4aXN0aW5nSXRlbXMgZnJvbSBcIi4uL1V0aWxpdGllcy9Ob0V4aXN0aW5nSXRlbXMuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IHsgQ3JlYXRlTGVhcERheU1vZGFsIH0gZnJvbSBcInNyYy9zZXR0aW5ncy9tb2RhbHMvbGVhcGRheVwiO1xuICAgIGltcG9ydCB0eXBlIEZhbnRhc3lDYWxlbmRhciBmcm9tIFwic3JjL21haW5cIjtcbiAgICBpbXBvcnQgeyBXcml0YWJsZSB9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcbiAgICBpbXBvcnQgRGV0YWlscyBmcm9tIFwiLi4vVXRpbGl0aWVzL0RldGFpbHMuc3ZlbHRlXCI7XG5cbiAgICBleHBvcnQgbGV0IGNhbGVuZGFyOiBDYWxlbmRhcjtcbiAgICBleHBvcnQgbGV0IHBsdWdpbjogRmFudGFzeUNhbGVuZGFyO1xuXG4gICAgY29uc3Qgc3RvcmUgPSBnZXRDb250ZXh0PFdyaXRhYmxlPENhbGVuZGFyPj4oXCJzdG9yZVwiKTtcblxuICAgIHN0b3JlLnN1YnNjcmliZSgodikgPT4gKGNhbGVuZGFyID0gdikpO1xuXG4gICAgJDogbGVhcGRheXMgPSBjYWxlbmRhci5zdGF0aWMubGVhcERheXM7XG4gICAgbGV0IGRpc2FibGVkID1cbiAgICAgICAgY2FsZW5kYXIuc3RhdGljLm1vbnRocz8uZmlsdGVyKChtKSA9PiBtLm5hbWU/Lmxlbmd0aCkubGVuZ3RoID09IDA7XG4gICAgJDoge1xuICAgICAgICBkaXNhYmxlZCA9XG4gICAgICAgICAgICBjYWxlbmRhci5zdGF0aWMubW9udGhzPy5maWx0ZXIoKG0pID0+IG0ubmFtZT8ubGVuZ3RoKS5sZW5ndGggPT0gMDtcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuICAgIGNvbnN0IGRlbGV0ZUxlYXBEYXkgPSAoaXRlbTogTGVhcERheSkgPT4ge1xuICAgICAgICBsZWFwZGF5cyA9IGxlYXBkYXlzLmZpbHRlcigobGVhcGRheSkgPT4gbGVhcGRheS5pZCAhPT0gaXRlbS5pZCk7XG4gICAgICAgIGRpc3BhdGNoKFwiZWRpdC1sZWFwZGF5c1wiLCBsZWFwZGF5cyk7XG4gICAgfTtcblxuICAgIGNvbnN0IGFkZCA9IChsZWFwZGF5PzogTGVhcERheSkgPT4ge1xuICAgICAgICBjb25zdCBtb2RhbCA9IG5ldyBDcmVhdGVMZWFwRGF5TW9kYWwocGx1Z2luLmFwcCwgY2FsZW5kYXIsIGxlYXBkYXkpO1xuICAgICAgICBtb2RhbC5vbkNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFtb2RhbC5zYXZlZCkgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKG1vZGFsLmVkaXRpbmcpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IGNhbGVuZGFyLnN0YXRpYy5sZWFwRGF5cy5maW5kSW5kZXgoXG4gICAgICAgICAgICAgICAgICAgIChlKSA9PiBlLmlkID09PSBtb2RhbC5sZWFwZGF5LmlkXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgIGNhbGVuZGFyLnN0YXRpYy5sZWFwRGF5cy5zcGxpY2UoaW5kZXgsIDEsIHtcbiAgICAgICAgICAgICAgICAgICAgLi4ubW9kYWwubGVhcGRheVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjYWxlbmRhci5zdGF0aWMubGVhcERheXMucHVzaCh7IC4uLm1vZGFsLmxlYXBkYXkgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZWFwZGF5cyA9IGNhbGVuZGFyLnN0YXRpYy5sZWFwRGF5cztcbiAgICAgICAgfTtcbiAgICAgICAgbW9kYWwub3BlbigpO1xuICAgIH07XG48L3NjcmlwdD5cblxuPERldGFpbHMgbmFtZT17XCJMZWFwIERheXNcIn0+XG4gICAgPEFkZE5ld1xuICAgICAgICBvbjpjbGljaz17KCkgPT4gYWRkKCl9XG4gICAgICAgIHtkaXNhYmxlZH1cbiAgICAgICAgbGFiZWw9e2Rpc2FibGVkID8gXCJBdCBsZWFzdCBvbmUgbmFtZWQgbW9udGggaXMgcmVxdWlyZWRcIiA6IG51bGx9XG4gICAgLz5cblxuICAgIHsjaWYgIWxlYXBkYXlzLmxlbmd0aH1cbiAgICAgICAgPE5vRXhpc3RpbmdJdGVtcyBtZXNzYWdlPXtcIkNyZWF0ZSBhIG5ldyBsZWFwIGRheSB0byBzZWUgaXQgaGVyZS5cIn0gLz5cbiAgICB7OmVsc2V9XG4gICAgICAgIDxkaXYgY2xhc3M9XCJleGlzdGluZy1pdGVtc1wiPlxuICAgICAgICAgICAgeyNlYWNoIGxlYXBkYXlzIGFzIGxlYXBkYXl9XG4gICAgICAgICAgICAgICAgPExlYXBEYXlVSVxuICAgICAgICAgICAgICAgICAgICB7bGVhcGRheX1cbiAgICAgICAgICAgICAgICAgICAgb246ZWRpdD17KCkgPT4gYWRkKGxlYXBkYXkpfVxuICAgICAgICAgICAgICAgICAgICBvbjpkZWxldGU9eygpID0+IGRlbGV0ZUxlYXBEYXkobGVhcGRheSl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgPC9kaXY+XG4gICAgey9pZn1cbjwvRGV0YWlscz5cblxuPHN0eWxlPlxuPC9zdHlsZT5cbiIsICJpbXBvcnQge1xuICAgIFRGb2xkZXIsXG4gICAgVGV4dENvbXBvbmVudCxcbiAgICBDYWNoZWRNZXRhZGF0YSxcbiAgICBBcHAsXG4gICAgRnV6enlNYXRjaFxufSBmcm9tIFwib2JzaWRpYW5cIjtcbmltcG9ydCB7IFN1Z2dlc3Rpb25Nb2RhbCB9IGZyb20gXCIuL3N1Z2dlc3RlclwiO1xuXG5leHBvcnQgY2xhc3MgRm9sZGVyU3VnZ2VzdGlvbk1vZGFsIGV4dGVuZHMgU3VnZ2VzdGlvbk1vZGFsPFRGb2xkZXI+IHtcbiAgICB0ZXh0OiBUZXh0Q29tcG9uZW50O1xuICAgIGNhY2hlOiBDYWNoZWRNZXRhZGF0YTtcbiAgICBmb2xkZXJzOiBURm9sZGVyW107XG4gICAgZm9sZGVyOiBURm9sZGVyO1xuICAgIGNvbnN0cnVjdG9yKGFwcDogQXBwLCBpbnB1dDogVGV4dENvbXBvbmVudCwgaXRlbXM6IFRGb2xkZXJbXSkge1xuICAgICAgICBzdXBlcihhcHAsIGlucHV0LmlucHV0RWwsIGl0ZW1zKTtcbiAgICAgICAgdGhpcy5mb2xkZXJzID0gWy4uLml0ZW1zXTtcbiAgICAgICAgdGhpcy50ZXh0ID0gaW5wdXQ7XG5cbiAgICAgICAgdGhpcy5pbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB0aGlzLmdldEZvbGRlcigpKTtcbiAgICB9XG4gICAgZ2V0Rm9sZGVyKCkge1xuICAgICAgICBjb25zdCB2ID0gdGhpcy5pbnB1dEVsLnZhbHVlLFxuICAgICAgICAgICAgZm9sZGVyID0gdGhpcy5hcHAudmF1bHQuZ2V0QWJzdHJhY3RGaWxlQnlQYXRoKHYpO1xuICAgICAgICBpZiAoZm9sZGVyID09IHRoaXMuZm9sZGVyKSByZXR1cm47XG4gICAgICAgIGlmICghKGZvbGRlciBpbnN0YW5jZW9mIFRGb2xkZXIpKSByZXR1cm47XG4gICAgICAgIHRoaXMuZm9sZGVyID0gZm9sZGVyO1xuXG4gICAgICAgIHRoaXMub25JbnB1dENoYW5nZWQoKTtcbiAgICB9XG4gICAgZ2V0SXRlbVRleHQoaXRlbTogVEZvbGRlcikge1xuICAgICAgICByZXR1cm4gaXRlbS5wYXRoO1xuICAgIH1cbiAgICBvbkNob29zZUl0ZW0oaXRlbTogVEZvbGRlcikge1xuICAgICAgICB0aGlzLnRleHQuc2V0VmFsdWUoaXRlbS5wYXRoKTtcbiAgICAgICAgdGhpcy5mb2xkZXIgPSBpdGVtO1xuICAgIH1cbiAgICBzZWxlY3RTdWdnZXN0aW9uKHsgaXRlbSB9OiBGdXp6eU1hdGNoPFRGb2xkZXI+KSB7XG4gICAgICAgIGxldCBsaW5rID0gaXRlbS5wYXRoO1xuXG4gICAgICAgIHRoaXMudGV4dC5zZXRWYWx1ZShsaW5rKTtcbiAgICAgICAgdGhpcy5vbkNsb3NlKCk7XG5cbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgICByZW5kZXJTdWdnZXN0aW9uKHJlc3VsdDogRnV6enlNYXRjaDxURm9sZGVyPiwgZWw6IEhUTUxFbGVtZW50KSB7XG4gICAgICAgIGxldCB7IGl0ZW0sIG1hdGNoOiBtYXRjaGVzIH0gPSByZXN1bHQgfHwge307XG4gICAgICAgIGxldCBjb250ZW50ID0gZWwuY3JlYXRlRGl2KHtcbiAgICAgICAgICAgIGNsczogXCJzdWdnZXN0aW9uLWNvbnRlbnRcIlxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFpdGVtKSB7XG4gICAgICAgICAgICBjb250ZW50LnNldFRleHQodGhpcy5lbXB0eVN0YXRlVGV4dCk7XG4gICAgICAgICAgICBjb250ZW50LnBhcmVudEVsZW1lbnQuYWRkQ2xhc3MoXCJpcy1zZWxlY3RlZFwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBwYXRoTGVuZ3RoID0gaXRlbS5wYXRoLmxlbmd0aCAtIGl0ZW0ubmFtZS5sZW5ndGg7XG4gICAgICAgIGNvbnN0IG1hdGNoRWxlbWVudHMgPSBtYXRjaGVzLm1hdGNoZXMubWFwKChtKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlU3BhbihcInN1Z2dlc3Rpb24taGlnaGxpZ2h0XCIpO1xuICAgICAgICB9KTtcbiAgICAgICAgZm9yIChsZXQgaSA9IHBhdGhMZW5ndGg7IGkgPCBpdGVtLnBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBtYXRjaCA9IG1hdGNoZXMubWF0Y2hlcy5maW5kKChtKSA9PiBtWzBdID09PSBpKTtcbiAgICAgICAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICAgICAgICAgIGxldCBlbGVtZW50ID0gbWF0Y2hFbGVtZW50c1ttYXRjaGVzLm1hdGNoZXMuaW5kZXhPZihtYXRjaCldO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5hcHBlbmRUZXh0KGl0ZW0ucGF0aC5zdWJzdHJpbmcobWF0Y2hbMF0sIG1hdGNoWzFdKSk7XG5cbiAgICAgICAgICAgICAgICBpICs9IG1hdGNoWzFdIC0gbWF0Y2hbMF0gLSAxO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb250ZW50LmFwcGVuZFRleHQoaXRlbS5wYXRoW2ldKTtcbiAgICAgICAgfVxuICAgICAgICBlbC5jcmVhdGVEaXYoe1xuICAgICAgICAgICAgY2xzOiBcInN1Z2dlc3Rpb24tbm90ZVwiLFxuICAgICAgICAgICAgdGV4dDogaXRlbS5wYXRoXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldEl0ZW1zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mb2xkZXJzO1xuICAgIH1cbn1cbiIsICJpbXBvcnQge1xuICAgIGFkZEljb24sXG4gICAgQnV0dG9uQ29tcG9uZW50LFxuICAgIERyb3Bkb3duQ29tcG9uZW50LFxuICAgIEZpbGVWaWV3LFxuICAgIEl0ZW1WaWV3LFxuICAgIE1hcmtkb3duUmVuZGVyZXIsXG4gICAgTWFya2Rvd25WaWV3LFxuICAgIE1lbnUsXG4gICAgTW9kYWwsXG4gICAgbm9ybWFsaXplUGF0aCxcbiAgICBOb3RpY2UsXG4gICAgU2V0dGluZyxcbiAgICBzdHJpbmdpZnlZYW1sLFxuICAgIFRleHRDb21wb25lbnQsXG4gICAgVEZpbGUsXG4gICAgV29ya3NwYWNlTGVhZlxufSBmcm9tIFwib2JzaWRpYW5cIjtcbmltcG9ydCB0eXBlIHsgQ2FsZW5kYXIsIEN1cnJlbnRDYWxlbmRhckRhdGEsIEV2ZW50IH0gZnJvbSBcInNyYy9AdHlwZXNcIjtcbmltcG9ydCB0eXBlIHsgRGF5SGVscGVyIH0gZnJvbSBcInNyYy9oZWxwZXJcIjtcbmltcG9ydCBDYWxlbmRhckhlbHBlciBmcm9tIFwic3JjL2hlbHBlclwiO1xuaW1wb3J0IHsgQ3JlYXRlRXZlbnRNb2RhbCB9IGZyb20gXCJzcmMvc2V0dGluZ3MvbW9kYWxzL2V2ZW50XCI7XG5pbXBvcnQgdHlwZSBGYW50YXN5Q2FsZW5kYXIgZnJvbSBcIi4uL21haW5cIjtcblxuZXhwb3J0IGNvbnN0IFZJRVdfVFlQRSA9IFwiRkFOVEFTWV9DQUxFTkRBUlwiO1xuZXhwb3J0IGNvbnN0IEZVTExfVklFVyA9IFwiRkFOVEFTWV9DQUxFTkRBUl9GVUxMX1ZJRVdcIjtcblxuaW1wb3J0IENhbGVuZGFyVUkgZnJvbSBcIi4vdWkvQ2FsZW5kYXIuc3ZlbHRlXCI7XG5pbXBvcnQgeyBjb25maXJtV2l0aE1vZGFsIH0gZnJvbSBcInNyYy9zZXR0aW5ncy9tb2RhbHMvY29uZmlybVwiO1xuaW1wb3J0IHsgZGF5c0JldHdlZW4gfSBmcm9tIFwic3JjL3V0aWxzL2Z1bmN0aW9uc1wiO1xuaW1wb3J0IHsgTU9ESUZJRVJfS0VZIH0gZnJvbSBcIi4uL21haW5cIjtcblxuYWRkSWNvbihcbiAgICBWSUVXX1RZUEUsXG4gICAgYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGZvY3VzYWJsZT1cImZhbHNlXCIgZGF0YS1wcmVmaXg9XCJmYXJcIiBkYXRhLWljb249XCJjYWxlbmRhclwiIGNsYXNzPVwic3ZnLWlubGluZS0tZmEgZmEtY2FsZW5kYXIgZmEtdy0xNFwiIHJvbGU9XCJpbWdcIiB2aWV3Qm94PVwiMCAwIDQ0OCA1MTJcIj48cGF0aCB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIGQ9XCJNNDAwIDY0aC00OFYxMmMwLTYuNi01LjQtMTItMTItMTJoLTQwYy02LjYgMC0xMiA1LjQtMTIgMTJ2NTJIMTYwVjEyYzAtNi42LTUuNC0xMi0xMi0xMmgtNDBjLTYuNiAwLTEyIDUuNC0xMiAxMnY1Mkg0OEMyMS41IDY0IDAgODUuNSAwIDExMnYzNTJjMCAyNi41IDIxLjUgNDggNDggNDhoMzUyYzI2LjUgMCA0OC0yMS41IDQ4LTQ4VjExMmMwLTI2LjUtMjEuNS00OC00OC00OHptLTYgNDAwSDU0Yy0zLjMgMC02LTIuNy02LTZWMTYwaDM1MnYyOThjMCAzLjMtMi43IDYtNiA2elwiLz48cGF0aCBmaWxsPVwiY3VycmVudENvbG9yXCIgZD1cIk0xOC4zMiAyNTUuNzhMMTkyIDIyMy45NmwtOTEuMjggNjguNjljLTEwLjA4IDEwLjA4LTIuOTQgMjcuMzEgMTEuMzEgMjcuMzFoMjIyLjdjLTkuNDQtMjYuNC0xNC43My01NC40Ny0xNC43My04My4zOHYtNDIuMjdsLTExOS43My04Ny42Yy0yMy44Mi0xNS44OC01NS4yOS0xNC4wMS03Ny4wNiA0LjU5TDUuODEgMjI3LjY0Yy0xMi4zOCAxMC4zMy0zLjQ1IDMwLjQyIDEyLjUxIDI4LjE0em01NTYuODcgMzQuMWwtMTAwLjY2LTUwLjMxQTQ3Ljk5MiA0Ny45OTIgMCAwIDEgNDQ4IDE5Ni42NXYtMzYuNjloNjRsMjguMDkgMjIuNjNjNiA2IDE0LjE0IDkuMzcgMjIuNjMgOS4zN2gzMC45N2EzMiAzMiAwIDAgMCAyOC42Mi0xNy42OWwxNC4zMS0yOC42MmEzMi4wMDUgMzIuMDA1IDAgMCAwLTMuMDItMzMuNTFsLTc0LjUzLTk5LjM4QzU1My4wMiA0LjcgNTQzLjU0IDAgNTMzLjQ3IDBIMjk2LjAyYy03LjEzIDAtMTAuNyA4LjU3LTUuNjYgMTMuNjFMMzUyIDYzLjk2IDI5Mi40MiA4OC44Yy01LjkgMi45NS01LjkgMTEuMzYgMCAxNC4zMUwzNTIgMTI3Ljk2djEwOC42MmMwIDcyLjA4IDM2LjAzIDEzOS4zOSA5NiAxNzkuMzgtMTk1LjU5IDYuODEtMzQ0LjU2IDQxLjAxLTQzNC4xIDYwLjkxQzUuNzggNDc4LjY3IDAgNDg1Ljg4IDAgNDk0LjIgMCA1MDQgNy45NSA1MTIgMTcuNzYgNTEyaDQ5OS4wOGM2My4yOS4wMSAxMTkuNjEtNDcuNTYgMTIyLjk5LTExMC43NiAyLjUyLTQ3LjI4LTIyLjczLTkwLjQtNjQuNjQtMTExLjM2ek00ODkuMTggNjYuMjVsNDUuNjUgMTEuNDFjLTIuNzUgMTAuOTEtMTIuNDcgMTguODktMjQuMTMgMTguMjYtMTIuOTYtLjcxLTI1Ljg1LTEyLjUzLTIxLjUyLTI5LjY3elwiIHN0eWxlPVwiJiMxMDsgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjQxMjUpIHRyYW5zbGF0ZSg1MCUsIDk1JSk7JiMxMDtcIi8+PC9zdmc+YFxuKTtcblxuYWRkSWNvbihcbiAgICBcImZhbnRhc3ktY2FsZW5kYXItcmV2ZWFsXCIsXG4gICAgYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGZvY3VzYWJsZT1cImZhbHNlXCIgZGF0YS1wcmVmaXg9XCJmYXNcIiBkYXRhLWljb249XCJjYWxlbmRhci1kYXlcIiBjbGFzcz1cInN2Zy1pbmxpbmUtLWZhIGZhLWNhbGVuZGFyLWRheSBmYS13LTE0XCIgcm9sZT1cImltZ1wiIHZpZXdCb3g9XCIwIDAgNDQ4IDUxMlwiPjxwYXRoIGZpbGw9XCJjdXJyZW50Q29sb3JcIiBkPVwiTTAgNDY0YzAgMjYuNSAyMS41IDQ4IDQ4IDQ4aDM1MmMyNi41IDAgNDgtMjEuNSA0OC00OFYxOTJIMHYyNzJ6bTY0LTE5MmMwLTguOCA3LjItMTYgMTYtMTZoOTZjOC44IDAgMTYgNy4yIDE2IDE2djk2YzAgOC44LTcuMiAxNi0xNiAxNkg4MGMtOC44IDAtMTYtNy4yLTE2LTE2di05NnpNNDAwIDY0aC00OFYxNmMwLTguOC03LjItMTYtMTYtMTZoLTMyYy04LjggMC0xNiA3LjItMTYgMTZ2NDhIMTYwVjE2YzAtOC44LTcuMi0xNi0xNi0xNmgtMzJjLTguOCAwLTE2IDcuMi0xNiAxNnY0OEg0OEMyMS41IDY0IDAgODUuNSAwIDExMnY0OGg0NDh2LTQ4YzAtMjYuNS0yMS41LTQ4LTQ4LTQ4elwiLz48L3N2Zz5gXG4pO1xuXG5kZWNsYXJlIG1vZHVsZSBcIm9ic2lkaWFuXCIge1xuICAgIGludGVyZmFjZSBXb3Jrc3BhY2VJdGVtIHtcbiAgICAgICAgaWQ6IHN0cmluZztcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZhbnRhc3lDYWxlbmRhclZpZXcgZXh0ZW5kcyBJdGVtVmlldyB7XG4gICAgZHJvcGRvd25FbDogSFRNTERpdkVsZW1lbnQ7XG4gICAgaGVscGVyOiBDYWxlbmRhckhlbHBlcjtcbiAgICBub0NhbGVuZGFyRWw6IEhUTUxEaXZFbGVtZW50O1xuICAgIHVwZGF0ZU1lOiBib29sZWFuID0gdHJ1ZTtcbiAgICBkYXlOdW1iZXI6IGJvb2xlYW47XG4gICAgLyogZnVsbCA9ICBmYWxzZTsgKi9cbiAgICBnZXQgcm9vdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGVhZi5nZXRSb290KCk7XG4gICAgfVxuICAgIGdldCBmdWxsKCkge1xuICAgICAgICByZXR1cm4gIShcImNvbGxhcHNlXCIgaW4gdGhpcy5yb290KTtcbiAgICB9XG4gICAgeWVhclZpZXc6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBtb29uczogYm9vbGVhbiA9IHRydWU7XG4gICAgY2FsZW5kYXI6IENhbGVuZGFyO1xuICAgIC8qIGNhbGVuZGFyRHJvcGRvd25FbDogSFRNTERpdkVsZW1lbnQ7ICovXG4gICAgcHJvdGVjdGVkIF9hcHA6IENhbGVuZGFyVUk7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBwbHVnaW46IEZhbnRhc3lDYWxlbmRhcixcbiAgICAgICAgcHVibGljIGxlYWY6IFdvcmtzcGFjZUxlYWYsXG4gICAgICAgIHB1YmxpYyBvcHRpb25zOiB7IGNhbGVuZGFyPzogQ2FsZW5kYXI7IGZ1bGw/OiBib29sZWFuIH0gPSB7fVxuICAgICkge1xuICAgICAgICBzdXBlcihsZWFmKTtcbiAgICAgICAgdGhpcy5jb250YWluZXJFbC5hZGRDbGFzcyhcImZhbnRhc3ktY2FsZW5kYXItdmlld1wiKTtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuYWRkQ2xhc3MoXCJmYW50YXN5LWNhbGVuZGFyLXZpZXctY29udGVudFwiKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KFxuICAgICAgICAgICAgdGhpcy5wbHVnaW4uYXBwLndvcmtzcGFjZS5vbihcImZhbnRhc3ktY2FsZW5kYXJzLXVwZGF0ZWRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLm9uU2V0dGluZ3NMb2FkKCgpID0+IHRoaXMudXBkYXRlQ2FsZW5kYXJzKCkpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KFxuICAgICAgICAgICAgdGhpcy5wbHVnaW4uYXBwLndvcmtzcGFjZS5vbihcImxheW91dC1jaGFuZ2VcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5fYXBwKSByZXR1cm47XG4gICAgICAgICAgICAgICAgdGhpcy5fYXBwLiRzZXQoe1xuICAgICAgICAgICAgICAgICAgICBmdWxsVmlldzogdGhpcy5mdWxsLFxuICAgICAgICAgICAgICAgICAgICAuLi4odGhpcy5mdWxsID8geyBkYXlWaWV3OiBmYWxzZSB9IDoge30pXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgICAgICAvKiB3aW5kb3cudmlldyA9IHRoaXM7ICovXG4gICAgfVxuICAgIHVwZGF0ZUNhbGVuZGFycygpIHtcbiAgICAgICAgaWYgKCF0aGlzLnVwZGF0ZU1lKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZU1lID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMucGx1Z2luLmRhdGEuY2FsZW5kYXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5fYXBwPy4kZGVzdHJveSgpO1xuICAgICAgICAgICAgdGhpcy5jb250ZW50RWwuZW1wdHkoKTtcbiAgICAgICAgICAgIHRoaXMubm9DYWxlbmRhckVsID0gdGhpcy5jb250ZW50RWwuY3JlYXRlRGl2KFwiZmFudGFzeS1uby1jYWxlbmRhclwiKTtcbiAgICAgICAgICAgIHRoaXMubm9DYWxlbmRhckVsLmNyZWF0ZVNwYW4oe1xuICAgICAgICAgICAgICAgIHRleHQ6IFwiTm8gY2FsZW5kYXJzIGNyZWF0ZWQhIENyZWF0ZSBhIGNhbGVuZGFyIHRvIHNlZSBpdCBoZXJlLlwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGNhbGVuZGFyID1cbiAgICAgICAgICAgIHRoaXMucGx1Z2luLmRhdGEuY2FsZW5kYXJzLmZpbmQoKGMpID0+IGMuaWQgPT0gdGhpcy5jYWxlbmRhcj8uaWQpID8/XG4gICAgICAgICAgICB0aGlzLnBsdWdpbi5kZWZhdWx0Q2FsZW5kYXIgPz9cbiAgICAgICAgICAgIHRoaXMucGx1Z2luLmRhdGEuY2FsZW5kYXJzWzBdO1xuXG4gICAgICAgIGlmICh0aGlzLmhlbHBlciAmJiB0aGlzLmhlbHBlci5jYWxlbmRhci5pZCA9PSBjYWxlbmRhci5pZCkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGUoY2FsZW5kYXIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zZXRDdXJyZW50Q2FsZW5kYXIoY2FsZW5kYXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZShjYWxlbmRhcjogQ2FsZW5kYXIpIHtcbiAgICAgICAgdGhpcy5jYWxlbmRhciA9IGNhbGVuZGFyO1xuICAgICAgICB0aGlzLmhlbHBlci51cGRhdGUodGhpcy5jYWxlbmRhcik7XG5cbiAgICAgICAgdGhpcy5yZWdpc3RlckNhbGVuZGFySW50ZXJ2YWwoKTtcblxuICAgICAgICBpZiAoIXRoaXMuX2FwcCkge1xuICAgICAgICAgICAgdGhpcy5idWlsZCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fYXBwLiRzZXQoeyBjYWxlbmRhcjogdGhpcy5oZWxwZXIgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZWdpc3RlckNhbGVuZGFySW50ZXJ2YWwoKSB7XG4gICAgICAgIGlmICh0aGlzLmludGVydmFsKSB7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpO1xuICAgICAgICAgICAgdGhpcy5pbnRlcnZhbCA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5jYWxlbmRhci5zdGF0aWMuaW5jcmVtZW50RGF5KSB7XG4gICAgICAgICAgICBsZXQgY3VycmVudCA9IG5ldyBEYXRlKCk7XG5cbiAgICAgICAgICAgIGlmICghdGhpcy5jYWxlbmRhci5kYXRlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kYXRlID0gY3VycmVudC52YWx1ZU9mKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGRpZiA9IGRheXNCZXR3ZWVuKG5ldyBEYXRlKHRoaXMuY2FsZW5kYXIuZGF0ZSksIGN1cnJlbnQpO1xuXG4gICAgICAgICAgICBpZiAoZGlmID49IDEpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRpZjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVscGVyLmdvVG9OZXh0Q3VycmVudERheSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLmRhdGUgPSBjdXJyZW50LnZhbHVlT2YoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWwgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkYXlzQmV0d2VlbihuZXcgRGF0ZSgpLCBjdXJyZW50KSA+PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVscGVyLmdvVG9OZXh0Q3VycmVudERheSgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhlbHBlci5jdXJyZW50O1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kYXRlID0gY3VycmVudC52YWx1ZU9mKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLnNhdmVTZXR0aW5ncygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIDYwICogMTAwMCk7XG5cbiAgICAgICAgICAgIHRoaXMucmVnaXN0ZXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGludGVydmFsOiBudW1iZXI7XG5cbiAgICBzZXRDdXJyZW50Q2FsZW5kYXIoY2FsZW5kYXI6IENhbGVuZGFyKSB7XG4gICAgICAgIHRoaXMubm9DYWxlbmRhckVsPy5kZXRhY2goKTtcblxuICAgICAgICB0aGlzLmNhbGVuZGFyID0gY2FsZW5kYXI7XG5cbiAgICAgICAgdGhpcy5tb29ucyA9IHRoaXMuY2FsZW5kYXIuc3RhdGljLmRpc3BsYXlNb29ucztcbiAgICAgICAgdGhpcy5kYXlOdW1iZXIgPSB0aGlzLmNhbGVuZGFyLnN0YXRpYy5kaXNwbGF5RGF5TnVtYmVyO1xuICAgICAgICB0aGlzLmhlbHBlciA9IG5ldyBDYWxlbmRhckhlbHBlcih0aGlzLmNhbGVuZGFyLCB0aGlzLnBsdWdpbik7XG5cbiAgICAgICAgdGhpcy5yZWdpc3RlckNhbGVuZGFySW50ZXJ2YWwoKTtcblxuICAgICAgICB0aGlzLmJ1aWxkKCk7XG4gICAgfVxuICAgIGNyZWF0ZUV2ZW50Rm9yRGF5KGRhdGU6IEN1cnJlbnRDYWxlbmRhckRhdGEpIHtcbiAgICAgICAgY29uc3QgbW9kYWwgPSBuZXcgQ3JlYXRlRXZlbnRNb2RhbCh0aGlzLmFwcCwgdGhpcy5jYWxlbmRhciwgbnVsbCwgZGF0ZSk7XG5cbiAgICAgICAgbW9kYWwub25DbG9zZSA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmICghbW9kYWwuc2F2ZWQpIHJldHVybjtcbiAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuZXZlbnRzLnB1c2gobW9kYWwuZXZlbnQpO1xuXG4gICAgICAgICAgICB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcblxuICAgICAgICAgICAgdGhpcy5fYXBwLiRzZXQoe1xuICAgICAgICAgICAgICAgIGNhbGVuZGFyOiB0aGlzLmhlbHBlclxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMudHJpZ2dlckhlbHBlckV2ZW50KFwiZGF5LXVwZGF0ZVwiKTtcbiAgICAgICAgfTtcblxuICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgfVxuXG4gICAgYXN5bmMgb25PcGVuKCkge1xuICAgICAgICB0aGlzLnBsdWdpbi5vblNldHRpbmdzTG9hZCgoKSA9PiB0aGlzLnVwZGF0ZUNhbGVuZGFycygpKTtcbiAgICB9XG4gICAgYnVpbGQoKSB7XG4gICAgICAgIHRoaXMuY29udGVudEVsLmVtcHR5KCk7XG4gICAgICAgIHRoaXMuX2FwcCA9IG5ldyBDYWxlbmRhclVJKHtcbiAgICAgICAgICAgIHRhcmdldDogdGhpcy5jb250ZW50RWwsXG4gICAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgICAgIGNhbGVuZGFyOiB0aGlzLmhlbHBlcixcbiAgICAgICAgICAgICAgICBmdWxsVmlldzogdGhpcy5mdWxsLFxuICAgICAgICAgICAgICAgIHllYXJWaWV3OiB0aGlzLnllYXJWaWV3LFxuICAgICAgICAgICAgICAgIG1vb25zOiB0aGlzLm1vb25zLFxuICAgICAgICAgICAgICAgIGRpc3BsYXlXZWVrczogdGhpcy5oZWxwZXIuZGlzcGxheVdlZWtzLFxuICAgICAgICAgICAgICAgIGRpc3BsYXlEYXlOdW1iZXI6IHRoaXMuZGF5TnVtYmVyXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9hcHAuJG9uKFwiZGF5LWNsaWNrXCIsIChldmVudDogQ3VzdG9tRXZlbnQ8RGF5SGVscGVyPikgPT4ge1xuICAgICAgICAgICAgY29uc3QgZGF5ID0gZXZlbnQuZGV0YWlsO1xuXG4gICAgICAgICAgICBpZiAoZGF5LmV2ZW50cy5sZW5ndGgpIHJldHVybjtcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlRXZlbnRGb3JEYXkoZGF5LmRhdGUpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLl9hcHAuJG9uKFwiZGF5LWRvdWJsZWNsaWNrXCIsIChldmVudDogQ3VzdG9tRXZlbnQ8RGF5SGVscGVyPikgPT4ge1xuICAgICAgICAgICAgY29uc3QgZGF5ID0gZXZlbnQuZGV0YWlsO1xuICAgICAgICAgICAgaWYgKCFkYXkuZXZlbnRzLmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgICAgICAgICB0aGlzLmhlbHBlci52aWV3aW5nLmRheSA9IGRheS5udW1iZXI7XG4gICAgICAgICAgICB0aGlzLmhlbHBlci52aWV3aW5nLm1vbnRoID0gdGhpcy5oZWxwZXIuZGlzcGxheWVkLm1vbnRoO1xuICAgICAgICAgICAgdGhpcy5oZWxwZXIudmlld2luZy55ZWFyID0gdGhpcy5oZWxwZXIuZGlzcGxheWVkLnllYXI7XG5cbiAgICAgICAgICAgIHRoaXMueWVhclZpZXcgPSBmYWxzZTtcblxuICAgICAgICAgICAgdGhpcy5fYXBwLiRzZXQoeyB5ZWFyVmlldzogZmFsc2UgfSk7XG4gICAgICAgICAgICB0aGlzLl9hcHAuJHNldCh7IGRheVZpZXc6IHRydWUgfSk7XG4gICAgICAgICAgICB0aGlzLnRyaWdnZXJIZWxwZXJFdmVudChcImRheS11cGRhdGVcIiwgZmFsc2UpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLl9hcHAuJG9uKFxuICAgICAgICAgICAgXCJkYXktY29udGV4dC1tZW51XCIsXG4gICAgICAgICAgICAoZXZlbnQ6IEN1c3RvbUV2ZW50PHsgZGF5OiBEYXlIZWxwZXI7IGV2dDogTW91c2VFdmVudCB9PikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgZGF5LCBldnQgfSA9IGV2ZW50LmRldGFpbDtcblxuICAgICAgICAgICAgICAgIGNvbnN0IG1lbnUgPSBuZXcgTWVudSh0aGlzLmFwcCk7XG5cbiAgICAgICAgICAgICAgICBtZW51LnNldE5vSWNvbigpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmZ1bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgbWVudS5hZGRJdGVtKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnNldFRpdGxlKFwiT3BlbiBEYXlcIikub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vcGVuRGF5KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiBkYXkubnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb250aDogdGhpcy5oZWxwZXIuZGlzcGxheWVkLm1vbnRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiB0aGlzLmhlbHBlci5kaXNwbGF5ZWQueWVhclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBtZW51LmFkZEl0ZW0oKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5zZXRUaXRsZShcIlNldCBhcyBUb2RheVwiKS5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuY3VycmVudCA9IGRheS5kYXRlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhlbHBlci5jdXJyZW50LmRheSA9IGRheS5udW1iZXI7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudHJpZ2dlckhlbHBlckV2ZW50KFwiZGF5LXVwZGF0ZVwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIG1lbnUuYWRkSXRlbSgoaXRlbSkgPT5cbiAgICAgICAgICAgICAgICAgICAgaXRlbS5zZXRUaXRsZShcIk5ldyBFdmVudFwiKS5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlRXZlbnRGb3JEYXkoZGF5LmRhdGUpO1xuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgbWVudS5zaG93QXRNb3VzZUV2ZW50KGV2dCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5fYXBwLiRvbihcInNldHRpbmdzXCIsIChldmVudDogQ3VzdG9tRXZlbnQ8TW91c2VFdmVudD4pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGV2dCA9IGV2ZW50LmRldGFpbDtcbiAgICAgICAgICAgIGNvbnN0IG1lbnUgPSBuZXcgTWVudSh0aGlzLmFwcCk7XG5cbiAgICAgICAgICAgIG1lbnUuc2V0Tm9JY29uKCk7XG4gICAgICAgICAgICBtZW51LmFkZEl0ZW0oKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtLnNldFRpdGxlKFxuICAgICAgICAgICAgICAgICAgICBgJHt0aGlzLmNhbGVuZGFyLmRpc3BsYXlXZWVrcyA/IFwiSGlkZVwiIDogXCJTaG93XCJ9IFdlZWtzYFxuICAgICAgICAgICAgICAgICkub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuZGlzcGxheVdlZWtzID0gIXRoaXMuY2FsZW5kYXIuZGlzcGxheVdlZWtzO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhlbHBlci51cGRhdGUodGhpcy5jYWxlbmRhcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2FwcC4kc2V0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlXZWVrczogdGhpcy5jYWxlbmRhci5kaXNwbGF5V2Vla3NcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLnNhdmVTZXR0aW5ncygpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBtZW51LmFkZEl0ZW0oKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtLnNldFRpdGxlKFxuICAgICAgICAgICAgICAgICAgICBgT3BlbiAke3RoaXMueWVhclZpZXcgPyBcIk1vbnRoXCIgOiBcIlllYXJcIn1gXG4gICAgICAgICAgICAgICAgKS5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy55ZWFyVmlldyA9ICF0aGlzLnllYXJWaWV3O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9hcHAuJHNldCh7IHllYXJWaWV3OiB0aGlzLnllYXJWaWV3IH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBtZW51LmFkZEl0ZW0oKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtLnNldFRpdGxlKFxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1vb25zID8gXCJIaWRlIE1vb25zXCIgOiBcIkRpc3BsYXkgTW9vbnNcIlxuICAgICAgICAgICAgICAgICkub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlTW9vbnMoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbWVudS5hZGRJdGVtKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgaXRlbS5zZXRUaXRsZShcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXlOdW1iZXIgPyBcIkhpZGUgRGF5IE51bWJlclwiIDogXCJEaXNwbGF5IERheSBOdW1iZXJcIlxuICAgICAgICAgICAgICAgICkub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGF5TnVtYmVyID0gIXRoaXMuZGF5TnVtYmVyO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLnN0YXRpYy5kaXNwbGF5RGF5TnVtYmVyID0gdGhpcy5kYXlOdW1iZXI7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2FwcC4kc2V0KHsgZGlzcGxheURheU51bWJlcjogdGhpcy5kYXlOdW1iZXIgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLnNhdmVTZXR0aW5ncygpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBtZW51LmFkZEl0ZW0oKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtLnNldFRpdGxlKFwiVmlldyBEYXlcIik7XG5cbiAgICAgICAgICAgICAgICBpdGVtLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9wZW5EYXRlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG1lbnUuYWRkSXRlbSgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgIGl0ZW0uc2V0VGl0bGUoXCJTd2l0Y2ggQ2FsZW5kYXJzXCIpO1xuICAgICAgICAgICAgICAgIGl0ZW0uc2V0RGlzYWJsZWQodGhpcy5wbHVnaW4uZGF0YS5jYWxlbmRhcnMubGVuZ3RoIDw9IDEpO1xuICAgICAgICAgICAgICAgIGl0ZW0ub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vZGFsID0gbmV3IFN3aXRjaE1vZGFsKHRoaXMucGx1Z2luLCB0aGlzLmNhbGVuZGFyKTtcblxuICAgICAgICAgICAgICAgICAgICBtb2RhbC5vbkNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFtb2RhbC5jb25maXJtZWQpIHJldHVybjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRDdXJyZW50Q2FsZW5kYXIobW9kYWwuY2FsZW5kYXIpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgbWVudS5zaG93QXRNb3VzZUV2ZW50KGV2dCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuX2FwcC4kb24oXG4gICAgICAgICAgICBcImV2ZW50LWNsaWNrXCIsXG4gICAgICAgICAgICAoZXZ0OiBDdXN0b21FdmVudDx7IGV2ZW50OiBFdmVudDsgbW9kaWZpZXI6IGJvb2xlYW4gfT4pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IGV2ZW50LCBtb2RpZmllciB9ID0gZXZ0LmRldGFpbDtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQubm90ZSkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgbGVhdmVzOiBXb3Jrc3BhY2VMZWFmW10gPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHAud29ya3NwYWNlLml0ZXJhdGVBbGxMZWF2ZXMoKGxlYWYpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKGxlYWYudmlldyBpbnN0YW5jZW9mIE1hcmtkb3duVmlldykpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsZWFmLnZpZXcuZmlsZS5iYXNlbmFtZSA9PT0gZXZlbnQubm90ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlYXZlcy5wdXNoKGxlYWYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGxlYXZlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYXBwLndvcmtzcGFjZS5zZXRBY3RpdmVMZWFmKGxlYXZlc1swXSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFwcC53b3Jrc3BhY2Uub3BlbkxpbmtUZXh0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50Lm5vdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZ1bGwgfHwgbW9kaWZpZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtb2RhbCA9IG5ldyBWaWV3RXZlbnRNb2RhbChldmVudCwgdGhpcy5wbHVnaW4pO1xuICAgICAgICAgICAgICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuXG4gICAgICAgIHRoaXMuX2FwcC4kb24oXG4gICAgICAgICAgICBcImV2ZW50LW1vdXNlb3ZlclwiLFxuICAgICAgICAgICAgKGV2dDogQ3VzdG9tRXZlbnQ8eyB0YXJnZXQ6IEhUTUxFbGVtZW50OyBldmVudDogRXZlbnQgfT4pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMucGx1Z2luLmRhdGEuZXZlbnRQcmV2aWV3KSByZXR1cm47XG4gICAgICAgICAgICAgICAgY29uc3QgeyB0YXJnZXQsIGV2ZW50IH0gPSBldnQuZGV0YWlsO1xuICAgICAgICAgICAgICAgIGlmIChldmVudC5ub3RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXBwLndvcmtzcGFjZS50cmlnZ2VyKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJsaW5rLWhvdmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLCAvL2hvdmVyIHBvcG92ZXIsIGJ1dCBkb24ndCBuZWVkXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQsIC8vdGFyZ2V0RWxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50Lm5vdGUsIC8vbGlua1RleHRcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiXCIgLy9zb3VyY2VcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5fYXBwLiRvbihcbiAgICAgICAgICAgIFwiZXZlbnQtY29udGV4dFwiLFxuICAgICAgICAgICAgKGN1c3RvbTogQ3VzdG9tRXZlbnQ8eyBldnQ6IE1vdXNlRXZlbnQ7IGV2ZW50OiBFdmVudCB9PikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgZXZ0LCBldmVudCB9ID0gY3VzdG9tLmRldGFpbDtcblxuICAgICAgICAgICAgICAgIGNvbnN0IG1lbnUgPSBuZXcgTWVudSh0aGlzLmFwcCk7XG5cbiAgICAgICAgICAgICAgICBtZW51LnNldE5vSWNvbigpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCFldmVudC5ub3RlKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lbnUuYWRkSXRlbSgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zZXRUaXRsZShcIkNyZWF0ZSBOb3RlXCIpLm9uQ2xpY2soYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhdGggPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0QWN0aXZlRmlsZSgpPy5wYXRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0ZpbGVQYXRoID0gcGF0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHRoaXMuYXBwLmZpbGVNYW5hZ2VyLmdldE5ld0ZpbGVQYXJlbnQocGF0aClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPy5wYXJlbnQgPz8gXCIvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIi9cIjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGUgPSBgJHtldmVudC5kYXRlLnllYXJ9LSR7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LmRhdGUubW9udGggKyAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfS0ke2V2ZW50LmRhdGUuZGF5fWA7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZW5kOiBzdHJpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50LmVuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgPSBgJHtldmVudC5lbmQueWVhcn0tJHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LmVuZC5tb250aCArIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfS0ke2V2ZW50LmVuZC5kYXl9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImZjLWNhbGVuZGFyXCI6IHRoaXMuY2FsZW5kYXIubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJmYy1kYXRlXCI6IGRhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLihldmVudC5lbmQgPyB7IFwiZmMtZW5kXCI6IGVuZCB9IDoge30pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi4oZXZlbnQuY2F0ZWdvcnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJmYy1jYXRlZ29yeVwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuY2F0ZWdvcmllcy5maW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoY2F0KSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0LmlkID09IGV2ZW50LmNhdGVnb3J5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKT8ubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHt9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQubm90ZSA9IG5vcm1hbGl6ZVBhdGgoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAke25ld0ZpbGVQYXRofS8ke2V2ZW50Lm5hbWV9Lm1kYFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZmlsZSA9IHRoaXMuYXBwLnZhdWx0LmdldEFic3RyYWN0RmlsZUJ5UGF0aChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQubm90ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFmaWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGUgPSBhd2FpdCB0aGlzLmFwcC52YXVsdC5jcmVhdGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudC5ub3RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYC0tLVxcbiR7c3RyaW5naWZ5WWFtbChjb250ZW50KX1cXG4tLS1gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLnNhdmVDYWxlbmRhcigpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGUgaW5zdGFuY2VvZiBURmlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWxlVmlld3MgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHAud29ya3NwYWNlLmdldExlYXZlc09mVHlwZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm1hcmtkb3duXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nID0gZmlsZVZpZXdzLmZpbmQoKGwpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwudmlldyBpbnN0YW5jZW9mIEZpbGVWaWV3ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbC52aWV3LmZpbGUucGF0aCA9PSBldmVudC5ub3RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV4aXN0aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFwcC53b3Jrc3BhY2Uuc2V0QWN0aXZlTGVhZihleGlzdGluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmFwcC53b3Jrc3BhY2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZ2V0VW5waW5uZWRMZWFmKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAub3BlbkZpbGUoZmlsZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBtZW51LmFkZEl0ZW0oKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5zZXRUaXRsZShcIkVkaXQgRXZlbnRcIikub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtb2RhbCA9IG5ldyBDcmVhdGVFdmVudE1vZGFsKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYXBwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGFsLm9uQ2xvc2UgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFtb2RhbC5zYXZlZCkgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmcgPSB0aGlzLmNhbGVuZGFyLmV2ZW50cy5maW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZSkgPT4gZS5pZCA9PSBldmVudC5pZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLmV2ZW50cy5zcGxpY2UoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuZXZlbnRzLmluZGV4T2YoZXhpc3RpbmcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RhbC5ldmVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2FwcC4kc2V0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsZW5kYXI6IHRoaXMuaGVscGVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRyaWdnZXJIZWxwZXJFdmVudChcImRheS11cGRhdGVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgbWVudS5hZGRJdGVtKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uc2V0VGl0bGUoXCJEZWxldGUgRXZlbnRcIikub25DbGljayhhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgY29uZmlybVdpdGhNb2RhbChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQXJlIHlvdSBzdXJlIHlvdSB3aXNoIHRvIGRlbGV0ZSB0aGlzIGV2ZW50P1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdGE6IFwiRGVsZXRlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmRhcnk6IFwiQ2FuY2VsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nID0gdGhpcy5jYWxlbmRhci5ldmVudHMuZmluZChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGUpID0+IGUuaWQgPT0gZXZlbnQuaWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5ldmVudHMuc3BsaWNlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLmV2ZW50cy5pbmRleE9mKGV4aXN0aW5nKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2FwcC4kc2V0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsZW5kYXI6IHRoaXMuaGVscGVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRyaWdnZXJIZWxwZXJFdmVudChcImRheS11cGRhdGVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgbWVudS5zaG93QXRNb3VzZUV2ZW50KGV2dCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5fYXBwLiRvbihcImV2ZW50XCIsIChlOiBDdXN0b21FdmVudDxDdXJyZW50Q2FsZW5kYXJEYXRhPikgPT4ge1xuICAgICAgICAgICAgY29uc3QgZGF0ZSA9IGUuZGV0YWlsO1xuICAgICAgICAgICAgdGhpcy5jcmVhdGVFdmVudEZvckRheShkYXRlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5fYXBwLiRvbihcInJlc2V0XCIsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaGVscGVyLnJlc2V0KCk7XG5cbiAgICAgICAgICAgIHRoaXMueWVhclZpZXcgPSBmYWxzZTtcblxuICAgICAgICAgICAgdGhpcy5fYXBwLiRzZXQoeyB5ZWFyVmlldzogZmFsc2UgfSk7XG4gICAgICAgICAgICB0aGlzLl9hcHAuJHNldCh7IGRheVZpZXc6IHRydWUgfSk7XG4gICAgICAgICAgICB0aGlzLnRyaWdnZXJIZWxwZXJFdmVudChcImRheS11cGRhdGVcIiwgZmFsc2UpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgb3BlbkRheShkYXRlOiBDdXJyZW50Q2FsZW5kYXJEYXRhKSB7XG4gICAgICAgIHRoaXMuaGVscGVyLnZpZXdpbmcuZGF5ID0gZGF0ZS5kYXk7XG4gICAgICAgIHRoaXMuaGVscGVyLnZpZXdpbmcubW9udGggPSBkYXRlLm1vbnRoO1xuICAgICAgICB0aGlzLmhlbHBlci52aWV3aW5nLnllYXIgPSBkYXRlLnllYXI7XG5cbiAgICAgICAgdGhpcy55ZWFyVmlldyA9IGZhbHNlO1xuXG4gICAgICAgIHRoaXMuX2FwcC4kc2V0KHsgeWVhclZpZXc6IGZhbHNlIH0pO1xuICAgICAgICB0aGlzLl9hcHAuJHNldCh7IGRheVZpZXc6IHRydWUgfSk7XG4gICAgICAgIHRoaXMudHJpZ2dlckhlbHBlckV2ZW50KFwiZGF5LXVwZGF0ZVwiLCBmYWxzZSk7XG4gICAgfVxuICAgIG9wZW5EYXRlKCkge1xuICAgICAgICBpZiAoIXRoaXMuaGVscGVyKSByZXR1cm47XG4gICAgICAgIGlmICghdGhpcy5jYWxlbmRhcikgcmV0dXJuO1xuICAgICAgICBjb25zdCBtb2RhbCA9IG5ldyBDaGFuZ2VEYXRlTW9kYWwodGhpcy5wbHVnaW4sIHRoaXMuY2FsZW5kYXIpO1xuICAgICAgICBtb2RhbC5vbkNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFtb2RhbC5jb25maXJtZWQpIHJldHVybjtcbiAgICAgICAgICAgIGlmIChtb2RhbC5zZXRDdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5jdXJyZW50ID0geyAuLi5tb2RhbC5kYXRlIH07XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRDdXJyZW50Q2FsZW5kYXIodGhpcy5jYWxlbmRhcik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuaGVscGVyLmRpc3BsYXllZCA9IHsgLi4ubW9kYWwuZGF0ZSB9O1xuICAgICAgICAgICAgICAgIHRoaXMuaGVscGVyLnVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2FwcC4kc2V0KHsgY2FsZW5kYXI6IHRoaXMuaGVscGVyIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcbiAgICAgICAgfTtcblxuICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgfVxuICAgIHRvZ2dsZU1vb25zKCkge1xuICAgICAgICB0aGlzLm1vb25zID0gIXRoaXMubW9vbnM7XG4gICAgICAgIHRoaXMuX2FwcC4kc2V0KHsgbW9vbnM6IHRoaXMubW9vbnMgfSk7XG4gICAgfVxuXG4gICAgYXN5bmMgb25DbG9zZSgpIHt9XG4gICAgb25SZXNpemUoKSB7XG4gICAgICAgIHRoaXMudHJpZ2dlckhlbHBlckV2ZW50KFwidmlldy1yZXNpemVkXCIsIGZhbHNlKTtcbiAgICB9XG4gICAgZ2V0Vmlld1R5cGUoKSB7XG4gICAgICAgIHJldHVybiBWSUVXX1RZUEU7XG4gICAgfVxuICAgIGdldERpc3BsYXlUZXh0KCkge1xuICAgICAgICByZXR1cm4gXCJGYW50YXN5IENhbGVuZGFyXCI7XG4gICAgfVxuICAgIGdldEljb24oKSB7XG4gICAgICAgIHJldHVybiBWSUVXX1RZUEU7XG4gICAgfVxuICAgIHRyaWdnZXJIZWxwZXJFdmVudChldmVudDogc3RyaW5nLCBmdWxsOiBib29sZWFuID0gdHJ1ZSkge1xuICAgICAgICBpZiAoIXRoaXMuaGVscGVyKSByZXR1cm47XG4gICAgICAgIHRoaXMuaGVscGVyLnRyaWdnZXIoZXZlbnQpO1xuXG4gICAgICAgIGlmIChmdWxsKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZU1lID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnBsdWdpbi5hcHAud29ya3NwYWNlLnRyaWdnZXIoXCJmYW50YXN5LWNhbGVuZGFycy11cGRhdGVkXCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYXN5bmMgb251bmxvYWQoKSB7fVxufVxuXG4vKiBleHBvcnQgY2xhc3MgRnVsbENhbGVuZGFyVmlldyBleHRlbmRzIEZhbnRhc3lDYWxlbmRhclZpZXcge1xuICAgIGZ1bGwgPSB0cnVlO1xufVxuICovXG5jbGFzcyBTd2l0Y2hNb2RhbCBleHRlbmRzIE1vZGFsIHtcbiAgICBjb25maXJtZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcGx1Z2luOiBGYW50YXN5Q2FsZW5kYXIsIHB1YmxpYyBjYWxlbmRhcjogQ2FsZW5kYXIpIHtcbiAgICAgICAgc3VwZXIocGx1Z2luLmFwcCk7XG4gICAgfVxuICAgIGFzeW5jIGRpc3BsYXkoKSB7XG4gICAgICAgIHRoaXMuY29udGVudEVsLmVtcHR5KCk7XG4gICAgICAgIHRoaXMuY29udGVudEVsLmNyZWF0ZUVsKFwiaDRcIiwgeyB0ZXh0OiBcIlN3aXRjaCBDYWxlbmRhcnNcIiB9KTtcbiAgICAgICAgY29uc3QgZHJvcGRvd25FbCA9IHRoaXMuY29udGVudEVsLmNyZWF0ZURpdihcbiAgICAgICAgICAgIFwiZmFudGFzeS1jYWxlbmRhci1kcm9wZG93blwiXG4gICAgICAgICk7XG4gICAgICAgIGRyb3Bkb3duRWwuY3JlYXRlRWwoXCJsYWJlbFwiLCB7XG4gICAgICAgICAgICB0ZXh0OiBcIkNob29zZSBhIENhbGVuZGFyXCJcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGRyb3Bkb3duID0gbmV3IERyb3Bkb3duQ29tcG9uZW50KGRyb3Bkb3duRWwpLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNhbGVuZGFyID0gdGhpcy5wbHVnaW4uZGF0YS5jYWxlbmRhcnMuZmluZCgoYykgPT4gYy5pZCA9PSB2KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGRyb3Bkb3duXG4gICAgICAgICAgICAuYWRkT3B0aW9ucyhcbiAgICAgICAgICAgICAgICBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLmRhdGEuY2FsZW5kYXJzLm1hcCgoYykgPT4gW2MuaWQsIGMubmFtZV0pXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLnNldFZhbHVlKHRoaXMuY2FsZW5kYXIgPyB0aGlzLmNhbGVuZGFyLmlkIDogbnVsbCk7XG4gICAgICAgIGNvbnN0IGJ1dHRvbkVsID0gdGhpcy5jb250ZW50RWwuY3JlYXRlRGl2KFxuICAgICAgICAgICAgXCJmYW50YXN5LWNhbGVuZGFyLWNvbmZpcm0tYnV0dG9uc1wiXG4gICAgICAgICk7XG4gICAgICAgIG5ldyBCdXR0b25Db21wb25lbnQoYnV0dG9uRWwpXG4gICAgICAgICAgICAuc2V0QnV0dG9uVGV4dChcIlN3aXRjaFwiKVxuICAgICAgICAgICAgLnNldEN0YSgpXG4gICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25maXJtZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBuZXcgQnV0dG9uQ29tcG9uZW50KGJ1dHRvbkVsKS5zZXRCdXR0b25UZXh0KFwiQ2FuY2VsXCIpLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25PcGVuKCkge1xuICAgICAgICB0aGlzLmRpc3BsYXkoKTtcbiAgICB9XG59XG5cbmNsYXNzIENoYW5nZURhdGVNb2RhbCBleHRlbmRzIE1vZGFsIHtcbiAgICBjb25maXJtZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBkYXRlOiBDdXJyZW50Q2FsZW5kYXJEYXRhO1xuICAgIGRhdGVGaWVsZEVsOiBIVE1MRGl2RWxlbWVudDtcbiAgICB0ZW1wQ3VycmVudERheXM6IG51bWJlcjtcbiAgICBzZXRDdXJyZW50OiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcGx1Z2luOiBGYW50YXN5Q2FsZW5kYXIsIHB1YmxpYyBjYWxlbmRhcjogQ2FsZW5kYXIpIHtcbiAgICAgICAgc3VwZXIocGx1Z2luLmFwcCk7XG4gICAgICAgIHRoaXMuZGF0ZSA9IHsgLi4udGhpcy5jYWxlbmRhci5jdXJyZW50IH07XG4gICAgICAgIHRoaXMudGVtcEN1cnJlbnREYXlzID0gdGhpcy5kYXRlLmRheTtcbiAgICB9XG4gICAgYXN5bmMgZGlzcGxheSgpIHtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuZW1wdHkoKTtcbiAgICAgICAgdGhpcy5jb250ZW50RWwuY3JlYXRlRWwoXCJoNFwiLCB7IHRleHQ6IFwiVmlldyBEYXlcIiB9KTtcbiAgICAgICAgdGhpcy5kYXRlRmllbGRFbCA9IHRoaXMuY29udGVudEVsLmNyZWF0ZURpdihcbiAgICAgICAgICAgIFwiZmFudGFzeS1jYWxlbmRhci1kYXRlLWZpZWxkc1wiXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuYnVpbGREYXRlRmllbGRzKCk7XG5cbiAgICAgICAgbmV3IFNldHRpbmcodGhpcy5jb250ZW50RWwpXG4gICAgICAgICAgICAuc2V0TmFtZShcIlNldCBhcyBDdXJyZW50IERhdGVcIilcbiAgICAgICAgICAgIC5zZXREZXNjKFwiQWxzbyBzZXQgdGhpcyBkYXRlIHRvIHRvZGF5J3MgZGF0ZS5cIilcbiAgICAgICAgICAgIC5hZGRUb2dnbGUoKHQpID0+XG4gICAgICAgICAgICAgICAgdC5zZXRWYWx1ZSh0aGlzLnNldEN1cnJlbnQpLm9uQ2hhbmdlKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0Q3VycmVudCA9IHY7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgYnV0dG9uRWwgPSB0aGlzLmNvbnRlbnRFbC5jcmVhdGVEaXYoXG4gICAgICAgICAgICBcImZhbnRhc3ktY2FsZW5kYXItY29uZmlybS1idXR0b25zXCJcbiAgICAgICAgKTtcblxuICAgICAgICBuZXcgQnV0dG9uQ29tcG9uZW50KGJ1dHRvbkVsKVxuICAgICAgICAgICAgLnNldEJ1dHRvblRleHQoXCJTd2l0Y2hcIilcbiAgICAgICAgICAgIC5zZXRDdGEoKVxuICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY29uZmlybWVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGUuZGF5ID0gdGhpcy50ZW1wQ3VycmVudERheXM7XG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIG5ldyBCdXR0b25Db21wb25lbnQoYnV0dG9uRWwpLnNldEJ1dHRvblRleHQoXCJDYW5jZWxcIikub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBidWlsZERhdGVGaWVsZHMoKSB7XG4gICAgICAgIHRoaXMuZGF0ZUZpZWxkRWwuZW1wdHkoKTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgdGhpcy50ZW1wQ3VycmVudERheXMgIT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICB0aGlzLmRhdGUubW9udGggIT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICB0aGlzLnRlbXBDdXJyZW50RGF5cyA+XG4gICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5zdGF0aWMubW9udGhzW3RoaXMuZGF0ZS5tb250aF0/Lmxlbmd0aFxuICAgICAgICApIHtcbiAgICAgICAgICAgIHRoaXMudGVtcEN1cnJlbnREYXlzID1cbiAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLnN0YXRpYy5tb250aHNbdGhpcy5kYXRlLm1vbnRoXT8ubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRheUVsID0gdGhpcy5kYXRlRmllbGRFbC5jcmVhdGVEaXYoXCJmYW50YXN5LWNhbGVuZGFyLWRhdGUtZmllbGRcIik7XG4gICAgICAgIGRheUVsLmNyZWF0ZUVsKFwibGFiZWxcIiwgeyB0ZXh0OiBcIkRheVwiIH0pO1xuICAgICAgICBjb25zdCBkYXkgPSBuZXcgVGV4dENvbXBvbmVudChkYXlFbClcbiAgICAgICAgICAgIC5zZXRQbGFjZWhvbGRlcihcIkRheVwiKVxuICAgICAgICAgICAgLnNldFZhbHVlKGAke3RoaXMudGVtcEN1cnJlbnREYXlzfWApXG4gICAgICAgICAgICAuc2V0RGlzYWJsZWQodGhpcy5kYXRlLm1vbnRoID09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIC5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgTnVtYmVyKHYpIDwgMSB8fFxuICAgICAgICAgICAgICAgICAgICAoTnVtYmVyKHYpID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuc3RhdGljLm1vbnRoc1t0aGlzLmRhdGUubW9udGhdPy5sZW5ndGggPz9cbiAgICAgICAgICAgICAgICAgICAgICAgIEluZmluaXR5KVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBuZXcgTm90aWNlKFxuICAgICAgICAgICAgICAgICAgICAgICAgYFRoZSBjdXJyZW50IGRheSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgJHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLnN0YXRpYy5tb250aHNbdGhpcy5kYXRlLm1vbnRoXS5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgICAgIH1gXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGVtcEN1cnJlbnREYXlzID0gdGhpcy5kYXRlLmRheTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idWlsZERhdGVGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnRlbXBDdXJyZW50RGF5cyA9IE51bWJlcih2KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBkYXkuaW5wdXRFbC5zZXRBdHRyKFwidHlwZVwiLCBcIm51bWJlclwiKTtcblxuICAgICAgICBjb25zdCBtb250aEVsID0gdGhpcy5kYXRlRmllbGRFbC5jcmVhdGVEaXYoXG4gICAgICAgICAgICBcImZhbnRhc3ktY2FsZW5kYXItZGF0ZS1maWVsZFwiXG4gICAgICAgICk7XG4gICAgICAgIG1vbnRoRWwuY3JlYXRlRWwoXCJsYWJlbFwiLCB7IHRleHQ6IFwiTW9udGhcIiB9KTtcbiAgICAgICAgbmV3IERyb3Bkb3duQ29tcG9uZW50KG1vbnRoRWwpXG4gICAgICAgICAgICAuYWRkT3B0aW9ucyhcbiAgICAgICAgICAgICAgICBPYmplY3QuZnJvbUVudHJpZXMoW1xuICAgICAgICAgICAgICAgICAgICBbXCJzZWxlY3RcIiwgXCJTZWxlY3QgTW9udGhcIl0sXG4gICAgICAgICAgICAgICAgICAgIC4uLnRoaXMuY2FsZW5kYXIuc3RhdGljLm1vbnRocy5tYXAoKG1vbnRoKSA9PiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBtb250aC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGgubmFtZVxuICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuc2V0VmFsdWUoXG4gICAgICAgICAgICAgICAgdGhpcy5kYXRlLm1vbnRoICE9IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICA/IHRoaXMuY2FsZW5kYXIuc3RhdGljLm1vbnRoc1t0aGlzLmRhdGUubW9udGhdLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgOiBcInNlbGVjdFwiXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAub25DaGFuZ2UoKHYpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodiA9PT0gXCJzZWxlY3RcIikgdGhpcy5kYXRlLm1vbnRoID0gbnVsbDtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuY2FsZW5kYXIuc3RhdGljLm1vbnRocy5maW5kKFxuICAgICAgICAgICAgICAgICAgICAobSkgPT4gbS5uYW1lID09IHZcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHRoaXMuZGF0ZS5tb250aCA9IHRoaXMuY2FsZW5kYXIuc3RhdGljLm1vbnRocy5pbmRleE9mKGluZGV4KTtcbiAgICAgICAgICAgICAgICB0aGlzLmJ1aWxkRGF0ZUZpZWxkcygpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgeWVhckVsID0gdGhpcy5kYXRlRmllbGRFbC5jcmVhdGVEaXYoXG4gICAgICAgICAgICBcImZhbnRhc3ktY2FsZW5kYXItZGF0ZS1maWVsZFwiXG4gICAgICAgICk7XG4gICAgICAgIHllYXJFbC5jcmVhdGVFbChcImxhYmVsXCIsIHsgdGV4dDogXCJZZWFyXCIgfSk7XG4gICAgICAgIGlmICh0aGlzLmNhbGVuZGFyLnN0YXRpYy51c2VDdXN0b21ZZWFycykge1xuICAgICAgICAgICAgY29uc3QgeWVhckRyb3AgPSBuZXcgRHJvcGRvd25Db21wb25lbnQoeWVhckVsKTtcbiAgICAgICAgICAgICh0aGlzLmNhbGVuZGFyLnN0YXRpYy55ZWFycyA/PyBbXSkuZm9yRWFjaCgoeWVhcikgPT4ge1xuICAgICAgICAgICAgICAgIHllYXJEcm9wLmFkZE9wdGlvbih5ZWFyLmlkLCB5ZWFyLm5hbWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAodGhpcy5kYXRlLnllYXIgPiB0aGlzLmNhbGVuZGFyLnN0YXRpYy55ZWFycz8ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kYXRlLnllYXIgPSB0aGlzLmNhbGVuZGFyLnN0YXRpYy55ZWFyc1xuICAgICAgICAgICAgICAgICAgICA/IHRoaXMuY2FsZW5kYXIuc3RhdGljLnllYXJzLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICA6IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5ZWFyRHJvcFxuICAgICAgICAgICAgICAgIC5zZXRWYWx1ZSh0aGlzLmNhbGVuZGFyLnN0YXRpYy55ZWFycz8uW3RoaXMuZGF0ZS55ZWFyIC0gMV0/LmlkKVxuICAgICAgICAgICAgICAgIC5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGUueWVhciA9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLnN0YXRpYy55ZWFycy5maW5kSW5kZXgoKHkpID0+IHkuaWQgPT0gdikgK1xuICAgICAgICAgICAgICAgICAgICAgICAgMTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHllYXIgPSBuZXcgVGV4dENvbXBvbmVudCh5ZWFyRWwpXG4gICAgICAgICAgICAgICAgLnNldFBsYWNlaG9sZGVyKFwiWWVhclwiKVxuICAgICAgICAgICAgICAgIC5zZXRWYWx1ZShgJHt0aGlzLmRhdGUueWVhcn1gKVxuICAgICAgICAgICAgICAgIC5vbkNoYW5nZSgodikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGUueWVhciA9IE51bWJlcih2KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHllYXIuaW5wdXRFbC5zZXRBdHRyKFwidHlwZVwiLCBcIm51bWJlclwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbk9wZW4oKSB7XG4gICAgICAgIHRoaXMuZGlzcGxheSgpO1xuICAgIH1cbn1cblxuY2xhc3MgVmlld0V2ZW50TW9kYWwgZXh0ZW5kcyBNb2RhbCB7XG4gICAgY29uc3RydWN0b3IocHVibGljIGV2ZW50OiBFdmVudCwgcHVibGljIHBsdWdpbjogRmFudGFzeUNhbGVuZGFyKSB7XG4gICAgICAgIHN1cGVyKHBsdWdpbi5hcHApO1xuICAgICAgICB0aGlzLmNvbnRhaW5lckVsLmFkZENsYXNzKFwiZmFudGFzeS1jYWxlbmRhci12aWV3LWV2ZW50XCIpO1xuICAgIH1cbiAgICBhc3luYyBkaXNwbGF5KCkge1xuICAgICAgICB0aGlzLmNvbnRlbnRFbC5lbXB0eSgpO1xuICAgICAgICB0aGlzLmNvbnRlbnRFbC5jcmVhdGVFbChcImg0XCIsIHsgdGV4dDogdGhpcy5ldmVudC5uYW1lIH0pO1xuXG4gICAgICAgIGF3YWl0IE1hcmtkb3duUmVuZGVyZXIucmVuZGVyTWFya2Rvd24oXG4gICAgICAgICAgICB0aGlzLmV2ZW50LmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgdGhpcy5jb250ZW50RWwsXG4gICAgICAgICAgICB0aGlzLmV2ZW50Lm5vdGUsXG4gICAgICAgICAgICBudWxsXG4gICAgICAgICk7XG4gICAgfVxuICAgIGFzeW5jIG9uT3BlbigpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5kaXNwbGF5KCk7XG4gICAgfVxufVxuIiwgImltcG9ydCB7IEV2ZW50cywgTm90aWNlIH0gZnJvbSBcIm9ic2lkaWFuXCI7XG5pbXBvcnQgdHlwZSBGYW50YXN5Q2FsZW5kYXIgZnJvbSBcInNyYy9tYWluXCI7XG5pbXBvcnQgeyBNT09OX1BIQVNFUywgUGhhc2UgfSBmcm9tIFwic3JjL3V0aWxzL2NvbnN0YW50c1wiO1xuaW1wb3J0IHtcbiAgICBkYXRlU3RyaW5nLFxuICAgIGlzVmFsaWREYXksXG4gICAgaXNWYWxpZE1vbnRoLFxuICAgIGlzVmFsaWRZZWFyLFxuICAgIHdyYXBcbn0gZnJvbSBcInNyYy91dGlscy9mdW5jdGlvbnNcIjtcbmltcG9ydCB0eXBlIHtcbiAgICBDYWxlbmRhcixcbiAgICBDdXJyZW50Q2FsZW5kYXJEYXRhLFxuICAgIE1vbnRoLFxuICAgIEV2ZW50LFxuICAgIExlYXBEYXksXG4gICAgTW9vblxufSBmcm9tIFwiLi4vQHR5cGVzXCI7XG5cbmV4cG9ydCBjbGFzcyBNb250aEhlbHBlciB7XG4gICAgZGF5czogRGF5SGVscGVyW10gPSBbXTtcbiAgICBkYXlzQmVmb3JlOiBudW1iZXI7XG4gICAgbGVhcERheXM6IExlYXBEYXlbXSA9IFtdO1xuICAgIHNob3VsZFVwZGF0ZUV2ZW50czogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgZ2V0IGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhLmlkO1xuICAgIH1cbiAgICBnZXQgaW5kZXgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhbGVuZGFyLmRhdGEubW9udGhzLmluZGV4T2YodGhpcy5kYXRhKTtcbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGEubmFtZTtcbiAgICB9XG4gICAgZ2V0IGxlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF5cy5sZW5ndGg7XG4gICAgfVxuXG4gICAgZ2V0IGZpcnN0V2Vla2RheSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNhbGVuZGFyLmRhdGEub3ZlcmZsb3cpIHJldHVybiAwO1xuICAgICAgICByZXR1cm4gdGhpcy5kYXlzWzBdLndlZWtkYXk7XG4gICAgfVxuICAgIGdldCBsYXN0V2Vla2RheSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF5c1t0aGlzLmRheXMubGVuZ3RoIC0gMV0ud2Vla2RheTtcbiAgICB9XG5cbiAgICBnZXQgdHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS50eXBlO1xuICAgIH1cbiAgICBldmVudHM6IEV2ZW50W107XG4gICAgZ2V0RXZlbnRzT25EYXkoZGF5OiBDdXJyZW50Q2FsZW5kYXJEYXRhKSB7XG4gICAgICAgIGlmICghdGhpcy5ldmVudHMgfHwgIXRoaXMuZXZlbnRzLmxlbmd0aCB8fCB0aGlzLnNob3VsZFVwZGF0ZUV2ZW50cykge1xuICAgICAgICAgICAgdGhpcy5ldmVudHMgPSB0aGlzLmNhbGVuZGFyLmV2ZW50c0Zvck1vbnRoKHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50cy5maWx0ZXIoKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXZlbnQuZGF0ZS5kYXkgPT0gZGF5LmRheSkgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBpZiAoIWV2ZW50LmVuZCkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSB7IC4uLmV2ZW50LmRhdGUgfTtcbiAgICAgICAgICAgIGNvbnN0IGVuZCA9IHsgLi4uZXZlbnQuZW5kIH07XG5cbiAgICAgICAgICAgIGlmICghc3RhcnQueWVhcikgc3RhcnQueWVhciA9IGVuZC55ZWFyID0gdGhpcy55ZWFyO1xuICAgICAgICAgICAgaWYgKCFzdGFydC5tb250aCkgc3RhcnQubW9udGggPSBlbmQubW9udGggPSB0aGlzLm51bWJlcjtcbiAgICAgICAgICAgIGNvbnN0IGhhc2ggPSBOdW1iZXIodGhpcy5jYWxlbmRhci5oYXNoKGRheSkpO1xuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIE51bWJlcih0aGlzLmNhbGVuZGFyLmhhc2goc3RhcnQpKSA8PSBoYXNoICYmXG4gICAgICAgICAgICAgICAgaGFzaCA8PSBOdW1iZXIodGhpcy5jYWxlbmRhci5oYXNoKGVuZCkpXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzaG91bGRVcGRhdGVNb29ucyA9IGZhbHNlO1xuICAgIG1vb25zOiBBcnJheTxbTW9vbiwgUGhhc2VdPltdO1xuICAgIGdldE1vb25zRm9yRGF5KGRheTogQ3VycmVudENhbGVuZGFyRGF0YSkge1xuICAgICAgICBpZiAoIXRoaXMubW9vbnMgfHwgIXRoaXMubW9vbnMubGVuZ3RoIHx8IHRoaXMuc2hvdWxkVXBkYXRlTW9vbnMpIHtcbiAgICAgICAgICAgIHRoaXMubW9vbnMgPSB0aGlzLmNhbGVuZGFyLmdldE1vb25zRm9yTW9udGgodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubW9vbnNbZGF5LmRheSAtIDFdO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIGRhdGE6IE1vbnRoLFxuICAgICAgICBwdWJsaWMgbnVtYmVyOiBudW1iZXIsXG4gICAgICAgIHB1YmxpYyB5ZWFyOiBudW1iZXIsXG4gICAgICAgIHB1YmxpYyBjYWxlbmRhcjogQ2FsZW5kYXJIZWxwZXJcbiAgICApIHtcbiAgICAgICAgdGhpcy5sZWFwRGF5cyA9IHRoaXMuY2FsZW5kYXIubGVhcERheXNGb3JNb250aCh0aGlzLm51bWJlciwgeWVhcik7XG4gICAgICAgIHRoaXMuZGF5c0JlZm9yZSA9IHRoaXMuY2FsZW5kYXIuZGF5c0JlZm9yZU1vbnRoKHRoaXMubnVtYmVyLCB0aGlzLnllYXIpO1xuXG4gICAgICAgIHRoaXMuZGF5cyA9IFtcbiAgICAgICAgICAgIC4uLm5ldyBBcnJheShkYXRhLmxlbmd0aCArIHRoaXMubGVhcERheXMubGVuZ3RoKS5rZXlzKClcbiAgICAgICAgXS5tYXAoKGspID0+IG5ldyBEYXlIZWxwZXIodGhpcywgayArIDEpKTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBEYXlIZWxwZXIge1xuICAgIHByaXZhdGUgX2V2ZW50czogRXZlbnRbXTtcbiAgICBnZXQgY2FsZW5kYXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1vbnRoLmNhbGVuZGFyO1xuICAgIH1cbiAgICBnZXQgZGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRheTogdGhpcy5udW1iZXIsXG4gICAgICAgICAgICBtb250aDogdGhpcy5tb250aC5udW1iZXIsXG4gICAgICAgICAgICB5ZWFyOiB0aGlzLnllYXJcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0IGV2ZW50cygpOiBFdmVudFtdIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgIXRoaXMuX2V2ZW50cyB8fFxuICAgICAgICAgICAgIXRoaXMuX2V2ZW50cy5sZW5ndGggfHxcbiAgICAgICAgICAgIHRoaXMubW9udGguc2hvdWxkVXBkYXRlRXZlbnRzXG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhpcy5fZXZlbnRzID0gdGhpcy5tb250aC5nZXRFdmVudHNPbkRheSh0aGlzLmRhdGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9ldmVudHM7XG4gICAgfVxuICAgIGdldCBsb25nRGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRheTogdGhpcy5udW1iZXIsXG4gICAgICAgICAgICBtb250aDogdGhpcy5tb250aC5uYW1lLFxuICAgICAgICAgICAgeWVhcjogdGhpcy55ZWFyXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKiBEYXlzIGJlZm9yZSB0aGlzIGRheSBpbiB0aGUgeWVhci4gKi9cbiAgICBnZXQgZGF5c0JlZm9yZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9udGguZGF5c0JlZm9yZSArIHRoaXMubnVtYmVyIC0gMTtcbiAgICB9XG4gICAgZ2V0IHllYXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1vbnRoLnllYXI7XG4gICAgfVxuICAgIGdldCB3ZWVrZGF5KCkge1xuICAgICAgICBjb25zdCBmaXJzdE9mWWVhciA9IHRoaXMuY2FsZW5kYXIuZmlyc3REYXlPZlllYXIodGhpcy55ZWFyKTtcblxuICAgICAgICByZXR1cm4gd3JhcChcbiAgICAgICAgICAgICh0aGlzLmRheXNCZWZvcmUgJSB0aGlzLmNhbGVuZGFyLndlZWtkYXlzLmxlbmd0aCkgKyBmaXJzdE9mWWVhcixcbiAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIud2Vla2RheXMubGVuZ3RoXG4gICAgICAgICk7XG4gICAgfVxuICAgIGdldCBpc0N1cnJlbnREYXkoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICB0aGlzLm51bWJlciA9PSB0aGlzLmNhbGVuZGFyLmN1cnJlbnQuZGF5ICYmXG4gICAgICAgICAgICB0aGlzLm1vbnRoLm51bWJlciA9PSB0aGlzLmNhbGVuZGFyLmN1cnJlbnQubW9udGggJiZcbiAgICAgICAgICAgIHRoaXMubW9udGgueWVhciA9PSB0aGlzLmNhbGVuZGFyLmN1cnJlbnQueWVhclxuICAgICAgICApO1xuICAgIH1cbiAgICBnZXQgaXNEaXNwbGF5aW5nKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgdGhpcy5udW1iZXIgPT0gdGhpcy5jYWxlbmRhci52aWV3aW5nLmRheSAmJlxuICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kaXNwbGF5ZWQueWVhciA9PSB0aGlzLmNhbGVuZGFyLnZpZXdpbmcueWVhciAmJlxuICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kaXNwbGF5ZWQubW9udGggPT0gdGhpcy5jYWxlbmRhci52aWV3aW5nLm1vbnRoXG4gICAgICAgICk7XG4gICAgfVxuICAgIHByaXZhdGUgX21vb25zOiBBcnJheTxbTW9vbiwgUGhhc2VdPjtcbiAgICBnZXQgbW9vbnMoKSB7XG4gICAgICAgIGlmICghdGhpcy5fbW9vbnMgfHwgIXRoaXMuX21vb25zLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5fbW9vbnMgPSB0aGlzLm1vbnRoLmdldE1vb25zRm9yRGF5KHRoaXMuZGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX21vb25zO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBtb250aDogTW9udGhIZWxwZXIsIHB1YmxpYyBudW1iZXI6IG51bWJlcikge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsZW5kYXJIZWxwZXIgZXh0ZW5kcyBFdmVudHMge1xuICAgIC8qKlxuICAgICAqIEdldCBhIGRheSBoZWxwZXIgZnJvbSBjYWNoZSBmb3IgYSBnaXZlbiBkYXRlIGNhbGVuZGFyLlxuICAgICAqL1xuICAgIGdldERheUZvckRhdGUoZGF0ZTogQ3VycmVudENhbGVuZGFyRGF0YSk6IERheUhlbHBlciB7XG4gICAgICAgIGNvbnN0IG1vbnRoID0gdGhpcy5nZXRNb250aChkYXRlLm1vbnRoLCBkYXRlLnllYXIpO1xuICAgICAgICBjb25zdCBkYXkgPSBtb250aC5kYXlzW2RhdGUuZGF5IC0gMV07XG4gICAgICAgIHJldHVybiBkYXk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgdGhlIGV2ZW50cyB0aGF0IG9jY3VyIGluIGEgZ2l2ZW4gbW9udGguXG4gICAgICovXG4gICAgZXZlbnRzRm9yTW9udGgoaGVscGVyOiBNb250aEhlbHBlcik6IEV2ZW50W10ge1xuICAgICAgICAvL2dldCBmcm9tIGNhY2hlIGZpcnN0XG5cbiAgICAgICAgLy9lbHNlXG4gICAgICAgIGNvbnN0IHsgeWVhciwgbnVtYmVyOiBtb250aCB9ID0gaGVscGVyO1xuICAgICAgICBjb25zdCBldmVudHMgPSB0aGlzLmNhbGVuZGFyLmV2ZW50cy5maWx0ZXIoKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkYXRlID0geyAuLi5ldmVudC5kYXRlIH07XG4gICAgICAgICAgICBjb25zdCBlbmQgPSB7IC4uLmV2ZW50LmVuZCB9O1xuICAgICAgICAgICAgLy9Oby1tb250aCBldmVudHMgYXJlIG9uIGV2ZXJ5IG1vbnRoLlxuICAgICAgICAgICAgaWYgKGRhdGUubW9udGggPT0gdW5kZWZpbmVkKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIC8vWWVhciBhbmQgTW9udGggbWF0Y2hcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAoZGF0ZS55ZWFyID09IHllYXIgfHwgZGF0ZS55ZWFyID09IHVuZGVmaW5lZCkgJiZcbiAgICAgICAgICAgICAgICBkYXRlLm1vbnRoID09IG1vbnRoXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAvL0V2ZW50IGlzIGFmdGVyIHRoZSBtb250aFxuICAgICAgICAgICAgaWYgKGRhdGUueWVhciA+IHllYXIgfHwgKGRhdGUueWVhciA9PSB5ZWFyICYmIGRhdGUubW9udGggPiBtb250aCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgLy9ObyBlbmQgZGF0ZSBhbmQgZXZlbnQgaXMgYmVmb3JlIHRoZSBtb250aFxuICAgICAgICAgICAgaWYgKCFlbmQgJiYgKGRhdGUubW9udGggIT0gbW9udGggfHwgZGF0ZS55ZWFyIDwgeWVhcikpIHJldHVybiBmYWxzZTtcblxuICAgICAgICAgICAgaWYgKGRhdGUueWVhciA9PSB1bmRlZmluZWQpIGVuZC55ZWFyID0gZGF0ZS55ZWFyID0geWVhcjtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAoZGF0ZS55ZWFyIDw9IHllYXIgfHwgZGF0ZS5tb250aCA8PSBtb250aCkgJiZcbiAgICAgICAgICAgICAgICBlbmQueWVhciA+PSB5ZWFyICYmXG4gICAgICAgICAgICAgICAgZW5kLm1vbnRoID49IG1vbnRoXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG5cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGV2ZW50cztcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBkaXNwbGF5IG5hbWUgZm9yIGEgeWVhci4gVXNlZCBtYWlubHkgZm9yIGN1c3RvbSB5ZWFycy5cbiAgICAgKi9cbiAgICBnZXROYW1lRm9yWWVhcih5ZWFyOiBudW1iZXIpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMuZGF0YS51c2VDdXN0b21ZZWFycykgcmV0dXJuIGAke3llYXJ9YDtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgdGhpcy5kYXRhLnVzZUN1c3RvbVllYXJzICYmXG4gICAgICAgICAgICB5ZWFyIC0gMSA+PSAwICYmXG4gICAgICAgICAgICB5ZWFyIDw9IHRoaXMuZGF0YS55ZWFycz8ubGVuZ3RoXG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS55ZWFyc1t5ZWFyIC0gMV0ubmFtZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBNYXhpbXVtIG51bWJlciBvZiBkYXlzIHBvc3NpYmxlIGluIGEgeWVhci5cbiAgICAgKi9cbiAgICBtYXhEYXlzOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogT3B0aW9ucyBhbGlhcy5cbiAgICAgKi9cbiAgICBnZXQgZGlzcGxheVdlZWtzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWxlbmRhci5kaXNwbGF5V2Vla3M7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgQ2FsZW5kYXJIZWxwZXIuXG4gICAgICogQHBhcmFtIHtDYWxlbmRhcn0gY2FsZW5kYXJcbiAgICAgKiBAcGFyYW0ge0ZhbnRhc3lDYWxlbmRhcn0gcGx1Z2luXG4gICAgICogQG1lbWJlcm9mIENhbGVuZGFySGVscGVyXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocHVibGljIGNhbGVuZGFyOiBDYWxlbmRhciwgcHVibGljIHBsdWdpbjogRmFudGFzeUNhbGVuZGFyKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuZGlzcGxheWVkID0geyAuLi50aGlzLmN1cnJlbnQgfTtcbiAgICAgICAgdGhpcy51cGRhdGUodGhpcy5jYWxlbmRhcik7XG5cbiAgICAgICAgLy9UT0RPOiBUZWxsIGV4aXN0aW5nIG1vbnRocyAvIGRheXMgdG8gdXBkYXRlLlxuICAgICAgICB0aGlzLnBsdWdpbi5yZWdpc3RlckV2ZW50KFxuICAgICAgICAgICAgdGhpcy5wbHVnaW4uYXBwLndvcmtzcGFjZS5vbihcbiAgICAgICAgICAgICAgICBcImZhbnRhc3ktY2FsZW5kYXJzLWV2ZW50LXVwZGF0ZVwiLFxuICAgICAgICAgICAgICAgICh0cmVlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdHJlZS5oYXModGhpcy5jYWxlbmRhci5pZCkpIHJldHVybjtcblxuICAgICAgICAgICAgICAgICAgICBjb25zdCB5ZWFycyA9IHRyZWUuZ2V0KHRoaXMuY2FsZW5kYXIuaWQpO1xuXG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW3llYXIsIG1vbnRoc10gb2YgeWVhcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5fY2FjaGUuaGFzKHllYXIpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbW9udGggb2YgbW9udGhzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLl9jYWNoZS5nZXQoeWVhcikuaGFzKG1vbnRoKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FjaGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmdldCh5ZWFyKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZ2V0KG1vbnRoKS5zaG91bGRVcGRhdGVFdmVudHMgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHllYXIgPT0gdGhpcy5kaXNwbGF5ZWQueWVhciAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9udGggPT0gdGhpcy5kaXNwbGF5ZWQubW9udGgpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICh5ZWFyID09IHRoaXMudmlld2luZy55ZWFyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb250aCA9PSB0aGlzLnZpZXdpbmcubW9udGgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudHJpZ2dlcihcIm1vbnRoLXVwZGF0ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApXG4gICAgICAgICk7XG5cbiAgICAgICAgLyogd2luZG93LmNhbGVuZGFyID0gdGhpczsgKi9cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDYWNoZSB1c2VkIHRvIHN0b3JlIGJ1aWx0IG1vbnRoIGhlbHBlcnMuXG4gICAgICovXG4gICAgcHJpdmF0ZSBfY2FjaGU6IE1hcDxudW1iZXIsIE1hcDxudW1iZXIsIE1vbnRoSGVscGVyPj4gPSBuZXcgTWFwKCk7XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYW4gYXJyYXkgb2YgbW9udGggaGVscGVycyBmb3IgYW4gZW50aXJlIHllYXIuXG4gICAgICovXG4gICAgZ2V0TW9udGhzRm9yWWVhcih5ZWFyOiBudW1iZXIpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9jYWNoZS5oYXMoeWVhcikpIHtcbiAgICAgICAgICAgIHRoaXMuX2NhY2hlLnNldChcbiAgICAgICAgICAgICAgICB5ZWFyLFxuICAgICAgICAgICAgICAgIG5ldyBNYXAoXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5tb250aHMubWFwKChtLCBpKSA9PiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBpLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IE1vbnRoSGVscGVyKG0sIGksIHllYXIsIHRoaXMpXG4gICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9jYWNoZS5nZXQoeWVhcikudmFsdWVzKCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBoYXNoIG9mIGEgZ2l2ZW4gZGF0ZS5cbiAgICAgKlxuICAgICAqIEhhc2ggdGFrZXMgdGhlIGZvcm0gb2YgYFlZWVlNTUREYCwgd2l0aCBtb250aHMgYW5kIGRheXMgcGFkZGVkIHRvIHRoZSBtYXhpbXVtIHZhbHVlLlxuICAgICAqL1xuICAgIGhhc2goZGF0ZTogQ3VycmVudENhbGVuZGFyRGF0YSkge1xuICAgICAgICBpZiAoZGF0ZS55ZWFyID09IG51bGwgfHwgZGF0ZS5tb250aCA9PSBudWxsIHx8IGRhdGUuZGF5ID09IG51bGwpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgY29uc3QgbW9udGhzID0gYCR7dGhpcy5kYXRhLm1vbnRocy5sZW5ndGh9YC5sZW5ndGg7XG4gICAgICAgIGNvbnN0IG1vbnRoID0gYCR7ZGF0ZS5tb250aH1gLnBhZFN0YXJ0KG1vbnRocywgXCIwXCIpO1xuICAgICAgICBjb25zdCBkYXlzID0gYCR7dGhpcy5tYXhEYXlzfWAubGVuZ3RoO1xuICAgICAgICBjb25zdCBkYXkgPSBgJHtkYXRlLmRheX1gLnBhZFN0YXJ0KGRheXMsIFwiMFwiKTtcbiAgICAgICAgcmV0dXJuIGAke2RhdGUueWVhcn0ke21vbnRofSR7ZGF5fWA7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSBjYWxlbmRhciBvYmplY3QgdG8gYSBuZXcgY2FsZW5kYXIuXG4gICAgICovXG4gICAgdXBkYXRlKGNhbGVuZGFyPzogQ2FsZW5kYXIpIHtcbiAgICAgICAgdGhpcy5jYWxlbmRhciA9IGNhbGVuZGFyID8/IHRoaXMuY2FsZW5kYXI7XG4gICAgICAgIHRoaXMubWF4RGF5cyA9IE1hdGgubWF4KC4uLnRoaXMuZGF0YS5tb250aHMubWFwKChtKSA9PiBtLmxlbmd0aCkpO1xuXG4gICAgICAgIGlmICghY2FsZW5kYXIuY3VycmVudCkge1xuICAgICAgICAgICAgY2FsZW5kYXIuY3VycmVudCA9IHtcbiAgICAgICAgICAgICAgICBkYXk6IG51bGwsXG4gICAgICAgICAgICAgICAgbW9udGg6IG51bGwsXG4gICAgICAgICAgICAgICAgeWVhcjogbnVsbFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzVmFsaWRZZWFyKGNhbGVuZGFyLmN1cnJlbnQueWVhciwgY2FsZW5kYXIpKSB7XG4gICAgICAgICAgICBjYWxlbmRhci5jdXJyZW50LnllYXIgPSAxO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNWYWxpZE1vbnRoKGNhbGVuZGFyLmN1cnJlbnQubW9udGgsIGNhbGVuZGFyKSkge1xuICAgICAgICAgICAgY2FsZW5kYXIuY3VycmVudC5tb250aCA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1ZhbGlkRGF5KGNhbGVuZGFyLmN1cnJlbnQuZGF5LCBjYWxlbmRhcikpIHtcbiAgICAgICAgICAgIGNhbGVuZGFyLmN1cnJlbnQuZGF5ID0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudHJpZ2dlcihcIm1vbnRoLXVwZGF0ZVwiKTtcbiAgICAgICAgdGhpcy50cmlnZ2VyKFwiZGF5LXVwZGF0ZVwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWxpYXMgZm9yIGNhbGVuZGFyIGNhdGVnb3JpZXMuXG4gICAgICovXG4gICAgZ2V0IGNhdGVnb3JpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhbGVuZGFyLmNhdGVnb3JpZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFsaWFzIGZvciBjYWxlbmRhciBzdGF0aWMgZGF0YS5cbiAgICAgKi9cbiAgICBnZXQgZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FsZW5kYXIuc3RhdGljO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBbGlhcyBmb3IgY2FsZW5kYXIgY3VycmVudCBkYXRlLlxuICAgICAqL1xuICAgIGdldCBjdXJyZW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWxlbmRhci5jdXJyZW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBbGlhcyBmb3IgY2FsZW5kYXIgbGVhcCBkYXlzIGRhdGEuXG4gICAgICovXG4gICAgZ2V0IGxlYXBkYXlzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhLmxlYXBEYXlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gdHJhY2sgY3VycmVudGx5IGRpc3BsYXllZCBkYXRlIG9uIHRoZSBjYWxlbmRhci5cbiAgICAgKiBQcm9iYWJseSBqdXN0IG5lZWQgdG8gdHJhY2sgbW9udGggYW5kIHllYXIuLi4gb3IgYSBNb250aEhlbHBlci5cbiAgICAgKi9cbiAgICBkaXNwbGF5ZWQ6IEN1cnJlbnRDYWxlbmRhckRhdGEgPSB7XG4gICAgICAgIHllYXI6IG51bGwsXG4gICAgICAgIG1vbnRoOiBudWxsLFxuICAgICAgICBkYXk6IG51bGxcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gdHJhY2sgY3VycmVudCB2aWV3ZWQgZGF0ZSAoZGF5IHZpZXcpIG9uIHRoZSBjYWxlbmRhci5cbiAgICAgKiBQcm9iYWJseSBqdXN0IG5lZWQgdG8gdHJhY2sgYSBEYXlIZWxwZXIuXG4gICAgICovXG4gICAgdmlld2luZzogQ3VycmVudENhbGVuZGFyRGF0YSA9IHtcbiAgICAgICAgeWVhcjogbnVsbCxcbiAgICAgICAgbW9udGg6IG51bGwsXG4gICAgICAgIGRheTogbnVsbFxuICAgIH07XG4gICAgLyoqXG4gICAgICogRGlzcGxheSBzdHJpbmcgZm9yIGN1cnJlbnQgZGF0ZS5cbiAgICAgKi9cbiAgICBnZXQgY3VycmVudERhdGUoKSB7XG4gICAgICAgIHJldHVybiBkYXRlU3RyaW5nKHRoaXMuY3VycmVudCwgdGhpcy5kYXRhLm1vbnRocyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRGlzcGxheSBzdHJpbmcgZm9yIGRpc3BsYXllZCBkYXRlLlxuICAgICAqL1xuICAgIGdldCBkaXNwbGF5ZWREYXRlKCkge1xuICAgICAgICByZXR1cm4gZGF0ZVN0cmluZyh0aGlzLmRpc3BsYXllZCwgdGhpcy5kYXRhLm1vbnRocyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERpc3BsYXkgc3RyaW5nIGZvciB2aWV3ZWQgZGF0ZS5cbiAgICAgKi9cbiAgICBnZXQgdmlld2VkRGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIGRhdGVTdHJpbmcodGhpcy52aWV3aW5nLCB0aGlzLmRhdGEubW9udGhzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXNldCBhIGNhbGVuZGFyIHRvIGRpc3BsYXkgY3VycmVudCBkYXRlLlxuICAgICAqL1xuICAgIHJlc2V0KCkge1xuICAgICAgICB0aGlzLmRpc3BsYXllZCA9IHsgLi4udGhpcy5jdXJyZW50IH07XG4gICAgICAgIHRoaXMudmlld2luZyA9IHsgLi4udGhpcy5jdXJyZW50IH07XG5cbiAgICAgICAgdGhpcy50cmlnZ2VyKFwibW9udGgtdXBkYXRlXCIpO1xuICAgICAgICB0aGlzLnRyaWdnZXIoXCJkYXktdXBkYXRlXCIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldCB0aGUgY3VycmVudCBkaXNwbGF5ZWQgbW9udGguXG4gICAgICovXG4gICAgc2V0Q3VycmVudE1vbnRoKG46IG51bWJlcikge1xuICAgICAgICB0aGlzLmRpc3BsYXllZC5tb250aCA9IG47XG5cbiAgICAgICAgdGhpcy50cmlnZ2VyKFwibW9udGgtdXBkYXRlXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbmNyZW1lbnQgdmlld2VkIGRheSBhbmQgb3ZlcmZsb3cgbW9udGhzIGFuZCB5ZWFycyBhcyBuZWNlc3NhcnkuXG4gICAgICovXG4gICAgZ29Ub05leHREYXkoKSB7XG4gICAgICAgIHRoaXMudmlld2luZy5kYXkgKz0gMTtcbiAgICAgICAgY29uc3QgY3VycmVudE1vbnRoID0gdGhpcy5nZXRNb250aChcbiAgICAgICAgICAgIHRoaXMuZGlzcGxheWVkLm1vbnRoLFxuICAgICAgICAgICAgdGhpcy5kaXNwbGF5ZWQueWVhclxuICAgICAgICApO1xuICAgICAgICBpZiAodGhpcy52aWV3aW5nLmRheSA+IGN1cnJlbnRNb250aC5kYXlzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5nb1RvTmV4dCgpO1xuICAgICAgICAgICAgdGhpcy52aWV3aW5nLm1vbnRoID0gdGhpcy5kaXNwbGF5ZWQubW9udGg7XG4gICAgICAgICAgICB0aGlzLnZpZXdpbmcueWVhciA9IHRoaXMuZGlzcGxheWVkLnllYXI7XG4gICAgICAgICAgICB0aGlzLnZpZXdpbmcuZGF5ID0gMTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRyaWdnZXIoXCJkYXktdXBkYXRlXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbmNyZW1lbnQgY3VycmVudCBkYXkgYW5kIG92ZXJmbG93IG1vbnRocyBhbmQgeWVhcnMgYXMgbmVjZXNzYXJ5LlxuICAgICAqL1xuICAgIGdvVG9OZXh0Q3VycmVudERheSgpIHtcbiAgICAgICAgdGhpcy5jdXJyZW50LmRheSArPSAxO1xuICAgICAgICBjb25zdCBjdXJyZW50TW9udGggPSB0aGlzLmdldE1vbnRoKFxuICAgICAgICAgICAgdGhpcy5jdXJyZW50Lm1vbnRoLFxuICAgICAgICAgICAgdGhpcy5jdXJyZW50LnllYXJcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKHRoaXMuY3VycmVudC5kYXkgPj0gY3VycmVudE1vbnRoLmRheXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnQuZGF5ID0gMTtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudC5tb250aCArPSAxO1xuICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudC5tb250aCA+PSB0aGlzLmRhdGEubW9udGhzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudC5tb250aCA9IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50LnllYXIgKz0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRyaWdnZXIoXCJkYXktdXBkYXRlXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGluZGV4IG9mIHRoZSBuZXh0IG1vbnRoIHRvIGJlIGRpc3BsYXllZCwgd3JhcHBpbmcgYXMgbmVjZXNzYXJ5LlxuICAgICAqL1xuICAgIGdldCBuZXh0TW9udGhJbmRleCgpIHtcbiAgICAgICAgcmV0dXJuIHdyYXAodGhpcy5kaXNwbGF5ZWQubW9udGggKyAxLCB0aGlzLmRhdGEubW9udGhzLmxlbmd0aCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgTW9udGhIZWxwZXIgb2YgdGhlIG5leHQgbW9udGggdG8gYmUgZGlzcGxheWVkLlxuICAgICAqL1xuICAgIGdldCBuZXh0TW9udGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldE1vbnRoKHRoaXMuZGlzcGxheWVkLm1vbnRoICsgMSwgdGhpcy5kaXNwbGF5ZWQueWVhcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIHRoZSBjYWxlbmRhciBjYW4gaW5jcmVtZW50IHllYXIuIEFsd2F5cyByZXR1cm5zIHRydWUgdW5sZXNzIHRoZSBjYWxlbmRhciBoYXMgY3VzdG9tIHllYXJzIGRlZmluZWQuXG4gICAgICovXG4gICAgY2FuR29Ub05leHRZZWFyKHllYXIgPSB0aGlzLmRpc3BsYXllZC55ZWFyKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5kYXRhLnVzZUN1c3RvbVllYXJzIHx8IHllYXIgPCB0aGlzLmRhdGEueWVhcnMubGVuZ3RoO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHbyB0byB0aGUgbmV4dCBtb250aCBpbmRleC4gVXNlZCB0byBjaGFuZ2UgbW9udGhzIG9uIHRoZSBjYWxlbmRhci5cbiAgICAgKi9cbiAgICBnb1RvTmV4dCgpIHtcbiAgICAgICAgaWYgKHRoaXMubmV4dE1vbnRoSW5kZXggPCB0aGlzLmRpc3BsYXllZC5tb250aCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmNhbkdvVG9OZXh0WWVhcigpKSB7XG4gICAgICAgICAgICAgICAgbmV3IE5vdGljZShcbiAgICAgICAgICAgICAgICAgICAgXCJUaGlzIGlzIHRoZSBsYXN0IHllYXIuIEFkZGl0aW9uYWwgeWVhcnMgY2FuIGJlIGNyZWF0ZWQgaW4gc2V0dGluZ3MuXCJcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZ29Ub05leHRZZWFyKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRDdXJyZW50TW9udGgodGhpcy5uZXh0TW9udGhJbmRleCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdvIHRvIHRoZSBuZXh0IHllYXIgaW5kZXguIFVzZWQgdG8gY2hhbmdlIHllYXJzIG9uIHRoZSBjYWxlbmRhci5cbiAgICAgKi9cbiAgICBnb1RvTmV4dFllYXIoKSB7XG4gICAgICAgIHRoaXMuZGlzcGxheWVkLnllYXIgKz0gMTtcbiAgICAgICAgdGhpcy50cmlnZ2VyKFwieWVhci11cGRhdGVcIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgaW5kZXggb2YgdGhlIHByZXZpb3VzIG1vbnRoIHRvIGJlIGRpc3BsYXllZCwgd3JhcHBpbmcgYXMgbmVjZXNzYXJ5LlxuICAgICAqL1xuICAgIGdldCBwcmV2TW9udGhJbmRleCgpIHtcbiAgICAgICAgcmV0dXJuIHdyYXAodGhpcy5kaXNwbGF5ZWQubW9udGggLSAxLCB0aGlzLmRhdGEubW9udGhzLmxlbmd0aCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgTW9udGhIZWxwZXIgb2YgdGhlIHByZXZpb3VzIG1vbnRoIHRvIGJlIGRpc3BsYXllZC5cbiAgICAgKi9cbiAgICBnZXQgcHJldmlvdXNNb250aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TW9udGgodGhpcy5kaXNwbGF5ZWQubW9udGggLSAxLCB0aGlzLmRpc3BsYXllZC55ZWFyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR28gdG8gdGhlIHByZXZpb3VzIG1vbnRoIGluZGV4LiBVc2VkIHRvIGNoYW5nZSBtb250aHMgb24gdGhlIGNhbGVuZGFyLlxuICAgICAqL1xuICAgIGdvVG9QcmV2aW91cygpIHtcbiAgICAgICAgaWYgKHRoaXMucHJldk1vbnRoSW5kZXggPiB0aGlzLmRpc3BsYXllZC5tb250aCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuZGlzcGxheWVkLnllYXIgPT0gMSkge1xuICAgICAgICAgICAgICAgIG5ldyBOb3RpY2UoXCJUaGlzIGlzIHRoZSBlYXJsaWVzdCB5ZWFyLlwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmdvVG9QcmV2aW91c1llYXIoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldEN1cnJlbnRNb250aCh0aGlzLnByZXZNb250aEluZGV4KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR28gdG8gdGhlIHZpZXdlZCBwcmV2aW91cyBkYXkuIFVzZWQgdG8gY2hhbmdlIGRheXMgb24gdGhlIGRheSB2aWV3LlxuICAgICAqL1xuICAgIGdvVG9QcmV2aW91c0RheSgpIHtcbiAgICAgICAgdGhpcy52aWV3aW5nLmRheSAtPSAxO1xuICAgICAgICBpZiAodGhpcy52aWV3aW5nLmRheSA8IDEpIHtcbiAgICAgICAgICAgIHRoaXMuZ29Ub1ByZXZpb3VzKCk7XG4gICAgICAgICAgICB0aGlzLnZpZXdpbmcubW9udGggPSB0aGlzLmRpc3BsYXllZC5tb250aDtcbiAgICAgICAgICAgIHRoaXMudmlld2luZy55ZWFyID0gdGhpcy5kaXNwbGF5ZWQueWVhcjtcbiAgICAgICAgICAgIHRoaXMudmlld2luZy5kYXkgPSB0aGlzLmN1cnJlbnRNb250aC5kYXlzLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRyaWdnZXIoXCJkYXktdXBkYXRlXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHbyB0byB0aGUgcHJldmlvdXMgeWVhciBpbmRleC4gVXNlZCB0byBjaGFuZ2UgeWVhcnMgb24gdGhlIGNhbGVuZGFyLlxuICAgICAqL1xuICAgIGdvVG9QcmV2aW91c1llYXIoKSB7XG4gICAgICAgIHRoaXMuZGlzcGxheWVkLnllYXIgLT0gMTtcbiAgICAgICAgdGhpcy50cmlnZ2VyKFwieWVhci11cGRhdGVcIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFsaWFzIGZvciBjYWxlbmRhciBkYXRhIHdlZWtkYXlzLlxuICAgICAqL1xuICAgIGdldCB3ZWVrZGF5cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS53ZWVrZGF5cztcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBNb250aEhlbHBlciBmb3IgdGhlIGN1cnJlbnRseSBkaXNwbGF5ZWQgbW9udGguXG4gICAgICovXG4gICAgZ2V0IGN1cnJlbnRNb250aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TW9udGgodGhpcy5kaXNwbGF5ZWQubW9udGgsIHRoaXMuZGlzcGxheWVkLnllYXIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRlc3QgaWYgYSBsZWFwIGRheSBvY2N1cnMgaW4gYSBnaXZlbiB5ZWFyLlxuICAgICAqL1xuICAgIHRlc3RMZWFwRGF5KGxlYXBkYXk6IExlYXBEYXksIHllYXI6IG51bWJlcikge1xuICAgICAgICByZXR1cm4gbGVhcGRheS5pbnRlcnZhbFxuICAgICAgICAgICAgLnNvcnQoKGEsIGIpID0+IGEuaW50ZXJ2YWwgLSBiLmludGVydmFsKVxuICAgICAgICAgICAgLnNvbWUoKHsgaW50ZXJ2YWwsIGV4Y2x1c2l2ZSB9LCBpbmRleCwgYXJyYXkpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXhjbHVzaXZlICYmIGluZGV4ID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICh5ZWFyIC0gbGVhcGRheS5vZmZzZXQgPz8gMCkgJSBpbnRlcnZhbCAhPSAwO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChleGNsdXNpdmUpIHJldHVybjtcblxuICAgICAgICAgICAgICAgIGlmIChhcnJheVtpbmRleCArIDFdICYmIGFycmF5W2luZGV4ICsgMV0uZXhjbHVzaXZlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAoeWVhciAtIGxlYXBkYXkub2Zmc2V0ID8/IDApICUgaW50ZXJ2YWwgPT0gMCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgKHllYXIgLSBsZWFwZGF5Lm9mZnNldCA/PyAwKSAlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyYXlbaW5kZXggKyAxXS5pbnRlcnZhbCAhPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDBcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuICh5ZWFyIC0gbGVhcGRheS5vZmZzZXQgPz8gMCkgJSBpbnRlcnZhbCA9PSAwO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgbGVhcGRheXMgdGhhdCBvY2N1ciBpbiBhIGdpdmVuIHllYXIuXG4gICAgICovXG4gICAgbGVhcERheXNGb3JZZWFyKHllYXI6IG51bWJlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5sZWFwZGF5cy5maWx0ZXIoKGwpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRlc3RMZWFwRGF5KGwsIHllYXIpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGFsbCBsZWFwZGF5cyB0aGF0IG9jY3VyIGluIGEgZ2l2ZW4gbW9udGggaW4gYSBzcGVjaWZpYyB5ZWFyLlxuICAgICAqL1xuICAgIGxlYXBEYXlzRm9yTW9udGgobW9udGg6IG51bWJlciwgeWVhciA9IHRoaXMuZGlzcGxheWVkLnllYXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGVhcGRheXMuZmlsdGVyKChsKSA9PiB7XG4gICAgICAgICAgICBpZiAobC50aW1lc3BhbiAhPSBtb250aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudGVzdExlYXBEYXkobCwgeWVhcik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhIE1vbnRoSGVscGVyIGZvciBhIG1vbnRoIG51bWJlciBpbiBhIHNwZWNpZmljIHllYXIsIHdyYXBwaW5nIHRoZSBtb250aCBudW1iZXIgYXMgbmVjZXNzYXJ5LlxuICAgICAqXG4gICAgICogV2lsbCBwcmlvcml0aXplIHB1bGxpbmcgYSBNb250aEhlbHBlciBmcm9tIHRoZSBjYWNoZS5cbiAgICAgKlxuICAgICAqIFRPRE86IFdoYXQgaXMgdGhlIGludGVyY2FsYXJ5IGJlaGF2aW9yPyBOZWVkIHRvIGRvY3VtZW50IHRoaXMsIGJlY2F1c2UgSSBjYW4ndCByZW1lbWJlci5cbiAgICAgKi9cbiAgICBnZXRNb250aChudW1iZXI6IG51bWJlciwgeWVhcjogbnVtYmVyLCBkaXJlY3Rpb246IG51bWJlciA9IDApOiBNb250aEhlbHBlciB7XG4gICAgICAgIGNvbnN0IG1vbnRocyA9IHRoaXMuZGF0YS5tb250aHM7XG4gICAgICAgIGxldCBpbmRleCA9IHdyYXAobnVtYmVyLCBtb250aHMubGVuZ3RoKTtcblxuICAgICAgICBpZiAobnVtYmVyIDwgMCkgeWVhciAtPSAxO1xuICAgICAgICBpZiAoeWVhciA9PSAwKSByZXR1cm4gbnVsbDtcblxuICAgICAgICBpZiAobnVtYmVyID49IG1vbnRocy5sZW5ndGgpIHllYXIgKz0gMTtcblxuICAgICAgICBpZiAodGhpcy5fY2FjaGUuaGFzKHllYXIpKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fY2FjaGUuZ2V0KHllYXIpIS5oYXMoaW5kZXgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NhY2hlLmdldCh5ZWFyKSEuZ2V0KGluZGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2NhY2hlLnNldCh5ZWFyLCBuZXcgTWFwKCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG1vbnRoc1tpbmRleF0udHlwZSA9PSBcImludGVyY2FsYXJ5XCIgJiYgZGlyZWN0aW9uICE9IDApIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldE1vbnRoKG51bWJlciArIGRpcmVjdGlvbiwgeWVhciwgZGlyZWN0aW9uKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGhlbHBlciA9IG5ldyBNb250aEhlbHBlcihtb250aHNbaW5kZXhdLCBpbmRleCwgeWVhciwgdGhpcyk7XG4gICAgICAgIHRoaXMuX2NhY2hlLnNldCh5ZWFyLCB0aGlzLl9jYWNoZS5nZXQoeWVhcikuc2V0KGluZGV4LCBoZWxwZXIpKTtcbiAgICAgICAgcmV0dXJuIGhlbHBlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBwYWRkZWQgZGF5cyBmb3IgYSBnaXZlbiBtb250aC5cbiAgICAgKlxuICAgICAqIFRoaXMgaXMgdXNlZCB0byBkaXNwbGF5IHRoZSBcIm92ZXJmbG93ZWRcIiBkYXlzIGZyb20gdGhlIHByZXZpb3VzIGFuZCBuZXh0IG1vbnRoIG9uIHRoZSBjYWxlbmRhci5cbiAgICAgKlxuICAgICAqIFRoaXMgaGFzIHRoZSBzaWRlIGJlbmVmaXQgb2YgcHJlLWNhY2hpbmcgdGhlIHByZXZpb3VzIGFuZCBuZXh0IG1vbnRocywgc28gdGhleSBhcmUgYnVpbHQgd2hlbiBzd2l0Y2hlZCB0by5cbiAgICAgKi9cbiAgICBnZXRQYWRkZWREYXlzRm9yTW9udGgobW9udGg6IE1vbnRoSGVscGVyKSB7XG4gICAgICAgIGxldCBjdXJyZW50ID0gbW9udGguZGF5cztcblxuICAgICAgICAvKiogR2V0IERheXMgb2YgUHJldmlvdXMgTW9udGggKi9cbiAgICAgICAgbGV0IHByZXZpb3VzOiBEYXlIZWxwZXJbXSA9IFtdO1xuXG4gICAgICAgIGNvbnN0IHByZXZpb3VzTW9udGggPSB0aGlzLmdldE1vbnRoKFxuICAgICAgICAgICAgbW9udGguaW5kZXggLSAxLFxuICAgICAgICAgICAgdGhpcy5kaXNwbGF5ZWQueWVhcixcbiAgICAgICAgICAgIC0xXG4gICAgICAgICk7XG4gICAgICAgIGlmIChtb250aC5maXJzdFdlZWtkYXkgPiAwICYmIG1vbnRoLnR5cGUgPT0gXCJtb250aFwiKSB7XG4gICAgICAgICAgICBwcmV2aW91cyA9XG4gICAgICAgICAgICAgICAgcHJldmlvdXNNb250aCAhPSBudWxsXG4gICAgICAgICAgICAgICAgICAgID8gcHJldmlvdXNNb250aC5kYXlzLnNsaWNlKC1tb250aC5maXJzdFdlZWtkYXkpXG4gICAgICAgICAgICAgICAgICAgIDogQXJyYXkobW9udGguZmlyc3RXZWVrZGF5KS5maWxsKG51bGwpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqIEdldCBEYXlzIG9mIE5leHQgTW9udGggKi9cbiAgICAgICAgbGV0IG5leHQ6IERheUhlbHBlcltdID0gW107XG4gICAgICAgIGNvbnN0IG5leHRNb250aCA9IHRoaXMuZ2V0TW9udGgoXG4gICAgICAgICAgICBtb250aC5pbmRleCArIDEsXG4gICAgICAgICAgICB0aGlzLmRpc3BsYXllZC55ZWFyLFxuICAgICAgICAgICAgMVxuICAgICAgICApO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBtb250aC5sYXN0V2Vla2RheSA8IHRoaXMud2Vla2RheXMubGVuZ3RoIC0gMSAmJlxuICAgICAgICAgICAgbW9udGgudHlwZSA9PSBcIm1vbnRoXCJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBuZXh0ID0gbmV4dE1vbnRoLmRheXMuc2xpY2UoXG4gICAgICAgICAgICAgICAgMCxcbiAgICAgICAgICAgICAgICB0aGlzLndlZWtkYXlzLmxlbmd0aCAtIG1vbnRoLmxhc3RXZWVrZGF5IC0gMVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwcmV2aW91cyxcbiAgICAgICAgICAgIGN1cnJlbnQsXG4gICAgICAgICAgICBuZXh0XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgcm91bmRlZCB1cCBudW1iZXIgb2Ygd2Vla3Mgb2YgdGhlIGN1cnJlbnQgbW9udGguIFVzZSB0byBidWlsZCBjYWxlbmRhciByb3dzLlxuICAgICAqL1xuICAgIGdldCB3ZWVrc1BlckN1cnJlbnRNb250aCgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguY2VpbChcbiAgICAgICAgICAgIHRoaXMuZ2V0TW9udGgodGhpcy5kaXNwbGF5ZWQubW9udGgsIHRoaXMuZGlzcGxheWVkLnllYXIpLmxlbmd0aCAvXG4gICAgICAgICAgICAgICAgdGhpcy5kYXRhLndlZWtkYXlzLmxlbmd0aFxuICAgICAgICApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIG51bWJlciBvZiB3ZWVrcyBpbiBhIGdpdmVuIG1vbnRoLlxuICAgICAqL1xuICAgIHdlZWtzT2ZNb250aChtb250aDogTW9udGhIZWxwZXIpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguY2VpbChcbiAgICAgICAgICAgIChtb250aC5sZW5ndGggKyBtb250aC5maXJzdFdlZWtkYXkpIC8gdGhpcy5kYXRhLndlZWtkYXlzLmxlbmd0aFxuICAgICAgICApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGZpcnN0IHdlZWsgbnVtYmVyIG9mIGEgZ2l2ZW4gbW9udGguXG4gICAgICpcbiAgICAgKiBUT0RPOiBGaWd1cmUgb3V0IGhvdyB0byBhZGQgaW4gSVNPIHNwZWMgY29tcGxpYW5jZSBoZXJlLlxuICAgICAqL1xuICAgIHdlZWtOdW1iZXJzT2ZNb250aChtb250aDogTW9udGhIZWxwZXIpIHtcbiAgICAgICAgY29uc3QgZGF5c0JlZm9yZSA9IG1vbnRoLmRheXNCZWZvcmUgKyB0aGlzLmZpcnN0RGF5T2ZZZWFyKG1vbnRoLnllYXIpO1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihkYXlzQmVmb3JlIC8gdGhpcy5kYXRhLndlZWtkYXlzLmxlbmd0aCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRvdGFsIG51bWJlciBvZiBkYXlzIGluIGEgeWVhci4gRG9lcyBub3QgaW5jbHVkZSBsZWFwIGRheXMuXG4gICAgICovXG4gICAgZ2V0IGRheXNQZXJZZWFyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhLm1vbnRoc1xuICAgICAgICAgICAgLmZpbHRlcigobSkgPT4gbS50eXBlID09PSBcIm1vbnRoXCIpXG4gICAgICAgICAgICAucmVkdWNlKChhLCBiKSA9PiBhICsgYi5sZW5ndGgsIDApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHRvdGFsIG51bWJlciBvZiBkYXlzIGluIGEgeWVhciBiZWZvcmUgYSBnaXZlbiBtb250aC5cbiAgICAgKi9cbiAgICBkYXlzQmVmb3JlTW9udGgobW9udGg6IG51bWJlciwgeWVhcjogbnVtYmVyLCBhbGw6IGJvb2xlYW4gPSBmYWxzZSkge1xuICAgICAgICBpZiAoIW1vbnRoIHx8IG1vbnRoID09IDApIHJldHVybiAwO1xuXG4gICAgICAgIHJldHVybiB0aGlzLmRhdGEubW9udGhzXG4gICAgICAgICAgICAuc2xpY2UoMCwgbW9udGgpXG4gICAgICAgICAgICAuZmlsdGVyKChtKSA9PiAoYWxsID8gdHJ1ZSA6IG0udHlwZSA9PSBcIm1vbnRoXCIpKVxuICAgICAgICAgICAgLm1hcCgobSwgaSkgPT4gbS5sZW5ndGggKyB0aGlzLmxlYXBEYXlzRm9yTW9udGgoaSwgeWVhcikubGVuZ3RoKVxuICAgICAgICAgICAgLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VkIHRvIGRldGVybWluZSBldmVudCBzb3J0aW5nLiBDYW4gcmVtb3ZlLlxuICAgICAqL1xuICAgIGFyZURhdGVzRXF1YWwoZGF0ZTogQ3VycmVudENhbGVuZGFyRGF0YSwgZGF0ZTI6IEN1cnJlbnRDYWxlbmRhckRhdGEpIHtcbiAgICAgICAgaWYgKGRhdGUuZGF5ICE9IGRhdGUyLmRheSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBkYXRlLm1vbnRoICE9IGRhdGUyLm1vbnRoICYmXG4gICAgICAgICAgICBkYXRlLm1vbnRoICE9IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgZGF0ZTIubW9udGggIT0gdW5kZWZpbmVkXG4gICAgICAgIClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgZGF0ZS55ZWFyICE9IGRhdGUyLnllYXIgJiZcbiAgICAgICAgICAgIGRhdGUueWVhciAhPSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIGRhdGUyLnllYXIgIT0gdW5kZWZpbmVkXG4gICAgICAgIClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgZGF5TnVtYmVyRm9yRGF0ZShkYXRlOiBDdXJyZW50Q2FsZW5kYXJEYXRhKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRheXNCZWZvcmVNb250aChkYXRlLm1vbnRoLCBkYXRlLnllYXIsIHRydWUpICsgZGF0ZS5kYXk7XG4gICAgfVxuXG4gICAgZ2V0IGZpcnN0V2Vla2RheSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS5maXJzdFdlZWtEYXk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWxpYXMgdG8gZ2V0IHRoZSB0b3RhbCBudW1iZXIgb2YgbGVhcCBkYXlzIHRoYXQgaGF2ZSBvY2N1cmVkIGJlZm9yZSB0aGUgY3VycmVudGx5IGRpc3BsYXllZCB5ZWFyLlxuICAgICAqL1xuICAgIGdldCBsZWFwRGF5c0JlZm9yZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuZGlzcGxheWVkLnllYXIgPT0gMSkgcmV0dXJuIDA7XG4gICAgICAgIHJldHVybiB0aGlzLmxlYXBEYXlzQmVmb3JlWWVhcih0aGlzLmRpc3BsYXllZC55ZWFyIC0gMSk7XG4gICAgfVxuICAgIC8qKiBHZXQgVG90YWwgTnVtYmVyIG9mIExlYXAgRGF5cyBiZWZvcmUgYSBnaXZlbiB5ZWFyXG4gICAgICogQHBhcmFtIHRlc3RlciBZZWFyIHRvIGZpbmQgbGVhcCBkYXlzIGJlZm9yZSBOT1QgSU5DTFVESU5HIFRISVMgWUVBUlxuICAgICAqL1xuICAgIGxlYXBEYXlzQmVmb3JlWWVhcih0ZXN0ZXI6IG51bWJlcikge1xuICAgICAgICAvKiogSWYgd2UncmUgY2hlY2tpbmcgeWVhciAxLCB0aGVyZSBhcmUgbm8gbGVhcCBkYXlzLiAqL1xuICAgICAgICBpZiAodGVzdGVyID09IDEpIHJldHVybiAwO1xuICAgICAgICAvKiogU3VidHJhY3QgMSBmcm9tIHRlc3Rlci4gV2UncmUgbG9va2luZyBmb3IgbGVhcCBkYXlzIEJFRk9SRSB0aGUgeWVhci4gKi9cbiAgICAgICAgY29uc3QgeWVhciA9IHRlc3RlciAtIDE7XG4gICAgICAgIGxldCB0b3RhbCA9IDA7XG4gICAgICAgIC8qKiBJdGVyYXRlIG92ZXIgZWFjaCBsZWFwIGRheS4gKi9cbiAgICAgICAgZm9yIChjb25zdCB7IGludGVydmFsLCBvZmZzZXQgfSBvZiB0aGlzLmxlYXBkYXlzKSB7XG4gICAgICAgICAgICBsZXQgbGVhcGRheXMgPSAwO1xuXG4gICAgICAgICAgICAvKiogSXRlcmF0ZSBvdmVyIGVhY2ggY29uZGl0aW9uIG9uIGVhY2ggbGVhcGRheS4gKi9cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW50ZXJ2YWwubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjb25kaXRpb24gPSBpbnRlcnZhbFtpXTtcbiAgICAgICAgICAgICAgICAvKiogRGV0ZXJtaW5lIGhvdyBtYW55IGxlYXAgZGF5cyBtYXRjaCBub24tZXhjbHVzaXZlIHJ1bGVzIEFGVEVSIHRoaXMgcnVsZS5cbiAgICAgICAgICAgICAgICAgKiBUaGlzIGhhcyB0byBiZSBkb25lIHRvIGF2b2lkIFwiZG91YmxlLWNvdW50aW5nXCIgZGF5cyBmb3IgZGF5cyB0aGF0IG1hdGNoIG11bHRpcGxlIHJ1bGVzLlxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3QgPSBpbnRlcnZhbFxuICAgICAgICAgICAgICAgICAgICAuc2xpY2UoaSArIDEpXG4gICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoKGMpID0+ICFjLmV4Y2x1c2l2ZSlcbiAgICAgICAgICAgICAgICAgICAgLm1hcCgoYykgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdGguZmxvb3IoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHllYXIgKyAoYy5pZ25vcmUgPyAwIDogb2Zmc2V0KSkgLyBjLmludGVydmFsXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApO1xuICAgICAgICAgICAgICAgIC8qKiBDYWxjdWxhdGUgaG93IG1hbnkgZGF5cyBtYXRjaCB0aGlzIHJ1bGUuICovXG4gICAgICAgICAgICAgICAgY29uc3QgY2FsYyA9IE1hdGguZmxvb3IoXG4gICAgICAgICAgICAgICAgICAgICh5ZWFyICsgKGNvbmRpdGlvbi5pZ25vcmUgPyAwIDogb2Zmc2V0KSkgL1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uZGl0aW9uLmludGVydmFsXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBpZiAoY29uZGl0aW9uLmV4Y2x1c2l2ZSkge1xuICAgICAgICAgICAgICAgICAgICAvKiogSWYgdGhlIHJ1bGUgaXMgZXhsdXNpdmUsIHN1YnRyYWN0IHRoZSByZXN1bHQgZnJvbSB0aGUgdG90YWwsIHRoZW4gYWRkIGluIHRoZSByZXN0LiAqL1xuICAgICAgICAgICAgICAgICAgICBsZWFwZGF5cyAtPSBjYWxjO1xuICAgICAgICAgICAgICAgICAgICBsZWFwZGF5cyArPSByZXN0O1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8qKiBJZiB0aGUgcnVsZSBpcyBleGx1c2l2ZSwgYWRkIHRoZSByZXN1bHQgdG8gdGhlIHRvdGFsLCB0aGVuIHN1YnRyYWN0IG91dCB0aGUgcmVzdC4gKi9cbiAgICAgICAgICAgICAgICAgICAgbGVhcGRheXMgKz0gY2FsYztcbiAgICAgICAgICAgICAgICAgICAgbGVhcGRheXMgLT0gcmVzdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0b3RhbCArPSBsZWFwZGF5cztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG90YWw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFsaWFzIHRvIGdldCB0aGUgdG90YWwgbnVtYmVyIG9mIGRheXMgYmVmb3JlIHRoZSBjdXJyZW50bHkgZGlzcGxheWVkIHllYXIuXG4gICAgICovXG4gICAgZ2V0IHRvdGFsRGF5c0JlZm9yZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG90YWxEYXlzQmVmb3JlWWVhcih0aGlzLmRpc3BsYXllZC55ZWFyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSB0b3RhbCBudW1iZXIgb2YgZGF5cyBiZWZvcmUgYSBnaXZlbiB5ZWFyLlxuICAgICAqL1xuICAgIHRvdGFsRGF5c0JlZm9yZVllYXIoeWVhcjogbnVtYmVyLCBhbGwgPSBmYWxzZSkge1xuICAgICAgICBpZiAoeWVhciA8IDEpIHJldHVybiAwO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgTWF0aC5hYnMoeWVhciAtIDEpICpcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGEubW9udGhzXG4gICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoKG0pID0+IGFsbCB8fCBtLnR5cGUgPT0gXCJtb250aFwiKVxuICAgICAgICAgICAgICAgICAgICAucmVkdWNlKChhLCBiKSA9PiBhICsgYi5sZW5ndGgsIDApICtcbiAgICAgICAgICAgIHRoaXMubGVhcERheXNCZWZvcmVZZWFyKHllYXIpXG4gICAgICAgICk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgd2Vla2RheSBvZiBhIGdpdmVuIHllYXIuXG4gICAgICovXG4gICAgZmlyc3REYXlPZlllYXIoeWVhciA9IHRoaXMuZGlzcGxheWVkLnllYXIpIHtcbiAgICAgICAgaWYgKCF0aGlzLmRhdGEub3ZlcmZsb3cpIHJldHVybiAwO1xuICAgICAgICBpZiAoeWVhciA9PSAxKSByZXR1cm4gdGhpcy5maXJzdFdlZWtkYXk7XG5cbiAgICAgICAgLy9ub3RlOiBhZGRlZCAxIGhlcmUgdG8gZml4IGdyZWdvcmlhbiBvZmZzZXQ/P1xuICAgICAgICAvL1RPRE86IEZpZ3VyZSBvdXQgd2h5LlxuICAgICAgICByZXR1cm4gd3JhcChcbiAgICAgICAgICAgICh0aGlzLnRvdGFsRGF5c0JlZm9yZVllYXIoeWVhcikgJSB0aGlzLmRhdGEud2Vla2RheXMubGVuZ3RoKSArXG4gICAgICAgICAgICAgICAgdGhpcy5maXJzdFdlZWtkYXkgK1xuICAgICAgICAgICAgICAgICh0aGlzLmRhdGEub2Zmc2V0ID8/IDApLFxuICAgICAgICAgICAgdGhpcy5kYXRhLndlZWtkYXlzLmxlbmd0aFxuICAgICAgICApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFsaWFzIHRvIGdldCB0aGUgbW9vbiBkYXRhLlxuICAgICAqL1xuICAgIGdldCBtb29ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS5tb29ucztcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBtb29ucyBhbmQgdGhlaXIgcGhhc2VzIGZvciBhIGdpdmVuIG1vbnRoLlxuICAgICAqXG4gICAgICogVE9ETzogVGhpcyBzZWVtcyB0byBiZSBhIGxpdHRsZSBvZmY/ICsvLSAxIGRheSBpbiBHcmVnb3JpYW4/XG4gICAgICovXG4gICAgZ2V0TW9vbnNGb3JNb250aChtb250aDogTW9udGhIZWxwZXIpOiBBcnJheTxbTW9vbiwgUGhhc2VdPltdIHtcbiAgICAgICAgY29uc3QgcGhhc2VzOiBBcnJheTxbTW9vbiwgUGhhc2VdPltdID0gW107XG5cbiAgICAgICAgZm9yIChjb25zdCBkYXkgb2YgbW9udGguZGF5cykge1xuICAgICAgICAgICAgY29uc3QgZGF5c0JlZm9yZSA9XG4gICAgICAgICAgICAgICAgdGhpcy50b3RhbERheXNCZWZvcmVZZWFyKG1vbnRoLnllYXIsIHRydWUpICtcbiAgICAgICAgICAgICAgICB0aGlzLmRheXNCZWZvcmVNb250aChtb250aC5udW1iZXIsIG1vbnRoLnllYXIsIHRydWUpICtcbiAgICAgICAgICAgICAgICBkYXkubnVtYmVyIC1cbiAgICAgICAgICAgICAgICAxO1xuICAgICAgICAgICAgY29uc3QgbW9vbnM6IEFycmF5PFtNb29uLCBQaGFzZV0+ID0gW107XG4gICAgICAgICAgICBmb3IgKGxldCBtb29uIG9mIHRoaXMubW9vbnMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IG9mZnNldCwgY3ljbGUgfSA9IG1vb247XG4gICAgICAgICAgICAgICAgY29uc3QgZ3JhbnVsYXJpdHkgPSAyNDtcblxuICAgICAgICAgICAgICAgIGxldCBkYXRhID0gKGRheXNCZWZvcmUgLSBvZmZzZXQpIC8gY3ljbGU7XG4gICAgICAgICAgICAgICAgbGV0IHBvc2l0aW9uID0gZGF0YSAtIE1hdGguZmxvb3IoZGF0YSk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBwaGFzZSA9IChwb3NpdGlvbiAqIGdyYW51bGFyaXR5KSAlIGdyYW51bGFyaXR5O1xuXG4gICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IE1PT05fUEhBU0VTW2dyYW51bGFyaXR5XTtcblxuICAgICAgICAgICAgICAgIG1vb25zLnB1c2goW1xuICAgICAgICAgICAgICAgICAgICBtb29uLFxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zW3dyYXAoTWF0aC5yb3VuZChwaGFzZSksIG9wdGlvbnMubGVuZ3RoKV1cbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBoYXNlcy5wdXNoKG1vb25zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBwaGFzZXM7XG4gICAgfVxufVxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHsgRXh0cmFCdXR0b25Db21wb25lbnQgfSBmcm9tIFwib2JzaWRpYW5cIjtcbiAgICBpbXBvcnQgdHlwZSBDYWxlbmRhckhlbHBlciBmcm9tIFwic3JjL2hlbHBlclwiO1xuXG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyLCBnZXRDb250ZXh0IH0gZnJvbSBcInN2ZWx0ZVwiO1xuICAgIGltcG9ydCB0eXBlIHsgV3JpdGFibGUgfSBmcm9tIFwic3ZlbHRlL3N0b3JlXCI7XG4gICAgaW1wb3J0IEZsYWdzIGZyb20gXCIuL0ZsYWdzLnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBNb29uIGZyb20gXCIuL01vb24uc3ZlbHRlXCI7XG5cbiAgICBleHBvcnQgbGV0IGRpc3BsYXlEYXlOdW1iZXI6IGJvb2xlYW47XG5cbiAgICBjb25zdCBjYWxlbmRhclN0b3JlID0gZ2V0Q29udGV4dDxXcml0YWJsZTxDYWxlbmRhckhlbHBlcj4+KFwiY2FsZW5kYXJcIik7XG4gICAgbGV0IGNhbGVuZGFyOiBDYWxlbmRhckhlbHBlcjtcbiAgICBjYWxlbmRhclN0b3JlLnN1YnNjcmliZSgoYykgPT4ge1xuICAgICAgICBjYWxlbmRhciA9IGM7XG4gICAgfSk7XG5cbiAgICAkOiBjdXJyZW50RGF0ZSA9IGNhbGVuZGFyLnZpZXdlZERhdGU7XG4gICAgJDogZGF0ZSA9IGNhbGVuZGFyLnZpZXdpbmc7XG4gICAgJDogZGF5ID0gY2FsZW5kYXIuZ2V0RGF5Rm9yRGF0ZShkYXRlKTtcbiAgICAkOiBkYXlOdW1iZXIgPSBjYWxlbmRhci5kYXlOdW1iZXJGb3JEYXRlKGRhdGUpO1xuICAgICQ6IG1vb25zID0gZGF5Lm1vb25zO1xuICAgICQ6IGNhdGVnb3JpZXMgPSBjYWxlbmRhci5jYXRlZ29yaWVzO1xuXG4gICAgbGV0IGRpc3BsYXlNb29uczogYm9vbGVhbjtcbiAgICBjb25zdCBtb29uU3RvcmUgPSBnZXRDb250ZXh0PFdyaXRhYmxlPGJvb2xlYW4+PihcImRpc3BsYXlNb29uc1wiKTtcbiAgICBtb29uU3RvcmUuc3Vic2NyaWJlKCh2KSA9PiAoZGlzcGxheU1vb25zID0gdikpO1xuXG4gICAgY2FsZW5kYXIub24oXCJkYXktdXBkYXRlXCIsICgpID0+IHtcbiAgICAgICAgZGF0ZSA9IGNhbGVuZGFyLnZpZXdpbmc7XG4gICAgICAgIGN1cnJlbnREYXRlID0gY2FsZW5kYXIudmlld2VkRGF0ZTtcbiAgICAgICAgZGF5ID0gY2FsZW5kYXIuZ2V0RGF5Rm9yRGF0ZShkYXRlKTtcbiAgICAgICAgbW9vbnMgPSBkYXkubW9vbnM7XG4gICAgfSk7XG5cbiAgICBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG4gICAgY29uc3QgY2xvc2UgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgbmV3IEV4dHJhQnV0dG9uQ29tcG9uZW50KG5vZGUpLnNldEljb24oXCJjcm9zc1wiKS5zZXRUb29sdGlwKFwiQ2xvc2VcIik7XG4gICAgfTtcbiAgICBjb25zdCByZXZlYWwgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgbmV3IEV4dHJhQnV0dG9uQ29tcG9uZW50KG5vZGUpXG4gICAgICAgICAgICAuc2V0SWNvbihcImZhbnRhc3ktY2FsZW5kYXItcmV2ZWFsXCIpXG4gICAgICAgICAgICAuc2V0VG9vbHRpcChcIlNob3cgb24gQ2FsZW5kYXJcIilcbiAgICAgICAgICAgIC5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjYWxlbmRhci5kaXNwbGF5ZWQueWVhciA9IGNhbGVuZGFyLnZpZXdpbmcueWVhcjtcbiAgICAgICAgICAgICAgICBjYWxlbmRhci5zZXRDdXJyZW50TW9udGgoY2FsZW5kYXIudmlld2luZy5tb250aCk7XG4gICAgICAgICAgICB9KTtcbiAgICB9O1xuICAgIGNvbnN0IGV2ZW50ID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKVxuICAgICAgICAgICAgLnNldEljb24oXCJwbHVzLXdpdGgtY2lyY2xlXCIpXG4gICAgICAgICAgICAuc2V0VG9vbHRpcChcIk5ldyBFdmVudFwiKVxuICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4gZGlzcGF0Y2goXCJldmVudFwiLCBkYXRlKSk7XG4gICAgfTtcbiAgICBjb25zdCBsZWZ0ID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKS5zZXRJY29uKFwibGVmdC1hcnJvd1wiKTtcbiAgICB9O1xuICAgIGNvbnN0IHJpZ2h0ID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKS5zZXRJY29uKFwicmlnaHQtYXJyb3dcIik7XG4gICAgfTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwiZGF5LXZpZXdcIj5cbiAgICA8ZGl2IGNsYXNzPVwibmF2XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJsZWZ0LW5hdlwiPlxuICAgICAgICAgICAgPGRpdiB1c2U6cmV2ZWFsIG9uOmNsaWNrPXsoKSA9PiBkaXNwYXRjaChcInJldmVhbFwiKX0gLz5cbiAgICAgICAgICAgIDxkaXYgdXNlOmV2ZW50IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IHVzZTpjbG9zZSBvbjpjbGljaz17KCkgPT4gZGlzcGF0Y2goXCJjbG9zZVwiKX0gLz5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZGF0ZVwiPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjbGFzcz1cImFycm93IGNhbGVuZGFyLWNsaWNrYWJsZVwiXG4gICAgICAgICAgICB1c2U6bGVmdFxuICAgICAgICAgICAgYXJpYS1sYWJlbD1cIlByZXZpb3VzXCJcbiAgICAgICAgICAgIG9uOmNsaWNrPXsoKSA9PiBjYWxlbmRhci5nb1RvUHJldmlvdXNEYXkoKX1cbiAgICAgICAgLz5cbiAgICAgICAgPGRpdiBjbGFzcz1cInRpdGxlLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGgzIGNsYXNzPVwiZmFudGFzeS10aXRsZSB0aXRsZVwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY3VycmVudFwiPntjdXJyZW50RGF0ZX08L3NwYW4+XG4gICAgICAgICAgICA8L2gzPlxuICAgICAgICAgICAgeyNpZiBkaXNwbGF5RGF5TnVtYmVyfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXktbnVtYmVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxlbT5cbiAgICAgICAgICAgICAgICAgICAgICAgIERheSB7ZGF5TnVtYmVyfVxuICAgICAgICAgICAgICAgICAgICA8L2VtPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgey9pZn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzPVwiYXJyb3cgcmlnaHQgY2FsZW5kYXItY2xpY2thYmxlXCJcbiAgICAgICAgICAgIHVzZTpyaWdodFxuICAgICAgICAgICAgYXJpYS1sYWJlbD1cIk5leHRcIlxuICAgICAgICAgICAgb246Y2xpY2s9eygpID0+IGNhbGVuZGFyLmdvVG9OZXh0RGF5KCl9XG4gICAgICAgIC8+XG4gICAgPC9kaXY+XG4gICAgeyNpZiBkaXNwbGF5TW9vbnMgJiYgbW9vbnMgJiYgbW9vbnMubGVuZ3RofVxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9vbi1jb250YWluZXJcIj5cbiAgICAgICAgICAgIHsjZWFjaCBtb29ucyBhcyBbbW9vbiwgcGhhc2VdfVxuICAgICAgICAgICAgICAgIDxNb29uIHttb29ufSB7cGhhc2V9IC8+XG4gICAgICAgICAgICB7L2VhY2h9XG4gICAgICAgIDwvZGl2PlxuICAgIHsvaWZ9XG4gICAgPEZsYWdzXG4gICAgICAgIGV2ZW50cz17ZGF5LmV2ZW50c31cbiAgICAgICAge2NhdGVnb3JpZXN9XG4gICAgICAgIHtkYXRlfVxuICAgICAgICBkYXlWaWV3PXt0cnVlfVxuICAgICAgICB7Y2FsZW5kYXJ9XG4gICAgICAgIG9uOmV2ZW50LWNsaWNrXG4gICAgICAgIG9uOmV2ZW50LW1vdXNlb3ZlclxuICAgICAgICBvbjpldmVudC1jb250ZXh0XG4gICAgLz5cbjwvZGl2PlxuXG48c3R5bGU+XG4gICAgLmRheS12aWV3IHtcbiAgICAgICAgcGFkZGluZzogNXB4IDE1cHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgICAgICAgZ2FwOiAwLjVyZW07XG4gICAgfVxuXG4gICAgLm5hdixcbiAgICAuZGF0ZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLmxlZnQtbmF2IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICB9XG4gICAgLmxlZnQtbmF2IDpnbG9iYWwoLmNsaWNrYWJsZS1pY29uKSB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG5cbiAgICAuY2FsZW5kYXItY2xpY2thYmxlIHtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG4gICAgaDMge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG4gICAgLmRheS12aWV3IDpnbG9iYWwoLmZsYWctY29udGFpbmVyID4gLmZsYWcpIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XG4gICAgfVxuXG4gICAgLnRpdGxlLWNvbnRhaW5lciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuICAgIC5kYXktbnVtYmVyIHtcbiAgICAgICAgZm9udC1zaXplOiBzbWFsbDtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHsgUGxhdGZvcm0sIHNldEljb24gfSBmcm9tIFwib2JzaWRpYW5cIjtcblxuICAgIGltcG9ydCB0eXBlIHsgQ3VycmVudENhbGVuZGFyRGF0YSwgRXZlbnQsIEV2ZW50Q2F0ZWdvcnkgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuICAgIGltcG9ydCB7IERFRkFVTFRfQ0FURUdPUllfQ09MT1IgfSBmcm9tIFwic3JjL3V0aWxzL2NvbnN0YW50c1wiO1xuICAgIGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gXCJzdmVsdGVcIjtcbiAgICBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG4gICAgZXhwb3J0IGxldCBldmVudDogRXZlbnQ7XG4gICAgZXhwb3J0IGxldCBkYXRlOiBDdXJyZW50Q2FsZW5kYXJEYXRhO1xuXG4gICAgZXhwb3J0IGxldCBkYXlWaWV3OiBib29sZWFuID0gZmFsc2U7XG4gICAgbGV0IG11bHRpID0gZmFsc2UsXG4gICAgICAgIHN0YXJ0ID0gZmFsc2UsXG4gICAgICAgIGVuZCA9IGZhbHNlLFxuICAgICAgICBmaXJzdCA9IGZhbHNlO1xuICAgICQ6IHtcbiAgICAgICAgaWYgKGV2ZW50LmVuZCAhPSB1bmRlZmluZWQgJiYgIWRheVZpZXcpIHtcbiAgICAgICAgICAgIG11bHRpID0gdHJ1ZTtcbiAgICAgICAgICAgIHN0YXJ0ID1cbiAgICAgICAgICAgICAgICBkYXRlLmRheSA9PT0gZXZlbnQuZGF0ZS5kYXkgJiZcbiAgICAgICAgICAgICAgICAoZXZlbnQuZGF0ZS5tb250aCA9PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICAgICAgZGF0ZS5tb250aCA9PSBldmVudC5kYXRlLm1vbnRoKSAmJlxuICAgICAgICAgICAgICAgIChldmVudC5kYXRlLnllYXIgPT0gdW5kZWZpbmVkIHx8IGRhdGUueWVhciA9PT0gZXZlbnQuZGF0ZS55ZWFyKTtcbiAgICAgICAgICAgIGZpcnN0ID0gc3RhcnQgfHwgZGF0ZS5kYXkgPT0gMTtcbiAgICAgICAgICAgIGVuZCA9XG4gICAgICAgICAgICAgICAgZGF0ZS5kYXkgPT09IGV2ZW50LmVuZC5kYXkgJiZcbiAgICAgICAgICAgICAgICAoZXZlbnQuZW5kLm1vbnRoID09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgICAgICBkYXRlLm1vbnRoID09IGV2ZW50LmVuZC5tb250aCkgJiZcbiAgICAgICAgICAgICAgICAoZXZlbnQuZW5kLnllYXIgPT0gdW5kZWZpbmVkIHx8IGRhdGUueWVhciA9PT0gZXZlbnQuZW5kLnllYXIpO1xuICAgICAgICAgICAgaWYgKHN0YXJ0ICYmIGVuZCkge1xuICAgICAgICAgICAgICAgIG11bHRpID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBlbmQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGV4cG9ydCBsZXQgY2F0ZWdvcmllczogRXZlbnRDYXRlZ29yeVtdO1xuXG4gICAgbGV0IGNvbG9yID1cbiAgICAgICAgY2F0ZWdvcmllcy5maW5kKChjKSA9PiBjLmlkID09IGV2ZW50LmNhdGVnb3J5KT8uY29sb3IgPz9cbiAgICAgICAgREVGQVVMVF9DQVRFR09SWV9DT0xPUjtcblxuICAgICQ6IGNvbG9yID1cbiAgICAgICAgY2F0ZWdvcmllcy5maW5kKChjKSA9PiBjLmlkID09IGV2ZW50LmNhdGVnb3J5KT8uY29sb3IgPz9cbiAgICAgICAgREVGQVVMVF9DQVRFR09SWV9DT0xPUjtcblxuICAgIGNvbnN0IG1ldGEgPSBQbGF0Zm9ybS5pc01hY09TID8gXCJNZXRhXCIgOiBcIkNvbnRyb2xcIjtcblxuICAgIGNvbnN0IG5vdGUgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgc2V0SWNvbihub2RlLCBcIm5vdGUtZ2x5cGhcIik7XG4gICAgfTtcbjwvc2NyaXB0PlxuXG48ZGl2XG4gICAgY2xhc3M9XCJmbGFnXCJcbiAgICBjbGFzczptdWx0aVxuICAgIGNsYXNzOnN0YXJ0XG4gICAgY2xhc3M6ZW5kXG4gICAgY2xhc3M6Zmlyc3RcbiAgICBjbGFzczpkYXktdmlldz17ZGF5Vmlld31cbiAgICBhcmlhLWxhYmVsPXshZGF5VmlldyA/IGV2ZW50Lm5hbWUgOiBudWxsfVxuICAgIHN0eWxlPVwiLS1oZXgtYWxwaGE6IHtjb2xvcn00MDsgLS1jb2xvcjp7Y29sb3J9XCJcbiAgICBvbjpjbGljaz17KGV2dCkgPT4ge1xuICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIGRpc3BhdGNoKFwiZXZlbnQtY2xpY2tcIiwge1xuICAgICAgICAgICAgZXZlbnQsXG4gICAgICAgICAgICBtb2RpZmllcjogZXZ0LmdldE1vZGlmaWVyU3RhdGUobWV0YSlcbiAgICAgICAgfSk7XG4gICAgfX1cbiAgICBvbjptb3VzZW92ZXI9eyhldnQpID0+XG4gICAgICAgIGRpc3BhdGNoKFwiZXZlbnQtbW91c2VvdmVyXCIsIHsgdGFyZ2V0OiBldnQudGFyZ2V0LCBldmVudCB9KX1cbiAgICBvbjpmb2N1cz17KCkgPT4ge319XG4gICAgb246Y29udGV4dG1lbnU9eyhldnQpID0+IHtcbiAgICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBkaXNwYXRjaChcImV2ZW50LWNvbnRleHRcIiwgeyBldnQ6IGV2dCwgZXZlbnQgfSk7XG4gICAgfX1cbj5cbiAgICA8ZGl2IGNsYXNzPVwiZmxhZy1jb250ZW50XCI+XG4gICAgICAgIDxzcGFuIGNsYXNzOmNsYW1wPXshZGF5Vmlld30gY2xhc3M6ZGF5LXZpZXc9e2RheVZpZXd9PlxuICAgICAgICAgICAge2V2ZW50Lm5hbWV9PC9zcGFuXG4gICAgICAgID5cbiAgICAgICAgeyNpZiBldmVudC5ub3RlfVxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5vdGVcIiB1c2U6bm90ZSAvPlxuICAgICAgICB7L2lmfVxuICAgIDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAuZmxhZyB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDAuMTI1cmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1oZXgtYWxwaGEpO1xuICAgICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkIHZhcigtLWNvbG9yKTtcbiAgICB9XG4gICAgLmZsYWctY29udGVudCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGdhcDogMC4yNXJlbTtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICB9XG4gICAgLmRheS12aWV3IC5mbGFnLWNvbnRlbnQge1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxuXG4gICAgLmNsYW1wIHtcbiAgICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAgICAgd29yZC1icmVhazoga2VlcC1hbGw7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIH1cblxuICAgIC5ub3RlIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIH1cbiAgICAubXVsdGkge1xuICAgICAgICBmbGV4LXNocmluazogMDtcbiAgICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgICAgIHdpZHRoOiB1bnNldDtcbiAgICB9XG4gICAgLm11bHRpIC5jbGFtcCB7XG4gICAgICAgIC13ZWJraXQtbGluZS1jbGFtcDogMTtcbiAgICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgfVxuICAgIC5tdWx0aS5zdGFydCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIH1cbiAgICAubXVsdGkuZW5kIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIH1cbiAgICAubXVsdGkuZmlyc3Qge1xuICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB9XG4gICAgLm11bHRpOm5vdCguZmlyc3QpIHtcbiAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgICAubXVsdGk6bm90KC5zdGFydCkge1xuICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtNnB4O1xuICAgIH1cbiAgICAubXVsdGk6bm90KC5lbmQpIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAtNnB4O1xuICAgIH1cbiAgICAuc3RhcnQgPiAuZmxhZy1jb250ZW50IHtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgICBnYXA6IDFlbTtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IEZsYWcgZnJvbSBcIi4vRmxhZy5zdmVsdGVcIjtcbiAgICBpbXBvcnQgdHlwZSB7IEN1cnJlbnRDYWxlbmRhckRhdGEsIEV2ZW50LCBFdmVudENhdGVnb3J5IH0gZnJvbSBcInNyYy9AdHlwZXNcIjtcbiAgICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIsIG9uTW91bnQsIHRpY2sgfSBmcm9tIFwic3ZlbHRlXCI7XG4gICAgaW1wb3J0IENhbGVuZGFySGVscGVyIGZyb20gXCJzcmMvaGVscGVyXCI7XG5cbiAgICBleHBvcnQgbGV0IGV2ZW50czogRXZlbnRbXSA9IFtdO1xuICAgIGV4cG9ydCBsZXQgY2F0ZWdvcmllczogRXZlbnRDYXRlZ29yeVtdO1xuICAgIGV4cG9ydCBsZXQgZGF5VmlldzogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGV4cG9ydCBsZXQgZGF0ZTogQ3VycmVudENhbGVuZGFyRGF0YTtcbiAgICBleHBvcnQgbGV0IGNhbGVuZGFyOiBDYWxlbmRhckhlbHBlcjtcblxuICAgICQ6IGV2ZW50cyA9IFsuLi5ldmVudHNdO1xuXG4gICAgbGV0IG92ZXJmbG93OiBudW1iZXIgPSAwO1xuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG4gICAgbGV0IGZsYWdDb250YWluZXI6IEhUTUxFbGVtZW50O1xuICAgIGxldCBwcmV2aW91c0hlaWdodCA9IDA7XG4gICAgY29uc3QgYWRkRXZlbnRzID0gKGZsYWdzOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgICAgICBpZiAoZXZlbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgaGVpZ2h0ID1cbiAgICAgICAgICAgICAgICBmbGFncz8ucGFyZW50RWxlbWVudD8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk/LmhlaWdodDtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAhZGF5VmlldyAmJlxuICAgICAgICAgICAgICAgIChoZWlnaHQgPT0gbnVsbCB8fFxuICAgICAgICAgICAgICAgICAgICBNYXRoLmZsb29yKGhlaWdodCkgPT0gTWF0aC5mbG9vcihwcmV2aW91c0hlaWdodCkpXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgcHJldmlvdXNIZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgICAgICBmbGFnQ29udGFpbmVyID0gZmxhZ3M7XG4gICAgICAgICAgICBmbGFncy5lbXB0eSgpO1xuICAgICAgICAgICAgb3ZlcmZsb3cgPSAwO1xuICAgICAgICAgICAgbGV0IHJlbWFpbmluZyA9IGhlaWdodDtcblxuICAgICAgICAgICAgZm9yIChjb25zdCBldmVudCBvZiBldmVudHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmbGFnID0gbmV3IEZsYWcoe1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IGZsYWdzLFxuICAgICAgICAgICAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yaWVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF5VmlldyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGZsYWcuJG9uKFwiZXZlbnQtY2xpY2tcIiwgKGUpID0+XG4gICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKFwiZXZlbnQtY2xpY2tcIiwgZS5kZXRhaWwpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBmbGFnLiRvbihcImV2ZW50LW1vdXNlb3ZlclwiLCAoZSkgPT5cbiAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goXCJldmVudC1tb3VzZW92ZXJcIiwgZS5kZXRhaWwpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBmbGFnLiRvbihcImV2ZW50LWNvbnRleHRcIiwgKGUpID0+XG4gICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKFwiZXZlbnQtY29udGV4dFwiLCBlLmRldGFpbClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGlmICghZGF5Vmlldykge1xuICAgICAgICAgICAgICAgICAgICByZW1haW5pbmcgPSBoZWlnaHQgLSBmbGFncy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZW1haW5pbmcgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbGFncy5sYXN0RWxlbWVudENoaWxkLmRldGFjaCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3cgPSBldmVudHMubGVuZ3RoIC0gZXZlbnRzLmluZGV4T2YoZXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVtYWluaW5nID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93ID0gZXZlbnRzLmxlbmd0aCAtIGV2ZW50cy5pbmRleE9mKGV2ZW50KSAtIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjYWxlbmRhci5vbihcInZpZXctcmVzaXplZFwiLCAoKSA9PiB7XG4gICAgICAgIGlmIChkYXlWaWV3KSByZXR1cm47XG4gICAgICAgIGFkZEV2ZW50cyhmbGFnQ29udGFpbmVyKTtcbiAgICB9KTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwiZmxhZ3MtY29udGFpbmVyXCI+XG4gICAgeyNrZXkgZXZlbnRzfVxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxhZy1jb250YWluZXJcIiB1c2U6YWRkRXZlbnRzPlxuICAgICAgICAgICAgPCEtLSB7I2VhY2ggZXZlbnRzLnNsaWNlKDAsIE1BWF9FVkVOVFMpIGFzIGV2ZW50fVxuICAgICAgICAgICAgPEZsYWdcbiAgICAgICAgICAgICAgICB7ZXZlbnR9XG4gICAgICAgICAgICAgICAge2NhdGVnb3JpZXN9XG4gICAgICAgICAgICAgICAge2RheVZpZXd9XG4gICAgICAgICAgICAgICAge2RhdGV9XG4gICAgICAgICAgICAgICAgb246ZXZlbnQtY2xpY2tcbiAgICAgICAgICAgICAgICBvbjpldmVudC1tb3VzZW92ZXJcbiAgICAgICAgICAgICAgICBvbjpldmVudC1jb250ZXh0XG4gICAgICAgICAgICAvPlxuICAgICAgICB7L2VhY2h9IC0tPlxuICAgICAgICA8L2Rpdj5cbiAgICB7L2tleX1cbiAgICA8ZGl2IGNsYXNzPVwib3ZlcmZsb3dcIj5cbiAgICAgICAgeyNpZiBvdmVyZmxvdyA+IDB9XG4gICAgICAgICAgICA8c3Bhbj4re292ZXJmbG93fTwvc3Bhbj5cbiAgICAgICAgey9pZn1cbiAgICA8L2Rpdj5cbjwvZGl2PlxuXG48c3R5bGU+XG4gICAgLmZsYWdzLWNvbnRhaW5lciB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gICAgLmZsYWctY29udGFpbmVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgICAgICBnYXA6IDAuMjVyZW07XG4gICAgfVxuXG4gICAgLm92ZXJmbG93IHtcbiAgICAgICAgY29sb3I6IHZhcigtLXRleHQtbXV0ZWQpO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgZXhwb3J0IGxldCBpc0ZpbGxlZDogYm9vbGVhbiA9IHRydWU7XG4gICAgZXhwb3J0IGxldCBpc0FjdGl2ZTogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGV4cG9ydCBsZXQgY29sb3I6IHN0cmluZztcbjwvc2NyaXB0PlxuXG48c3ZnXG4gICAgY2xhc3M9XCJkb3RcIlxuICAgIGNsYXNzOmZpbGxlZD17aXNGaWxsZWR9XG4gICAgY2xhc3M6YWN0aXZlPXtpc0FjdGl2ZX1cbiAgICB2aWV3Qm94PVwiMCAwIDYgNlwiXG4gICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4+XG4gICAgPGNpcmNsZVxuICAgICAgICBzdHJva2U9e2NvbG9yID8/IFwiY3VycmVudENvbG9yXCJ9XG4gICAgICAgIGZpbGw9e2NvbG9yID8/IFwiY3VycmVudENvbG9yXCJ9XG4gICAgICAgIGN4PVwiM1wiXG4gICAgICAgIGN5PVwiM1wiXG4gICAgICAgIHI9XCIyXCJcbiAgICAvPlxuPC9zdmc+XG5cbjxzdHlsZT5cbiAgICAuZG90IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtaW4taGVpZ2h0OiA2cHg7XG4gICAgICAgIG1pbi13aWR0aDogNnB4O1xuICAgICAgICBoZWlnaHQ6IDZweDtcbiAgICAgICAgd2lkdGg6IDZweDtcbiAgICAgICAgbWFyZ2luOiAwIDJweDtcbiAgICB9XG4gICAgLmFjdGl2ZSB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS10ZXh0LW9uLWFjY2VudCk7XG4gICAgfVxuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuICAgIGltcG9ydCBEb3QgZnJvbSBcIi4vRG90LnN2ZWx0ZVwiO1xuICAgIGltcG9ydCB0eXBlIHsgRXZlbnQsIEV2ZW50Q2F0ZWdvcnkgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuICAgIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tIFwic3ZlbHRlXCI7XG4gICAgaW1wb3J0IENhbGVuZGFySGVscGVyIGZyb20gXCJzcmMvaGVscGVyXCI7XG5cbiAgICBleHBvcnQgbGV0IGV2ZW50czogRXZlbnRbXSA9IFtdO1xuICAgIGV4cG9ydCBsZXQgY2F0ZWdvcmllczogRXZlbnRDYXRlZ29yeVtdO1xuICAgIGV4cG9ydCBsZXQgY2FsZW5kYXI6IENhbGVuZGFySGVscGVyO1xuICAgIFxuICAgIGxldCBvdmVyZmxvdzogbnVtYmVyID0gMDtcblxuICAgIGxldCBkb3RDb250YWluZXI6IEhUTUxEaXZFbGVtZW50O1xuICAgIGxldCBwcmV2aW91c1dpZHRoID0gMDtcbiAgICBjb25zdCBhZGRFdmVudHMgPSAoZG90czogSFRNTERpdkVsZW1lbnQpID0+IHtcbiAgICAgICAgZG90Q29udGFpbmVyID0gZG90cztcbiAgICAgICAgaWYgKGV2ZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gZG90cy5wYXJlbnRFbGVtZW50Py5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKT8ud2lkdGg7XG4gICAgICAgICAgICBpZiAoIXdpZHRoIHx8IE1hdGguZmxvb3Iod2lkdGgpID09IE1hdGguZmxvb3IocHJldmlvdXNXaWR0aCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgcHJldmlvdXNXaWR0aCA9IHdpZHRoO1xuICAgICAgICAgICAgbGV0IHJlbWFpbmluZyA9IHdpZHRoO1xuICAgICAgICAgICAgZG90cy5lbXB0eSgpO1xuICAgICAgICAgICAgb3ZlcmZsb3cgPSAwO1xuXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIGV2ZW50cykge1xuICAgICAgICAgICAgICAgIG5ldyBEb3Qoe1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IGRvdHMsXG4gICAgICAgICAgICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogY29sb3IoZXZlbnQpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZW1haW5pbmcgPSB3aWR0aCAtIGRvdHMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7XG5cbiAgICAgICAgICAgICAgICBpZiAocmVtYWluaW5nIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICBkb3RzLmxhc3RFbGVtZW50Q2hpbGQuZGV0YWNoKCk7XG4gICAgICAgICAgICAgICAgICAgIG92ZXJmbG93ID0gZXZlbnRzLmxlbmd0aCAtIGV2ZW50cy5pbmRleE9mKGV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZW1haW5pbmcgPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdyA9IGV2ZW50cy5sZW5ndGggLSBldmVudHMuaW5kZXhPZihldmVudCkgLSAxO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY2FsZW5kYXIub24oXCJ2aWV3LXJlc2l6ZWRcIiwgKCkgPT4ge1xuICAgICAgICBpZiAoIWRvdENvbnRhaW5lcikgcmV0dXJuO1xuICAgICAgICBhZGRFdmVudHMoZG90Q29udGFpbmVyKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IGNvbG9yID0gKGV2ZW50OiBFdmVudCkgPT4ge1xuICAgICAgICByZXR1cm4gY2F0ZWdvcmllcy5maW5kKChjKSA9PiBjLmlkID09IGV2ZW50LmNhdGVnb3J5KT8uY29sb3I7XG4gICAgfTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwiZG90cy1jb250YWluZXJcIj5cbiAgICB7I2tleSBldmVudHN9XG4gICAgICAgIDxkaXYgY2xhc3M9XCJkb3QtY29udGFpbmVyIGNlbnRlcmVkXCIgdXNlOmFkZEV2ZW50cyAvPlxuICAgIHsva2V5fVxuICAgIDxkaXYgY2xhc3M9XCJvdmVyZmxvd1wiPlxuICAgICAgICB7I2lmIG92ZXJmbG93ID4gMH1cbiAgICAgICAgICAgIDxzcGFuPit7b3ZlcmZsb3d9PC9zcGFuPlxuICAgICAgICB7L2lmfVxuICAgIDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAuZG90cy1jb250YWluZXIge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gICAgLmRvdC1jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgICBsaW5lLWhlaWdodDogNnB4O1xuICAgICAgICBtaW4taGVpZ2h0OiA2cHg7XG4gICAgfVxuICAgIC5jZW50ZXJlZCB7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAub3ZlcmZsb3cge1xuICAgICAgICBjb2xvcjogdmFyKC0tdGV4dC1tdXRlZCk7XG4gICAgICAgIGZvbnQtc2l6ZTogeHgtc21hbGw7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHR5cGUgeyBEYXlIZWxwZXIgfSBmcm9tIFwic3JjL2hlbHBlclwiO1xuICAgIGltcG9ydCB0eXBlIHsgRXZlbnQgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuICAgIGltcG9ydCBEb3RzIGZyb20gXCIuL0RvdHMuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IE1vb24gZnJvbSBcIi4vTW9vbi5zdmVsdGVcIjtcblxuICAgIGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciwgZ2V0Q29udGV4dCB9IGZyb20gXCJzdmVsdGVcIjtcbiAgICBpbXBvcnQgRmxhZ3MgZnJvbSBcIi4vRmxhZ3Muc3ZlbHRlXCI7XG4gICAgaW1wb3J0IHR5cGUgeyBXcml0YWJsZSB9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cbiAgICBleHBvcnQgbGV0IGRheTogRGF5SGVscGVyO1xuXG4gICAgZXhwb3J0IGxldCBhZGphY2VudDogYm9vbGVhbjtcbiAgICBleHBvcnQgbGV0IGZ1bGxWaWV3OiBib29sZWFuO1xuICAgIGxldCBldmVudHM6IEV2ZW50W10gPSBbXTtcblxuICAgICQ6IHtcbiAgICAgICAgaWYgKCFhZGphY2VudCkge1xuICAgICAgICAgICAgZXZlbnRzID0gZGF5LmV2ZW50cztcbiAgICAgICAgfVxuICAgIH1cbiAgICAkOiBtb29ucyA9IGRheS5tb29ucztcbiAgICAkOiBjYXRlZ29yaWVzID0gZGF5LmNhbGVuZGFyLmNhdGVnb3JpZXM7XG4gICAgJDogZGF0ZSA9IGRheS5kYXRlO1xuICAgICQ6IHRvZGF5ID0gZGF5LmlzQ3VycmVudERheTtcbiAgICAkOiBkaXNwbGF5aW5nID0gZGF5LmlzRGlzcGxheWluZztcblxuICAgIGxldCBkYXlWaWV3OiBib29sZWFuO1xuICAgIGNvbnN0IGRheVZpZXdTdG9yZSA9IGdldENvbnRleHQ8V3JpdGFibGU8Ym9vbGVhbj4+KFwiZGF5Vmlld1wiKTtcbiAgICBkYXlWaWV3U3RvcmUuc3Vic2NyaWJlKCh2KSA9PiAoZGF5VmlldyA9IHYpKTtcbiAgICAkOiBkYXlWaWV3ID0gZGF5VmlldztcblxuICAgIGxldCBkaXNwbGF5TW9vbnM6IGJvb2xlYW47XG4gICAgY29uc3QgbW9vblN0b3JlID0gZ2V0Q29udGV4dDxXcml0YWJsZTxib29sZWFuPj4oXCJkaXNwbGF5TW9vbnNcIik7XG4gICAgbW9vblN0b3JlLnN1YnNjcmliZSgodikgPT4gKGRpc3BsYXlNb29ucyA9IHYpKTtcblxuICAgIGRheS5jYWxlbmRhci5vbihcIm1vbnRoLXVwZGF0ZVwiLCAoKSA9PiB7XG4gICAgICAgIHRvZGF5ID0gZGF5LmlzQ3VycmVudERheTtcbiAgICAgICAgZGlzcGxheWluZyA9IGRheS5pc0Rpc3BsYXlpbmc7XG4gICAgICAgIGV2ZW50cyA9IGRheS5ldmVudHM7XG4gICAgfSk7XG4gICAgZGF5LmNhbGVuZGFyLm9uKFwiZGF5LXVwZGF0ZVwiLCAoKSA9PiB7XG4gICAgICAgIHRvZGF5ID0gZGF5LmlzQ3VycmVudERheTtcbiAgICAgICAgZGlzcGxheWluZyA9IGRheS5pc0Rpc3BsYXlpbmc7XG4gICAgfSk7XG48L3NjcmlwdD5cblxuPGRpdlxuICAgIGNsYXNzOmRheT17dHJ1ZX1cbiAgICBjbGFzczpmYW50YXN5LWRheT17dHJ1ZX1cbiAgICBjbGFzczphY3RpdmU9e3RvZGF5ICYmICFhZGphY2VudH1cbiAgICBjbGFzczp2aWV3aW5nPXtkYXlWaWV3ICYmIGRpc3BsYXlpbmcgJiYgIWFkamFjZW50fVxuICAgIGNsYXNzPXthZGphY2VudCA/IFwiYWRqYWNlbnQtbW9udGggZmFudGFzeS1hZGphY2VudC1tb250aFwiIDogXCJcIn1cbiAgICBhcmlhLWxhYmVsPXshZnVsbFZpZXcgJiYgZXZlbnRzLmxlbmd0aFxuICAgICAgICA/IGAke2V2ZW50cy5sZW5ndGh9IGV2ZW50JHtldmVudHMubGVuZ3RoID09IDEgPyBcIlwiIDogXCJzXCJ9YFxuICAgICAgICA6IHVuZGVmaW5lZH1cbiAgICBvbjpjbGljaz17KCkgPT4gZGlzcGF0Y2goXCJkYXktY2xpY2tcIiwgZGF5KX1cbiAgICBvbjpkYmxjbGljaz17KCkgPT4gZGlzcGF0Y2goXCJkYXktZG91YmxlY2xpY2tcIiwgZGF5KX1cbiAgICBvbjpjb250ZXh0bWVudT17KGV2dCkgPT4gZGlzcGF0Y2goXCJkYXktY29udGV4dC1tZW51XCIsIHsgZGF5LCBldnQgfSl9XG4+XG4gICAgPHNwYW4+XG4gICAgICAgIHtkYXkubnVtYmVyfVxuICAgIDwvc3Bhbj5cbiAgICB7I2lmIGZ1bGxWaWV3fVxuICAgICAgICB7I2lmIGRpc3BsYXlNb29ucyAmJiBtb29ucyAmJiBtb29ucy5sZW5ndGh9XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9vbi1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICB7I2VhY2ggbW9vbnMgYXMgW21vb24sIHBoYXNlXX1cbiAgICAgICAgICAgICAgICAgICAgPE1vb24ge21vb259IHtwaGFzZX0gLz5cbiAgICAgICAgICAgICAgICB7L2VhY2h9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgey9pZn1cbiAgICAgICAgPEZsYWdzXG4gICAgICAgICAgICB7ZXZlbnRzfVxuICAgICAgICAgICAge2NhdGVnb3JpZXN9XG4gICAgICAgICAgICB7ZGF0ZX1cbiAgICAgICAgICAgIGNhbGVuZGFyPXtkYXkuY2FsZW5kYXJ9XG4gICAgICAgICAgICBvbjpldmVudC1jbGlja1xuICAgICAgICAgICAgb246ZXZlbnQtbW91c2VvdmVyXG4gICAgICAgICAgICBvbjpldmVudC1jb250ZXh0XG4gICAgICAgIC8+XG4gICAgezplbHNlfVxuICAgICAgICA8RG90cyB7ZXZlbnRzfSB7Y2F0ZWdvcmllc30gY2FsZW5kYXI9e2RheS5jYWxlbmRhcn0gLz5cbiAgICB7L2lmfVxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAuZGF5IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvci10ZXh0LWRheSk7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAwLjhlbTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBwYWRkaW5nOiAycHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgfVxuICAgIC5hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kLXNlY29uZGFyeSk7XG4gICAgfVxuXG4gICAgLnZpZXdpbmcge1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1iYWNrZ3JvdW5kLW1vZGlmaWVyLWJvcmRlcik7XG4gICAgfVxuXG4gICAgLmFkamFjZW50LW1vbnRoIHtcbiAgICAgICAgb3BhY2l0eTogMC4yNTtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHR5cGUgeyBNb250aEhlbHBlciB9IGZyb20gXCJzcmMvaGVscGVyXCI7XG4gICAgaW1wb3J0IERheSBmcm9tIFwiLi9EYXkuc3ZlbHRlXCI7XG5cbiAgICBleHBvcnQgbGV0IHllYXJWaWV3OiBib29sZWFuID0gZmFsc2U7XG4gICAgZXhwb3J0IGxldCBtb250aDogTW9udGhIZWxwZXI7XG5cbiAgICBleHBvcnQgbGV0IGNvbHVtbnM6IG51bWJlcjtcbiAgICBleHBvcnQgbGV0IGZ1bGxWaWV3OiBib29sZWFuID0gZmFsc2U7XG4gICAgZXhwb3J0IGxldCB3ZWVrczogbnVtYmVyO1xuXG4gICAgZXhwb3J0IGxldCBzaG93UGFkOiBib29sZWFuID0gdHJ1ZTtcblxuICAgICQ6IHBhZGRlZCA9IG1vbnRoLmNhbGVuZGFyLmdldFBhZGRlZERheXNGb3JNb250aChtb250aCk7XG4gICAgJDogcHJldmlvdXMgPSBwYWRkZWQucHJldmlvdXM7XG4gICAgJDogY3VycmVudCA9IG1vbnRoLmRheXM7XG4gICAgJDogbmV4dCA9IHBhZGRlZC5uZXh0O1xuPC9zY3JpcHQ+XG5cbjxkaXZcbiAgICBjbGFzcz1cIm1vbnRoXCJcbiAgICBjbGFzczpmdWxsLXZpZXc9e2Z1bGxWaWV3fVxuICAgIGRhdGEtaWQ9e21vbnRoLmlkfVxuICAgIGlkPXtgTU9OVEgtJHttb250aC5pZH0tJHttb250aC55ZWFyfWB9XG4+XG4gICAgeyNpZiB5ZWFyVmlld31cbiAgICAgICAgPGgzIGNsYXNzPVwibW9udGgtbmFtZVwiPnttb250aC5uYW1lfTwvaDM+XG4gICAgey9pZn1cbiAgICB7I2tleSBjdXJyZW50fVxuICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjbGFzcz1cImZhbnRhc3ktbW9udGhcIlxuICAgICAgICAgICAgY2xhc3M6ZnVsbC12aWV3PXtmdWxsVmlld31cbiAgICAgICAgICAgIGNsYXNzOnllYXItdmlldz17eWVhclZpZXd9XG4gICAgICAgICAgICBzdHlsZT1cIi0tY2FsZW5kYXItY29sdW1uczoge2NvbHVtbnN9Oy0tY2FsZW5kYXItcm93czoge2Z1bGxWaWV3XG4gICAgICAgICAgICAgICAgPyBgJHsoMSAvIHdlZWtzKSAqIDEwMH0lYFxuICAgICAgICAgICAgICAgIDogJzFmcid9OyBcIlxuICAgICAgICA+XG4gICAgICAgICAgICB7I2VhY2ggcHJldmlvdXMgYXMgZGF5fVxuICAgICAgICAgICAgICAgIHsjaWYgc2hvd1BhZCAmJiBkYXkgIT0gbnVsbH1cbiAgICAgICAgICAgICAgICAgICAgPERheSB7ZGF5fSBhZGphY2VudD17dHJ1ZX0ge2Z1bGxWaWV3fSAvPlxuICAgICAgICAgICAgICAgIHs6ZWxzZX1cbiAgICAgICAgICAgICAgICAgICAgPGRpdiAvPlxuICAgICAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgICAgICB7L2VhY2h9XG4gICAgICAgICAgICB7I2VhY2ggY3VycmVudCBhcyBkYXl9XG4gICAgICAgICAgICAgICAgPERheVxuICAgICAgICAgICAgICAgICAgICB7ZGF5fVxuICAgICAgICAgICAgICAgICAgICBhZGphY2VudD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgIHtmdWxsVmlld31cbiAgICAgICAgICAgICAgICAgICAgb246ZGF5LWNsaWNrXG4gICAgICAgICAgICAgICAgICAgIG9uOmRheS1kb3VibGVjbGlja1xuICAgICAgICAgICAgICAgICAgICBvbjpkYXktY29udGV4dC1tZW51XG4gICAgICAgICAgICAgICAgICAgIG9uOmV2ZW50LWNsaWNrXG4gICAgICAgICAgICAgICAgICAgIG9uOmV2ZW50LW1vdXNlb3ZlclxuICAgICAgICAgICAgICAgICAgICBvbjpldmVudC1jb250ZXh0XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgICAgIHsjZWFjaCBuZXh0IGFzIGRheX1cbiAgICAgICAgICAgICAgICB7I2lmIHNob3dQYWR9XG4gICAgICAgICAgICAgICAgICAgIDxEYXkge2RheX0gYWRqYWNlbnQ9e3RydWV9IHtmdWxsVmlld30gLz5cbiAgICAgICAgICAgICAgICB7OmVsc2V9XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgLz5cbiAgICAgICAgICAgICAgICB7L2lmfVxuICAgICAgICAgICAgey9lYWNofVxuICAgICAgICA8L2Rpdj5cbiAgICB7L2tleX1cbjwvZGl2PlxuXG48c3R5bGU+XG4gICAgLmZhbnRhc3ktbW9udGgge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChcbiAgICAgICAgICAgIHZhcigtLWNhbGVuZGFyLWNvbHVtbnMpLFxuICAgICAgICAgICAgdmFyKC0tY29sdW1uLXdpZHRocylcbiAgICAgICAgKTtcblxuICAgICAgICBncmlkLWF1dG8tcm93czogdmFyKC0tY2FsZW5kYXItcm93cyk7XG4gICAgfVxuXG4gICAgLmZ1bGwtdmlldyB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuICAgIH1cblxuICAgIC5tb250aCB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgICAgIHBhZGRpbmc6IDAuMjVyZW07XG4gICAgfVxuXG4gICAgLm1vbnRoLW5hbWUge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIC5tb250aCA6Z2xvYmFsKC5mYW50YXN5LWRheS5kYXkpIHtcbiAgICAgICAgcGFkZGluZzogMHB4O1xuICAgIH1cbjwvc3R5bGU+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBpbXBvcnQgeyBFeHRyYUJ1dHRvbkNvbXBvbmVudCB9IGZyb20gXCJvYnNpZGlhblwiO1xuICAgIGltcG9ydCBDYWxlbmRhckhlbHBlciBmcm9tIFwic3JjL2hlbHBlclwiO1xuXG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSBcInN2ZWx0ZVwiO1xuXG4gICAgY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblxuICAgIGV4cG9ydCBsZXQgbW9udGg6IHN0cmluZztcbiAgICBleHBvcnQgbGV0IHllYXI6IHN0cmluZztcbiAgICBleHBvcnQgbGV0IGN1cnJlbnQ6IHN0cmluZztcblxuICAgIGNvbnN0IGxlZnQgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgbmV3IEV4dHJhQnV0dG9uQ29tcG9uZW50KG5vZGUpLnNldEljb24oXCJsZWZ0LWFycm93XCIpO1xuICAgIH07XG4gICAgY29uc3QgcmlnaHQgPSAobm9kZTogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgbmV3IEV4dHJhQnV0dG9uQ29tcG9uZW50KG5vZGUpLnNldEljb24oXCJyaWdodC1hcnJvd1wiKTtcbiAgICB9O1xuICAgIGNvbnN0IHNldHRpbmdzID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKS5zZXRJY29uKFwiZ2VhclwiKTtcbiAgICB9O1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJmYW50YXN5LW5hdiBuYXZcIj5cbiAgICA8ZGl2IGNsYXNzPVwidGl0bGUtY29udGFpbmVyXCI+XG4gICAgICAgIDxoMyBjbGFzcz1cImZhbnRhc3ktdGl0bGUgdGl0bGVcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZmFudGFzeS1tb250aCBtb250aFwiPnttb250aH08L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZhbnRhc3kteWVhciB5ZWFyXCI+e3llYXJ9PC9zcGFuPlxuICAgICAgICA8L2gzPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJyaWdodC1uYXYgZmFudGFzeS1yaWdodC1uYXZcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGNsYXNzPVwiYXJyb3cgY2FsZW5kYXItY2xpY2thYmxlXCJcbiAgICAgICAgICAgICAgICB1c2U6bGVmdFxuICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJQcmV2aW91cyBNb250aFwiXG4gICAgICAgICAgICAgICAgb246Y2xpY2s9eygpID0+IGRpc3BhdGNoKFwicHJldmlvdXNcIil9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGNsYXNzPVwicmVzZXQtYnV0dG9uIGNhbGVuZGFyLWNsaWNrYWJsZVwiXG4gICAgICAgICAgICAgICAgb246Y2xpY2s9eygpID0+IGRpc3BhdGNoKFwicmVzZXRcIil9XG4gICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIlRvZGF5IGlzIHtjdXJyZW50fVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPHNwYW4+VG9kYXk8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBjbGFzcz1cImFycm93IHJpZ2h0IGNhbGVuZGFyLWNsaWNrYWJsZVwiXG4gICAgICAgICAgICAgICAgdXNlOnJpZ2h0XG4gICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIk5leHQgTW9udGhcIlxuICAgICAgICAgICAgICAgIG9uOmNsaWNrPXsoZXZ0KSA9PiBkaXNwYXRjaChcIm5leHRcIil9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGNsYXNzPVwiY2FsZW5kYXItY2xpY2thYmxlXCJcbiAgICAgICAgICAgICAgICB1c2U6c2V0dGluZ3NcbiAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiQ2FsZW5kYXIgU2V0dGluZ3NcIlxuICAgICAgICAgICAgICAgIG9uOmNsaWNrPXsoZXZ0KSA9PiBkaXNwYXRjaChcInNldHRpbmdzXCIsIGV2dCl9XG4gICAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuXG48c3R5bGU+XG4gICAgLmZhbnRhc3ktbmF2Lm5hdi5uYXYge1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDBweDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgfVxuICAgIC5jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAuZmFudGFzeS10aXRsZSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gICAgfVxuICAgIC5mYW50YXN5LXJpZ2h0LW5hdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICB9XG4gICAgLmNhbGVuZGFyLWNsaWNrYWJsZSB7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuICAgIC50aXRsZS1jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIH1cbjwvc3R5bGU+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBpbXBvcnQgeyBFeHRyYUJ1dHRvbkNvbXBvbmVudCB9IGZyb20gXCJvYnNpZGlhblwiO1xuXG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSBcInN2ZWx0ZVwiO1xuXG4gICAgY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblxuICAgIGV4cG9ydCBsZXQgeWVhcjogc3RyaW5nO1xuICAgIGV4cG9ydCBsZXQgYXJyb3dzID0gZmFsc2U7XG4gICAgZXhwb3J0IGxldCBjdXJyZW50OiBzdHJpbmc7XG5cbiAgICBjb25zdCBsZWZ0ID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKS5zZXRJY29uKFwibGVmdC1hcnJvd1wiKTtcbiAgICB9O1xuICAgIGNvbnN0IHJpZ2h0ID0gKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICAgIG5ldyBFeHRyYUJ1dHRvbkNvbXBvbmVudChub2RlKS5zZXRJY29uKFwicmlnaHQtYXJyb3dcIik7XG4gICAgfTtcbiAgICBjb25zdCBzZXR0aW5ncyA9IChub2RlOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgICAgICBuZXcgRXh0cmFCdXR0b25Db21wb25lbnQobm9kZSkuc2V0SWNvbihcImdlYXJcIik7XG4gICAgfTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwiZmFudGFzeS1uYXYgbmF2XCI+XG4gICAgPGRpdiBjbGFzcz1cImZhbnRhc3kteWVhci1uYXZcIj5cbiAgICAgICAgPGgyIGNsYXNzPVwiZmFudGFzeS10aXRsZVwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmYW50YXN5LXllYXJcIj57eWVhcn08L3NwYW4+XG4gICAgICAgIDwvaDI+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInJpZ2h0LW5hdiBmYW50YXN5LXJpZ2h0LW5hdlwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gICAgICAgICAgICB7I2lmIGFycm93c31cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiYXJyb3cgY2FsZW5kYXItY2xpY2thYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgdXNlOmxlZnRcbiAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIlByZXZpb3VzIFllYXJcIlxuICAgICAgICAgICAgICAgICAgICBvbjpjbGljaz17KCkgPT4gZGlzcGF0Y2goXCJwcmV2aW91c1wiKX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgey9pZn1cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBjbGFzcz1cInJlc2V0LWJ1dHRvbiBjYWxlbmRhci1jbGlja2FibGVcIlxuICAgICAgICAgICAgICAgIG9uOmNsaWNrPXsoKSA9PiBkaXNwYXRjaChcInJlc2V0XCIpfVxuICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJUb2RheSBpcyB7Y3VycmVudH1cIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxzcGFuPlRvZGF5PC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIHsjaWYgYXJyb3dzfVxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJhcnJvdyByaWdodCBjYWxlbmRhci1jbGlja2FibGVcIlxuICAgICAgICAgICAgICAgICAgICB1c2U6cmlnaHRcbiAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIk5leHQgWWVhclwiXG4gICAgICAgICAgICAgICAgICAgIG9uOmNsaWNrPXsoZXZ0KSA9PiBkaXNwYXRjaChcIm5leHRcIil9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgY2xhc3M9XCJjYWxlbmRhci1jbGlja2FibGVcIlxuICAgICAgICAgICAgICAgIHVzZTpzZXR0aW5nc1xuICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJDYWxlbmRhciBTZXR0aW5nc1wiXG4gICAgICAgICAgICAgICAgb246Y2xpY2s9eyhldnQpID0+IGRpc3BhdGNoKFwic2V0dGluZ3NcIiwgZXZ0KX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICA6Z2xvYmFsKCNjYWxlbmRhci1jb250YWluZXIpIC5mYW50YXN5LW5hdi5uYXYubmF2IHtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICB6LWluZGV4OiAyO1xuICAgIH1cbiAgICAuZmFudGFzeS15ZWFyLW5hdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB9XG5cbiAgICAuY29udGFpbmVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLmZhbnRhc3ktdGl0bGUge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIC5mYW50YXN5LXJpZ2h0LW5hdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICB9XG4gICAgLmNhbGVuZGFyLWNsaWNrYWJsZSB7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuICAgIGltcG9ydCB0eXBlIENhbGVuZGFySGVscGVyIGZyb20gXCJzcmMvaGVscGVyXCI7XG5cbiAgICBpbXBvcnQgdHlwZSB7IE1vbnRoSGVscGVyIH0gZnJvbSBcInNyYy9oZWxwZXJcIjtcbiAgICBpbXBvcnQge1xuICAgICAgICBjcmVhdGVFdmVudERpc3BhdGNoZXIsXG4gICAgICAgIGdldENvbnRleHQsXG4gICAgICAgIG9uRGVzdHJveSxcbiAgICAgICAgb25Nb3VudCxcbiAgICAgICAgdGlja1xuICAgIH0gZnJvbSBcInN2ZWx0ZVwiO1xuICAgIGltcG9ydCB0eXBlIHsgV3JpdGFibGUgfSBmcm9tIFwic3ZlbHRlL3N0b3JlXCI7XG5cbiAgICBpbXBvcnQgTW9udGggZnJvbSBcIi4vTW9udGguc3ZlbHRlXCI7XG4gICAgaW1wb3J0IFllYXJOYXYgZnJvbSBcIi4vWWVhck5hdi5zdmVsdGVcIjtcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cbiAgICBleHBvcnQgbGV0IGN1cnJlbnQ6IHN0cmluZztcblxuICAgIGV4cG9ydCBsZXQgeWVhcjogbnVtYmVyO1xuICAgIGV4cG9ydCBsZXQgY29sdW1uczogbnVtYmVyO1xuICAgIGV4cG9ydCBsZXQgZnVsbFZpZXc6IGJvb2xlYW47XG5cbiAgICAkOiB5ZWFyRGlzcGxheSA9IGNhbGVuZGFyLmdldE5hbWVGb3JZZWFyKHllYXIpO1xuXG4gICAgbGV0IHllYXJDb250YWluZXI6IEhUTUxEaXZFbGVtZW50O1xuXG4gICAgbGV0IGZpcnN0TW9udGg6IE1vbnRoSGVscGVyO1xuICAgIGxldCBsYXN0TW9udGg6IE1vbnRoSGVscGVyO1xuXG4gICAgY29uc3QgY2FsZW5kYXJTdG9yZSA9IGdldENvbnRleHQ8V3JpdGFibGU8Q2FsZW5kYXJIZWxwZXI+PihcImNhbGVuZGFyXCIpO1xuICAgIGxldCBjYWxlbmRhcjogQ2FsZW5kYXJIZWxwZXI7XG4gICAgY2FsZW5kYXJTdG9yZS5zdWJzY3JpYmUoKGMpID0+IHtcbiAgICAgICAgY2FsZW5kYXIgPSBjO1xuICAgIH0pO1xuXG4gICAgY29uc3QgdHJhY2tlZE1vbnRoczogQXJyYXk8TW9udGggfCBIVE1MSGVhZGluZ0VsZW1lbnQ+ID0gW107XG5cbiAgICBjb25zdCBkYXlWaWV3U3RvcmUgPSBnZXRDb250ZXh0PFdyaXRhYmxlPGJvb2xlYW4+PihcImRheVZpZXdcIik7XG4gICAgY29uc3QgbW9vblN0b3JlID0gZ2V0Q29udGV4dDxXcml0YWJsZTxib29sZWFuPj4oXCJkaXNwbGF5TW9vbnNcIik7XG5cbiAgICBjb25zdCBhcHBlbmRPYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihcbiAgICAgICAgKGVudHJpZXMsIG9ic2VydmVyKSA9PiB7XG4gICAgICAgICAgICBpZiAob2JzZXJ2ZXIgIT09IGFwcGVuZE9ic2VydmVyKSByZXR1cm47XG4gICAgICAgICAgICBpZiAoIWVudHJpZXMubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgICBpZiAoIWVudHJpZXNbMF0uaXNJbnRlcnNlY3RpbmcpIHJldHVybjtcbiAgICAgICAgICAgIGFwcGVuZE9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAhY2FsZW5kYXIuY2FuR29Ub05leHRZZWFyKGxhc3RNb250aC55ZWFyKSAmJlxuICAgICAgICAgICAgICAgIGxhc3RNb250aC5udW1iZXIgPT09IGNhbGVuZGFyLmRhdGEubW9udGhzLmxlbmd0aCAtIDFcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBhcHBlbmRNb250aCgpO1xuICAgICAgICAgICAgZGVzdHJveSh0cmFja2VkTW9udGhzLnNoaWZ0KCkpO1xuICAgICAgICAgICAgcmVzZXRBcHBlbmQoKTtcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgcm9vdDogeWVhckNvbnRhaW5lcixcbiAgICAgICAgICAgIHJvb3RNYXJnaW46IFwiMHB4XCIsXG4gICAgICAgICAgICB0aHJlc2hvbGQ6IDAuMjVcbiAgICAgICAgfVxuICAgICk7XG4gICAgY29uc3QgcmVzZXRBcHBlbmQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGVsID0geWVhckNvbnRhaW5lci5jaGlsZHJlblt5ZWFyQ29udGFpbmVyLmNoaWxkcmVuLmxlbmd0aCAtIDJdO1xuICAgICAgICBpZiAoIWVsKSByZXR1cm47XG4gICAgICAgIGFwcGVuZE9ic2VydmVyLm9ic2VydmUoZWwpO1xuICAgIH07XG4gICAgY29uc3QgYXBwZW5kSGVhZGVyT2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoXG4gICAgICAgIChlbnRyaWVzLCBvYnNlcnZlcikgPT4ge1xuICAgICAgICAgICAgaWYgKG9ic2VydmVyICE9PSBhcHBlbmRIZWFkZXJPYnNlcnZlcikgcmV0dXJuO1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGlzIG9ic2VydmVyIGxvb2tzIGF0IHRoZSBwcmVwZW5kZWQgaGVhZGVyIChjdXJyZW50IHllYXIpLiBPbmNlIHRoaXMgaGVhZGVyIGlzIGZ1bGx5IGluIHZpZXcsIHRoZSB5ZWFyIHZhcmlhYmxlIHNob3VsZCBiZSBkZWNyZW1lbnRlZC5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgaWYgKCFlbnRyaWVzICYmICFlbnRyaWVzLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKGVudHJpZXNbMF0uaXNJbnRlcnNlY3RpbmcpIHJldHVybjtcblxuICAgICAgICAgICAgY29uc3QgeWVhclJlY3QgPSB5ZWFyQ29udGFpbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgICAgICAgICBpZiAoZW50cmllc1swXS5ib3VuZGluZ0NsaWVudFJlY3QudG9wIDwgeWVhclJlY3QudG9wKSB7XG4gICAgICAgICAgICAgICAgeWVhciArPSAxO1xuICAgICAgICAgICAgICAgIHByZXBlbmRIZWFkZXJPYnNlcnZlci5vYnNlcnZlKGVudHJpZXNbMF0udGFyZ2V0KTtcbiAgICAgICAgICAgICAgICBhcHBlbmRIZWFkZXJPYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJvb3Q6IHllYXJDb250YWluZXIsXG4gICAgICAgICAgICByb290TWFyZ2luOiBcIjBweFwiLFxuICAgICAgICAgICAgdGhyZXNob2xkOiAwXG4gICAgICAgIH1cbiAgICApO1xuICAgIC8qKiBUaGlzIGZ1bmN0aW9uIHdpbGwgYXBwZW5kIGEgbmV3IG1vbnRoIHN2ZWx0ZSBpbnN0YW5jZSB0byB0aGUgeWVhciBjb250YWluZXIuICovXG4gICAgY29uc3QgYXBwZW5kTW9udGggPSAocmVzZXQgPSB0cnVlKSA9PiB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgICFjYWxlbmRhci5jYW5Hb1RvTmV4dFllYXIobGFzdE1vbnRoLnllYXIpICYmXG4gICAgICAgICAgICBsYXN0TW9udGgubnVtYmVyID09PSBjYWxlbmRhci5kYXRhLm1vbnRocy5sZW5ndGggLSAxXG4gICAgICAgIClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGFzdE1vbnRoID0gY2FsZW5kYXIuZ2V0TW9udGgobGFzdE1vbnRoLm51bWJlciArIDEsIGxhc3RNb250aC55ZWFyKTtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBsYXN0TW9udGgubnVtYmVyID09PSAwICYmXG4gICAgICAgICAgICAhKHllYXJDb250YWluZXIubGFzdEVsZW1lbnRDaGlsZCBpbnN0YW5jZW9mIEhUTUxIZWFkaW5nRWxlbWVudClcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBjb25zdCBoZWFkZXIgPSB5ZWFyQ29udGFpbmVyLmNyZWF0ZUVsKFwiaDJcIiwge1xuICAgICAgICAgICAgICAgIHRleHQ6IGNhbGVuZGFyLmdldE5hbWVGb3JZZWFyKGxhc3RNb250aC55ZWFyKSxcbiAgICAgICAgICAgICAgICBjbHM6IFwiZmFudGFzeS10aXRsZVwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRyYWNrZWRNb250aHMucHVzaChoZWFkZXIpO1xuICAgICAgICAgICAgYXBwZW5kSGVhZGVyT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgYXBwZW5kSGVhZGVyT2JzZXJ2ZXIub2JzZXJ2ZShoZWFkZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgdHJhY2tlZE1vbnRocy5wdXNoKGNyZWF0ZU1vbnRoKGxhc3RNb250aCwgZmFsc2UpKTtcblxuICAgICAgICBpZiAocmVzZXQpIHtcbiAgICAgICAgICAgIGZpcnN0TW9udGggPSBjYWxlbmRhci5nZXRNb250aChcbiAgICAgICAgICAgICAgICAoZmlyc3RNb250aD8ubnVtYmVyID8/IDApICsgMSxcbiAgICAgICAgICAgICAgICBmaXJzdE1vbnRoPy55ZWFyID8/IDFcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzZXRQcmVwZW5kKCk7XG4gICAgfTtcblxuICAgIGNvbnN0IHByZXBlbmRPYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihcbiAgICAgICAgKGVudHJpZXMsIG9ic2VydmVyKSA9PiB7XG4gICAgICAgICAgICBpZiAob2JzZXJ2ZXIgIT09IHByZXBlbmRPYnNlcnZlcikgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKCFlbnRyaWVzLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKCFlbnRyaWVzWzBdLmlzSW50ZXJzZWN0aW5nKSByZXR1cm47XG4gICAgICAgICAgICBwcmVwZW5kT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgaWYgKCFmaXJzdE1vbnRoKSByZXR1cm47XG4gICAgICAgICAgICBwcmVwZW5kTW9udGgoKTtcbiAgICAgICAgICAgIGRlc3Ryb3kodHJhY2tlZE1vbnRocy5wb3AoKSk7XG4gICAgICAgICAgICByZXNldFByZXBlbmQoKTtcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgcm9vdDogeWVhckNvbnRhaW5lcixcbiAgICAgICAgICAgIHJvb3RNYXJnaW46IFwiMHB4XCIsXG4gICAgICAgICAgICB0aHJlc2hvbGQ6IDAuMjVcbiAgICAgICAgfVxuICAgICk7XG4gICAgY29uc3QgcmVzZXRQcmVwZW5kID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBlbCA9IHllYXJDb250YWluZXIuY2hpbGRyZW5bMV07XG4gICAgICAgIGlmICghZWwpIHJldHVybjtcbiAgICAgICAgcHJlcGVuZE9ic2VydmVyLm9ic2VydmUoZWwpO1xuICAgIH07XG4gICAgY29uc3QgcHJlcGVuZEhlYWRlck9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKFxuICAgICAgICAoZW50cmllcywgb2JzZXJ2ZXIpID0+IHtcbiAgICAgICAgICAgIGlmIChvYnNlcnZlciAhPT0gcHJlcGVuZEhlYWRlck9ic2VydmVyKSByZXR1cm47XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFRoaXMgb2JzZXJ2ZXIgbG9va3MgYXQgdGhlIHByZXBlbmRlZCBoZWFkZXIgKGN1cnJlbnQgeWVhcikuIE9uY2UgdGhpcyBoZWFkZXIgaXMgZnVsbHkgaW4gdmlldywgdGhlIHllYXIgdmFyaWFibGUgc2hvdWxkIGJlIGRlY3JlbWVudGVkLlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBpZiAoIWVudHJpZXMgJiYgIWVudHJpZXMubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgICBpZiAoZW50cmllc1swXS5pc0ludGVyc2VjdGluZykge1xuICAgICAgICAgICAgICAgIHllYXIgLT0gMTtcbiAgICAgICAgICAgICAgICBhcHBlbmRIZWFkZXJPYnNlcnZlci5vYnNlcnZlKGVudHJpZXNbMF0udGFyZ2V0KTtcbiAgICAgICAgICAgICAgICBwcmVwZW5kSGVhZGVyT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICByb290OiB5ZWFyQ29udGFpbmVyLFxuICAgICAgICAgICAgcm9vdE1hcmdpbjogXCIwcHhcIixcbiAgICAgICAgICAgIHRocmVzaG9sZDogMFxuICAgICAgICB9XG4gICAgKTtcblxuICAgIC8qKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcHJlcGVuZCBhIG5ldyBtb250aCBzdmVsdGUgaW5zdGFuY2UgdG8gdGhlIHllYXIgY29udGFpbmVyLiAqL1xuICAgIGNvbnN0IHByZXBlbmRNb250aCA9IChyZXNldCA9IHRydWUpID0+IHtcbiAgICAgICAgZmlyc3RNb250aCA9IGNhbGVuZGFyLmdldE1vbnRoKGZpcnN0TW9udGgubnVtYmVyIC0gMSwgZmlyc3RNb250aC55ZWFyKTtcblxuICAgICAgICBpZiAoIWZpcnN0TW9udGgpIHJldHVybjtcbiAgICAgICAgdHJhY2tlZE1vbnRocy51bnNoaWZ0KGNyZWF0ZU1vbnRoKGZpcnN0TW9udGgsIHRydWUpKTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgZmlyc3RNb250aC5udW1iZXIgPT09IDAgJiZcbiAgICAgICAgICAgICEoeWVhckNvbnRhaW5lci5maXJzdEVsZW1lbnRDaGlsZCBpbnN0YW5jZW9mIEhUTUxIZWFkaW5nRWxlbWVudClcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBjb25zdCBoZWFkZXIgPSBjcmVhdGVFbChcImgyXCIsIHtcbiAgICAgICAgICAgICAgICB0ZXh0OiBjYWxlbmRhci5nZXROYW1lRm9yWWVhcihmaXJzdE1vbnRoLnllYXIpLFxuICAgICAgICAgICAgICAgIGNsczogXCJmYW50YXN5LXRpdGxlXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgeWVhckNvbnRhaW5lci5wcmVwZW5kKGhlYWRlcik7XG4gICAgICAgICAgICB0cmFja2VkTW9udGhzLnVuc2hpZnQoaGVhZGVyKTtcblxuICAgICAgICAgICAgcHJlcGVuZEhlYWRlck9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgIHByZXBlbmRIZWFkZXJPYnNlcnZlci5vYnNlcnZlKGhlYWRlcik7XG4gICAgICAgIH1cbiAgICAgICAgLyoqIFVwZGF0ZSB0aGUgbGFzdCBtb250aCB0byB0aGUgcHJldmlvdXMgbGFzdCBtb250aCAqL1xuXG4gICAgICAgIGlmIChyZXNldCkge1xuICAgICAgICAgICAgbGFzdE1vbnRoID0gY2FsZW5kYXIuZ2V0TW9udGgobGFzdE1vbnRoLm51bWJlciAtIDEsIGxhc3RNb250aC55ZWFyKTtcbiAgICAgICAgfVxuICAgICAgICByZXNldEFwcGVuZCgpO1xuICAgIH07XG5cbiAgICBjb25zdCBjcmVhdGVNb250aCA9IChtb250aDogTW9udGhIZWxwZXIsIGFuY2hvcjogYm9vbGVhbikgPT4ge1xuICAgICAgICBjb25zdCBzdmVsdGVJbnN0YW5jZSA9IG5ldyBNb250aCh7XG4gICAgICAgICAgICB0YXJnZXQ6IHllYXJDb250YWluZXIsXG4gICAgICAgICAgICBhbmNob3I6IGFuY2hvciA/IHllYXJDb250YWluZXIuY2hpbGRyZW5bMF0gOiBudWxsLFxuICAgICAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICAgICAgICBtb250aDogbW9udGgsXG4gICAgICAgICAgICAgICAgZnVsbFZpZXc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHllYXJWaWV3OiB0cnVlLFxuICAgICAgICAgICAgICAgIGNvbHVtbnMsXG4gICAgICAgICAgICAgICAgd2Vla3M6IGNhbGVuZGFyLndlZWtkYXlzLmxlbmd0aCxcbiAgICAgICAgICAgICAgICBzaG93UGFkOiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbnRleHQ6IG5ldyBNYXAoW1xuICAgICAgICAgICAgICAgIFtcImRheVZpZXdcIiwgZGF5Vmlld1N0b3JlXSxcbiAgICAgICAgICAgICAgICBbXCJkaXNwbGF5TW9vbnNcIiwgbW9vblN0b3JlXVxuICAgICAgICAgICAgXSlcbiAgICAgICAgfSk7XG4gICAgICAgIHN2ZWx0ZUluc3RhbmNlLiRvbihcImRheS1jbGlja1wiLCAoZSkgPT4gZGlzcGF0Y2goXCJkYXktY2xpY2tcIiwgZS5kZXRhaWwpKTtcbiAgICAgICAgc3ZlbHRlSW5zdGFuY2UuJG9uKFwiZGF5LWRvdWJsZWNsaWNrXCIsIChlKSA9PlxuICAgICAgICAgICAgZGlzcGF0Y2goXCJkYXktZG91YmxlY2xpY2tcIiwgZS5kZXRhaWwpXG4gICAgICAgICk7XG4gICAgICAgIHN2ZWx0ZUluc3RhbmNlLiRvbihcImRheS1jb250ZXh0LW1lbnVcIiwgKGUpID0+XG4gICAgICAgICAgICBkaXNwYXRjaChcImRheS1jb250ZXh0LW1lbnVcIiwgZS5kZXRhaWwpXG4gICAgICAgICk7XG4gICAgICAgIHN2ZWx0ZUluc3RhbmNlLiRvbihcImV2ZW50LW1vdXNlb3ZlclwiLCAoZSkgPT5cbiAgICAgICAgICAgIGRpc3BhdGNoKFwiZXZlbnQtbW91c2VvdmVyXCIsIGUuZGV0YWlsKVxuICAgICAgICApO1xuICAgICAgICBzdmVsdGVJbnN0YW5jZS4kb24oXCJldmVudC1tb3VzZW92ZXJcIiwgKGUpID0+XG4gICAgICAgICAgICBkaXNwYXRjaChcImV2ZW50LW1vdXNlb3ZlclwiLCBlLmRldGFpbClcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHN2ZWx0ZUluc3RhbmNlO1xuICAgIH07XG5cbiAgICBjb25zdCBkZXN0cm95ID0gKGl0ZW06IE1vbnRoIHwgSFRNTEhlYWRpbmdFbGVtZW50KSA9PiB7XG4gICAgICAgIGlmIChpdGVtIGluc3RhbmNlb2YgSFRNTEhlYWRpbmdFbGVtZW50KSB7XG4gICAgICAgICAgICBpdGVtLmRldGFjaCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaXRlbS4kZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IHJlc2V0ID0gYXN5bmMgKGZ1bGwgPSBmYWxzZSkgPT4ge1xuICAgICAgICBmb3IgKGxldCBpdGVtIG9mIHRyYWNrZWRNb250aHMpIHtcbiAgICAgICAgICAgIGRlc3Ryb3koaXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgdHJhY2tlZE1vbnRocy5zcGxpY2UoMCwgdHJhY2tlZE1vbnRocy5sZW5ndGgpO1xuICAgICAgICB5ZWFyQ29udGFpbmVyLmVtcHR5KCk7XG5cbiAgICAgICAgYXdhaXQgdGljaygpO1xuXG4gICAgICAgIHllYXIgPSBjYWxlbmRhci5jdXJyZW50LnllYXI7XG5cbiAgICAgICAgZmlyc3RNb250aCA9IGNhbGVuZGFyLmdldE1vbnRoKFxuICAgICAgICAgICAgY2FsZW5kYXIuZGlzcGxheWVkLm1vbnRoIC0gMSxcbiAgICAgICAgICAgIGNhbGVuZGFyLmRpc3BsYXllZC55ZWFyXG4gICAgICAgICk7XG4gICAgICAgIC8qIGZpcnN0TW9udGggPSBtb250aHNbMF07Ki9cbiAgICAgICAgbGFzdE1vbnRoID0gZmlyc3RNb250aDtcbiAgICAgICAgLyogdHJhY2tlZE1vbnRocy5wdXNoKGNyZWF0ZU1vbnRoKGZpcnN0TW9udGgsIGZhbHNlKSk7ICovXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2FsZW5kYXIuZGF0YS5tb250aHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFwcGVuZE1vbnRoKGZhbHNlKTtcbiAgICAgICAgICAgIC8qIHRyYWNrZWRNb250aHMucHVzaChjcmVhdGVNb250aChtb250aCwgZmFsc2UpKTsgKi9cbiAgICAgICAgfVxuICAgICAgICBwcmVwZW5kTW9udGgoZmFsc2UpO1xuXG4gICAgICAgIGF3YWl0IHRpY2soKTtcbiAgICAgICAgLyoqIEFsbCBtb250aHMgYXJlIGNyZWF0ZWQgd2hlbiB5ZWFyIHZpZXcgaXMgcmVzZXQsIHNvIGN1cnJlbnQgbW9udGggZXhpc3RzLiAqL1xuICAgICAgICBjb25zdCBjdXJyZW50RWwgPSB5ZWFyQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICBgI01PTlRILSR7Y2FsZW5kYXIuY3VycmVudE1vbnRoLmlkfS0ke3llYXJ9YFxuICAgICAgICApO1xuICAgICAgICBjdXJyZW50RWwuc2Nyb2xsSW50b1ZpZXcodHJ1ZSk7XG4gICAgICAgIGlmIChmdWxsKSB7XG4gICAgICAgICAgICBzY3JvbGwoKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBvbkRlc3Ryb3koKCkgPT4ge1xuICAgICAgICBwcmVwZW5kT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICBhcHBlbmRPYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICAgIHByZXBlbmRIZWFkZXJPYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICAgIGFwcGVuZEhlYWRlck9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICB9KTtcblxuICAgIG9uTW91bnQocmVzZXQpO1xuXG4gICAgY29uc3Qgc2Nyb2xsID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCB0aWNrKCk7XG4gICAgICAgIHByZXBlbmRPYnNlcnZlci5vYnNlcnZlKHllYXJDb250YWluZXIuY2hpbGRyZW5bMV0pO1xuICAgICAgICBhcHBlbmRPYnNlcnZlci5vYnNlcnZlKFxuICAgICAgICAgICAgeWVhckNvbnRhaW5lci5jaGlsZHJlblt5ZWFyQ29udGFpbmVyLmNoaWxkcmVuLmxlbmd0aCAtIDJdXG4gICAgICAgICk7XG4gICAgfTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwieWVhci12aWV3XCI+XG4gICAgPFllYXJOYXZcbiAgICAgICAgeWVhcj17eWVhckRpc3BsYXl9XG4gICAgICAgIHtjdXJyZW50fVxuICAgICAgICBvbjpuZXh0XG4gICAgICAgIG9uOnByZXZpb3VzXG4gICAgICAgIG9uOnJlc2V0PXsoKSA9PiByZXNldCh0cnVlKX1cbiAgICAgICAgb246c2V0dGluZ3NcbiAgICAvPlxuICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJ5ZWFyXCJcbiAgICAgICAgY2xhc3M6ZnVsbC12aWV3PXtmdWxsVmlld31cbiAgICAgICAgYmluZDp0aGlzPXt5ZWFyQ29udGFpbmVyfVxuICAgICAgICBvbjpzY3JvbGx8b25jZT17c2Nyb2xsfVxuICAgIC8+XG48L2Rpdj5cblxuPHN0eWxlPlxuICAgIC55ZWFyLXZpZXcge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG4gICAgLnllYXIge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgICAgICBnYXA6IDFyZW07XG4gICAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgICAgICBmbGV4OiAxO1xuICAgIH1cbiAgICAueWVhcjpub3QoLmZ1bGwtdmlldykge1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICB9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gICAgaW1wb3J0IHsgTm90aWNlIH0gZnJvbSBcIm9ic2lkaWFuXCI7XG5cbiAgICBpbXBvcnQgdHlwZSBDYWxlbmRhckhlbHBlciBmcm9tIFwic3JjL2hlbHBlclwiO1xuXG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyLCBnZXRDb250ZXh0LCBvbk1vdW50LCB0aWNrIH0gZnJvbSBcInN2ZWx0ZVwiO1xuICAgIGltcG9ydCB0eXBlIHsgV3JpdGFibGUgfSBmcm9tIFwic3ZlbHRlL3N0b3JlXCI7XG5cbiAgICBpbXBvcnQgWWVhck5hdiBmcm9tIFwiLi9ZZWFyTmF2LnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBZZWFyVmlld0NvbnRhaW5lciBmcm9tIFwiLi9ZZWFyVmlld0NvbnRhaW5lci5zdmVsdGVcIjtcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cbiAgICBjb25zdCBjYWxlbmRhclN0b3JlID0gZ2V0Q29udGV4dDxXcml0YWJsZTxDYWxlbmRhckhlbHBlcj4+KFwiY2FsZW5kYXJcIik7XG4gICAgY29uc3QgZGF5Vmlld1N0b3JlID0gZ2V0Q29udGV4dDxXcml0YWJsZTxib29sZWFuPj4oXCJkYXlWaWV3XCIpO1xuICAgIGNvbnN0IG1vb25TdG9yZSA9IGdldENvbnRleHQ8V3JpdGFibGU8Ym9vbGVhbj4+KFwiZGlzcGxheU1vb25zXCIpO1xuICAgIGxldCBjYWxlbmRhcjogQ2FsZW5kYXJIZWxwZXI7XG4gICAgY2FsZW5kYXJTdG9yZS5zdWJzY3JpYmUoKGMpID0+IHtcbiAgICAgICAgY2FsZW5kYXIgPSBjO1xuICAgIH0pO1xuXG4gICAgZXhwb3J0IGxldCB5ZWFyOiBudW1iZXI7XG4gICAgZXhwb3J0IGxldCBjdXJyZW50OiBzdHJpbmc7XG4gICAgZXhwb3J0IGxldCBjb2x1bW5zOiBudW1iZXI7XG5cbiAgICAkOiB5ZWFyRGlzcGxheSA9IGNhbGVuZGFyLmdldE5hbWVGb3JZZWFyKHllYXIpO1xuICAgIGxldCB5ZWFyQ29udGFpbmVyOiBIVE1MRWxlbWVudDtcblxuICAgIC8qKiBTZXR1cCBmb3IgZXZlbnR1YWwgaW5maW5pdGUgc2Nyb2xsIG9mIGJpZyB5ZWFyIHZpZXcuICovXG4gICAgY29uc3QgY3JlYXRlWWVhciA9ICh5ZWFyOiBudW1iZXIsIGFuY2hvcjogYm9vbGVhbiA9IGZhbHNlKSA9PiB7XG4gICAgICAgIGNvbnN0IG1vbnRocyA9IGNhbGVuZGFyLmdldE1vbnRoc0ZvclllYXIoeWVhcik7XG4gICAgICAgIGNvbnN0IHN2ZWx0ZUluc3RhbmNlID0gbmV3IFllYXJWaWV3Q29udGFpbmVyKHtcbiAgICAgICAgICAgIHRhcmdldDogeWVhckNvbnRhaW5lcixcbiAgICAgICAgICAgIGFuY2hvcjogYW5jaG9yID8geWVhckNvbnRhaW5lci5jaGlsZHJlblswXSA6IG51bGwsXG4gICAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgICAgIG1vbnRoczogbW9udGhzLFxuICAgICAgICAgICAgICAgIGZ1bGxWaWV3OiB0cnVlLFxuICAgICAgICAgICAgICAgIGNvbHVtbnNcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb250ZXh0OiBuZXcgTWFwKFtcbiAgICAgICAgICAgICAgICBbXCJkYXlWaWV3XCIsIGRheVZpZXdTdG9yZV0sXG4gICAgICAgICAgICAgICAgW1wiZGlzcGxheU1vb25zXCIsIG1vb25TdG9yZV1cbiAgICAgICAgICAgIF0pXG4gICAgICAgIH0pO1xuICAgICAgICBzdmVsdGVJbnN0YW5jZS4kb24oXCJkYXktY2xpY2tcIiwgKGUpID0+IGRpc3BhdGNoKFwiZGF5LWNsaWNrXCIsIGUuZGV0YWlsKSk7XG4gICAgICAgIHN2ZWx0ZUluc3RhbmNlLiRvbihcImRheS1kb3VibGVjbGlja1wiLCAoZSkgPT5cbiAgICAgICAgICAgIGRpc3BhdGNoKFwiZGF5LWRvdWJsZWNsaWNrXCIsIGUuZGV0YWlsKVxuICAgICAgICApO1xuICAgICAgICBzdmVsdGVJbnN0YW5jZS4kb24oXCJkYXktY29udGV4dC1tZW51XCIsIChlKSA9PlxuICAgICAgICAgICAgZGlzcGF0Y2goXCJkYXktY29udGV4dC1tZW51XCIsIGUuZGV0YWlsKVxuICAgICAgICApO1xuICAgICAgICBzdmVsdGVJbnN0YW5jZS4kb24oXCJldmVudC1tb3VzZW92ZXJcIiwgKGUpID0+XG4gICAgICAgICAgICBkaXNwYXRjaChcImV2ZW50LW1vdXNlb3ZlclwiLCBlLmRldGFpbClcbiAgICAgICAgKTtcbiAgICAgICAgc3ZlbHRlSW5zdGFuY2UuJG9uKFwiZXZlbnQtbW91c2VvdmVyXCIsIChlKSA9PlxuICAgICAgICAgICAgZGlzcGF0Y2goXCJldmVudC1tb3VzZW92ZXJcIiwgZS5kZXRhaWwpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiBzdmVsdGVJbnN0YW5jZTtcbiAgICB9O1xuICAgIGNvbnN0IGRlc3Ryb3kgPSAoaXRlbTogWWVhclZpZXdDb250YWluZXIgfCBIVE1MSGVhZGluZ0VsZW1lbnQpID0+IHtcbiAgICAgICAgaWYgKGl0ZW0gaW5zdGFuY2VvZiBIVE1MSGVhZGluZ0VsZW1lbnQpIHtcbiAgICAgICAgICAgIGl0ZW0uZGV0YWNoKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpdGVtLiRkZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgeWVhcnM6IEFycmF5PEhUTUxIZWFkaW5nRWxlbWVudCB8IFllYXJWaWV3Q29udGFpbmVyPiA9IFtdO1xuXG4gICAgY29uc3QgbmV4dCA9ICgpID0+IHtcbiAgICAgICAgaWYgKCFjYWxlbmRhci5jYW5Hb1RvTmV4dFllYXIoeWVhcikpIHtcbiAgICAgICAgICAgIG5ldyBOb3RpY2UoXG4gICAgICAgICAgICAgICAgXCJUaGlzIGlzIHRoZSBsYXN0IHllYXIuIEFkZGl0aW9uYWwgeWVhcnMgY2FuIGJlIGNyZWF0ZWQgaW4gc2V0dGluZ3MuXCJcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgeWVhciA9IHllYXIgKyAxO1xuICAgICAgICByZXNldCh5ZWFyKTtcbiAgICB9O1xuICAgIGNvbnN0IHByZXZpb3VzID0gKCkgPT4ge1xuICAgICAgICBpZiAoeWVhciA9PT0gMSkge1xuICAgICAgICAgICAgbmV3IE5vdGljZShcIlRoaXMgaXMgdGhlIGVhcmxpZXN0IHllYXIuXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHllYXIgPSB5ZWFyIC0gMTtcbiAgICAgICAgcmVzZXQoeWVhcik7XG4gICAgfTtcblxuICAgIGNvbnN0IGN1cnJlbnRZZWFyID0gKCkgPT4ge1xuICAgICAgICB5ZWFyID0gY2FsZW5kYXIuY3VycmVudC55ZWFyO1xuICAgICAgICByZXNldCh5ZWFyKTtcbiAgICB9O1xuXG4gICAgY29uc3QgcmVzZXQgPSBhc3luYyAoeWVhcj86IG51bWJlcikgPT4ge1xuICAgICAgICB5ZWFycy5mb3JFYWNoKChlbCkgPT4gZGVzdHJveShlbCkpO1xuICAgICAgICB5ZWFyQ29udGFpbmVyLmVtcHR5KCk7XG5cbiAgICAgICAgYXdhaXQgdGljaygpO1xuXG4gICAgICAgIHllYXIgPSB5ZWFyO1xuXG4gICAgICAgIHllYXJzLnB1c2goY3JlYXRlWWVhcih5ZWFyKSk7XG4gICAgfTtcbiAgICBvbk1vdW50KCgpID0+IHllYXJzLnB1c2goY3JlYXRlWWVhcih5ZWFyKSkpO1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJ5ZWFyLXZpZXdcIj5cbiAgICA8WWVhck5hdlxuICAgICAgICB5ZWFyPXt5ZWFyRGlzcGxheX1cbiAgICAgICAge2N1cnJlbnR9XG4gICAgICAgIGFycm93cz17dHJ1ZX1cbiAgICAgICAgb246bmV4dD17KCkgPT4gbmV4dCgpfVxuICAgICAgICBvbjpwcmV2aW91cz17KCkgPT4gcHJldmlvdXMoKX1cbiAgICAgICAgb246cmVzZXQ9eygpID0+IGN1cnJlbnRZZWFyKCl9XG4gICAgICAgIG9uOnNldHRpbmdzXG4gICAgLz5cbiAgICA8ZGl2IGNsYXNzPVwieWVhci1jb250YWluZXJcIiBiaW5kOnRoaXM9e3llYXJDb250YWluZXJ9IC8+XG48L2Rpdj5cblxuPHN0eWxlPlxuICAgIC55ZWFyLXZpZXcge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG4gICAgLnllYXItY29udGFpbmVyIHtcbiAgICAgICAgZmxleDogMTtcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgfVxuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuICAgIGltcG9ydCB0eXBlIHsgTW9udGhIZWxwZXIgfSBmcm9tIFwic3JjL2hlbHBlclwiO1xuXG4gICAgaW1wb3J0IE1vbnRoIGZyb20gXCIuL01vbnRoLnN2ZWx0ZVwiO1xuXG4gICAgZXhwb3J0IGxldCBmdWxsVmlldzogYm9vbGVhbjtcbiAgICBleHBvcnQgbGV0IG1vbnRoczogTW9udGhIZWxwZXJbXTtcbiAgICBleHBvcnQgbGV0IGNvbHVtbnM6IG51bWJlcjtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwieWVhclwiIGNsYXNzOmZ1bGwtdmlldz17ZnVsbFZpZXd9PlxuICAgIHsjZWFjaCBtb250aHMgYXMgbW9udGh9XG4gICAgICAgIDxNb250aFxuICAgICAgICAgICAge21vbnRofVxuICAgICAgICAgICAgZnVsbFZpZXc9e2ZhbHNlfVxuICAgICAgICAgICAgeWVhclZpZXc9e3RydWV9XG4gICAgICAgICAgICB7Y29sdW1uc31cbiAgICAgICAgICAgIHdlZWtzPXttb250aC5jYWxlbmRhci53ZWVrZGF5cy5sZW5ndGh9XG4gICAgICAgICAgICBzaG93UGFkPXtmYWxzZX1cbiAgICAgICAgICAgIG9uOmRheS1jbGlja1xuICAgICAgICAgICAgb246ZGF5LWRvdWJsZWNsaWNrXG4gICAgICAgICAgICBvbjpkYXktY29udGV4dC1tZW51XG4gICAgICAgICAgICBvbjpldmVudC1jbGlja1xuICAgICAgICAgICAgb246ZXZlbnQtbW91c2VvdmVyXG4gICAgICAgIC8+XG4gICAgey9lYWNofVxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAueWVhciB7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XG4gICAgICAgIGdhcDogMXJlbTtcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgICAgIGZsZXg6IDE7XG4gICAgfVxuICAgIC55ZWFyOm5vdCguZnVsbC12aWV3KSB7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIH1cbjwvc3R5bGU+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cbiAgICBpbXBvcnQgdHlwZSBDYWxlbmRhckhlbHBlciBmcm9tIFwic3JjL2hlbHBlclwiO1xuXG4gICAgaW1wb3J0IHsgc2V0Q29udGV4dCB9IGZyb20gXCJzdmVsdGVcIjtcbiAgICBpbXBvcnQgeyB3cml0YWJsZSB9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcbiAgICBpbXBvcnQgRGF5VmlldyBmcm9tIFwiLi9EYXlWaWV3LnN2ZWx0ZVwiO1xuXG4gICAgaW1wb3J0IE1vbnRoVmlldyBmcm9tIFwiLi9Nb250aC5zdmVsdGVcIjtcbiAgICBpbXBvcnQgTmF2IGZyb20gXCIuL05hdi5zdmVsdGVcIjtcbiAgICBpbXBvcnQgWWVhclZpZXcgZnJvbSBcIi4vWWVhclZpZXcuc3ZlbHRlXCI7XG4gICAgaW1wb3J0IFllYXJWaWV3QmlnIGZyb20gXCIuL1llYXJWaWV3QmlnLnN2ZWx0ZVwiO1xuXG4gICAgZXhwb3J0IGxldCBmdWxsVmlldzogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGV4cG9ydCBsZXQgZGF5VmlldzogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGV4cG9ydCBsZXQgeWVhclZpZXc6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBleHBvcnQgbGV0IGNhbGVuZGFyOiBDYWxlbmRhckhlbHBlcjtcbiAgICBleHBvcnQgbGV0IG1vb25zOiBib29sZWFuO1xuICAgIGV4cG9ydCBsZXQgZGlzcGxheURheU51bWJlcjogYm9vbGVhbjtcbiAgICBleHBvcnQgbGV0IGRpc3BsYXlXZWVrczogYm9vbGVhbjtcblxuICAgICQ6IHtcbiAgICAgICAgaWYgKHllYXJWaWV3KSBkYXlWaWV3ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgY29uc3QgZGF5Vmlld1N0b3JlID0gd3JpdGFibGUoZGF5Vmlldyk7XG4gICAgY29uc3QgbW9vblN0b3JlID0gd3JpdGFibGUobW9vbnMpO1xuICAgIGNvbnN0IGNhbGVuZGFyU3RvcmUgPSB3cml0YWJsZShjYWxlbmRhcik7XG4gICAgc2V0Q29udGV4dChcImRheVZpZXdcIiwgZGF5Vmlld1N0b3JlKTtcbiAgICBzZXRDb250ZXh0KFwiZGlzcGxheU1vb25zXCIsIG1vb25TdG9yZSk7XG4gICAgc2V0Q29udGV4dChcImNhbGVuZGFyXCIsIGNhbGVuZGFyU3RvcmUpO1xuXG4gICAgJDogZGF5Vmlld1N0b3JlLnNldChkYXlWaWV3KTtcbiAgICAkOiBtb29uU3RvcmUuc2V0KG1vb25zKTtcbiAgICAkOiBjYWxlbmRhclN0b3JlLnNldChjYWxlbmRhcik7XG5cbiAgICBjYWxlbmRhci5vbihcIm1vbnRoLXVwZGF0ZVwiLCAoKSA9PiB7XG4gICAgICAgIHllYXIgPSBjYWxlbmRhci5kaXNwbGF5ZWQueWVhcjtcbiAgICAgICAgeWVhckRpc3BsYXkgPSBjYWxlbmRhci5nZXROYW1lRm9yWWVhcihjYWxlbmRhci5kaXNwbGF5ZWQueWVhcik7XG4gICAgICAgIG1vbnRoID0gY2FsZW5kYXIuY3VycmVudE1vbnRoO1xuICAgICAgICB3ZWVrcyA9IGNhbGVuZGFyLndlZWtzT2ZNb250aChtb250aCk7XG4gICAgICAgIGZpcnN0V2VlayA9IGNhbGVuZGFyLndlZWtOdW1iZXJzT2ZNb250aChtb250aCk7XG4gICAgfSk7XG5cbiAgICAkOiB3ZWVrZGF5cyA9IGNhbGVuZGFyLndlZWtkYXlzO1xuICAgICQ6IHllYXIgPSBjYWxlbmRhci5kaXNwbGF5ZWQueWVhcjtcbiAgICAkOiB5ZWFyRGlzcGxheSA9IGNhbGVuZGFyLmdldE5hbWVGb3JZZWFyKGNhbGVuZGFyLmRpc3BsYXllZC55ZWFyKTtcbiAgICAkOiBtb250aCA9IGNhbGVuZGFyLmN1cnJlbnRNb250aDtcbiAgICAkOiBmaXJzdFdlZWsgPSBjYWxlbmRhci53ZWVrTnVtYmVyc09mTW9udGgobW9udGgpO1xuICAgICQ6IHdlZWtzID0gY2FsZW5kYXIud2Vla3NPZk1vbnRoKG1vbnRoKTtcbjwvc2NyaXB0PlxuXG48ZGl2XG4gICAgaWQ9XCJjYWxlbmRhci1jb250YWluZXJcIlxuICAgIGNsYXNzPVwiZmFudGFzeS1jYWxlbmRhclwiXG4gICAgY2xhc3M6ZnVsbC12aWV3PXtmdWxsVmlld31cbiAgICBjbGFzczp5ZWFyLXZpZXc9e3llYXJWaWV3fVxuICAgIHN0eWxlPVwiLS1jYWxlbmRhci1jb2x1bW5zOiB7Y2FsZW5kYXIud2Vla2RheXNcbiAgICAgICAgLmxlbmd0aH07ICAtLWNvbHVtbi13aWR0aHM6IHsoMSAvIGNhbGVuZGFyLndlZWtkYXlzLmxlbmd0aCkgKlxuICAgICAgICAxMDB9JTsgLS1jYWxlbmRhci1yb3dzOiB7Y2FsZW5kYXIud2Vla3NQZXJDdXJyZW50TW9udGh9O1wiXG4+XG4gICAgeyNpZiB5ZWFyVmlldyAmJiAhZnVsbFZpZXd9XG4gICAgICAgIDxZZWFyVmlld1xuICAgICAgICAgICAge3llYXJ9XG4gICAgICAgICAgICB7ZnVsbFZpZXd9XG4gICAgICAgICAgICBjb2x1bW5zPXt3ZWVrZGF5cy5sZW5ndGh9XG4gICAgICAgICAgICBjdXJyZW50PXtjYWxlbmRhci5kaXNwbGF5ZWREYXRlfVxuICAgICAgICAgICAgb246bmV4dD17KCkgPT4gY2FsZW5kYXIuZ29Ub05leHRZZWFyKCl9XG4gICAgICAgICAgICBvbjpwcmV2aW91cz17KCkgPT4gY2FsZW5kYXIuZ29Ub1ByZXZpb3VzWWVhcigpfVxuICAgICAgICAgICAgb246cmVzZXRcbiAgICAgICAgICAgIG9uOnNldHRpbmdzXG4gICAgICAgICAgICBvbjpkYXktY2xpY2tcbiAgICAgICAgICAgIG9uOmRheS1kb3VibGVjbGlja1xuICAgICAgICAgICAgb246ZGF5LWNvbnRleHQtbWVudVxuICAgICAgICAgICAgb246ZXZlbnQtY2xpY2tcbiAgICAgICAgICAgIG9uOmV2ZW50LW1vdXNlb3ZlclxuICAgICAgICAvPlxuICAgIHs6ZWxzZSBpZiB5ZWFyVmlld31cbiAgICAgICAgPFllYXJWaWV3QmlnXG4gICAgICAgICAgICB7eWVhcn1cbiAgICAgICAgICAgIGNvbHVtbnM9e3dlZWtkYXlzLmxlbmd0aH1cbiAgICAgICAgICAgIGN1cnJlbnQ9e2NhbGVuZGFyLmRpc3BsYXllZERhdGV9XG4gICAgICAgICAgICBvbjpuZXh0PXsoKSA9PiBjYWxlbmRhci5nb1RvTmV4dFllYXIoKX1cbiAgICAgICAgICAgIG9uOnByZXZpb3VzPXsoKSA9PiBjYWxlbmRhci5nb1RvUHJldmlvdXNZZWFyKCl9XG4gICAgICAgICAgICBvbjpyZXNldFxuICAgICAgICAgICAgb246c2V0dGluZ3NcbiAgICAgICAgICAgIG9uOmRheS1jbGlja1xuICAgICAgICAgICAgb246ZGF5LWRvdWJsZWNsaWNrXG4gICAgICAgICAgICBvbjpkYXktY29udGV4dC1tZW51XG4gICAgICAgICAgICBvbjpldmVudC1jbGlja1xuICAgICAgICAgICAgb246ZXZlbnQtbW91c2VvdmVyXG4gICAgICAgIC8+XG4gICAgezplbHNlfVxuICAgICAgICA8TmF2XG4gICAgICAgICAgICBtb250aD17bW9udGgubmFtZX1cbiAgICAgICAgICAgIHllYXI9e3llYXJEaXNwbGF5fVxuICAgICAgICAgICAgY3VycmVudD17Y2FsZW5kYXIuZGlzcGxheWVkRGF0ZX1cbiAgICAgICAgICAgIG9uOm5leHQ9eygpID0+IGNhbGVuZGFyLmdvVG9OZXh0KCl9XG4gICAgICAgICAgICBvbjpwcmV2aW91cz17KCkgPT4gY2FsZW5kYXIuZ29Ub1ByZXZpb3VzKCl9XG4gICAgICAgICAgICBvbjpyZXNldFxuICAgICAgICAgICAgb246c2V0dGluZ3NcbiAgICAgICAgLz5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1vbnRoLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndlZWtzXCI+XG4gICAgICAgICAgICAgICAgeyNpZiBkaXNwbGF5V2Vla3N9XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwid2Vlay1udW0gd2Vla2RheSBmYW50YXN5LXdlZWtkYXlcIj5XPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2Vlay1udW0tY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7I2VhY2ggWy4uLkFycmF5KHdlZWtzKS5rZXlzKCldIGFzIG51bX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIndlZWstbnVtXCI+e2ZpcnN0V2VlayArIDEgKyBudW19PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgey9lYWNofVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7L2lmfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9udGgtdmlld1wiPlxuICAgICAgICAgICAgICAgIDwhLS0geyNpZiBtb250aC50eXBlID09IFwibW9udGhcIn0gLS0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndlZWtkYXlzXCI+XG4gICAgICAgICAgICAgICAgICAgIHsjZWFjaCB3ZWVrZGF5cyBhcyBkYXl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIndlZWtkYXkgZmFudGFzeS13ZWVrZGF5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+e2RheS5uYW1lLnNsaWNlKDAsIDMpfTwvc3BhblxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7L2VhY2h9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPCEtLSB7L2lmfSAtLT5cblxuICAgICAgICAgICAgICAgIDxNb250aFZpZXdcbiAgICAgICAgICAgICAgICAgICAgY29sdW1ucz17d2Vla2RheXMubGVuZ3RofVxuICAgICAgICAgICAgICAgICAgICB7d2Vla3N9XG4gICAgICAgICAgICAgICAgICAgIHttb250aH1cbiAgICAgICAgICAgICAgICAgICAge2Z1bGxWaWV3fVxuICAgICAgICAgICAgICAgICAgICBvbjpkYXktY2xpY2tcbiAgICAgICAgICAgICAgICAgICAgb246ZGF5LWRvdWJsZWNsaWNrXG4gICAgICAgICAgICAgICAgICAgIG9uOmRheS1jb250ZXh0LW1lbnVcbiAgICAgICAgICAgICAgICAgICAgb246ZXZlbnQtY2xpY2tcbiAgICAgICAgICAgICAgICAgICAgb246ZXZlbnQtbW91c2VvdmVyXG4gICAgICAgICAgICAgICAgICAgIG9uOmV2ZW50LWNvbnRleHRcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIHsvaWZ9XG48L2Rpdj5cbnsjaWYgZGF5VmlldyAmJiAhZnVsbFZpZXd9XG4gICAgPGhyIC8+XG4gICAgPERheVZpZXdcbiAgICAgICAge2Rpc3BsYXlEYXlOdW1iZXJ9XG4gICAgICAgIG9uOmNsb3NlPXsoKSA9PiAoZGF5VmlldyA9IGZhbHNlKX1cbiAgICAgICAgb246ZXZlbnQtY2xpY2tcbiAgICAgICAgb246ZXZlbnQtbW91c2VvdmVyXG4gICAgICAgIG9uOmV2ZW50LWNvbnRleHRcbiAgICAgICAgb246ZXZlbnRcbiAgICAvPlxuey9pZn1cblxuPHN0eWxlPlxuICAgICNjYWxlbmRhci1jb250YWluZXIueWVhci12aWV3IHtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cbiAgICAjY2FsZW5kYXItY29udGFpbmVyLmZhbnRhc3ktY2FsZW5kYXIuZnVsbC12aWV3IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHBhZGRpbmc6IDAgMC41cmVtIDAuNXJlbTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZmxvdzogY29sdW1uO1xuICAgIH1cblxuICAgIC5mYW50YXN5LWNhbGVuZGFyLmZ1bGwtdmlldyAubW9udGgtY29udGFpbmVyIHtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxuICAgIC5tb250aC1jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgIH1cbiAgICAubW9udGgtdmlldyB7XG4gICAgICAgIGZsZXgtZ3JvdzogMjtcbiAgICB9XG4gICAgLndlZWtzIHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcbiAgICB9XG4gICAgLndlZWstbnVtLWNvbnRhaW5lciB7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KHZhcigtLWNhbGVuZGFyLXJvd3MpLCBhdXRvKTtcbiAgICAgICAgcGFkZGluZzogMC4yNXJlbSAwO1xuICAgIH1cbiAgICAud2Vlay1udW0ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yLXRleHQtZGF5KTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBmb250LXNpemU6IDAuOGVtO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHBhZGRpbmc6IDJweDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgfVxuICAgIC53ZWVrZGF5cyB7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KHZhcigtLWNhbGVuZGFyLWNvbHVtbnMpLCAxZnIpO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gICAgICAgIHBhZGRpbmc6IDAgMC4yNXJlbTtcbiAgICAgICAgZ2FwOiAycHg7XG4gICAgfVxuICAgIC53ZWVrZGF5IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYmFja2dyb3VuZC1oZWFkaW5nKTtcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yLXRleHQtaGVhZGluZyk7XG4gICAgICAgIGZvbnQtc2l6ZTogMC42ZW07XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgICAgIHBhZGRpbmc6IDRweDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICB9XG4gICAgaHIge1xuICAgICAgICBtYXJnaW46IDFyZW0gMDtcbiAgICB9XG5cbiAgICA6Z2xvYmFsKC5tb29uLWNvbnRhaW5lcikge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG48L3N0eWxlPlxuIiwgImltcG9ydCB7IHJlbmFtZSB9IGZyb20gXCJmc1wiO1xuaW1wb3J0IHtcbiAgICBDb21wb25lbnQsXG4gICAgVEFic3RyYWN0RmlsZSxcbiAgICBURmlsZSxcbiAgICBURm9sZGVyLFxuICAgIFZhdWx0LFxuICAgIGdldEFsbFRhZ3Ncbn0gZnJvbSBcIm9ic2lkaWFuXCI7XG5pbXBvcnQgdHlwZSB7IENhbGVuZGFyLCBFdmVudCB9IGZyb20gXCJzcmMvQHR5cGVzXCI7XG5pbXBvcnQgdHlwZSBGYW50YXN5Q2FsZW5kYXIgZnJvbSBcInNyYy9tYWluXCI7XG4vL2hhdmUgdG8gaWdub3JlIHVudGlsIGkgZml4IHR5cGluZyBpc3N1ZVxuLy9AdHMtZXhwZWN0LWVycm9yXG5pbXBvcnQgV29ya2VyLCB7XG4gICAgQ2FsZW5kYXJzTWVzc2FnZSxcbiAgICBHZXRGaWxlQ2FjaGVNZXNzYWdlLFxuICAgIEZpbGVDYWNoZU1lc3NhZ2UsXG4gICAgT3B0aW9uc01lc3NhZ2UsXG4gICAgUXVldWVNZXNzYWdlLFxuICAgIFVwZGF0ZUV2ZW50TWVzc2FnZSxcbiAgICBTYXZlTWVzc2FnZSxcbiAgICBSZW5hbWVNZXNzYWdlXG59IGZyb20gXCIuL3dhdGNoZXIud29ya2VyXCI7XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBpbnRlcmZhY2UgV29ya2VyIHtcbiAgICAgICAgcG9zdE1lc3NhZ2U8VD4obWVzc2FnZTogVCwgdHJhbnNmZXI/OiBUcmFuc2ZlcmFibGVbXSk6IHZvaWQ7XG4gICAgfVxufVxuXG5leHBvcnQgdHlwZSBDYWxlbmRhckV2ZW50VHJlZSA9IE1hcDxzdHJpbmcsIE1hcDxudW1iZXIsIFNldDxudW1iZXI+Pj47XG5cbmV4cG9ydCBjbGFzcyBXYXRjaGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBwYXJzaW5nOiBTZXQ8c3RyaW5nPiA9IG5ldyBTZXQoKTtcbiAgICBnZXQgY2FsZW5kYXJzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wbHVnaW4uZGF0YS5jYWxlbmRhcnM7XG4gICAgfVxuICAgIGdldCBtZXRhZGF0YUNhY2hlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wbHVnaW4uYXBwLm1ldGFkYXRhQ2FjaGU7XG4gICAgfVxuICAgIGdldCB2YXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGx1Z2luLmFwcC52YXVsdDtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHVibGljIHBsdWdpbjogRmFudGFzeUNhbGVuZGFyKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgdHJlZTogQ2FsZW5kYXJFdmVudFRyZWUgPSBuZXcgTWFwKCk7XG5cbiAgICB3b3JrZXIgPSBuZXcgV29ya2VyKCk7XG4gICAgb25sb2FkKCkge1xuICAgICAgICAvKiogU2VuZCB0aGUgd29ya2VyIHRoZSBjYWxlbmRhcnMgc28gSSBkb24ndCBoYXZlIHRvIHdpdGggZXZlcnkgbWVzc2FnZS4gKi9cbiAgICAgICAgdGhpcy53b3JrZXIucG9zdE1lc3NhZ2U8Q2FsZW5kYXJzTWVzc2FnZT4oe1xuICAgICAgICAgICAgdHlwZTogXCJjYWxlbmRhcnNcIixcbiAgICAgICAgICAgIGNhbGVuZGFyczogdGhpcy5jYWxlbmRhcnNcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJFdmVudChcbiAgICAgICAgICAgIHRoaXMucGx1Z2luLmFwcC53b3Jrc3BhY2Uub24oXCJmYW50YXN5LWNhbGVuZGFycy11cGRhdGVkXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLndvcmtlci5wb3N0TWVzc2FnZTxDYWxlbmRhcnNNZXNzYWdlPih7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiY2FsZW5kYXJzXCIsXG4gICAgICAgICAgICAgICAgICAgIGNhbGVuZGFyczogdGhpcy5jYWxlbmRhcnNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICAgIC8qKiBTZW5kIHRoZSB3b3JrZXJzIHRoZSBvcHRpb25zIHNvIEkgZG9uJ3QgaGF2ZSB0byB3aXRoIGV2ZXJ5IG1lc3NhZ2UuICovXG4gICAgICAgIHRoaXMud29ya2VyLnBvc3RNZXNzYWdlPE9wdGlvbnNNZXNzYWdlPih7XG4gICAgICAgICAgICB0eXBlOiBcIm9wdGlvbnNcIixcbiAgICAgICAgICAgIHBhcnNlVGl0bGU6IHRoaXMucGx1Z2luLmRhdGEucGFyc2VEYXRlcyxcbiAgICAgICAgICAgIGZvcm1hdDogdGhpcy5wbHVnaW4uZm9ybWF0LFxuICAgICAgICAgICAgZGVmYXVsdENhbGVuZGFyOiB0aGlzLnBsdWdpbi5kZWZhdWx0Q2FsZW5kYXI/Lm5hbWUsXG4gICAgICAgICAgICBzdXBwb3J0c1RpbWVsaW5lczogdGhpcy5wbHVnaW4uZGF0YS5zdXBwb3J0VGltZWxpbmVzLFxuICAgICAgICAgICAgdGltZWxpbmVUYWc6IHRoaXMucGx1Z2luLmRhdGEudGltZWxpbmVUYWdcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJFdmVudChcbiAgICAgICAgICAgIHRoaXMucGx1Z2luLmFwcC53b3Jrc3BhY2Uub24oXG4gICAgICAgICAgICAgICAgXCJmYW50YXN5LWNhbGVuZGFyLXNldHRpbmdzLWNoYW5nZVwiLFxuICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy53b3JrZXIucG9zdE1lc3NhZ2U8T3B0aW9uc01lc3NhZ2U+KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwib3B0aW9uc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VUaXRsZTogdGhpcy5wbHVnaW4uZGF0YS5wYXJzZURhdGVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiB0aGlzLnBsdWdpbi5mb3JtYXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q2FsZW5kYXI6IHRoaXMucGx1Z2luLmRlZmF1bHRDYWxlbmRhcj8ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1cHBvcnRzVGltZWxpbmVzOiB0aGlzLnBsdWdpbi5kYXRhLnN1cHBvcnRUaW1lbGluZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lbGluZVRhZzogdGhpcy5wbHVnaW4uZGF0YS50aW1lbGluZVRhZ1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApXG4gICAgICAgICk7XG5cbiAgICAgICAgLyoqIE1ldGFkYXRhIGZvciBhIGZpbGUgaGFzIGNoYW5nZWQgYW5kIHRoZSBmaWxlIHNob3VsZCBiZSBjaGVja2VkLiAqL1xuICAgICAgICB0aGlzLnJlZ2lzdGVyRXZlbnQoXG4gICAgICAgICAgICB0aGlzLm1ldGFkYXRhQ2FjaGUub24oXCJjaGFuZ2VkXCIsIChmaWxlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGFydFBhcnNpbmcoW2ZpbGUucGF0aF0pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgICAgLyoqIEEgZmlsZSBoYXMgYmVlbiByZW5hbWVkIGFuZCBzaG91bGQgYmUgY2hlY2tlZCBmb3IgZXZlbnRzLlxuICAgICAgICAgKiBDb3VsZCB0aGlzIGJlIGhhc2hlZD9cbiAgICAgICAgICovXG4gICAgICAgIC8vVE9ETzogUmVmYWN0b3JcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KFxuICAgICAgICAgICAgdGhpcy52YXVsdC5vbihcInJlbmFtZVwiLCAoYWJzdHJhY3RGaWxlLCBvbGRQYXRoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNhbGVuZGFycy5sZW5ndGgpIHJldHVybjtcbiAgICAgICAgICAgICAgICBpZiAoIShhYnN0cmFjdEZpbGUgaW5zdGFuY2VvZiBURmlsZSkpIHJldHVybjtcbiAgICAgICAgICAgICAgICB0aGlzLndvcmtlci5wb3N0TWVzc2FnZTxSZW5hbWVNZXNzYWdlPih7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwicmVuYW1lXCIsXG4gICAgICAgICAgICAgICAgICAgIGZpbGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IGFic3RyYWN0RmlsZS5wYXRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgYmFzZW5hbWU6IGFic3RyYWN0RmlsZS5iYXNlbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9sZFBhdGhcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgc291cmNlQ2FsZW5kYXJzOiB0aGlzLmNhbGVuZGFyc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgICAgLyoqIEEgZmlsZSBoYXMgYmVlbiBkZWxldGVkIGFuZCBzaG91bGQgYmUgY2hlY2tlZCBmb3IgZXZlbnRzIHRvIHVubGluay4gKi9cbiAgICAgICAgLy9UT0RPOiBSZWZhY3RvclxuICAgICAgICB0aGlzLnJlZ2lzdGVyRXZlbnQoXG4gICAgICAgICAgICB0aGlzLnZhdWx0Lm9uKFwiZGVsZXRlXCIsIChhYnN0cmFjdEZpbGUpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIShhYnN0cmFjdEZpbGUgaW5zdGFuY2VvZiBURmlsZSkpIHJldHVybjtcblxuICAgICAgICAgICAgICAgIGZvciAobGV0IGNhbGVuZGFyIG9mIHRoaXMuY2FsZW5kYXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGV2ZW50IG9mIGNhbGVuZGFyLmV2ZW50cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFldmVudC5ub3RlKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChldmVudC5ub3RlID09PSBhYnN0cmFjdEZpbGUucGF0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50Lm5vdGUgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMucGx1Z2luLnNhdmVDYWxlbmRhcigpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgICAvL3dvcmtlciBtZXNzYWdlc1xuICAgICAgICAvKiogVGhlIHdvcmtlciB3aWxsIGFzayBmb3IgZmlsZSBpbmZvcm1hdGlvbiBmcm9tIGZpbGVzIGluIGl0cyBxdWV1ZSBoZXJlICovXG4gICAgICAgIHRoaXMud29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcIm1lc3NhZ2VcIixcbiAgICAgICAgICAgIGFzeW5jIChldmVudDogTWVzc2FnZUV2ZW50PEdldEZpbGVDYWNoZU1lc3NhZ2U+KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGV2ZW50LmRhdGEudHlwZSA9PSBcImdldFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcGF0aCB9ID0gZXZlbnQuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmlsZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5hcHAudmF1bHQuZ2V0QWJzdHJhY3RGaWxlQnlQYXRoKHBhdGgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmlsZSBpbnN0YW5jZW9mIFRGaWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjYWNoZSA9IHRoaXMubWV0YWRhdGFDYWNoZS5nZXRGaWxlQ2FjaGUoZmlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhbGxUYWdzID0gZ2V0QWxsVGFncyhjYWNoZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy52YXVsdC5jYWNoZWRSZWFkKGZpbGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9UT0RPOiBBZGQgaW4gZmlsZSBkYXRhIHBhcnNpbmcgZm9yIGV2ZW50c1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9UT0RPOiBFLmcuLCB0aW1lbGluZXNcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMud29ya2VyLnBvc3RNZXNzYWdlPEZpbGVDYWNoZU1lc3NhZ2U+KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImZpbGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU6IHsgcGF0aDogZmlsZS5wYXRoLCBiYXNlbmFtZTogZmlsZS5iYXNlbmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbFRhZ3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZmlsZSBpbnN0YW5jZW9mIFRGb2xkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhdGhzID0gZmlsZS5jaGlsZHJlbi5tYXAoKGYpID0+IGYucGF0aCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0UGFyc2luZyhwYXRocyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgLyoqIFRoZSB3b3JrZXIgaGFzIGZvdW5kIGFuIGV2ZW50IHRoYXQgc2hvdWxkIGJlIHVwZGF0ZWQuICovXG4gICAgICAgIHRoaXMud29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcIm1lc3NhZ2VcIixcbiAgICAgICAgICAgIGFzeW5jIChldnQ6IE1lc3NhZ2VFdmVudDxVcGRhdGVFdmVudE1lc3NhZ2U+KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGV2dC5kYXRhLnR5cGUgPT0gXCJ1cGRhdGVcIikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGlkLCBpbmRleCwgZXZlbnQsIG9yaWdpbmFsIH0gPSBldnQuZGF0YTtcblxuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYWxlbmRhciA9IHRoaXMuY2FsZW5kYXJzLmZpbmQoKGMpID0+IGMuaWQgPT0gaWQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWNhbGVuZGFyKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIGNhbGVuZGFyLmV2ZW50cy5zcGxpY2UoaW5kZXgsIGluZGV4ID49IDAgPyAxIDogMCwgZXZlbnQpO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkVG9UcmVlKGNhbGVuZGFyLCBldmVudCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcmlnaW5hbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRUb1RyZWUoY2FsZW5kYXIsIG9yaWdpbmFsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcblxuICAgICAgICAvKiogVGhlIHdvcmtlciBoYXMgcGFyc2VkIGFsbCBmaWxlcyBpbiBpdHMgcXVldWUuICovXG4gICAgICAgIHRoaXMud29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcIm1lc3NhZ2VcIixcbiAgICAgICAgICAgIGFzeW5jIChldnQ6IE1lc3NhZ2VFdmVudDxTYXZlTWVzc2FnZT4pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXZ0LmRhdGEudHlwZSA9PSBcInNhdmVcIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsdWdpbi5hcHAud29ya3NwYWNlLnRyaWdnZXIoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZhbnRhc3ktY2FsZW5kYXJzLWV2ZW50LXVwZGF0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50cmVlXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudHJlZSA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5wbHVnaW4uc2F2ZUNhbGVuZGFyKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICBpZiAoIXRoaXMuY2FsZW5kYXJzLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgICAvL1RPRE86IEFkZCBwZXItY2FsZW5kYXIgcm9vdCBwYXRoLlxuICAgICAgICBjb25zdCBmb2xkZXIgPSB0aGlzLnZhdWx0LmdldEFic3RyYWN0RmlsZUJ5UGF0aCh0aGlzLnBsdWdpbi5kYXRhLnBhdGgpO1xuICAgICAgICBpZiAoIWZvbGRlciB8fCAhKGZvbGRlciBpbnN0YW5jZW9mIFRGb2xkZXIpKSByZXR1cm47XG4gICAgICAgIC8qIGZvciAoY29uc3QgcGF0aCBvZiB0aGlzLmdldEZpbGVzKGZvbGRlcikpIHBhcnNpbmcuYWRkKHBhdGgpOyAqL1xuICAgICAgICB0aGlzLnN0YXJ0UGFyc2luZyhmb2xkZXIuY2hpbGRyZW4ubWFwKChmKSA9PiBmLnBhdGgpKTtcbiAgICB9XG4gICAgYWRkVG9UcmVlKGNhbGVuZGFyOiBDYWxlbmRhciwgZXZlbnQ6IEV2ZW50KSB7XG4gICAgICAgIGlmICghdGhpcy50cmVlLmhhcyhjYWxlbmRhci5pZCkpIHtcbiAgICAgICAgICAgIHRoaXMudHJlZS5zZXQoY2FsZW5kYXIuaWQsIG5ldyBNYXAoKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2FsZW5kYXJUcmVlID0gdGhpcy50cmVlLmdldChjYWxlbmRhci5pZCk7XG5cbiAgICAgICAgaWYgKCFjYWxlbmRhclRyZWUuaGFzKGV2ZW50LmRhdGUueWVhcikpIHtcbiAgICAgICAgICAgIGNhbGVuZGFyVHJlZS5zZXQoZXZlbnQuZGF0ZS55ZWFyLCBuZXcgU2V0KCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgeWVhclNldCA9IGNhbGVuZGFyVHJlZS5nZXQoZXZlbnQuZGF0ZS55ZWFyKTtcblxuICAgICAgICB0aGlzLnRyZWUuc2V0KFxuICAgICAgICAgICAgY2FsZW5kYXIuaWQsXG4gICAgICAgICAgICBjYWxlbmRhclRyZWUuc2V0KGV2ZW50LmRhdGUueWVhciwgeWVhclNldC5hZGQoZXZlbnQuZGF0ZS5tb250aCkpXG4gICAgICAgICk7XG4gICAgfVxuICAgIHN0YXJ0UGFyc2luZyhwYXRoczogc3RyaW5nW10pIHtcbiAgICAgICAgdGhpcy53b3JrZXIucG9zdE1lc3NhZ2U8UXVldWVNZXNzYWdlPih7XG4gICAgICAgICAgICB0eXBlOiBcInF1ZXVlXCIsXG4gICAgICAgICAgICBwYXRoc1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyogICAgIGdldEZpbGVzKGZvbGRlcjogVEFic3RyYWN0RmlsZSk6IHN0cmluZ1tdIHtcbiAgICAgICAgaWYgKCF0aGlzLnBsdWdpbi5kYXRhLmF1dG9QYXJzZSkgcmV0dXJuIFtdO1xuICAgICAgICBsZXQgZmlsZXMgPSBbXTtcbiAgICAgICAgaWYgKGZvbGRlciBpbnN0YW5jZW9mIFRGb2xkZXIpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgZm9sZGVyLmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgZmlsZXMucHVzaCguLi50aGlzLmdldEZpbGVzKGNoaWxkKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZvbGRlciBpbnN0YW5jZW9mIFRGaWxlKSB7XG4gICAgICAgICAgICBmaWxlcy5wdXNoKGZvbGRlci5wYXRoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmlsZXM7XG4gICAgfSAqL1xuXG4gICAgb251bmxvYWQoKSB7XG4gICAgICAgIHRoaXMud29ya2VyLnRlcm1pbmF0ZSgpO1xuICAgICAgICB0aGlzLndvcmtlciA9IG51bGw7XG4gICAgfVxufVxuIiwgIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5saW5lV29ya2VyKHNjcmlwdFRleHQpIHtcbiAgbGV0IGJsb2IgPSBuZXcgQmxvYihbc2NyaXB0VGV4dF0sIHt0eXBlOiAndGV4dC9qYXZhc2NyaXB0J30pO1xuICBsZXQgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcbiAgbGV0IHdvcmtlciA9IG5ldyBXb3JrZXIodXJsKTtcbiAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICByZXR1cm4gd29ya2VyO1xufVxuIiwgImltcG9ydCBpbmxpbmVXb3JrZXIgZnJvbSAnX19pbmxpbmUtd29ya2VyJ1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gV29ya2VyKCkge1xuICByZXR1cm4gaW5saW5lV29ya2VyKFwidmFyIGVlPShlLHQpPT4oKT0+KHR8fGUoKHQ9e2V4cG9ydHM6e319KS5leHBvcnRzLHQpLHQuZXhwb3J0cyk7dmFyIFJlPWVlKEllPT57SWUuZW50aXR5TWFwPXtsdDpcXFwiPFxcXCIsZ3Q6XFxcIj5cXFwiLGFtcDpcXFwiJlxcXCIscXVvdDonXFxcIicsYXBvczpcXFwiJ1xcXCIsQWdyYXZlOlxcXCJcXFxceEMwXFxcIixBYWN1dGU6XFxcIlxcXFx4QzFcXFwiLEFjaXJjOlxcXCJcXFxceEMyXFxcIixBdGlsZGU6XFxcIlxcXFx4QzNcXFwiLEF1bWw6XFxcIlxcXFx4QzRcXFwiLEFyaW5nOlxcXCJcXFxceEM1XFxcIixBRWxpZzpcXFwiXFxcXHhDNlxcXCIsQ2NlZGlsOlxcXCJcXFxceEM3XFxcIixFZ3JhdmU6XFxcIlxcXFx4QzhcXFwiLEVhY3V0ZTpcXFwiXFxcXHhDOVxcXCIsRWNpcmM6XFxcIlxcXFx4Q0FcXFwiLEV1bWw6XFxcIlxcXFx4Q0JcXFwiLElncmF2ZTpcXFwiXFxcXHhDQ1xcXCIsSWFjdXRlOlxcXCJcXFxceENEXFxcIixJY2lyYzpcXFwiXFxcXHhDRVxcXCIsSXVtbDpcXFwiXFxcXHhDRlxcXCIsRVRIOlxcXCJcXFxceEQwXFxcIixOdGlsZGU6XFxcIlxcXFx4RDFcXFwiLE9ncmF2ZTpcXFwiXFxcXHhEMlxcXCIsT2FjdXRlOlxcXCJcXFxceEQzXFxcIixPY2lyYzpcXFwiXFxcXHhENFxcXCIsT3RpbGRlOlxcXCJcXFxceEQ1XFxcIixPdW1sOlxcXCJcXFxceEQ2XFxcIixPc2xhc2g6XFxcIlxcXFx4RDhcXFwiLFVncmF2ZTpcXFwiXFxcXHhEOVxcXCIsVWFjdXRlOlxcXCJcXFxceERBXFxcIixVY2lyYzpcXFwiXFxcXHhEQlxcXCIsVXVtbDpcXFwiXFxcXHhEQ1xcXCIsWWFjdXRlOlxcXCJcXFxceEREXFxcIixUSE9STjpcXFwiXFxcXHhERVxcXCIsc3psaWc6XFxcIlxcXFx4REZcXFwiLGFncmF2ZTpcXFwiXFxcXHhFMFxcXCIsYWFjdXRlOlxcXCJcXFxceEUxXFxcIixhY2lyYzpcXFwiXFxcXHhFMlxcXCIsYXRpbGRlOlxcXCJcXFxceEUzXFxcIixhdW1sOlxcXCJcXFxceEU0XFxcIixhcmluZzpcXFwiXFxcXHhFNVxcXCIsYWVsaWc6XFxcIlxcXFx4RTZcXFwiLGNjZWRpbDpcXFwiXFxcXHhFN1xcXCIsZWdyYXZlOlxcXCJcXFxceEU4XFxcIixlYWN1dGU6XFxcIlxcXFx4RTlcXFwiLGVjaXJjOlxcXCJcXFxceEVBXFxcIixldW1sOlxcXCJcXFxceEVCXFxcIixpZ3JhdmU6XFxcIlxcXFx4RUNcXFwiLGlhY3V0ZTpcXFwiXFxcXHhFRFxcXCIsaWNpcmM6XFxcIlxcXFx4RUVcXFwiLGl1bWw6XFxcIlxcXFx4RUZcXFwiLGV0aDpcXFwiXFxcXHhGMFxcXCIsbnRpbGRlOlxcXCJcXFxceEYxXFxcIixvZ3JhdmU6XFxcIlxcXFx4RjJcXFwiLG9hY3V0ZTpcXFwiXFxcXHhGM1xcXCIsb2NpcmM6XFxcIlxcXFx4RjRcXFwiLG90aWxkZTpcXFwiXFxcXHhGNVxcXCIsb3VtbDpcXFwiXFxcXHhGNlxcXCIsb3NsYXNoOlxcXCJcXFxceEY4XFxcIix1Z3JhdmU6XFxcIlxcXFx4RjlcXFwiLHVhY3V0ZTpcXFwiXFxcXHhGQVxcXCIsdWNpcmM6XFxcIlxcXFx4RkJcXFwiLHV1bWw6XFxcIlxcXFx4RkNcXFwiLHlhY3V0ZTpcXFwiXFxcXHhGRFxcXCIsdGhvcm46XFxcIlxcXFx4RkVcXFwiLHl1bWw6XFxcIlxcXFx4RkZcXFwiLG5ic3A6XFxcIlxcXFx4QTBcXFwiLGlleGNsOlxcXCJcXFxceEExXFxcIixjZW50OlxcXCJcXFxceEEyXFxcIixwb3VuZDpcXFwiXFxcXHhBM1xcXCIsY3VycmVuOlxcXCJcXFxceEE0XFxcIix5ZW46XFxcIlxcXFx4QTVcXFwiLGJydmJhcjpcXFwiXFxcXHhBNlxcXCIsc2VjdDpcXFwiXFxcXHhBN1xcXCIsdW1sOlxcXCJcXFxceEE4XFxcIixjb3B5OlxcXCJcXFxceEE5XFxcIixvcmRmOlxcXCJcXFxceEFBXFxcIixsYXF1bzpcXFwiXFxcXHhBQlxcXCIsbm90OlxcXCJcXFxceEFDXFxcIixzaHk6XFxcIlxcXFx4QURcXFxceEFEXFxcIixyZWc6XFxcIlxcXFx4QUVcXFwiLG1hY3I6XFxcIlxcXFx4QUZcXFwiLGRlZzpcXFwiXFxcXHhCMFxcXCIscGx1c21uOlxcXCJcXFxceEIxXFxcIixzdXAyOlxcXCJcXFxceEIyXFxcIixzdXAzOlxcXCJcXFxceEIzXFxcIixhY3V0ZTpcXFwiXFxcXHhCNFxcXCIsbWljcm86XFxcIlxcXFx4QjVcXFwiLHBhcmE6XFxcIlxcXFx4QjZcXFwiLG1pZGRvdDpcXFwiXFxcXHhCN1xcXCIsY2VkaWw6XFxcIlxcXFx4QjhcXFwiLHN1cDE6XFxcIlxcXFx4QjlcXFwiLG9yZG06XFxcIlxcXFx4QkFcXFwiLHJhcXVvOlxcXCJcXFxceEJCXFxcIixmcmFjMTQ6XFxcIlxcXFx4QkNcXFwiLGZyYWMxMjpcXFwiXFxcXHhCRFxcXCIsZnJhYzM0OlxcXCJcXFxceEJFXFxcIixpcXVlc3Q6XFxcIlxcXFx4QkZcXFwiLHRpbWVzOlxcXCJcXFxceEQ3XFxcIixkaXZpZGU6XFxcIlxcXFx4RjdcXFwiLGZvcmFsbDpcXFwiXFxcXHUyMjAwXFxcIixwYXJ0OlxcXCJcXFxcdTIyMDJcXFwiLGV4aXN0OlxcXCJcXFxcdTIyMDNcXFwiLGVtcHR5OlxcXCJcXFxcdTIyMDVcXFwiLG5hYmxhOlxcXCJcXFxcdTIyMDdcXFwiLGlzaW46XFxcIlxcXFx1MjIwOFxcXCIsbm90aW46XFxcIlxcXFx1MjIwOVxcXCIsbmk6XFxcIlxcXFx1MjIwQlxcXCIscHJvZDpcXFwiXFxcXHUyMjBGXFxcIixzdW06XFxcIlxcXFx1MjIxMVxcXCIsbWludXM6XFxcIlxcXFx1MjIxMlxcXCIsbG93YXN0OlxcXCJcXFxcdTIyMTdcXFwiLHJhZGljOlxcXCJcXFxcdTIyMUFcXFwiLHByb3A6XFxcIlxcXFx1MjIxRFxcXCIsaW5maW46XFxcIlxcXFx1MjIxRVxcXCIsYW5nOlxcXCJcXFxcdTIyMjBcXFwiLGFuZDpcXFwiXFxcXHUyMjI3XFxcIixvcjpcXFwiXFxcXHUyMjI4XFxcIixjYXA6XFxcIlxcXFx1MjIyOVxcXCIsY3VwOlxcXCJcXFxcdTIyMkFcXFwiLGludDpcXFwiXFxcXHUyMjJCXFxcIix0aGVyZTQ6XFxcIlxcXFx1MjIzNFxcXCIsc2ltOlxcXCJcXFxcdTIyM0NcXFwiLGNvbmc6XFxcIlxcXFx1MjI0NVxcXCIsYXN5bXA6XFxcIlxcXFx1MjI0OFxcXCIsbmU6XFxcIlxcXFx1MjI2MFxcXCIsZXF1aXY6XFxcIlxcXFx1MjI2MVxcXCIsbGU6XFxcIlxcXFx1MjI2NFxcXCIsZ2U6XFxcIlxcXFx1MjI2NVxcXCIsc3ViOlxcXCJcXFxcdTIyODJcXFwiLHN1cDpcXFwiXFxcXHUyMjgzXFxcIixuc3ViOlxcXCJcXFxcdTIyODRcXFwiLHN1YmU6XFxcIlxcXFx1MjI4NlxcXCIsc3VwZTpcXFwiXFxcXHUyMjg3XFxcIixvcGx1czpcXFwiXFxcXHUyMjk1XFxcIixvdGltZXM6XFxcIlxcXFx1MjI5N1xcXCIscGVycDpcXFwiXFxcXHUyMkE1XFxcIixzZG90OlxcXCJcXFxcdTIyQzVcXFwiLEFscGhhOlxcXCJcXFxcdTAzOTFcXFwiLEJldGE6XFxcIlxcXFx1MDM5MlxcXCIsR2FtbWE6XFxcIlxcXFx1MDM5M1xcXCIsRGVsdGE6XFxcIlxcXFx1MDM5NFxcXCIsRXBzaWxvbjpcXFwiXFxcXHUwMzk1XFxcIixaZXRhOlxcXCJcXFxcdTAzOTZcXFwiLEV0YTpcXFwiXFxcXHUwMzk3XFxcIixUaGV0YTpcXFwiXFxcXHUwMzk4XFxcIixJb3RhOlxcXCJcXFxcdTAzOTlcXFwiLEthcHBhOlxcXCJcXFxcdTAzOUFcXFwiLExhbWJkYTpcXFwiXFxcXHUwMzlCXFxcIixNdTpcXFwiXFxcXHUwMzlDXFxcIixOdTpcXFwiXFxcXHUwMzlEXFxcIixYaTpcXFwiXFxcXHUwMzlFXFxcIixPbWljcm9uOlxcXCJcXFxcdTAzOUZcXFwiLFBpOlxcXCJcXFxcdTAzQTBcXFwiLFJobzpcXFwiXFxcXHUwM0ExXFxcIixTaWdtYTpcXFwiXFxcXHUwM0EzXFxcIixUYXU6XFxcIlxcXFx1MDNBNFxcXCIsVXBzaWxvbjpcXFwiXFxcXHUwM0E1XFxcIixQaGk6XFxcIlxcXFx1MDNBNlxcXCIsQ2hpOlxcXCJcXFxcdTAzQTdcXFwiLFBzaTpcXFwiXFxcXHUwM0E4XFxcIixPbWVnYTpcXFwiXFxcXHUwM0E5XFxcIixhbHBoYTpcXFwiXFxcXHUwM0IxXFxcIixiZXRhOlxcXCJcXFxcdTAzQjJcXFwiLGdhbW1hOlxcXCJcXFxcdTAzQjNcXFwiLGRlbHRhOlxcXCJcXFxcdTAzQjRcXFwiLGVwc2lsb246XFxcIlxcXFx1MDNCNVxcXCIsemV0YTpcXFwiXFxcXHUwM0I2XFxcIixldGE6XFxcIlxcXFx1MDNCN1xcXCIsdGhldGE6XFxcIlxcXFx1MDNCOFxcXCIsaW90YTpcXFwiXFxcXHUwM0I5XFxcIixrYXBwYTpcXFwiXFxcXHUwM0JBXFxcIixsYW1iZGE6XFxcIlxcXFx1MDNCQlxcXCIsbXU6XFxcIlxcXFx1MDNCQ1xcXCIsbnU6XFxcIlxcXFx1MDNCRFxcXCIseGk6XFxcIlxcXFx1MDNCRVxcXCIsb21pY3JvbjpcXFwiXFxcXHUwM0JGXFxcIixwaTpcXFwiXFxcXHUwM0MwXFxcIixyaG86XFxcIlxcXFx1MDNDMVxcXCIsc2lnbWFmOlxcXCJcXFxcdTAzQzJcXFwiLHNpZ21hOlxcXCJcXFxcdTAzQzNcXFwiLHRhdTpcXFwiXFxcXHUwM0M0XFxcIix1cHNpbG9uOlxcXCJcXFxcdTAzQzVcXFwiLHBoaTpcXFwiXFxcXHUwM0M2XFxcIixjaGk6XFxcIlxcXFx1MDNDN1xcXCIscHNpOlxcXCJcXFxcdTAzQzhcXFwiLG9tZWdhOlxcXCJcXFxcdTAzQzlcXFwiLHRoZXRhc3ltOlxcXCJcXFxcdTAzRDFcXFwiLHVwc2loOlxcXCJcXFxcdTAzRDJcXFwiLHBpdjpcXFwiXFxcXHUwM0Q2XFxcIixPRWxpZzpcXFwiXFxcXHUwMTUyXFxcIixvZWxpZzpcXFwiXFxcXHUwMTUzXFxcIixTY2Fyb246XFxcIlxcXFx1MDE2MFxcXCIsc2Nhcm9uOlxcXCJcXFxcdTAxNjFcXFwiLFl1bWw6XFxcIlxcXFx1MDE3OFxcXCIsZm5vZjpcXFwiXFxcXHUwMTkyXFxcIixjaXJjOlxcXCJcXFxcdTAyQzZcXFwiLHRpbGRlOlxcXCJcXFxcdTAyRENcXFwiLGVuc3A6XFxcIlxcXFx1MjAwMlxcXCIsZW1zcDpcXFwiXFxcXHUyMDAzXFxcIix0aGluc3A6XFxcIlxcXFx1MjAwOVxcXCIsenduajpcXFwiXFxcXHUyMDBDXFxcIix6d2o6XFxcIlxcXFx1MjAwRFxcXCIsbHJtOlxcXCJcXFxcdTIwMEVcXFwiLHJsbTpcXFwiXFxcXHUyMDBGXFxcIixuZGFzaDpcXFwiXFxcXHUyMDEzXFxcIixtZGFzaDpcXFwiXFxcXHUyMDE0XFxcIixsc3F1bzpcXFwiXFxcXHUyMDE4XFxcIixyc3F1bzpcXFwiXFxcXHUyMDE5XFxcIixzYnF1bzpcXFwiXFxcXHUyMDFBXFxcIixsZHF1bzpcXFwiXFxcXHUyMDFDXFxcIixyZHF1bzpcXFwiXFxcXHUyMDFEXFxcIixiZHF1bzpcXFwiXFxcXHUyMDFFXFxcIixkYWdnZXI6XFxcIlxcXFx1MjAyMFxcXCIsRGFnZ2VyOlxcXCJcXFxcdTIwMjFcXFwiLGJ1bGw6XFxcIlxcXFx1MjAyMlxcXCIsaGVsbGlwOlxcXCJcXFxcdTIwMjZcXFwiLHBlcm1pbDpcXFwiXFxcXHUyMDMwXFxcIixwcmltZTpcXFwiXFxcXHUyMDMyXFxcIixQcmltZTpcXFwiXFxcXHUyMDMzXFxcIixsc2FxdW86XFxcIlxcXFx1MjAzOVxcXCIscnNhcXVvOlxcXCJcXFxcdTIwM0FcXFwiLG9saW5lOlxcXCJcXFxcdTIwM0VcXFwiLGV1cm86XFxcIlxcXFx1MjBBQ1xcXCIsdHJhZGU6XFxcIlxcXFx1MjEyMlxcXCIsbGFycjpcXFwiXFxcXHUyMTkwXFxcIix1YXJyOlxcXCJcXFxcdTIxOTFcXFwiLHJhcnI6XFxcIlxcXFx1MjE5MlxcXCIsZGFycjpcXFwiXFxcXHUyMTkzXFxcIixoYXJyOlxcXCJcXFxcdTIxOTRcXFwiLGNyYXJyOlxcXCJcXFxcdTIxQjVcXFwiLGxjZWlsOlxcXCJcXFxcdTIzMDhcXFwiLHJjZWlsOlxcXCJcXFxcdTIzMDlcXFwiLGxmbG9vcjpcXFwiXFxcXHUyMzBBXFxcIixyZmxvb3I6XFxcIlxcXFx1MjMwQlxcXCIsbG96OlxcXCJcXFxcdTI1Q0FcXFwiLHNwYWRlczpcXFwiXFxcXHUyNjYwXFxcIixjbHViczpcXFwiXFxcXHUyNjYzXFxcIixoZWFydHM6XFxcIlxcXFx1MjY2NVxcXCIsZGlhbXM6XFxcIlxcXFx1MjY2NlxcXCJ9fSk7dmFyIFBlPWVlKHBlPT57dmFyIGZlPS9bQS1aX2EtelxcXFx4QzAtXFxcXHhENlxcXFx4RDgtXFxcXHhGNlxcXFx1MDBGOC1cXFxcdTAyRkZcXFxcdTAzNzAtXFxcXHUwMzdEXFxcXHUwMzdGLVxcXFx1MUZGRlxcXFx1MjAwQy1cXFxcdTIwMERcXFxcdTIwNzAtXFxcXHUyMThGXFxcXHUyQzAwLVxcXFx1MkZFRlxcXFx1MzAwMS1cXFxcdUQ3RkZcXFxcdUY5MDAtXFxcXHVGRENGXFxcXHVGREYwLVxcXFx1RkZGRF0vLE9lPW5ldyBSZWdFeHAoXFxcIltcXFxcXFxcXC1cXFxcXFxcXC4wLTlcXFwiK2ZlLnNvdXJjZS5zbGljZSgxLC0xKStcXFwiXFxcXFxcXFx1MDBCN1xcXFxcXFxcdTAzMDAtXFxcXFxcXFx1MDM2RlxcXFxcXFxcdTIwM0YtXFxcXFxcXFx1MjA0MF1cXFwiKSxTZT1uZXcgUmVnRXhwKFxcXCJeXFxcIitmZS5zb3VyY2UrT2Uuc291cmNlK1xcXCIqKD86OlxcXCIrZmUuc291cmNlK09lLnNvdXJjZStcXFwiKik/JFxcXCIpLHo9MCxTPTEsJD0yLGo9MyxGPTQsTD01LEc9Nix0ZT03O2Z1bmN0aW9uIFAoZSx0KXt0aGlzLm1lc3NhZ2U9ZSx0aGlzLmxvY2F0b3I9dCxFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSYmRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcyxQKX1QLnByb3RvdHlwZT1uZXcgRXJyb3I7UC5wcm90b3R5cGUubmFtZT1QLm5hbWU7ZnVuY3Rpb24gTWUoKXt9TWUucHJvdG90eXBlPXtwYXJzZTpmdW5jdGlvbihlLHQsbil7dmFyIHI9dGhpcy5kb21CdWlsZGVyO3Iuc3RhcnREb2N1bWVudCgpLEZlKHQsdD17fSksdnQoZSx0LG4scix0aGlzLmVycm9ySGFuZGxlciksci5lbmREb2N1bWVudCgpfX07ZnVuY3Rpb24gdnQoZSx0LG4scixpKXtmdW5jdGlvbiBhKHYpe2lmKHY+NjU1MzUpe3YtPTY1NTM2O3ZhciBDPTU1Mjk2Kyh2Pj4xMCksZHQ9NTYzMjArKHYmMTAyMyk7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoQyxkdCl9ZWxzZSByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSh2KX1mdW5jdGlvbiBzKHYpe3ZhciBDPXYuc2xpY2UoMSwtMSk7cmV0dXJuIEMgaW4gbj9uW0NdOkMuY2hhckF0KDApPT09XFxcIiNcXFwiP2EocGFyc2VJbnQoQy5zdWJzdHIoMSkucmVwbGFjZShcXFwieFxcXCIsXFxcIjB4XFxcIikpKTooaS5lcnJvcihcXFwiZW50aXR5IG5vdCBmb3VuZDpcXFwiK3YpLHYpfWZ1bmN0aW9uIGModil7aWYodj5tKXt2YXIgQz1lLnN1YnN0cmluZyhtLHYpLnJlcGxhY2UoLyYjP1xcXFx3KzsvZyxzKTtwJiZsKG0pLHIuY2hhcmFjdGVycyhDLDAsdi1tKSxtPXZ9fWZ1bmN0aW9uIGwodixDKXtmb3IoO3Y+PXUmJihDPWguZXhlYyhlKSk7KW89Qy5pbmRleCx1PW8rQ1swXS5sZW5ndGgscC5saW5lTnVtYmVyKys7cC5jb2x1bW5OdW1iZXI9di1vKzF9Zm9yKHZhciBvPTAsdT0wLGg9Ly4qKD86XFxcXHJcXFxcbj98XFxcXG4pfC4qJC9nLHA9ci5sb2NhdG9yLGQ9W3tjdXJyZW50TlNNYXA6dH1dLFQ9e30sbT0wOzspe3RyeXt2YXIgZj1lLmluZGV4T2YoXFxcIjxcXFwiLG0pO2lmKGY8MCl7aWYoIWUuc3Vic3RyKG0pLm1hdGNoKC9eXFxcXHMqJC8pKXt2YXIgQT1yLmRvYyxiZT1BLmNyZWF0ZVRleHROb2RlKGUuc3Vic3RyKG0pKTtBLmFwcGVuZENoaWxkKGJlKSxyLmN1cnJlbnRFbGVtZW50PWJlfXJldHVybn1zd2l0Y2goZj5tJiZjKGYpLGUuY2hhckF0KGYrMSkpe2Nhc2VcXFwiL1xcXCI6dmFyIHk9ZS5pbmRleE9mKFxcXCI+XFxcIixmKzMpLF89ZS5zdWJzdHJpbmcoZisyLHkpLEk9ZC5wb3AoKTt5PDA/KF89ZS5zdWJzdHJpbmcoZisyKS5yZXBsYWNlKC9bXFxcXHM8XS4qLyxcXFwiXFxcIiksaS5lcnJvcihcXFwiZW5kIHRhZyBuYW1lOiBcXFwiK18rXFxcIiBpcyBub3QgY29tcGxldGU6XFxcIitJLnRhZ05hbWUpLHk9ZisxK18ubGVuZ3RoKTpfLm1hdGNoKC9cXFxcczwvKSYmKF89Xy5yZXBsYWNlKC9bXFxcXHM8XS4qLyxcXFwiXFxcIiksaS5lcnJvcihcXFwiZW5kIHRhZyBuYW1lOiBcXFwiK18rXFxcIiBtYXliZSBub3QgY29tcGxldGVcXFwiKSx5PWYrMStfLmxlbmd0aCk7dmFyIF9lPUkubG9jYWxOU01hcCxDZT1JLnRhZ05hbWU9PV8scHQ9Q2V8fEkudGFnTmFtZSYmSS50YWdOYW1lLnRvTG93ZXJDYXNlKCk9PV8udG9Mb3dlckNhc2UoKTtpZihwdCl7aWYoci5lbmRFbGVtZW50KEkudXJpLEkubG9jYWxOYW1lLF8pLF9lKWZvcih2YXIgbXQgaW4gX2Upci5lbmRQcmVmaXhNYXBwaW5nKG10KTtDZXx8aS5mYXRhbEVycm9yKFxcXCJlbmQgdGFnIG5hbWU6IFxcXCIrXytcXFwiIGlzIG5vdCBtYXRjaCB0aGUgY3VycmVudCBzdGFydCB0YWdOYW1lOlxcXCIrSS50YWdOYW1lKX1lbHNlIGQucHVzaChJKTt5Kys7YnJlYWs7Y2FzZVxcXCI/XFxcIjpwJiZsKGYpLHk9RHQoZSxmLHIpO2JyZWFrO2Nhc2VcXFwiIVxcXCI6cCYmbChmKSx5PXl0KGUsZixyLGkpO2JyZWFrO2RlZmF1bHQ6cCYmbChmKTt2YXIgYj1uZXcgTGUsb2U9ZFtkLmxlbmd0aC0xXS5jdXJyZW50TlNNYXAseT1ndChlLGYsYixvZSxzLGkpLHhlPWIubGVuZ3RoO2lmKCFiLmNsb3NlZCYmTnQoZSx5LGIudGFnTmFtZSxUKSYmKGIuY2xvc2VkPSEwLG4ubmJzcHx8aS53YXJuaW5nKFxcXCJ1bmNsb3NlZCB4bWwgYXR0cmlidXRlXFxcIikpLHAmJnhlKXtmb3IodmFyIGh0PVVlKHAse30pLHVlPTA7dWU8eGU7dWUrKyl7dmFyIEFlPWJbdWVdO2woQWUub2Zmc2V0KSxBZS5sb2NhdG9yPVVlKHAse30pfXIubG9jYXRvcj1odCwkZShiLHIsb2UpJiZkLnB1c2goYiksci5sb2NhdG9yPXB9ZWxzZSAkZShiLHIsb2UpJiZkLnB1c2goYik7Yi51cmk9PT1cXFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFxcXCImJiFiLmNsb3NlZD95PUV0KGUseSxiLnRhZ05hbWUscyxyKTp5Kyt9fWNhdGNoKHYpe2lmKHYgaW5zdGFuY2VvZiBQKXRocm93IHY7aS5lcnJvcihcXFwiZWxlbWVudCBwYXJzZSBlcnJvcjogXFxcIit2KSx5PS0xfXk+bT9tPXk6YyhNYXRoLm1heChmLG0pKzEpfX1mdW5jdGlvbiBVZShlLHQpe3JldHVybiB0LmxpbmVOdW1iZXI9ZS5saW5lTnVtYmVyLHQuY29sdW1uTnVtYmVyPWUuY29sdW1uTnVtYmVyLHR9ZnVuY3Rpb24gZ3QoZSx0LG4scixpLGEpe2Z1bmN0aW9uIHMoZCxULG0pe2QgaW4gbi5hdHRyaWJ1dGVOYW1lcyYmYS5mYXRhbEVycm9yKFxcXCJBdHRyaWJ1dGUgXFxcIitkK1xcXCIgcmVkZWZpbmVkXFxcIiksbi5hZGRWYWx1ZShkLFQsbSl9Zm9yKHZhciBjLGwsbz0rK3QsdT16Ozspe3ZhciBoPWUuY2hhckF0KG8pO3N3aXRjaChoKXtjYXNlXFxcIj1cXFwiOmlmKHU9PT1TKWM9ZS5zbGljZSh0LG8pLHU9ajtlbHNlIGlmKHU9PT0kKXU9ajtlbHNlIHRocm93IG5ldyBFcnJvcihcXFwiYXR0cmlidXRlIGVxdWFsIG11c3QgYWZ0ZXIgYXR0ck5hbWVcXFwiKTticmVhaztjYXNlXFxcIidcXFwiOmNhc2UnXFxcIic6aWYodT09PWp8fHU9PT1TKWlmKHU9PT1TJiYoYS53YXJuaW5nKCdhdHRyaWJ1dGUgdmFsdWUgbXVzdCBhZnRlciBcXFwiPVxcXCInKSxjPWUuc2xpY2UodCxvKSksdD1vKzEsbz1lLmluZGV4T2YoaCx0KSxvPjApbD1lLnNsaWNlKHQsbykucmVwbGFjZSgvJiM/XFxcXHcrOy9nLGkpLHMoYyxsLHQtMSksdT1MO2Vsc2UgdGhyb3cgbmV3IEVycm9yKFxcXCJhdHRyaWJ1dGUgdmFsdWUgbm8gZW5kICdcXFwiK2grXFxcIicgbWF0Y2hcXFwiKTtlbHNlIGlmKHU9PUYpbD1lLnNsaWNlKHQsbykucmVwbGFjZSgvJiM/XFxcXHcrOy9nLGkpLHMoYyxsLHQpLGEud2FybmluZygnYXR0cmlidXRlIFxcXCInK2MrJ1xcXCIgbWlzc2VkIHN0YXJ0IHF1b3QoJytoK1xcXCIpISFcXFwiKSx0PW8rMSx1PUw7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoJ2F0dHJpYnV0ZSB2YWx1ZSBtdXN0IGFmdGVyIFxcXCI9XFxcIicpO2JyZWFrO2Nhc2VcXFwiL1xcXCI6c3dpdGNoKHUpe2Nhc2UgejpuLnNldFRhZ05hbWUoZS5zbGljZSh0LG8pKTtjYXNlIEw6Y2FzZSBHOmNhc2UgdGU6dT10ZSxuLmNsb3NlZD0hMDtjYXNlIEY6Y2FzZSBTOmNhc2UgJDpicmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcXFwiYXR0cmlidXRlIGludmFsaWQgY2xvc2UgY2hhcignLycpXFxcIil9YnJlYWs7Y2FzZVxcXCJcXFwiOnJldHVybiBhLmVycm9yKFxcXCJ1bmV4cGVjdGVkIGVuZCBvZiBpbnB1dFxcXCIpLHU9PXomJm4uc2V0VGFnTmFtZShlLnNsaWNlKHQsbykpLG87Y2FzZVxcXCI+XFxcIjpzd2l0Y2godSl7Y2FzZSB6Om4uc2V0VGFnTmFtZShlLnNsaWNlKHQsbykpO2Nhc2UgTDpjYXNlIEc6Y2FzZSB0ZTpicmVhaztjYXNlIEY6Y2FzZSBTOmw9ZS5zbGljZSh0LG8pLGwuc2xpY2UoLTEpPT09XFxcIi9cXFwiJiYobi5jbG9zZWQ9ITAsbD1sLnNsaWNlKDAsLTEpKTtjYXNlICQ6dT09PSQmJihsPWMpLHU9PUY/KGEud2FybmluZygnYXR0cmlidXRlIFxcXCInK2wrJ1xcXCIgbWlzc2VkIHF1b3QoXFxcIikhJykscyhjLGwucmVwbGFjZSgvJiM/XFxcXHcrOy9nLGkpLHQpKTooKHJbXFxcIlxcXCJdIT09XFxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcXFwifHwhbC5tYXRjaCgvXig/OmRpc2FibGVkfGNoZWNrZWR8c2VsZWN0ZWQpJC9pKSkmJmEud2FybmluZygnYXR0cmlidXRlIFxcXCInK2wrJ1xcXCIgbWlzc2VkIHZhbHVlISEgXFxcIicrbCsnXFxcIiBpbnN0ZWFkISEnKSxzKGwsbCx0KSk7YnJlYWs7Y2FzZSBqOnRocm93IG5ldyBFcnJvcihcXFwiYXR0cmlidXRlIHZhbHVlIG1pc3NlZCEhXFxcIil9cmV0dXJuIG87Y2FzZVxcXCJcXFxceDgwXFxcIjpoPVxcXCIgXFxcIjtkZWZhdWx0OmlmKGg8PVxcXCIgXFxcIilzd2l0Y2godSl7Y2FzZSB6Om4uc2V0VGFnTmFtZShlLnNsaWNlKHQsbykpLHU9RzticmVhaztjYXNlIFM6Yz1lLnNsaWNlKHQsbyksdT0kO2JyZWFrO2Nhc2UgRjp2YXIgbD1lLnNsaWNlKHQsbykucmVwbGFjZSgvJiM/XFxcXHcrOy9nLGkpO2Eud2FybmluZygnYXR0cmlidXRlIFxcXCInK2wrJ1xcXCIgbWlzc2VkIHF1b3QoXFxcIikhIScpLHMoYyxsLHQpO2Nhc2UgTDp1PUc7YnJlYWt9ZWxzZSBzd2l0Y2godSl7Y2FzZSAkOnZhciBwPW4udGFnTmFtZTsocltcXFwiXFxcIl0hPT1cXFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFxcXCJ8fCFjLm1hdGNoKC9eKD86ZGlzYWJsZWR8Y2hlY2tlZHxzZWxlY3RlZCkkL2kpKSYmYS53YXJuaW5nKCdhdHRyaWJ1dGUgXFxcIicrYysnXFxcIiBtaXNzZWQgdmFsdWUhISBcXFwiJytjKydcXFwiIGluc3RlYWQyISEnKSxzKGMsYyx0KSx0PW8sdT1TO2JyZWFrO2Nhc2UgTDphLndhcm5pbmcoJ2F0dHJpYnV0ZSBzcGFjZSBpcyByZXF1aXJlZFxcXCInK2MrJ1xcXCIhIScpO2Nhc2UgRzp1PVMsdD1vO2JyZWFrO2Nhc2Ugajp1PUYsdD1vO2JyZWFrO2Nhc2UgdGU6dGhyb3cgbmV3IEVycm9yKFxcXCJlbGVtZW50cyBjbG9zZWQgY2hhcmFjdGVyICcvJyBhbmQgJz4nIG11c3QgYmUgY29ubmVjdGVkIHRvXFxcIil9fW8rK319ZnVuY3Rpb24gJGUoZSx0LG4pe2Zvcih2YXIgcj1lLnRhZ05hbWUsaT1udWxsLGE9ZS5sZW5ndGg7YS0tOyl7dmFyIHM9ZVthXSxjPXMucU5hbWUsbD1zLnZhbHVlLHA9Yy5pbmRleE9mKFxcXCI6XFxcIik7aWYocD4wKXZhciBvPXMucHJlZml4PWMuc2xpY2UoMCxwKSx1PWMuc2xpY2UocCsxKSxoPW89PT1cXFwieG1sbnNcXFwiJiZ1O2Vsc2UgdT1jLG89bnVsbCxoPWM9PT1cXFwieG1sbnNcXFwiJiZcXFwiXFxcIjtzLmxvY2FsTmFtZT11LGghPT0hMSYmKGk9PW51bGwmJihpPXt9LEZlKG4sbj17fSkpLG5baF09aVtoXT1sLHMudXJpPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zL1xcXCIsdC5zdGFydFByZWZpeE1hcHBpbmcoaCxsKSl9Zm9yKHZhciBhPWUubGVuZ3RoO2EtLTspe3M9ZVthXTt2YXIgbz1zLnByZWZpeDtvJiYobz09PVxcXCJ4bWxcXFwiJiYocy51cmk9XFxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVxcXCIpLG8hPT1cXFwieG1sbnNcXFwiJiYocy51cmk9bltvfHxcXFwiXFxcIl0pKX12YXIgcD1yLmluZGV4T2YoXFxcIjpcXFwiKTtwPjA/KG89ZS5wcmVmaXg9ci5zbGljZSgwLHApLHU9ZS5sb2NhbE5hbWU9ci5zbGljZShwKzEpKToobz1udWxsLHU9ZS5sb2NhbE5hbWU9cik7dmFyIGQ9ZS51cmk9bltvfHxcXFwiXFxcIl07aWYodC5zdGFydEVsZW1lbnQoZCx1LHIsZSksZS5jbG9zZWQpe2lmKHQuZW5kRWxlbWVudChkLHUsciksaSlmb3IobyBpbiBpKXQuZW5kUHJlZml4TWFwcGluZyhvKX1lbHNlIHJldHVybiBlLmN1cnJlbnROU01hcD1uLGUubG9jYWxOU01hcD1pLCEwfWZ1bmN0aW9uIEV0KGUsdCxuLHIsaSl7aWYoL14oPzpzY3JpcHR8dGV4dGFyZWEpJC9pLnRlc3Qobikpe3ZhciBhPWUuaW5kZXhPZihcXFwiPC9cXFwiK24rXFxcIj5cXFwiLHQpLHM9ZS5zdWJzdHJpbmcodCsxLGEpO2lmKC9bJjxdLy50ZXN0KHMpKXJldHVybi9ec2NyaXB0JC9pLnRlc3Qobik/KGkuY2hhcmFjdGVycyhzLDAscy5sZW5ndGgpLGEpOihzPXMucmVwbGFjZSgvJiM/XFxcXHcrOy9nLHIpLGkuY2hhcmFjdGVycyhzLDAscy5sZW5ndGgpLGEpfXJldHVybiB0KzF9ZnVuY3Rpb24gTnQoZSx0LG4scil7dmFyIGk9cltuXTtyZXR1cm4gaT09bnVsbCYmKGk9ZS5sYXN0SW5kZXhPZihcXFwiPC9cXFwiK24rXFxcIj5cXFwiKSxpPHQmJihpPWUubGFzdEluZGV4T2YoXFxcIjwvXFxcIituKSkscltuXT1pKSxpPHR9ZnVuY3Rpb24gRmUoZSx0KXtmb3IodmFyIG4gaW4gZSl0W25dPWVbbl19ZnVuY3Rpb24geXQoZSx0LG4scil7dmFyIGk9ZS5jaGFyQXQodCsyKTtzd2l0Y2goaSl7Y2FzZVxcXCItXFxcIjppZihlLmNoYXJBdCh0KzMpPT09XFxcIi1cXFwiKXt2YXIgYT1lLmluZGV4T2YoXFxcIi0tPlxcXCIsdCs0KTtyZXR1cm4gYT50PyhuLmNvbW1lbnQoZSx0KzQsYS10LTQpLGErMyk6KHIuZXJyb3IoXFxcIlVuY2xvc2VkIGNvbW1lbnRcXFwiKSwtMSl9ZWxzZSByZXR1cm4tMTtkZWZhdWx0OmlmKGUuc3Vic3RyKHQrMyw2KT09XFxcIkNEQVRBW1xcXCIpe3ZhciBhPWUuaW5kZXhPZihcXFwiXV0+XFxcIix0KzkpO3JldHVybiBuLnN0YXJ0Q0RBVEEoKSxuLmNoYXJhY3RlcnMoZSx0KzksYS10LTkpLG4uZW5kQ0RBVEEoKSxhKzN9dmFyIHM9d3QoZSx0KSxjPXMubGVuZ3RoO2lmKGM+MSYmLyFkb2N0eXBlL2kudGVzdChzWzBdWzBdKSl7dmFyIGw9c1sxXVswXSxvPSExLHU9ITE7Yz4zJiYoL15wdWJsaWMkL2kudGVzdChzWzJdWzBdKT8obz1zWzNdWzBdLHU9Yz40JiZzWzRdWzBdKTovXnN5c3RlbSQvaS50ZXN0KHNbMl1bMF0pJiYodT1zWzNdWzBdKSk7dmFyIGg9c1tjLTFdO3JldHVybiBuLnN0YXJ0RFREKGwsbyx1KSxuLmVuZERURCgpLGguaW5kZXgraFswXS5sZW5ndGh9fXJldHVybi0xfWZ1bmN0aW9uIER0KGUsdCxuKXt2YXIgcj1lLmluZGV4T2YoXFxcIj8+XFxcIix0KTtpZihyKXt2YXIgaT1lLnN1YnN0cmluZyh0LHIpLm1hdGNoKC9ePFxcXFw/KFxcXFxTKilcXFxccyooW1xcXFxzXFxcXFNdKj8pXFxcXHMqJC8pO2lmKGkpe3ZhciBhPWlbMF0ubGVuZ3RoO3JldHVybiBuLnByb2Nlc3NpbmdJbnN0cnVjdGlvbihpWzFdLGlbMl0pLHIrMn1lbHNlIHJldHVybi0xfXJldHVybi0xfWZ1bmN0aW9uIExlKCl7dGhpcy5hdHRyaWJ1dGVOYW1lcz17fX1MZS5wcm90b3R5cGU9e3NldFRhZ05hbWU6ZnVuY3Rpb24oZSl7aWYoIVNlLnRlc3QoZSkpdGhyb3cgbmV3IEVycm9yKFxcXCJpbnZhbGlkIHRhZ05hbWU6XFxcIitlKTt0aGlzLnRhZ05hbWU9ZX0sYWRkVmFsdWU6ZnVuY3Rpb24oZSx0LG4pe2lmKCFTZS50ZXN0KGUpKXRocm93IG5ldyBFcnJvcihcXFwiaW52YWxpZCBhdHRyaWJ1dGU6XFxcIitlKTt0aGlzLmF0dHJpYnV0ZU5hbWVzW2VdPXRoaXMubGVuZ3RoLHRoaXNbdGhpcy5sZW5ndGgrK109e3FOYW1lOmUsdmFsdWU6dCxvZmZzZXQ6bn19LGxlbmd0aDowLGdldExvY2FsTmFtZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpc1tlXS5sb2NhbE5hbWV9LGdldExvY2F0b3I6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXNbZV0ubG9jYXRvcn0sZ2V0UU5hbWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXNbZV0ucU5hbWV9LGdldFVSSTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpc1tlXS51cml9LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzW2VdLnZhbHVlfX07ZnVuY3Rpb24gd3QoZSx0KXt2YXIgbixyPVtdLGk9LydbXiddKyd8XFxcIlteXFxcIl0rXFxcInxbXlxcXFxzPD5cXFxcLz1dKz0/fChcXFxcLz9cXFxccyo+fDwpL2c7Zm9yKGkubGFzdEluZGV4PXQsaS5leGVjKGUpO249aS5leGVjKGUpOylpZihyLnB1c2gobiksblsxXSlyZXR1cm4gcn1wZS5YTUxSZWFkZXI9TWU7cGUuUGFyc2VFcnJvcj1QfSk7dmFyIHdlPWVlKEs9PntmdW5jdGlvbiBRKGUsdCl7Zm9yKHZhciBuIGluIGUpdFtuXT1lW25dfWZ1bmN0aW9uIEQoZSx0KXt2YXIgbj1lLnByb3RvdHlwZTtpZighKG4gaW5zdGFuY2VvZiB0KSl7bGV0IGk9ZnVuY3Rpb24oKXt9O3ZhciByPWk7aS5wcm90b3R5cGU9dC5wcm90b3R5cGUsaT1uZXcgaSxRKG4saSksZS5wcm90b3R5cGU9bj1pfW4uY29uc3RydWN0b3IhPWUmJih0eXBlb2YgZSE9XFxcImZ1bmN0aW9uXFxcIiYmY29uc29sZS5lcnJvcihcXFwidW5rbm93IENsYXNzOlxcXCIrZSksbi5jb25zdHJ1Y3Rvcj1lKX12YXIgVHQ9XFxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcXFwiLHc9e30seD13LkVMRU1FTlRfTk9ERT0xLGs9dy5BVFRSSUJVVEVfTk9ERT0yLG5lPXcuVEVYVF9OT0RFPTMsa2U9dy5DREFUQV9TRUNUSU9OX05PREU9NCxWZT13LkVOVElUWV9SRUZFUkVOQ0VfTk9ERT01LGJ0PXcuRU5USVRZX05PREU9NixxZT13LlBST0NFU1NJTkdfSU5TVFJVQ1RJT05fTk9ERT03LFllPXcuQ09NTUVOVF9OT0RFPTgsWGU9dy5ET0NVTUVOVF9OT0RFPTksemU9dy5ET0NVTUVOVF9UWVBFX05PREU9MTAsUj13LkRPQ1VNRU5UX0ZSQUdNRU5UX05PREU9MTEsX3Q9dy5OT1RBVElPTl9OT0RFPTEyLEU9e30sZz17fSxxdD1FLklOREVYX1NJWkVfRVJSPShnWzFdPVxcXCJJbmRleCBzaXplIGVycm9yXFxcIiwxKSxZdD1FLkRPTVNUUklOR19TSVpFX0VSUj0oZ1syXT1cXFwiRE9NU3RyaW5nIHNpemUgZXJyb3JcXFwiLDIpLEN0PUUuSElFUkFSQ0hZX1JFUVVFU1RfRVJSPShnWzNdPVxcXCJIaWVyYXJjaHkgcmVxdWVzdCBlcnJvclxcXCIsMyksWHQ9RS5XUk9OR19ET0NVTUVOVF9FUlI9KGdbNF09XFxcIldyb25nIGRvY3VtZW50XFxcIiw0KSx6dD1FLklOVkFMSURfQ0hBUkFDVEVSX0VSUj0oZ1s1XT1cXFwiSW52YWxpZCBjaGFyYWN0ZXJcXFwiLDUpLGp0PUUuTk9fREFUQV9BTExPV0VEX0VSUj0oZ1s2XT1cXFwiTm8gZGF0YSBhbGxvd2VkXFxcIiw2KSxHdD1FLk5PX01PRElGSUNBVElPTl9BTExPV0VEX0VSUj0oZ1s3XT1cXFwiTm8gbW9kaWZpY2F0aW9uIGFsbG93ZWRcXFwiLDcpLHh0PUUuTk9UX0ZPVU5EX0VSUj0oZ1s4XT1cXFwiTm90IGZvdW5kXFxcIiw4KSxRdD1FLk5PVF9TVVBQT1JURURfRVJSPShnWzldPVxcXCJOb3Qgc3VwcG9ydGVkXFxcIiw5KSxqZT1FLklOVVNFX0FUVFJJQlVURV9FUlI9KGdbMTBdPVxcXCJBdHRyaWJ1dGUgaW4gdXNlXFxcIiwxMCksV3Q9RS5JTlZBTElEX1NUQVRFX0VSUj0oZ1sxMV09XFxcIkludmFsaWQgc3RhdGVcXFwiLDExKSxCdD1FLlNZTlRBWF9FUlI9KGdbMTJdPVxcXCJTeW50YXggZXJyb3JcXFwiLDEyKSxadD1FLklOVkFMSURfTU9ESUZJQ0FUSU9OX0VSUj0oZ1sxM109XFxcIkludmFsaWQgbW9kaWZpY2F0aW9uXFxcIiwxMyksS3Q9RS5OQU1FU1BBQ0VfRVJSPShnWzE0XT1cXFwiSW52YWxpZCBuYW1lc3BhY2VcXFwiLDE0KSxKdD1FLklOVkFMSURfQUNDRVNTX0VSUj0oZ1sxNV09XFxcIkludmFsaWQgYWNjZXNzXFxcIiwxNSk7ZnVuY3Rpb24gVShlLHQpe2lmKHQgaW5zdGFuY2VvZiBFcnJvcil2YXIgbj10O2Vsc2Ugbj10aGlzLEVycm9yLmNhbGwodGhpcyxnW2VdKSx0aGlzLm1lc3NhZ2U9Z1tlXSxFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSYmRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcyxVKTtyZXR1cm4gbi5jb2RlPWUsdCYmKHRoaXMubWVzc2FnZT10aGlzLm1lc3NhZ2UrXFxcIjogXFxcIit0KSxufVUucHJvdG90eXBlPUVycm9yLnByb3RvdHlwZTtRKEUsVSk7ZnVuY3Rpb24gTSgpe31NLnByb3RvdHlwZT17bGVuZ3RoOjAsaXRlbTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpc1tlXXx8bnVsbH0sdG9TdHJpbmc6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49W10scj0wO3I8dGhpcy5sZW5ndGg7cisrKVkodGhpc1tyXSxuLGUsdCk7cmV0dXJuIG4uam9pbihcXFwiXFxcIil9fTtmdW5jdGlvbiBWKGUsdCl7dGhpcy5fbm9kZT1lLHRoaXMuX3JlZnJlc2g9dCxtZSh0aGlzKX1mdW5jdGlvbiBtZShlKXt2YXIgdD1lLl9ub2RlLl9pbmN8fGUuX25vZGUub3duZXJEb2N1bWVudC5faW5jO2lmKGUuX2luYyE9dCl7dmFyIG49ZS5fcmVmcmVzaChlLl9ub2RlKTtzdChlLFxcXCJsZW5ndGhcXFwiLG4ubGVuZ3RoKSxRKG4sZSksZS5faW5jPXR9fVYucHJvdG90eXBlLml0ZW09ZnVuY3Rpb24oZSl7cmV0dXJuIG1lKHRoaXMpLHRoaXNbZV19O0QoVixNKTtmdW5jdGlvbiByZSgpe31mdW5jdGlvbiBHZShlLHQpe2Zvcih2YXIgbj1lLmxlbmd0aDtuLS07KWlmKGVbbl09PT10KXJldHVybiBufWZ1bmN0aW9uIFFlKGUsdCxuLHIpe2lmKHI/dFtHZSh0LHIpXT1uOnRbdC5sZW5ndGgrK109bixlKXtuLm93bmVyRWxlbWVudD1lO3ZhciBpPWUub3duZXJEb2N1bWVudDtpJiYociYmS2UoaSxlLHIpLEF0KGksZSxuKSl9fWZ1bmN0aW9uIFdlKGUsdCxuKXt2YXIgcj1HZSh0LG4pO2lmKHI+PTApe2Zvcih2YXIgaT10Lmxlbmd0aC0xO3I8aTspdFtyXT10Wysrcl07aWYodC5sZW5ndGg9aSxlKXt2YXIgYT1lLm93bmVyRG9jdW1lbnQ7YSYmKEtlKGEsZSxuKSxuLm93bmVyRWxlbWVudD1udWxsKX19ZWxzZSB0aHJvdyBVKHh0LG5ldyBFcnJvcihlLnRhZ05hbWUrXFxcIkBcXFwiK24pKX1yZS5wcm90b3R5cGU9e2xlbmd0aDowLGl0ZW06TS5wcm90b3R5cGUuaXRlbSxnZXROYW1lZEl0ZW06ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMubGVuZ3RoO3QtLTspe3ZhciBuPXRoaXNbdF07aWYobi5ub2RlTmFtZT09ZSlyZXR1cm4gbn19LHNldE5hbWVkSXRlbTpmdW5jdGlvbihlKXt2YXIgdD1lLm93bmVyRWxlbWVudDtpZih0JiZ0IT10aGlzLl9vd25lckVsZW1lbnQpdGhyb3cgbmV3IFUoamUpO3ZhciBuPXRoaXMuZ2V0TmFtZWRJdGVtKGUubm9kZU5hbWUpO3JldHVybiBRZSh0aGlzLl9vd25lckVsZW1lbnQsdGhpcyxlLG4pLG59LHNldE5hbWVkSXRlbU5TOmZ1bmN0aW9uKGUpe3ZhciB0PWUub3duZXJFbGVtZW50LG47aWYodCYmdCE9dGhpcy5fb3duZXJFbGVtZW50KXRocm93IG5ldyBVKGplKTtyZXR1cm4gbj10aGlzLmdldE5hbWVkSXRlbU5TKGUubmFtZXNwYWNlVVJJLGUubG9jYWxOYW1lKSxRZSh0aGlzLl9vd25lckVsZW1lbnQsdGhpcyxlLG4pLG59LHJlbW92ZU5hbWVkSXRlbTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLmdldE5hbWVkSXRlbShlKTtyZXR1cm4gV2UodGhpcy5fb3duZXJFbGVtZW50LHRoaXMsdCksdH0scmVtb3ZlTmFtZWRJdGVtTlM6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLmdldE5hbWVkSXRlbU5TKGUsdCk7cmV0dXJuIFdlKHRoaXMuX293bmVyRWxlbWVudCx0aGlzLG4pLG59LGdldE5hbWVkSXRlbU5TOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPXRoaXMubGVuZ3RoO24tLTspe3ZhciByPXRoaXNbbl07aWYoci5sb2NhbE5hbWU9PXQmJnIubmFtZXNwYWNlVVJJPT1lKXJldHVybiByfXJldHVybiBudWxsfX07ZnVuY3Rpb24gQmUoZSl7aWYodGhpcy5fZmVhdHVyZXM9e30sZSlmb3IodmFyIHQgaW4gZSl0aGlzLl9mZWF0dXJlcz1lW3RdfUJlLnByb3RvdHlwZT17aGFzRmVhdHVyZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMuX2ZlYXR1cmVzW2UudG9Mb3dlckNhc2UoKV07cmV0dXJuISEobiYmKCF0fHx0IGluIG4pKX0sY3JlYXRlRG9jdW1lbnQ6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW5ldyBCO2lmKHIuaW1wbGVtZW50YXRpb249dGhpcyxyLmNoaWxkTm9kZXM9bmV3IE0sci5kb2N0eXBlPW4sbiYmci5hcHBlbmRDaGlsZChuKSx0KXt2YXIgaT1yLmNyZWF0ZUVsZW1lbnROUyhlLHQpO3IuYXBwZW5kQ2hpbGQoaSl9cmV0dXJuIHJ9LGNyZWF0ZURvY3VtZW50VHlwZTpmdW5jdGlvbihlLHQsbil7dmFyIHI9bmV3IEVlO3JldHVybiByLm5hbWU9ZSxyLm5vZGVOYW1lPWUsci5wdWJsaWNJZD10LHIuc3lzdGVtSWQ9bixyfX07ZnVuY3Rpb24gTigpe31OLnByb3RvdHlwZT17Zmlyc3RDaGlsZDpudWxsLGxhc3RDaGlsZDpudWxsLHByZXZpb3VzU2libGluZzpudWxsLG5leHRTaWJsaW5nOm51bGwsYXR0cmlidXRlczpudWxsLHBhcmVudE5vZGU6bnVsbCxjaGlsZE5vZGVzOm51bGwsb3duZXJEb2N1bWVudDpudWxsLG5vZGVWYWx1ZTpudWxsLG5hbWVzcGFjZVVSSTpudWxsLHByZWZpeDpudWxsLGxvY2FsTmFtZTpudWxsLGluc2VydEJlZm9yZTpmdW5jdGlvbihlLHQpe3JldHVybiBIZSh0aGlzLGUsdCl9LHJlcGxhY2VDaGlsZDpmdW5jdGlvbihlLHQpe3RoaXMuaW5zZXJ0QmVmb3JlKGUsdCksdCYmdGhpcy5yZW1vdmVDaGlsZCh0KX0scmVtb3ZlQ2hpbGQ6ZnVuY3Rpb24oZSl7cmV0dXJuIEplKHRoaXMsZSl9LGFwcGVuZENoaWxkOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmluc2VydEJlZm9yZShlLG51bGwpfSxoYXNDaGlsZE5vZGVzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZmlyc3RDaGlsZCE9bnVsbH0sY2xvbmVOb2RlOmZ1bmN0aW9uKGUpe3JldHVybiBEZSh0aGlzLm93bmVyRG9jdW1lbnR8fHRoaXMsdGhpcyxlKX0sbm9ybWFsaXplOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMuZmlyc3RDaGlsZDtlOyl7dmFyIHQ9ZS5uZXh0U2libGluZzt0JiZ0Lm5vZGVUeXBlPT1uZSYmZS5ub2RlVHlwZT09bmU/KHRoaXMucmVtb3ZlQ2hpbGQodCksZS5hcHBlbmREYXRhKHQuZGF0YSkpOihlLm5vcm1hbGl6ZSgpLGU9dCl9fSxpc1N1cHBvcnRlZDpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZShlLHQpfSxoYXNBdHRyaWJ1dGVzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXR0cmlidXRlcy5sZW5ndGg+MH0sbG9va3VwUHJlZml4OmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzO3Q7KXt2YXIgbj10Ll9uc01hcDtpZihuKXtmb3IodmFyIHIgaW4gbilpZihuW3JdPT1lKXJldHVybiByfXQ9dC5ub2RlVHlwZT09az90Lm93bmVyRG9jdW1lbnQ6dC5wYXJlbnROb2RlfXJldHVybiBudWxsfSxsb29rdXBOYW1lc3BhY2VVUkk6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXM7dDspe3ZhciBuPXQuX25zTWFwO2lmKG4mJmUgaW4gbilyZXR1cm4gbltlXTt0PXQubm9kZVR5cGU9PWs/dC5vd25lckRvY3VtZW50OnQucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH0saXNEZWZhdWx0TmFtZXNwYWNlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMubG9va3VwUHJlZml4KGUpO3JldHVybiB0PT1udWxsfX07ZnVuY3Rpb24gWmUoZSl7cmV0dXJuIGU9PVxcXCI8XFxcIiYmXFxcIiZsdDtcXFwifHxlPT1cXFwiPlxcXCImJlxcXCImZ3Q7XFxcInx8ZT09XFxcIiZcXFwiJiZcXFwiJmFtcDtcXFwifHxlPT0nXFxcIicmJlxcXCImcXVvdDtcXFwifHxcXFwiJiNcXFwiK2UuY2hhckNvZGVBdCgpK1xcXCI7XFxcIn1RKHcsTik7USh3LE4ucHJvdG90eXBlKTtmdW5jdGlvbiBXKGUsdCl7aWYodChlKSlyZXR1cm4hMDtpZihlPWUuZmlyc3RDaGlsZClkbyBpZihXKGUsdCkpcmV0dXJuITA7d2hpbGUoZT1lLm5leHRTaWJsaW5nKX1mdW5jdGlvbiBCKCl7fWZ1bmN0aW9uIEF0KGUsdCxuKXtlJiZlLl9pbmMrKzt2YXIgcj1uLm5hbWVzcGFjZVVSSTtyPT1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy9cXFwiJiYodC5fbnNNYXBbbi5wcmVmaXg/bi5sb2NhbE5hbWU6XFxcIlxcXCJdPW4udmFsdWUpfWZ1bmN0aW9uIEtlKGUsdCxuLHIpe2UmJmUuX2luYysrO3ZhciBpPW4ubmFtZXNwYWNlVVJJO2k9PVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zL1xcXCImJmRlbGV0ZSB0Ll9uc01hcFtuLnByZWZpeD9uLmxvY2FsTmFtZTpcXFwiXFxcIl19ZnVuY3Rpb24gaGUoZSx0LG4pe2lmKGUmJmUuX2luYyl7ZS5faW5jKys7dmFyIHI9dC5jaGlsZE5vZGVzO2lmKG4pcltyLmxlbmd0aCsrXT1uO2Vsc2V7Zm9yKHZhciBpPXQuZmlyc3RDaGlsZCxhPTA7aTspclthKytdPWksaT1pLm5leHRTaWJsaW5nO3IubGVuZ3RoPWF9fX1mdW5jdGlvbiBKZShlLHQpe3ZhciBuPXQucHJldmlvdXNTaWJsaW5nLHI9dC5uZXh0U2libGluZztyZXR1cm4gbj9uLm5leHRTaWJsaW5nPXI6ZS5maXJzdENoaWxkPXIscj9yLnByZXZpb3VzU2libGluZz1uOmUubGFzdENoaWxkPW4saGUoZS5vd25lckRvY3VtZW50LGUpLHR9ZnVuY3Rpb24gSGUoZSx0LG4pe3ZhciByPXQucGFyZW50Tm9kZTtpZihyJiZyLnJlbW92ZUNoaWxkKHQpLHQubm9kZVR5cGU9PT1SKXt2YXIgaT10LmZpcnN0Q2hpbGQ7aWYoaT09bnVsbClyZXR1cm4gdDt2YXIgYT10Lmxhc3RDaGlsZH1lbHNlIGk9YT10O3ZhciBzPW4/bi5wcmV2aW91c1NpYmxpbmc6ZS5sYXN0Q2hpbGQ7aS5wcmV2aW91c1NpYmxpbmc9cyxhLm5leHRTaWJsaW5nPW4scz9zLm5leHRTaWJsaW5nPWk6ZS5maXJzdENoaWxkPWksbj09bnVsbD9lLmxhc3RDaGlsZD1hOm4ucHJldmlvdXNTaWJsaW5nPWE7ZG8gaS5wYXJlbnROb2RlPWU7d2hpbGUoaSE9PWEmJihpPWkubmV4dFNpYmxpbmcpKTtyZXR1cm4gaGUoZS5vd25lckRvY3VtZW50fHxlLGUpLHQubm9kZVR5cGU9PVImJih0LmZpcnN0Q2hpbGQ9dC5sYXN0Q2hpbGQ9bnVsbCksdH1mdW5jdGlvbiBJdChlLHQpe3ZhciBuPXQucGFyZW50Tm9kZTtpZihuKXt2YXIgcj1lLmxhc3RDaGlsZDtuLnJlbW92ZUNoaWxkKHQpO3ZhciByPWUubGFzdENoaWxkfXZhciByPWUubGFzdENoaWxkO3JldHVybiB0LnBhcmVudE5vZGU9ZSx0LnByZXZpb3VzU2libGluZz1yLHQubmV4dFNpYmxpbmc9bnVsbCxyP3IubmV4dFNpYmxpbmc9dDplLmZpcnN0Q2hpbGQ9dCxlLmxhc3RDaGlsZD10LGhlKGUub3duZXJEb2N1bWVudCxlLHQpLHR9Qi5wcm90b3R5cGU9e25vZGVOYW1lOlxcXCIjZG9jdW1lbnRcXFwiLG5vZGVUeXBlOlhlLGRvY3R5cGU6bnVsbCxkb2N1bWVudEVsZW1lbnQ6bnVsbCxfaW5jOjEsaW5zZXJ0QmVmb3JlOmZ1bmN0aW9uKGUsdCl7aWYoZS5ub2RlVHlwZT09Uil7Zm9yKHZhciBuPWUuZmlyc3RDaGlsZDtuOyl7dmFyIHI9bi5uZXh0U2libGluZzt0aGlzLmluc2VydEJlZm9yZShuLHQpLG49cn1yZXR1cm4gZX1yZXR1cm4gdGhpcy5kb2N1bWVudEVsZW1lbnQ9PW51bGwmJmUubm9kZVR5cGU9PXgmJih0aGlzLmRvY3VtZW50RWxlbWVudD1lKSxIZSh0aGlzLGUsdCksZS5vd25lckRvY3VtZW50PXRoaXMsZX0scmVtb3ZlQ2hpbGQ6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZG9jdW1lbnRFbGVtZW50PT1lJiYodGhpcy5kb2N1bWVudEVsZW1lbnQ9bnVsbCksSmUodGhpcyxlKX0saW1wb3J0Tm9kZTpmdW5jdGlvbihlLHQpe3JldHVybiBhdCh0aGlzLGUsdCl9LGdldEVsZW1lbnRCeUlkOmZ1bmN0aW9uKGUpe3ZhciB0PW51bGw7cmV0dXJuIFcodGhpcy5kb2N1bWVudEVsZW1lbnQsZnVuY3Rpb24obil7aWYobi5ub2RlVHlwZT09eCYmbi5nZXRBdHRyaWJ1dGUoXFxcImlkXFxcIik9PWUpcmV0dXJuIHQ9biwhMH0pLHR9LGdldEVsZW1lbnRzQnlDbGFzc05hbWU6ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IFJlZ0V4cChcXFwiKF58XFxcXFxcXFxzKVxcXCIrZStcXFwiKFxcXFxcXFxcc3wkKVxcXCIpO3JldHVybiBuZXcgVih0aGlzLGZ1bmN0aW9uKG4pe3ZhciByPVtdO3JldHVybiBXKG4uZG9jdW1lbnRFbGVtZW50LGZ1bmN0aW9uKGkpe2khPT1uJiZpLm5vZGVUeXBlPT14JiZ0LnRlc3QoaS5nZXRBdHRyaWJ1dGUoXFxcImNsYXNzXFxcIikpJiZyLnB1c2goaSl9KSxyfSl9LGNyZWF0ZUVsZW1lbnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IHE7dC5vd25lckRvY3VtZW50PXRoaXMsdC5ub2RlTmFtZT1lLHQudGFnTmFtZT1lLHQuY2hpbGROb2Rlcz1uZXcgTTt2YXIgbj10LmF0dHJpYnV0ZXM9bmV3IHJlO3JldHVybiBuLl9vd25lckVsZW1lbnQ9dCx0fSxjcmVhdGVEb2N1bWVudEZyYWdtZW50OmZ1bmN0aW9uKCl7dmFyIGU9bmV3IGFlO3JldHVybiBlLm93bmVyRG9jdW1lbnQ9dGhpcyxlLmNoaWxkTm9kZXM9bmV3IE0sZX0sY3JlYXRlVGV4dE5vZGU6ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IGRlO3JldHVybiB0Lm93bmVyRG9jdW1lbnQ9dGhpcyx0LmFwcGVuZERhdGEoZSksdH0sY3JlYXRlQ29tbWVudDpmdW5jdGlvbihlKXt2YXIgdD1uZXcgdmU7cmV0dXJuIHQub3duZXJEb2N1bWVudD10aGlzLHQuYXBwZW5kRGF0YShlKSx0fSxjcmVhdGVDREFUQVNlY3Rpb246ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IGdlO3JldHVybiB0Lm93bmVyRG9jdW1lbnQ9dGhpcyx0LmFwcGVuZERhdGEoZSksdH0sY3JlYXRlUHJvY2Vzc2luZ0luc3RydWN0aW9uOmZ1bmN0aW9uKGUsdCl7dmFyIG49bmV3IHllO3JldHVybiBuLm93bmVyRG9jdW1lbnQ9dGhpcyxuLnRhZ05hbWU9bi50YXJnZXQ9ZSxuLm5vZGVWYWx1ZT1uLmRhdGE9dCxufSxjcmVhdGVBdHRyaWJ1dGU6ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IGllO3JldHVybiB0Lm93bmVyRG9jdW1lbnQ9dGhpcyx0Lm5hbWU9ZSx0Lm5vZGVOYW1lPWUsdC5sb2NhbE5hbWU9ZSx0LnNwZWNpZmllZD0hMCx0fSxjcmVhdGVFbnRpdHlSZWZlcmVuY2U6ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IE5lO3JldHVybiB0Lm93bmVyRG9jdW1lbnQ9dGhpcyx0Lm5vZGVOYW1lPWUsdH0sY3JlYXRlRWxlbWVudE5TOmZ1bmN0aW9uKGUsdCl7dmFyIG49bmV3IHEscj10LnNwbGl0KFxcXCI6XFxcIiksaT1uLmF0dHJpYnV0ZXM9bmV3IHJlO3JldHVybiBuLmNoaWxkTm9kZXM9bmV3IE0sbi5vd25lckRvY3VtZW50PXRoaXMsbi5ub2RlTmFtZT10LG4udGFnTmFtZT10LG4ubmFtZXNwYWNlVVJJPWUsci5sZW5ndGg9PTI/KG4ucHJlZml4PXJbMF0sbi5sb2NhbE5hbWU9clsxXSk6bi5sb2NhbE5hbWU9dCxpLl9vd25lckVsZW1lbnQ9bixufSxjcmVhdGVBdHRyaWJ1dGVOUzpmdW5jdGlvbihlLHQpe3ZhciBuPW5ldyBpZSxyPXQuc3BsaXQoXFxcIjpcXFwiKTtyZXR1cm4gbi5vd25lckRvY3VtZW50PXRoaXMsbi5ub2RlTmFtZT10LG4ubmFtZT10LG4ubmFtZXNwYWNlVVJJPWUsbi5zcGVjaWZpZWQ9ITAsci5sZW5ndGg9PTI/KG4ucHJlZml4PXJbMF0sbi5sb2NhbE5hbWU9clsxXSk6bi5sb2NhbE5hbWU9dCxufX07RChCLE4pO2Z1bmN0aW9uIHEoKXt0aGlzLl9uc01hcD17fX1xLnByb3RvdHlwZT17bm9kZVR5cGU6eCxoYXNBdHRyaWJ1dGU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlTm9kZShlKSE9bnVsbH0sZ2V0QXR0cmlidXRlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuZ2V0QXR0cmlidXRlTm9kZShlKTtyZXR1cm4gdCYmdC52YWx1ZXx8XFxcIlxcXCJ9LGdldEF0dHJpYnV0ZU5vZGU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuYXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oZSl9LHNldEF0dHJpYnV0ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMub3duZXJEb2N1bWVudC5jcmVhdGVBdHRyaWJ1dGUoZSk7bi52YWx1ZT1uLm5vZGVWYWx1ZT1cXFwiXFxcIit0LHRoaXMuc2V0QXR0cmlidXRlTm9kZShuKX0scmVtb3ZlQXR0cmlidXRlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuZ2V0QXR0cmlidXRlTm9kZShlKTt0JiZ0aGlzLnJlbW92ZUF0dHJpYnV0ZU5vZGUodCl9LGFwcGVuZENoaWxkOmZ1bmN0aW9uKGUpe3JldHVybiBlLm5vZGVUeXBlPT09Uj90aGlzLmluc2VydEJlZm9yZShlLG51bGwpOkl0KHRoaXMsZSl9LHNldEF0dHJpYnV0ZU5vZGU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuYXR0cmlidXRlcy5zZXROYW1lZEl0ZW0oZSl9LHNldEF0dHJpYnV0ZU5vZGVOUzpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5hdHRyaWJ1dGVzLnNldE5hbWVkSXRlbU5TKGUpfSxyZW1vdmVBdHRyaWJ1dGVOb2RlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmF0dHJpYnV0ZXMucmVtb3ZlTmFtZWRJdGVtKGUubm9kZU5hbWUpfSxyZW1vdmVBdHRyaWJ1dGVOUzpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMuZ2V0QXR0cmlidXRlTm9kZU5TKGUsdCk7biYmdGhpcy5yZW1vdmVBdHRyaWJ1dGVOb2RlKG4pfSxoYXNBdHRyaWJ1dGVOUzpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmdldEF0dHJpYnV0ZU5vZGVOUyhlLHQpIT1udWxsfSxnZXRBdHRyaWJ1dGVOUzpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMuZ2V0QXR0cmlidXRlTm9kZU5TKGUsdCk7cmV0dXJuIG4mJm4udmFsdWV8fFxcXCJcXFwifSxzZXRBdHRyaWJ1dGVOUzpmdW5jdGlvbihlLHQsbil7dmFyIHI9dGhpcy5vd25lckRvY3VtZW50LmNyZWF0ZUF0dHJpYnV0ZU5TKGUsdCk7ci52YWx1ZT1yLm5vZGVWYWx1ZT1cXFwiXFxcIituLHRoaXMuc2V0QXR0cmlidXRlTm9kZShyKX0sZ2V0QXR0cmlidXRlTm9kZU5TOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuYXR0cmlidXRlcy5nZXROYW1lZEl0ZW1OUyhlLHQpfSxnZXRFbGVtZW50c0J5VGFnTmFtZTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3IFYodGhpcyxmdW5jdGlvbih0KXt2YXIgbj1bXTtyZXR1cm4gVyh0LGZ1bmN0aW9uKHIpe3IhPT10JiZyLm5vZGVUeXBlPT14JiYoZT09PVxcXCIqXFxcInx8ci50YWdOYW1lPT1lKSYmbi5wdXNoKHIpfSksbn0pfSxnZXRFbGVtZW50c0J5VGFnTmFtZU5TOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIG5ldyBWKHRoaXMsZnVuY3Rpb24obil7dmFyIHI9W107cmV0dXJuIFcobixmdW5jdGlvbihpKXtpIT09biYmaS5ub2RlVHlwZT09PXgmJihlPT09XFxcIipcXFwifHxpLm5hbWVzcGFjZVVSST09PWUpJiYodD09PVxcXCIqXFxcInx8aS5sb2NhbE5hbWU9PXQpJiZyLnB1c2goaSl9KSxyfSl9fTtCLnByb3RvdHlwZS5nZXRFbGVtZW50c0J5VGFnTmFtZT1xLnByb3RvdHlwZS5nZXRFbGVtZW50c0J5VGFnTmFtZTtCLnByb3RvdHlwZS5nZXRFbGVtZW50c0J5VGFnTmFtZU5TPXEucHJvdG90eXBlLmdldEVsZW1lbnRzQnlUYWdOYW1lTlM7RChxLE4pO2Z1bmN0aW9uIGllKCl7fWllLnByb3RvdHlwZS5ub2RlVHlwZT1rO0QoaWUsTik7ZnVuY3Rpb24gWigpe31aLnByb3RvdHlwZT17ZGF0YTpcXFwiXFxcIixzdWJzdHJpbmdEYXRhOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuZGF0YS5zdWJzdHJpbmcoZSxlK3QpfSxhcHBlbmREYXRhOmZ1bmN0aW9uKGUpe2U9dGhpcy5kYXRhK2UsdGhpcy5ub2RlVmFsdWU9dGhpcy5kYXRhPWUsdGhpcy5sZW5ndGg9ZS5sZW5ndGh9LGluc2VydERhdGE6ZnVuY3Rpb24oZSx0KXt0aGlzLnJlcGxhY2VEYXRhKGUsMCx0KX0sYXBwZW5kQ2hpbGQ6ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKGdbQ3RdKX0sZGVsZXRlRGF0YTpmdW5jdGlvbihlLHQpe3RoaXMucmVwbGFjZURhdGEoZSx0LFxcXCJcXFwiKX0scmVwbGFjZURhdGE6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPXRoaXMuZGF0YS5zdWJzdHJpbmcoMCxlKSxpPXRoaXMuZGF0YS5zdWJzdHJpbmcoZSt0KTtuPXIrbitpLHRoaXMubm9kZVZhbHVlPXRoaXMuZGF0YT1uLHRoaXMubGVuZ3RoPW4ubGVuZ3RofX07RChaLE4pO2Z1bmN0aW9uIGRlKCl7fWRlLnByb3RvdHlwZT17bm9kZU5hbWU6XFxcIiN0ZXh0XFxcIixub2RlVHlwZTpuZSxzcGxpdFRleHQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5kYXRhLG49dC5zdWJzdHJpbmcoZSk7dD10LnN1YnN0cmluZygwLGUpLHRoaXMuZGF0YT10aGlzLm5vZGVWYWx1ZT10LHRoaXMubGVuZ3RoPXQubGVuZ3RoO3ZhciByPXRoaXMub3duZXJEb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuKTtyZXR1cm4gdGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHIsdGhpcy5uZXh0U2libGluZykscn19O0QoZGUsWik7ZnVuY3Rpb24gdmUoKXt9dmUucHJvdG90eXBlPXtub2RlTmFtZTpcXFwiI2NvbW1lbnRcXFwiLG5vZGVUeXBlOlllfTtEKHZlLFopO2Z1bmN0aW9uIGdlKCl7fWdlLnByb3RvdHlwZT17bm9kZU5hbWU6XFxcIiNjZGF0YS1zZWN0aW9uXFxcIixub2RlVHlwZTprZX07RChnZSxaKTtmdW5jdGlvbiBFZSgpe31FZS5wcm90b3R5cGUubm9kZVR5cGU9emU7RChFZSxOKTtmdW5jdGlvbiBldCgpe31ldC5wcm90b3R5cGUubm9kZVR5cGU9X3Q7RChldCxOKTtmdW5jdGlvbiB0dCgpe310dC5wcm90b3R5cGUubm9kZVR5cGU9YnQ7RCh0dCxOKTtmdW5jdGlvbiBOZSgpe31OZS5wcm90b3R5cGUubm9kZVR5cGU9VmU7RChOZSxOKTtmdW5jdGlvbiBhZSgpe31hZS5wcm90b3R5cGUubm9kZU5hbWU9XFxcIiNkb2N1bWVudC1mcmFnbWVudFxcXCI7YWUucHJvdG90eXBlLm5vZGVUeXBlPVI7RChhZSxOKTtmdW5jdGlvbiB5ZSgpe315ZS5wcm90b3R5cGUubm9kZVR5cGU9cWU7RCh5ZSxOKTtmdW5jdGlvbiBudCgpe31udC5wcm90b3R5cGUuc2VyaWFsaXplVG9TdHJpbmc9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBydC5jYWxsKGUsdCxuKX07Ti5wcm90b3R5cGUudG9TdHJpbmc9cnQ7ZnVuY3Rpb24gcnQoZSx0KXt2YXIgbj1bXSxyPXRoaXMubm9kZVR5cGU9PTkmJnRoaXMuZG9jdW1lbnRFbGVtZW50fHx0aGlzLGk9ci5wcmVmaXgsYT1yLm5hbWVzcGFjZVVSSTtpZihhJiZpPT1udWxsKXt2YXIgaT1yLmxvb2t1cFByZWZpeChhKTtpZihpPT1udWxsKXZhciBzPVt7bmFtZXNwYWNlOmEscHJlZml4Om51bGx9XX1yZXR1cm4gWSh0aGlzLG4sZSx0LHMpLG4uam9pbihcXFwiXFxcIil9ZnVuY3Rpb24gaXQoZSx0LG4pe3ZhciByPWUucHJlZml4fHxcXFwiXFxcIixpPWUubmFtZXNwYWNlVVJJO2lmKCFyJiYhaXx8cj09PVxcXCJ4bWxcXFwiJiZpPT09XFxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVxcXCJ8fGk9PVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zL1xcXCIpcmV0dXJuITE7Zm9yKHZhciBhPW4ubGVuZ3RoO2EtLTspe3ZhciBzPW5bYV07aWYocy5wcmVmaXg9PXIpcmV0dXJuIHMubmFtZXNwYWNlIT1pfXJldHVybiEwfWZ1bmN0aW9uIFkoZSx0LG4scixpKXtpZihyKWlmKGU9cihlKSxlKXtpZih0eXBlb2YgZT09XFxcInN0cmluZ1xcXCIpe3QucHVzaChlKTtyZXR1cm59fWVsc2UgcmV0dXJuO3N3aXRjaChlLm5vZGVUeXBlKXtjYXNlIHg6aXx8KGk9W10pO3ZhciBhPWkubGVuZ3RoLHM9ZS5hdHRyaWJ1dGVzLGM9cy5sZW5ndGgsbD1lLmZpcnN0Q2hpbGQsbz1lLnRhZ05hbWU7bj1UdD09PWUubmFtZXNwYWNlVVJJfHxuLHQucHVzaChcXFwiPFxcXCIsbyk7Zm9yKHZhciB1PTA7dTxjO3UrKyl7dmFyIGg9cy5pdGVtKHUpO2gucHJlZml4PT1cXFwieG1sbnNcXFwiP2kucHVzaCh7cHJlZml4OmgubG9jYWxOYW1lLG5hbWVzcGFjZTpoLnZhbHVlfSk6aC5ub2RlTmFtZT09XFxcInhtbG5zXFxcIiYmaS5wdXNoKHtwcmVmaXg6XFxcIlxcXCIsbmFtZXNwYWNlOmgudmFsdWV9KX1mb3IodmFyIHU9MDt1PGM7dSsrKXt2YXIgaD1zLml0ZW0odSk7aWYoaXQoaCxuLGkpKXt2YXIgcD1oLnByZWZpeHx8XFxcIlxcXCIsZD1oLm5hbWVzcGFjZVVSSSxUPXA/XFxcIiB4bWxuczpcXFwiK3A6XFxcIiB4bWxuc1xcXCI7dC5wdXNoKFQsJz1cXFwiJyxkLCdcXFwiJyksaS5wdXNoKHtwcmVmaXg6cCxuYW1lc3BhY2U6ZH0pfVkoaCx0LG4scixpKX1pZihpdChlLG4saSkpe3ZhciBwPWUucHJlZml4fHxcXFwiXFxcIixkPWUubmFtZXNwYWNlVVJJO2lmKGQpe3ZhciBUPXA/XFxcIiB4bWxuczpcXFwiK3A6XFxcIiB4bWxuc1xcXCI7dC5wdXNoKFQsJz1cXFwiJyxkLCdcXFwiJyksaS5wdXNoKHtwcmVmaXg6cCxuYW1lc3BhY2U6ZH0pfX1pZihsfHxuJiYhL14oPzptZXRhfGxpbmt8aW1nfGJyfGhyfGlucHV0KSQvaS50ZXN0KG8pKXtpZih0LnB1c2goXFxcIj5cXFwiKSxuJiYvXnNjcmlwdCQvaS50ZXN0KG8pKWZvcig7bDspbC5kYXRhP3QucHVzaChsLmRhdGEpOlkobCx0LG4scixpKSxsPWwubmV4dFNpYmxpbmc7ZWxzZSBmb3IoO2w7KVkobCx0LG4scixpKSxsPWwubmV4dFNpYmxpbmc7dC5wdXNoKFxcXCI8L1xcXCIsbyxcXFwiPlxcXCIpfWVsc2UgdC5wdXNoKFxcXCIvPlxcXCIpO3JldHVybjtjYXNlIFhlOmNhc2UgUjpmb3IodmFyIGw9ZS5maXJzdENoaWxkO2w7KVkobCx0LG4scixpKSxsPWwubmV4dFNpYmxpbmc7cmV0dXJuO2Nhc2UgazpyZXR1cm4gdC5wdXNoKFxcXCIgXFxcIixlLm5hbWUsJz1cXFwiJyxlLnZhbHVlLnJlcGxhY2UoL1s8JlxcXCJdL2csWmUpLCdcXFwiJyk7Y2FzZSBuZTpyZXR1cm4gdC5wdXNoKGUuZGF0YS5yZXBsYWNlKC9bPCZdL2csWmUpLnJlcGxhY2UoL11dPi9nLFxcXCJdXSZndDtcXFwiKSk7Y2FzZSBrZTpyZXR1cm4gdC5wdXNoKFxcXCI8IVtDREFUQVtcXFwiLGUuZGF0YSxcXFwiXV0+XFxcIik7Y2FzZSBZZTpyZXR1cm4gdC5wdXNoKFxcXCI8IS0tXFxcIixlLmRhdGEsXFxcIi0tPlxcXCIpO2Nhc2UgemU6dmFyIG09ZS5wdWJsaWNJZCxmPWUuc3lzdGVtSWQ7aWYodC5wdXNoKFxcXCI8IURPQ1RZUEUgXFxcIixlLm5hbWUpLG0pdC5wdXNoKFxcXCIgUFVCTElDIFxcXCIsbSksZiYmZiE9XFxcIi5cXFwiJiZ0LnB1c2goXFxcIiBcXFwiLGYpLHQucHVzaChcXFwiPlxcXCIpO2Vsc2UgaWYoZiYmZiE9XFxcIi5cXFwiKXQucHVzaChcXFwiIFNZU1RFTSBcXFwiLGYsXFxcIj5cXFwiKTtlbHNle3ZhciBBPWUuaW50ZXJuYWxTdWJzZXQ7QSYmdC5wdXNoKFxcXCIgW1xcXCIsQSxcXFwiXVxcXCIpLHQucHVzaChcXFwiPlxcXCIpfXJldHVybjtjYXNlIHFlOnJldHVybiB0LnB1c2goXFxcIjw/XFxcIixlLnRhcmdldCxcXFwiIFxcXCIsZS5kYXRhLFxcXCI/PlxcXCIpO2Nhc2UgVmU6cmV0dXJuIHQucHVzaChcXFwiJlxcXCIsZS5ub2RlTmFtZSxcXFwiO1xcXCIpO2RlZmF1bHQ6dC5wdXNoKFxcXCI/P1xcXCIsZS5ub2RlTmFtZSl9fWZ1bmN0aW9uIGF0KGUsdCxuKXt2YXIgcjtzd2l0Y2godC5ub2RlVHlwZSl7Y2FzZSB4OnI9dC5jbG9uZU5vZGUoITEpLHIub3duZXJEb2N1bWVudD1lO2Nhc2UgUjpicmVhaztjYXNlIGs6bj0hMDticmVha31pZihyfHwocj10LmNsb25lTm9kZSghMSkpLHIub3duZXJEb2N1bWVudD1lLHIucGFyZW50Tm9kZT1udWxsLG4pZm9yKHZhciBpPXQuZmlyc3RDaGlsZDtpOylyLmFwcGVuZENoaWxkKGF0KGUsaSxuKSksaT1pLm5leHRTaWJsaW5nO3JldHVybiByfWZ1bmN0aW9uIERlKGUsdCxuKXt2YXIgcj1uZXcgdC5jb25zdHJ1Y3Rvcjtmb3IodmFyIGkgaW4gdCl7dmFyIGE9dFtpXTt0eXBlb2YgYSE9XFxcIm9iamVjdFxcXCImJmEhPXJbaV0mJihyW2ldPWEpfXN3aXRjaCh0LmNoaWxkTm9kZXMmJihyLmNoaWxkTm9kZXM9bmV3IE0pLHIub3duZXJEb2N1bWVudD1lLHIubm9kZVR5cGUpe2Nhc2UgeDp2YXIgcz10LmF0dHJpYnV0ZXMsYz1yLmF0dHJpYnV0ZXM9bmV3IHJlLGw9cy5sZW5ndGg7Yy5fb3duZXJFbGVtZW50PXI7Zm9yKHZhciBvPTA7bzxsO28rKylyLnNldEF0dHJpYnV0ZU5vZGUoRGUoZSxzLml0ZW0obyksITApKTticmVhaztjYXNlIGs6bj0hMH1pZihuKWZvcih2YXIgdT10LmZpcnN0Q2hpbGQ7dTspci5hcHBlbmRDaGlsZChEZShlLHUsbikpLHU9dS5uZXh0U2libGluZztyZXR1cm4gcn1mdW5jdGlvbiBzdChlLHQsbil7ZVt0XT1ufXRyeXtpZihPYmplY3QuZGVmaW5lUHJvcGVydHkpe2xldCBlPWZ1bmN0aW9uKHQpe3N3aXRjaCh0Lm5vZGVUeXBlKXtjYXNlIHg6Y2FzZSBSOnZhciBuPVtdO2Zvcih0PXQuZmlyc3RDaGlsZDt0Oyl0Lm5vZGVUeXBlIT09NyYmdC5ub2RlVHlwZSE9PTgmJm4ucHVzaChlKHQpKSx0PXQubmV4dFNpYmxpbmc7cmV0dXJuIG4uam9pbihcXFwiXFxcIik7ZGVmYXVsdDpyZXR1cm4gdC5ub2RlVmFsdWV9fTtIdD1lLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShWLnByb3RvdHlwZSxcXFwibGVuZ3RoXFxcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG1lKHRoaXMpLHRoaXMuJCRsZW5ndGh9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KE4ucHJvdG90eXBlLFxcXCJ0ZXh0Q29udGVudFxcXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBlKHRoaXMpfSxzZXQ6ZnVuY3Rpb24odCl7c3dpdGNoKHRoaXMubm9kZVR5cGUpe2Nhc2UgeDpjYXNlIFI6Zm9yKDt0aGlzLmZpcnN0Q2hpbGQ7KXRoaXMucmVtb3ZlQ2hpbGQodGhpcy5maXJzdENoaWxkKTsodHx8U3RyaW5nKHQpKSYmdGhpcy5hcHBlbmRDaGlsZCh0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodCkpO2JyZWFrO2RlZmF1bHQ6dGhpcy5kYXRhPXQsdGhpcy52YWx1ZT10LHRoaXMubm9kZVZhbHVlPXR9fX0pLHN0PWZ1bmN0aW9uKHQsbixyKXt0W1xcXCIkJFxcXCIrbl09cn19fWNhdGNoKGUpe312YXIgSHQ7Sy5Ob2RlPU47Sy5ET01FeGNlcHRpb249VTtLLkRPTUltcGxlbWVudGF0aW9uPUJlO0suWE1MU2VyaWFsaXplcj1udH0pO3ZhciBjdD1lZShIPT57ZnVuY3Rpb24gb3QoZSl7dGhpcy5vcHRpb25zPWV8fHtsb2NhdG9yOnt9fX1vdC5wcm90b3R5cGUucGFyc2VGcm9tU3RyaW5nPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy5vcHRpb25zLHI9bmV3IFN0LGk9bi5kb21CdWlsZGVyfHxuZXcgSixhPW4uZXJyb3JIYW5kbGVyLHM9bi5sb2NhdG9yLGM9bi54bWxuc3x8e30sbD0vXFxcXC94P2h0bWw/JC8udGVzdCh0KSxvPWw/T3QuZW50aXR5TWFwOntsdDpcXFwiPFxcXCIsZ3Q6XFxcIj5cXFwiLGFtcDpcXFwiJlxcXCIscXVvdDonXFxcIicsYXBvczpcXFwiJ1xcXCJ9O3JldHVybiBzJiZpLnNldERvY3VtZW50TG9jYXRvcihzKSxyLmVycm9ySGFuZGxlcj1SdChhLGkscyksci5kb21CdWlsZGVyPW4uZG9tQnVpbGRlcnx8aSxsJiYoY1tcXFwiXFxcIl09XFxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcXFwiKSxjLnhtbD1jLnhtbHx8XFxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVxcXCIsZSYmdHlwZW9mIGU9PVxcXCJzdHJpbmdcXFwiP3IucGFyc2UoZSxjLG8pOnIuZXJyb3JIYW5kbGVyLmVycm9yKFxcXCJpbnZhbGlkIGRvYyBzb3VyY2VcXFwiKSxpLmRvY307ZnVuY3Rpb24gUnQoZSx0LG4pe2lmKCFlKXtpZih0IGluc3RhbmNlb2YgSilyZXR1cm4gdDtlPXR9dmFyIHI9e30saT1lIGluc3RhbmNlb2YgRnVuY3Rpb247bj1ufHx7fTtmdW5jdGlvbiBhKHMpe3ZhciBjPWVbc107IWMmJmkmJihjPWUubGVuZ3RoPT0yP2Z1bmN0aW9uKGwpe2UocyxsKX06ZSkscltzXT1jJiZmdW5jdGlvbihsKXtjKFxcXCJbeG1sZG9tIFxcXCIrcytcXFwiXVxcdFxcXCIrbCtUZShuKSl9fHxmdW5jdGlvbigpe319cmV0dXJuIGEoXFxcIndhcm5pbmdcXFwiKSxhKFxcXCJlcnJvclxcXCIpLGEoXFxcImZhdGFsRXJyb3JcXFwiKSxyfWZ1bmN0aW9uIEooKXt0aGlzLmNkYXRhPSExfWZ1bmN0aW9uIFgoZSx0KXt0LmxpbmVOdW1iZXI9ZS5saW5lTnVtYmVyLHQuY29sdW1uTnVtYmVyPWUuY29sdW1uTnVtYmVyfUoucHJvdG90eXBlPXtzdGFydERvY3VtZW50OmZ1bmN0aW9uKCl7dGhpcy5kb2M9bmV3IFV0KCkuY3JlYXRlRG9jdW1lbnQobnVsbCxudWxsLG51bGwpLHRoaXMubG9jYXRvciYmKHRoaXMuZG9jLmRvY3VtZW50VVJJPXRoaXMubG9jYXRvci5zeXN0ZW1JZCl9LHN0YXJ0RWxlbWVudDpmdW5jdGlvbihlLHQsbixyKXt2YXIgaT10aGlzLmRvYyxhPWkuY3JlYXRlRWxlbWVudE5TKGUsbnx8dCkscz1yLmxlbmd0aDtzZSh0aGlzLGEpLHRoaXMuY3VycmVudEVsZW1lbnQ9YSx0aGlzLmxvY2F0b3ImJlgodGhpcy5sb2NhdG9yLGEpO2Zvcih2YXIgYz0wO2M8cztjKyspe3ZhciBlPXIuZ2V0VVJJKGMpLGw9ci5nZXRWYWx1ZShjKSxuPXIuZ2V0UU5hbWUoYyksbz1pLmNyZWF0ZUF0dHJpYnV0ZU5TKGUsbik7dGhpcy5sb2NhdG9yJiZYKHIuZ2V0TG9jYXRvcihjKSxvKSxvLnZhbHVlPW8ubm9kZVZhbHVlPWwsYS5zZXRBdHRyaWJ1dGVOb2RlKG8pfX0sZW5kRWxlbWVudDpmdW5jdGlvbihlLHQsbil7dmFyIHI9dGhpcy5jdXJyZW50RWxlbWVudCxpPXIudGFnTmFtZTt0aGlzLmN1cnJlbnRFbGVtZW50PXIucGFyZW50Tm9kZX0sc3RhcnRQcmVmaXhNYXBwaW5nOmZ1bmN0aW9uKGUsdCl7fSxlbmRQcmVmaXhNYXBwaW5nOmZ1bmN0aW9uKGUpe30scHJvY2Vzc2luZ0luc3RydWN0aW9uOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy5kb2MuY3JlYXRlUHJvY2Vzc2luZ0luc3RydWN0aW9uKGUsdCk7dGhpcy5sb2NhdG9yJiZYKHRoaXMubG9jYXRvcixuKSxzZSh0aGlzLG4pfSxpZ25vcmFibGVXaGl0ZXNwYWNlOmZ1bmN0aW9uKGUsdCxuKXt9LGNoYXJhY3RlcnM6ZnVuY3Rpb24oZSx0LG4pe2lmKGU9dXQuYXBwbHkodGhpcyxhcmd1bWVudHMpLGUpe2lmKHRoaXMuY2RhdGEpdmFyIHI9dGhpcy5kb2MuY3JlYXRlQ0RBVEFTZWN0aW9uKGUpO2Vsc2UgdmFyIHI9dGhpcy5kb2MuY3JlYXRlVGV4dE5vZGUoZSk7dGhpcy5jdXJyZW50RWxlbWVudD90aGlzLmN1cnJlbnRFbGVtZW50LmFwcGVuZENoaWxkKHIpOi9eXFxcXHMqJC8udGVzdChlKSYmdGhpcy5kb2MuYXBwZW5kQ2hpbGQociksdGhpcy5sb2NhdG9yJiZYKHRoaXMubG9jYXRvcixyKX19LHNraXBwZWRFbnRpdHk6ZnVuY3Rpb24oZSl7fSxlbmREb2N1bWVudDpmdW5jdGlvbigpe3RoaXMuZG9jLm5vcm1hbGl6ZSgpfSxzZXREb2N1bWVudExvY2F0b3I6ZnVuY3Rpb24oZSl7KHRoaXMubG9jYXRvcj1lKSYmKGUubGluZU51bWJlcj0wKX0sY29tbWVudDpmdW5jdGlvbihlLHQsbil7ZT11dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIHI9dGhpcy5kb2MuY3JlYXRlQ29tbWVudChlKTt0aGlzLmxvY2F0b3ImJlgodGhpcy5sb2NhdG9yLHIpLHNlKHRoaXMscil9LHN0YXJ0Q0RBVEE6ZnVuY3Rpb24oKXt0aGlzLmNkYXRhPSEwfSxlbmRDREFUQTpmdW5jdGlvbigpe3RoaXMuY2RhdGE9ITF9LHN0YXJ0RFREOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10aGlzLmRvYy5pbXBsZW1lbnRhdGlvbjtpZihyJiZyLmNyZWF0ZURvY3VtZW50VHlwZSl7dmFyIGk9ci5jcmVhdGVEb2N1bWVudFR5cGUoZSx0LG4pO3RoaXMubG9jYXRvciYmWCh0aGlzLmxvY2F0b3IsaSksc2UodGhpcyxpKX19LHdhcm5pbmc6ZnVuY3Rpb24oZSl7Y29uc29sZS53YXJuKFxcXCJbeG1sZG9tIHdhcm5pbmddXFx0XFxcIitlLFRlKHRoaXMubG9jYXRvcikpfSxlcnJvcjpmdW5jdGlvbihlKXtjb25zb2xlLmVycm9yKFxcXCJbeG1sZG9tIGVycm9yXVxcdFxcXCIrZSxUZSh0aGlzLmxvY2F0b3IpKX0sZmF0YWxFcnJvcjpmdW5jdGlvbihlKXt0aHJvdyBuZXcgTXQoZSx0aGlzLmxvY2F0b3IpfX07ZnVuY3Rpb24gVGUoZSl7aWYoZSlyZXR1cm5gXFxuQGArKGUuc3lzdGVtSWR8fFxcXCJcXFwiKStcXFwiI1tsaW5lOlxcXCIrZS5saW5lTnVtYmVyK1xcXCIsY29sOlxcXCIrZS5jb2x1bW5OdW1iZXIrXFxcIl1cXFwifWZ1bmN0aW9uIHV0KGUsdCxuKXtyZXR1cm4gdHlwZW9mIGU9PVxcXCJzdHJpbmdcXFwiP2Uuc3Vic3RyKHQsbik6ZS5sZW5ndGg+PXQrbnx8dD9uZXcgamF2YS5sYW5nLlN0cmluZyhlLHQsbikrXFxcIlxcXCI6ZX1cXFwiZW5kRFRELHN0YXJ0RW50aXR5LGVuZEVudGl0eSxhdHRyaWJ1dGVEZWNsLGVsZW1lbnREZWNsLGV4dGVybmFsRW50aXR5RGVjbCxpbnRlcm5hbEVudGl0eURlY2wscmVzb2x2ZUVudGl0eSxnZXRFeHRlcm5hbFN1YnNldCxub3RhdGlvbkRlY2wsdW5wYXJzZWRFbnRpdHlEZWNsXFxcIi5yZXBsYWNlKC9cXFxcdysvZyxmdW5jdGlvbihlKXtKLnByb3RvdHlwZVtlXT1mdW5jdGlvbigpe3JldHVybiBudWxsfX0pO2Z1bmN0aW9uIHNlKGUsdCl7ZS5jdXJyZW50RWxlbWVudD9lLmN1cnJlbnRFbGVtZW50LmFwcGVuZENoaWxkKHQpOmUuZG9jLmFwcGVuZENoaWxkKHQpfXZhciBPdD1SZSgpLGx0PVBlKCksU3Q9bHQuWE1MUmVhZGVyLE10PWx0LlBhcnNlRXJyb3IsVXQ9SC5ET01JbXBsZW1lbnRhdGlvbj13ZSgpLkRPTUltcGxlbWVudGF0aW9uO0guWE1MU2VyaWFsaXplcj13ZSgpLlhNTFNlcmlhbGl6ZXI7SC5ET01QYXJzZXI9b3Q7SC5fX0RPTUhhbmRsZXI9Sn0pO2Z1bmN0aW9uIGxlKGUsdCl7cmV0dXJuKGUldCt0KSV0fWZ1bmN0aW9uIGNlKGUpe3JldHVyblxcXCJJRF94eXh5eHl4eXh5eHlcXFwiLnJlcGxhY2UoL1t4eV0vZyxmdW5jdGlvbih0KXt2YXIgbj1NYXRoLnJhbmRvbSgpKjE2fDAscj10PT1cXFwieFxcXCI/bjpuJjN8ODtyZXR1cm4gci50b1N0cmluZygxNil9KX12YXJ7RE9NUGFyc2VyOiR0fT1jdCgpLEZ0PS8oPChzcGFufGRpdikuKj88XFxcXC8oc3BhbnxkaXYpPikvZyxPPXNlbGYsZnQ9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLnF1ZXVlPVtdO3RoaXMucGFyc2luZz0hMTt0aGlzLnBhcnNlVGl0bGU9ITE7Ty5hZGRFdmVudExpc3RlbmVyKFxcXCJtZXNzYWdlXFxcIix0PT57aWYodC5kYXRhLnR5cGU9PVxcXCJvcHRpb25zXFxcIil7bGV0e2RlZmF1bHRDYWxlbmRhcjpuLGZvcm1hdDpyLHBhcnNlVGl0bGU6aSxzdXBwb3J0c1RpbWVsaW5lczphLHRpbWVsaW5lVGFnOnN9PXQuZGF0YTt0aGlzLmRlZmF1bHRDYWxlbmRhcj1uLHRoaXMuZm9ybWF0PXIsdGhpcy5wYXJzZVRpdGxlPWksdGhpcy5zdXBwb3J0c1RpbWVsaW5lcz1hLHRoaXMudGltZWxpbmVUYWc9c319KSxPLmFkZEV2ZW50TGlzdGVuZXIoXFxcIm1lc3NhZ2VcXFwiLHQ9PntpZih0LmRhdGEudHlwZT09XFxcImNhbGVuZGFyc1xcXCIpe2xldHtjYWxlbmRhcnM6bn09dC5kYXRhO3RoaXMuY2FsZW5kYXJzPVsuLi5uXX19KSxPLmFkZEV2ZW50TGlzdGVuZXIoXFxcIm1lc3NhZ2VcXFwiLHQ9Pnt0LmRhdGEudHlwZT09XFxcInF1ZXVlXFxcIiYmdGhpcy5hZGQoLi4udC5kYXRhLnBhdGhzKX0pfWFkZCguLi50KXt0aGlzLnF1ZXVlLnB1c2goLi4udCksdGhpcy5wYXJzaW5nfHx0aGlzLnBhcnNlKCl9YXN5bmMgcGFyc2UoKXtmb3IodGhpcy5wYXJzaW5nPSEwO3RoaXMucXVldWUubGVuZ3RoOyl7bGV0IHQ9dGhpcy5xdWV1ZS5zaGlmdCgpO2F3YWl0IHRoaXMuZ2V0RmlsZURhdGEodCl9dGhpcy5wYXJzaW5nPSExLE8ucG9zdE1lc3NhZ2Uoe3R5cGU6XFxcInNhdmVcXFwifSl9YXN5bmMgZ2V0RmlsZURhdGEodCl7bGV0IG49dGhpcztyZXR1cm4gbmV3IFByb21pc2Uocj0+e2Z1bmN0aW9uIGkoYSl7aWYoYS5kYXRhLnR5cGU9PVxcXCJxdWV1ZVxcXCIpe08ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcXFwibWVzc2FnZVxcXCIsaSkscigpO3JldHVybn1pZihhLmRhdGEudHlwZSE9XFxcImZpbGVcXFwifHxhLmRhdGEucGF0aCE9dClyZXR1cm47Ty5yZW1vdmVFdmVudExpc3RlbmVyKFxcXCJtZXNzYWdlXFxcIixpKTtsZXR7ZGF0YTpzLGNhY2hlOmMsYWxsVGFnczpsLGZpbGU6b309YS5kYXRhO24ucGFyc2VGaWxlRm9yRXZlbnRzKHMsYyxsLG8pLHIoKX1zZXRUaW1lb3V0KCgpPT5yLDUwMCksTy5hZGRFdmVudExpc3RlbmVyKFxcXCJtZXNzYWdlXFxcIixpKSxPLnBvc3RNZXNzYWdlKHtwYXRoOnQsdHlwZTpcXFwiZ2V0XFxcIn0pfSl9Z2V0RGF0YUZyb21Gcm9udG1hdHRlcih0KXtsZXQgbixyO3JldHVybiB0JiYobj10PT1udWxsP3ZvaWQgMDp0W1xcXCJmYy1jYWxlbmRhclxcXCJdLHI9dD09bnVsbD92b2lkIDA6dFtcXFwiZmMtY2F0ZWdvcnlcXFwiXSksKCFufHwhbi5sZW5ndGgpJiYobj10aGlzLmRlZmF1bHRDYWxlbmRhciksbj1uLnRvTG93ZXJDYXNlKCkse2NhbGVuZGFyOnRoaXMuY2FsZW5kYXJzLmZpbmQoYT0+bj09YS5uYW1lLnRvTG93ZXJDYXNlKCkpLGZjQ2F0ZWdvcnk6cn19cGFyc2VGaWxlRm9yRXZlbnRzKHQsbixyLGkpe3ZhciBvLHUsaCxwLGQsVDtsZXQgYT1bXSx7ZnJvbnRtYXR0ZXI6c309biE9bnVsbD9uOnt9LHtjYWxlbmRhcjpjLGZjQ2F0ZWdvcnk6bH09dGhpcy5nZXREYXRhRnJvbUZyb250bWF0dGVyKHMpO2lmKCEhYyl7dGhpcy5zdXBwb3J0c1RpbWVsaW5lcyYmciYmci5pbmNsdWRlcyh0aGlzLnRpbWVsaW5lVGFnKSYmYS5wdXNoKC4uLnRoaXMucGFyc2VUaW1lbGluZUV2ZW50cyhjLHQsaSxsKSksYS5wdXNoKC4uLnRoaXMucGFyc2VGcm9udG1hdHRlckV2ZW50cyhjLGwscyxpKSk7Zm9yKGxldCBtIG9mIGEpe2xldCBmPWMuZXZlbnRzLmZpbmQoQT0+QS5ub3RlPT1pLnBhdGgmJighbS50aW1lc3RhbXB8fEEudGltZXN0YW1wPT1tLnRpbWVzdGFtcCkpOyhmPT1udWxsP3ZvaWQgMDpmLmRhdGUuZGF5KT09bS5kYXRlLmRheSYmKGY9PW51bGw/dm9pZCAwOmYuZGF0ZS5tb250aCk9PW0uZGF0ZS5tb250aCYmKGY9PW51bGw/dm9pZCAwOmYuZGF0ZS55ZWFyKT09bS5kYXRlLnllYXImJigobz1mPT1udWxsP3ZvaWQgMDpmLmVuZCk9PW51bGw/dm9pZCAwOm8uZGF5KT09KCh1PW0uZW5kKT09bnVsbD92b2lkIDA6dS5kYXkpJiYoKGg9Zj09bnVsbD92b2lkIDA6Zi5lbmQpPT1udWxsP3ZvaWQgMDpoLm1vbnRoKT09KChwPW0uZW5kKT09bnVsbD92b2lkIDA6cC5tb250aCkmJigoZD1mPT1udWxsP3ZvaWQgMDpmLmVuZCk9PW51bGw/dm9pZCAwOmQueWVhcik9PSgoVD1tLmVuZCk9PW51bGw/dm9pZCAwOlQueWVhcikmJihmPT1udWxsP3ZvaWQgMDpmLmNhdGVnb3J5KT09bS5jYXRlZ29yeSYmKCFtLnRpbWVzdGFtcCYmIShmPT1udWxsP3ZvaWQgMDpmLnRpbWVzdGFtcCl8fChmPT1udWxsP3ZvaWQgMDpmLnRpbWVzdGFtcCk9PW0udGltZXN0YW1wKXx8Ty5wb3N0TWVzc2FnZSh7dHlwZTpcXFwidXBkYXRlXFxcIixpZDpjLmlkLGluZGV4OmY/Yy5ldmVudHMuZmluZEluZGV4KEE9PkEuaWQ9PShmPT1udWxsP3ZvaWQgMDpmLmlkKSk6LTEsZXZlbnQ6bSxvcmlnaW5hbDpmfSl9fX1wYXJzZUZyb250bWF0dGVyRXZlbnRzKHQsbixyLGkpe2xldHtkYXRlOmEsZW5kOnN9PXRoaXMuZ2V0RGF0ZXMocix0aGlzLnBhcnNlVGl0bGU/aS5iYXNlbmFtZTpcXFwiXFxcIik7aWYoIWEpcmV0dXJuW107aWYoKGE9PW51bGw/dm9pZCAwOmEubW9udGgpJiZ0eXBlb2YoYT09bnVsbD92b2lkIDA6YS5tb250aCk9PVxcXCJzdHJpbmdcXFwiKXtsZXQgbz10LnN0YXRpYy5tb250aHMuZmluZCh1PT51Lm5hbWU9PWEubW9udGgpO28/YS5tb250aD10LnN0YXRpYy5tb250aHMuaW5kZXhPZihvKTphLm1vbnRoPW51bGx9ZWxzZShhPT1udWxsP3ZvaWQgMDphLm1vbnRoKSYmdHlwZW9mKGE9PW51bGw/dm9pZCAwOmEubW9udGgpPT1cXFwibnVtYmVyXFxcIiYmKGEubW9udGg9bGUoYS5tb250aC0xLHQuc3RhdGljLm1vbnRocy5sZW5ndGgpKTtpZigocz09bnVsbD92b2lkIDA6cy5tb250aCkmJnR5cGVvZihzPT1udWxsP3ZvaWQgMDpzLm1vbnRoKT09XFxcInN0cmluZ1xcXCIpe2xldCBvPXQuc3RhdGljLm1vbnRocy5maW5kKHU9PnUubmFtZT09cy5tb250aCk7bz9zLm1vbnRoPXQuc3RhdGljLm1vbnRocy5pbmRleE9mKG8pOnMubW9udGg9bnVsbH1lbHNlKHM9PW51bGw/dm9pZCAwOnMubW9udGgpJiZ0eXBlb2Yocz09bnVsbD92b2lkIDA6cy5tb250aCk9PVxcXCJudW1iZXJcXFwiJiYocy5tb250aD1sZShzLm1vbnRoLTEsdC5zdGF0aWMubW9udGhzLmxlbmd0aCkpO2xldCBjPU51bWJlcihgJHthLnllYXJ9JHthLm1vbnRofSR7YS5kYXl9MDBgKSxsPXQuY2F0ZWdvcmllcy5maW5kKG89PihvPT1udWxsP3ZvaWQgMDpvLm5hbWUpPT1uKTtyZXR1cm5be2lkOmNlKDYpLG5hbWU6aS5iYXNlbmFtZSxub3RlOmkucGF0aCxkYXRlOmEsZW5kOnMsY2F0ZWdvcnk6bD09bnVsbD92b2lkIDA6bC5pZCxkZXNjcmlwdGlvbjpcXFwiXFxcIn1dfXBhcnNlVGltZWxpbmVFdmVudHModCxuLHIsaSl7dmFyIGM7bGV0IGE9W10scz1uZXcgJHQ7Zm9yKGxldCBsIG9mIG4ubWF0Y2hBbGwoRnQpKXtsZXQgbz1zLnBhcnNlRnJvbVN0cmluZyhsWzBdLFxcXCJ0ZXh0L2h0bWxcXFwiKSx1PXtjbGFzczpvLmRvY3VtZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoXFxcImNsYXNzXFxcIiksZGF0YXNldDp7ZGF0ZTpvLmRvY3VtZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoXFxcImRhdGEtZGF0ZVxcXCIpLHRpdGxlOm8uZG9jdW1lbnRFbGVtZW50LmdldEF0dHJpYnV0ZShcXFwiZGF0YS10aXRsZVxcXCIpLGNsYXNzOm8uZG9jdW1lbnRFbGVtZW50LmdldEF0dHJpYnV0ZShcXFwiZGF0YS1jbGFzc1xcXCIpLGVuZDpvLmRvY3VtZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoXFxcImRhdGEtZW5kXFxcIil9LGNvbnRlbnQ6by5kb2N1bWVudEVsZW1lbnQudGV4dENvbnRlbnR9O2lmKHUuY2xhc3MhPT1cXFwib2ItdGltZWxpbmVzXFxcInx8IXUuZGF0YXNldC5kYXRlKWNvbnRpbnVlO2xldCBoPU51bWJlcih1LmRhdGFzZXQuZGF0ZVswXT09XFxcIi1cXFwiPyt1LmRhdGFzZXQuZGF0ZS5zdWJzdHJpbmcoMSx1LmRhdGFzZXQuZGF0ZS5sZW5ndGgpLnNwbGl0KFxcXCItXFxcIikuam9pbihcXFwiXFxcIikqLTE6K3UuZGF0YXNldC5kYXRlLnNwbGl0KFxcXCItXFxcIikuam9pbihcXFwiXFxcIikpLHA9dS5kYXRhc2V0LmRhdGUuc3BsaXQoLyg/PCFeKS0vKSxkPXt5ZWFyOnBhcnNlSW50KHBbMF0pLG1vbnRoOnBhcnNlSW50KHBbMV0pLGRheTpwYXJzZUludChwWzJdKX0sVDt1LmRhdGFzZXQuZW5kJiYocD11LmRhdGFzZXQuZW5kLnNwbGl0KC8oPzwhXiktLyksVD17eWVhcjpwYXJzZUludChwWzBdKSxtb250aDpwYXJzZUludChwWzFdKSxkYXk6cGFyc2VJbnQocFsyXSl9KTtsZXQgbT10LmNhdGVnb3JpZXMuZmluZChmPT4oZj09bnVsbD92b2lkIDA6Zi5uYW1lKT09aSk7YS5wdXNoKHtpZDpjZSg2KSxuYW1lOihjPXUuZGF0YXNldC50aXRsZSkhPW51bGw/YzpyLmJhc2VuYW1lLG5vdGU6ci5wYXRoLGRhdGU6ZCxlbmQ6VCx0aW1lc3RhbXA6aCxjYXRlZ29yeTptPT1udWxsP3ZvaWQgMDptLmlkLGRlc2NyaXB0aW9uOnUuY29udGVudH0pfXJldHVybiBhfXBhcnNlRGF0ZSh0KXt2YXIgbjtpZih0eXBlb2YgdD09XFxcInN0cmluZ1xcXCIpe2lmKCEvXFxcXGQrWy4vLV1cXFxcZCtbLi8tXVxcXFxkKy8udGVzdCh0KSlyZXR1cm47dHJ5e2xldFtyXT0obj10Lm1hdGNoKC9cXFxcZCtbLi8tXVxcXFxkK1suLy1dXFxcXGQrLykpIT1udWxsP246W107aWYoIXIpcmV0dXJuO2xldCBpPXIuc3BsaXQoL1suXFxcXC1cXFxcL10vKS5tYXAocz0+TnVtYmVyKHMpKSxhPVsuLi5uZXcgU2V0KHRoaXMuZm9ybWF0LnJlcGxhY2UoL1teXFxcXHddL2csXFxcIlxcXCIpLnRvVXBwZXJDYXNlKCkuc3BsaXQoXFxcIlxcXCIpKV07cmV0dXJue3llYXI6aVthLmluZGV4T2YoXFxcIllcXFwiKV0sbW9udGg6aVthLmluZGV4T2YoXFxcIk1cXFwiKV0sZGF5OmlbYS5pbmRleE9mKFxcXCJEXFxcIildfX1jYXRjaChyKXtyZXR1cm59fWVsc2UgcmV0dXJuIHR9Z2V0RGF0ZXModD17fSxuKXtsZXQgcj1cXFwiZmMtZGF0ZVxcXCJpbiB0P1xcXCJmYy1kYXRlXFxcIjpcXFwiZmMtc3RhcnRcXFwiLGk7dCYmciBpbiB0JiYoaT10W3JdKSxpfHwoaT1uKTtsZXQgYT10aGlzLnBhcnNlRGF0ZShpKSxzPVxcXCJmYy1lbmRcXFwiaW4gdD90W1xcXCJmYy1lbmRcXFwiXTpudWxsLGM9dGhpcy5wYXJzZURhdGUocyk7cmV0dXJue2RhdGU6YSxlbmQ6Y319fTtuZXcgZnQ7XFxuXCIpO1xufVxuIiwgImltcG9ydCB0eXBlIHsgQ3VycmVudENhbGVuZGFyRGF0YSwgTW9vbiwgUGhhc2UgfSBmcm9tIFwic3JjL0B0eXBlc1wiO1xuaW1wb3J0IHR5cGUgQVBJRGVmaW5pdGlvbiBmcm9tIFwic3JjL0B0eXBlcy9hcGlcIjtcbmltcG9ydCBDYWxlbmRhckhlbHBlciBmcm9tIFwic3JjL2hlbHBlclwiO1xuaW1wb3J0IEZhbnRhc3lDYWxlbmRhciBmcm9tIFwic3JjL21haW5cIjtcblxuaW1wb3J0IE1vb25VSSBmcm9tIFwiLi4vdmlldy91aS9Nb29uLnN2ZWx0ZVwiO1xuXG5leHBvcnQgY2xhc3MgQVBJIGltcGxlbWVudHMgQVBJRGVmaW5pdGlvbiB7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBwbHVnaW46IEZhbnRhc3lDYWxlbmRhcikge31cbiAgICBnZXRNb29ucyhkYXRlPzogQ3VycmVudENhbGVuZGFyRGF0YSwgbmFtZT86IHN0cmluZykge1xuICAgICAgICBjb25zdCBjYWxlbmRhciA9IG5hbWVcbiAgICAgICAgICAgID8gdGhpcy5wbHVnaW4uZGF0YS5jYWxlbmRhcnMuZmluZChcbiAgICAgICAgICAgICAgICAgICh7IG5hbWU6IGNfbmFtZSB9KSA9PiBjX25hbWUgPT0gbmFtZVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICA6IHRoaXMucGx1Z2luLmRlZmF1bHRDYWxlbmRhciA/PyB0aGlzLnBsdWdpbi5kZWZhdWx0Q2FsZW5kYXI7XG4gICAgICAgIGNvbnN0IGhlbHBlciA9IHRoaXMuX2dldEhlbHBlcihjYWxlbmRhcik7XG5cbiAgICAgICAgY29uc3QgZGF0ZVRvR2V0ID0gZGF0ZSA/IGRhdGUgOiBoZWxwZXIuY3VycmVudDtcblxuICAgICAgICBjb25zdCBkYXkgPSBoZWxwZXIuZ2V0RGF5Rm9yRGF0ZShkYXRlVG9HZXQpO1xuXG4gICAgICAgIGxldCBtb29uczogQXJyYXk8eyBpY29uOiBIVE1MU3BhbkVsZW1lbnQ7IG1vb246IE1vb247IHBoYXNlOiBQaGFzZSB9PiA9XG4gICAgICAgICAgICBbXTtcbiAgICAgICAgZm9yIChjb25zdCBbbW9vbiwgcGhhc2VdIG9mIGRheS5tb29ucykge1xuICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gY3JlYXRlU3BhbigpO1xuICAgICAgICAgICAgbmV3IE1vb25VSSh7XG4gICAgICAgICAgICAgICAgdGFyZ2V0LFxuICAgICAgICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICAgICAgICAgIG1vb24sXG4gICAgICAgICAgICAgICAgICAgIHBoYXNlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBtb29ucy5wdXNoKHsgaWNvbjogdGFyZ2V0LCBtb29uLCBwaGFzZSB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbW9vbnM7XG4gICAgfVxuICAgIHByaXZhdGUgX2dldEhlbHBlcihjYWxlbmRhciA9IHRoaXMucGx1Z2luLmRlZmF1bHRDYWxlbmRhcikge1xuICAgICAgICByZXR1cm4gbmV3IENhbGVuZGFySGVscGVyKGNhbGVuZGFyLCB0aGlzLnBsdWdpbik7XG4gICAgfVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7dzVCQUFRLEdBQVUsR0FBcUIsU0FBUyxVQUFTLFNBRXZELEVBTUUsT0FBTSxPQUxSLEVBS0UsT0FBTSxlQUpSLEVBSUUsT0FBTSx5QkFIUixFQUdFLE9BQU0sb0JBRlIsRUFFRSxPQUFNLHNCQURSLEVBQ0UsT0FBTSxlQUNKLEVBQTJDLE9BQU8sVUFBaEQsRUFBYyxFQUFBLGVBQUUsRUFBb0IsRUFBQSxxQkFVL0IsRUFBVyxDQUN0QixrQkFBbUIsTUFBTyxJQUEwQixXQUNwRCxRQUFTLE1BQU8sVUFBWSxZQVdqQixFQUFjLFVBQUEsQ0FDekIsR0FBSSxFQUFTLFFBQ1gsTUFBTyxJQUFJLFNBSWIsR0FBTSxHQUFTLEVBQU8s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QVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ2pHLE9BQVEsQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsV0FDakcsUUFBUyxDQUFDLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxXQUNsRyxLQUFNLENBQUMsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQy9GLE1BQU8sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsV0FDaEcsT0FBUSxDQUFDLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxXQUNqRyxLQUFNLENBQUMsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQy9GLE1BQU8sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsV0FDaEcsT0FBUSxDQUFDLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxXQUNqRyxRQUFTLENBQUMsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBSWxHLFNBQVUsQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3pILE9BQVEsQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3ZILEtBQU0sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3JILEtBQU0sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3JILEtBQU0sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3JILE9BQVEsQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3ZILEtBQU0sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3JILEtBQU0sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3JILEtBQU0sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBSXJILEtBQU0sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3BGLE9BQVEsQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3RGLEtBQU0sQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsV0FDL0YsS0FBTSxDQUFDLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxXQUNoSSxNQUFPLENBQUMsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxXQUNyRixPQUFRLENBQUMsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ2xJLFFBQVMsQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFdBQ3ZGLFFBQVMsQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsWUFJN0YsR0FBTSxFQUFHLEdBQVMsT0FBTyxLQUFLLElBQWMsR0FBTSxHQUFPLE9BQVEsSUFBTyxFQUFHLENBQ2hGLEdBQUksSUFBTSxHQUFPLElBRWpCLEdBQVksR0FBSSxlQUFpQixHQUFZLElBR2pELEdBQUksSUFBZ0IsR0E0Q3BCLEVBQVMsUUFBVSxHQUNuQixFQUFTLE9BQVMsR0FDbEIsRUFBUyxNQUFRLEdBQ2pCLEVBQVMsVUFBWSxHQUNyQixFQUFTLElBQU0sRUFBUyxZQUFjLEdBQ3RDLEVBQVMsT0FBUyxHQUNsQixFQUFTLE1BQVEsR0FHakIsRUFBUyxRQUFVLEdBQVUsUUFDN0IsRUFBUyxTQUFXLEdBQ3BCLEVBQVMsT0FBUyxHQUNsQixFQUFTLFNBQVcsR0FDcEIsRUFBUyxPQUFTLEdBQVUsT0FDNUIsRUFBUyxNQUFRLEdBR2pCLEVBQVMsT0FBUyxHQUdsQixFQUFTLE9BQVMsR0FDbEIsRUFBUyxPQUFTLEdBRWxCLEdBQUksSUFBWSxFQUVoQixNQUFPLFFDdHBHWCw0QkFFQSxPQUFPLGVBQWUsR0FBUyxhQUFjLENBQzNDLE1BQU8sS0FFVCxHQUFRLFFBQWEsT0FFckIsR0FBSSxJQUFTLEdBQXVCLE1BRWhDLEdBQWEsR0FBdUIsTUFFcEMsR0FBYyxHQUF1QixNQUVyQyxHQUFZLEdBQXVCLE1BRXZDLFlBQWdDLEVBQUssQ0FBRSxNQUFPLElBQU8sRUFBSSxXQUFhLEVBQU0sQ0FBRSxRQUFXLEdBRXpGLFlBQW9DLEVBQUcsQ0FBRSxHQUFJLE1BQU8sU0FBVyxhQUFlLEVBQUUsT0FBTyxXQUFhLEtBQU0sQ0FBRSxHQUFJLE1BQU0sUUFBUSxJQUFPLEdBQUksR0FBNEIsSUFBSyxDQUFFLEdBQUksR0FBSSxFQUFPLEVBQUksVUFBYSxHQUFJLE1BQU8sQ0FBRSxFQUFHLEVBQUcsRUFBRyxVQUFhLENBQUUsTUFBSSxJQUFLLEVBQUUsT0FBZSxDQUFFLEtBQU0sSUFBZSxDQUFFLEtBQU0sR0FBTyxNQUFPLEVBQUUsT0FBVyxFQUFHLFNBQVcsRUFBSSxDQUFFLEtBQU0sSUFBTyxFQUFHLEdBQU8sS0FBTSxJQUFJLFdBQVU7QUFBQSxxRkFBNEksR0FBSSxHQUFJLEVBQW1CLEdBQU0sRUFBUyxHQUFPLEVBQUssTUFBTyxDQUFFLEVBQUcsVUFBYSxDQUFFLEVBQUssRUFBRSxPQUFPLGFBQWdCLEVBQUcsVUFBYSxDQUFFLEdBQUksR0FBTyxFQUFHLE9BQVEsU0FBbUIsRUFBSyxLQUFhLEdBQVMsRUFBRyxTQUFXLEVBQUssQ0FBRSxFQUFTLEdBQU0sRUFBTSxHQUFRLEVBQUcsVUFBYSxDQUFFLEdBQUksQ0FBRSxBQUFJLENBQUMsR0FBb0IsRUFBRyxRQUFhLE1BQU0sRUFBRyxnQkFBZSxDQUFVLEdBQUksRUFBUSxLQUFNLE1BRTUzQixZQUFxQyxFQUFHLEVBQVEsQ0FBRSxHQUFJLEVBQUMsRUFBVyxJQUFJLE1BQU8sSUFBTSxTQUFVLE1BQU8sSUFBa0IsRUFBRyxHQUFTLEdBQUksR0FBSSxPQUFPLFVBQVUsU0FBUyxLQUFLLEdBQUcsTUFBTSxFQUFHLElBQWtFLEdBQXpELElBQU0sVUFBWSxFQUFFLGFBQWEsR0FBSSxFQUFFLFlBQVksTUFBVSxJQUFNLE9BQVMsSUFBTSxNQUFPLE1BQU8sT0FBTSxLQUFLLEdBQUksR0FBSSxJQUFNLGFBQWUsMkNBQTJDLEtBQUssR0FBSSxNQUFPLElBQWtCLEVBQUcsSUFFdFosWUFBMkIsRUFBSyxFQUFLLENBQUUsQUFBSSxJQUFPLE1BQVEsRUFBTSxFQUFJLFNBQVEsR0FBTSxFQUFJLFFBQVEsT0FBUyxHQUFJLEVBQUcsRUFBTyxHQUFJLE9BQU0sR0FBTSxFQUFJLEVBQUssSUFBTyxFQUFLLEdBQUssRUFBSSxHQUFNLE1BQU8sR0FFaEwsWUFBaUIsRUFBUSxFQUFnQixDQUFFLEdBQUksR0FBTyxPQUFPLEtBQUssR0FBUyxHQUFJLE9BQU8sc0JBQXVCLENBQUUsR0FBSSxHQUFVLE9BQU8sc0JBQXNCLEdBQVMsQUFBSSxHQUFnQixHQUFVLEVBQVEsT0FBTyxTQUFVLEVBQUssQ0FBRSxNQUFPLFFBQU8seUJBQXlCLEVBQVEsR0FBSyxjQUFnQixFQUFLLEtBQUssTUFBTSxFQUFNLEdBQVksTUFBTyxHQUU5VSxZQUF1QixFQUFRLENBQUUsT0FBUyxHQUFJLEVBQUcsRUFBSSxVQUFVLE9BQVEsSUFBSyxDQUFFLEdBQUksR0FBUyxVQUFVLElBQU0sS0FBTyxVQUFVLEdBQUssR0FBSSxBQUFJLEVBQUksRUFBSyxHQUFRLE9BQU8sR0FBUyxJQUFNLFFBQVEsU0FBVSxFQUFLLENBQUUsR0FBZ0IsRUFBUSxFQUFLLEVBQU8sTUFBa0IsQUFBSSxPQUFPLDBCQUE2QixPQUFPLGlCQUFpQixFQUFRLE9BQU8sMEJBQTBCLElBQW1CLEdBQVEsT0FBTyxJQUFTLFFBQVEsU0FBVSxFQUFLLENBQUUsT0FBTyxlQUFlLEVBQVEsRUFBSyxPQUFPLHlCQUF5QixFQUFRLE1BQWUsTUFBTyxHQUU3Z0IsWUFBeUIsRUFBSyxFQUFLLEVBQU8sQ0FBRSxNQUFJLEtBQU8sR0FBTyxPQUFPLGVBQWUsRUFBSyxFQUFLLENBQUUsTUFBTyxFQUFPLFdBQVksR0FBTSxhQUFjLEdBQU0sU0FBVSxLQUFrQixFQUFJLEdBQU8sRUFBZ0IsRUFFM00sR0FBSSxJQUFXLENBQ2IsTUFBTyxFQUNQLE9BQVEsRUFDUixPQUFRLElBQ1IsVUFBVyxFQUNYLFVBQVcsSUFDWCxTQUFVLEVBQ1YsU0FBVSxJQUNWLFFBQVMsR0FDVCxRQUFTLEtBR1AsR0FBa0IsU0FBeUIsRUFBUSxFQUFPLENBSTVELE9BSEksR0FBVSxPQUFPLGlCQUNqQixFQUFVLEVBRUwsRUFBTSxFQUFHLEVBQU0sRUFBTyxPQUFRLEdBQU8sRUFBRyxDQUMvQyxHQUFJLEdBQVMsRUFBTyxHQUNoQixFQUFPLEtBQUssS0FBSyxLQUFLLElBQUksS0FBSyxJQUFJLEVBQU8sR0FBSyxFQUFNLElBQUssR0FBSyxLQUFLLElBQUksS0FBSyxJQUFJLEVBQU8sR0FBSyxFQUFNLElBQUssR0FBSyxLQUFLLElBQUksS0FBSyxJQUFJLEVBQU8sR0FBSyxFQUFNLElBQUssSUFFMUosQUFBSSxFQUFPLEdBQ1QsR0FBVSxFQUNWLEVBQVUsR0FJZCxNQUFPLElBR0wsR0FBYSxTQUFvQixFQUFLLEVBQVMsQ0FDakQsR0FBSSxHQUFRLEdBQVUsUUFBVyxJQUFJLEdBRWpDLEVBQU0sRUFBTSxNQUNaLEVBQU0sRUFBTSxNQUVaLEVBQVUsR0FBVSxRQUFXLElBQUksR0FBSyxNQUV4QyxFQUFlLEVBQ25CLE1BQU8sR0FBSSxJQUFNLEVBQVEsUUFBVSxFQUFJLElBQU0sRUFBUSxRQUFVLEVBQUksSUFBTSxFQUFRLFdBQWEsRUFBSSxJQUFNLEVBQVEsV0FBYSxFQUFJLElBQU0sRUFBUSxVQUFZLEVBQUksSUFBTSxFQUFRLFVBQVksRUFBUSxJQUFNLEVBQUksR0FBSyxHQUFnQixFQUFRLElBQU0sRUFBSSxHQUFLLEdBQWdCLEVBQVEsSUFBTSxFQUFJLEdBQUssR0FBZ0IsRUFBUSxJQUFNLEVBQUksR0FBSyxHQUFnQixFQUFRLElBQU0sRUFBSSxHQUFLLEdBQWdCLEVBQVEsSUFBTSxFQUFJLEdBQUssR0FHalosR0FBaUIsU0FBd0IsRUFBVyxDQUl0RCxPQUhJLEdBQWlCLEVBQVUsTUFBTSxHQUNqQyxFQUFlLENBQUMsRUFBZSxTQUU1QixFQUFlLE9BQVMsR0FBRyxDQUtoQyxPQUpJLEdBQVksRUFBYSxFQUFhLE9BQVMsR0FDL0MsRUFBVSxFQUNWLEVBQVUsT0FBTyxpQkFFWixFQUFJLEVBQUcsRUFBSSxFQUFlLE9BQVEsR0FBSyxFQUFHLENBQ2pELEdBQUksR0FBTyxLQUFLLEtBQUssS0FBSyxJQUFJLEtBQUssSUFBSSxFQUFVLEdBQUssRUFBZSxHQUFHLElBQUssR0FBSyxLQUFLLElBQUksS0FBSyxJQUFJLEVBQVUsR0FBSyxFQUFlLEdBQUcsSUFBSyxHQUFLLEtBQUssSUFBSSxLQUFLLElBQUksRUFBVSxHQUFLLEVBQWUsR0FBRyxJQUFLLElBRXZNLEFBQUksRUFBTyxHQUNULEdBQVUsRUFDVixFQUFVLEdBSWQsRUFBYSxLQUFLLEVBQWUsT0FBTyxFQUFTLEdBQUcsSUFHdEQsTUFBTyxJQUdMLEdBQWlCLFVBQTBCLENBQzdDLEdBQUksR0FBTyxVQUFVLE9BQVMsR0FBSyxVQUFVLEtBQU8sT0FBWSxVQUFVLEdBQUssR0FFM0UsRUFBVSxHQUFjLEdBQUksR0FBVSxHQUFJLEdBRTlDLEdBQUksRUFBUSxPQUFTLEVBQ25CLE1BQU8sR0FHVCxBQUFJLEVBQVEsUUFBVSxFQUFRLE1BQVEsR0FDcEMsR0FBUSxRQUFVLEtBQUssS0FBSyxFQUFRLE1BQVEsSUFHOUMsR0FBSSxHQUFTLEdBQ1QsRUFBYSxHQUNiLEVBQVUsR0FBSSxLQUNkLEVBQWUsS0FBSyxLQUFLLEtBQUssS0FBSyxFQUFRLFVBQzNDLEVBQVMsR0FBUSxPQUFTLEVBQVEsUUFBVSxFQUM1QyxFQUFTLEdBQVEsVUFBWSxFQUFRLFdBQWEsRUFDbEQsRUFBUyxHQUFRLFNBQVcsRUFBUSxVQUFZLEVBRXBELEdBQUksR0FBUyxFQUNYLEtBQU0sSUFBSSxPQUFNLHVDQUdsQixHQUFJLEdBQVMsRUFDWCxLQUFNLElBQUksT0FBTSw2Q0FHbEIsR0FBSSxHQUFTLEVBQ1gsS0FBTSxJQUFJLE9BQU0sMkNBR2xCLE9BQVMsR0FBSSxFQUFRLE9BQVMsRUFBUSxFQUFHLEdBQUssRUFBUSxPQUFRLEdBQUssRUFDakUsT0FBUyxHQUFJLEVBQVEsVUFBWSxFQUFRLEVBQUcsR0FBSyxFQUFRLFVBQVcsR0FBSyxFQUN2RSxPQUFTLEdBQUksRUFBUSxTQUFXLEVBQVEsRUFBRyxHQUFLLEVBQVEsU0FBVSxHQUFLLEVBQU8sQ0FDNUUsR0FBSSxHQUFRLEdBQVUsUUFBVyxJQUFJLEVBQUcsRUFBRyxHQUFHLE1BRTlDLEFBQUksR0FBVyxFQUFPLElBQ3BCLEVBQVEsSUFBSSxFQUFNLFlBYTFCLEdBUEEsRUFBVSxNQUFNLEtBQUssR0FDckIsRUFBVSxFQUFRLElBQUksU0FBVSxHQUFHLENBQ2pDLE1BQU8sSUFBRSxNQUFNLEtBQUssSUFBSSxTQUFVLEdBQUcsQ0FDbkMsTUFBTyxZQUFXLFFBSWxCLEVBQVEsT0FBUyxFQUFRLE1BQzNCLEtBQU0sSUFBSSxPQUFNLGtFQUtsQixPQUZJLEdBQVksS0FBSyxNQUFNLEVBQVEsT0FBUyxFQUFRLE9BRTNDLEVBQUksRUFBRyxFQUFJLEVBQVEsUUFDMUIsR0FBTyxLQUFLLEVBQVEsSUFDcEIsRUFBVyxLQUFLLElBRVosSUFBTyxRQUFVLEVBQVEsUUFKSyxHQUFLLEVBSXZDLENBS0YsT0FBUyxHQUFPLEVBQUcsR0FBUSxFQUFRLFFBQVMsR0FBUSxFQUFHLENBSXJELE9BSEksR0FBUyxBQWxLakIsR0FrS29CLEdBQVcsU0FBWSxHQUNuQyxFQUFjLEFBbkt0QixHQW1LeUIsR0FBVyxTQUFZLEdBRW5DLEVBQUssRUFBRyxFQUFLLEVBQU8sT0FBUSxHQUFNLEVBQUcsQ0FDNUMsR0FBSSxHQUFNLEdBQWdCLEVBQVksRUFBTyxJQUU3QyxFQUFNLEdBQUksS0FBSyxFQUFXLElBRTFCLEVBQVcsT0FBTyxFQUFLLEdBSXpCLE9BQVMsR0FBTSxFQUFHLEVBQU0sRUFBVyxPQUFRLEdBQU8sRUFBRyxDQUNuRCxHQUFJLEdBQVMsRUFBUSxHQUNqQixFQUFVLEdBQWdCLEVBQVEsR0FDdEMsRUFBTSxHQUFTLEtBQUssRUFBUSxJQUs5QixPQUZJLEdBQWMsQUFwTHRCLEdBb0x5QixHQUFXLFNBQVksR0FFbkMsRUFBTSxFQUFHLEVBQU0sRUFBTSxPQUFRLEdBQU8sRUFBRyxDQUM5QyxHQUFJLEdBQU8sRUFBTSxHQUNiLEVBQU8sRUFBSyxPQUNaLEVBQUssR0FDTCxHQUFLLEdBQ0wsR0FBSyxHQUVMLEdBQVksR0FBMkIsR0FDdkMsR0FFSixHQUFJLENBQ0YsSUFBSyxHQUFVLElBQUssQ0FBRSxJQUFRLEdBQVUsS0FBSyxNQUFPLENBQ2xELEdBQUksR0FBVSxHQUFNLE1BQ3BCLEVBQUcsS0FBSyxFQUFRLElBQ2hCLEdBQUcsS0FBSyxFQUFRLElBQ2hCLEdBQUcsS0FBSyxFQUFRLFdBRVgsR0FBUCxDQUNBLEdBQVUsRUFBRSxXQUNaLENBQ0EsR0FBVSxJQUdaLEdBQUksR0FBTyxHQUFPLFFBQVcsSUFBSSxHQUFNLEVBQ25DLEVBQU8sR0FBTyxRQUFXLElBQUksSUFBTSxFQUNuQyxHQUFPLEdBQU8sUUFBVyxJQUFJLElBQU0sRUFDdkMsRUFBTyxHQUFPLENBQUMsRUFBTSxFQUFNLElBRzdCLEdBQUssQUFuTlQsR0FtTlksR0FBWSxTQUFZLEVBQVksR0FDMUMsTUFJSixTQUFTLEdBQWUsR0FDakIsRUFBTyxJQUFJLFNBQVUsR0FBSyxDQUMvQixNQUFPLElBQVUsUUFBVyxJQUFJLE9BSWhDLEdBQVcsR0FDZixHQUFRLFFBQWEsS0MvTnJCLG9CQUNDLEFBQUMsVUFBUyxFQUFNLENBR2hCLEdBQUksR0FBYyxNQUFPLEtBQVcsVUFBWSxHQUc1QyxFQUFhLE1BQU8sS0FBVSxVQUFZLElBQzdDLEdBQU8sU0FBVyxHQUFlLEdBSTlCLEVBQWEsTUFBTyxTQUFVLFVBQVksT0FDOUMsQUFBSSxHQUFXLFNBQVcsR0FBYyxFQUFXLFNBQVcsSUFDN0QsR0FBTyxHQU1SLEdBQUksR0FBcUIsa0NBSXJCLEVBQXNCLGVBSXRCLEVBQW9CLCtEQUVwQixFQUFzQixrbEdBQ3RCLEVBQVksQ0FBQyxPQUFPLE1BQU0sU0FBUyxPQUFPLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxLQUFLLFNBQVMsS0FBSyxTQUFTLEtBQUssU0FBUyxNQUFNLFNBQVMsaUJBQWlCLFNBQVMsVUFBVSxTQUFTLFlBQVksU0FBUyxPQUFPLFNBQVMsU0FBUyxJQUFLLE1BQU0sS0FBSyxVQUFVLFNBQVMsU0FBUyxTQUFTLGNBQWMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxPQUFPLFNBQVMsU0FBUyxTQUFTLE9BQU8sU0FBUyxRQUFRLE9BQU8sT0FBTyxlQUFlLGFBQWEsU0FBUyxRQUFRLEVBQUksU0FBUyxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFNBQVMsSUFBSSxRQUFRLElBQUksT0FBTyxTQUFTLFFBQVEsSUFBSSxRQUFRLFNBQVMsU0FBUyxJQUFJLE9BQU8sT0FBTyxRQUFRLElBQUksUUFBUSxPQUFPLFNBQVMsSUFBSSxTQUFTLFNBQVMsT0FBTyxTQUFTLE9BQU8sT0FBTyxTQUFTLElBQUssT0FBTyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxTQUFTLElBQUksT0FBTyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxPQUFPLFFBQVEsT0FBTyxRQUFRLElBQUksT0FBTyxJQUFJLE9BQU8sSUFBSSxPQUFPLElBQUksT0FBTyxJQUFJLE9BQU8sSUFBSSxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxJQUFJLFNBQVMsSUFBSSxNQUFNLElBQUksTUFBTSxVQUFZLEtBQUssSUFBSSxNQUFNLElBQUksTUFBTSxJQUFJLFNBQVMsU0FBUyxTQUFTLFNBQVMsVUFBVSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsT0FBTyxTQUFTLFNBQVMsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsSUFBSSxRQUFRLE9BQU8sUUFBUSxTQUFTLFFBQVEsSUFBSSxNQUFNLE9BQU8sT0FBTyxTQUFTLFFBQVEsU0FBUyxNQUFNLE9BQU8sTUFBTSxTQUFTLE9BQU8sU0FBUyxRQUFRLE9BQU8sUUFBUSxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsUUFBUSxPQUFPLE1BQU0sT0FBTyxPQUFPLE9BQU8sTUFBTSxTQUFTLFNBQVMsU0FBUyxLQUFLLFNBQVMsS0FBSyxTQUFTLE1BQU0sU0FBUyxRQUFRLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsZUFBZSxTQUFTLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsYUFBYSxTQUFTLFdBQVcsU0FBUyxNQUFNLFNBQVMsYUFBYSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxRQUFRLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxNQUFNLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxVQUFVLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLE9BQU8sU0FBUyxPQUFPLGVBQWUsUUFBUSxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLE1BQU0sU0FBUyxLQUFLLFNBQVMsUUFBUSxTQUFTLEtBQUssU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxTQUFTLFNBQVMsTUFBTSxJQUFJLE9BQU8sT0FBTyxLQUFLLE9BQU8sTUFBTSxPQUFPLFFBQVEsSUFBSSxLQUFLLFNBQVMsTUFBTSxVQUFVLE9BQU8sSUFBSSxTQUFTLFNBQVMsS0FBSyxVQUFVLE1BQU0sU0FBUyxRQUFRLElBQUksS0FBSyxTQUFTLE1BQU0sVUFBVSxPQUFPLE9BQU8sTUFBTSxJQUFJLE9BQU8sT0FBTyxTQUFTLFNBQVMsUUFBUSxTQUFTLEtBQUssU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxNQUFNLGVBQWUsT0FBTyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsTUFBTSxTQUFTLE9BQU8sU0FBUyxNQUFNLFNBQVMsT0FBTyxTQUFTLE1BQU0sU0FBUyxLQUFLLFNBQVMsTUFBTSxlQUFlLE9BQU8sU0FBUyxNQUFNLGVBQWUsT0FBTyxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsU0FBUyxTQUFTLFVBQVUsU0FBUyxRQUFRLFNBQVMsV0FBVyxTQUFTLFdBQVcsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsTUFBTSxTQUFTLE9BQU8sZUFBZSxRQUFRLFNBQVMsT0FBTyxlQUFlLE9BQU8sU0FBUyxLQUFLLGVBQWUsTUFBTSxTQUFTLE1BQU0sU0FBUyxLQUFLLFNBQVMsT0FBTyxlQUFlLFFBQVEsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLEtBQUssU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE9BQU8sZUFBZSxRQUFRLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxZQUFZLGVBQWUsT0FBTyxTQUFTLE9BQU8sZUFBZSxRQUFRLFNBQVMsUUFBUSxlQUFlLFNBQVMsU0FBUyxRQUFRLGVBQWUsUUFBUSxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFNBQVMsZUFBZSxVQUFVLFNBQVMsS0FBSyxTQUFTLE1BQU0sZUFBZSxPQUFPLFNBQVMsS0FBSyxTQUFTLE1BQU0sZUFBZSxPQUFPLFNBQVMsS0FBSyxlQUFlLE1BQU0sU0FBUyxLQUFLLGVBQWUsTUFBTSxlQUFlLE9BQU8sU0FBUyxNQUFNLFNBQVMsTUFBTSxlQUFlLE9BQU8sU0FBUyxLQUFLLGVBQWUsT0FBTyxlQUFlLE1BQU0sU0FBUyxLQUFLLGVBQWUsT0FBTyxlQUFlLE1BQU0sU0FBUyxRQUFRLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLEtBQUssU0FBUyxPQUFPLFNBQVMsS0FBSyxTQUFTLE9BQU8sU0FBUyxLQUFLLFNBQVMsTUFBTSxTQUFTLEtBQUssU0FBUyxNQUFNLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLGVBQWUsbUJBQW1CLFNBQVMsTUFBTSxTQUFTLE9BQU8sZUFBZSxRQUFRLFNBQVMsTUFBTSxTQUFTLE9BQU8sZUFBZSxRQUFRLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxPQUFPLFNBQVMsUUFBUSxlQUFlLFNBQVMsU0FBUyxRQUFRLGVBQWUsU0FBUyxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFFBQVEsZUFBZSxrQkFBa0IsU0FBUyxRQUFRLGVBQWUsb0JBQW9CLFNBQVMsU0FBUyxTQUFTLFVBQVUsU0FBUyxTQUFTLFNBQVMsVUFBVSxTQUFTLFFBQVEsZUFBZSxTQUFTLFNBQVMsUUFBUSxlQUFlLFNBQVMsU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLFNBQVMsU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsU0FBUyxlQUFlLFVBQVUsU0FBUyxRQUFRLFNBQVMsU0FBUyxlQUFlLFVBQVUsU0FBUyxTQUFTLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsVUFBVSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsTUFBTSxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxLQUFLLGVBQWUsTUFBTSxTQUFTLEtBQUssZUFBZSxNQUFNLGVBQWUsT0FBTyxTQUFTLE1BQU0sU0FBUyxNQUFNLGVBQWUsT0FBTyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxVQUFVLGVBQWUsV0FBVyxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsUUFBUSxlQUFlLFNBQVMsU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE1BQU0sU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLE9BQU8sU0FBUyxXQUFXLFNBQVMsV0FBVyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLFdBQVcsU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLFdBQVcsU0FBUyxrQkFBa0IsU0FBUyxtQkFBbUIsU0FBUyxZQUFZLFNBQVMsYUFBYSxTQUFTLFdBQVcsU0FBUyxXQUFXLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxNQUFNLFNBQVMsT0FBTyxTQUFTLHVCQUF1QixTQUFTLE9BQU8sU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLFNBQVMsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsbUJBQW1CLFNBQVMsb0JBQW9CLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLE9BQU8sU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxRQUFRLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxvQkFBb0IsU0FBUyxXQUFXLFNBQVMsVUFBVSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxXQUFXLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsTUFBTSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsV0FBVyxTQUFTLGFBQWEsU0FBUyxlQUFlLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLFNBQVMsU0FBUyxRQUFRLGVBQWUsU0FBUyxTQUFTLFVBQVUsU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLFVBQVUsU0FBUyxTQUFTLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxTQUFTLFNBQVMsVUFBVSxTQUFTLFdBQVcsU0FBUyxXQUFXLFNBQVMsV0FBVyxTQUFTLGtCQUFrQixTQUFTLG9CQUFvQixTQUFTLHNCQUFzQixTQUFTLG1CQUFtQixTQUFTLGdCQUFnQixTQUFTLGlCQUFpQixTQUFTLG1CQUFtQixTQUFTLHFCQUFxQixTQUFTLG9CQUFvQixTQUFTLHFCQUFxQixTQUFTLGtCQUFrQixTQUFTLG9CQUFvQixTQUFTLGdCQUFnQixTQUFTLGlCQUFpQixTQUFTLG1CQUFtQixTQUFTLHFCQUFxQixTQUFTLG9CQUFvQixTQUFTLHFCQUFxQixTQUFTLGtCQUFrQixTQUFTLG9CQUFvQixTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsZUFBZSxTQUFTLFFBQVEsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsU0FBUyxTQUFTLFdBQVcsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsV0FBVyxTQUFTLFdBQVcsU0FBUyxXQUFXLFNBQVMsV0FBVyxTQUFTLFdBQVcsU0FBUyxXQUFXLFNBQVMsV0FBVyxTQUFTLFdBQVcsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxXQUFXLFNBQVMsV0FBVyxTQUFTLFFBQVEsU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxVQUFVLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxVQUFVLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxXQUFXLFNBQVMsa0JBQWtCLGVBQWUscUJBQXFCLFNBQVMsbUJBQW1CLGVBQWUsc0JBQXNCLFNBQVMsU0FBUyxTQUFTLFdBQVcsU0FBUyxVQUFVLFNBQVMsU0FBUyxTQUFTLFdBQVcsU0FBUyxXQUFXLFNBQVMsT0FBTyxTQUFTLGNBQWMsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxXQUFXLFNBQVMsV0FBVyxTQUFTLFFBQVEsU0FBUyxXQUFXLFNBQVMsV0FBVyxTQUFTLFVBQVUsU0FBUyxXQUFXLFNBQVMsVUFBVSxTQUFTLFdBQVcsU0FBUyxVQUFVLFNBQVMsV0FBVyxTQUFTLFVBQVUsU0FBUyxTQUFTLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxTQUFTLFNBQVMsVUFBVSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxXQUFXLFNBQVMsU0FBUyxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsV0FBVyxTQUFTLFNBQVMsU0FBUyxPQUFPLFNBQVMsVUFBVSxTQUFTLFdBQVcsU0FBUyxVQUFVLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsV0FBVyxTQUFTLFdBQVcsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsVUFBVSxTQUFTLE1BQU0sU0FBUyxLQUFLLFNBQVMsU0FBUyxTQUFTLE9BQU8sU0FBUyxVQUFVLFNBQVMsV0FBVyxTQUFTLE9BQU8sU0FBUyxNQUFNLFNBQVMsT0FBTyxTQUFTLE1BQU0sU0FBUyxTQUFTLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxVQUFVLGVBQWUsV0FBVyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsTUFBTSxlQUFlLE9BQU8sU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsVUFBVSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxNQUFNLGVBQWUsT0FBTyxTQUFTLE1BQU0sZUFBZSxPQUFPLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFdBQVcsU0FBUyxXQUFXLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxLQUFLLFNBQVMsS0FBSyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsU0FBUyxXQUFXLGVBQWUsb0JBQW9CLFNBQVMsaUJBQWlCLGVBQWUsMEJBQTBCLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxRQUFRLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxPQUFPLGVBQWUsUUFBUSxTQUFTLE9BQU8sZUFBZSxRQUFRLFNBQVMsUUFBUSxTQUFTLE1BQU0sZUFBZSxPQUFPLFNBQVMsTUFBTSxlQUFlLE9BQU8sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLEtBQUssU0FBUyxLQUFLLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFVBQVUsU0FBUyxPQUFPLGVBQWUsUUFBUSxTQUFTLE9BQU8sZUFBZSxRQUFRLFNBQVMsU0FBUyxTQUFTLFNBQVMsZUFBZSxTQUFTLFNBQVMsUUFBUSxlQUFlLFNBQVMsU0FBUyxRQUFRLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxVQUFVLFNBQVMsVUFBVSxTQUFTLFFBQVEsU0FBUyxVQUFVLFNBQVMsT0FBTyxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxRQUFRLFNBQVMsT0FBTyxTQUFTLE1BQU0sU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsU0FBUyxTQUFTLFNBQVMsUUFBUSxlQUFlLFNBQVMsU0FBUyxPQUFPLFNBQVMsUUFBUSxTQUFTLFFBQVEsT0FBTyxTQUFTLE9BQU8sT0FBTyxFQUFJLFNBQVMsT0FBTyxRQUFRLE9BQU8sTUFBTSxTQUFTLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxTQUFTLFNBQVMsT0FBTyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLE9BQU8sT0FBTyxTQUFTLFNBQVMsU0FBUyxTQUFTLE9BQU8sT0FBTyxPQUFPLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsWUFBZSxPQUFPLFlBQWUsT0FBTyxZQUFlLE1BQU0sWUFBZSxPQUFPLFlBQWUsTUFBTSxZQUFlLE9BQU8sT0FBTyxPQUFPLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQU8sUUFBUSxPQUFPLFFBQVEsT0FBTyxRQUFRLE9BQU8sUUFBUSxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxRQUFRLE9BQU8sUUFBUSxPQUFPLFFBQVEsWUFBZSxPQUFPLFlBQWUsT0FBTyxZQUFlLE1BQU0sWUFBZSxPQUFPLE9BQVMsT0FBTyxZQUFlLE1BQU0sWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sT0FBUyxNQUFNLFlBQWUsT0FBTyxPQUFTLE9BQU8sT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFFBQVEsT0FBUyxRQUFRLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFPLFNBQVMsT0FBTyxTQUFTLFNBQVMsU0FBUyxZQUFlLE1BQU0sU0FBUyxLQUFLLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxPQUFPLFlBQWUsTUFBTSxTQUFTLEtBQUssWUFBZSxPQUFPLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFPLE1BQU0sT0FBTyxNQUFNLFNBQVMsS0FBSyxPQUFTLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxPQUFTLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxRQUFRLE9BQU8sUUFBUSxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLFFBQVEsT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLFFBQVEsWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxPQUFTLE9BQU8sT0FBUyxRQUFRLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxRQUFRLEdBQUssUUFBUSxPQUFTLFFBQVEsT0FBUyxPQUFPLE9BQVMsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLFNBQVMsWUFBZSxNQUFNLE9BQVMsVUFBVSxZQUFlLE9BQU8sWUFBZSxPQUFPLE9BQVMsT0FBTyxPQUFTLE1BQU0sT0FBUyxPQUFPLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxPQUFPLE9BQVMsU0FBUyxPQUFTLFNBQVMsWUFBZSxPQUFPLFlBQWUsTUFBTSxZQUFlLE9BQU8sU0FBUyxLQUFLLFlBQWUsT0FBTyxPQUFTLE9BQU8sT0FBUyxLQUFLLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFFBQVEsT0FBTyxRQUFRLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLE9BQU8sT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxRQUFRLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE1BQU0sWUFBZSxPQUFPLE9BQVMsUUFBUSxPQUFTLFFBQVEsU0FBUyxRQUFRLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLE9BQVMsU0FBUyxPQUFTLFNBQVMsWUFBZSxNQUFNLFlBQWUsT0FBTyxPQUFTLE1BQU0sWUFBZSxPQUFPLE9BQVMsT0FBTyxZQUFlLE1BQU0sWUFBZSxPQUFPLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxZQUFlLE1BQU0sWUFBZSxPQUFPLFlBQWUsT0FBTyxZQUFlLE1BQU0sWUFBZSxPQUFPLE9BQVMsT0FBTyxZQUFlLE1BQU0sWUFBZSxPQUFPLFlBQWUsT0FBTyxPQUFTLE9BQU8sWUFBZSxPQUFPLFlBQWUsTUFBTSxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLFNBQVMsU0FBUyxPQUFTLE1BQU0sT0FBUyxNQUFNLFlBQWUsT0FBTyxZQUFlLE1BQU0sT0FBUyxPQUFPLFlBQWUsT0FBTyxZQUFlLE1BQU0sWUFBZSxPQUFPLE9BQU8sT0FBTyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxRQUFRLE9BQU8sUUFBUSxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxRQUFRLE9BQVMsUUFBUSxZQUFlLE1BQU0sWUFBZSxPQUFPLFlBQWUsT0FBTyxPQUFTLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLE9BQVMsT0FBTyxPQUFTLFNBQVMsWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sT0FBUyxPQUFPLE9BQVMsS0FBSyxPQUFTLE9BQU8sT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsWUFBZSxPQUFPLFlBQWUsT0FBTyxZQUFlLE1BQU0sWUFBZSxPQUFPLFlBQWUsTUFBTSxZQUFlLE9BQU8sU0FBUyxLQUFLLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBTyxRQUFRLFlBQWUsTUFBTSxZQUFlLE9BQU8sWUFBZSxPQUFPLFlBQWUsT0FBTyxZQUFlLE1BQU0sWUFBZSxPQUFPLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxTQUFTLFFBQVEsT0FBUyxTQUFTLE9BQVMsU0FBUyxZQUFlLE9BQU8sWUFBZSxPQUFPLFlBQWUsTUFBTSxZQUFlLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxPQUFPLFNBQVMsT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFPLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFPLFFBQVEsT0FBTyxRQUFRLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxRQUFRLFlBQWUsTUFBTSxZQUFlLE9BQU8sWUFBZSxPQUFPLFlBQWUsTUFBTSxZQUFlLE9BQU8sWUFBZSxPQUFPLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxNQUFNLE9BQVMsUUFBUSxPQUFTLFFBQVEsWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxPQUFPLFlBQWUsTUFBTSxZQUFlLE9BQU8sWUFBZSxNQUFNLFlBQWUsT0FBTyxZQUFlLE9BQU8sWUFBZSxPQUFPLFlBQWUsTUFBTSxZQUFlLE9BQU8sT0FBTyxTQUFTLE9BQU8sU0FBUyxPQUFTLFFBQVEsT0FBUyxRQUFRLE9BQU8sT0FBTyxPQUFTLE9BQU8sWUFBZSxPQUFPLFlBQWUsTUFBTSxZQUFlLE9BQU8sT0FBUyxNQUFNLE9BQVMsT0FBTyxZQUFlLE9BQU8sT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsT0FBTyxPQUFTLE9BQU8sT0FBUyxRQUFRLE9BQU8sUUFBUSxPQUFPLFFBQVEsT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLFFBQVEsT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxPQUFPLFNBQVMsUUFBUSxPQUFTLFVBQVUsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxRQUFRLE9BQVMsU0FBUyxPQUFTLFFBQVEsT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLFFBQVEsT0FBUyxTQUFTLE9BQVMsUUFBUSxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsS0FBSyxPQUFPLFFBQVEsT0FBUyxLQUFLLE9BQVMsS0FBSyxPQUFTLEtBQUssT0FBUyxLQUFLLE9BQVMsS0FBSyxPQUFTLFVBQVUsT0FBUyxVQUFVLE9BQVMsS0FBSyxPQUFTLE1BQU0sT0FBUyxLQUFLLE9BQVMsTUFBTSxPQUFTLE9BQU8sT0FBUyxNQUFNLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxTQUFTLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxPQUFPLE9BQVMsVUFBVSxPQUFTLE9BQU8sT0FBUyxNQUFNLE9BQVMsT0FBTyxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsUUFBUSxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxRQUFRLE9BQVMsUUFBUSxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsUUFBUSxPQUFTLFFBQVEsT0FBUyxNQUFNLE9BQVMsTUFBTSxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsTUFBTSxPQUFTLE1BQU0sT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLE1BQU0sT0FBUyxNQUFNLE9BQVMsT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLFFBQVEsT0FBUyxPQUFPLE9BQVMsUUFBUSxPQUFTLFVBRXBtMEIsRUFBYyxZQUNkLEVBQVksQ0FDZixJQUFLLFNBQ0wsSUFBSyxRQUNMLElBQU0sU0FDTixJQUFLLE9BS0wsSUFBSyxPQUtMLElBQUssVUFHRixFQUFxQixrQ0FDckIsRUFBMkIscVBBQzNCLEVBQWMsaThnQkFDZCxFQUFZLENBQUMsT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLFNBQVMsT0FBUyxTQUFTLEdBQUssU0FBUyxJQUFNLFNBQVMsSUFBTSxlQUFlLE1BQVEsT0FBTyxNQUFRLE9BQU8sTUFBUSxPQUFPLElBQU0sU0FBUyxJQUFNLFNBQVMsTUFBUSxPQUFPLE1BQVEsT0FBTyxHQUFLLFNBQVMsSUFBTSxZQUFlLElBQU0sWUFBZSxPQUFTLE9BQU8sT0FBUyxPQUFPLFFBQVUsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxJQUFNLElBQUksSUFBTSxJQUFJLElBQU0sU0FBUyxJQUFNLFNBQVMsT0FBUyxTQUFTLEtBQU8sU0FBUyxTQUFXLFNBQVMsS0FBTyxTQUFTLElBQU0sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxTQUFXLFNBQVMsU0FBVyxTQUFTLFNBQVcsU0FBUyxTQUFXLFNBQVMsU0FBVyxTQUFTLFNBQVcsU0FBUyxTQUFXLFNBQVMsU0FBVyxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsU0FBVyxTQUFTLE9BQVMsU0FBUyxNQUFRLE9BQU8sUUFBVSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsS0FBTyxZQUFlLEtBQU8sWUFBZSxHQUFLLFNBQVMsT0FBUyxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsS0FBTyxTQUFTLEtBQU8sSUFBSyxjQUFnQixTQUFTLE9BQVMsU0FBUyxTQUFXLFNBQVMsTUFBUSxPQUFPLE1BQVEsT0FBTyxLQUFPLFlBQWUsS0FBTyxZQUFlLE9BQVMsU0FBUyxJQUFNLElBQUksTUFBUSxTQUFTLFFBQVUsU0FBUyxPQUFTLE9BQU8sT0FBUyxPQUFPLEtBQU8sT0FBTyxLQUFPLE9BQU8sU0FBVyxTQUFTLE1BQVEsU0FBUyxTQUFXLFNBQVMsWUFBYyxTQUFTLFVBQVksU0FBUyxRQUFVLFNBQVMsVUFBWSxTQUFTLFVBQVksU0FBUyxLQUFPLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsU0FBVyxTQUFTLEtBQU8sU0FBUyxTQUFXLFNBQVMsTUFBUSxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxRQUFVLFNBQVMsUUFBVSxTQUFTLFFBQVUsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLFdBQWEsU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxRQUFVLFNBQVMsSUFBTSxZQUFlLElBQU0sWUFBZSxPQUFTLFNBQVMsUUFBVSxTQUFTLE9BQVMsU0FBUyxRQUFVLFNBQVMsU0FBVyxTQUFTLFVBQVksU0FBUyxTQUFXLFNBQVMsUUFBVSxTQUFTLGdCQUFrQixTQUFTLGNBQWdCLFNBQVMsU0FBVyxTQUFTLE9BQVMsU0FBUyxTQUFXLFNBQVMsT0FBUyxTQUFTLGFBQWUsU0FBUyxZQUFjLFNBQVMsY0FBZ0IsU0FBUyxrQkFBb0IsU0FBUyxrQkFBb0IsU0FBUyxtQkFBcUIsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLElBQU0sVUFBVSxRQUFVLGVBQWUsS0FBTyxTQUFTLEtBQU8sU0FBUyxLQUFPLFlBQWUsS0FBTyxZQUFlLElBQU0sU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxTQUFXLFNBQVMsUUFBVSxTQUFTLFNBQVcsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsT0FBUyxPQUFPLEtBQU8sWUFBZSxLQUFPLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsS0FBTyxLQUFLLE1BQVEsU0FBUyxTQUFXLFNBQVMsS0FBTyxTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxPQUFTLFNBQVMsU0FBVyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLHFCQUF1QixTQUFTLEtBQU8sZUFBZSxNQUFRLFNBQVMsTUFBUSxTQUFTLFFBQVUsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLE9BQU8sT0FBUyxPQUFPLE1BQVEsU0FBUyxNQUFRLFNBQVMsUUFBVSxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxNQUFRLE9BQU8sUUFBVSxPQUFPLFFBQVUsU0FBUyxLQUFPLE9BQU8sVUFBWSxPQUFPLFVBQVksT0FBTyxJQUFNLFlBQWUsSUFBTSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLFVBQVksU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxLQUFPLFNBQVMsT0FBUyxTQUFTLGdCQUFrQixTQUFTLGlCQUFtQixTQUFTLFdBQWEsU0FBUyxZQUFjLFNBQVMsWUFBYyxTQUFTLFVBQVksU0FBUyxTQUFXLE9BQU8sU0FBVyxTQUFTLFlBQWMsU0FBUyxXQUFhLFNBQVMsWUFBYyxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsU0FBVyxTQUFTLE9BQVMsU0FBUyxRQUFVLFNBQVMseUJBQTJCLFNBQVMsc0JBQXdCLFNBQVMsZ0JBQWtCLFNBQVMsTUFBUSxTQUFTLFNBQVcsU0FBUyxNQUFRLElBQUksTUFBUSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsUUFBVSxTQUFTLE1BQVEsSUFBSSxPQUFTLElBQUksS0FBTyxTQUFTLE9BQVMsU0FBUyxXQUFhLFNBQVMsVUFBWSxTQUFTLEtBQU8sU0FBUyxRQUFVLFNBQVMsVUFBWSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsZ0JBQWtCLFNBQVMsS0FBTyxZQUFlLEtBQU8sU0FBUyxPQUFTLFNBQVMsVUFBWSxTQUFTLEtBQU8sT0FBTyxLQUFPLE9BQU8sT0FBUyxTQUFTLGdDQUFrQyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsS0FBTyxTQUFTLE1BQVEsU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsUUFBVSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLFFBQVUsU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLFNBQVcsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLEtBQU8sZUFBZSxPQUFTLFNBQVMsUUFBVSxTQUFTLFlBQWMsU0FBUyxZQUFjLFNBQVMsU0FBVyxTQUFTLFdBQWEsU0FBUyxPQUFTLE9BQU8sZUFBaUIsU0FBUyxnQkFBa0IsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLFNBQVcsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLFFBQVUsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLEdBQUssU0FBUyxHQUFLLFNBQVMsUUFBVSxTQUFTLE1BQVEsU0FBUyxTQUFXLFNBQVMsUUFBVSxTQUFTLElBQU0sT0FBTyxJQUFNLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsT0FBUyxTQUFTLElBQU0sWUFBZSxJQUFNLFlBQWUsS0FBTyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsaUJBQW1CLE9BQU8sZUFBaUIsU0FBUyx1QkFBeUIsU0FBUyxpQkFBbUIsSUFBSSxpQkFBbUIsU0FBUyxLQUFPLFNBQVMsUUFBVSxTQUFTLFFBQVUsU0FBUyxZQUFjLFNBQVMsTUFBUSxTQUFTLElBQU0sT0FBTyxjQUFnQixTQUFTLFFBQVUsU0FBUyxNQUFRLFNBQVMsSUFBTSxPQUFPLE9BQVMsT0FBTyxjQUFnQixTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxJQUFJLEtBQU8sWUFBZSxLQUFPLFlBQWUsSUFBTSxTQUFTLElBQU0sT0FBTyxPQUFTLFNBQVMsTUFBUSxTQUFTLFNBQVcsU0FBUyxTQUFXLFNBQVMsU0FBVyxTQUFTLFFBQVUsU0FBUyxVQUFZLFNBQVMsZUFBaUIsU0FBUyxzQkFBd0IsU0FBUyxVQUFZLE9BQU8sZ0JBQWtCLFNBQVMsZ0JBQWtCLFNBQVMscUJBQXVCLFNBQVMsY0FBZ0IsU0FBUyxvQkFBc0IsU0FBUyx5QkFBMkIsU0FBUyxxQkFBdUIsU0FBUyxpQkFBbUIsU0FBUyxlQUFpQixTQUFTLGNBQWdCLFNBQVMsa0JBQW9CLFNBQVMsa0JBQW9CLFNBQVMsVUFBWSxTQUFTLFVBQVksU0FBUyxVQUFZLFNBQVMsYUFBZSxTQUFTLGlCQUFtQixTQUFTLFVBQVksU0FBUyxlQUFpQixTQUFTLGdCQUFrQixTQUFTLGlCQUFtQixTQUFTLG9CQUFzQixTQUFTLGtCQUFvQixTQUFTLGVBQWlCLFNBQVMsa0JBQW9CLFNBQVMsbUJBQXFCLFNBQVMsZ0JBQWtCLFNBQVMsbUJBQXFCLFNBQVMsUUFBVSxTQUFTLGFBQWUsU0FBUyxTQUFXLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxLQUFPLFlBQWUsS0FBTyxZQUFlLEtBQU8sU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxTQUFXLFNBQVMsT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsTUFBUSxPQUFPLE1BQVEsT0FBTyxPQUFTLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxNQUFRLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsR0FBSyxTQUFTLE1BQVEsU0FBUyxJQUFNLFlBQWUsSUFBTSxZQUFlLEdBQUssU0FBUyxPQUFTLE9BQU8sT0FBUyxPQUFPLElBQU0sU0FBUyxPQUFTLFNBQVMsR0FBSyxTQUFTLFFBQVUsU0FBUyxTQUFXLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsU0FBVyxTQUFTLGlCQUFtQixTQUFTLE9BQVMsU0FBUyxxQkFBdUIsU0FBUyxLQUFPLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsS0FBTyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsS0FBTyxTQUFTLFFBQVUsU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLFdBQWEsU0FBUyxZQUFjLFNBQVMsTUFBUSxTQUFTLE9BQVMsSUFBSSxXQUFhLFNBQVMsT0FBUyxTQUFTLFlBQWMsU0FBUyxNQUFRLFNBQVMsUUFBVSxTQUFTLFNBQVcsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxJQUFNLE9BQU8sSUFBTSxPQUFPLEtBQU8sT0FBTyxLQUFPLE9BQU8sS0FBTyxTQUFTLEtBQU8sSUFBSSxNQUFRLFNBQVMsT0FBUyxTQUFTLFlBQWMsU0FBUyxhQUFlLFNBQVMsYUFBZSxTQUFTLGNBQWdCLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsSUFBTSxZQUFlLElBQU0sWUFBZSxNQUFRLFNBQVMsa0JBQW9CLFNBQVMsc0JBQXdCLFNBQVMsTUFBUSxLQUFLLEtBQU8sU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxLQUFPLFlBQWUsS0FBTyxZQUFlLE9BQVMsU0FBUyxPQUFTLFNBQVMsS0FBTyxTQUFTLE1BQVEsU0FBUyxXQUFhLFNBQVMsU0FBVyxTQUFTLE9BQVMsT0FBTyxPQUFTLFNBQVMsT0FBUyxPQUFPLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxPQUFPLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsS0FBTyxZQUFlLEtBQU8sU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLElBQU0sU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxHQUFLLFNBQVMsR0FBSyxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLEtBQU8sU0FBUyxTQUFXLFNBQVMsSUFBTSxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsUUFBVSxTQUFTLFNBQVcsU0FBUyxLQUFPLGVBQWUsT0FBUyxTQUFTLElBQU0sWUFBZSxJQUFNLFlBQWUsR0FBSyxTQUFTLEdBQUssU0FBUyxJQUFNLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsR0FBSyxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLEtBQU8sU0FBUyxTQUFXLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxLQUFPLFlBQWUsS0FBTyxZQUFlLE1BQVEsSUFBSSxhQUFlLFNBQVMsaUJBQW1CLFNBQVMsaUJBQW1CLFNBQVMsZUFBaUIsU0FBUyxZQUFjLFNBQVMsa0JBQW9CLFNBQVMsYUFBZSxTQUFTLEtBQU8sU0FBUyxLQUFPLFlBQWUsS0FBTyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsR0FBSyxJQUFJLEdBQUssU0FBUyxHQUFLLElBQUksS0FBTyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLFFBQVUsU0FBUyxVQUFZLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxVQUFZLFNBQVMsV0FBYSxTQUFTLFFBQVUsU0FBUyxPQUFTLFNBQVMsVUFBWSxlQUFlLEtBQU8sZUFBZSxNQUFRLFNBQVMsT0FBUyxTQUFTLEtBQU8sT0FBTyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLFFBQVUsU0FBUyxNQUFRLFNBQVMsSUFBTSxJQUFJLEtBQU8sU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxVQUFZLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxJQUFNLFlBQWUsSUFBTSxTQUFTLGFBQWUsU0FBUyxTQUFXLFNBQVMsU0FBVyxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsY0FBZ0IsU0FBUyxlQUFpQixTQUFTLEtBQU8sWUFBZSxLQUFPLFNBQVMsT0FBUyxTQUFTLGVBQWlCLFNBQVMsS0FBTyxZQUFlLEtBQU8sU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxhQUFlLFNBQVMsVUFBWSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxPQUFPLE9BQVMsT0FBTyxHQUFLLFNBQVMsTUFBUSxPQUFPLE1BQVEsT0FBTyxJQUFNLFNBQVMsSUFBTSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLE1BQVEsT0FBTyxJQUFNLFNBQVMsSUFBTSxZQUFlLElBQU0sU0FBUyxPQUFTLE9BQU8sT0FBUyxPQUFPLEdBQUssU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxHQUFLLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsV0FBYSxTQUFTLFNBQVcsU0FBUyxTQUFXLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsUUFBVSxTQUFTLEdBQUssU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLFNBQVcsU0FBUyxPQUFTLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxPQUFTLFNBQVMsU0FBVyxTQUFTLFNBQVcsU0FBUyxTQUFXLFNBQVMsYUFBZSxTQUFTLFNBQVcsU0FBUyxRQUFVLFNBQVMsZUFBaUIsU0FBUyxlQUFpQixTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxLQUFPLFlBQWUsS0FBTyxZQUFlLEtBQU8sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE9BQVMsT0FBTyxLQUFPLFlBQWUsS0FBTyxTQUFTLEtBQU8sU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLEdBQUssU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsS0FBTyxPQUFPLEtBQU8sT0FBTyxNQUFRLFNBQVMsTUFBUSxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsSUFBTSxZQUFlLElBQU0sWUFBZSxNQUFRLFNBQVMsS0FBTyxZQUFlLEtBQU8sWUFBZSxLQUFPLFlBQWUsS0FBTyxZQUFlLE9BQVMsU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsSUFBTSxZQUFlLElBQU0sWUFBZSxPQUFTLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsS0FBTyxZQUFlLEtBQU8sWUFBZSxNQUFRLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxTQUFXLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLElBQU0sU0FBUyxXQUFhLFNBQVMsTUFBUSxPQUFPLEtBQU8sU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLFFBQVUsU0FBUyxPQUFTLFNBQVMsSUFBTSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsS0FBTyxTQUFTLE1BQVEsZUFBZSxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxPQUFTLElBQUksT0FBUyxJQUFJLE1BQVEsU0FBUyxRQUFVLFNBQVMsUUFBVSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsS0FBTyxJQUFJLElBQU0sU0FBUyxJQUFNLFNBQVMsS0FBTyxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsUUFBVSxTQUFTLFNBQVcsU0FBUyxLQUFPLFNBQVMsR0FBSyxTQUFTLEdBQUssU0FBUyxpQkFBbUIsU0FBUyxVQUFZLFNBQVMsVUFBWSxTQUFTLFVBQVksU0FBUyxhQUFlLFNB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QVMsTUFBUSxPQUFPLElBQU0sU0FBUyxPQUFTLElBQUksT0FBUyxTQUFTLE9BQVMsT0FBTyxNQUFRLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxRQUFVLFNBQVMsVUFBWSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxLQUFPLFlBQWUsS0FBTyxZQUFlLEdBQUssU0FBUyxLQUFPLFlBQWUsS0FBTyxTQUFTLE9BQVMsU0FBUyxHQUFLLFNBQVMsR0FBSyxTQUFTLFNBQVcsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsS0FBTyxlQUFlLElBQU0sU0FBUyxLQUFPLGVBQWUsTUFBUSxlQUFlLE1BQVEsU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLFFBQVUsU0FBUyxTQUFXLFNBQVMsS0FBTyxPQUFPLE1BQVEsZUFBZSxPQUFTLGVBQWUsS0FBTyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsU0FBVyxlQUFlLEtBQU8sU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLE1BQVEsU0FBUyxHQUFLLFNBQVMsT0FBUyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsUUFBVSxTQUFTLE1BQVEsZUFBZSxvQkFBc0IsU0FBUyxtQkFBcUIsU0FBUyxrQkFBb0IsU0FBUyxzQkFBd0IsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE1BQVEsZUFBZSxxQkFBdUIsU0FBUyxlQUFpQixTQUFTLFFBQVU7QUFBQSxFQUFLLE9BQVMsU0FBUyxRQUFVLFNBQVMsSUFBTSxZQUFlLElBQU0sWUFBZSxJQUFNLFNBQVMsSUFBTSxlQUFlLEtBQU8sU0FBUyxNQUFRLGVBQWUsVUFBWSxlQUFlLEtBQU8sZUFBZSxJQUFNLGVBQWUsTUFBUSxTQUFTLElBQU0sU0FBUyxJQUFNLGVBQWUsS0FBTyxTQUFTLEtBQU8sZUFBZSxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxHQUFLLFNBQVMsSUFBTSxTQUFTLEtBQU8sU0FBUyxJQUFNLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxJQUFNLFNBQVMsSUFBTSxlQUFlLFdBQWEsU0FBUyxXQUFhLFNBQVMsZ0JBQWtCLFNBQVMsZ0JBQWtCLFNBQVMsS0FBTyxTQUFTLE1BQVEsZUFBZSxVQUFZLGVBQWUsS0FBTyxlQUFlLE1BQVEsU0FBUyxJQUFNLGVBQWUsTUFBUSxTQUFTLElBQU0sU0FBUyxJQUFNLGVBQWUsTUFBUSxTQUFTLE9BQVMsU0FBUyxLQUFPLGVBQWUsS0FBTyxTQUFTLFFBQVUsU0FBUyxpQkFBbUIsT0FBTyxLQUFPLFlBQWUsS0FBTyxTQUFTLElBQU0sT0FBTyxJQUFNLFNBQVMsYUFBZSxTQUFTLFVBQVksU0FBUyxxQkFBdUIsU0FBUyxXQUFhLFNBQVMsU0FBVyxTQUFTLGNBQWdCLGVBQWUsVUFBWSxTQUFTLFdBQWEsU0FBUyxnQkFBa0IsU0FBUyxvQkFBc0IsZUFBZSxrQkFBb0IsZUFBZSxlQUFpQixTQUFTLHFCQUF1QixlQUFlLGdCQUFrQixTQUFTLGdCQUFrQixlQUFlLGFBQWUsZUFBZSxNQUFRLFNBQVMsU0FBVyxlQUFlLE9BQVMsZUFBZSxRQUFVLFNBQVMsUUFBVSxTQUFTLFFBQVUsU0FBUyxnQkFBa0IsU0FBUyxtQkFBcUIsZUFBZSxxQkFBdUIsU0FBUyxRQUFVLFNBQVMsYUFBZSxTQUFTLGVBQWlCLFNBQVMsWUFBYyxlQUFlLGtCQUFvQixlQUFlLGFBQWUsU0FBUyx3QkFBMEIsZUFBZSxrQkFBb0IsZUFBZSxNQUFRLFNBQVMsUUFBVSxTQUFTLFFBQVUsU0FBUyxRQUFVLFNBQVMsWUFBYyxTQUFTLGlCQUFtQixlQUFlLHNCQUF3QixTQUFTLGtCQUFvQixTQUFTLGlCQUFtQixTQUFTLG9CQUFzQixlQUFlLHNCQUF3QixTQUFTLGdCQUFrQixlQUFlLHFCQUF1QixTQUFTLGtCQUFvQixlQUFlLHVCQUF5QixTQUFTLFVBQVksZUFBZSxlQUFpQixTQUFTLFlBQWMsU0FBUyxpQkFBbUIsZUFBZSxzQkFBd0IsU0FBUyxpQkFBbUIsZUFBZSxZQUFjLGVBQWUsaUJBQW1CLFNBQVMsU0FBVyxTQUFTLGNBQWdCLFNBQVMsa0JBQW9CLFNBQVMsY0FBZ0IsU0FBUyxlQUFpQixTQUFTLEtBQU8sU0FBUyxVQUFZLFNBQVMsT0FBUyxlQUFlLE1BQVEsZUFBZSxRQUFVLFNBQVMsSUFBTSxTQUFTLE9BQVMsU0FBUyxLQUFPLGVBQWUsTUFBUSxTQUFTLFFBQVUsZUFBZSxNQUFRLFNBQVMsTUFBUSxTQUFTLE9BQVMsZUFBZSxPQUFTLGVBQWUsWUFBYyxTQUFTLFlBQWMsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLElBQU0sU0FBUyxPQUFTLFNBQVMsS0FBTyxlQUFlLEtBQU8sWUFBZSxLQUFPLFlBQWUsVUFBWSxTQUFTLGVBQWlCLFNBQVMsS0FBTyxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsUUFBVSxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsTUFBUSxlQUFlLFFBQVUsZUFBZSxVQUFZLFNBQVMsV0FBYSxlQUFlLE1BQVEsU0FBUyxRQUFVLGVBQWUsS0FBTyxTQUFTLE1BQVEsU0FBUyxNQUFRLGVBQWUsUUFBVSxlQUFlLFVBQVksU0FBUyxXQUFhLGVBQWUsS0FBTyxTQUFTLE9BQVMsT0FBTyxPQUFTLE9BQU8sS0FBTyxTQUFTLGNBQWdCLFNBQVMsZ0JBQWtCLFNBQVMsZUFBaUIsU0FBUyxpQkFBbUIsU0FBUyxHQUFLLFNBQVMsR0FBSyxTQUFTLElBQU0sSUFBSSxPQUFTLFNBQVMsTUFBUSxTQUFTLEtBQU8sZUFBZSxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsS0FBTyxlQUFlLEtBQU8sVUFBVSxPQUFTLFNBQVMsUUFBVSxTQUFTLE9BQVMsU0FBUyxLQUFPLGVBQWUsS0FBTyxVQUFVLFFBQVUsZUFBZSxPQUFTLFNBQVMsUUFBVSxlQUFlLE1BQVEsZUFBZSxPQUFTLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsT0FBUyxTQUFTLE9BQVMsT0FBTyxPQUFTLE9BQU8sS0FBTyxTQUFTLEtBQU8sU0FBUyxNQUFRLE9BQU8sTUFBUSxPQUFPLElBQU0sU0FBUyxJQUFNLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsSUFBTSxZQUFlLElBQU0sWUFBZSxLQUFPLFNBQVMsT0FBUyxPQUFPLE9BQVMsT0FBTyxJQUFNLFNBQVMsTUFBUSxTQUFTLElBQU0sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLElBQU0sU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsUUFBVSxTQUFTLFFBQVUsU0FBUyxLQUFPLFNBQVMsT0FBUyxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsS0FBTyxTQUFTLHFCQUF1QixTQUFTLGVBQWlCLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxHQUFLLFNBQVMsR0FBSyxTQUFTLE1BQVEsU0FBUyxJQUFNLFNBQVMsTUFBUSxTQUFTLFFBQVUsU0FBUyxLQUFPLE9BQU8sS0FBTyxPQUFPLE9BQVMsU0FBUyxLQUFPLFNBQVMsUUFBVSxTQUFTLElBQU0sU0FBUyxHQUFLLFNBQVMsS0FBTyxTQUFTLEtBQU8sWUFBZSxPQUFTLE9BQU8sT0FBUyxPQUFPLEtBQU8sU0FBUyxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsU0FBUyxPQUFTLFNBQVMsU0FBVyxTQUFTLEtBQU8sT0FBTyxLQUFPLE9BQU8sTUFBUSxTQUFTLFFBQVUsU0FBUyxVQUFZLFNBQVMsWUFBYyxTQUFTLGdCQUFrQixTQUFTLElBQU0sU0FBUyxLQUFPLE9BQU8sU0FBVyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsS0FBTyxTQUFTLFNBQVcsU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLE9BQVMsSUFBSSxPQUFTLElBQUksT0FBUyxTQUFTLEtBQU8sU0FBUyxRQUFVLFNBQVMsSUFBTSxZQUFlLElBQU0sWUFBZSxJQUFNLFNBQVMsSUFBTSxTQUFTLEtBQU8sU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLEdBQUssU0FBUyxHQUFLLFNBQVMsVUFBWSxTQUFTLElBQU0sU0FBUyxPQUFTLFNBQVMsUUFBVSxTQUFTLE9BQVMsU0FBUyxLQUFPLElBQUksU0FBVyxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsVUFBWSxPQUFPLE9BQVMsT0FBTyxRQUFVLFNBQVMsUUFBVSxTQUFTLEdBQUssT0FBTyxjQUFnQixTQUFTLFNBQVcsU0FBUyxLQUFPLFlBQWUsS0FBTyxTQUFTLE1BQVEsT0FBTyxHQUFLLFNBQVMsR0FBSyxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxLQUFPLFNBQVMsV0FBYSxTQUFTLFlBQWMsU0FBUyxTQUFXLFNBQVMsY0FBZ0IsU0FBUyxtQkFBcUIsU0FBUyxjQUFnQixTQUFTLE9BQVMsU0FBUyxZQUFjLFNBQVMsU0FBVyxTQUFTLFNBQVcsU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxPQUFTLFNBQVMsS0FBTyxTQUFTLFFBQVUsU0FBUyxTQUFXLFNBQVMsU0FBVyxTQUFTLFNBQVcsU0FBUyxLQUFPLFNBQVMsV0FBYSxTQUFTLGFBQWUsU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxLQUFPLFlBQWUsS0FBTyxZQUFlLElBQU0sU0FBUyxJQUFNLFNBQVMsT0FBUyxTQUFTLElBQU0sWUFBZSxJQUFNLFlBQWUsS0FBTyxTQUFTLEtBQU8sWUFBZSxLQUFPLFNBQVMsT0FBUyxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsWUFBYyxTQUFTLFFBQVUsU0FBUyxNQUFRLElBQUksUUFBVSxTQUFTLEtBQU8sSUFBSSxLQUFPLElBQUksTUFBUSxTQUFTLEtBQU8sZUFBZSxPQUFTLFNBQVMsT0FBUyxTQUFTLE1BQVEs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UyxLQUFPLFNBQVMsSUFBTSxZQUFlLElBQU0sWUFBZSxPQUFTLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxlQUFpQixTQUFTLGVBQWlCLFNBQVMsU0FBVyxTQUFTLGNBQWdCLFNBQVMsZ0JBQWtCLFNBQVMsYUFBZSxTQUFTLElBQU0sT0FBTyxNQUFRLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsSUFBTSxTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsS0FBTyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsUUFBVSxTQUFTLFFBQVUsU0FBUyxNQUFRLFNBQVMsWUFBYyxTQUFTLGNBQWdCLFNBQVMsT0FBUyxTQUFTLFNBQVcsU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLElBQU0sU0FBUyxLQUFPLFNBQVMsTUFBUSxlQUFlLE9BQVMsU0FBUyxPQUFTLFNBQVMsSUFBTSxJQUFJLEtBQU8sU0FBUyxPQUFTLFNBQVMsS0FBTyxZQUFlLEtBQU8sWUFBZSxPQUFTLFNBQVMsVUFBWSxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsT0FBUyxlQUFlLE1BQVEsU0FBUyxPQUFTLGVBQWUsS0FBTyxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsU0FBVyxTQUFTLFdBQWEsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLFNBQVcsU0FBUyxXQUFhLFNBQVMsSUFBTSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsbUJBQXFCLFNBQVMsYUFBZSxTQUFTLGtCQUFvQixTQUFTLGVBQWlCLFNBQVMsb0JBQXNCLFNBQVMsWUFBYyxTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsZ0JBQWtCLFNBQVMsWUFBYyxTQUFTLE1BQVEsT0FBTyxJQUFNLFNBQVMsSUFBTSxTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLFFBQVUsU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsUUFBVSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsU0FBVyxTQUFTLFVBQVksU0FBUyxZQUFjLFNBQVMsVUFBWSxTQUFTLFdBQWEsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsV0FBYSxTQUFTLFlBQWMsU0FBUyxTQUFXLFNBQVMsY0FBZ0IsU0FBUyxtQkFBcUIsU0FBUyxjQUFnQixTQUFTLE9BQVMsU0FBUyxZQUFjLFNBQVMsU0FBVyxTQUFTLFNBQVcsU0FBUyxRQUFVLFNBQVMsU0FBVyxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsS0FBTyxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsS0FBTyxPQUFPLEtBQU8sT0FBTyxLQUFPLE9BQU8sT0FBUyxTQUFTLFFBQVUsU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLFFBQVUsU0FBUyxTQUFXLFNBQVMsY0FBZ0IsU0FBUyxRQUFVLFNBQVMsUUFBVSxTQUFTLFFBQVUsU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxTQUFXLFNBQVMsVUFBWSxTQUFTLFVBQVksU0FBUyxXQUFhLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsUUFBVSxTQUFTLE9BQVMsU0FBUyxNQUFRLE9BQU8sSUFBTSxJQUFLLE9BQVMsU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLEtBQU8sU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxLQUFPLFNBQVMsT0FBUyxTQUFTLElBQU0sWUFBZSxJQUFNLFlBQWUsT0FBUyxTQUFTLFVBQVksU0FBUyxVQUFZLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxTQUFXLFNBQVMsT0FBUyxTQUFTLFlBQWMsU0FBUyxTQUFXLFNBQVMsV0FBYSxlQUFlLE9BQVMsU0FBUyxVQUFZLFNBQVMsTUFBUSxTQUFTLE9BQVMsU0FBUyxNQUFRLE9BQU8sTUFBUSxPQUFPLE1BQVEsU0FBUyxNQUFRLFNBQVMsV0FBYSxTQUFTLGVBQWlCLFNBQVMsV0FBYSxTQUFTLE1BQVEsT0FBTyxPQUFTLFNBQVMsU0FBVyxTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLElBQU0sU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsUUFBVSxTQUFTLEtBQU8sU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxTQUFXLFNBQVMsYUFBZSxTQUFTLGFBQWUsU0FBUyxlQUFpQixTQUFTLFVBQVksU0FBUyxjQUFnQixTQUFTLGdCQUFrQixTQUFTLE9BQVMsU0FBUyxLQUFPLFNBQVMsU0FBVyxTQUFTLFVBQVksU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLFFBQVUsU0FBUyxTQUFXLFNBQVMsS0FBTyxZQUFlLEtBQU8sWUFBZSxLQUFPLFNBQVMsS0FBTyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsaUJBQW1CLFNBQVMsa0JBQW9CLFNBQVMsT0FBUyxPQUFPLE9BQVMsT0FBTyxLQUFPLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxTQUFXLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE1BQVEsT0FBTyxNQUFRLE9BQU8sSUFBTSxTQUFTLElBQU0sU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLElBQU0sWUFBZSxJQUFNLFlBQWUsT0FBUyxPQUFPLE9BQVMsT0FBTyxLQUFPLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLFNBQVcsU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsSUFBTSxPQUFPLFNBQVcsSUFBSSxXQUFhLFNBQVMsYUFBZSxTQUFTLGlCQUFtQixTQUFTLE1BQVEsU0FBUyxVQUFZLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxLQUFPLFlBQWUsS0FBTyxZQUFlLFFBQVUsU0FBUyxRQUFVLFNBQVMsUUFBVSxTQUFTLFdBQWEsU0FBUyxpQkFBbUIsU0FBUyxZQUFjLFNBQVMsWUFBYyxTQUFTLFlBQWMsU0FBUyxjQUFnQixTQUFTLGNBQWdCLFNBQVMsZUFBaUIsU0FBUyxNQUFRLFNBQVMsZUFBaUIsU0FBUyxnQkFBa0IsU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLE1BQVEsU0FBUyxRQUFVLFNBQVMsUUFBVSxTQUFTLE1BQVEsU0FBUyxXQUFhLFNBQVMsV0FBYSxTQUFTLE9BQVMsU0FBUyxTQUFXLFNBQVMsT0FBUyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsTUFBUSxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsS0FBTyxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsS0FBTyxPQUFPLEtBQU8sT0FBTyxRQUFVLFNBQVMsT0FBUyxTQUFTLFdBQWEsU0FBUyxTQUFXLFNBQVMsV0FBYSxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsVUFBWSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsT0FBUyxTQUFTLFNBQVcsU0FBUyxhQUFlLGVBQWUsY0FBZ0IsZUFBZSxhQUFlLGVBQWUsY0FBZ0IsZUFBZSxTQUFXLFNBQVMsZ0JBQWtCLFNBQVMsaUJBQW1CLFNBQVMsS0FBTyxTQUFTLEtBQU8sU0FBUyxNQUFRLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxNQUFRLFNBQVMsT0FBUyxTQUFTLElBQU0sU0FBUyxJQUFNLFNBQVMsT0FBUyxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsT0FBUyxJQUFJLE9BQVMsU0FBUyxLQUFPLElBQUksS0FBTyxTQUFTLFlBQWMsU0FBUyxhQUFlLElBQUksa0JBQW9CLFNBQVMsY0FBZ0IsU0FBUyxjQUFnQixTQUFTLElBQU0sWUFBZSxJQUFNLFlBQWUsTUFBUSxTQUFTLE1BQVEsZUFBZSxNQUFRLGVBQWUsS0FBTyxZQUFlLEtBQU8sWUFBZSxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsT0FBUyxlQUFlLE9BQVMsZUFBZSxPQUFTLGVBQWUsT0FBUyxlQUFlLE9BQVMsU0FBUyxRQUFVLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLElBQU0sWUFBZSxJQUFNLFlBQWUsS0FBTyxZQUFlLEtBQU8sWUFBZSxHQUFLLFNBQVMsR0FBSyxTQUFTLE9BQVMsU0FBUyxLQUFPLFlBQWUsS0FBTyxZQUFlLEtBQU8sU0FBUyxNQUFRLFNBQVMsS0FBTyxTQUFTLE1BQVEsU0FBUyxJQUFNLFlBQWUsSUFBTSxZQUFlLE1BQVEsU0FBUyxNQUFRLFNBQVMsR0FBSyxTQUFTLEdBQUssU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsT0FBUyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsTUFBUSxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsT0FBUyxTQUFTLE9BQVMsU0FBUyxNQUFRLFNBQVMsS0FBTyxTQUFTLE9BQVMsU0FBUyxPQUFTLE9BQU8sT0FBUyxPQUFPLEtBQU8sU0FBUyxLQUFPLFNBQVMsTUFBUSxTQUFTLE1BQVEsU0FBUyxJQUFNLFNBQVMsSUFBTSxTQUFTLElBQU0sT0FBTyxJQUFNLFlBQWUsSUFBTSxZQUFlLEtBQU8sU0FBUyxLQUFPLFNBQVMsS0FBTyxZQUFlLEtBQU8sWUFBZSxLQUFPLFlBQWUsS0FBTyxZQUFlLEtBQU8sU0FBUyxLQUFPLFNBQVMsS0FBTyxPQUFPLEtBQU8sU0FBUyxPQUFTLFNBQVMsT0FBUyxTQUFTLE9BQVMsU0FBUyxPQUFTLFNBQVMsSUFBTSxTQUFTLElBQU0sU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLE9BQVMsU0FBUyxlQUFpQixTQUFTLEtBQU8sU0FBUyxLQUFPLFNBQVMsSUFBTSxZQUFlLElBQU0sU0FBUyxLQUFPLFNBQVMsS0FBTyxTQUFTLFFBQVUsU0FBUyxLQUFPLFlBQWUsS0FBTyxTQUFTLEtBQU8sWUFBZSxLQUFPLFlBQWUsSUFBTSxTQUFTLEtBQU8sVUFDeDh1QyxFQUFrQixDQUFDLE9BQVMsT0FBTyxPQUFTLE9BQU8sTUFBUSxPQUFPLE1BQVEsT0FBTyxNQUFRLE9BQU8sTUFBUSxPQUFPLE1BQVEsT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLElBQU0sSUFBSSxJQUFNLElBQUksTUFBUSxPQUFPLE1BQVEsT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLEtBQU8sT0FBTyxLQUFPLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sTUFBUSxPQUFPLEtBQU8sT0FBTyxLQUFPLE9BQU8sS0FBTyxPQUFPLE9BQVMsT0FBTyxJQUFNLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sTUFBUSxPQUFPLE1BQVEsT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLElBQU0sT0FBTyxJQUFNLE9BQU8sS0FBTyxPQUFPLEtBQU8sT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxHQUFLLElBQUksR0FBSyxJQUFJLE9BQVMsT0FBTyxPQUFTLE9BQU8sTUFBUSxPQUFPLE1BQVEsT0FBTyxNQUFRLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sS0FBTyxPQUFPLEtBQU8sT0FBTyxNQUFRLE9BQU8sR0FBSyxJQUFJLEdBQUssSUFBSSxLQUFPLE9BQU8sTUFBUSxPQUFPLE9BQVMsT0FBTyxLQUFPLE9BQU8sSUFBTSxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxNQUFRLE9BQU8sTUFBUSxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sS0FBTyxPQUFPLEtBQU8sT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sS0FBTyxPQUFPLEtBQU8sT0FBTyxLQUFPLE9BQU8sT0FBUyxPQUFPLE1BQVEsT0FBTyxLQUFPLElBQUksS0FBTyxJQUFJLE1BQVEsT0FBTyxJQUFNLE9BQU8sSUFBTSxPQUFPLEtBQU8sT0FBTyxJQUFNLE9BQU8sS0FBTyxPQUFPLEtBQU8sT0FBTyxLQUFPLE9BQU8sTUFBUSxPQUFPLE1BQVEsT0FBTyxNQUFRLE9BQU8sTUFBUSxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sTUFBUSxPQUFPLE1BQVEsT0FBTyxPQUFTLE9BQU8sT0FBUyxPQUFPLElBQU0sT0FBTyxLQUFPLE9BQU8sS0FBTyxPQUFPLE9BQVMsT0FBTyxPQUFTLE9BQU8sSUFBTSxPQUFPLEtBQU8sUUFDeGhELEVBQW1CLENBQUMsSUFBSSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxTQUFTLE1BQU0sU0FBUyxNQUFNLFNBQVMsTUFBTSxVQUM3YSxFQUE2QixDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJ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QU0sV0FDTixLQUFNLFFBQ04sT0FBUSxHQUNSLEdBQUksbUJBRVIsQ0FDSSxLQUFNLFdBQ04sS0FBTSxRQUNOLE9BQVEsR0FDUixHQUFJLG1CQUVSLENBQ0ksS0FBTSxRQUNOLEtBQU0sUUFDTixPQUFRLEdBQ1IsR0FBSSxtQkFFUixDQUNJLEtBQU0sV0FDTixLQUFNLFFBQ04sT0FBUSxHQUNSLEdBQUksbUJBRVIsQ0FDSSxLQUFNLFFBQ04sS0FBTSxRQUNOLE9BQVEsR0FDUixHQUFJLG1CQUVSLENBQ0ksS0FBTSxPQUNOLEtBQU0sUUFDTixPQUFRLEdBQ1IsR0FBSSxvQkFHWixNQUFPLENBQ0gsQ0FDSSxLQUFNLE9BQ04sTUFBTyxHQUNQLE9BQVEsSUFDUixVQUFXLFVBQ1gsWUFBYSxVQUNiLEdBQUksbUJBRVIsQ0FDSSxLQUFNLFdBQ04sTUFBTyxHQUNQLE9BQVEsSUFDUixVQUFXLFVBQ1gsWUFBYSxVQUNiLEdBQUksbUJBRVIsQ0FDSSxLQUFNLFlBQ04sTUFBTyxHQUNQLE9BQVEsR0FDUixVQUFXLFVBQ1gsWUFBYSxVQUNiLEdBQUksbUJBRVIsQ0FDSSxLQUFNLFFBQ04sTUFBTyxHQUNQLE9BQVEsRUFDUixVQUFXLFVBQ1gsWUFBYSxVQUNiLEdBQUksbUJBRVIsQ0FDSSxLQUFNLFVBQ04sTUFBTyxHQUNQLE9BQVEsR0FDUixVQUFXLFVBQ1gsWUFBYSxVQUNiLEdBQUksbUJBRVIsQ0FDSSxLQUFNLE9BQ04sTUFBTyxHQUNQLE9BQVEsR0FDUixVQUFXLFVBQ1gsWUFBYSxVQUNiLEdBQUksbUJBRVIsQ0FDSSxLQUFNLE9BQ04sTUFBTyxHQUNQLE9BQVEsRUFDUixVQUFXLFVBQ1gsWUFBYSxVQUNiLEdBQUksbUJBRVIsQ0FDSSxLQUFNLFdBQ04sTUFBTyxHQUNQLE9BQVEsR0FDUixVQUFXLFVBQ1gsWUFBYSxVQUNiLEdBQUksbUJBRVIsQ0FDSSxLQUFNLFFBQ04sTUFBTyxHQUNQLE9BQVEsR0FDUixVQUFXLFVBQ1gsWUFBYSxVQUNiLEdBQUksbUJBRVIsQ0FDSSxLQUFNLFVBQ04sTUFBTyxHQUNQLE9B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
