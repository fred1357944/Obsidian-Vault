/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var $p=Object.create;var pa=Object.defineProperty;var Kp=Object.getOwnPropertyDescriptor;var Qp=Object.getOwnPropertyNames;var Xp=Object.getPrototypeOf,Jp=Object.prototype.hasOwnProperty;var xs=t=>pa(t,"__esModule",{value:!0});var ze=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),em=(t,e)=>{xs(t);for(var n in e)pa(t,n,{get:e[n],enumerable:!0})},tm=(t,e,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of Qp(e))!Jp.call(t,r)&&r!=="default"&&pa(t,r,{get:()=>e[r],enumerable:!(n=Kp(e,r))||n.enumerable});return t},Oe=t=>tm(xs(pa(t!=null?$p(Xp(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var Nr=ze((Oi,qi)=>{(function(t,e){typeof Oi=="object"&&typeof qi!="undefined"?qi.exports=e():typeof define=="function"&&define.amd?define(e):(t=typeof globalThis!="undefined"?globalThis:t||self,t["fast-copy"]=e())})(Oi,function(){"use strict";var t=Function.prototype.toString,e=Object.create,n=Object.defineProperty,r=Object.getOwnPropertyDescriptor,a=Object.getOwnPropertyNames,i=Object.getOwnPropertySymbols,o=Object.getPrototypeOf,l=Object.prototype,s=l.hasOwnProperty,d=l.propertyIsEnumerable,u={SYMBOL_PROPERTIES:typeof i=="function",WEAKMAP:typeof WeakMap=="function"},c=function(){if(u.WEAKMAP)return new WeakMap;var F=e({has:function(M){return!!~F._keys.indexOf(M)},set:function(M,T){F._keys.push(M),F._values.push(T)},get:function(M){return F._values[F._keys.indexOf(M)]}});return F._keys=[],F._values=[],F},m=function(F,M){if(!F.constructor)return e(null);var T=F.constructor,x=F.__proto__||o(F);if(T===M.Object)return x===M.Object.prototype?{}:e(x);if(~t.call(T).indexOf("[native code]"))try{return new T}catch{}return e(x)},g=function(F,M,T,x){var _=m(F,M);x.set(F,_);for(var k in F)s.call(F,k)&&(_[k]=T(F[k],x));if(u.SYMBOL_PROPERTIES){var D=i(F),R=D.length;if(R)for(var q=0,H=void 0;q<R;q++)H=D[q],d.call(F,H)&&(_[H]=T(F[H],x))}return _},p=function(F,M,T,x){var _=m(F,M);x.set(F,_);var k=u.SYMBOL_PROPERTIES?a(F).concat(i(F)):a(F),D=k.length;if(D){for(var R=0,q=void 0,H=void 0;R<D;R++)if(q=k[R],q!=="callee"&&q!=="caller")if(H=r(F,q),H){!H.get&&!H.set&&(H.value=T(F[q],x));try{n(_,q,H)}catch{_[q]=H.value}}else _[q]=T(F[q],x)}return _},E=function(F){var M="";return F.global&&(M+="g"),F.ignoreCase&&(M+="i"),F.multiline&&(M+="m"),F.unicode&&(M+="u"),F.sticky&&(M+="y"),M},y=Array.isArray,S=function(){if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;console&&console.error&&console.error('Unable to locate global object, returning "this".')}();function C(F,M){var T=!!(M&&M.isStrict),x=M&&M.realm||S,_=T?p:g,k=function(D,R){if(!D||typeof D!="object")return D;if(R.has(D))return R.get(D);var q=D.constructor;if(q===x.Object)return _(D,x,k,R);var H;if(y(D)){if(T)return p(D,x,k,R);var ne=D.length;H=new q,R.set(D,H);for(var ye=0;ye<ne;ye++)H[ye]=k(D[ye],R);return H}if(D instanceof x.Date)return new q(D.getTime());if(D instanceof x.RegExp)return H=new q(D.source,D.flags||E(D)),H.lastIndex=D.lastIndex,H;if(x.Map&&D instanceof x.Map)return H=new q,R.set(D,H),D.forEach(function(ae,me){H.set(me,k(ae,R))}),H;if(x.Set&&D instanceof x.Set)return H=new q,R.set(D,H),D.forEach(function(ae){H.add(k(ae,R))}),H;if(x.Blob&&D instanceof x.Blob)return D.slice(0,D.size,D.type);if(x.Buffer&&x.Buffer.isBuffer(D))return H=x.Buffer.allocUnsafe?x.Buffer.allocUnsafe(D.length):new q(D.length),R.set(D,H),D.copy(H),H;if(x.ArrayBuffer){if(x.ArrayBuffer.isView(D))return H=new q(D.buffer.slice(0)),R.set(D,H),H;if(D instanceof x.ArrayBuffer)return H=D.slice(0),R.set(D,H),H}return typeof D.then=="function"||D instanceof Error||x.WeakMap&&D instanceof x.WeakMap||x.WeakSet&&D instanceof x.WeakSet?D:_(D,x,k,R)};return k(F,c())}return C.default=C,C.strict=function(M,T){return C(M,{isStrict:!0,realm:T?T.realm:void 0})},C})});var Fs=ze(ma=>{"use strict";Object.defineProperty(ma,"__esModule",{value:!0});ma.default=void 0;var nm={sum:function(e){return e.reduce(function(n,r){return n+r})}},rm=nm;ma.default=rm});var ga=ze((Zv,Ts)=>{function am(t){return Object.prototype.toString.call(t).slice(8,-1)}Ts.exports=am});var Ri=ze(($v,Ss)=>{function im(t){return!!t&&typeof t=="object"&&t.constructor===Object}Ss.exports=im});var ya=ze((Kv,Bs)=>{function om(t,e){return Object.prototype.hasOwnProperty.call(t,e)}Bs.exports=om});var Os=ze((Qv,Is)=>{var sm=ya(),va,Ns;function lm(){Ns=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],va=!0;for(var t in{toString:null})va=!1}function um(t,e,n){var r,a=0;va==null&&lm();for(r in t)if(Ms(e,t,r,n)===!1)break;if(va)for(var i=t.constructor,o=!!i&&t===i.prototype;(r=Ns[a++])&&!((r!=="constructor"||!o&&sm(t,r))&&t[r]!==Object.prototype[r]&&Ms(e,t,r,n)===!1););}function Ms(t,e,n,r){return t.call(r,e[n],n,e)}Is.exports=um});var Mr=ze((Xv,qs)=>{var cm=ya(),dm=Os();function fm(t,e,n){dm(t,function(r,a){if(cm(t,a))return e.call(n,t[a],a,t)})}qs.exports=fm});var Ls=ze((Jv,Rs)=>{var hm=Mr();function pm(t,e){for(var n=0,r=arguments.length,a;++n<r;)a=arguments[n],a!=null&&hm(a,mm,t);return t}function mm(t,e){this[e]=t}Rs.exports=pm});var js=ze((e1,Ps)=>{var gm=ga(),ym=Ri(),vm=Ls();function bm(t){switch(gm(t)){case"Object":return wm(t);case"Array":return Em(t);case"RegExp":return Dm(t);case"Date":return _m(t);default:return t}}function wm(t){return ym(t)?vm({},t):t}function Dm(t){var e="";return e+=t.multiline?"m":"",e+=t.global?"g":"",e+=t.ignoreCase?"i":"",new RegExp(t.source,e)}function _m(t){return new Date(+t)}function Em(t){return t.slice()}Ps.exports=bm});var Hs=ze((t1,Vs)=>{var Cm=js(),Am=Mr(),km=ga(),xm=Ri();function Li(t,e){switch(km(t)){case"Object":return Fm(t,e);case"Array":return Tm(t,e);default:return Cm(t)}}function Fm(t,e){if(xm(t)){var n={};return Am(t,function(r,a){this[a]=Li(r,e)},n),n}else return e?e(t):t}function Tm(t,e){for(var n=[],r=-1,a=t.length,i;++r<a;)n[r]=Li(t[r],e);return n}Vs.exports=Li});var ba=ze((n1,Ws)=>{function Sm(t,e){return t===e?t!==0||1/t==1/e:t!==t&&e!==e}Ws.exports=Sm});var Pi=ze((r1,Gs)=>{var Bm=ga();function Nm(t,e){return Bm(t)===e}Gs.exports=Nm});var ji=ze((a1,Us)=>{var Mm=Pi();function Im(t){return Mm(t,"Object")}Us.exports=Im});var wa=ze((i1,zs)=>{var Om=Pi(),qm=Array.isArray||function(t){return Om(t,"Array")};zs.exports=qm});var Zs=ze((o1,Ys)=>{function Rm(t){return t}Ys.exports=Rm});var Ks=ze((s1,$s)=>{function Lm(t){return function(e){return e[t]}}$s.exports=Lm});var Js=ze((l1,Xs)=>{var Pm=Mr(),Qs=wa();function jm(t,e){for(var n=-1,r=t.length;++n<r;)if(Vi(t[n],e))return!0;return!1}function Vm(t,e){for(var n=-1,r=e.length;++n<r;)if(!jm(t,e[n]))return!1;return!0}function Hm(t,e){var n=!0;return Pm(e,function(r,a){if(!Vi(t[a],r))return n=!1}),n}function Vi(t,e){return t&&typeof t=="object"&&e&&typeof e=="object"?Qs(t)&&Qs(e)?Vm(t,e):Hm(t,e):t===e}Xs.exports=Vi});var Hi=ze((u1,el)=>{var Wm=Zs(),Gm=Ks(),Um=Js();function zm(t,e){if(t==null)return Wm;switch(typeof t){case"function":return typeof e!="undefined"?function(n,r,a){return t.call(e,n,r,a)}:t;case"object":return function(n){return Um(n,t)};case"string":case"number":return Gm(t)}}el.exports=zm});var nl=ze((c1,tl)=>{var Ym=Mr(),Zm=Hi();function $m(t,e,n){e=Zm(e,n);var r=!0;return Ym(t,function(a,i){if(!e(a,i,t))return r=!1,!1}),r}tl.exports=$m});var sl=ze((d1,ol)=>{var rl=ya(),al=nl(),il=ji(),Km=ba();function Qm(t){return function(e,n){return rl(this,n)&&t(e,this[n])}}function Xm(t,e){return rl(this,e)}function Jm(t,e,n){return n=n||Km,!il(t)||!il(e)?n(t,e):al(t,Qm(n),e)&&al(e,Xm,t)}ol.exports=Jm});var ul=ze((f1,ll)=>{var eg=Hi();function tg(t,e,n){e=eg(e,n);var r=!0;if(t==null)return r;for(var a=-1,i=t.length;++a<i;)if(!e(t[a],a,t)){r=!1;break}return r}ll.exports=tg});var fl=ze((h1,dl)=>{var ng=ba(),cl=wa(),rg=ul();function ag(t,e,n){return n=n||ng,!cl(t)||!cl(e)?n(t,e):t.length!==e.length?!1:rg(t,ig(n),e)}function ig(t){return function(e,n){return n in this&&t(e,this[n])}}dl.exports=ag});var yl=ze((p1,gl)=>{var og=ba(),hl=ji(),pl=wa(),sg=sl(),lg=fl();function ml(t,e,n){n=n||og;var r=hl(t)&&hl(e),a=!r&&pl(t)&&pl(e);if(!r&&!a)return n(t,e);function i(l,s){return ml(l,s,n)}var o=r?sg:lg;return o(t,e,i)}gl.exports=ml});var vl=ze((Wi,Gi)=>{(function(t,e){typeof Wi=="object"&&typeof Gi!="undefined"?Gi.exports=e():typeof define=="function"&&define.amd?define(e):t.chroma=e()})(Wi,function(){"use strict";for(var t=function(f,h,v){return h===void 0&&(h=0),v===void 0&&(v=1),f<h?h:f>v?v:f},e=function(f){f._clipped=!1,f._unclipped=f.slice(0);for(var h=0;h<=3;h++)h<3?((f[h]<0||f[h]>255)&&(f._clipped=!0),f[h]=t(f[h],0,255)):h===3&&(f[h]=t(f[h],0,1));return f},n={},r=0,a=["Boolean","Number","String","Function","Array","Date","RegExp","Undefined","Null"];r<a.length;r+=1){var i=a[r];n["[object "+i+"]"]=i.toLowerCase()}var o=function(f){return n[Object.prototype.toString.call(f)]||"object"},l=function(f,h){return h===void 0&&(h=null),f.length>=3?Array.prototype.slice.call(f):o(f[0])=="object"&&h?h.split("").filter(function(v){return f[0][v]!==void 0}).map(function(v){return f[0][v]}):f[0]},s=function(f){if(f.length<2)return null;var h=f.length-1;return o(f[h])=="string"?f[h].toLowerCase():null},d=Math.PI,u={clip_rgb:e,limit:t,type:o,unpack:l,last:s,PI:d,TWOPI:d*2,PITHIRD:d/3,DEG2RAD:d/180,RAD2DEG:180/d},c={format:{},autodetect:[]},m=u.last,g=u.clip_rgb,p=u.type,E=function(){for(var h=[],v=arguments.length;v--;)h[v]=arguments[v];var A=this;if(p(h[0])==="object"&&h[0].constructor&&h[0].constructor===this.constructor)return h[0];var I=m(h),O=!1;if(!I){O=!0,c.sorted||(c.autodetect=c.autodetect.sort(function(Q,$){return $.p-Q.p}),c.sorted=!0);for(var B=0,L=c.autodetect;B<L.length;B+=1){var P=L[B];if(I=P.test.apply(P,h),I)break}}if(c.format[I]){var Y=c.format[I].apply(null,O?h:h.slice(0,-1));A._rgb=g(Y)}else throw new Error("unknown format: "+h);A._rgb.length===3&&A._rgb.push(1)};E.prototype.toString=function(){return p(this.hex)=="function"?this.hex():"["+this._rgb.join(",")+"]"};var y=E,S=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(S.Color,[null].concat(f)))};S.Color=y,S.version="2.1.2";var C=S,F=u.unpack,M=Math.max,T=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=F(f,"rgb"),A=v[0],I=v[1],O=v[2];A=A/255,I=I/255,O=O/255;var B=1-M(A,M(I,O)),L=B<1?1/(1-B):0,P=(1-A-B)*L,Y=(1-I-B)*L,Q=(1-O-B)*L;return[P,Y,Q,B]},x=T,_=u.unpack,k=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];f=_(f,"cmyk");var v=f[0],A=f[1],I=f[2],O=f[3],B=f.length>4?f[4]:1;return O===1?[0,0,0,B]:[v>=1?0:255*(1-v)*(1-O),A>=1?0:255*(1-A)*(1-O),I>=1?0:255*(1-I)*(1-O),B]},D=k,R=u.unpack,q=u.type;y.prototype.cmyk=function(){return x(this._rgb)},C.cmyk=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["cmyk"])))},c.format.cmyk=D,c.autodetect.push({p:2,test:function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];if(f=R(f,"cmyk"),q(f)==="array"&&f.length===4)return"cmyk"}});var H=u.unpack,ne=u.last,ye=function(f){return Math.round(f*100)/100},ae=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=H(f,"hsla"),A=ne(f)||"lsa";return v[0]=ye(v[0]||0),v[1]=ye(v[1]*100)+"%",v[2]=ye(v[2]*100)+"%",A==="hsla"||v.length>3&&v[3]<1?(v[3]=v.length>3?v[3]:1,A="hsla"):v.length=3,A+"("+v.join(",")+")"},me=ae,Z=u.unpack,z=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];f=Z(f,"rgba");var v=f[0],A=f[1],I=f[2];v/=255,A/=255,I/=255;var O=Math.min(v,A,I),B=Math.max(v,A,I),L=(B+O)/2,P,Y;return B===O?(P=0,Y=Number.NaN):P=L<.5?(B-O)/(B+O):(B-O)/(2-B-O),v==B?Y=(A-I)/(B-O):A==B?Y=2+(I-v)/(B-O):I==B&&(Y=4+(v-A)/(B-O)),Y*=60,Y<0&&(Y+=360),f.length>3&&f[3]!==void 0?[Y,P,L,f[3]]:[Y,P,L]},ue=z,ke=u.unpack,Ce=u.last,ve=Math.round,Ee=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=ke(f,"rgba"),A=Ce(f)||"rgb";return A.substr(0,3)=="hsl"?me(ue(v),A):(v[0]=ve(v[0]),v[1]=ve(v[1]),v[2]=ve(v[2]),(A==="rgba"||v.length>3&&v[3]<1)&&(v[3]=v.length>3?v[3]:1,A="rgba"),A+"("+v.slice(0,A==="rgb"?3:4).join(",")+")")},et=Ee,Pe=u.unpack,ht=Math.round,Bt=function(){for(var f,h=[],v=arguments.length;v--;)h[v]=arguments[v];h=Pe(h,"hsl");var A=h[0],I=h[1],O=h[2],B,L,P;if(I===0)B=L=P=O*255;else{var Y=[0,0,0],Q=[0,0,0],$=O<.5?O*(1+I):O+I-O*I,de=2*O-$,se=A/360;Y[0]=se+1/3,Y[1]=se,Y[2]=se-1/3;for(var _e=0;_e<3;_e++)Y[_e]<0&&(Y[_e]+=1),Y[_e]>1&&(Y[_e]-=1),6*Y[_e]<1?Q[_e]=de+($-de)*6*Y[_e]:2*Y[_e]<1?Q[_e]=$:3*Y[_e]<2?Q[_e]=de+($-de)*(2/3-Y[_e])*6:Q[_e]=de;f=[ht(Q[0]*255),ht(Q[1]*255),ht(Q[2]*255)],B=f[0],L=f[1],P=f[2]}return h.length>3?[B,L,P,h[3]]:[B,L,P,1]},pt=Bt,Ct=/^rgb\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*\)$/,xt=/^rgba\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*,\s*([01]|[01]?\.\d+)\)$/,Lt=/^rgb\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/,Pt=/^rgba\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/,Wt=/^hsl\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/,Qt=/^hsla\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/,$n=Math.round,ie=function(f){f=f.toLowerCase().trim();var h;if(c.format.named)try{return c.format.named(f)}catch{}if(h=f.match(Ct)){for(var v=h.slice(1,4),A=0;A<3;A++)v[A]=+v[A];return v[3]=1,v}if(h=f.match(xt)){for(var I=h.slice(1,5),O=0;O<4;O++)I[O]=+I[O];return I}if(h=f.match(Lt)){for(var B=h.slice(1,4),L=0;L<3;L++)B[L]=$n(B[L]*2.55);return B[3]=1,B}if(h=f.match(Pt)){for(var P=h.slice(1,5),Y=0;Y<3;Y++)P[Y]=$n(P[Y]*2.55);return P[3]=+P[3],P}if(h=f.match(Wt)){var Q=h.slice(1,4);Q[1]*=.01,Q[2]*=.01;var $=pt(Q);return $[3]=1,$}if(h=f.match(Qt)){var de=h.slice(1,4);de[1]*=.01,de[2]*=.01;var se=pt(de);return se[3]=+h[4],se}};ie.test=function(f){return Ct.test(f)||xt.test(f)||Lt.test(f)||Pt.test(f)||Wt.test(f)||Qt.test(f)};var Fr=ie,oa=u.type;y.prototype.css=function(f){return et(this._rgb,f)},C.css=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["css"])))},c.format.css=Fr,c.autodetect.push({p:5,test:function(f){for(var h=[],v=arguments.length-1;v-- >0;)h[v]=arguments[v+1];if(!h.length&&oa(f)==="string"&&Fr.test(f))return"css"}});var sa=u.unpack;c.format.gl=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=sa(f,"rgba");return v[0]*=255,v[1]*=255,v[2]*=255,v},C.gl=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["gl"])))},y.prototype.gl=function(){var f=this._rgb;return[f[0]/255,f[1]/255,f[2]/255,f[3]]};var _f=u.unpack,Ef=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=_f(f,"rgb"),A=v[0],I=v[1],O=v[2],B=Math.min(A,I,O),L=Math.max(A,I,O),P=L-B,Y=P*100/255,Q=B/(255-P)*100,$;return P===0?$=Number.NaN:(A===L&&($=(I-O)/P),I===L&&($=2+(O-A)/P),O===L&&($=4+(A-I)/P),$*=60,$<0&&($+=360)),[$,Y,Q]},Cf=Ef,Af=u.unpack,kf=Math.floor,xf=function(){for(var f,h,v,A,I,O,B=[],L=arguments.length;L--;)B[L]=arguments[L];B=Af(B,"hcg");var P=B[0],Y=B[1],Q=B[2],$,de,se;Q=Q*255;var _e=Y*255;if(Y===0)$=de=se=Q;else{P===360&&(P=0),P>360&&(P-=360),P<0&&(P+=360),P/=60;var qe=kf(P),Te=P-qe,je=Q*(1-Y),Ge=je+_e*(1-Te),bt=je+_e*Te,wt=je+_e;switch(qe){case 0:f=[wt,bt,je],$=f[0],de=f[1],se=f[2];break;case 1:h=[Ge,wt,je],$=h[0],de=h[1],se=h[2];break;case 2:v=[je,wt,bt],$=v[0],de=v[1],se=v[2];break;case 3:A=[je,Ge,wt],$=A[0],de=A[1],se=A[2];break;case 4:I=[bt,je,wt],$=I[0],de=I[1],se=I[2];break;case 5:O=[wt,je,Ge],$=O[0],de=O[1],se=O[2];break}}return[$,de,se,B.length>3?B[3]:1]},Ff=xf,Tf=u.unpack,Sf=u.type;y.prototype.hcg=function(){return Cf(this._rgb)},C.hcg=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["hcg"])))},c.format.hcg=Ff,c.autodetect.push({p:1,test:function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];if(f=Tf(f,"hcg"),Sf(f)==="array"&&f.length===3)return"hcg"}});var Bf=u.unpack,Nf=u.last,la=Math.round,Mf=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=Bf(f,"rgba"),A=v[0],I=v[1],O=v[2],B=v[3],L=Nf(f)||"auto";B===void 0&&(B=1),L==="auto"&&(L=B<1?"rgba":"rgb"),A=la(A),I=la(I),O=la(O);var P=A<<16|I<<8|O,Y="000000"+P.toString(16);Y=Y.substr(Y.length-6);var Q="0"+la(B*255).toString(16);switch(Q=Q.substr(Q.length-2),L.toLowerCase()){case"rgba":return"#"+Y+Q;case"argb":return"#"+Q+Y;default:return"#"+Y}},ts=Mf,If=/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,Of=/^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/,qf=function(f){if(f.match(If)){(f.length===4||f.length===7)&&(f=f.substr(1)),f.length===3&&(f=f.split(""),f=f[0]+f[0]+f[1]+f[1]+f[2]+f[2]);var h=parseInt(f,16),v=h>>16,A=h>>8&255,I=h&255;return[v,A,I,1]}if(f.match(Of)){(f.length===5||f.length===9)&&(f=f.substr(1)),f.length===4&&(f=f.split(""),f=f[0]+f[0]+f[1]+f[1]+f[2]+f[2]+f[3]+f[3]);var O=parseInt(f,16),B=O>>24&255,L=O>>16&255,P=O>>8&255,Y=Math.round((O&255)/255*100)/100;return[B,L,P,Y]}throw new Error("unknown hex color: "+f)},ns=qf,Rf=u.type;y.prototype.hex=function(f){return ts(this._rgb,f)},C.hex=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["hex"])))},c.format.hex=ns,c.autodetect.push({p:4,test:function(f){for(var h=[],v=arguments.length-1;v-- >0;)h[v]=arguments[v+1];if(!h.length&&Rf(f)==="string"&&[3,4,5,6,7,8,9].indexOf(f.length)>=0)return"hex"}});var Lf=u.unpack,rs=u.TWOPI,Pf=Math.min,jf=Math.sqrt,Vf=Math.acos,Hf=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=Lf(f,"rgb"),A=v[0],I=v[1],O=v[2];A/=255,I/=255,O/=255;var B,L=Pf(A,I,O),P=(A+I+O)/3,Y=P>0?1-L/P:0;return Y===0?B=NaN:(B=(A-I+(A-O))/2,B/=jf((A-I)*(A-I)+(A-O)*(I-O)),B=Vf(B),O>I&&(B=rs-B),B/=rs),[B*360,Y,P]},Wf=Hf,Gf=u.unpack,mi=u.limit,Kn=u.TWOPI,gi=u.PITHIRD,Qn=Math.cos,Uf=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];f=Gf(f,"hsi");var v=f[0],A=f[1],I=f[2],O,B,L;return isNaN(v)&&(v=0),isNaN(A)&&(A=0),v>360&&(v-=360),v<0&&(v+=360),v/=360,v<1/3?(L=(1-A)/3,O=(1+A*Qn(Kn*v)/Qn(gi-Kn*v))/3,B=1-(L+O)):v<2/3?(v-=1/3,O=(1-A)/3,B=(1+A*Qn(Kn*v)/Qn(gi-Kn*v))/3,L=1-(O+B)):(v-=2/3,B=(1-A)/3,L=(1+A*Qn(Kn*v)/Qn(gi-Kn*v))/3,O=1-(B+L)),O=mi(I*O*3),B=mi(I*B*3),L=mi(I*L*3),[O*255,B*255,L*255,f.length>3?f[3]:1]},zf=Uf,Yf=u.unpack,Zf=u.type;y.prototype.hsi=function(){return Wf(this._rgb)},C.hsi=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["hsi"])))},c.format.hsi=zf,c.autodetect.push({p:2,test:function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];if(f=Yf(f,"hsi"),Zf(f)==="array"&&f.length===3)return"hsi"}});var $f=u.unpack,Kf=u.type;y.prototype.hsl=function(){return ue(this._rgb)},C.hsl=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["hsl"])))},c.format.hsl=pt,c.autodetect.push({p:2,test:function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];if(f=$f(f,"hsl"),Kf(f)==="array"&&f.length===3)return"hsl"}});var Qf=u.unpack,Xf=Math.min,Jf=Math.max,eh=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];f=Qf(f,"rgb");var v=f[0],A=f[1],I=f[2],O=Xf(v,A,I),B=Jf(v,A,I),L=B-O,P,Y,Q;return Q=B/255,B===0?(P=Number.NaN,Y=0):(Y=L/B,v===B&&(P=(A-I)/L),A===B&&(P=2+(I-v)/L),I===B&&(P=4+(v-A)/L),P*=60,P<0&&(P+=360)),[P,Y,Q]},th=eh,nh=u.unpack,rh=Math.floor,ah=function(){for(var f,h,v,A,I,O,B=[],L=arguments.length;L--;)B[L]=arguments[L];B=nh(B,"hsv");var P=B[0],Y=B[1],Q=B[2],$,de,se;if(Q*=255,Y===0)$=de=se=Q;else{P===360&&(P=0),P>360&&(P-=360),P<0&&(P+=360),P/=60;var _e=rh(P),qe=P-_e,Te=Q*(1-Y),je=Q*(1-Y*qe),Ge=Q*(1-Y*(1-qe));switch(_e){case 0:f=[Q,Ge,Te],$=f[0],de=f[1],se=f[2];break;case 1:h=[je,Q,Te],$=h[0],de=h[1],se=h[2];break;case 2:v=[Te,Q,Ge],$=v[0],de=v[1],se=v[2];break;case 3:A=[Te,je,Q],$=A[0],de=A[1],se=A[2];break;case 4:I=[Ge,Te,Q],$=I[0],de=I[1],se=I[2];break;case 5:O=[Q,Te,je],$=O[0],de=O[1],se=O[2];break}}return[$,de,se,B.length>3?B[3]:1]},ih=ah,oh=u.unpack,sh=u.type;y.prototype.hsv=function(){return th(this._rgb)},C.hsv=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["hsv"])))},c.format.hsv=ih,c.autodetect.push({p:2,test:function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];if(f=oh(f,"hsv"),sh(f)==="array"&&f.length===3)return"hsv"}});var Nt={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},lh=u.unpack,as=Math.pow,uh=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=lh(f,"rgb"),A=v[0],I=v[1],O=v[2],B=ch(A,I,O),L=B[0],P=B[1],Y=B[2],Q=116*P-16;return[Q<0?0:Q,500*(L-P),200*(P-Y)]},yi=function(f){return(f/=255)<=.04045?f/12.92:as((f+.055)/1.055,2.4)},vi=function(f){return f>Nt.t3?as(f,1/3):f/Nt.t2+Nt.t0},ch=function(f,h,v){f=yi(f),h=yi(h),v=yi(v);var A=vi((.4124564*f+.3575761*h+.1804375*v)/Nt.Xn),I=vi((.2126729*f+.7151522*h+.072175*v)/Nt.Yn),O=vi((.0193339*f+.119192*h+.9503041*v)/Nt.Zn);return[A,I,O]},is=uh,dh=u.unpack,fh=Math.pow,hh=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];f=dh(f,"lab");var v=f[0],A=f[1],I=f[2],O,B,L,P,Y,Q;return B=(v+16)/116,O=isNaN(A)?B:B+A/500,L=isNaN(I)?B:B-I/200,B=Nt.Yn*wi(B),O=Nt.Xn*wi(O),L=Nt.Zn*wi(L),P=bi(3.2404542*O-1.5371385*B-.4985314*L),Y=bi(-.969266*O+1.8760108*B+.041556*L),Q=bi(.0556434*O-.2040259*B+1.0572252*L),[P,Y,Q,f.length>3?f[3]:1]},bi=function(f){return 255*(f<=.00304?12.92*f:1.055*fh(f,1/2.4)-.055)},wi=function(f){return f>Nt.t1?f*f*f:Nt.t2*(f-Nt.t0)},os=hh,ph=u.unpack,mh=u.type;y.prototype.lab=function(){return is(this._rgb)},C.lab=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["lab"])))},c.format.lab=os,c.autodetect.push({p:2,test:function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];if(f=ph(f,"lab"),mh(f)==="array"&&f.length===3)return"lab"}});var gh=u.unpack,yh=u.RAD2DEG,vh=Math.sqrt,bh=Math.atan2,wh=Math.round,Dh=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=gh(f,"lab"),A=v[0],I=v[1],O=v[2],B=vh(I*I+O*O),L=(bh(O,I)*yh+360)%360;return wh(B*1e4)===0&&(L=Number.NaN),[A,B,L]},_h=Dh,Eh=u.unpack,Ch=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=Eh(f,"rgb"),A=v[0],I=v[1],O=v[2],B=is(A,I,O),L=B[0],P=B[1],Y=B[2];return _h(L,P,Y)},ss=Ch,Ah=u.unpack,kh=u.DEG2RAD,xh=Math.sin,Fh=Math.cos,Th=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=Ah(f,"lch"),A=v[0],I=v[1],O=v[2];return isNaN(O)&&(O=0),O=O*kh,[A,Fh(O)*I,xh(O)*I]},Sh=Th,Bh=u.unpack,Nh=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];f=Bh(f,"lch");var v=f[0],A=f[1],I=f[2],O=Sh(v,A,I),B=O[0],L=O[1],P=O[2],Y=os(B,L,P),Q=Y[0],$=Y[1],de=Y[2];return[Q,$,de,f.length>3?f[3]:1]},ls=Nh,Mh=u.unpack,Ih=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=Mh(f,"hcl").reverse();return ls.apply(void 0,v)},Oh=Ih,qh=u.unpack,Rh=u.type;y.prototype.lch=function(){return ss(this._rgb)},y.prototype.hcl=function(){return ss(this._rgb).reverse()},C.lch=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["lch"])))},C.hcl=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["hcl"])))},c.format.lch=ls,c.format.hcl=Oh,["lch","hcl"].forEach(function(f){return c.autodetect.push({p:2,test:function(){for(var h=[],v=arguments.length;v--;)h[v]=arguments[v];if(h=qh(h,f),Rh(h)==="array"&&h.length===3)return f}})});var Lh={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflower:"#6495ed",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",laserlemon:"#ffff54",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrod:"#fafad2",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",maroon2:"#7f0000",maroon3:"#b03060",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",purple2:"#7f007f",purple3:"#a020f0",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},Xn=Lh,Ph=u.type;y.prototype.name=function(){for(var f=ts(this._rgb,"rgb"),h=0,v=Object.keys(Xn);h<v.length;h+=1){var A=v[h];if(Xn[A]===f)return A.toLowerCase()}return f},c.format.named=function(f){if(f=f.toLowerCase(),Xn[f])return ns(Xn[f]);throw new Error("unknown color name: "+f)},c.autodetect.push({p:5,test:function(f){for(var h=[],v=arguments.length-1;v-- >0;)h[v]=arguments[v+1];if(!h.length&&Ph(f)==="string"&&Xn[f.toLowerCase()])return"named"}});var jh=u.unpack,Vh=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=jh(f,"rgb"),A=v[0],I=v[1],O=v[2];return(A<<16)+(I<<8)+O},Hh=Vh,Wh=u.type,Gh=function(f){if(Wh(f)=="number"&&f>=0&&f<=16777215){var h=f>>16,v=f>>8&255,A=f&255;return[h,v,A,1]}throw new Error("unknown num color: "+f)},Uh=Gh,zh=u.type;y.prototype.num=function(){return Hh(this._rgb)},C.num=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["num"])))},c.format.num=Uh,c.autodetect.push({p:5,test:function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];if(f.length===1&&zh(f[0])==="number"&&f[0]>=0&&f[0]<=16777215)return"num"}});var us=u.unpack,cs=u.type,ds=Math.round;y.prototype.rgb=function(f){return f===void 0&&(f=!0),f===!1?this._rgb.slice(0,3):this._rgb.slice(0,3).map(ds)},y.prototype.rgba=function(f){return f===void 0&&(f=!0),this._rgb.slice(0,4).map(function(h,v){return v<3?f===!1?h:ds(h):h})},C.rgb=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["rgb"])))},c.format.rgb=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];var v=us(f,"rgba");return v[3]===void 0&&(v[3]=1),v},c.autodetect.push({p:3,test:function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];if(f=us(f,"rgba"),cs(f)==="array"&&(f.length===3||f.length===4&&cs(f[3])=="number"&&f[3]>=0&&f[3]<=1))return"rgb"}});var ua=Math.log,Yh=function(f){var h=f/100,v,A,I;return h<66?(v=255,A=-155.25485562709179-.44596950469579133*(A=h-2)+104.49216199393888*ua(A),I=h<20?0:-254.76935184120902+.8274096064007395*(I=h-10)+115.67994401066147*ua(I)):(v=351.97690566805693+.114206453784165*(v=h-55)-40.25366309332127*ua(v),A=325.4494125711974+.07943456536662342*(A=h-50)-28.0852963507957*ua(A),I=255),[v,A,I,1]},fs=Yh,Zh=u.unpack,$h=Math.round,Kh=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];for(var v=Zh(f,"rgb"),A=v[0],I=v[2],O=1e3,B=4e4,L=.4,P;B-O>L;){P=(B+O)*.5;var Y=fs(P);Y[2]/Y[0]>=I/A?B=P:O=P}return $h(P)},Qh=Kh;y.prototype.temp=y.prototype.kelvin=y.prototype.temperature=function(){return Qh(this._rgb)},C.temp=C.kelvin=C.temperature=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];return new(Function.prototype.bind.apply(y,[null].concat(f,["temp"])))},c.format.temp=c.format.kelvin=c.format.temperature=fs;var Xh=u.type;y.prototype.alpha=function(f,h){return h===void 0&&(h=!1),f!==void 0&&Xh(f)==="number"?h?(this._rgb[3]=f,this):new y([this._rgb[0],this._rgb[1],this._rgb[2],f],"rgb"):this._rgb[3]},y.prototype.clipped=function(){return this._rgb._clipped||!1},y.prototype.darken=function(f){f===void 0&&(f=1);var h=this,v=h.lab();return v[0]-=Nt.Kn*f,new y(v,"lab").alpha(h.alpha(),!0)},y.prototype.brighten=function(f){return f===void 0&&(f=1),this.darken(-f)},y.prototype.darker=y.prototype.darken,y.prototype.brighter=y.prototype.brighten,y.prototype.get=function(f){var h=f.split("."),v=h[0],A=h[1],I=this[v]();if(A){var O=v.indexOf(A);if(O>-1)return I[O];throw new Error("unknown channel "+A+" in mode "+v)}else return I};var Jh=u.type,ep=Math.pow,tp=1e-7,np=20;y.prototype.luminance=function(f){if(f!==void 0&&Jh(f)==="number"){if(f===0)return new y([0,0,0,this._rgb[3]],"rgb");if(f===1)return new y([255,255,255,this._rgb[3]],"rgb");var h=this.luminance(),v="rgb",A=np,I=function(B,L){var P=B.interpolate(L,.5,v),Y=P.luminance();return Math.abs(f-Y)<tp||!A--?P:Y>f?I(B,P):I(P,L)},O=(h>f?I(new y([0,0,0]),this):I(this,new y([255,255,255]))).rgb();return new y(O.concat([this._rgb[3]]))}return rp.apply(void 0,this._rgb.slice(0,3))};var rp=function(f,h,v){return f=Di(f),h=Di(h),v=Di(v),.2126*f+.7152*h+.0722*v},Di=function(f){return f/=255,f<=.03928?f/12.92:ep((f+.055)/1.055,2.4)},Mt={},hs=u.type,ps=function(f,h,v){v===void 0&&(v=.5);for(var A=[],I=arguments.length-3;I-- >0;)A[I]=arguments[I+3];var O=A[0]||"lrgb";if(!Mt[O]&&!A.length&&(O=Object.keys(Mt)[0]),!Mt[O])throw new Error("interpolation mode "+O+" is not defined");return hs(f)!=="object"&&(f=new y(f)),hs(h)!=="object"&&(h=new y(h)),Mt[O](f,h,v).alpha(f.alpha()+v*(h.alpha()-f.alpha()))};y.prototype.mix=y.prototype.interpolate=function(f,h){h===void 0&&(h=.5);for(var v=[],A=arguments.length-2;A-- >0;)v[A]=arguments[A+2];return ps.apply(void 0,[this,f,h].concat(v))},y.prototype.premultiply=function(f){f===void 0&&(f=!1);var h=this._rgb,v=h[3];return f?(this._rgb=[h[0]*v,h[1]*v,h[2]*v,v],this):new y([h[0]*v,h[1]*v,h[2]*v,v],"rgb")},y.prototype.saturate=function(f){f===void 0&&(f=1);var h=this,v=h.lch();return v[1]+=Nt.Kn*f,v[1]<0&&(v[1]=0),new y(v,"lch").alpha(h.alpha(),!0)},y.prototype.desaturate=function(f){return f===void 0&&(f=1),this.saturate(-f)};var ms=u.type;y.prototype.set=function(f,h,v){v===void 0&&(v=!1);var A=f.split("."),I=A[0],O=A[1],B=this[I]();if(O){var L=I.indexOf(O);if(L>-1){if(ms(h)=="string")switch(h.charAt(0)){case"+":B[L]+=+h;break;case"-":B[L]+=+h;break;case"*":B[L]*=+h.substr(1);break;case"/":B[L]/=+h.substr(1);break;default:B[L]=+h}else if(ms(h)==="number")B[L]=h;else throw new Error("unsupported value for Color.set");var P=new y(B,I);return v?(this._rgb=P._rgb,this):P}throw new Error("unknown channel "+O+" in mode "+I)}else return B};var ap=function(f,h,v){var A=f._rgb,I=h._rgb;return new y(A[0]+v*(I[0]-A[0]),A[1]+v*(I[1]-A[1]),A[2]+v*(I[2]-A[2]),"rgb")};Mt.rgb=ap;var _i=Math.sqrt,Jn=Math.pow,ip=function(f,h,v){var A=f._rgb,I=A[0],O=A[1],B=A[2],L=h._rgb,P=L[0],Y=L[1],Q=L[2];return new y(_i(Jn(I,2)*(1-v)+Jn(P,2)*v),_i(Jn(O,2)*(1-v)+Jn(Y,2)*v),_i(Jn(B,2)*(1-v)+Jn(Q,2)*v),"rgb")};Mt.lrgb=ip;var op=function(f,h,v){var A=f.lab(),I=h.lab();return new y(A[0]+v*(I[0]-A[0]),A[1]+v*(I[1]-A[1]),A[2]+v*(I[2]-A[2]),"lab")};Mt.lab=op;var Tr=function(f,h,v,A){var I,O,B,L;A==="hsl"?(B=f.hsl(),L=h.hsl()):A==="hsv"?(B=f.hsv(),L=h.hsv()):A==="hcg"?(B=f.hcg(),L=h.hcg()):A==="hsi"?(B=f.hsi(),L=h.hsi()):(A==="lch"||A==="hcl")&&(A="hcl",B=f.hcl(),L=h.hcl());var P,Y,Q,$,de,se;A.substr(0,1)==="h"&&(I=B,P=I[0],Q=I[1],de=I[2],O=L,Y=O[0],$=O[1],se=O[2]);var _e,qe,Te,je;return!isNaN(P)&&!isNaN(Y)?(Y>P&&Y-P>180?je=Y-(P+360):Y<P&&P-Y>180?je=Y+360-P:je=Y-P,qe=P+v*je):isNaN(P)?isNaN(Y)?qe=Number.NaN:(qe=Y,(de==1||de==0)&&A!="hsv"&&(_e=$)):(qe=P,(se==1||se==0)&&A!="hsv"&&(_e=Q)),_e===void 0&&(_e=Q+v*($-Q)),Te=de+v*(se-de),new y([qe,_e,Te],A)},gs=function(f,h,v){return Tr(f,h,v,"lch")};Mt.lch=gs,Mt.hcl=gs;var sp=function(f,h,v){var A=f.num(),I=h.num();return new y(A+v*(I-A),"num")};Mt.num=sp;var lp=function(f,h,v){return Tr(f,h,v,"hcg")};Mt.hcg=lp;var up=function(f,h,v){return Tr(f,h,v,"hsi")};Mt.hsi=up;var cp=function(f,h,v){return Tr(f,h,v,"hsl")};Mt.hsl=cp;var dp=function(f,h,v){return Tr(f,h,v,"hsv")};Mt.hsv=dp;var fp=u.clip_rgb,Ei=Math.pow,Ci=Math.sqrt,Ai=Math.PI,ys=Math.cos,vs=Math.sin,hp=Math.atan2,pp=function(f,h,v){h===void 0&&(h="lrgb"),v===void 0&&(v=null);var A=f.length;v||(v=Array.from(new Array(A)).map(function(){return 1}));var I=A/v.reduce(function(qe,Te){return qe+Te});if(v.forEach(function(qe,Te){v[Te]*=I}),f=f.map(function(qe){return new y(qe)}),h==="lrgb")return mp(f,v);for(var O=f.shift(),B=O.get(h),L=[],P=0,Y=0,Q=0;Q<B.length;Q++)if(B[Q]=(B[Q]||0)*v[0],L.push(isNaN(B[Q])?0:v[0]),h.charAt(Q)==="h"&&!isNaN(B[Q])){var $=B[Q]/180*Ai;P+=ys($)*v[0],Y+=vs($)*v[0]}var de=O.alpha()*v[0];f.forEach(function(qe,Te){var je=qe.get(h);de+=qe.alpha()*v[Te+1];for(var Ge=0;Ge<B.length;Ge++)if(!isNaN(je[Ge]))if(L[Ge]+=v[Te+1],h.charAt(Ge)==="h"){var bt=je[Ge]/180*Ai;P+=ys(bt)*v[Te+1],Y+=vs(bt)*v[Te+1]}else B[Ge]+=je[Ge]*v[Te+1]});for(var se=0;se<B.length;se++)if(h.charAt(se)==="h"){for(var _e=hp(Y/L[se],P/L[se])/Ai*180;_e<0;)_e+=360;for(;_e>=360;)_e-=360;B[se]=_e}else B[se]=B[se]/L[se];return de/=A,new y(B,h).alpha(de>.99999?1:de,!0)},mp=function(f,h){for(var v=f.length,A=[0,0,0,0],I=0;I<f.length;I++){var O=f[I],B=h[I]/v,L=O._rgb;A[0]+=Ei(L[0],2)*B,A[1]+=Ei(L[1],2)*B,A[2]+=Ei(L[2],2)*B,A[3]+=L[3]*B}return A[0]=Ci(A[0]),A[1]=Ci(A[1]),A[2]=Ci(A[2]),A[3]>.9999999&&(A[3]=1),new y(fp(A))},er=u.type,gp=Math.pow,ca=function(f){var h="rgb",v=C("#ccc"),A=0,I=[0,1],O=[],B=[0,0],L=!1,P=[],Y=!1,Q=0,$=1,de=!1,se={},_e=!0,qe=1,Te=function(X){if(X=X||["#fff","#000"],X&&er(X)==="string"&&C.brewer&&C.brewer[X.toLowerCase()]&&(X=C.brewer[X.toLowerCase()]),er(X)==="array"){X.length===1&&(X=[X[0],X[0]]),X=X.slice(0);for(var De=0;De<X.length;De++)X[De]=C(X[De]);O.length=0;for(var Re=0;Re<X.length;Re++)O.push(Re/(X.length-1))}return jt(),P=X},je=function(X){if(L!=null){for(var De=L.length-1,Re=0;Re<De&&X>=L[Re];)Re++;return Re-1}return 0},Ge=function(X){return X},bt=function(X){return X},wt=function(X,De){var Re,Ie;if(De==null&&(De=!1),isNaN(X)||X===null)return v;if(De)Ie=X;else if(L&&L.length>2){var It=je(X);Ie=It/(L.length-2)}else $!==Q?Ie=(X-Q)/($-Q):Ie=1;Ie=bt(Ie),De||(Ie=Ge(Ie)),qe!==1&&(Ie=gp(Ie,qe)),Ie=B[0]+Ie*(1-B[0]-B[1]),Ie=Math.min(1,Math.max(0,Ie));var $e=Math.floor(Ie*1e4);if(_e&&se[$e])Re=se[$e];else{if(er(P)==="array")for(var He=0;He<O.length;He++){var We=O[He];if(Ie<=We){Re=P[He];break}if(Ie>=We&&He===O.length-1){Re=P[He];break}if(Ie>We&&Ie<O[He+1]){Ie=(Ie-We)/(O[He+1]-We),Re=C.interpolate(P[He],P[He+1],Ie,h);break}}else er(P)==="function"&&(Re=P(Ie));_e&&(se[$e]=Re)}return Re},jt=function(){return se={}};Te(f);var Le=function(X){var De=C(wt(X));return Y&&De[Y]?De[Y]():De};return Le.classes=function(X){if(X!=null){if(er(X)==="array")L=X,I=[X[0],X[X.length-1]];else{var De=C.analyze(I);X===0?L=[De.min,De.max]:L=C.limits(De,"e",X)}return Le}return L},Le.domain=function(X){if(!arguments.length)return I;Q=X[0],$=X[X.length-1],O=[];var De=P.length;if(X.length===De&&Q!==$)for(var Re=0,Ie=Array.from(X);Re<Ie.length;Re+=1){var It=Ie[Re];O.push((It-Q)/($-Q))}else{for(var $e=0;$e<De;$e++)O.push($e/(De-1));if(X.length>2){var He=X.map(function(ot,Ue){return Ue/(X.length-1)}),We=X.map(function(ot){return(ot-Q)/($-Q)});We.every(function(ot,Ue){return He[Ue]===ot})||(bt=function(ot){if(ot<=0||ot>=1)return ot;for(var Ue=0;ot>=We[Ue+1];)Ue++;var bn=(ot-We[Ue])/(We[Ue+1]-We[Ue]),tr=He[Ue]+bn*(He[Ue+1]-He[Ue]);return tr})}}return I=[Q,$],Le},Le.mode=function(X){return arguments.length?(h=X,jt(),Le):h},Le.range=function(X,De){return Te(X,De),Le},Le.out=function(X){return Y=X,Le},Le.spread=function(X){return arguments.length?(A=X,Le):A},Le.correctLightness=function(X){return X==null&&(X=!0),de=X,jt(),de?Ge=function(De){for(var Re=wt(0,!0).lab()[0],Ie=wt(1,!0).lab()[0],It=Re>Ie,$e=wt(De,!0).lab()[0],He=Re+(Ie-Re)*De,We=$e-He,ot=0,Ue=1,bn=20;Math.abs(We)>.01&&bn-- >0;)(function(){return It&&(We*=-1),We<0?(ot=De,De+=(Ue-De)*.5):(Ue=De,De+=(ot-De)*.5),$e=wt(De,!0).lab()[0],We=$e-He})();return De}:Ge=function(De){return De},Le},Le.padding=function(X){return X!=null?(er(X)==="number"&&(X=[X,X]),B=X,Le):B},Le.colors=function(X,De){arguments.length<2&&(De="hex");var Re=[];if(arguments.length===0)Re=P.slice(0);else if(X===1)Re=[Le(.5)];else if(X>1){var Ie=I[0],It=I[1]-Ie;Re=yp(0,X,!1).map(function(Ue){return Le(Ie+Ue/(X-1)*It)})}else{f=[];var $e=[];if(L&&L.length>2)for(var He=1,We=L.length,ot=1<=We;ot?He<We:He>We;ot?He++:He--)$e.push((L[He-1]+L[He])*.5);else $e=I;Re=$e.map(function(Ue){return Le(Ue)})}return C[De]&&(Re=Re.map(function(Ue){return Ue[De]()})),Re},Le.cache=function(X){return X!=null?(_e=X,Le):_e},Le.gamma=function(X){return X!=null?(qe=X,Le):qe},Le.nodata=function(X){return X!=null?(v=C(X),Le):v},Le};function yp(f,h,v){for(var A=[],I=f<h,O=v?I?h+1:h-1:h,B=f;I?B<O:B>O;I?B++:B--)A.push(B);return A}var ki=function(f){var h,v,A,I,O,B,L;if(f=f.map(function($){return new y($)}),f.length===2)h=f.map(function($){return $.lab()}),O=h[0],B=h[1],I=function($){var de=[0,1,2].map(function(se){return O[se]+$*(B[se]-O[se])});return new y(de,"lab")};else if(f.length===3)v=f.map(function($){return $.lab()}),O=v[0],B=v[1],L=v[2],I=function($){var de=[0,1,2].map(function(se){return(1-$)*(1-$)*O[se]+2*(1-$)*$*B[se]+$*$*L[se]});return new y(de,"lab")};else if(f.length===4){var P;A=f.map(function($){return $.lab()}),O=A[0],B=A[1],L=A[2],P=A[3],I=function($){var de=[0,1,2].map(function(se){return(1-$)*(1-$)*(1-$)*O[se]+3*(1-$)*(1-$)*$*B[se]+3*(1-$)*$*$*L[se]+$*$*$*P[se]});return new y(de,"lab")}}else if(f.length===5){var Y=ki(f.slice(0,3)),Q=ki(f.slice(2,5));I=function($){return $<.5?Y($*2):Q(($-.5)*2)}}return I},vp=function(f){var h=ki(f);return h.scale=function(){return ca(h)},h},Xt=function(f,h,v){if(!Xt[v])throw new Error("unknown blend mode "+v);return Xt[v](f,h)},yn=function(f){return function(h,v){var A=C(v).rgb(),I=C(h).rgb();return C.rgb(f(A,I))}},vn=function(f){return function(h,v){var A=[];return A[0]=f(h[0],v[0]),A[1]=f(h[1],v[1]),A[2]=f(h[2],v[2]),A}},bp=function(f){return f},wp=function(f,h){return f*h/255},Dp=function(f,h){return f>h?h:f},_p=function(f,h){return f>h?f:h},Ep=function(f,h){return 255*(1-(1-f/255)*(1-h/255))},Cp=function(f,h){return h<128?2*f*h/255:255*(1-2*(1-f/255)*(1-h/255))},Ap=function(f,h){return 255*(1-(1-h/255)/(f/255))},kp=function(f,h){return f===255?255:(f=255*(h/255)/(1-f/255),f>255?255:f)};Xt.normal=yn(vn(bp)),Xt.multiply=yn(vn(wp)),Xt.screen=yn(vn(Ep)),Xt.overlay=yn(vn(Cp)),Xt.darken=yn(vn(Dp)),Xt.lighten=yn(vn(_p)),Xt.dodge=yn(vn(kp)),Xt.burn=yn(vn(Ap));for(var xp=Xt,xi=u.type,Fp=u.clip_rgb,Tp=u.TWOPI,Sp=Math.pow,Bp=Math.sin,Np=Math.cos,Mp=function(f,h,v,A,I){f===void 0&&(f=300),h===void 0&&(h=-1.5),v===void 0&&(v=1),A===void 0&&(A=1),I===void 0&&(I=[0,1]);var O=0,B;xi(I)==="array"?B=I[1]-I[0]:(B=0,I=[I,I]);var L=function(P){var Y=Tp*((f+120)/360+h*P),Q=Sp(I[0]+B*P,A),$=O!==0?v[0]+P*O:v,de=$*Q*(1-Q)/2,se=Np(Y),_e=Bp(Y),qe=Q+de*(-.14861*se+1.78277*_e),Te=Q+de*(-.29227*se-.90649*_e),je=Q+de*(1.97294*se);return C(Fp([qe*255,Te*255,je*255,1]))};return L.start=function(P){return P==null?f:(f=P,L)},L.rotations=function(P){return P==null?h:(h=P,L)},L.gamma=function(P){return P==null?A:(A=P,L)},L.hue=function(P){return P==null?v:(v=P,xi(v)==="array"?(O=v[1]-v[0],O===0&&(v=v[1])):O=0,L)},L.lightness=function(P){return P==null?I:(xi(P)==="array"?(I=P,B=P[1]-P[0]):(I=[P,P],B=0),L)},L.scale=function(){return C.scale(L)},L.hue(v),L},Ip="0123456789abcdef",Op=Math.floor,qp=Math.random,Rp=function(){for(var f="#",h=0;h<6;h++)f+=Ip.charAt(Op(qp()*16));return new y(f,"hex")},bs=Math.log,Lp=Math.pow,Pp=Math.floor,jp=Math.abs,ws=function(f,h){h===void 0&&(h=null);var v={min:Number.MAX_VALUE,max:Number.MAX_VALUE*-1,sum:0,values:[],count:0};return o(f)==="object"&&(f=Object.values(f)),f.forEach(function(A){h&&o(A)==="object"&&(A=A[h]),A!=null&&!isNaN(A)&&(v.values.push(A),v.sum+=A,A<v.min&&(v.min=A),A>v.max&&(v.max=A),v.count+=1)}),v.domain=[v.min,v.max],v.limits=function(A,I){return Ds(v,A,I)},v},Ds=function(f,h,v){h===void 0&&(h="equal"),v===void 0&&(v=7),o(f)=="array"&&(f=ws(f));var A=f.min,I=f.max,O=f.values.sort(function(Mi,Ii){return Mi-Ii});if(v===1)return[A,I];var B=[];if(h.substr(0,1)==="c"&&(B.push(A),B.push(I)),h.substr(0,1)==="e"){B.push(A);for(var L=1;L<v;L++)B.push(A+L/v*(I-A));B.push(I)}else if(h.substr(0,1)==="l"){if(A<=0)throw new Error("Logarithmic scales are only possible for values > 0");var P=Math.LOG10E*bs(A),Y=Math.LOG10E*bs(I);B.push(A);for(var Q=1;Q<v;Q++)B.push(Lp(10,P+Q/v*(Y-P)));B.push(I)}else if(h.substr(0,1)==="q"){B.push(A);for(var $=1;$<v;$++){var de=(O.length-1)*$/v,se=Pp(de);if(se===de)B.push(O[se]);else{var _e=de-se;B.push(O[se]*(1-_e)+O[se+1]*_e)}}B.push(I)}else if(h.substr(0,1)==="k"){var qe,Te=O.length,je=new Array(Te),Ge=new Array(v),bt=!0,wt=0,jt=null;jt=[],jt.push(A);for(var Le=1;Le<v;Le++)jt.push(A+Le/v*(I-A));for(jt.push(I);bt;){for(var X=0;X<v;X++)Ge[X]=0;for(var De=0;De<Te;De++)for(var Re=O[De],Ie=Number.MAX_VALUE,It=void 0,$e=0;$e<v;$e++){var He=jp(jt[$e]-Re);He<Ie&&(Ie=He,It=$e),Ge[It]++,je[De]=It}for(var We=new Array(v),ot=0;ot<v;ot++)We[ot]=null;for(var Ue=0;Ue<Te;Ue++)qe=je[Ue],We[qe]===null?We[qe]=O[Ue]:We[qe]+=O[Ue];for(var bn=0;bn<v;bn++)We[bn]*=1/Ge[bn];bt=!1;for(var tr=0;tr<v;tr++)if(We[tr]!==jt[tr]){bt=!0;break}jt=We,wt++,wt>200&&(bt=!1)}for(var Sr={},Si=0;Si<v;Si++)Sr[Si]=[];for(var ha=0;ha<Te;ha++)qe=je[ha],Sr[qe].push(O[ha]);for(var Sn=[],Br=0;Br<v;Br++)Sn.push(Sr[Br][0]),Sn.push(Sr[Br][Sr[Br].length-1]);Sn=Sn.sort(function(Mi,Ii){return Mi-Ii}),B.push(Sn[0]);for(var Bi=1;Bi<Sn.length;Bi+=2){var Ni=Sn[Bi];!isNaN(Ni)&&B.indexOf(Ni)===-1&&B.push(Ni)}}return B},_s={analyze:ws,limits:Ds},Vp=function(f,h){f=new y(f),h=new y(h);var v=f.luminance(),A=h.luminance();return v>A?(v+.05)/(A+.05):(A+.05)/(v+.05)},da=Math.sqrt,Hp=Math.atan2,Es=Math.abs,Cs=Math.cos,Fi=Math.PI,Wp=function(f,h,v,A){v===void 0&&(v=1),A===void 0&&(A=1),f=new y(f),h=new y(h);for(var I=Array.from(f.lab()),O=I[0],B=I[1],L=I[2],P=Array.from(h.lab()),Y=P[0],Q=P[1],$=P[2],de=da(B*B+L*L),se=da(Q*Q+$*$),_e=O<16?.511:.040975*O/(1+.01765*O),qe=.0638*de/(1+.0131*de)+.638,Te=de<1e-6?0:Hp(L,B)*180/Fi;Te<0;)Te+=360;for(;Te>=360;)Te-=360;var je=Te>=164&&Te<=345?.56+Es(.2*Cs(Fi*(Te+168)/180)):.36+Es(.4*Cs(Fi*(Te+35)/180)),Ge=de*de*de*de,bt=da(Ge/(Ge+1900)),wt=qe*(bt*je+1-bt),jt=O-Y,Le=de-se,X=B-Q,De=L-$,Re=X*X+De*De-Le*Le,Ie=jt/(v*_e),It=Le/(A*qe),$e=wt;return da(Ie*Ie+It*It+Re/($e*$e))},Gp=function(f,h,v){v===void 0&&(v="lab"),f=new y(f),h=new y(h);var A=f.get(v),I=h.get(v),O=0;for(var B in A){var L=(A[B]||0)-(I[B]||0);O+=L*L}return Math.sqrt(O)},Up=function(){for(var f=[],h=arguments.length;h--;)f[h]=arguments[h];try{return new(Function.prototype.bind.apply(y,[null].concat(f))),!0}catch{return!1}},zp={cool:function(){return ca([C.hsl(180,1,.9),C.hsl(250,.7,.4)])},hot:function(){return ca(["#000","#f00","#ff0","#fff"],[0,.25,.75,1]).mode("rgb")}},fa={OrRd:["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#b30000","#7f0000"],PuBu:["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#045a8d","#023858"],BuPu:["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#810f7c","#4d004b"],Oranges:["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#a63603","#7f2704"],BuGn:["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"],YlOrBr:["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#993404","#662506"],YlGn:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],Reds:["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#a50f15","#67000d"],RdPu:["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177","#49006a"],Greens:["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],YlGnBu:["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"],Purples:["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#54278f","#3f007d"],GnBu:["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#0868ac","#084081"],Greys:["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525","#000000"],YlOrRd:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"],PuRd:["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#980043","#67001f"],Blues:["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"],PuBuGn:["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016c59","#014636"],Viridis:["#440154","#482777","#3f4a8a","#31678e","#26838f","#1f9d8a","#6cce5a","#b6de2b","#fee825"],Spectral:["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"],RdYlGn:["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"],RdBu:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"],PiYG:["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"],PRGn:["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"],RdYlBu:["#a50026","#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"],BrBG:["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"],RdGy:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"],PuOr:["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"],Set2:["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],Accent:["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17","#666666"],Set1:["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"],Set3:["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"],Dark2:["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],Paired:["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"],Pastel2:["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc","#cccccc"],Pastel1:["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec","#f2f2f2"]},Ti=0,As=Object.keys(fa);Ti<As.length;Ti+=1){var ks=As[Ti];fa[ks.toLowerCase()]=fa[ks]}var Yp=fa;C.average=pp,C.bezier=vp,C.blend=xp,C.cubehelix=Mp,C.mix=C.interpolate=ps,C.random=Rp,C.scale=ca,C.analyze=_s.analyze,C.contrast=Vp,C.deltaE=Wp,C.distance=Gp,C.limits=_s.limits,C.valid=Up,C.scales=zp,C.colors=Xn,C.brewer=Yp;var Zp=C;return Zp})});var _l=ze(Ea=>{"use strict";Object.defineProperty(Ea,"__esModule",{value:!0});Ea.default=void 0;var Ui=_a(Fs()),zi=_a(Hs()),ug=_a(yl()),Da=_a(vl());function _a(t){return t&&t.__esModule?t:{default:t}}function cg(t){if(typeof Symbol=="undefined"||t[Symbol.iterator]==null){if(Array.isArray(t)||(t=dg(t))){var e=0,n=function(){};return{s:n,n:function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}},e:function(s){throw s},f:n}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var r,a=!0,i=!1,o;return{s:function(){r=t[Symbol.iterator]()},n:function(){var s=r.next();return a=s.done,s},e:function(s){i=!0,o=s},f:function(){try{!a&&r.return!=null&&r.return()}finally{if(i)throw o}}}}function dg(t,e){if(!!t){if(typeof t=="string")return bl(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return bl(t,e)}}function bl(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function wl(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable})),n.push.apply(n,r)}return n}function fg(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?wl(Object(n),!0).forEach(function(r){hg(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):wl(Object(n)).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function hg(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var pg={count:5,hueMin:0,hueMax:360,chromaMin:0,chromaMax:100,lightMin:0,lightMax:100,quality:50,samples:800},Dl=function(e,n){for(var r=Number.MAX_SAFE_INTEGER,a=0,i=0;i<e.length;i+=1){var o=e[i],l=Math.sqrt(Math.pow(Math.abs(o[0]-n[0]),2)+Math.pow(Math.abs(o[1]-n[1]),2)+Math.pow(Math.abs(o[2]-n[2]),2));l<r&&(r=l,a=i)}return a},mg=function(e,n){var r=Da.default.lab(e),a=r.hcl(),i=r.rgb(),o=Da.default.rgb(i).lab(),l=2;return a[0]>=n.hueMin&&a[0]<=n.hueMax&&a[1]>=n.chromaMin&&a[1]<=n.chromaMax&&a[2]>=n.lightMin&&a[2]<=n.lightMax&&o[0]>=e[0]-l&&o[0]<=e[0]+l&&o[1]>=e[1]-l&&o[1]<=e[1]+l&&o[2]>=e[2]-l&&o[2]<=e[2]+l},gg=function(e){for(var n=e.slice(0),r=[n.shift()];n.length>0;){for(var a=r[r.length-1],i=0,o=Number.MIN_SAFE_INTEGER,l=0;l<n.length;l+=1){var s=Math.sqrt(Math.pow(Math.abs(a[0]-n[l][0]),2)+Math.pow(Math.abs(a[1]-n[l][1]),2)+Math.pow(Math.abs(a[2]-n[l][2]),2));s>o&&(o=s,i=l)}r.push(n.splice(i,1)[0])}return r},yg=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},n=fg({},pg,{},e);if(n.count<=0)return[];n.samples<n.count*3&&(n.samples=Math.ceil(n.count*3));var r=[],a=[],i=new Set,o=Math.ceil(Math.cbrt(n.samples)),l=(n.hueMax-n.hueMin)/o,s=(n.chromaMax-n.chromaMin)/o,d=(n.lightMax-n.lightMin)/o;if(l<=0)throw new Error("hueMax must be greater than hueMin!");if(s<=0)throw new Error("chromaMax must be greater than chromaMin!");if(d<=0)throw new Error("lightMax must be greater than lightMin!");for(var u=n.hueMin+l/2;u<=n.hueMax;u+=l)for(var c=n.chromaMin+s/2;c<=n.chromaMax;c+=s)for(var m=n.lightMin+d/2;m<=n.lightMax;m+=d){var g=Da.default.hcl(u,c,m).lab();mg(g,n)&&i.add(g.toString())}if(i=Array.from(i),i=i.map(function(Ce){return Ce.split(",").map(function(ve){return parseFloat(ve)})}),i.length<n.count)throw new Error("Not enough samples to generate palette, increase sample count.");for(var p=Math.floor(i.length/n.count),E=0;E<i.length&&(r.push(i[E]),a.push([]),!(r.length>=n.count));E+=p);for(var y=1;y<=n.quality;y+=1){for(var S=(0,zi.default)(a),C=(0,zi.default)(i),F=0;F<r.length;F+=1){var M=Dl(C,r[F]);S[F].push(C[M]),C.splice(M,1)}for(var T=0;T<C.length;T+=1){var x=i[T],_=Dl(r,x);S[_].push(i[T])}for(var k=(0,zi.default)(r),D=0;D<S.length;D+=1){var R=S[D],q=R.length,H=[],ne=[],ye=[],ae=cg(R),me;try{for(ae.s();!(me=ae.n()).done;){var Z=me.value;H.push(Z[0]),ne.push(Z[1]),ye.push(Z[2])}}catch(Ce){ae.e(Ce)}finally{ae.f()}var z=Ui.default.sum(H)/q,ue=Ui.default.sum(ne)/q,ke=Ui.default.sum(ye)/q;r[D]=[z,ue,ke]}if((0,ug.default)(k,r))break}return r=gg(r),r.map(function(Ce){return Da.default.lab(Ce)})},vg=yg;Ea.default=vg});var El=ze((Aa,Ir)=>{(function(t){var e=typeof Aa=="object"&&Aa,n=typeof Ir=="object"&&Ir&&Ir.exports==e&&Ir,r=typeof global=="object"&&global;(r.global===r||r.window===r)&&(t=r);var a=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,i=/[\x01-\x7F]/g,o=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,l=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,s={"\xAD":"shy","\u200C":"zwnj","\u200D":"zwj","\u200E":"lrm","\u2063":"ic","\u2062":"it","\u2061":"af","\u200F":"rlm","\u200B":"ZeroWidthSpace","\u2060":"NoBreak","\u0311":"DownBreve","\u20DB":"tdot","\u20DC":"DotDot","	":"Tab","\n":"NewLine","\u2008":"puncsp","\u205F":"MediumSpace","\u2009":"thinsp","\u200A":"hairsp","\u2004":"emsp13","\u2002":"ensp","\u2005":"emsp14","\u2003":"emsp","\u2007":"numsp","\xA0":"nbsp","\u205F\u200A":"ThickSpace","\u203E":"oline",_:"lowbar","\u2010":"dash","\u2013":"ndash","\u2014":"mdash","\u2015":"horbar",",":"comma",";":"semi","\u204F":"bsemi",":":"colon","\u2A74":"Colone","!":"excl","\xA1":"iexcl","?":"quest","\xBF":"iquest",".":"period","\u2025":"nldr","\u2026":"mldr","\xB7":"middot","'":"apos","\u2018":"lsquo","\u2019":"rsquo","\u201A":"sbquo","\u2039":"lsaquo","\u203A":"rsaquo",'"':"quot","\u201C":"ldquo","\u201D":"rdquo","\u201E":"bdquo","\xAB":"laquo","\xBB":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","\u2308":"lceil","\u2309":"rceil","\u230A":"lfloor","\u230B":"rfloor","\u2985":"lopar","\u2986":"ropar","\u298B":"lbrke","\u298C":"rbrke","\u298D":"lbrkslu","\u298E":"rbrksld","\u298F":"lbrksld","\u2990":"rbrkslu","\u2991":"langd","\u2992":"rangd","\u2993":"lparlt","\u2994":"rpargt","\u2995":"gtlPar","\u2996":"ltrPar","\u27E6":"lobrk","\u27E7":"robrk","\u27E8":"lang","\u27E9":"rang","\u27EA":"Lang","\u27EB":"Rang","\u27EC":"loang","\u27ED":"roang","\u2772":"lbbrk","\u2773":"rbbrk","\u2016":"Vert","\xA7":"sect","\xB6":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","\u2030":"permil","\u2031":"pertenk","\u2020":"dagger","\u2021":"Dagger","\u2022":"bull","\u2043":"hybull","\u2032":"prime","\u2033":"Prime","\u2034":"tprime","\u2057":"qprime","\u2035":"bprime","\u2041":"caret","`":"grave","\xB4":"acute","\u02DC":"tilde","^":"Hat","\xAF":"macr","\u02D8":"breve","\u02D9":"dot","\xA8":"die","\u02DA":"ring","\u02DD":"dblac","\xB8":"cedil","\u02DB":"ogon","\u02C6":"circ","\u02C7":"caron","\xB0":"deg","\xA9":"copy","\xAE":"reg","\u2117":"copysr","\u2118":"wp","\u211E":"rx","\u2127":"mho","\u2129":"iiota","\u2190":"larr","\u219A":"nlarr","\u2192":"rarr","\u219B":"nrarr","\u2191":"uarr","\u2193":"darr","\u2194":"harr","\u21AE":"nharr","\u2195":"varr","\u2196":"nwarr","\u2197":"nearr","\u2198":"searr","\u2199":"swarr","\u219D":"rarrw","\u219D\u0338":"nrarrw","\u219E":"Larr","\u219F":"Uarr","\u21A0":"Rarr","\u21A1":"Darr","\u21A2":"larrtl","\u21A3":"rarrtl","\u21A4":"mapstoleft","\u21A5":"mapstoup","\u21A6":"map","\u21A7":"mapstodown","\u21A9":"larrhk","\u21AA":"rarrhk","\u21AB":"larrlp","\u21AC":"rarrlp","\u21AD":"harrw","\u21B0":"lsh","\u21B1":"rsh","\u21B2":"ldsh","\u21B3":"rdsh","\u21B5":"crarr","\u21B6":"cularr","\u21B7":"curarr","\u21BA":"olarr","\u21BB":"orarr","\u21BC":"lharu","\u21BD":"lhard","\u21BE":"uharr","\u21BF":"uharl","\u21C0":"rharu","\u21C1":"rhard","\u21C2":"dharr","\u21C3":"dharl","\u21C4":"rlarr","\u21C5":"udarr","\u21C6":"lrarr","\u21C7":"llarr","\u21C8":"uuarr","\u21C9":"rrarr","\u21CA":"ddarr","\u21CB":"lrhar","\u21CC":"rlhar","\u21D0":"lArr","\u21CD":"nlArr","\u21D1":"uArr","\u21D2":"rArr","\u21CF":"nrArr","\u21D3":"dArr","\u21D4":"iff","\u21CE":"nhArr","\u21D5":"vArr","\u21D6":"nwArr","\u21D7":"neArr","\u21D8":"seArr","\u21D9":"swArr","\u21DA":"lAarr","\u21DB":"rAarr","\u21DD":"zigrarr","\u21E4":"larrb","\u21E5":"rarrb","\u21F5":"duarr","\u21FD":"loarr","\u21FE":"roarr","\u21FF":"hoarr","\u2200":"forall","\u2201":"comp","\u2202":"part","\u2202\u0338":"npart","\u2203":"exist","\u2204":"nexist","\u2205":"empty","\u2207":"Del","\u2208":"in","\u2209":"notin","\u220B":"ni","\u220C":"notni","\u03F6":"bepsi","\u220F":"prod","\u2210":"coprod","\u2211":"sum","+":"plus","\xB1":"pm","\xF7":"div","\xD7":"times","<":"lt","\u226E":"nlt","<\u20D2":"nvlt","=":"equals","\u2260":"ne","=\u20E5":"bne","\u2A75":"Equal",">":"gt","\u226F":"ngt",">\u20D2":"nvgt","\xAC":"not","|":"vert","\xA6":"brvbar","\u2212":"minus","\u2213":"mp","\u2214":"plusdo","\u2044":"frasl","\u2216":"setmn","\u2217":"lowast","\u2218":"compfn","\u221A":"Sqrt","\u221D":"prop","\u221E":"infin","\u221F":"angrt","\u2220":"ang","\u2220\u20D2":"nang","\u2221":"angmsd","\u2222":"angsph","\u2223":"mid","\u2224":"nmid","\u2225":"par","\u2226":"npar","\u2227":"and","\u2228":"or","\u2229":"cap","\u2229\uFE00":"caps","\u222A":"cup","\u222A\uFE00":"cups","\u222B":"int","\u222C":"Int","\u222D":"tint","\u2A0C":"qint","\u222E":"oint","\u222F":"Conint","\u2230":"Cconint","\u2231":"cwint","\u2232":"cwconint","\u2233":"awconint","\u2234":"there4","\u2235":"becaus","\u2236":"ratio","\u2237":"Colon","\u2238":"minusd","\u223A":"mDDot","\u223B":"homtht","\u223C":"sim","\u2241":"nsim","\u223C\u20D2":"nvsim","\u223D":"bsim","\u223D\u0331":"race","\u223E":"ac","\u223E\u0333":"acE","\u223F":"acd","\u2240":"wr","\u2242":"esim","\u2242\u0338":"nesim","\u2243":"sime","\u2244":"nsime","\u2245":"cong","\u2247":"ncong","\u2246":"simne","\u2248":"ap","\u2249":"nap","\u224A":"ape","\u224B":"apid","\u224B\u0338":"napid","\u224C":"bcong","\u224D":"CupCap","\u226D":"NotCupCap","\u224D\u20D2":"nvap","\u224E":"bump","\u224E\u0338":"nbump","\u224F":"bumpe","\u224F\u0338":"nbumpe","\u2250":"doteq","\u2250\u0338":"nedot","\u2251":"eDot","\u2252":"efDot","\u2253":"erDot","\u2254":"colone","\u2255":"ecolon","\u2256":"ecir","\u2257":"cire","\u2259":"wedgeq","\u225A":"veeeq","\u225C":"trie","\u225F":"equest","\u2261":"equiv","\u2262":"nequiv","\u2261\u20E5":"bnequiv","\u2264":"le","\u2270":"nle","\u2264\u20D2":"nvle","\u2265":"ge","\u2271":"nge","\u2265\u20D2":"nvge","\u2266":"lE","\u2266\u0338":"nlE","\u2267":"gE","\u2267\u0338":"ngE","\u2268\uFE00":"lvnE","\u2268":"lnE","\u2269":"gnE","\u2269\uFE00":"gvnE","\u226A":"ll","\u226A\u0338":"nLtv","\u226A\u20D2":"nLt","\u226B":"gg","\u226B\u0338":"nGtv","\u226B\u20D2":"nGt","\u226C":"twixt","\u2272":"lsim","\u2274":"nlsim","\u2273":"gsim","\u2275":"ngsim","\u2276":"lg","\u2278":"ntlg","\u2277":"gl","\u2279":"ntgl","\u227A":"pr","\u2280":"npr","\u227B":"sc","\u2281":"nsc","\u227C":"prcue","\u22E0":"nprcue","\u227D":"sccue","\u22E1":"nsccue","\u227E":"prsim","\u227F":"scsim","\u227F\u0338":"NotSucceedsTilde","\u2282":"sub","\u2284":"nsub","\u2282\u20D2":"vnsub","\u2283":"sup","\u2285":"nsup","\u2283\u20D2":"vnsup","\u2286":"sube","\u2288":"nsube","\u2287":"supe","\u2289":"nsupe","\u228A\uFE00":"vsubne","\u228A":"subne","\u228B\uFE00":"vsupne","\u228B":"supne","\u228D":"cupdot","\u228E":"uplus","\u228F":"sqsub","\u228F\u0338":"NotSquareSubset","\u2290":"sqsup","\u2290\u0338":"NotSquareSuperset","\u2291":"sqsube","\u22E2":"nsqsube","\u2292":"sqsupe","\u22E3":"nsqsupe","\u2293":"sqcap","\u2293\uFE00":"sqcaps","\u2294":"sqcup","\u2294\uFE00":"sqcups","\u2295":"oplus","\u2296":"ominus","\u2297":"otimes","\u2298":"osol","\u2299":"odot","\u229A":"ocir","\u229B":"oast","\u229D":"odash","\u229E":"plusb","\u229F":"minusb","\u22A0":"timesb","\u22A1":"sdotb","\u22A2":"vdash","\u22AC":"nvdash","\u22A3":"dashv","\u22A4":"top","\u22A5":"bot","\u22A7":"models","\u22A8":"vDash","\u22AD":"nvDash","\u22A9":"Vdash","\u22AE":"nVdash","\u22AA":"Vvdash","\u22AB":"VDash","\u22AF":"nVDash","\u22B0":"prurel","\u22B2":"vltri","\u22EA":"nltri","\u22B3":"vrtri","\u22EB":"nrtri","\u22B4":"ltrie","\u22EC":"nltrie","\u22B4\u20D2":"nvltrie","\u22B5":"rtrie","\u22ED":"nrtrie","\u22B5\u20D2":"nvrtrie","\u22B6":"origof","\u22B7":"imof","\u22B8":"mumap","\u22B9":"hercon","\u22BA":"intcal","\u22BB":"veebar","\u22BD":"barvee","\u22BE":"angrtvb","\u22BF":"lrtri","\u22C0":"Wedge","\u22C1":"Vee","\u22C2":"xcap","\u22C3":"xcup","\u22C4":"diam","\u22C5":"sdot","\u22C6":"Star","\u22C7":"divonx","\u22C8":"bowtie","\u22C9":"ltimes","\u22CA":"rtimes","\u22CB":"lthree","\u22CC":"rthree","\u22CD":"bsime","\u22CE":"cuvee","\u22CF":"cuwed","\u22D0":"Sub","\u22D1":"Sup","\u22D2":"Cap","\u22D3":"Cup","\u22D4":"fork","\u22D5":"epar","\u22D6":"ltdot","\u22D7":"gtdot","\u22D8":"Ll","\u22D8\u0338":"nLl","\u22D9":"Gg","\u22D9\u0338":"nGg","\u22DA\uFE00":"lesg","\u22DA":"leg","\u22DB":"gel","\u22DB\uFE00":"gesl","\u22DE":"cuepr","\u22DF":"cuesc","\u22E6":"lnsim","\u22E7":"gnsim","\u22E8":"prnsim","\u22E9":"scnsim","\u22EE":"vellip","\u22EF":"ctdot","\u22F0":"utdot","\u22F1":"dtdot","\u22F2":"disin","\u22F3":"isinsv","\u22F4":"isins","\u22F5":"isindot","\u22F5\u0338":"notindot","\u22F6":"notinvc","\u22F7":"notinvb","\u22F9":"isinE","\u22F9\u0338":"notinE","\u22FA":"nisd","\u22FB":"xnis","\u22FC":"nis","\u22FD":"notnivc","\u22FE":"notnivb","\u2305":"barwed","\u2306":"Barwed","\u230C":"drcrop","\u230D":"dlcrop","\u230E":"urcrop","\u230F":"ulcrop","\u2310":"bnot","\u2312":"profline","\u2313":"profsurf","\u2315":"telrec","\u2316":"target","\u231C":"ulcorn","\u231D":"urcorn","\u231E":"dlcorn","\u231F":"drcorn","\u2322":"frown","\u2323":"smile","\u232D":"cylcty","\u232E":"profalar","\u2336":"topbot","\u233D":"ovbar","\u233F":"solbar","\u237C":"angzarr","\u23B0":"lmoust","\u23B1":"rmoust","\u23B4":"tbrk","\u23B5":"bbrk","\u23B6":"bbrktbrk","\u23DC":"OverParenthesis","\u23DD":"UnderParenthesis","\u23DE":"OverBrace","\u23DF":"UnderBrace","\u23E2":"trpezium","\u23E7":"elinters","\u2423":"blank","\u2500":"boxh","\u2502":"boxv","\u250C":"boxdr","\u2510":"boxdl","\u2514":"boxur","\u2518":"boxul","\u251C":"boxvr","\u2524":"boxvl","\u252C":"boxhd","\u2534":"boxhu","\u253C":"boxvh","\u2550":"boxH","\u2551":"boxV","\u2552":"boxdR","\u2553":"boxDr","\u2554":"boxDR","\u2555":"boxdL","\u2556":"boxDl","\u2557":"boxDL","\u2558":"boxuR","\u2559":"boxUr","\u255A":"boxUR","\u255B":"boxuL","\u255C":"boxUl","\u255D":"boxUL","\u255E":"boxvR","\u255F":"boxVr","\u2560":"boxVR","\u2561":"boxvL","\u2562":"boxVl","\u2563":"boxVL","\u2564":"boxHd","\u2565":"boxhD","\u2566":"boxHD","\u2567":"boxHu","\u2568":"boxhU","\u2569":"boxHU","\u256A":"boxvH","\u256B":"boxVh","\u256C":"boxVH","\u2580":"uhblk","\u2584":"lhblk","\u2588":"block","\u2591":"blk14","\u2592":"blk12","\u2593":"blk34","\u25A1":"squ","\u25AA":"squf","\u25AB":"EmptyVerySmallSquare","\u25AD":"rect","\u25AE":"marker","\u25B1":"fltns","\u25B3":"xutri","\u25B4":"utrif","\u25B5":"utri","\u25B8":"rtrif","\u25B9":"rtri","\u25BD":"xdtri","\u25BE":"dtrif","\u25BF":"dtri","\u25C2":"ltrif","\u25C3":"ltri","\u25CA":"loz","\u25CB":"cir","\u25EC":"tridot","\u25EF":"xcirc","\u25F8":"ultri","\u25F9":"urtri","\u25FA":"lltri","\u25FB":"EmptySmallSquare","\u25FC":"FilledSmallSquare","\u2605":"starf","\u2606":"star","\u260E":"phone","\u2640":"female","\u2642":"male","\u2660":"spades","\u2663":"clubs","\u2665":"hearts","\u2666":"diams","\u266A":"sung","\u2713":"check","\u2717":"cross","\u2720":"malt","\u2736":"sext","\u2758":"VerticalSeparator","\u27C8":"bsolhsub","\u27C9":"suphsol","\u27F5":"xlarr","\u27F6":"xrarr","\u27F7":"xharr","\u27F8":"xlArr","\u27F9":"xrArr","\u27FA":"xhArr","\u27FC":"xmap","\u27FF":"dzigrarr","\u2902":"nvlArr","\u2903":"nvrArr","\u2904":"nvHarr","\u2905":"Map","\u290C":"lbarr","\u290D":"rbarr","\u290E":"lBarr","\u290F":"rBarr","\u2910":"RBarr","\u2911":"DDotrahd","\u2912":"UpArrowBar","\u2913":"DownArrowBar","\u2916":"Rarrtl","\u2919":"latail","\u291A":"ratail","\u291B":"lAtail","\u291C":"rAtail","\u291D":"larrfs","\u291E":"rarrfs","\u291F":"larrbfs","\u2920":"rarrbfs","\u2923":"nwarhk","\u2924":"nearhk","\u2925":"searhk","\u2926":"swarhk","\u2927":"nwnear","\u2928":"toea","\u2929":"tosa","\u292A":"swnwar","\u2933":"rarrc","\u2933\u0338":"nrarrc","\u2935":"cudarrr","\u2936":"ldca","\u2937":"rdca","\u2938":"cudarrl","\u2939":"larrpl","\u293C":"curarrm","\u293D":"cularrp","\u2945":"rarrpl","\u2948":"harrcir","\u2949":"Uarrocir","\u294A":"lurdshar","\u294B":"ldrushar","\u294E":"LeftRightVector","\u294F":"RightUpDownVector","\u2950":"DownLeftRightVector","\u2951":"LeftUpDownVector","\u2952":"LeftVectorBar","\u2953":"RightVectorBar","\u2954":"RightUpVectorBar","\u2955":"RightDownVectorBar","\u2956":"DownLeftVectorBar","\u2957":"DownRightVectorBar","\u2958":"LeftUpVectorBar","\u2959":"LeftDownVectorBar","\u295A":"LeftTeeVector","\u295B":"RightTeeVector","\u295C":"RightUpTeeVector","\u295D":"RightDownTeeVector","\u295E":"DownLeftTeeVector","\u295F":"DownRightTeeVector","\u2960":"LeftUpTeeVector","\u2961":"LeftDownTeeVector","\u2962":"lHar","\u2963":"uHar","\u2964":"rHar","\u2965":"dHar","\u2966":"luruhar","\u2967":"ldrdhar","\u2968":"ruluhar","\u2969":"rdldhar","\u296A":"lharul","\u296B":"llhard","\u296C":"rharul","\u296D":"lrhard","\u296E":"udhar","\u296F":"duhar","\u2970":"RoundImplies","\u2971":"erarr","\u2972":"simrarr","\u2973":"larrsim","\u2974":"rarrsim","\u2975":"rarrap","\u2976":"ltlarr","\u2978":"gtrarr","\u2979":"subrarr","\u297B":"suplarr","\u297C":"lfisht","\u297D":"rfisht","\u297E":"ufisht","\u297F":"dfisht","\u299A":"vzigzag","\u299C":"vangrt","\u299D":"angrtvbd","\u29A4":"ange","\u29A5":"range","\u29A6":"dwangle","\u29A7":"uwangle","\u29A8":"angmsdaa","\u29A9":"angmsdab","\u29AA":"angmsdac","\u29AB":"angmsdad","\u29AC":"angmsdae","\u29AD":"angmsdaf","\u29AE":"angmsdag","\u29AF":"angmsdah","\u29B0":"bemptyv","\u29B1":"demptyv","\u29B2":"cemptyv","\u29B3":"raemptyv","\u29B4":"laemptyv","\u29B5":"ohbar","\u29B6":"omid","\u29B7":"opar","\u29B9":"operp","\u29BB":"olcross","\u29BC":"odsold","\u29BE":"olcir","\u29BF":"ofcir","\u29C0":"olt","\u29C1":"ogt","\u29C2":"cirscir","\u29C3":"cirE","\u29C4":"solb","\u29C5":"bsolb","\u29C9":"boxbox","\u29CD":"trisb","\u29CE":"rtriltri","\u29CF":"LeftTriangleBar","\u29CF\u0338":"NotLeftTriangleBar","\u29D0":"RightTriangleBar","\u29D0\u0338":"NotRightTriangleBar","\u29DC":"iinfin","\u29DD":"infintie","\u29DE":"nvinfin","\u29E3":"eparsl","\u29E4":"smeparsl","\u29E5":"eqvparsl","\u29EB":"lozf","\u29F4":"RuleDelayed","\u29F6":"dsol","\u2A00":"xodot","\u2A01":"xoplus","\u2A02":"xotime","\u2A04":"xuplus","\u2A06":"xsqcup","\u2A0D":"fpartint","\u2A10":"cirfnint","\u2A11":"awint","\u2A12":"rppolint","\u2A13":"scpolint","\u2A14":"npolint","\u2A15":"pointint","\u2A16":"quatint","\u2A17":"intlarhk","\u2A22":"pluscir","\u2A23":"plusacir","\u2A24":"simplus","\u2A25":"plusdu","\u2A26":"plussim","\u2A27":"plustwo","\u2A29":"mcomma","\u2A2A":"minusdu","\u2A2D":"loplus","\u2A2E":"roplus","\u2A2F":"Cross","\u2A30":"timesd","\u2A31":"timesbar","\u2A33":"smashp","\u2A34":"lotimes","\u2A35":"rotimes","\u2A36":"otimesas","\u2A37":"Otimes","\u2A38":"odiv","\u2A39":"triplus","\u2A3A":"triminus","\u2A3B":"tritime","\u2A3C":"iprod","\u2A3F":"amalg","\u2A40":"capdot","\u2A42":"ncup","\u2A43":"ncap","\u2A44":"capand","\u2A45":"cupor","\u2A46":"cupcap","\u2A47":"capcup","\u2A48":"cupbrcap","\u2A49":"capbrcup","\u2A4A":"cupcup","\u2A4B":"capcap","\u2A4C":"ccups","\u2A4D":"ccaps","\u2A50":"ccupssm","\u2A53":"And","\u2A54":"Or","\u2A55":"andand","\u2A56":"oror","\u2A57":"orslope","\u2A58":"andslope","\u2A5A":"andv","\u2A5B":"orv","\u2A5C":"andd","\u2A5D":"ord","\u2A5F":"wedbar","\u2A66":"sdote","\u2A6A":"simdot","\u2A6D":"congdot","\u2A6D\u0338":"ncongdot","\u2A6E":"easter","\u2A6F":"apacir","\u2A70":"apE","\u2A70\u0338":"napE","\u2A71":"eplus","\u2A72":"pluse","\u2A73":"Esim","\u2A77":"eDDot","\u2A78":"equivDD","\u2A79":"ltcir","\u2A7A":"gtcir","\u2A7B":"ltquest","\u2A7C":"gtquest","\u2A7D":"les","\u2A7D\u0338":"nles","\u2A7E":"ges","\u2A7E\u0338":"nges","\u2A7F":"lesdot","\u2A80":"gesdot","\u2A81":"lesdoto","\u2A82":"gesdoto","\u2A83":"lesdotor","\u2A84":"gesdotol","\u2A85":"lap","\u2A86":"gap","\u2A87":"lne","\u2A88":"gne","\u2A89":"lnap","\u2A8A":"gnap","\u2A8B":"lEg","\u2A8C":"gEl","\u2A8D":"lsime","\u2A8E":"gsime","\u2A8F":"lsimg","\u2A90":"gsiml","\u2A91":"lgE","\u2A92":"glE","\u2A93":"lesges","\u2A94":"gesles","\u2A95":"els","\u2A96":"egs","\u2A97":"elsdot","\u2A98":"egsdot","\u2A99":"el","\u2A9A":"eg","\u2A9D":"siml","\u2A9E":"simg","\u2A9F":"simlE","\u2AA0":"simgE","\u2AA1":"LessLess","\u2AA1\u0338":"NotNestedLessLess","\u2AA2":"GreaterGreater","\u2AA2\u0338":"NotNestedGreaterGreater","\u2AA4":"glj","\u2AA5":"gla","\u2AA6":"ltcc","\u2AA7":"gtcc","\u2AA8":"lescc","\u2AA9":"gescc","\u2AAA":"smt","\u2AAB":"lat","\u2AAC":"smte","\u2AAC\uFE00":"smtes","\u2AAD":"late","\u2AAD\uFE00":"lates","\u2AAE":"bumpE","\u2AAF":"pre","\u2AAF\u0338":"npre","\u2AB0":"sce","\u2AB0\u0338":"nsce","\u2AB3":"prE","\u2AB4":"scE","\u2AB5":"prnE","\u2AB6":"scnE","\u2AB7":"prap","\u2AB8":"scap","\u2AB9":"prnap","\u2ABA":"scnap","\u2ABB":"Pr","\u2ABC":"Sc","\u2ABD":"subdot","\u2ABE":"supdot","\u2ABF":"subplus","\u2AC0":"supplus","\u2AC1":"submult","\u2AC2":"supmult","\u2AC3":"subedot","\u2AC4":"supedot","\u2AC5":"subE","\u2AC5\u0338":"nsubE","\u2AC6":"supE","\u2AC6\u0338":"nsupE","\u2AC7":"subsim","\u2AC8":"supsim","\u2ACB\uFE00":"vsubnE","\u2ACB":"subnE","\u2ACC\uFE00":"vsupnE","\u2ACC":"supnE","\u2ACF":"csub","\u2AD0":"csup","\u2AD1":"csube","\u2AD2":"csupe","\u2AD3":"subsup","\u2AD4":"supsub","\u2AD5":"subsub","\u2AD6":"supsup","\u2AD7":"suphsub","\u2AD8":"supdsub","\u2AD9":"forkv","\u2ADA":"topfork","\u2ADB":"mlcp","\u2AE4":"Dashv","\u2AE6":"Vdashl","\u2AE7":"Barv","\u2AE8":"vBar","\u2AE9":"vBarv","\u2AEB":"Vbar","\u2AEC":"Not","\u2AED":"bNot","\u2AEE":"rnmid","\u2AEF":"cirmid","\u2AF0":"midcir","\u2AF1":"topcir","\u2AF2":"nhpar","\u2AF3":"parsim","\u2AFD":"parsl","\u2AFD\u20E5":"nparsl","\u266D":"flat","\u266E":"natur","\u266F":"sharp","\xA4":"curren","\xA2":"cent",$:"dollar","\xA3":"pound","\xA5":"yen","\u20AC":"euro","\xB9":"sup1","\xBD":"half","\u2153":"frac13","\xBC":"frac14","\u2155":"frac15","\u2159":"frac16","\u215B":"frac18","\xB2":"sup2","\u2154":"frac23","\u2156":"frac25","\xB3":"sup3","\xBE":"frac34","\u2157":"frac35","\u215C":"frac38","\u2158":"frac45","\u215A":"frac56","\u215D":"frac58","\u215E":"frac78","\u{1D4B6}":"ascr","\u{1D552}":"aopf","\u{1D51E}":"afr","\u{1D538}":"Aopf","\u{1D504}":"Afr","\u{1D49C}":"Ascr",\u00AA:"ordf",\u00E1:"aacute",\u00C1:"Aacute",\u00E0:"agrave",\u00C0:"Agrave",\u0103:"abreve",\u0102:"Abreve",\u00E2:"acirc",\u00C2:"Acirc",\u00E5:"aring",\u00C5:"angst",\u00E4:"auml",\u00C4:"Auml",\u00E3:"atilde",\u00C3:"Atilde",\u0105:"aogon",\u0104:"Aogon",\u0101:"amacr",\u0100:"Amacr",\u00E6:"aelig",\u00C6:"AElig","\u{1D4B7}":"bscr","\u{1D553}":"bopf","\u{1D51F}":"bfr","\u{1D539}":"Bopf",\u212C:"Bscr","\u{1D505}":"Bfr","\u{1D520}":"cfr","\u{1D4B8}":"cscr","\u{1D554}":"copf",\u212D:"Cfr","\u{1D49E}":"Cscr",\u2102:"Copf",\u0107:"cacute",\u0106:"Cacute",\u0109:"ccirc",\u0108:"Ccirc",\u010D:"ccaron",\u010C:"Ccaron",\u010B:"cdot",\u010A:"Cdot",\u00E7:"ccedil",\u00C7:"Ccedil","\u2105":"incare","\u{1D521}":"dfr","\u2146":"dd","\u{1D555}":"dopf","\u{1D4B9}":"dscr","\u{1D49F}":"Dscr","\u{1D507}":"Dfr","\u2145":"DD","\u{1D53B}":"Dopf",\u010F:"dcaron",\u010E:"Dcaron",\u0111:"dstrok",\u0110:"Dstrok",\u00F0:"eth",\u00D0:"ETH","\u2147":"ee",\u212F:"escr","\u{1D522}":"efr","\u{1D556}":"eopf",\u2130:"Escr","\u{1D508}":"Efr","\u{1D53C}":"Eopf",\u00E9:"eacute",\u00C9:"Eacute",\u00E8:"egrave",\u00C8:"Egrave",\u00EA:"ecirc",\u00CA:"Ecirc",\u011B:"ecaron",\u011A:"Ecaron",\u00EB:"euml",\u00CB:"Euml",\u0117:"edot",\u0116:"Edot",\u0119:"eogon",\u0118:"Eogon",\u0113:"emacr",\u0112:"Emacr","\u{1D523}":"ffr","\u{1D557}":"fopf","\u{1D4BB}":"fscr","\u{1D509}":"Ffr","\u{1D53D}":"Fopf",\u2131:"Fscr",\uFB00:"fflig",\uFB03:"ffilig",\uFB04:"ffllig",\uFB01:"filig",fj:"fjlig",\uFB02:"fllig",\u0192:"fnof",\u210A:"gscr","\u{1D558}":"gopf","\u{1D524}":"gfr","\u{1D4A2}":"Gscr","\u{1D53E}":"Gopf","\u{1D50A}":"Gfr",\u01F5:"gacute",\u011F:"gbreve",\u011E:"Gbreve",\u011D:"gcirc",\u011C:"Gcirc",\u0121:"gdot",\u0120:"Gdot",\u0122:"Gcedil","\u{1D525}":"hfr",\u210E:"planckh","\u{1D4BD}":"hscr","\u{1D559}":"hopf",\u210B:"Hscr",\u210C:"Hfr",\u210D:"Hopf",\u0125:"hcirc",\u0124:"Hcirc",\u210F:"hbar",\u0127:"hstrok",\u0126:"Hstrok","\u{1D55A}":"iopf","\u{1D526}":"ifr","\u{1D4BE}":"iscr","\u2148":"ii","\u{1D540}":"Iopf",\u2110:"Iscr",\u2111:"Im",\u00ED:"iacute",\u00CD:"Iacute",\u00EC:"igrave",\u00CC:"Igrave",\u00EE:"icirc",\u00CE:"Icirc",\u00EF:"iuml",\u00CF:"Iuml",\u0129:"itilde",\u0128:"Itilde",\u0130:"Idot",\u012F:"iogon",\u012E:"Iogon",\u012B:"imacr",\u012A:"Imacr",\u0133:"ijlig",\u0132:"IJlig",\u0131:"imath","\u{1D4BF}":"jscr","\u{1D55B}":"jopf","\u{1D527}":"jfr","\u{1D4A5}":"Jscr","\u{1D50D}":"Jfr","\u{1D541}":"Jopf",\u0135:"jcirc",\u0134:"Jcirc","\u0237":"jmath","\u{1D55C}":"kopf","\u{1D4C0}":"kscr","\u{1D528}":"kfr","\u{1D4A6}":"Kscr","\u{1D542}":"Kopf","\u{1D50E}":"Kfr",\u0137:"kcedil",\u0136:"Kcedil","\u{1D529}":"lfr","\u{1D4C1}":"lscr",\u2113:"ell","\u{1D55D}":"lopf",\u2112:"Lscr","\u{1D50F}":"Lfr","\u{1D543}":"Lopf",\u013A:"lacute",\u0139:"Lacute",\u013E:"lcaron",\u013D:"Lcaron",\u013C:"lcedil",\u013B:"Lcedil",\u0142:"lstrok",\u0141:"Lstrok",\u0140:"lmidot",\u013F:"Lmidot","\u{1D52A}":"mfr","\u{1D55E}":"mopf","\u{1D4C2}":"mscr","\u{1D510}":"Mfr","\u{1D544}":"Mopf",\u2133:"Mscr","\u{1D52B}":"nfr","\u{1D55F}":"nopf","\u{1D4C3}":"nscr",\u2115:"Nopf","\u{1D4A9}":"Nscr","\u{1D511}":"Nfr",\u0144:"nacute",\u0143:"Nacute",\u0148:"ncaron",\u0147:"Ncaron",\u00F1:"ntilde",\u00D1:"Ntilde",\u0146:"ncedil",\u0145:"Ncedil","\u2116":"numero",\u014B:"eng",\u014A:"ENG","\u{1D560}":"oopf","\u{1D52C}":"ofr",\u2134:"oscr","\u{1D4AA}":"Oscr","\u{1D512}":"Ofr","\u{1D546}":"Oopf",\u00BA:"ordm",\u00F3:"oacute",\u00D3:"Oacute",\u00F2:"ograve",\u00D2:"Ograve",\u00F4:"ocirc",\u00D4:"Ocirc",\u00F6:"ouml",\u00D6:"Ouml",\u0151:"odblac",\u0150:"Odblac",\u00F5:"otilde",\u00D5:"Otilde",\u00F8:"oslash",\u00D8:"Oslash",\u014D:"omacr",\u014C:"Omacr",\u0153:"oelig",\u0152:"OElig","\u{1D52D}":"pfr","\u{1D4C5}":"pscr","\u{1D561}":"popf",\u2119:"Popf","\u{1D513}":"Pfr","\u{1D4AB}":"Pscr","\u{1D562}":"qopf","\u{1D52E}":"qfr","\u{1D4C6}":"qscr","\u{1D4AC}":"Qscr","\u{1D514}":"Qfr",\u211A:"Qopf",\u0138:"kgreen","\u{1D52F}":"rfr","\u{1D563}":"ropf","\u{1D4C7}":"rscr",\u211B:"Rscr",\u211C:"Re",\u211D:"Ropf",\u0155:"racute",\u0154:"Racute",\u0159:"rcaron",\u0158:"Rcaron",\u0157:"rcedil",\u0156:"Rcedil","\u{1D564}":"sopf","\u{1D4C8}":"sscr","\u{1D530}":"sfr","\u{1D54A}":"Sopf","\u{1D516}":"Sfr","\u{1D4AE}":"Sscr","\u24C8":"oS",\u015B:"sacute",\u015A:"Sacute",\u015D:"scirc",\u015C:"Scirc",\u0161:"scaron",\u0160:"Scaron",\u015F:"scedil",\u015E:"Scedil",\u00DF:"szlig","\u{1D531}":"tfr","\u{1D4C9}":"tscr","\u{1D565}":"topf","\u{1D4AF}":"Tscr","\u{1D517}":"Tfr","\u{1D54B}":"Topf",\u0165:"tcaron",\u0164:"Tcaron",\u0163:"tcedil",\u0162:"Tcedil","\u2122":"trade",\u0167:"tstrok",\u0166:"Tstrok","\u{1D4CA}":"uscr","\u{1D566}":"uopf","\u{1D532}":"ufr","\u{1D54C}":"Uopf","\u{1D518}":"Ufr","\u{1D4B0}":"Uscr",\u00FA:"uacute",\u00DA:"Uacute",\u00F9:"ugrave",\u00D9:"Ugrave",\u016D:"ubreve",\u016C:"Ubreve",\u00FB:"ucirc",\u00DB:"Ucirc",\u016F:"uring",\u016E:"Uring",\u00FC:"uuml",\u00DC:"Uuml",\u0171:"udblac",\u0170:"Udblac",\u0169:"utilde",\u0168:"Utilde",\u0173:"uogon",\u0172:"Uogon",\u016B:"umacr",\u016A:"Umacr","\u{1D533}":"vfr","\u{1D567}":"vopf","\u{1D4CB}":"vscr","\u{1D519}":"Vfr","\u{1D54D}":"Vopf","\u{1D4B1}":"Vscr","\u{1D568}":"wopf","\u{1D4CC}":"wscr","\u{1D534}":"wfr","\u{1D4B2}":"Wscr","\u{1D54E}":"Wopf","\u{1D51A}":"Wfr",\u0175:"wcirc",\u0174:"Wcirc","\u{1D535}":"xfr","\u{1D4CD}":"xscr","\u{1D569}":"xopf","\u{1D54F}":"Xopf","\u{1D51B}":"Xfr","\u{1D4B3}":"Xscr","\u{1D536}":"yfr","\u{1D4CE}":"yscr","\u{1D56A}":"yopf","\u{1D4B4}":"Yscr","\u{1D51C}":"Yfr","\u{1D550}":"Yopf",\u00FD:"yacute",\u00DD:"Yacute",\u0177:"ycirc",\u0176:"Ycirc",\u00FF:"yuml",\u0178:"Yuml","\u{1D4CF}":"zscr","\u{1D537}":"zfr","\u{1D56B}":"zopf",\u2128:"Zfr",\u2124:"Zopf","\u{1D4B5}":"Zscr",\u017A:"zacute",\u0179:"Zacute",\u017E:"zcaron",\u017D:"Zcaron",\u017C:"zdot",\u017B:"Zdot",\u01B5:"imped",\u00FE:"thorn",\u00DE:"THORN",\u0149:"napos",\u03B1:"alpha",\u0391:"Alpha",\u03B2:"beta",\u0392:"Beta",\u03B3:"gamma",\u0393:"Gamma",\u03B4:"delta",\u0394:"Delta",\u03B5:"epsi","\u03F5":"epsiv",\u0395:"Epsilon",\u03DD:"gammad",\u03DC:"Gammad",\u03B6:"zeta",\u0396:"Zeta",\u03B7:"eta",\u0397:"Eta",\u03B8:"theta",\u03D1:"thetav",\u0398:"Theta",\u03B9:"iota",\u0399:"Iota",\u03BA:"kappa",\u03F0:"kappav",\u039A:"Kappa",\u03BB:"lambda",\u039B:"Lambda",\u03BC:"mu",\u00B5:"micro",\u039C:"Mu",\u03BD:"nu",\u039D:"Nu",\u03BE:"xi",\u039E:"Xi",\u03BF:"omicron",\u039F:"Omicron",\u03C0:"pi",\u03D6:"piv",\u03A0:"Pi",\u03C1:"rho",\u03F1:"rhov",\u03A1:"Rho",\u03C3:"sigma",\u03A3:"Sigma",\u03C2:"sigmaf",\u03C4:"tau",\u03A4:"Tau",\u03C5:"upsi",\u03A5:"Upsilon",\u03D2:"Upsi",\u03C6:"phi",\u03D5:"phiv",\u03A6:"Phi",\u03C7:"chi",\u03A7:"Chi",\u03C8:"psi",\u03A8:"Psi",\u03C9:"omega",\u03A9:"ohm",\u0430:"acy",\u0410:"Acy",\u0431:"bcy",\u0411:"Bcy",\u0432:"vcy",\u0412:"Vcy",\u0433:"gcy",\u0413:"Gcy",\u0453:"gjcy",\u0403:"GJcy",\u0434:"dcy",\u0414:"Dcy",\u0452:"djcy",\u0402:"DJcy",\u0435:"iecy",\u0415:"IEcy",\u0451:"iocy",\u0401:"IOcy",\u0454:"jukcy",\u0404:"Jukcy",\u0436:"zhcy",\u0416:"ZHcy",\u0437:"zcy",\u0417:"Zcy",\u0455:"dscy",\u0405:"DScy",\u0438:"icy",\u0418:"Icy",\u0456:"iukcy",\u0406:"Iukcy",\u0457:"yicy",\u0407:"YIcy",\u0439:"jcy",\u0419:"Jcy",\u0458:"jsercy",\u0408:"Jsercy",\u043A:"kcy",\u041A:"Kcy",\u045C:"kjcy",\u040C:"KJcy",\u043B:"lcy",\u041B:"Lcy",\u0459:"ljcy",\u0409:"LJcy",\u043C:"mcy",\u041C:"Mcy",\u043D:"ncy",\u041D:"Ncy",\u045A:"njcy",\u040A:"NJcy",\u043E:"ocy",\u041E:"Ocy",\u043F:"pcy",\u041F:"Pcy",\u0440:"rcy",\u0420:"Rcy",\u0441:"scy",\u0421:"Scy",\u0442:"tcy",\u0422:"Tcy",\u045B:"tshcy",\u040B:"TSHcy",\u0443:"ucy",\u0423:"Ucy",\u045E:"ubrcy",\u040E:"Ubrcy",\u0444:"fcy",\u0424:"Fcy",\u0445:"khcy",\u0425:"KHcy",\u0446:"tscy",\u0426:"TScy",\u0447:"chcy",\u0427:"CHcy",\u045F:"dzcy",\u040F:"DZcy",\u0448:"shcy",\u0428:"SHcy",\u0449:"shchcy",\u0429:"SHCHcy",\u044A:"hardcy",\u042A:"HARDcy",\u044B:"ycy",\u042B:"Ycy",\u044C:"softcy",\u042C:"SOFTcy",\u044D:"ecy",\u042D:"Ecy",\u044E:"yucy",\u042E:"YUcy",\u044F:"yacy",\u042F:"YAcy",\u2135:"aleph",\u2136:"beth",\u2137:"gimel",\u2138:"daleth"},d=/["&'<>`]/g,u={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},c=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,m=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,g=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,p={aacute:"\xE1",Aacute:"\xC1",abreve:"\u0103",Abreve:"\u0102",ac:"\u223E",acd:"\u223F",acE:"\u223E\u0333",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",acy:"\u0430",Acy:"\u0410",aelig:"\xE6",AElig:"\xC6",af:"\u2061",afr:"\u{1D51E}",Afr:"\u{1D504}",agrave:"\xE0",Agrave:"\xC0",alefsym:"\u2135",aleph:"\u2135",alpha:"\u03B1",Alpha:"\u0391",amacr:"\u0101",Amacr:"\u0100",amalg:"\u2A3F",amp:"&",AMP:"&",and:"\u2227",And:"\u2A53",andand:"\u2A55",andd:"\u2A5C",andslope:"\u2A58",andv:"\u2A5A",ang:"\u2220",ange:"\u29A4",angle:"\u2220",angmsd:"\u2221",angmsdaa:"\u29A8",angmsdab:"\u29A9",angmsdac:"\u29AA",angmsdad:"\u29AB",angmsdae:"\u29AC",angmsdaf:"\u29AD",angmsdag:"\u29AE",angmsdah:"\u29AF",angrt:"\u221F",angrtvb:"\u22BE",angrtvbd:"\u299D",angsph:"\u2222",angst:"\xC5",angzarr:"\u237C",aogon:"\u0105",Aogon:"\u0104",aopf:"\u{1D552}",Aopf:"\u{1D538}",ap:"\u2248",apacir:"\u2A6F",ape:"\u224A",apE:"\u2A70",apid:"\u224B",apos:"'",ApplyFunction:"\u2061",approx:"\u2248",approxeq:"\u224A",aring:"\xE5",Aring:"\xC5",ascr:"\u{1D4B6}",Ascr:"\u{1D49C}",Assign:"\u2254",ast:"*",asymp:"\u2248",asympeq:"\u224D",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",awconint:"\u2233",awint:"\u2A11",backcong:"\u224C",backepsilon:"\u03F6",backprime:"\u2035",backsim:"\u223D",backsimeq:"\u22CD",Backslash:"\u2216",Barv:"\u2AE7",barvee:"\u22BD",barwed:"\u2305",Barwed:"\u2306",barwedge:"\u2305",bbrk:"\u23B5",bbrktbrk:"\u23B6",bcong:"\u224C",bcy:"\u0431",Bcy:"\u0411",bdquo:"\u201E",becaus:"\u2235",because:"\u2235",Because:"\u2235",bemptyv:"\u29B0",bepsi:"\u03F6",bernou:"\u212C",Bernoullis:"\u212C",beta:"\u03B2",Beta:"\u0392",beth:"\u2136",between:"\u226C",bfr:"\u{1D51F}",Bfr:"\u{1D505}",bigcap:"\u22C2",bigcirc:"\u25EF",bigcup:"\u22C3",bigodot:"\u2A00",bigoplus:"\u2A01",bigotimes:"\u2A02",bigsqcup:"\u2A06",bigstar:"\u2605",bigtriangledown:"\u25BD",bigtriangleup:"\u25B3",biguplus:"\u2A04",bigvee:"\u22C1",bigwedge:"\u22C0",bkarow:"\u290D",blacklozenge:"\u29EB",blacksquare:"\u25AA",blacktriangle:"\u25B4",blacktriangledown:"\u25BE",blacktriangleleft:"\u25C2",blacktriangleright:"\u25B8",blank:"\u2423",blk12:"\u2592",blk14:"\u2591",blk34:"\u2593",block:"\u2588",bne:"=\u20E5",bnequiv:"\u2261\u20E5",bnot:"\u2310",bNot:"\u2AED",bopf:"\u{1D553}",Bopf:"\u{1D539}",bot:"\u22A5",bottom:"\u22A5",bowtie:"\u22C8",boxbox:"\u29C9",boxdl:"\u2510",boxdL:"\u2555",boxDl:"\u2556",boxDL:"\u2557",boxdr:"\u250C",boxdR:"\u2552",boxDr:"\u2553",boxDR:"\u2554",boxh:"\u2500",boxH:"\u2550",boxhd:"\u252C",boxhD:"\u2565",boxHd:"\u2564",boxHD:"\u2566",boxhu:"\u2534",boxhU:"\u2568",boxHu:"\u2567",boxHU:"\u2569",boxminus:"\u229F",boxplus:"\u229E",boxtimes:"\u22A0",boxul:"\u2518",boxuL:"\u255B",boxUl:"\u255C",boxUL:"\u255D",boxur:"\u2514",boxuR:"\u2558",boxUr:"\u2559",boxUR:"\u255A",boxv:"\u2502",boxV:"\u2551",boxvh:"\u253C",boxvH:"\u256A",boxVh:"\u256B",boxVH:"\u256C",boxvl:"\u2524",boxvL:"\u2561",boxVl:"\u2562",boxVL:"\u2563",boxvr:"\u251C",boxvR:"\u255E",boxVr:"\u255F",boxVR:"\u2560",bprime:"\u2035",breve:"\u02D8",Breve:"\u02D8",brvbar:"\xA6",bscr:"\u{1D4B7}",Bscr:"\u212C",bsemi:"\u204F",bsim:"\u223D",bsime:"\u22CD",bsol:"\\",bsolb:"\u29C5",bsolhsub:"\u27C8",bull:"\u2022",bullet:"\u2022",bump:"\u224E",bumpe:"\u224F",bumpE:"\u2AAE",bumpeq:"\u224F",Bumpeq:"\u224E",cacute:"\u0107",Cacute:"\u0106",cap:"\u2229",Cap:"\u22D2",capand:"\u2A44",capbrcup:"\u2A49",capcap:"\u2A4B",capcup:"\u2A47",capdot:"\u2A40",CapitalDifferentialD:"\u2145",caps:"\u2229\uFE00",caret:"\u2041",caron:"\u02C7",Cayleys:"\u212D",ccaps:"\u2A4D",ccaron:"\u010D",Ccaron:"\u010C",ccedil:"\xE7",Ccedil:"\xC7",ccirc:"\u0109",Ccirc:"\u0108",Cconint:"\u2230",ccups:"\u2A4C",ccupssm:"\u2A50",cdot:"\u010B",Cdot:"\u010A",cedil:"\xB8",Cedilla:"\xB8",cemptyv:"\u29B2",cent:"\xA2",centerdot:"\xB7",CenterDot:"\xB7",cfr:"\u{1D520}",Cfr:"\u212D",chcy:"\u0447",CHcy:"\u0427",check:"\u2713",checkmark:"\u2713",chi:"\u03C7",Chi:"\u03A7",cir:"\u25CB",circ:"\u02C6",circeq:"\u2257",circlearrowleft:"\u21BA",circlearrowright:"\u21BB",circledast:"\u229B",circledcirc:"\u229A",circleddash:"\u229D",CircleDot:"\u2299",circledR:"\xAE",circledS:"\u24C8",CircleMinus:"\u2296",CirclePlus:"\u2295",CircleTimes:"\u2297",cire:"\u2257",cirE:"\u29C3",cirfnint:"\u2A10",cirmid:"\u2AEF",cirscir:"\u29C2",ClockwiseContourIntegral:"\u2232",CloseCurlyDoubleQuote:"\u201D",CloseCurlyQuote:"\u2019",clubs:"\u2663",clubsuit:"\u2663",colon:":",Colon:"\u2237",colone:"\u2254",Colone:"\u2A74",coloneq:"\u2254",comma:",",commat:"@",comp:"\u2201",compfn:"\u2218",complement:"\u2201",complexes:"\u2102",cong:"\u2245",congdot:"\u2A6D",Congruent:"\u2261",conint:"\u222E",Conint:"\u222F",ContourIntegral:"\u222E",copf:"\u{1D554}",Copf:"\u2102",coprod:"\u2210",Coproduct:"\u2210",copy:"\xA9",COPY:"\xA9",copysr:"\u2117",CounterClockwiseContourIntegral:"\u2233",crarr:"\u21B5",cross:"\u2717",Cross:"\u2A2F",cscr:"\u{1D4B8}",Cscr:"\u{1D49E}",csub:"\u2ACF",csube:"\u2AD1",csup:"\u2AD0",csupe:"\u2AD2",ctdot:"\u22EF",cudarrl:"\u2938",cudarrr:"\u2935",cuepr:"\u22DE",cuesc:"\u22DF",cularr:"\u21B6",cularrp:"\u293D",cup:"\u222A",Cup:"\u22D3",cupbrcap:"\u2A48",cupcap:"\u2A46",CupCap:"\u224D",cupcup:"\u2A4A",cupdot:"\u228D",cupor:"\u2A45",cups:"\u222A\uFE00",curarr:"\u21B7",curarrm:"\u293C",curlyeqprec:"\u22DE",curlyeqsucc:"\u22DF",curlyvee:"\u22CE",curlywedge:"\u22CF",curren:"\xA4",curvearrowleft:"\u21B6",curvearrowright:"\u21B7",cuvee:"\u22CE",cuwed:"\u22CF",cwconint:"\u2232",cwint:"\u2231",cylcty:"\u232D",dagger:"\u2020",Dagger:"\u2021",daleth:"\u2138",darr:"\u2193",dArr:"\u21D3",Darr:"\u21A1",dash:"\u2010",dashv:"\u22A3",Dashv:"\u2AE4",dbkarow:"\u290F",dblac:"\u02DD",dcaron:"\u010F",Dcaron:"\u010E",dcy:"\u0434",Dcy:"\u0414",dd:"\u2146",DD:"\u2145",ddagger:"\u2021",ddarr:"\u21CA",DDotrahd:"\u2911",ddotseq:"\u2A77",deg:"\xB0",Del:"\u2207",delta:"\u03B4",Delta:"\u0394",demptyv:"\u29B1",dfisht:"\u297F",dfr:"\u{1D521}",Dfr:"\u{1D507}",dHar:"\u2965",dharl:"\u21C3",dharr:"\u21C2",DiacriticalAcute:"\xB4",DiacriticalDot:"\u02D9",DiacriticalDoubleAcute:"\u02DD",DiacriticalGrave:"`",DiacriticalTilde:"\u02DC",diam:"\u22C4",diamond:"\u22C4",Diamond:"\u22C4",diamondsuit:"\u2666",diams:"\u2666",die:"\xA8",DifferentialD:"\u2146",digamma:"\u03DD",disin:"\u22F2",div:"\xF7",divide:"\xF7",divideontimes:"\u22C7",divonx:"\u22C7",djcy:"\u0452",DJcy:"\u0402",dlcorn:"\u231E",dlcrop:"\u230D",dollar:"$",dopf:"\u{1D555}",Dopf:"\u{1D53B}",dot:"\u02D9",Dot:"\xA8",DotDot:"\u20DC",doteq:"\u2250",doteqdot:"\u2251",DotEqual:"\u2250",dotminus:"\u2238",dotplus:"\u2214",dotsquare:"\u22A1",doublebarwedge:"\u2306",DoubleContourIntegral:"\u222F",DoubleDot:"\xA8",DoubleDownArrow:"\u21D3",DoubleLeftArrow:"\u21D0",DoubleLeftRightArrow:"\u21D4",DoubleLeftTee:"\u2AE4",DoubleLongLeftArrow:"\u27F8",DoubleLongLeftRightArrow:"\u27FA",DoubleLongRightArrow:"\u27F9",DoubleRightArrow:"\u21D2",DoubleRightTee:"\u22A8",DoubleUpArrow:"\u21D1",DoubleUpDownArrow:"\u21D5",DoubleVerticalBar:"\u2225",downarrow:"\u2193",Downarrow:"\u21D3",DownArrow:"\u2193",DownArrowBar:"\u2913",DownArrowUpArrow:"\u21F5",DownBreve:"\u0311",downdownarrows:"\u21CA",downharpoonleft:"\u21C3",downharpoonright:"\u21C2",DownLeftRightVector:"\u2950",DownLeftTeeVector:"\u295E",DownLeftVector:"\u21BD",DownLeftVectorBar:"\u2956",DownRightTeeVector:"\u295F",DownRightVector:"\u21C1",DownRightVectorBar:"\u2957",DownTee:"\u22A4",DownTeeArrow:"\u21A7",drbkarow:"\u2910",drcorn:"\u231F",drcrop:"\u230C",dscr:"\u{1D4B9}",Dscr:"\u{1D49F}",dscy:"\u0455",DScy:"\u0405",dsol:"\u29F6",dstrok:"\u0111",Dstrok:"\u0110",dtdot:"\u22F1",dtri:"\u25BF",dtrif:"\u25BE",duarr:"\u21F5",duhar:"\u296F",dwangle:"\u29A6",dzcy:"\u045F",DZcy:"\u040F",dzigrarr:"\u27FF",eacute:"\xE9",Eacute:"\xC9",easter:"\u2A6E",ecaron:"\u011B",Ecaron:"\u011A",ecir:"\u2256",ecirc:"\xEA",Ecirc:"\xCA",ecolon:"\u2255",ecy:"\u044D",Ecy:"\u042D",eDDot:"\u2A77",edot:"\u0117",eDot:"\u2251",Edot:"\u0116",ee:"\u2147",efDot:"\u2252",efr:"\u{1D522}",Efr:"\u{1D508}",eg:"\u2A9A",egrave:"\xE8",Egrave:"\xC8",egs:"\u2A96",egsdot:"\u2A98",el:"\u2A99",Element:"\u2208",elinters:"\u23E7",ell:"\u2113",els:"\u2A95",elsdot:"\u2A97",emacr:"\u0113",Emacr:"\u0112",empty:"\u2205",emptyset:"\u2205",EmptySmallSquare:"\u25FB",emptyv:"\u2205",EmptyVerySmallSquare:"\u25AB",emsp:"\u2003",emsp13:"\u2004",emsp14:"\u2005",eng:"\u014B",ENG:"\u014A",ensp:"\u2002",eogon:"\u0119",Eogon:"\u0118",eopf:"\u{1D556}",Eopf:"\u{1D53C}",epar:"\u22D5",eparsl:"\u29E3",eplus:"\u2A71",epsi:"\u03B5",epsilon:"\u03B5",Epsilon:"\u0395",epsiv:"\u03F5",eqcirc:"\u2256",eqcolon:"\u2255",eqsim:"\u2242",eqslantgtr:"\u2A96",eqslantless:"\u2A95",Equal:"\u2A75",equals:"=",EqualTilde:"\u2242",equest:"\u225F",Equilibrium:"\u21CC",equiv:"\u2261",equivDD:"\u2A78",eqvparsl:"\u29E5",erarr:"\u2971",erDot:"\u2253",escr:"\u212F",Escr:"\u2130",esdot:"\u2250",esim:"\u2242",Esim:"\u2A73",eta:"\u03B7",Eta:"\u0397",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",euro:"\u20AC",excl:"!",exist:"\u2203",Exists:"\u2203",expectation:"\u2130",exponentiale:"\u2147",ExponentialE:"\u2147",fallingdotseq:"\u2252",fcy:"\u0444",Fcy:"\u0424",female:"\u2640",ffilig:"\uFB03",fflig:"\uFB00",ffllig:"\uFB04",ffr:"\u{1D523}",Ffr:"\u{1D509}",filig:"\uFB01",FilledSmallSquare:"\u25FC",FilledVerySmallSquare:"\u25AA",fjlig:"fj",flat:"\u266D",fllig:"\uFB02",fltns:"\u25B1",fnof:"\u0192",fopf:"\u{1D557}",Fopf:"\u{1D53D}",forall:"\u2200",ForAll:"\u2200",fork:"\u22D4",forkv:"\u2AD9",Fouriertrf:"\u2131",fpartint:"\u2A0D",frac12:"\xBD",frac13:"\u2153",frac14:"\xBC",frac15:"\u2155",frac16:"\u2159",frac18:"\u215B",frac23:"\u2154",frac25:"\u2156",frac34:"\xBE",frac35:"\u2157",frac38:"\u215C",frac45:"\u2158",frac56:"\u215A",frac58:"\u215D",frac78:"\u215E",frasl:"\u2044",frown:"\u2322",fscr:"\u{1D4BB}",Fscr:"\u2131",gacute:"\u01F5",gamma:"\u03B3",Gamma:"\u0393",gammad:"\u03DD",Gammad:"\u03DC",gap:"\u2A86",gbreve:"\u011F",Gbreve:"\u011E",Gcedil:"\u0122",gcirc:"\u011D",Gcirc:"\u011C",gcy:"\u0433",Gcy:"\u0413",gdot:"\u0121",Gdot:"\u0120",ge:"\u2265",gE:"\u2267",gel:"\u22DB",gEl:"\u2A8C",geq:"\u2265",geqq:"\u2267",geqslant:"\u2A7E",ges:"\u2A7E",gescc:"\u2AA9",gesdot:"\u2A80",gesdoto:"\u2A82",gesdotol:"\u2A84",gesl:"\u22DB\uFE00",gesles:"\u2A94",gfr:"\u{1D524}",Gfr:"\u{1D50A}",gg:"\u226B",Gg:"\u22D9",ggg:"\u22D9",gimel:"\u2137",gjcy:"\u0453",GJcy:"\u0403",gl:"\u2277",gla:"\u2AA5",glE:"\u2A92",glj:"\u2AA4",gnap:"\u2A8A",gnapprox:"\u2A8A",gne:"\u2A88",gnE:"\u2269",gneq:"\u2A88",gneqq:"\u2269",gnsim:"\u22E7",gopf:"\u{1D558}",Gopf:"\u{1D53E}",grave:"`",GreaterEqual:"\u2265",GreaterEqualLess:"\u22DB",GreaterFullEqual:"\u2267",GreaterGreater:"\u2AA2",GreaterLess:"\u2277",GreaterSlantEqual:"\u2A7E",GreaterTilde:"\u2273",gscr:"\u210A",Gscr:"\u{1D4A2}",gsim:"\u2273",gsime:"\u2A8E",gsiml:"\u2A90",gt:">",Gt:"\u226B",GT:">",gtcc:"\u2AA7",gtcir:"\u2A7A",gtdot:"\u22D7",gtlPar:"\u2995",gtquest:"\u2A7C",gtrapprox:"\u2A86",gtrarr:"\u2978",gtrdot:"\u22D7",gtreqless:"\u22DB",gtreqqless:"\u2A8C",gtrless:"\u2277",gtrsim:"\u2273",gvertneqq:"\u2269\uFE00",gvnE:"\u2269\uFE00",Hacek:"\u02C7",hairsp:"\u200A",half:"\xBD",hamilt:"\u210B",hardcy:"\u044A",HARDcy:"\u042A",harr:"\u2194",hArr:"\u21D4",harrcir:"\u2948",harrw:"\u21AD",Hat:"^",hbar:"\u210F",hcirc:"\u0125",Hcirc:"\u0124",hearts:"\u2665",heartsuit:"\u2665",hellip:"\u2026",hercon:"\u22B9",hfr:"\u{1D525}",Hfr:"\u210C",HilbertSpace:"\u210B",hksearow:"\u2925",hkswarow:"\u2926",hoarr:"\u21FF",homtht:"\u223B",hookleftarrow:"\u21A9",hookrightarrow:"\u21AA",hopf:"\u{1D559}",Hopf:"\u210D",horbar:"\u2015",HorizontalLine:"\u2500",hscr:"\u{1D4BD}",Hscr:"\u210B",hslash:"\u210F",hstrok:"\u0127",Hstrok:"\u0126",HumpDownHump:"\u224E",HumpEqual:"\u224F",hybull:"\u2043",hyphen:"\u2010",iacute:"\xED",Iacute:"\xCD",ic:"\u2063",icirc:"\xEE",Icirc:"\xCE",icy:"\u0438",Icy:"\u0418",Idot:"\u0130",iecy:"\u0435",IEcy:"\u0415",iexcl:"\xA1",iff:"\u21D4",ifr:"\u{1D526}",Ifr:"\u2111",igrave:"\xEC",Igrave:"\xCC",ii:"\u2148",iiiint:"\u2A0C",iiint:"\u222D",iinfin:"\u29DC",iiota:"\u2129",ijlig:"\u0133",IJlig:"\u0132",Im:"\u2111",imacr:"\u012B",Imacr:"\u012A",image:"\u2111",ImaginaryI:"\u2148",imagline:"\u2110",imagpart:"\u2111",imath:"\u0131",imof:"\u22B7",imped:"\u01B5",Implies:"\u21D2",in:"\u2208",incare:"\u2105",infin:"\u221E",infintie:"\u29DD",inodot:"\u0131",int:"\u222B",Int:"\u222C",intcal:"\u22BA",integers:"\u2124",Integral:"\u222B",intercal:"\u22BA",Intersection:"\u22C2",intlarhk:"\u2A17",intprod:"\u2A3C",InvisibleComma:"\u2063",InvisibleTimes:"\u2062",iocy:"\u0451",IOcy:"\u0401",iogon:"\u012F",Iogon:"\u012E",iopf:"\u{1D55A}",Iopf:"\u{1D540}",iota:"\u03B9",Iota:"\u0399",iprod:"\u2A3C",iquest:"\xBF",iscr:"\u{1D4BE}",Iscr:"\u2110",isin:"\u2208",isindot:"\u22F5",isinE:"\u22F9",isins:"\u22F4",isinsv:"\u22F3",isinv:"\u2208",it:"\u2062",itilde:"\u0129",Itilde:"\u0128",iukcy:"\u0456",Iukcy:"\u0406",iuml:"\xEF",Iuml:"\xCF",jcirc:"\u0135",Jcirc:"\u0134",jcy:"\u0439",Jcy:"\u0419",jfr:"\u{1D527}",Jfr:"\u{1D50D}",jmath:"\u0237",jopf:"\u{1D55B}",Jopf:"\u{1D541}",jscr:"\u{1D4BF}",Jscr:"\u{1D4A5}",jsercy:"\u0458",Jsercy:"\u0408",jukcy:"\u0454",Jukcy:"\u0404",kappa:"\u03BA",Kappa:"\u039A",kappav:"\u03F0",kcedil:"\u0137",Kcedil:"\u0136",kcy:"\u043A",Kcy:"\u041A",kfr:"\u{1D528}",Kfr:"\u{1D50E}",kgreen:"\u0138",khcy:"\u0445",KHcy:"\u0425",kjcy:"\u045C",KJcy:"\u040C",kopf:"\u{1D55C}",Kopf:"\u{1D542}",kscr:"\u{1D4C0}",Kscr:"\u{1D4A6}",lAarr:"\u21DA",lacute:"\u013A",Lacute:"\u0139",laemptyv:"\u29B4",lagran:"\u2112",lambda:"\u03BB",Lambda:"\u039B",lang:"\u27E8",Lang:"\u27EA",langd:"\u2991",langle:"\u27E8",lap:"\u2A85",Laplacetrf:"\u2112",laquo:"\xAB",larr:"\u2190",lArr:"\u21D0",Larr:"\u219E",larrb:"\u21E4",larrbfs:"\u291F",larrfs:"\u291D",larrhk:"\u21A9",larrlp:"\u21AB",larrpl:"\u2939",larrsim:"\u2973",larrtl:"\u21A2",lat:"\u2AAB",latail:"\u2919",lAtail:"\u291B",late:"\u2AAD",lates:"\u2AAD\uFE00",lbarr:"\u290C",lBarr:"\u290E",lbbrk:"\u2772",lbrace:"{",lbrack:"[",lbrke:"\u298B",lbrksld:"\u298F",lbrkslu:"\u298D",lcaron:"\u013E",Lcaron:"\u013D",lcedil:"\u013C",Lcedil:"\u013B",lceil:"\u2308",lcub:"{",lcy:"\u043B",Lcy:"\u041B",ldca:"\u2936",ldquo:"\u201C",ldquor:"\u201E",ldrdhar:"\u2967",ldrushar:"\u294B",ldsh:"\u21B2",le:"\u2264",lE:"\u2266",LeftAngleBracket:"\u27E8",leftarrow:"\u2190",Leftarrow:"\u21D0",LeftArrow:"\u2190",LeftArrowBar:"\u21E4",LeftArrowRightArrow:"\u21C6",leftarrowtail:"\u21A2",LeftCeiling:"\u2308",LeftDoubleBracket:"\u27E6",LeftDownTeeVector:"\u2961",LeftDownVector:"\u21C3",LeftDownVectorBar:"\u2959",LeftFloor:"\u230A",leftharpoondown:"\u21BD",leftharpoonup:"\u21BC",leftleftarrows:"\u21C7",leftrightarrow:"\u2194",Leftrightarrow:"\u21D4",LeftRightArrow:"\u2194",leftrightarrows:"\u21C6",leftrightharpoons:"\u21CB",leftrightsquigarrow:"\u21AD",LeftRightVector:"\u294E",LeftTee:"\u22A3",LeftTeeArrow:"\u21A4",LeftTeeVector:"\u295A",leftthreetimes:"\u22CB",LeftTriangle:"\u22B2",LeftTriangleBar:"\u29CF",LeftTriangleEqual:"\u22B4",LeftUpDownVector:"\u2951",LeftUpTeeVector:"\u2960",LeftUpVector:"\u21BF",LeftUpVectorBar:"\u2958",LeftVector:"\u21BC",LeftVectorBar:"\u2952",leg:"\u22DA",lEg:"\u2A8B",leq:"\u2264",leqq:"\u2266",leqslant:"\u2A7D",les:"\u2A7D",lescc:"\u2AA8",lesdot:"\u2A7F",lesdoto:"\u2A81",lesdotor:"\u2A83",lesg:"\u22DA\uFE00",lesges:"\u2A93",lessapprox:"\u2A85",lessdot:"\u22D6",lesseqgtr:"\u22DA",lesseqqgtr:"\u2A8B",LessEqualGreater:"\u22DA",LessFullEqual:"\u2266",LessGreater:"\u2276",lessgtr:"\u2276",LessLess:"\u2AA1",lesssim:"\u2272",LessSlantEqual:"\u2A7D",LessTilde:"\u2272",lfisht:"\u297C",lfloor:"\u230A",lfr:"\u{1D529}",Lfr:"\u{1D50F}",lg:"\u2276",lgE:"\u2A91",lHar:"\u2962",lhard:"\u21BD",lharu:"\u21BC",lharul:"\u296A",lhblk:"\u2584",ljcy:"\u0459",LJcy:"\u0409",ll:"\u226A",Ll:"\u22D8",llarr:"\u21C7",llcorner:"\u231E",Lleftarrow:"\u21DA",llhard:"\u296B",lltri:"\u25FA",lmidot:"\u0140",Lmidot:"\u013F",lmoust:"\u23B0",lmoustache:"\u23B0",lnap:"\u2A89",lnapprox:"\u2A89",lne:"\u2A87",lnE:"\u2268",lneq:"\u2A87",lneqq:"\u2268",lnsim:"\u22E6",loang:"\u27EC",loarr:"\u21FD",lobrk:"\u27E6",longleftarrow:"\u27F5",Longleftarrow:"\u27F8",LongLeftArrow:"\u27F5",longleftrightarrow:"\u27F7",Longleftrightarrow:"\u27FA",LongLeftRightArrow:"\u27F7",longmapsto:"\u27FC",longrightarrow:"\u27F6",Longrightarrow:"\u27F9",LongRightArrow:"\u27F6",looparrowleft:"\u21AB",looparrowright:"\u21AC",lopar:"\u2985",lopf:"\u{1D55D}",Lopf:"\u{1D543}",loplus:"\u2A2D",lotimes:"\u2A34",lowast:"\u2217",lowbar:"_",LowerLeftArrow:"\u2199",LowerRightArrow:"\u2198",loz:"\u25CA",lozenge:"\u25CA",lozf:"\u29EB",lpar:"(",lparlt:"\u2993",lrarr:"\u21C6",lrcorner:"\u231F",lrhar:"\u21CB",lrhard:"\u296D",lrm:"\u200E",lrtri:"\u22BF",lsaquo:"\u2039",lscr:"\u{1D4C1}",Lscr:"\u2112",lsh:"\u21B0",Lsh:"\u21B0",lsim:"\u2272",lsime:"\u2A8D",lsimg:"\u2A8F",lsqb:"[",lsquo:"\u2018",lsquor:"\u201A",lstrok:"\u0142",Lstrok:"\u0141",lt:"<",Lt:"\u226A",LT:"<",ltcc:"\u2AA6",ltcir:"\u2A79",ltdot:"\u22D6",lthree:"\u22CB",ltimes:"\u22C9",ltlarr:"\u2976",ltquest:"\u2A7B",ltri:"\u25C3",ltrie:"\u22B4",ltrif:"\u25C2",ltrPar:"\u2996",lurdshar:"\u294A",luruhar:"\u2966",lvertneqq:"\u2268\uFE00",lvnE:"\u2268\uFE00",macr:"\xAF",male:"\u2642",malt:"\u2720",maltese:"\u2720",map:"\u21A6",Map:"\u2905",mapsto:"\u21A6",mapstodown:"\u21A7",mapstoleft:"\u21A4",mapstoup:"\u21A5",marker:"\u25AE",mcomma:"\u2A29",mcy:"\u043C",Mcy:"\u041C",mdash:"\u2014",mDDot:"\u223A",measuredangle:"\u2221",MediumSpace:"\u205F",Mellintrf:"\u2133",mfr:"\u{1D52A}",Mfr:"\u{1D510}",mho:"\u2127",micro:"\xB5",mid:"\u2223",midast:"*",midcir:"\u2AF0",middot:"\xB7",minus:"\u2212",minusb:"\u229F",minusd:"\u2238",minusdu:"\u2A2A",MinusPlus:"\u2213",mlcp:"\u2ADB",mldr:"\u2026",mnplus:"\u2213",models:"\u22A7",mopf:"\u{1D55E}",Mopf:"\u{1D544}",mp:"\u2213",mscr:"\u{1D4C2}",Mscr:"\u2133",mstpos:"\u223E",mu:"\u03BC",Mu:"\u039C",multimap:"\u22B8",mumap:"\u22B8",nabla:"\u2207",nacute:"\u0144",Nacute:"\u0143",nang:"\u2220\u20D2",nap:"\u2249",napE:"\u2A70\u0338",napid:"\u224B\u0338",napos:"\u0149",napprox:"\u2249",natur:"\u266E",natural:"\u266E",naturals:"\u2115",nbsp:"\xA0",nbump:"\u224E\u0338",nbumpe:"\u224F\u0338",ncap:"\u2A43",ncaron:"\u0148",Ncaron:"\u0147",ncedil:"\u0146",Ncedil:"\u0145",ncong:"\u2247",ncongdot:"\u2A6D\u0338",ncup:"\u2A42",ncy:"\u043D",Ncy:"\u041D",ndash:"\u2013",ne:"\u2260",nearhk:"\u2924",nearr:"\u2197",neArr:"\u21D7",nearrow:"\u2197",nedot:"\u2250\u0338",NegativeMediumSpace:"\u200B",NegativeThickSpace:"\u200B",NegativeThinSpace:"\u200B",NegativeVeryThinSpace:"\u200B",nequiv:"\u2262",nesear:"\u2928",nesim:"\u2242\u0338",NestedGreaterGreater:"\u226B",NestedLessLess:"\u226A",NewLine:`
`,nexist:"\u2204",nexists:"\u2204",nfr:"\u{1D52B}",Nfr:"\u{1D511}",nge:"\u2271",ngE:"\u2267\u0338",ngeq:"\u2271",ngeqq:"\u2267\u0338",ngeqslant:"\u2A7E\u0338",nges:"\u2A7E\u0338",nGg:"\u22D9\u0338",ngsim:"\u2275",ngt:"\u226F",nGt:"\u226B\u20D2",ngtr:"\u226F",nGtv:"\u226B\u0338",nharr:"\u21AE",nhArr:"\u21CE",nhpar:"\u2AF2",ni:"\u220B",nis:"\u22FC",nisd:"\u22FA",niv:"\u220B",njcy:"\u045A",NJcy:"\u040A",nlarr:"\u219A",nlArr:"\u21CD",nldr:"\u2025",nle:"\u2270",nlE:"\u2266\u0338",nleftarrow:"\u219A",nLeftarrow:"\u21CD",nleftrightarrow:"\u21AE",nLeftrightarrow:"\u21CE",nleq:"\u2270",nleqq:"\u2266\u0338",nleqslant:"\u2A7D\u0338",nles:"\u2A7D\u0338",nless:"\u226E",nLl:"\u22D8\u0338",nlsim:"\u2274",nlt:"\u226E",nLt:"\u226A\u20D2",nltri:"\u22EA",nltrie:"\u22EC",nLtv:"\u226A\u0338",nmid:"\u2224",NoBreak:"\u2060",NonBreakingSpace:"\xA0",nopf:"\u{1D55F}",Nopf:"\u2115",not:"\xAC",Not:"\u2AEC",NotCongruent:"\u2262",NotCupCap:"\u226D",NotDoubleVerticalBar:"\u2226",NotElement:"\u2209",NotEqual:"\u2260",NotEqualTilde:"\u2242\u0338",NotExists:"\u2204",NotGreater:"\u226F",NotGreaterEqual:"\u2271",NotGreaterFullEqual:"\u2267\u0338",NotGreaterGreater:"\u226B\u0338",NotGreaterLess:"\u2279",NotGreaterSlantEqual:"\u2A7E\u0338",NotGreaterTilde:"\u2275",NotHumpDownHump:"\u224E\u0338",NotHumpEqual:"\u224F\u0338",notin:"\u2209",notindot:"\u22F5\u0338",notinE:"\u22F9\u0338",notinva:"\u2209",notinvb:"\u22F7",notinvc:"\u22F6",NotLeftTriangle:"\u22EA",NotLeftTriangleBar:"\u29CF\u0338",NotLeftTriangleEqual:"\u22EC",NotLess:"\u226E",NotLessEqual:"\u2270",NotLessGreater:"\u2278",NotLessLess:"\u226A\u0338",NotLessSlantEqual:"\u2A7D\u0338",NotLessTilde:"\u2274",NotNestedGreaterGreater:"\u2AA2\u0338",NotNestedLessLess:"\u2AA1\u0338",notni:"\u220C",notniva:"\u220C",notnivb:"\u22FE",notnivc:"\u22FD",NotPrecedes:"\u2280",NotPrecedesEqual:"\u2AAF\u0338",NotPrecedesSlantEqual:"\u22E0",NotReverseElement:"\u220C",NotRightTriangle:"\u22EB",NotRightTriangleBar:"\u29D0\u0338",NotRightTriangleEqual:"\u22ED",NotSquareSubset:"\u228F\u0338",NotSquareSubsetEqual:"\u22E2",NotSquareSuperset:"\u2290\u0338",NotSquareSupersetEqual:"\u22E3",NotSubset:"\u2282\u20D2",NotSubsetEqual:"\u2288",NotSucceeds:"\u2281",NotSucceedsEqual:"\u2AB0\u0338",NotSucceedsSlantEqual:"\u22E1",NotSucceedsTilde:"\u227F\u0338",NotSuperset:"\u2283\u20D2",NotSupersetEqual:"\u2289",NotTilde:"\u2241",NotTildeEqual:"\u2244",NotTildeFullEqual:"\u2247",NotTildeTilde:"\u2249",NotVerticalBar:"\u2224",npar:"\u2226",nparallel:"\u2226",nparsl:"\u2AFD\u20E5",npart:"\u2202\u0338",npolint:"\u2A14",npr:"\u2280",nprcue:"\u22E0",npre:"\u2AAF\u0338",nprec:"\u2280",npreceq:"\u2AAF\u0338",nrarr:"\u219B",nrArr:"\u21CF",nrarrc:"\u2933\u0338",nrarrw:"\u219D\u0338",nrightarrow:"\u219B",nRightarrow:"\u21CF",nrtri:"\u22EB",nrtrie:"\u22ED",nsc:"\u2281",nsccue:"\u22E1",nsce:"\u2AB0\u0338",nscr:"\u{1D4C3}",Nscr:"\u{1D4A9}",nshortmid:"\u2224",nshortparallel:"\u2226",nsim:"\u2241",nsime:"\u2244",nsimeq:"\u2244",nsmid:"\u2224",nspar:"\u2226",nsqsube:"\u22E2",nsqsupe:"\u22E3",nsub:"\u2284",nsube:"\u2288",nsubE:"\u2AC5\u0338",nsubset:"\u2282\u20D2",nsubseteq:"\u2288",nsubseteqq:"\u2AC5\u0338",nsucc:"\u2281",nsucceq:"\u2AB0\u0338",nsup:"\u2285",nsupe:"\u2289",nsupE:"\u2AC6\u0338",nsupset:"\u2283\u20D2",nsupseteq:"\u2289",nsupseteqq:"\u2AC6\u0338",ntgl:"\u2279",ntilde:"\xF1",Ntilde:"\xD1",ntlg:"\u2278",ntriangleleft:"\u22EA",ntrianglelefteq:"\u22EC",ntriangleright:"\u22EB",ntrianglerighteq:"\u22ED",nu:"\u03BD",Nu:"\u039D",num:"#",numero:"\u2116",numsp:"\u2007",nvap:"\u224D\u20D2",nvdash:"\u22AC",nvDash:"\u22AD",nVdash:"\u22AE",nVDash:"\u22AF",nvge:"\u2265\u20D2",nvgt:">\u20D2",nvHarr:"\u2904",nvinfin:"\u29DE",nvlArr:"\u2902",nvle:"\u2264\u20D2",nvlt:"<\u20D2",nvltrie:"\u22B4\u20D2",nvrArr:"\u2903",nvrtrie:"\u22B5\u20D2",nvsim:"\u223C\u20D2",nwarhk:"\u2923",nwarr:"\u2196",nwArr:"\u21D6",nwarrow:"\u2196",nwnear:"\u2927",oacute:"\xF3",Oacute:"\xD3",oast:"\u229B",ocir:"\u229A",ocirc:"\xF4",Ocirc:"\xD4",ocy:"\u043E",Ocy:"\u041E",odash:"\u229D",odblac:"\u0151",Odblac:"\u0150",odiv:"\u2A38",odot:"\u2299",odsold:"\u29BC",oelig:"\u0153",OElig:"\u0152",ofcir:"\u29BF",ofr:"\u{1D52C}",Ofr:"\u{1D512}",ogon:"\u02DB",ograve:"\xF2",Ograve:"\xD2",ogt:"\u29C1",ohbar:"\u29B5",ohm:"\u03A9",oint:"\u222E",olarr:"\u21BA",olcir:"\u29BE",olcross:"\u29BB",oline:"\u203E",olt:"\u29C0",omacr:"\u014D",Omacr:"\u014C",omega:"\u03C9",Omega:"\u03A9",omicron:"\u03BF",Omicron:"\u039F",omid:"\u29B6",ominus:"\u2296",oopf:"\u{1D560}",Oopf:"\u{1D546}",opar:"\u29B7",OpenCurlyDoubleQuote:"\u201C",OpenCurlyQuote:"\u2018",operp:"\u29B9",oplus:"\u2295",or:"\u2228",Or:"\u2A54",orarr:"\u21BB",ord:"\u2A5D",order:"\u2134",orderof:"\u2134",ordf:"\xAA",ordm:"\xBA",origof:"\u22B6",oror:"\u2A56",orslope:"\u2A57",orv:"\u2A5B",oS:"\u24C8",oscr:"\u2134",Oscr:"\u{1D4AA}",oslash:"\xF8",Oslash:"\xD8",osol:"\u2298",otilde:"\xF5",Otilde:"\xD5",otimes:"\u2297",Otimes:"\u2A37",otimesas:"\u2A36",ouml:"\xF6",Ouml:"\xD6",ovbar:"\u233D",OverBar:"\u203E",OverBrace:"\u23DE",OverBracket:"\u23B4",OverParenthesis:"\u23DC",par:"\u2225",para:"\xB6",parallel:"\u2225",parsim:"\u2AF3",parsl:"\u2AFD",part:"\u2202",PartialD:"\u2202",pcy:"\u043F",Pcy:"\u041F",percnt:"%",period:".",permil:"\u2030",perp:"\u22A5",pertenk:"\u2031",pfr:"\u{1D52D}",Pfr:"\u{1D513}",phi:"\u03C6",Phi:"\u03A6",phiv:"\u03D5",phmmat:"\u2133",phone:"\u260E",pi:"\u03C0",Pi:"\u03A0",pitchfork:"\u22D4",piv:"\u03D6",planck:"\u210F",planckh:"\u210E",plankv:"\u210F",plus:"+",plusacir:"\u2A23",plusb:"\u229E",pluscir:"\u2A22",plusdo:"\u2214",plusdu:"\u2A25",pluse:"\u2A72",PlusMinus:"\xB1",plusmn:"\xB1",plussim:"\u2A26",plustwo:"\u2A27",pm:"\xB1",Poincareplane:"\u210C",pointint:"\u2A15",popf:"\u{1D561}",Popf:"\u2119",pound:"\xA3",pr:"\u227A",Pr:"\u2ABB",prap:"\u2AB7",prcue:"\u227C",pre:"\u2AAF",prE:"\u2AB3",prec:"\u227A",precapprox:"\u2AB7",preccurlyeq:"\u227C",Precedes:"\u227A",PrecedesEqual:"\u2AAF",PrecedesSlantEqual:"\u227C",PrecedesTilde:"\u227E",preceq:"\u2AAF",precnapprox:"\u2AB9",precneqq:"\u2AB5",precnsim:"\u22E8",precsim:"\u227E",prime:"\u2032",Prime:"\u2033",primes:"\u2119",prnap:"\u2AB9",prnE:"\u2AB5",prnsim:"\u22E8",prod:"\u220F",Product:"\u220F",profalar:"\u232E",profline:"\u2312",profsurf:"\u2313",prop:"\u221D",Proportion:"\u2237",Proportional:"\u221D",propto:"\u221D",prsim:"\u227E",prurel:"\u22B0",pscr:"\u{1D4C5}",Pscr:"\u{1D4AB}",psi:"\u03C8",Psi:"\u03A8",puncsp:"\u2008",qfr:"\u{1D52E}",Qfr:"\u{1D514}",qint:"\u2A0C",qopf:"\u{1D562}",Qopf:"\u211A",qprime:"\u2057",qscr:"\u{1D4C6}",Qscr:"\u{1D4AC}",quaternions:"\u210D",quatint:"\u2A16",quest:"?",questeq:"\u225F",quot:'"',QUOT:'"',rAarr:"\u21DB",race:"\u223D\u0331",racute:"\u0155",Racute:"\u0154",radic:"\u221A",raemptyv:"\u29B3",rang:"\u27E9",Rang:"\u27EB",rangd:"\u2992",range:"\u29A5",rangle:"\u27E9",raquo:"\xBB",rarr:"\u2192",rArr:"\u21D2",Rarr:"\u21A0",rarrap:"\u2975",rarrb:"\u21E5",rarrbfs:"\u2920",rarrc:"\u2933",rarrfs:"\u291E",rarrhk:"\u21AA",rarrlp:"\u21AC",rarrpl:"\u2945",rarrsim:"\u2974",rarrtl:"\u21A3",Rarrtl:"\u2916",rarrw:"\u219D",ratail:"\u291A",rAtail:"\u291C",ratio:"\u2236",rationals:"\u211A",rbarr:"\u290D",rBarr:"\u290F",RBarr:"\u2910",rbbrk:"\u2773",rbrace:"}",rbrack:"]",rbrke:"\u298C",rbrksld:"\u298E",rbrkslu:"\u2990",rcaron:"\u0159",Rcaron:"\u0158",rcedil:"\u0157",Rcedil:"\u0156",rceil:"\u2309",rcub:"}",rcy:"\u0440",Rcy:"\u0420",rdca:"\u2937",rdldhar:"\u2969",rdquo:"\u201D",rdquor:"\u201D",rdsh:"\u21B3",Re:"\u211C",real:"\u211C",realine:"\u211B",realpart:"\u211C",reals:"\u211D",rect:"\u25AD",reg:"\xAE",REG:"\xAE",ReverseElement:"\u220B",ReverseEquilibrium:"\u21CB",ReverseUpEquilibrium:"\u296F",rfisht:"\u297D",rfloor:"\u230B",rfr:"\u{1D52F}",Rfr:"\u211C",rHar:"\u2964",rhard:"\u21C1",rharu:"\u21C0",rharul:"\u296C",rho:"\u03C1",Rho:"\u03A1",rhov:"\u03F1",RightAngleBracket:"\u27E9",rightarrow:"\u2192",Rightarrow:"\u21D2",RightArrow:"\u2192",RightArrowBar:"\u21E5",RightArrowLeftArrow:"\u21C4",rightarrowtail:"\u21A3",RightCeiling:"\u2309",RightDoubleBracket:"\u27E7",RightDownTeeVector:"\u295D",RightDownVector:"\u21C2",RightDownVectorBar:"\u2955",RightFloor:"\u230B",rightharpoondown:"\u21C1",rightharpoonup:"\u21C0",rightleftarrows:"\u21C4",rightleftharpoons:"\u21CC",rightrightarrows:"\u21C9",rightsquigarrow:"\u219D",RightTee:"\u22A2",RightTeeArrow:"\u21A6",RightTeeVector:"\u295B",rightthreetimes:"\u22CC",RightTriangle:"\u22B3",RightTriangleBar:"\u29D0",RightTriangleEqual:"\u22B5",RightUpDownVector:"\u294F",RightUpTeeVector:"\u295C",RightUpVector:"\u21BE",RightUpVectorBar:"\u2954",RightVector:"\u21C0",RightVectorBar:"\u2953",ring:"\u02DA",risingdotseq:"\u2253",rlarr:"\u21C4",rlhar:"\u21CC",rlm:"\u200F",rmoust:"\u23B1",rmoustache:"\u23B1",rnmid:"\u2AEE",roang:"\u27ED",roarr:"\u21FE",robrk:"\u27E7",ropar:"\u2986",ropf:"\u{1D563}",Ropf:"\u211D",roplus:"\u2A2E",rotimes:"\u2A35",RoundImplies:"\u2970",rpar:")",rpargt:"\u2994",rppolint:"\u2A12",rrarr:"\u21C9",Rrightarrow:"\u21DB",rsaquo:"\u203A",rscr:"\u{1D4C7}",Rscr:"\u211B",rsh:"\u21B1",Rsh:"\u21B1",rsqb:"]",rsquo:"\u2019",rsquor:"\u2019",rthree:"\u22CC",rtimes:"\u22CA",rtri:"\u25B9",rtrie:"\u22B5",rtrif:"\u25B8",rtriltri:"\u29CE",RuleDelayed:"\u29F4",ruluhar:"\u2968",rx:"\u211E",sacute:"\u015B",Sacute:"\u015A",sbquo:"\u201A",sc:"\u227B",Sc:"\u2ABC",scap:"\u2AB8",scaron:"\u0161",Scaron:"\u0160",sccue:"\u227D",sce:"\u2AB0",scE:"\u2AB4",scedil:"\u015F",Scedil:"\u015E",scirc:"\u015D",Scirc:"\u015C",scnap:"\u2ABA",scnE:"\u2AB6",scnsim:"\u22E9",scpolint:"\u2A13",scsim:"\u227F",scy:"\u0441",Scy:"\u0421",sdot:"\u22C5",sdotb:"\u22A1",sdote:"\u2A66",searhk:"\u2925",searr:"\u2198",seArr:"\u21D8",searrow:"\u2198",sect:"\xA7",semi:";",seswar:"\u2929",setminus:"\u2216",setmn:"\u2216",sext:"\u2736",sfr:"\u{1D530}",Sfr:"\u{1D516}",sfrown:"\u2322",sharp:"\u266F",shchcy:"\u0449",SHCHcy:"\u0429",shcy:"\u0448",SHcy:"\u0428",ShortDownArrow:"\u2193",ShortLeftArrow:"\u2190",shortmid:"\u2223",shortparallel:"\u2225",ShortRightArrow:"\u2192",ShortUpArrow:"\u2191",shy:"\xAD",sigma:"\u03C3",Sigma:"\u03A3",sigmaf:"\u03C2",sigmav:"\u03C2",sim:"\u223C",simdot:"\u2A6A",sime:"\u2243",simeq:"\u2243",simg:"\u2A9E",simgE:"\u2AA0",siml:"\u2A9D",simlE:"\u2A9F",simne:"\u2246",simplus:"\u2A24",simrarr:"\u2972",slarr:"\u2190",SmallCircle:"\u2218",smallsetminus:"\u2216",smashp:"\u2A33",smeparsl:"\u29E4",smid:"\u2223",smile:"\u2323",smt:"\u2AAA",smte:"\u2AAC",smtes:"\u2AAC\uFE00",softcy:"\u044C",SOFTcy:"\u042C",sol:"/",solb:"\u29C4",solbar:"\u233F",sopf:"\u{1D564}",Sopf:"\u{1D54A}",spades:"\u2660",spadesuit:"\u2660",spar:"\u2225",sqcap:"\u2293",sqcaps:"\u2293\uFE00",sqcup:"\u2294",sqcups:"\u2294\uFE00",Sqrt:"\u221A",sqsub:"\u228F",sqsube:"\u2291",sqsubset:"\u228F",sqsubseteq:"\u2291",sqsup:"\u2290",sqsupe:"\u2292",sqsupset:"\u2290",sqsupseteq:"\u2292",squ:"\u25A1",square:"\u25A1",Square:"\u25A1",SquareIntersection:"\u2293",SquareSubset:"\u228F",SquareSubsetEqual:"\u2291",SquareSuperset:"\u2290",SquareSupersetEqual:"\u2292",SquareUnion:"\u2294",squarf:"\u25AA",squf:"\u25AA",srarr:"\u2192",sscr:"\u{1D4C8}",Sscr:"\u{1D4AE}",ssetmn:"\u2216",ssmile:"\u2323",sstarf:"\u22C6",star:"\u2606",Star:"\u22C6",starf:"\u2605",straightepsilon:"\u03F5",straightphi:"\u03D5",strns:"\xAF",sub:"\u2282",Sub:"\u22D0",subdot:"\u2ABD",sube:"\u2286",subE:"\u2AC5",subedot:"\u2AC3",submult:"\u2AC1",subne:"\u228A",subnE:"\u2ACB",subplus:"\u2ABF",subrarr:"\u2979",subset:"\u2282",Subset:"\u22D0",subseteq:"\u2286",subseteqq:"\u2AC5",SubsetEqual:"\u2286",subsetneq:"\u228A",subsetneqq:"\u2ACB",subsim:"\u2AC7",subsub:"\u2AD5",subsup:"\u2AD3",succ:"\u227B",succapprox:"\u2AB8",succcurlyeq:"\u227D",Succeeds:"\u227B",SucceedsEqual:"\u2AB0",SucceedsSlantEqual:"\u227D",SucceedsTilde:"\u227F",succeq:"\u2AB0",succnapprox:"\u2ABA",succneqq:"\u2AB6",succnsim:"\u22E9",succsim:"\u227F",SuchThat:"\u220B",sum:"\u2211",Sum:"\u2211",sung:"\u266A",sup:"\u2283",Sup:"\u22D1",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",supdot:"\u2ABE",supdsub:"\u2AD8",supe:"\u2287",supE:"\u2AC6",supedot:"\u2AC4",Superset:"\u2283",SupersetEqual:"\u2287",suphsol:"\u27C9",suphsub:"\u2AD7",suplarr:"\u297B",supmult:"\u2AC2",supne:"\u228B",supnE:"\u2ACC",supplus:"\u2AC0",supset:"\u2283",Supset:"\u22D1",supseteq:"\u2287",supseteqq:"\u2AC6",supsetneq:"\u228B",supsetneqq:"\u2ACC",supsim:"\u2AC8",supsub:"\u2AD4",supsup:"\u2AD6",swarhk:"\u2926",swarr:"\u2199",swArr:"\u21D9",swarrow:"\u2199",swnwar:"\u292A",szlig:"\xDF",Tab:"	",target:"\u2316",tau:"\u03C4",Tau:"\u03A4",tbrk:"\u23B4",tcaron:"\u0165",Tcaron:"\u0164",tcedil:"\u0163",Tcedil:"\u0162",tcy:"\u0442",Tcy:"\u0422",tdot:"\u20DB",telrec:"\u2315",tfr:"\u{1D531}",Tfr:"\u{1D517}",there4:"\u2234",therefore:"\u2234",Therefore:"\u2234",theta:"\u03B8",Theta:"\u0398",thetasym:"\u03D1",thetav:"\u03D1",thickapprox:"\u2248",thicksim:"\u223C",ThickSpace:"\u205F\u200A",thinsp:"\u2009",ThinSpace:"\u2009",thkap:"\u2248",thksim:"\u223C",thorn:"\xFE",THORN:"\xDE",tilde:"\u02DC",Tilde:"\u223C",TildeEqual:"\u2243",TildeFullEqual:"\u2245",TildeTilde:"\u2248",times:"\xD7",timesb:"\u22A0",timesbar:"\u2A31",timesd:"\u2A30",tint:"\u222D",toea:"\u2928",top:"\u22A4",topbot:"\u2336",topcir:"\u2AF1",topf:"\u{1D565}",Topf:"\u{1D54B}",topfork:"\u2ADA",tosa:"\u2929",tprime:"\u2034",trade:"\u2122",TRADE:"\u2122",triangle:"\u25B5",triangledown:"\u25BF",triangleleft:"\u25C3",trianglelefteq:"\u22B4",triangleq:"\u225C",triangleright:"\u25B9",trianglerighteq:"\u22B5",tridot:"\u25EC",trie:"\u225C",triminus:"\u2A3A",TripleDot:"\u20DB",triplus:"\u2A39",trisb:"\u29CD",tritime:"\u2A3B",trpezium:"\u23E2",tscr:"\u{1D4C9}",Tscr:"\u{1D4AF}",tscy:"\u0446",TScy:"\u0426",tshcy:"\u045B",TSHcy:"\u040B",tstrok:"\u0167",Tstrok:"\u0166",twixt:"\u226C",twoheadleftarrow:"\u219E",twoheadrightarrow:"\u21A0",uacute:"\xFA",Uacute:"\xDA",uarr:"\u2191",uArr:"\u21D1",Uarr:"\u219F",Uarrocir:"\u2949",ubrcy:"\u045E",Ubrcy:"\u040E",ubreve:"\u016D",Ubreve:"\u016C",ucirc:"\xFB",Ucirc:"\xDB",ucy:"\u0443",Ucy:"\u0423",udarr:"\u21C5",udblac:"\u0171",Udblac:"\u0170",udhar:"\u296E",ufisht:"\u297E",ufr:"\u{1D532}",Ufr:"\u{1D518}",ugrave:"\xF9",Ugrave:"\xD9",uHar:"\u2963",uharl:"\u21BF",uharr:"\u21BE",uhblk:"\u2580",ulcorn:"\u231C",ulcorner:"\u231C",ulcrop:"\u230F",ultri:"\u25F8",umacr:"\u016B",Umacr:"\u016A",uml:"\xA8",UnderBar:"_",UnderBrace:"\u23DF",UnderBracket:"\u23B5",UnderParenthesis:"\u23DD",Union:"\u22C3",UnionPlus:"\u228E",uogon:"\u0173",Uogon:"\u0172",uopf:"\u{1D566}",Uopf:"\u{1D54C}",uparrow:"\u2191",Uparrow:"\u21D1",UpArrow:"\u2191",UpArrowBar:"\u2912",UpArrowDownArrow:"\u21C5",updownarrow:"\u2195",Updownarrow:"\u21D5",UpDownArrow:"\u2195",UpEquilibrium:"\u296E",upharpoonleft:"\u21BF",upharpoonright:"\u21BE",uplus:"\u228E",UpperLeftArrow:"\u2196",UpperRightArrow:"\u2197",upsi:"\u03C5",Upsi:"\u03D2",upsih:"\u03D2",upsilon:"\u03C5",Upsilon:"\u03A5",UpTee:"\u22A5",UpTeeArrow:"\u21A5",upuparrows:"\u21C8",urcorn:"\u231D",urcorner:"\u231D",urcrop:"\u230E",uring:"\u016F",Uring:"\u016E",urtri:"\u25F9",uscr:"\u{1D4CA}",Uscr:"\u{1D4B0}",utdot:"\u22F0",utilde:"\u0169",Utilde:"\u0168",utri:"\u25B5",utrif:"\u25B4",uuarr:"\u21C8",uuml:"\xFC",Uuml:"\xDC",uwangle:"\u29A7",vangrt:"\u299C",varepsilon:"\u03F5",varkappa:"\u03F0",varnothing:"\u2205",varphi:"\u03D5",varpi:"\u03D6",varpropto:"\u221D",varr:"\u2195",vArr:"\u21D5",varrho:"\u03F1",varsigma:"\u03C2",varsubsetneq:"\u228A\uFE00",varsubsetneqq:"\u2ACB\uFE00",varsupsetneq:"\u228B\uFE00",varsupsetneqq:"\u2ACC\uFE00",vartheta:"\u03D1",vartriangleleft:"\u22B2",vartriangleright:"\u22B3",vBar:"\u2AE8",Vbar:"\u2AEB",vBarv:"\u2AE9",vcy:"\u0432",Vcy:"\u0412",vdash:"\u22A2",vDash:"\u22A8",Vdash:"\u22A9",VDash:"\u22AB",Vdashl:"\u2AE6",vee:"\u2228",Vee:"\u22C1",veebar:"\u22BB",veeeq:"\u225A",vellip:"\u22EE",verbar:"|",Verbar:"\u2016",vert:"|",Vert:"\u2016",VerticalBar:"\u2223",VerticalLine:"|",VerticalSeparator:"\u2758",VerticalTilde:"\u2240",VeryThinSpace:"\u200A",vfr:"\u{1D533}",Vfr:"\u{1D519}",vltri:"\u22B2",vnsub:"\u2282\u20D2",vnsup:"\u2283\u20D2",vopf:"\u{1D567}",Vopf:"\u{1D54D}",vprop:"\u221D",vrtri:"\u22B3",vscr:"\u{1D4CB}",Vscr:"\u{1D4B1}",vsubne:"\u228A\uFE00",vsubnE:"\u2ACB\uFE00",vsupne:"\u228B\uFE00",vsupnE:"\u2ACC\uFE00",Vvdash:"\u22AA",vzigzag:"\u299A",wcirc:"\u0175",Wcirc:"\u0174",wedbar:"\u2A5F",wedge:"\u2227",Wedge:"\u22C0",wedgeq:"\u2259",weierp:"\u2118",wfr:"\u{1D534}",Wfr:"\u{1D51A}",wopf:"\u{1D568}",Wopf:"\u{1D54E}",wp:"\u2118",wr:"\u2240",wreath:"\u2240",wscr:"\u{1D4CC}",Wscr:"\u{1D4B2}",xcap:"\u22C2",xcirc:"\u25EF",xcup:"\u22C3",xdtri:"\u25BD",xfr:"\u{1D535}",Xfr:"\u{1D51B}",xharr:"\u27F7",xhArr:"\u27FA",xi:"\u03BE",Xi:"\u039E",xlarr:"\u27F5",xlArr:"\u27F8",xmap:"\u27FC",xnis:"\u22FB",xodot:"\u2A00",xopf:"\u{1D569}",Xopf:"\u{1D54F}",xoplus:"\u2A01",xotime:"\u2A02",xrarr:"\u27F6",xrArr:"\u27F9",xscr:"\u{1D4CD}",Xscr:"\u{1D4B3}",xsqcup:"\u2A06",xuplus:"\u2A04",xutri:"\u25B3",xvee:"\u22C1",xwedge:"\u22C0",yacute:"\xFD",Yacute:"\xDD",yacy:"\u044F",YAcy:"\u042F",ycirc:"\u0177",Ycirc:"\u0176",ycy:"\u044B",Ycy:"\u042B",yen:"\xA5",yfr:"\u{1D536}",Yfr:"\u{1D51C}",yicy:"\u0457",YIcy:"\u0407",yopf:"\u{1D56A}",Yopf:"\u{1D550}",yscr:"\u{1D4CE}",Yscr:"\u{1D4B4}",yucy:"\u044E",YUcy:"\u042E",yuml:"\xFF",Yuml:"\u0178",zacute:"\u017A",Zacute:"\u0179",zcaron:"\u017E",Zcaron:"\u017D",zcy:"\u0437",Zcy:"\u0417",zdot:"\u017C",Zdot:"\u017B",zeetrf:"\u2128",ZeroWidthSpace:"\u200B",zeta:"\u03B6",Zeta:"\u0396",zfr:"\u{1D537}",Zfr:"\u2128",zhcy:"\u0436",ZHcy:"\u0416",zigrarr:"\u21DD",zopf:"\u{1D56B}",Zopf:"\u2124",zscr:"\u{1D4CF}",Zscr:"\u{1D4B5}",zwj:"\u200D",zwnj:"\u200C"},E={aacute:"\xE1",Aacute:"\xC1",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",aelig:"\xE6",AElig:"\xC6",agrave:"\xE0",Agrave:"\xC0",amp:"&",AMP:"&",aring:"\xE5",Aring:"\xC5",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",brvbar:"\xA6",ccedil:"\xE7",Ccedil:"\xC7",cedil:"\xB8",cent:"\xA2",copy:"\xA9",COPY:"\xA9",curren:"\xA4",deg:"\xB0",divide:"\xF7",eacute:"\xE9",Eacute:"\xC9",ecirc:"\xEA",Ecirc:"\xCA",egrave:"\xE8",Egrave:"\xC8",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",frac12:"\xBD",frac14:"\xBC",frac34:"\xBE",gt:">",GT:">",iacute:"\xED",Iacute:"\xCD",icirc:"\xEE",Icirc:"\xCE",iexcl:"\xA1",igrave:"\xEC",Igrave:"\xCC",iquest:"\xBF",iuml:"\xEF",Iuml:"\xCF",laquo:"\xAB",lt:"<",LT:"<",macr:"\xAF",micro:"\xB5",middot:"\xB7",nbsp:"\xA0",not:"\xAC",ntilde:"\xF1",Ntilde:"\xD1",oacute:"\xF3",Oacute:"\xD3",ocirc:"\xF4",Ocirc:"\xD4",ograve:"\xF2",Ograve:"\xD2",ordf:"\xAA",ordm:"\xBA",oslash:"\xF8",Oslash:"\xD8",otilde:"\xF5",Otilde:"\xD5",ouml:"\xF6",Ouml:"\xD6",para:"\xB6",plusmn:"\xB1",pound:"\xA3",quot:'"',QUOT:'"',raquo:"\xBB",reg:"\xAE",REG:"\xAE",sect:"\xA7",shy:"\xAD",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",szlig:"\xDF",thorn:"\xFE",THORN:"\xDE",times:"\xD7",uacute:"\xFA",Uacute:"\xDA",ucirc:"\xFB",Ucirc:"\xDB",ugrave:"\xF9",Ugrave:"\xD9",uml:"\xA8",uuml:"\xFC",Uuml:"\xDC",yacute:"\xFD",Yacute:"\xDD",yen:"\xA5",yuml:"\xFF"},y={"0":"\uFFFD","128":"\u20AC","130":"\u201A","131":"\u0192","132":"\u201E","133":"\u2026","134":"\u2020","135":"\u2021","136":"\u02C6","137":"\u2030","138":"\u0160","139":"\u2039","140":"\u0152","142":"\u017D","145":"\u2018","146":"\u2019","147":"\u201C","148":"\u201D","149":"\u2022","150":"\u2013","151":"\u2014","152":"\u02DC","153":"\u2122","154":"\u0161","155":"\u203A","156":"\u0153","158":"\u017E","159":"\u0178"},S=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],C=String.fromCharCode,F={},M=F.hasOwnProperty,T=function(Z,z){return M.call(Z,z)},x=function(Z,z){for(var ue=-1,ke=Z.length;++ue<ke;)if(Z[ue]==z)return!0;return!1},_=function(Z,z){if(!Z)return z;var ue={},ke;for(ke in z)ue[ke]=T(Z,ke)?Z[ke]:z[ke];return ue},k=function(Z,z){var ue="";return Z>=55296&&Z<=57343||Z>1114111?(z&&q("character reference outside the permissible Unicode range"),"\uFFFD"):T(y,Z)?(z&&q("disallowed character reference"),y[Z]):(z&&x(S,Z)&&q("disallowed character reference"),Z>65535&&(Z-=65536,ue+=C(Z>>>10&1023|55296),Z=56320|Z&1023),ue+=C(Z),ue)},D=function(Z){return"&#x"+Z.toString(16).toUpperCase()+";"},R=function(Z){return"&#"+Z+";"},q=function(Z){throw Error("Parse error: "+Z)},H=function(Z,z){z=_(z,H.options);var ue=z.strict;ue&&m.test(Z)&&q("forbidden code point");var ke=z.encodeEverything,Ce=z.useNamedReferences,ve=z.allowUnsafeSymbols,Ee=z.decimal?R:D,et=function(Pe){return Ee(Pe.charCodeAt(0))};return ke?(Z=Z.replace(i,function(Pe){return Ce&&T(s,Pe)?"&"+s[Pe]+";":et(Pe)}),Ce&&(Z=Z.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),Ce&&(Z=Z.replace(l,function(Pe){return"&"+s[Pe]+";"}))):Ce?(ve||(Z=Z.replace(d,function(Pe){return"&"+s[Pe]+";"})),Z=Z.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;"),Z=Z.replace(l,function(Pe){return"&"+s[Pe]+";"})):ve||(Z=Z.replace(d,et)),Z.replace(a,function(Pe){var ht=Pe.charCodeAt(0),Bt=Pe.charCodeAt(1),pt=(ht-55296)*1024+Bt-56320+65536;return Ee(pt)}).replace(o,et)};H.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var ne=function(Z,z){z=_(z,ne.options);var ue=z.strict;return ue&&c.test(Z)&&q("malformed character reference"),Z.replace(g,function(ke,Ce,ve,Ee,et,Pe,ht,Bt,pt){var Ct,xt,Lt,Pt,Wt,Qt;return Ce?(Wt=Ce,p[Wt]):ve?(Wt=ve,Qt=Ee,Qt&&z.isAttributeValue?(ue&&Qt=="="&&q("`&` did not start a character reference"),ke):(ue&&q("named character reference was not terminated by a semicolon"),E[Wt]+(Qt||""))):et?(Lt=et,xt=Pe,ue&&!xt&&q("character reference was not terminated by a semicolon"),Ct=parseInt(Lt,10),k(Ct,ue)):ht?(Pt=ht,xt=Bt,ue&&!xt&&q("character reference was not terminated by a semicolon"),Ct=parseInt(Pt,16),k(Ct,ue)):(ue&&q("named character reference was not terminated by a semicolon"),ke)})};ne.options={isAttributeValue:!1,strict:!1};var ye=function(Z){return Z.replace(d,function(z){return u[z]})},ae={version:"1.2.0",encode:H,decode:ne,escape:ye,unescape:ne};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd)define(function(){return ae});else if(e&&!e.nodeType)if(n)n.exports=ae;else for(var me in ae)T(ae,me)&&(e[me]=ae[me]);else t.he=ae})(Aa)});var Gc=ze((ra,aa)=>{(function(t,e){if(typeof ra=="object"){var n=e();typeof aa=="object"&&aa&&aa.exports&&(ra=aa.exports=n),ra.randomColor=n}else typeof define=="function"&&define.amd?define([],e):t.randomColor=e()})(ra,function(){var t=null,e={};E();var n=[],r=function(T){if(T=T||{},T.seed!==void 0&&T.seed!==null&&T.seed===parseInt(T.seed,10))t=T.seed;else if(typeof T.seed=="string")t=F(T.seed);else{if(T.seed!==void 0&&T.seed!==null)throw new TypeError("The seed value must be an integer or string");t=null}var x,_,k;if(T.count!==null&&T.count!==void 0){for(var D=T.count,R=[],q=0;q<T.count;q++)n.push(!1);for(T.count=null;D>R.length;){var H=r(T);t!==null&&(T.seed=t),R.push(H)}return T.count=D,R}return x=a(T),_=i(x,T),k=o(x,_,T),l([x,_,k],T)};function a(T){if(n.length>0){var x=M(T.hue),_=m(x),k=(x[1]-x[0])/n.length,D=parseInt((_-x[0])/k);n[D]===!0?D=(D+2)%n.length:n[D]=!0;var R=(x[0]+D*k)%359,q=(x[0]+(D+1)*k)%359;return x=[R,q],_=m(x),_<0&&(_=360+_),_}else{var x=d(T.hue);return _=m(x),_<0&&(_=360+_),_}}function i(T,x){if(x.hue==="monochrome")return 0;if(x.luminosity==="random")return m([0,100]);var _=u(T),k=_[0],D=_[1];switch(x.luminosity){case"bright":k=55;break;case"dark":k=D-10;break;case"light":D=55;break}return m([k,D])}function o(T,x,_){var k=s(T,x),D=100;switch(_.luminosity){case"dark":D=k+20;break;case"light":k=(D+k)/2;break;case"random":k=0,D=100;break}return m([k,D])}function l(T,x){switch(x.format){case"hsvArray":return T;case"hslArray":return C(T);case"hsl":var _=C(T);return"hsl("+_[0]+", "+_[1]+"%, "+_[2]+"%)";case"hsla":var k=C(T),D=x.alpha||Math.random();return"hsla("+k[0]+", "+k[1]+"%, "+k[2]+"%, "+D+")";case"rgbArray":return y(T);case"rgb":var R=y(T);return"rgb("+R.join(", ")+")";case"rgba":var q=y(T),D=x.alpha||Math.random();return"rgba("+q.join(", ")+", "+D+")";default:return g(T)}}function s(T,x){for(var _=c(T).lowerBounds,k=0;k<_.length-1;k++){var D=_[k][0],R=_[k][1],q=_[k+1][0],H=_[k+1][1];if(x>=D&&x<=q){var ne=(H-R)/(q-D),ye=R-ne*D;return ne*x+ye}}return 0}function d(T){if(typeof parseInt(T)=="number"){var x=parseInt(T);if(x<360&&x>0)return[x,x]}if(typeof T=="string"){if(e[T]){var _=e[T];if(_.hueRange)return _.hueRange}else if(T.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)){var k=S(T)[0];return[k,k]}}return[0,360]}function u(T){return c(T).saturationRange}function c(T){T>=334&&T<=360&&(T-=360);for(var x in e){var _=e[x];if(_.hueRange&&T>=_.hueRange[0]&&T<=_.hueRange[1])return e[x]}return"Color not found"}function m(T){if(t===null){var x=.618033988749895,_=Math.random();return _+=x,_%=1,Math.floor(T[0]+_*(T[1]+1-T[0]))}else{var k=T[1]||1,D=T[0]||0;t=(t*9301+49297)%233280;var R=t/233280;return Math.floor(D+R*(k-D))}}function g(T){var x=y(T);function _(D){var R=D.toString(16);return R.length==1?"0"+R:R}var k="#"+_(x[0])+_(x[1])+_(x[2]);return k}function p(T,x,_){var k=_[0][0],D=_[_.length-1][0],R=_[_.length-1][1],q=_[0][1];e[T]={hueRange:x,lowerBounds:_,saturationRange:[k,D],brightnessRange:[R,q]}}function E(){p("monochrome",null,[[0,0],[100,0]]),p("red",[-26,18],[[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]),p("orange",[18,46],[[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]),p("yellow",[46,62],[[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]),p("green",[62,178],[[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]),p("blue",[178,257],[[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]),p("purple",[257,282],[[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]),p("pink",[282,334],[[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]])}function y(T){var x=T[0];x===0&&(x=1),x===360&&(x=359),x=x/360;var _=T[1]/100,k=T[2]/100,D=Math.floor(x*6),R=x*6-D,q=k*(1-_),H=k*(1-R*_),ne=k*(1-(1-R)*_),ye=256,ae=256,me=256;switch(D){case 0:ye=k,ae=ne,me=q;break;case 1:ye=H,ae=k,me=q;break;case 2:ye=q,ae=k,me=ne;break;case 3:ye=q,ae=H,me=k;break;case 4:ye=ne,ae=q,me=k;break;case 5:ye=k,ae=q,me=H;break}var Z=[Math.floor(ye*255),Math.floor(ae*255),Math.floor(me*255)];return Z}function S(T){T=T.replace(/^#/,""),T=T.length===3?T.replace(/(.)/g,"$1$1"):T;var x=parseInt(T.substr(0,2),16)/255,_=parseInt(T.substr(2,2),16)/255,k=parseInt(T.substr(4,2),16)/255,D=Math.max(x,_,k),R=D-Math.min(x,_,k),q=D?R/D:0;switch(D){case x:return[60*((_-k)/R%6)||0,q,D];case _:return[60*((k-x)/R+2)||0,q,D];case k:return[60*((x-_)/R+4)||0,q,D]}}function C(T){var x=T[0],_=T[1]/100,k=T[2]/100,D=(2-_)*k;return[x,Math.round(_*k/(D<1?D:2-D)*1e4)/100,D/2*100]}function F(T){for(var x=0,_=0;_!==T.length&&!(x>=Number.MAX_SAFE_INTEGER);_++)x+=T.charCodeAt(_);return x}function M(T){if(isNaN(T)){if(typeof T=="string"){if(e[T]){var _=e[T];if(_.hueRange)return _.hueRange}else if(T.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)){var k=S(T)[0];return c(k).hueRange}}}else{var x=parseInt(T);if(x<360&&x>0)return c(T).hueRange}return[0,360]}return r})});em(exports,{DEFAULT_CALENDAR:()=>Yo,DEFAULT_DATA:()=>Df,MODIFIER_KEY:()=>wf,default:()=>es});var xr=Oe(require("obsidian"));var Ve=Oe(require("obsidian")),pd=Oe(Nr());var Cl=Oe(_l());function Yi(t,e){let n=window.moment(t),r=window.moment(e),a=r.diff(n,"days");return(n.year()<r.year()||n.dayOfYear()<r.dayOfYear())&&(n.hour()>r.hour()||n.minute()>r.minute()||n.second()>r.second()||n.millisecond()>r.millisecond())&&(a+=1),a}function Bn(t,e){return(t%e+e)%e}function Xe(t){return"ID_xyxyxyxyxyxy".replace(/[xy]/g,function(e){var n=Math.random()*16|0,r=e=="x"?n:n&3|8;return r.toString(16)})}function Ca(t){if(!t.interval?.length)return"";let e=t.interval.sort((a,i)=>a.interval-i.interval),n=[];for(let a of e){let i=a.interval+(a.ignore?0:t.offset);if(a.exclusive)n.push(`not every ${Ft(i)} year`);else{let o=e.indexOf(a),l=o>0&&e[o-1].exclusive;n.push(`${l?"also ":""}every ${Ft(i)} year`)}}let r=n.join(", but ");return r[0].toUpperCase()+r.slice(1).toLowerCase()}function Ft(t){let e=t%10,n=t%100;return e==1&&n!=11?t+"st":e==2&&n!=12?t+"nd":e==3&&n!=13?t+"rd":t+"th"}function un(t,e,n){if(!t||t.day==null)return"";let{day:r,month:a,year:i}=t;if(a!=null&&!e[a])return"Invalid Date";if(n&&n.day){let o=n.day,l=n.month,s=n.year;if(l!=null&&s!=null&&a!=null&&i!=null)return i!=s?`${e[a].name} ${Ft(r)}, ${i} - ${e[l].name} ${Ft(o)}, ${s}`:l==a?`${e[a].name} ${Ft(r)}-${Ft(o)}, ${i}`:a!=null&&i!=null?`${e[a].name} ${Ft(r)}-${e[l].name} ${Ft(o)}, ${i}`:a!=null?`${e[a].name} ${Ft(r)}-${e[l].name} ${Ft(o)} of every year`:`${Ft(r)}-${Ft(o)} of every month`}return a!=null&&i!=null?`${e[a].name} ${Ft(r)}, ${i}`:a!=null?`${e[a].name} ${Ft(r)} of every year`:`${Ft(r)} of every month`}var Al=Oe(El()),ka=class{static import(e){let n=[];for(let r of e){let a=r.name??"Imported Calendar",i=r.static_data;if(!i)continue;let o=i.year_data;if(!o)continue;let l=o.first_day-1,s=o.overflow??!0,d=o.global_week;if(!d)continue;let u=d.map(_=>({type:"day",name:_,id:Xe(6)})),c=o.timespans;if(!c)continue;let m=c.map(_=>({name:(0,Al.decode)(_.name),type:_.type,length:_.length,id:Xe(6)})),g=m.reduce((_,k)=>k.type=="month"?_+k.length:_,0),p=[];if("leap_days"in o)for(let _ of o.leap_days){let D=(_.interval.split(",")??["1"]).map(R=>{let q=/\+/.test(R),H=/\!/.test(R),ne=R.match(/(\d+)/).first();return{ignore:q,exclusive:H,interval:Number(ne)}});p.push({name:_.name??`Leap Day ${p.length+1}`,type:"leapday",interval:D,timespan:_.timespan??0,intercalary:_.intercalary??!1,offset:_.offset??0,id:Xe(6)})}let E=[];if("moons"in i)for(let _ of i.moons)E.push({name:_.name??`Moon ${E.length+1}`,cycle:Number(_.cycle)??g,offset:_.shift??0,faceColor:_.color??"#ffffff",shadowColor:_.shadow_color??"#000000",id:Xe(6)});let y=[];if("eras"in i)for(let _ of i.eras)y.push({name:_.name??`Era ${y.length+1}`,description:_.description,format:_.formatting??"Year {{year}} - {{era_name}}",start:{year:_.date?.year??1,month:_.date?.timespan??0,day:_.date?.day??0}});let S={firstWeekDay:l,overflow:s,weekdays:u,months:m,moons:E,leapDays:p,eras:y,displayMoons:!0,incrementDay:!1,displayDayNumber:!1},C={year:1,day:1,month:0};r.dynamic_data&&(C.year=r.dynamic_data.year??C.year,C.day=r.dynamic_data.day??C.day,C.month=r.dynamic_data.month??C.month);let F=[],M=new Map;if("categories"in r)for(let _ of r.categories){let k=_.name,D=k?.split(" ").join("-").toLowerCase()??Xe(6),R=_.event_settings.color;if(R in kl)R=kl[R];else{R=R.split("-").join("");let q=createEl("canvas"),H=q.getContext("2d");H.fillStyle=R,R=H.fillStyle,q.detach()}M.set(D,{name:k,id:D,color:R})}if(r.events&&Array.isArray(r.events)&&r.events.length)for(let _ of r.events){let k={day:null,year:null,month:null};if(_.data&&_.data.date&&Array.isArray(_.data?.date)&&_.data.date.length)k.day=_.data.date[2],k.month=_.data.date[1],k.year=_.data.date[0];else if(_.data&&_.data.conditions&&Array.isArray(_.data.conditions)){let R=_.data.conditions;try{let q=R.find(ye=>ye[0]==="Year"),H=R.find(ye=>ye[0]==="Month"),ne=R.find(ye=>ye[0]==="Day");q&&(k.year=Number(q[2][0])),H&&(k.month=Number(H[2][0])),ne&&(k.day=Number(ne[2][0]))}catch{}}let D;if(_.description){let R=createDiv();R.innerHTML=_.description,D=R.textContent}F.push({name:_.name,description:D,id:_.id,note:null,date:k,category:M.get(_.event_category_id)?.id??null})}let T=(0,Cl.default)({count:M.size});for(let _ of M.keys()){let k=M.get(_);k.color||(k.color=T.shift().hex(),M.set(_,k))}let x={name:a,description:null,static:S,current:C,events:F,id:Xe(6),categories:Array.from(M.values())};n.push(x)}return n}},kl={"Dark-Solid":"#000000",Red:"#9b2c2c",Pink:"#880E4F",Purple:"#4A148C","Deep-Purple":"#311B92",Blue:"#0D47A1","Light-Blue":"#0288D1",Cyan:"#006064",Teal:"#004D40",Green:"#2E7D32","Light-Green":"#7CB342",Lime:"#9e9d24",Yellow:"#FFEB3B",Orange:"#FF9100","Blue-Grey":"#455A64"};function K(){}var xa=t=>t;function xl(t,e){for(let n in e)t[n]=e[n];return t}function Zi(t){return t()}function Fl(){return Object.create(null)}function we(t){t.forEach(Zi)}function tt(t){return typeof t=="function"}function oe(t,e){return t!=t?e==e:t!==e||t&&typeof t=="object"||typeof t=="function"}function Tl(t){return Object.keys(t).length===0}function Sl(t,e,n,r){if(t){let a=Bl(t,e,n,r);return t[0](a)}}function Bl(t,e,n,r){return t[1]&&r?xl(n.ctx.slice(),t[1](r(e))):n.ctx}function Nl(t,e,n,r){if(t[2]&&r){let a=t[2](r(n));if(e.dirty===void 0)return a;if(typeof a=="object"){let i=[],o=Math.max(e.dirty.length,a.length);for(let l=0;l<o;l+=1)i[l]=e.dirty[l]|a[l];return i}return e.dirty|a}return e.dirty}function Ml(t,e,n,r,a,i){if(a){let o=Bl(e,n,r,i);t.p(o,a)}}function Il(t){if(t.ctx.length>32){let e=[],n=t.ctx.length/32;for(let r=0;r<n;r++)e[r]=-1;return e}return-1}function $i(t){return t??""}function fe(t){return t&&tt(t.destroy)?t.destroy:K}var Ol=typeof window!="undefined",ql=Ol?()=>window.performance.now():()=>Date.now(),Ki=Ol?t=>requestAnimationFrame(t):K;var nr=new Set;function Rl(t){nr.forEach(e=>{e.c(t)||(nr.delete(e),e.f())}),nr.size!==0&&Ki(Rl)}function Ll(t){let e;return nr.size===0&&Ki(Rl),{promise:new Promise(n=>{nr.add(e={c:t,f:n})}),abort(){nr.delete(e)}}}var Pl=!1;function bg(){Pl=!0}function wg(){Pl=!1}function w(t,e){t.appendChild(e)}function he(t,e,n){let r=Qi(t);if(!r.getElementById(e)){let a=N("style");a.id=e,a.textContent=n,jl(r,a)}}function Qi(t){if(!t)return document;let e=t.getRootNode?t.getRootNode():t.ownerDocument;return e&&e.host?e:t.ownerDocument}function Dg(t){let e=N("style");return jl(Qi(t),e),e.sheet}function jl(t,e){w(t.head||t,e)}function U(t,e,n){t.insertBefore(e,n||null)}function W(t){t.parentNode.removeChild(t)}function Ye(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}function N(t){return document.createElement(t)}function Jt(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function be(t){return document.createTextNode(t)}function G(){return be(" ")}function Je(){return be("")}function J(t,e,n,r){return t.addEventListener(e,n,r),()=>t.removeEventListener(e,n,r)}function b(t,e,n){n==null?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function wn(t){return t===""?null:+t}function _g(t){return Array.from(t.childNodes)}function Ae(t,e){e=""+e,t.wholeText!==e&&(t.data=e)}function At(t,e){t.value=e??""}function Ke(t,e,n,r){n===null?t.style.removeProperty(e):t.style.setProperty(e,n,r?"important":"")}function cn(t,e){for(let n=0;n<t.options.length;n+=1){let r=t.options[n];if(r.__value===e){r.selected=!0;return}}t.selectedIndex=-1}function rr(t){let e=t.querySelector(":checked")||t.options[0];return e&&e.__value}function ge(t,e,n){t.classList[n?"add":"remove"](e)}function Vl(t,e,n=!1){let r=document.createEvent("CustomEvent");return r.initCustomEvent(t,n,!1,e),r}var Fa=new Map,Ta=0;function Eg(t){let e=5381,n=t.length;for(;n--;)e=(e<<5)-e^t.charCodeAt(n);return e>>>0}function Cg(t,e){let n={stylesheet:Dg(e),rules:{}};return Fa.set(t,n),n}function Xi(t,e,n,r,a,i,o,l=0){let s=16.666/r,d=`{
`;for(let y=0;y<=1;y+=s){let S=e+(n-e)*i(y);d+=y*100+`%{${o(S,1-S)}}
`}let u=d+`100% {${o(n,1-n)}}
}`,c=`__svelte_${Eg(u)}_${l}`,m=Qi(t),{stylesheet:g,rules:p}=Fa.get(m)||Cg(m,t);p[c]||(p[c]=!0,g.insertRule(`@keyframes ${c} ${u}`,g.cssRules.length));let E=t.style.animation||"";return t.style.animation=`${E?`${E}, `:""}${c} ${r}ms linear ${a}ms 1 both`,Ta+=1,c}function Hl(t,e){let n=(t.style.animation||"").split(", "),r=n.filter(e?i=>i.indexOf(e)<0:i=>i.indexOf("__svelte")===-1),a=n.length-r.length;a&&(t.style.animation=r.join(", "),Ta-=a,Ta||Ag())}function Ag(){Ki(()=>{Ta||(Fa.forEach(t=>{let{stylesheet:e}=t,n=e.cssRules.length;for(;n--;)e.deleteRule(n);t.rules={}}),Fa.clear())})}function ar(t,e,n,r){if(!e)return K;let a=t.getBoundingClientRect();if(e.left===a.left&&e.right===a.right&&e.top===a.top&&e.bottom===a.bottom)return K;let{delay:i=0,duration:o=300,easing:l=xa,start:s=ql()+i,end:d=s+o,tick:u=K,css:c}=n(t,{from:e,to:a},r),m=!0,g=!1,p;function E(){c&&(p=Xi(t,0,1,o,i,l,c)),i||(g=!0)}function y(){c&&Hl(t,p),m=!1}return Ll(S=>{if(!g&&S>=s&&(g=!0),g&&S>=d&&(u(1,0),y()),!m)return!1;if(g){let C=S-s,F=0+1*l(C/o);u(F,1-F)}return!0}),E(),u(0,1),y}function ir(t){let e=getComputedStyle(t);if(e.position!=="absolute"&&e.position!=="fixed"){let{width:n,height:r}=e,a=t.getBoundingClientRect();t.style.position="absolute",t.style.width=n,t.style.height=r,kg(t,a)}}function kg(t,e){let n=t.getBoundingClientRect();if(e.left!==n.left||e.top!==n.top){let r=getComputedStyle(t),a=r.transform==="none"?"":r.transform;t.style.transform=`${a} translate(${e.left-n.left}px, ${e.top-n.top}px)`}}var Or;function qr(t){Or=t}function Rr(){if(!Or)throw new Error("Function called outside component initialization");return Or}function Nn(t){Rr().$$.on_mount.push(t)}function Ji(t){Rr().$$.on_destroy.push(t)}function Se(){let t=Rr();return(e,n)=>{let r=t.$$.callbacks[e];if(r){let a=Vl(e,n);r.slice().forEach(i=>{i.call(t,a)})}}}function Mn(t,e){Rr().$$.context.set(t,e)}function Ze(t){return Rr().$$.context.get(t)}function pe(t,e){let n=t.$$.callbacks[e.type];n&&n.slice().forEach(r=>r.call(this,e))}var Lr=[];var Dn=[],Sa=[],Wl=[],Gl=Promise.resolve(),eo=!1;function Ul(){eo||(eo=!0,Gl.then(zl))}function In(){return Ul(),Gl}function Gt(t){Sa.push(t)}var to=new Set,Ba=0;function zl(){let t=Or;do{for(;Ba<Lr.length;){let e=Lr[Ba];Ba++,qr(e),xg(e.$$)}for(qr(null),Lr.length=0,Ba=0;Dn.length;)Dn.pop()();for(let e=0;e<Sa.length;e+=1){let n=Sa[e];to.has(n)||(to.add(n),n())}Sa.length=0}while(Lr.length);for(;Wl.length;)Wl.pop()();eo=!1,to.clear(),qr(t)}function xg(t){if(t.fragment!==null){t.update(),we(t.before_update);let e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(Gt)}}var Pr;function Fg(){return Pr||(Pr=Promise.resolve(),Pr.then(()=>{Pr=null})),Pr}function no(t,e,n){t.dispatchEvent(Vl(`${e?"intro":"outro"}${n}`))}var Na=new Set,dn;function xe(){dn={r:0,c:[],p:dn}}function Fe(){dn.r||we(dn.c),dn=dn.p}function j(t,e){t&&t.i&&(Na.delete(t),t.i(e))}function V(t,e,n,r){if(t&&t.o){if(Na.has(t))return;Na.add(t),dn.c.push(()=>{Na.delete(t),r&&(n&&t.d(1),r())}),t.o(e)}}var Tg={duration:0};function ro(t,e,n,r){let a=e(t,n),i=r?0:1,o=null,l=null,s=null;function d(){s&&Hl(t,s)}function u(m,g){let p=m.b-i;return g*=Math.abs(p),{a:i,b:m.b,d:p,duration:g,start:m.start,end:m.start+g,group:m.group}}function c(m){let{delay:g=0,duration:p=300,easing:E=xa,tick:y=K,css:S}=a||Tg,C={start:ql()+g,b:m};m||(C.group=dn,dn.r+=1),o||l?l=C:(S&&(d(),s=Xi(t,i,m,p,g,E,S)),m&&y(0,1),o=u(C,p),Gt(()=>no(t,m,"start")),Ll(F=>{if(l&&F>l.start&&(o=u(l,p),l=null,no(t,o.b,"start"),S&&(d(),s=Xi(t,i,o.b,o.duration,0,E,a.css))),o){if(F>=o.end)y(i=o.b,1-i),no(t,o.b,"end"),l||(o.b?d():--o.group.r||we(o.group.c)),o=null;else if(F>=o.start){let M=F-o.start;i=o.a+o.d*E(M/o.duration),y(i,1-i)}}return!!(o||l)}))}return{run(m){tt(a)?Fg().then(()=>{a=a(),c(m)}):c(m)},end(){d(),o=l=null}}}var b1=typeof window!="undefined"?window:typeof globalThis!="undefined"?globalThis:global;function Sg(t,e){t.d(1),e.delete(t.key)}function Bg(t,e){V(t,1,1,()=>{e.delete(t.key)})}function Ma(t,e){t.f(),Sg(t,e)}function Yl(t,e){t.f(),Bg(t,e)}function or(t,e,n,r,a,i,o,l,s,d,u,c){let m=t.length,g=i.length,p=m,E={};for(;p--;)E[t[p].key]=p;let y=[],S=new Map,C=new Map;for(p=g;p--;){let x=c(a,i,p),_=n(x),k=o.get(_);k?r&&k.p(x,e):(k=d(_,x),k.c()),S.set(_,y[p]=k),_ in E&&C.set(_,Math.abs(p-E[_]))}let F=new Set,M=new Set;function T(x){j(x,1),x.m(l,u),o.set(x.key,x),u=x.first,g--}for(;m&&g;){let x=y[g-1],_=t[m-1],k=x.key,D=_.key;x===_?(u=x.first,m--,g--):S.has(D)?!o.has(k)||F.has(k)?T(x):M.has(D)?m--:C.get(k)>C.get(D)?(M.add(k),T(x)):(F.add(D),m--):(s(_,o),m--)}for(;m--;){let x=t[m];S.has(x.key)||s(x,o)}for(;g;)T(y[g-1]);return y}var w1=new Set(["allowfullscreen","allowpaymentrequest","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","hidden","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected"]);function re(t){t&&t.c()}function te(t,e,n,r){let{fragment:a,on_mount:i,on_destroy:o,after_update:l}=t.$$;a&&a.m(e,n),r||Gt(()=>{let s=i.map(Zi).filter(tt);o?o.push(...s):we(s),t.$$.on_mount=[]}),l.forEach(Gt)}function ee(t,e){let n=t.$$;n.fragment!==null&&(we(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function Ng(t,e){t.$$.dirty[0]===-1&&(Lr.push(t),Ul(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function ce(t,e,n,r,a,i,o,l=[-1]){let s=Or;qr(t);let d=t.$$={fragment:null,ctx:null,props:i,update:K,not_equal:a,bound:Fl(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(s?s.$$.context:[])),callbacks:Fl(),dirty:l,skip_bound:!1,root:e.target||s.$$.root};o&&o(d.root);let u=!1;if(d.ctx=n?n(t,e.props||{},(c,m,...g)=>{let p=g.length?g[0]:m;return d.ctx&&a(d.ctx[c],d.ctx[c]=p)&&(!d.skip_bound&&d.bound[c]&&d.bound[c](p),u&&Ng(t,c)),m}):[],d.update(),u=!0,we(d.before_update),d.fragment=r?r(d.ctx):!1,e.target){if(e.hydrate){bg();let c=_g(e.target);d.fragment&&d.fragment.l(c),c.forEach(W)}else d.fragment&&d.fragment.c();e.intro&&j(t.$$.fragment),te(t,e.target,e.anchor,e.customElement),wg(),zl()}qr(s)}var Mg;typeof HTMLElement=="function"&&(Mg=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}connectedCallback(){let{on_mount:t}=this.$$;this.$$.on_disconnect=t.map(Zi).filter(tt);for(let e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(t,e,n){this[t]=n}disconnectedCallback(){we(this.$$.on_disconnect)}$destroy(){ee(this,1),this.$destroy=K}$on(t,e){let n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{let r=n.indexOf(e);r!==-1&&n.splice(r,1)}}$set(t){this.$$set&&!Tl(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}});var le=class{$destroy(){ee(this,1),this.$destroy=K}$on(e,n){let r=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return r.push(n),()=>{let a=r.indexOf(n);a!==-1&&r.splice(a,1)}}$set(e){this.$$set&&!Tl(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}};var ud=Oe(Nr()),Yn=Oe(require("obsidian"));var $l=Oe(Nr()),On=Oe(require("obsidian"));var Zl=[{name:"Gregorian Calendar",description:"A calendar for the real world.",static:{displayDayNumber:!1,incrementDay:!0,displayMoons:!0,firstWeekDay:6,overflow:!0,weekdays:[{type:"day",name:"Sunday",id:"ID_19ea684b4a08"},{type:"day",name:"Monday",id:"ID_2928b90ab949"},{type:"day",name:"Tuesday",id:"ID_0ad9a8f9e95b"},{type:"day",name:"Wednesday",id:"ID_195a4b290bc9"},{type:"day",name:"Thursday",id:"ID_abe8c89b0999"},{type:"day",name:"Friday",id:"ID_2b5b8a79fa4a"},{type:"day",name:"Saturday",id:"ID_1a78cb79c8cb"}],months:[{name:"January",type:"month",length:31,id:"ID_e9997a780b3a"},{name:"February",type:"month",length:28,id:"ID_b8c9ebeb0b89"},{name:"March",type:"month",length:31,id:"ID_b83bda2b9be8"},{name:"April",type:"month",length:30,id:"ID_29baea7b28ab"},{name:"May",type:"month",length:31,id:"ID_6a3899fad909"},{name:"June",type:"month",length:30,id:"ID_384aeb1afa8a"},{name:"July",type:"month",length:31,id:"ID_48b8cba87b8a"},{name:"August",type:"month",length:31,id:"ID_fa0b1a6bab8a"},{name:"September",type:"month",length:30,id:"ID_da880b8af849"},{name:"October",type:"month",length:31,id:"ID_babba8186968"},{name:"November",type:"month",length:30,id:"ID_da582bfaf9b9"},{name:"December",type:"month",length:31,id:"ID_ba1bab4a3a28"}],moons:[{name:"Moon",cycle:29.530588853,offset:9.24953,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_a9ab186b1819"}],leapDays:[{name:"Leap Day",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:400},{ignore:!1,exclusive:!0,interval:100},{ignore:!1,exclusive:!1,interval:4}],offset:0,timespan:1,intercalary:!1,id:"ID_b91ad86a887a"}],eras:[{name:"Before Christ",description:"",format:"Year {{abs_year}} - {{era_name}}",start:{year:-1,month:0,day:31}},{name:"Anno Domini",description:"",format:"Year {{year}} - {{era_name}}",start:{year:1,month:0,day:1}}],offset:2},current:{year:null,day:null,month:null},events:[{name:"Summer Solstice",description:"At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824599",note:null,date:{day:null,year:null,month:null},category:null},{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824600",note:null,date:{day:null,year:null,month:null},category:null},{name:"Spring Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824601",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824602",note:null,date:{day:null,year:null,month:null},category:null},{name:"Christmas",description:"Christmas is a Christian holiday celebrating the birth of Christ. Due to a combination of marketability and long lasting traditions it is popular even among many non-Christians, especially in countries that have a strong Christian tradition.",id:"824603",note:null,date:{day:25,year:null,month:11},category:"christian-holidays"},{name:"Paschal Full Moon",description:"The first full moon after march 21st, which is considered the fixed date for the spring equinox.",id:"824604",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Easter",description:"Easter is considered the most important feast for Christians, celebrating the resurrection of Christ. It is classed as a moveable feast occurring on the first full moon after the spring equinox, which is considered to be fixed at March 21st for the sake of computing the date.",id:"824605",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Easter Monday",description:"The Monday following the Easter Sunday is often considered part of the Easter Celebration and is a day off in many countries with a strong Christian tradition.",id:"824606",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Good Friday",description:"Good Friday is the Friday preceding Easter. It comemmorates the crucifixion of Christ according to the Bible.",id:"824607",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"Pentecost",description:"Celebrated exactly 50 days after Easter, Pentecost is the celebration of the Holy Spirit appearing before the Apostles as described in the Bible.",id:"824608",note:null,date:{day:null,year:null,month:null},category:"christian-holidays"},{name:"New Year's Day",description:"New Year's Day marks the start of a new year on the Gregorian Calendar. It starts when the clock strikes midnight and is often celebrated with fireworks, champagne and kissing.",id:"824609",note:null,date:{day:1,year:null,month:0},category:"secular-holidays"},{name:"Valentine's Day",description:"Valentine's day is a celebration of love and romance that is popular across the world. Many more cynically minded people mostly consider it an attempt to monetize the expectation of romantic gestures on the holiday through gift cards, flowers, chocolate and dates.",id:"824610",note:null,date:{day:14,year:null,month:1},category:"secular-holidays"},{name:"Halloween",description:'Halloween is holiday popular in the US, Canada and Ireland that has gradually been adopted by more and more countries. It is often celebrated by people dressing up, usually as something scary. Children will often go from door to door shouting "trick or treat" in the hopes of receiving candy, while adults tend to go to parties.',id:"824611",note:null,date:{day:31,year:null,month:9},category:"secular-holidays"},{name:"Work on the first version of this calendar started.",description:"Aecius started work on the first version Gregorian Calendar for Fantasy Calendar on this day.",id:"824612",note:null,date:{day:23,year:2019,month:5},category:"miscellaneous-events"},{name:"Work on this version of the Gregorian Calendar started.",description:"On this day, Aecius started to rework the Gregorian Calendar from scratch to make it work with the updates Wasp and Alex implemented since the summer of 2019.",id:"824613",note:null,date:{day:21,year:2020,month:0},category:"miscellaneous-events"},{name:"Introduction of the Gregorian Calendar",description:"On this day in 1582 the Gregorian calendar was officially introduced, following Thursday October 4th on the Julian Calendar",id:"824614",note:null,date:{day:15,year:1582,month:9},category:"historical-events"}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Christian Holidays",id:"christian-holidays",color:"#9b2c2c"},{name:"Secular Holidays",id:"secular-holidays",color:"#0D47A1"},{name:"Historical Events",id:"historical-events",color:"#455A64"},{name:"Miscellaneous Events",id:"miscellaneous-events",color:"#0288D1"}]},{name:"Calendar of Greyhawk",description:"Calendar of the world of Greyhawk.",static:{displayDayNumber:!1,incrementDay:!1,displayMoons:!0,firstWeekDay:0,overflow:!1,weekdays:[{type:"day",name:"Starday",id:"ID_a8e979984938"},{type:"day",name:"Sunday",id:"ID_1b68bb78ca1b"},{type:"day",name:"Moonday",id:"ID_c8b86aea0998"},{type:"day",name:"Godsday",id:"ID_b8097a18e95b"},{type:"day",name:"Waterday",id:"ID_1918c99949ca"},{type:"day",name:"Earthday",id:"ID_fa295a1bab89"},{type:"day",name:"Freeday",id:"ID_6a485ada3ae8"}],months:[{name:"Needfest",type:"month",length:7,id:"ID_b8a9e9da8a48"},{name:"Fireseek",type:"month",length:28,id:"ID_39b90bd8189a"},{name:"Readying",type:"month",length:28,id:"ID_48a9081ad839"},{name:"Coldeven",type:"month",length:28,id:"ID_5a7b6beadb68"},{name:"Growfest",type:"month",length:7,id:"ID_48c8d82b1908"},{name:"Planting",type:"month",length:28,id:"ID_081a793a49da"},{name:"Flocktime",type:"month",length:28,id:"ID_eb68a89a0a2a"},{name:"Wealsun",type:"month",length:28,id:"ID_9b3a098ae908"},{name:"Richfest",type:"month",length:7,id:"ID_f99b4b3a08b8"},{name:"Reaping",type:"month",length:28,id:"ID_ebe9eb68ea39"},{name:"Goodmonth",type:"month",length:28,id:"ID_fb3b6af9895b"},{name:"Harvester",type:"month",length:28,id:"ID_395bcb399b8a"},{name:"Brewfest",type:"month",length:7,id:"ID_e8b908181afa"},{name:"Patchwall",type:"month",length:28,id:"ID_cbda3b399969"},{name:"Ready'reat",type:"month",length:28,id:"ID_592a2a690bf8"},{name:"Sunsebb",type:"month",length:28,id:"ID_39e8faf8e9b8"}],moons:[{name:"Luna",cycle:28,offset:3,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_f8997b39b8b8"},{name:"Celene",cycle:91,offset:46,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_7afbb9b88be8"}],leapDays:[],eras:[{name:"Common Year",description:"",format:"Year {{year}} CY",start:{year:1,month:0,day:1}}]},current:{year:591,day:1,month:0},events:[{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824573",note:null,date:{day:null,year:null,month:null},category:null},{name:"Spring Equinox",description:`The 4th of Growfest is the first day of Low Summer in Oerth's Calendar. This is the point where the sun crosses Oerth's equator. Holidays celebrated on this date include Saint Cuthbert's Day, the Feast of Edoira, the Spring Feast, and Raxivort's Orgy. This is also the day on which the priests of Tlaloc ritually sacrifice and eat the flesh of human children or babies in their patron's honor. Worshippers of Rillifane Rallathil celebrate the Budding on this day, a joyful celebration of new life celebrated through dance and song in oak groves in the heart of the forest. A ritual hunt of a noble heart is held on this day, after which the venison is eaten in celebration of Rillifane's bounty.

Also celebrated on this date is the Sanctification of Renewal, a sacred holiday to the followers of Garyx.`,id:"824574",note:null,date:{day:null,year:null,month:null},category:null},{name:"Summer Solstice",description:"	At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824575",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The 4th of Brewfest is the Autumnal Equinox, when the sun crosses the equator from north to south. This date is the official end of high summer and the beginning of autumn on the Greyhawk Calendar. This date is holy to Wenta and is sometimes regarded as an unofficial holy day of Velnius. Among the xvarts, it also marks the celebration of Raxivort's Orgy. The worshippers of Rillifane Rallathil celebrate the Transformation on this day, a time of dancing and spiritual rebirth marking the beginning of autumn and the promise that spring will come again.",id:"824576",note:null,date:{day:null,year:null,month:null},category:null},{name:"Great Moons Glory",description:"The night of Great Moon's Glory on Readying 11th, when Luna is full but Celene is new. It is holy to Celestian, and a time when offerings are left to Atroa to beg her to come early and to Telchur to request that he peacefully leave. Druids of the Old Faith are known to also hold this night as auspicious, but few outside their circles know the details.",id:"824577",note:null,date:{day:null,year:null,month:null},category:null},{name:"Dark Night",description:`Dark Night, also called Black Night, Star Night, and the Night of Hopeful Dawn, is observed on Goodmonth 11. It is a holy night for the church of Celestian because the stars are so easy to observe without the light of one of the moons getting in the way.

It is also a holy night for the church of Rao, who refer to it as the Night of Hopeful Judgment. They believe that Rao chooses this time to separate the sinful from the righteous in the afterworld. There is also a prophecy in the Raoan holy text, the Book of Incarum, that claims that Rao will cleanse the world of evil on this night, sometime in the future.

The priesthood of Kurell consider it holy, too, calling it Kurell's Night, requiring the faithful to undertake special missions on this night to prove their cleverness and skill. Kurell smiles particularly on acts of theft or vengeance performed on his holy night, blessing those who do so successfully. Donations to Kurell's church are encouraged afterwards, for Kurell may take vengeance against those who do not properly thank him for his aid.

Most other people regard Dark Night as a time of ill omen, fearing it as much as the night of the Blood Moon Festival. Bonfires are burned from dusk till dawn, particularly in small villages and in Elmshire and Narwell. Orc and goblin religions view it as an excellent night for raiding settlements. Certain evil cults perform kidnappings, murders, and vile rites during this period. On the other hand, lycanthropic activity is at its lowest.

Iggwilv and Tuerny attempted to summon a demonic army to Luna on this night in 585 CY.`,id:"824578",note:null,date:{day:null,year:null,month:null},category:null},{name:"Agelong",description:`Agelong, observed on the 4th of Richfest (the Summer Solstice), is the celebration of the legendary creation of the elves. According to myth, after Corellon Larethian spilled his blood during the battle with Gruumsh, the rest of the Seldarine gathered this sacred blood and mingled it with the tears shed during the same battle by Sehanine Moonbow. The Seldarine then infused these divine fluids into vessels they had created to be the bodies of the elven race.

This day is, among the elves, mostly an excuse to go orc-hunting. Elven warriors cut themselves with daggers carved from volcanic glass to remind themselves of Corellon's own wound from Gruumsh's spear, then strive to slaughter as many orcs as possible during the night.`,id:"824579",note:null,date:{day:4,year:null,month:8},category:null},{name:"Blood Moon Festival",description:`The Blood Moon Festival is celebrated on Coldeven 11, the night when Luna is full just before the Spring Equinox. On this night, curses are said to be twice as powerful and the forces of evil are at their strongest. Fiends roam the lands, and human sacrifice is common. This night is held especially sacred by cultists of Nerull, but worshipers of Kurell also mark this night as especially auspicious for acts of vengeance. Goodly folk superstitiously guard their homes with horseshoes, holy water, bottles of milk, and iron filings.

Demonic forces sent by Iuz destroyed the leadership of the Horned Society during the Blood Moon Festival of 583 CY.

It's possible that this is also the night the elves celebrate as Faerieluck.`,id:"824580",note:null,date:{day:11,year:null,month:3},category:null},{name:"Breadgiving Day",description:`Celebrated on on the Winter Solstice (Needfest 4), Breadgiving Day, is a day of charity observed in the Free City of Greyhawk by the faiths of Pelor, Rao, and Saint Cuthbert.

This was not originally a religious holiday as such. It is a new practice that began after the Greyhawk Wars to feed the refugees that flooded the city during that time. Since of Old City who line up by the hundreds along the Processional from the Black Gate. The booths are worked by low-ranking priests from all three religions, with armed priests of St. Cuthbert providing security. A smaller event is held simultaneously below Wharfgate in Greyhawk City's Shacktown.

The clergies of Heironeous, Pholtus, and Trithereon do not participate, but they compete with one another to perform good deeds the whole week of Needfest. The rivalries between Trithereon and Pholtus, Trithereon and Heironeous, and Pholtus and St. Cuthbert are such that the faiths sometimes fall into arguments and even blows if their "good deeds" conflict with each other. Greyhawk's rowdy citizens often cheer and place bets on the outcomes of these quarrels.

The priests of Pelor hold a morning ceremony on this day with a sermon, singing, and music.`,id:"824581",note:null,date:{day:4,year:null,month:0},category:null},{name:"Brewfest",description:`Also called Drunken Days or the Feast of Brewers, Brewfest, the fourth festival week of Oerth's calendar, is a rowdy period unsurprisingly claimed as a holy time by the churches of Olidammara and Wenta. The Free City of Greyhawk does not celebrate the entire week, but Brewfest 1 and Brewfest 7 are both set aside as public holidays. In Elmshire, the week is spent in restful, carefree music, drinking, and dancing. In Hardby it is spent with fistfights, riots, and ensuing hangovers. In Narwell it is celebrated with ale-brewing contests, horse races, beatings, and robbery. In Safeton it is celebrated with nervous violence and nightly orc hunts. The week is also sacred to the Old Faith.

The elves call this week Fallrite, and use it to contemplate the spirits of their ancestors, the passage to the afterworld, and the fragility of life. They believe other races make merry during Brewfest because they are "hiding" to avoid facing death's reality. In contrast, the olvenfolk strive to fulfill the most important of their duties and reach the most crucial of their decisions during this time of year. The elven kings and queens traditionally judge capital cases during Fallrite.`,id:"824582",note:null,date:{day:4,year:null,month:12},category:null},{name:"Faerieluck",description:"Faerieluck is a holiday celebrated by the elves in early spring, when the power of Faerie runs high and they celebrate with their fey cousins: the sprites, buckawns, pixies, nymphs and so forth. The point of the festival is to remind the elves of their ancient kinship with these creatures. The day is spent playing practical jokes, engaging in battles of wit, and general merriment.",id:"824583",note:null,date:{day:11,year:null,month:2},category:null},{name:"Feast of Edoira",description:`The Feast of Edoira is a holiday celebrated in the Domain of Greyhawk on Growfest 4, during the Spring Equinox. It is named after Edoira, a priest of Rao who centuries ago established the Edoiran Compact, a pact by which many of the lawful good-aligned faiths and people of the Domain could agree to cooperate. The Compact was later extended to non-lawful good and neutral faiths.

Edoira was never deified but was revered by many good faiths in the Domain. The holiday was marked by religious services on Godsday of Growfest led by the clerics of the good faiths who partook of the Compact, and secular festivals by the ordinary citizenry. Observance of the holiday has declined over the years, though the clergies of Rao and Pelor still hold their traditional interfaith services, with occasional participation by the priesthoods of Heironeous and Mayaheine. Since the end of the Greyhawk Wars most of the Domain's outlying communities no longer observe the holiday. Only one church in Safeton still does so.`,id:"824584",note:null,date:{day:4,year:null,month:4},category:null},{name:"Desportium of Magic",description:`The highlight of Growfest is the Desportium of Magic. During this day torchlight only, no magic illumination is supposed to be used. Wizards and Sorcerers then perform feats of illusion and magic trying to outdo one another with their displays. Usually there is a panel of judges to decide, in the larger cities there is usually a limit of 5-person teams competing. Each performance during the Desportium of Magic uses a long established theme, that of an attack on the town by various monsters and Dark Elves, repelled by brave warriors and spellcasters. The displays, made up of any number of spells cast without the use of magic devices, cannot actually cause any harm to property or people, but must be as wonderful, striking, detailed, and lifelike as possible.

This motif is based on actual attacks through the years from the Uttermost War to the most recent Great Slave Raids. The idea is to make the attackers as dreadful as possible and the defenders as heroic as possible, secondary is to make sure that people will always remember the terror of the Uttermost War. In large cities like the CSIO and CSWE and Tarantis, these performances last all night and are amazing to watch. In smaller villages without spellcasters, puppet plays are often done in its stead.`,id:"824585",note:null,date:{day:7,year:null,month:4},category:null},{name:"Holy Day of Pelor",description:`The Holy Day of Pelor, also known as Giving Day and Midsummer's Day, is celebrated on the Summer Solstice.

Because Pelor is widely loved by the commoners, this day is set aside as a day of rest in the Free City of Greyhawk. Only essential work is done on this day. Many merchants close their shops on Giving Day as well out of respect for the Sun Father and his teachings. Gambling houses are closed, but not hostelries, for Giving Day is a day of feasting and goodwill, a time for enjoying the fruits of the Oerth.

Public services are held from dawn until noon by Pelor's priests, outdoors if the weather permits (which if almost always does, as the clerics use weather-controlling magic for maximum sunlight). Even Greyhawk City's large temple of Pelor is not big enough to hold the throngs who come to celebrate on this day, so throngs of the faithful fill the temple grounds in the Garden Quarter, spilling out from the Millstream to the Nobles' Wall, and to the road leading toward Greyhawk's Grand Theater. Many come, of course, for the free meal the priests provide after the service. The Pelorian priests are well aware of this, but believe that for the needy, a full stomach must come before wisdom and learning. Members of Greyhawk's Guild of Thieves and Beggar's Union, many of whom remember Midsummer's Day fondly from their orphaned childhoods, both protect priests of Pelor on this day, and woe onto those who attempt to test them on this matter.

Priests of Pelor, bedecked in yellow and gold, parade about the streets, demanding donations for their charitable works, freely using guilt to squeeze more from stingy purses. Free healings are given out, particularly to children. Most Greyhawkers wear at least one item of yellow cloth on this day out of respect.

Some crusading Pelorians crusade against evil lycanthropes on this night, since both Celene and Luna are full.`,id:"824586",note:null,date:{day:4,year:null,month:8},category:null},{name:"Holy Day of Serenity",description:"The Holy Day of Serenity, on Reaping 10, is celebrated in Veluna as a holy day of Rao, though it's actually the anniversary of Veluna's secession from Furyondy in 476 CY. It is celebrated with religious singing and worship.",id:"824587",note:null,date:{day:10,year:null,month:9},category:null}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Religious Holidays",id:"religious-holidays",color:"#FFEB3B"},{name:"Secular Holidays",id:"secular-holidays",color:"#0D47A1"},{name:"Magical Events",id:"magical-events",color:"#311B92"},{name:"Miscellaneous Events",id:"miscellaneous-events",color:"#0288D1"}]},{name:"Calendar of Golarion",description:"Calendar for the world of Pathfinder.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!0,weekdays:[{type:"day",name:"Moonday",id:"ID_db8af8f85b8a"},{type:"day",name:"Toilday",id:"ID_f87a094b2849"},{type:"day",name:"Wealday",id:"ID_2a5bb88b3ae8"},{type:"day",name:"Oathday",id:"ID_c93a0be8981b"},{type:"day",name:"Fireday",id:"ID_2b7b59794a0b"},{type:"day",name:"Starday",id:"ID_baaa6a89ca1b"},{type:"day",name:"Sunday",id:"ID_f9baca088b28"}],months:[{name:"Abadius",type:"month",length:31,id:"ID_dad9da89f818"},{name:"Calistril",type:"month",length:28,id:"ID_980a88cb9b68"},{name:"Pharast",type:"month",length:31,id:"ID_a9c96ac80908"},{name:"Gozran",type:"month",length:30,id:"ID_a99a697b9abb"},{name:"Desnus",type:"month",length:31,id:"ID_8bcad9a8f84a"},{name:"Sarenith",type:"month",length:30,id:"ID_484a49a998db"},{name:"Erastus",type:"month",length:31,id:"ID_9a48e9b96938"},{name:"Arodus",type:"month",length:31,id:"ID_bbe99b2afaea"},{name:"Rova",type:"month",length:30,id:"ID_ba39fbe8c8b8"},{name:"Lamashan",type:"month",length:31,id:"ID_69d93ba9dba8"},{name:"Neth",type:"month",length:30,id:"ID_4ad8fb79eb6a"},{name:"Kuthona",type:"month",length:31,id:"ID_9a3a8b388939"}],moons:[{name:"Somal",cycle:29.5,offset:9.5,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_b87ab959cac9"}],leapDays:[{name:"Leap Day",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:8}],offset:0,timespan:1,intercalary:!1,id:"ID_88c8da3b8b2b"}],eras:[{name:"Age of Serpents",description:"",format:"Year {{year}} - {{era_name}}",start:{year:4720,month:8,day:15}},{name:"Age of Darkness",description:"",format:"Year {{abs_year}} - {{era_name}}",start:{year:-5300,month:0,day:1}},{name:"Age of Anguish",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-4500,month:8,day:1}},{name:"Age of Destiny",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-3500,month:8,day:1}},{name:"Age of Enthronement",description:"",format:"Year {{year}} AR - {{era_name}}",start:{year:1,month:8,day:1}},{name:"Age of Lost Omens",description:"",format:"Year {{year}} AR - {{era_name}}",start:{year:4606,month:8,day:1}}]},current:{year:4720,day:15,month:0},events:[{name:"Summer Solstice",description:"At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824492",note:null,date:{day:null,year:null,month:null},category:null},{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824493",note:null,date:{day:null,year:null,month:null},category:null},{name:"Spring Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824494",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The equinox marks the day and the night is equally as long.",id:"824495",note:null,date:{day:null,year:null,month:null},category:null},{name:"Eternal Kiss",description:`Zon-Kuthon

Culminating on the first new moon of the new year, the Eternal Kiss is an 11 day ceremony honoring Zon-Kuthon. On the final day, a living sacrifice is made to the Dark Prince, after the victim is pampered and pleasured for the ten days prior. The sacrifice can either be an enemy or a great devotee of the church, and is kept alive for as long as possible during the torture using magic. This holiday often involves fortune-telling as a part of the torture, using the victim's entrails or their cries of pain to determine the Midnight Lord's will. Occasionally it is believed that the sacrifice will prophesy with the voice of Zon-Kuthon himself.`,id:"824496",note:null,date:{day:null,year:null,month:null},category:null},{name:"Longnight",description:"Longnight is a holiday celebrated on the full moon in the winter month of Abadius. During the festival, revelers stay up all night to greet the dawn to defy the long winter months. It is even celebrated in Irrisen, where there are no natural seasons.",id:"824497",note:null,date:{day:null,year:null,month:0},category:null},{name:"Foundation Day",description:`Absalom, Milani

Foundation Day is a civil holiday celebrated on the New Year (1 Abadius) in Absalom to commemorate the city's founding by the god Aroden in 1 AR.`,id:"824498",note:null,date:{day:1,year:null,month:0},category:null},{name:"Pjallarane Day",description:`Irrisen

Pjallarane Day is an ancient holiday in Irrisen celebrated on 1 Abadius (New Year's Day). Every 100 years, Baba Yaga returns to Golarion to remove her daughter from the throne of Irrisen, and put another daughter on the throne instead. In 3713 AR the third Queen of Irrisen, Pjallarane, and her children chose to resist. Baba Yaga ruthlessly crushed the rebellion in a single day, which is now celebrated as a holiday. The festival includes feasting and the burning of effigies of tar and straw. This is a reminder of the fate of Pjallarane's followers, who were burned alive as a warning to all those who would oppose Baba Yaga.`,id:"824499",note:null,date:{day:1,year:null,month:0},category:null},{name:"Vault Day",description:`Abadar

Vault Day is a holiday held on 6 Abadius in honor of Abadar, Master of the First Vault.`,id:"824500",note:null,date:{day:6,year:null,month:0},category:null},{name:"Ruby Prince's Birthday",description:`Osirion

The Ruby Prince's Birthday is a national holiday in Osirion in honor of the birthday of Khemet III, the Ruby Prince. It is celebrated annually on the 20 Abadius.`,id:"824501",note:null,date:{day:20,year:null,month:0},category:null},{name:"Merrymead",description:`Druma, Cayden Cailean

A holiday occurring on 2 Calistril, Merrymead was started in Druma and is supposed to be a time to share of the last of the previous year's mead with the rest of the community.

In current times, most people just use it as an excuse to drink excessively. The poor travel from bar to bar drinking whatever alcohol they can afford, while the wealthy will set aside specific vintages for this day. A known consequence of this day are 'mead riots' that happen when there are more celebrants than there is alcohol to serve them. This leads to a violent, destructive group of people in a crowded bar. If this is a common occurrence for particular cities, they may reinforce their guard force for the inevitably eventful night.`,id:"824502",note:null,date:{day:2,year:null,month:1},category:null},{name:"King Eodred II's Birthday",description:`Korvosa

King Eodred II's Birthday was a local holiday in the Varisian city-state of Korvosa and was celebrated on 16 Calistril. It commemorated the birthday of its former ruler, King Eodred Arabasti II, who decreed that on the day, scantily clad women would dance and serve free wine to celebrants.`,id:"824503",note:null,date:{day:16,year:null,month:1},category:null},{name:"Loyalty Day",description:`Cheliax, Asmodeus

Loyalty Day is a holiday in the nation of Cheliax commemorating the date on Calistril 19, 4640 AR when House Thrune signed the Treaty of Egorian, declaring it the victor in the Chelish Civil War and ruler of the empire. Because of House Thrune's well-known ties to the infernal, this holiday is also observed by the Church of Asmodeus who consider it a feast day. The church along with local governments provide a free meal to all citizens to remind them of the benefits House Thrune provides them with.`,id:"824504",note:null,date:{day:19,year:null,month:1},category:null},{name:"Fateless Day",description:`Mahathallah

Followers of Mahathallah mark each leap day as Fateless Day, when the River of Souls temporarily stops and souls can escape Pharasma's judgment. They perform many sacrificial and suicidal rituals on Fateless Day.`,id:"824505",note:null,date:{day:29,year:null,month:1},category:null},{name:"Golemwalk Parade",description:`Magnimar, Varisia

The Golemwalk Parade is a parade of golems created by amateurs hoping to win a monetary grant, or even a job, from the Golemworks in Magnimar. At the end of the parade along the Avenue of Honors, the constructs are judged.`,id:"824506",note:null,date:{day:null,year:null,month:2},category:null},{name:"Day of Bones",description:`Pharasma

Priests and worshipers of the Lady of Graves parade the bodies of the recently dead on this holiday, holding free burials afterwards.`,id:"824507",note:null,date:{day:5,year:null,month:2},category:null},{name:"Sable Company Founding Day",description:`Korvosa

Sable Company Founding Day is a holiday marking the founding of the Sable Company of the Varisian city-state of Korvosa. Celebrated on 6 Pharast, the day is marked by somber military parades that generally preclude the consumption of alcohol, a staple on most other holidays.`,id:"824508",note:null,date:{day:6,year:null,month:2},category:null},{name:"Night of Tears",description:`Solku

The Night of Tears held annually on 7 Pharast in the Katapeshi town of Solku. It is a solemn vigil commemorating those lost in the Battle of Red Hail in 4701 AR.`,id:"824509",note:null,date:{day:7,year:null,month:2},category:null},{name:"Kaliashahrim",description:`Qadira

Kaliashahrim is a national holiday celebrated on Pharast 13 in Qadira that celebrates the Padishah Emperor of distant Katheer, and Qadira's loyalty to him.`,id:"824510",note:null,date:{day:13,year:null,month:2},category:null},{name:"Conquest Day",description:`Nex

Every year, on the 26th of Pharast, Elder Architect Oblosk \u2014 oldest member of Nex's Council of Three and Nine \u2014 ascends to the highest balconies of the Bandeshar in Quantium. In a voice made thunderous by the platform's magic, the wizened pech councilman spends the hours from dusk to just past noon enumerating the atrocities committed by the necromancers of Geb upon the people of Nex, culminating with the disappearance of the archwizard Nex himself. At the conclusion of this record of national wounds, the country's eleven other council members join Oblosk in renewing their yearly vow to neither forget nor forgive the Gebbites' atrocities and to again swear in their lost ruler's name to endlessly wage war against their ancient enemies.

On this day, known as Conquest Day, all the people of Nex are expected to share in their leaders' oaths, to celebrate the shared patriotism of their wondrous nation, and to remember the sacrifices of heroes past. This also makes it a day for many Nexian wizards to reveal deadly new spells, gigantic constructs, and audacious arcane masterworks\u2014which many creators promise to be the doom of their foes. Even throughout the rest of the Inner Sea region, many crusaders, rebels, and zealots observe Conquest Day as a day to renew blood oaths, launch long-planned battles, and finally take revenge. It is a day for words of honor, a day for battle cries, and a day where glory most favors the bold.`,id:"824511",note:null,date:{day:26,year:null,month:2},category:null},{name:"Days of Wrath",description:`Asmodeus, Cheliax

The Days of Wrath, or Dies Irae, are a holiday celebrated on both solstices and equinoxes in the nation of Cheliax and wherever Asmodeus is worshiped. They are primarily a national holiday and not truly a religious one, but the two are often confused due to Cheliax's current political climate. Various contests and blood sports are held on these days, promoting those elites who can clearly demonstrate their superiority over others. Some believe that these competitions are watched and judged by devils themselves. In the parts of the world where the Prince of Darkness is not openly venerated, these holidays take on a different tone: they are used to settle old grievances and also to end contracts.

In these days, bloodsports are organized into cities' stadiums. Slaves and servants of any master may choose to enter the arena for one-on-one bloody battles to the death. Free men and women of all classes are free to enter the arena as well. The entrants fight in rounds until at last one stands alone. The winner is granted freedom from slavery or servitude, erasure of all debts, and a purse of gold.

The winter solstice sees the culmination of the Dies Irae, with all the winners of the three previous bouts summoned to Egorian to fight to the death for the amusement of the nobles. The winner is given a title of baronet and a plot of land.`,id:"824512",note:null,date:{day:null,year:null,month:null},category:null},{name:"Firstbloom",description:`Gozreh

Firstbloom is a holiday celebrating the first planting of the agricultural season, and generally associated with the weather god Gozreh. It falls on the vernal equinox. Many farming communities see it as the beginning of the year, even though conventional calendars begin two months earlier. Despite weariness after a full day planting, many farming communities hold celebrations come the night: feasting, dancing and courtship feature showing the cycle of nature.`,id:"824513",note:null,date:{day:null,year:null,month:null},category:null},{name:"First Cut",description:`Falcon's Hollow

The First Cut celebration in Falcon's Hollow used to mark the start of the work in the woods each spring. Now, however, it is a meaningless ramshackle ceremony as Thuldrin Kreed forces the lumber crews to work through even during the coldest months in the winter. Still, First Cut brings people out to celebrate the start of the spring.`,id:"824514",note:null,date:{day:null,year:null,month:null},category:null},{name:"Currentseve",description:`Gozreh

On this religious holiday, all who travel on the water make offerings to Gozreh in the hopes of safe passage for the coming year.`,id:"824515",note:null,date:{day:7,year:null,month:3},category:null},{name:"Taxfest",description:`Abadar

No one enjoys paying taxes but the collection of fair taxes is considered an integral part of the maintenance of society, and is therefore holy to the god Abadar. Every year on the 15th of Gozran, priests of the church of Abadar spend the day walking city streets, doing what they can to make the bitter pill of annual taxes a bit easier to swallow.

The Business of the Day

From dawn to dusk, clerics of Abadar attend the tax collectors of sizeable communities as the tax wagons roll from door to door. The church officials monitor these activities to make sure that the process is conducted respectfully and justly, and that citizens know that the process is monitored. More than just aiding in the yearly errand, the faithful personally thank every citizen for contributing to the improvement of their city, extol the public works funded by their contributions, and foretell the grandeur of civic projects to come. The disenfranchised and destitute they attempt to comfort as best they can, quoting from their god's dogma on work and worthiness, but this is not a day for discounts or deferrals. The citizens are able to voice their concerns and ideas as to where the monies levied should best be applied. Citizens are free to speak their mind on any issue here without fear of repercussion.

The Celebrations of the Day

At dusk, the Abadarans host several celebrations in parks, plazas, and other communal areas about the city, organizing donations and contributions from local vendors to feed and entertain all-comers. Having already preached to most of the city over the course of the day, the clerics perform only a brief opening ceremony, dedicating the feast to Abadar, the city, and its great people. These celebrations are often quite distinct from neighbourhood to neighbourhood and are almost always divided along economic boundaries.

The festivities involving the wealthiest citizens usually happen on the steps of city hall or other grand civic buildings and feature the best music and food, but often little more than polite card and guessing games. These galas usually wrap up by midnight.

For the common folk, the parks and marketplaces take on a carnival atmosphere, with simple but good food, local ales, performances by talented citizens, and games of chance going on well into the night. A prevailing superstition through these festivals is that, during the celebration, it is lucky to kiss\u2014or in some regions, pinch\u2014a cleric of Abadar, leading to many a rosy-cheeked cleric.

Even the city's poor are given reason to celebrate, as the local temple of Abadar hosts a cheery but unabashedly religious gathering on its steps, feeding all comers, doling out a hearty ration of wine, singing hymns of the faith, and providing tokens for a second wine ration for any who return to attend a service within the month.

For a holiday that revolves around paying taxes, this Abadaran festival is not as reviled as one might expect.`,id:"824516",note:null,date:{day:15,year:null,month:3},category:null},{name:"Wrights of Augustana",description:`Andoran, Brigh

This local festival in the Andoran port city of Augustana is held to honor and celebrate the local shipbuilding industry as well as the navy. The mathematics and engineering required for the building of the ships is praised by Brigh's faithful.`,id:"824517",note:null,date:{day:16,year:null,month:3},category:null},{name:"Gala of Sails",description:`Absalom

One of two local festivals where kite-battlers compete.`,id:"824518",note:null,date:{day:27,year:null,month:3},category:null},{name:"Remembrance Moon",description:`Iomedae, Lastwall, Ustalav

A national holiday to commemorate those who died in the Shining Crusade against the Whispering Tyrant. Although not strictly a religious holiday, Iomedae's name is heavily invoked, due to her many military accomplishments during the war.`,id:"824519",note:null,date:{day:null,year:null,month:4},category:null},{name:"Angel Day",description:`Magnimar, Varisia

Angel Day is a local Magnimarian holiday celebrated on 31 Desnus. The annual celebration marks the founding of the city, and its founders' flight from Korvosa. It also honors the presence and popular worship of the empyreal lords, which predates the city by centuries. During the festival, nearly all local businesses shut their doors and the citizens take part in countless feasts, masquerade balls dressed as angels, and the burning of devil effigies meant to symbolize infernally-influenced Korvosa.`,id:"824520",note:null,date:{day:31,year:null,month:4},category:null},{name:"Old-Mage Day",description:"Holiday celebrating Old-Mage Jatembe, the father of Garundi magic.",id:"824521",note:null,date:{day:13,year:null,month:4},category:null},{name:"Multiple Events",description:`Festival of the Ruling Sun

Shizuru

Celebrates the longest day.

Founder's FollyUlar Kel

Adventurers and children follow a hallucinatory red stripe along zigzagging paths, amusing residents.

Harvest Bounty Festival

Segada

Marking the beginning of the harvest season, this festival involves sporting tournaments, dancing, storytelling, and feasts. Celebrants give thanks and eliminate grudges.

Longwalk

Grandmother Spider, Nurvatchta; southern hemisphere winter solstice

Celebrates the escape of Nurvatchta's anadi people from bondage, in part thanks to Grandmother Spider lengthening their cover of darkness in their escape.

Ritual of Stardust

Desna

Festival held in the evening and through the night, where Desna's faithful sing songs and throw sand and powdered gems into bonfires.

Runefeast

Magrim

Day marking the day dwarves learnt the first runes and the proper way to pray.

Sunwrought FestivalSarenrae, Brigh

Day commemorating the defeat of Rovagug by Sarenrae, celebrated with the flying of kites, fireworks, and gift giving.`,id:"824522",note:null,date:{day:null,year:null,month:null},category:null},{name:"Burning Blades",description:`Sarenrae

The holy, month-long festival ends on this day, featuring dances with flaming blades.`,id:"824523",note:null,date:{day:10,year:null,month:5},category:null},{name:"Liberty Day",description:`Andoran, Milani

Holiday celebrating Andoran's independence. Milanites celebrate that very little violence occurred.`,id:"824524",note:null,date:{day:3,year:null,month:5},category:null},{name:"Talon Tag",description:`Andoran

The Eagle Knights perform aerial displays in Almas on this day.`,id:"824525",note:null,date:{day:21,year:null,month:5},category:null},{name:"Riverwind Festival",description:`Korvosa

An early summer holiday that honors a cooling shift in the winds, celebrated with much drinking.`,id:"824526",note:null,date:{day:22,year:null,month:5},category:null},{name:"Inheritor's Ascendance ",description:`Iomedae

Inheritor's Ascendance, originally called 'Herald's Day', honours the day that Iomedae was chosen by the god Aroden to become his herald (thus replacing Arazni), thus boosting her power beyond that of a fledgling goddess. This holiday was renamed after the demise of Aroden.`,id:"824527",note:null,date:{day:1,year:null,month:7},category:null},{name:"First Crusader Day",description:`Mendev

Holiday in celebration of the continuing crusade against the demons of the Worldwound.`,id:"824528",note:null,date:{day:6,year:null,month:7},category:null},{name:"Day of Silenced Whispers",description:`Ustalav

The Day of Silenced Whispers is an Ustalavic holiday celebrated every 9 Arodus marking the defeat of the Whispering Tyrant in 3827 AR by the coalition forces of the Shining Crusade and the liberation of the country after centuries of undead domination.`,id:"824529",note:null,date:{day:9,year:null,month:7},category:null},{name:"Founding Day",description:`Ilsurian, Varisia

Festival celebrating the founding by Ilsur of the town of Ilsurian in 4631 AR.`,id:"824530",note:null,date:{day:10,year:null,month:7},category:null},{name:"Armasse",description:`Aroden, Iomedae, Milani

The raucous, week-long festival known as Armasse is held each year beginning on 16 Arodus. The celebration \u2014 once dedicated to the god Aroden \u2014 is still important to the faithful of Iomedae, who use it to train commoners in combat, ordain apprentice clergy, pick squires for knights, and teach military history, hoping to prevent the mistakes of the past from being repeated. Among those not dedicated to the Inheritor the holiday has lost most of its religious significance since Aroden's death, tending now only toward wild partying, a fact that has precluded the diabolist authorities of Cheliax from prohibiting Armasse outright. Nevertheless, in places where the church of Asmodeus is openly allowed, it hosts special activities for its parishioners during the same week in an effort to counter the influence of the holiday. The city of Corentyn is especially known for its extravagant Armasse festivities.`,id:"824531",note:null,date:{day:16,year:null,month:7},category:null},{name:"Saint Alika's Birthday",description:`Korvosa

Quiet holiday honoring the birth of Saint Alika the Martyr.`,id:"824532",note:null,date:{day:31,year:null,month:7},category:null},{name:"Archerfeast",description:`Erastil

Archer's Day or Archerfeast is a holiday of the god Erastil held annually on the 3rd of Erastus. Despite the holiday's origins in the worship of Erastil, common country folk from the Lands of the Linnorm Kings to Taldor celebrate the height of summer with a day set aside for establishing new relationships, enjoying current camaraderie, and celebrating the gifts of the gods. Archery competitions are held frequently in which the men test their skill with the bow through progressively harder trials. The exact form of competition is different from place to place, and the winner is awarded a rack of elk horns and a quiver of blessed arrows. He is also given the title of "Protector", which he holds until the next year.

While the festival's traditions emphasize contests of marksmanship, most have expanded to exhibit talents of all types, from baking and storytelling to racing and mock combat. Aside from encouraging a fair-like atmosphere, many of the displays and competitions serve one of two secondary purposes: either as a way for merchants to show off their superior livestock and wares, or (more popularly) as a way for eligible men and women to show off to each other.

While the day's events at most Archerfeast fairs are filled with games, food, and crafts, the night brings dancing, drinking, pranks, and the crowning of the princes and princesses of spring and summer for the two single youths and two single adults who fared best in the day's events. The festivities continue late into the evening, but end promptly at midnight, so that in true Erastilian fashion the next day's responsibilities are not overly impeded. For those not of Erastil's flock, however, private parties, drinking, and trysting carry on long into the next morning.`,id:"824533",note:null,date:{day:3,year:null,month:6},category:null},{name:"Founding Festival",description:`Korvosa

Founding Festival is a local Korvosan celebration marking the establishment of the city in 4407 AR. Held annually on 14 Erastus, the festival is a chance for the citizens to let off some steam, drink copiously, and watch magical light shows late into the night.`,id:"824534",note:null,date:{day:14,year:null,month:6},category:null},{name:"Burning Night",description:`Razmiran

Items or people who have transgressed against the god-king of Razmiran are burned on this day.`,id:"824535",note:null,date:{day:17,year:null,month:6},category:null},{name:"Kianidi Festival",description:`Garundi

The Kianidi Festival is a week long event held annually between 15 and 21 Erastus by Garundi people everywhere. The Garundi have a powerful belief in belonging to a specific location in this world, with clans or tribes sometimes traveling for years in search of their true home. In these travels each individual will collect small mementos of the places she or he has visited in order to remember them and maintain a spiritual connection. During the Kianidi, a tribe will gather and display these mementos to the group. The best ones are chosen and made part of the clan or tribal history, something which Garundi feel is a great honor.`,id:"824536",note:null,date:{day:15,year:null,month:6},category:null},{name:"Harvest Moon",description:null,id:"824537",note:null,date:{day:null,year:null,month:8},category:null},{name:"Multiple Events",description:`Festival of Night's Return

Nidal

Celebrated throughout Nidal, this holiday involves the burning of effigies and self-flagellation.

Swallowtail Festival

Desna

Holiday celebrated with storytelling, feasting, and the release of butterflies.

Waning Light Festival

Segada

Also called Blessing of the Sun and Night of Spirits, participants bid farewell to the long days of sunshine with feasting, dancing, and music.`,id:"824538",note:null,date:{day:null,year:null,month:null},category:null},{name:"Signing Day",description:`Andoran, Cheliax, Galt, Isger

Signing Day is a Chelish holiday, dating back to the height of the empire. Observed on the second Oathday of Rova, this is the day on which new laws in the empire took effect. The significance of this day expanded over many years until imperial marriages, significant business arrangements and oaths of fealty were all conducted on this day.

Originally, the holiday began as a celebration of the mutual-defense pact between Cheliax, Isger, Galt and Andoran when the united nations threw off the shackles of Taldor, declaring themselves independent from the empire. Observances of the holiday vary, but often include firework displays, feats of strength, and public debates to showcase speaking and rhetorical skills.

As Cheliax degenerated to civil war and diabolism after 4606 AR, blood pacts and infernal contracts also began to be signed on this day. As a result of Cheliax's new affiliation, Andoran and Galt began to distance themselves from Cheliax and the original interpretation of the holiday. In Andoran it continues to be the day that most national laws take effect as well as being a traditional day of marriage, and the date on which new Steel Falcons are inducted.`,id:"824539",note:null,date:{day:null,year:null,month:8},category:null},{name:"Crabfest",description:`Korvosa

Crabfest is a Korvosan holiday held on the first Wealday of Rova. It celebrates the return of the crabs from the cooler waters of the Jeggare River to their winter habitat in Conqueror's Bay, and is marked by crab boil feasts held throughout the city and its surrounding communities.`,id:"824540",note:null,date:{day:null,year:null,month:8},category:null},{name:"Feast of Szurpade",description:`Irrisen

This "celebration of plenty" festival mocks the traditional harvest festivals celebrated in the region before Baba Yaga and her eternal winter descended upon the land.`,id:"824541",note:null,date:{day:26,year:null,month:8},category:null},{name:"Day of Sundering",description:`Ydersius

Once many holidays were celebrated by the faith of Ydersius, but today only this date has much significance.`,id:"824542",note:null,date:{day:29,year:null,month:8},category:null},{name:"Admani Upastuti",description:`Jalmeri

Admani Upastuti is a Jalmeri holiday celebrated on the first full moon of Lamashan that marks the founding of Jalmeray as a Vudran colony.`,id:"824543",note:null,date:{day:null,year:null,month:9},category:null},{name:"Ascendance Day",description:`Iomedae

Ascendance Day is an Iomedaean holiday, held on the 6th of Lamashan. The day marks the anniversary of the day Iomedae took the Test of the Starstone in the autumn of 3832 AR and ascended to godhood.

Celebration

The day is a joyous celebration for the faithful, with singing, pledging of friendships, and forgiving of old grudges.

To many, the Test of the Starstone represents the greatest of all challenges, yet for Iomedae it was one of three storied promotions in her rise from Aroden's herald to a goddess in her own right. On the 6th of Lamashan, the Inheritor's faithful observe the heroism of Iomedae's life before her moment of ascension and celebrate the anniversary of the apotheosis itself.

The celebration takes place in several stages. Early in the day, troupes of performers\u2014as often passionate amateurs as professionals\u2014stage morality plays featuring the Eleven Acts of Iomedae, the heroic near-miracles and sacrifices she made leading up to her trials in the Starstone Cathedral. Scripts vary by region, city, and even neighborhood, but despite differences in setting, performance medium, and word choice, the themes and morals are all the same.

As the day continues, the priests organize jousts and mock battles, allowing anyone to participate so long as she can demonstrate enough skill to not be a risk to herself or others. The winners of these contests then face tests of mental acuity such as solving riddles, deciphering philosophical quandaries, and answering questions of honor and justice. Those who prove themselves in both contests are awarded a white cloak\u2014representing the Inheritor at peace\u2014styled after Iomedae's own red garment to wear for the rest of the celebration. Feasting and singing follow the competitions, mirroring the jubilation that followed Iomedae's ascension. This is occasion for making pledges of friendship and forgiving enemies, and priests circulate about the crowd offering the Inheritor's blessing to those who do and providing a moment's counsel or mediation for those who need an extra nudge.

The celebration typically ends before midnight, and the following day the priests and previous day's champions gather up the blunted swords from the mock battles, sharpen them, and distribute them among the church's armory and those of like-minded organizations so that all may remain vigilant against evil and prepared to strike it down.`,id:"824544",note:null,date:{day:6,year:null,month:9},category:null},{name:"Bastion Day",description:`Solku

Bastion Day is a two-day festival held annually on 19 and 20 Lamashan in the Katapeshi town of Solku honoring the founding of the town, when it is traditional to host a stranger from one noon until the next.`,id:"824545",note:null,date:{day:19,year:4712,month:9},category:null},{name:"Jestercap",description:`Andoran, Druma, Taldor

Jestercap occurs at the end of the month of Lamashan, traditionally on the 27th (although a few regions have taken to moving the exact day around slightly so it always falls on the last Starday of the month, allowing people who wish to celebrate in excess to have the following day of rest to recover).

History

While Jestercap has been embraced with excited open arms by the gnome communities of the Inner Sea region, its original genesis is said to have been in one of Taldor's coastal cities not long after King Aspex the Even-Tongued broke from the nation, significantly weakening Taldor's power and beginning that nation's long decline. The holiday was originally intended to distract the distraught Taldan populace with a night of revelry and comedic entertainment, but the antics of jesters were simply not enough.

Over the course of the first few years, Jestercap evolved from a holiday of observation to a holiday of participation. Today, the holiday is a time where anyone can pull pranks or jokes or japes on companions, on neighbors, and (most typically) on rivals, with the understanding that provided no lasting harm is done, any humiliations inflicted before midnight are to be taken in stride. Of course, come morning the day after, there are inevitably jokes that went too far, and grudges and feuds borne from Jestercap antics have a way of lingering for months to follow.

In Religion

Followers of Chaldira Zuzaristan, a halfling deity of mischief, treat Jestercap as a holy day and their pranks \u2014 often elaborate and extravagant in nature and plotted for months in advance \u2014 as displays of their faith.`,id:"824546",note:null,date:{day:27,year:null,month:9},category:null},{name:"Feast of the Survivors",description:`Zon-Kuthon, Nidal

A harvest festival signifying the centuries of Nidalese ancestors protected by Zon-Kuthon. The ceremonial tables are made of human bones of community members from past generations.`,id:"824547",note:null,date:{day:null,year:null,month:9},category:null},{name:"Kraken Carnival",description:`Absalom

The second of two local festivals where kite-battlers compete.`,id:"824548",note:null,date:{day:15,year:null,month:9},category:null},{name:"Independence Day",description:`Galt

Marks the beginning of the Red Revolution.`,id:"824549",note:null,date:{day:5,year:null,month:10},category:null},{name:"Seven Veils",description:`Sivanah

The holiday known as Seven Veils, which takes place on the 23rd of Neth in most realms of the Inner Sea region, is a celebration of the region's diversity \u2014 a time when social boundaries break down even further in a day-long event filled with dancing, feasting, and courting. The evening traditionally closes out with the Seven Veil masquerade, a ball wherein the participants wear disguises that hide their race or gender (often using minor magical trinkets and spells) or disguise these features as entirely new characteristics. At the end of the ball, the participants remove their disguises to their partners, often with unpredictable and sometimes delightfully awkward results. Traditionalists and conservative minds often find the Seven Veils masquerades to be scandalous or off-putting, yet they remain particularly popular in most of the larger cities of the land.

Historians note that the original "Dance of the Seven Veils" has a much different genesis than one promoting diversity \u2014 the mysterious cult of Sivanah, goddess of illusions, mystery, and reflections, is generally cited as the source of this festival, and indeed, worshippers of the goddess (herself known as the Seventh Veil) count the 23rd of Neth as one of their most sacred of days. What rituals the church of Sivanah performs on this date, however, are unknown to outsiders, for the cult enjoys its secrets. This secrecy has, unsurprisingly, given rise to all manner of sinister rumour, yet when Seven Veils rolls around each year, its eager participants are quick to set aside rumour in preference for the night's fun and games.`,id:"824550",note:null,date:{day:23,year:null,month:10},category:null},{name:"Abjurant Day",description:`Nethys

Abjurant Day occurs on 8 Neth and is known as a day of cooperation between neighbors to shore up mutual defenses and train allies in magic. Potential apprentices are often tested on the day.`,id:"824551",note:null,date:{day:8,year:null,month:10},category:null},{name:"Great Fire Remembrance",description:`Korvosa

Great Fire Remembrance is a holiday celebrated on each 13 Neth in the Varisian city of Korvosa. It commemorates the Great Fire of 4429 AR, which devastated the then still fledgling Chelish colony of Fort Korvosa. On this somber day, most of the city shuts down and people generally remain at home. It has become tradition not to light any fires (not even cooking fires) on Great Fire Remembrance.`,id:"824552",note:null,date:{day:13,year:null,month:10},category:null},{name:"Even-Tongued Day",description:`Cheliax, Asmodeus, Milani

Observed on 14 of Neth, Even-Tongued Day was once a day of joy and celebration in Cheliax, but has become instead one of mourning.

Originally, the date marked the conquest of Aspex the Even-Tongued, who brought the nations of Galt, Andoran and Isger under Chelish control. Since the death of Aroden and the loss of these nations, the holiday instead marks the loss of territory and glory once held by Cheliax. Oaths are sometimes made, typically to Asmodeus, and rarely of a pleasant nature (such as the reclaiming of the lost empire and vengeance against treacherous former allies).

Citizens wear black on this day, public speaking is forbidden, and old feuds and vendettas are rekindled.`,id:"824553",note:null,date:{day:14,year:null,month:10},category:null},{name:"Evoking Day",description:`Nethys

A holy day to followers of Nethys, Evoking Day is full of vibrant explosions, skillful wielding of spells, and much dancing. Evoking Day is observed on the 18th of Neth, and while this holiday is mostly celebrated in Garund, temples dedicated to Nethys host celebrations throughout the Inner Sea region. Traditional celebrations of Evoking Day have changed over the thousands of years since its first incarnation, but to this day every occurrence of Evoking Day still features a grand meal shared by celebrants during the afternoon and a wondrous exhibition of brilliant and explosive magic once the sun sets. These days, such colorful magical displays are augmented with fireworks of a dozen different colors and patterns.

In temples of Nethys dedicated to revering evocation magic, priests and prominent arcanists participate in spell duels where each contestant stands on a raised platform and takes turns trying to incapacitate her opponent. The magic wielded in theses duels favors the flashy over the dangerous, but clerics of Nethys are on hand to treat any injuries. These duels gather large crowds eager to lend their applause to their favorite contestant.

It is also during this festival when wizards who worship Nethys open their spellbooks to others who share their craft. Wizards normally guard their spellbooks with their lives and covet the eldritch information therein, but on Evoking Day these wizards meet with one another prior to the afternoon feast to share their spells just as they prepare to share a grand meal.

Though Evoking Day is primarily a day of grand magic, those with no spellcasting talent still flock to local temples of Nethys to partake in the shared feast and flashy evening displays of magic and fireworks. Between the meal and into the night, celebrants wear black-and-white robes and perform joyous dances meant to give thanks to the wonders Nethys brought to humankind. These dances are grand affairs involving dozens of dancers all spinning and clapping to the accompanying music as their black-and-white robes fan out around them with each spin. As night descends and the fireworks and magical displays begin, the dancing rises to a climax erupting in shouts and calls to Nethys with each thunderous boom.`,id:"824554",note:null,date:{day:18,year:null,month:10},category:null},{name:"Baptism of Ice",description:`Irrisen

In the Irriseni Baptism of Ice, an annual fertility festival held from the 24th to the 30th of Neth, locals parade all children born during the year through the town in fine clothes. In most towns, the festival ends with a symbolic sacrifice of a child to the cold. However, in Whitethrone and Irrisen's provincial capitals, a peasant child is killed through exposure.`,id:"824555",note:null,date:{day:24,year:null,month:10},category:null},{name:"Transmutatum",description:`Nethys

Transmutatum is one of the three major holidays of the church of Nethys, on 28th of Neth. It is a day of reflection and self-improvement. Many followers of Nethys begin research and crafting projects on this day.`,id:"824556",note:null,date:{day:28,year:null,month:10},category:null},{name:"Winter Week",description:"Traditional feast; time for courting and spending time with friends.",id:"824557",note:null,date:{day:null,year:null,month:11},category:null},{name:"The Shadowchaining",description:`Zon-Kuthon, Nidal

Commemorating the Midnight Lord's gift of shadow animals.`,id:"824558",note:null,date:{day:1,year:null,month:11},category:null},{name:"Pseudodragon Festival",description:`Korvosa

Korvosa's Pseudodragon Festival, a holiday celebrated annually on 7 Kuthona, marks the winter migration of wild pseudodragons from the Mindspin Mountains to Conqueror's Bay, which inspires the creatures already in the city\u2014even those domesticated\u2014to play with their wild kin in the skies over the city. Locals mark the day with a joyous inebriation.`,id:"824559",note:null,date:{day:7,year:null,month:11},category:null},{name:"Ascension Day",description:`Cayden Cailean

Much like the god to whom it is dedicated, the Caydenite holiday of Ascension Day is generally celebrated in a very informal style. Occurring annually on 11 Kuthona, it commemorates the day Cayden Cailean passed the Test of the Starstone and ascended to godhood in 2765 AR. In all likelihood, the 11th of Kuthona is not the exact date on which it actually happened, but since the god was dead drunk when it happened, it will probably be never known.`,id:"824560",note:null,date:{day:11,year:null,month:11},category:null},{name:"Winterbloom",description:`Naderi

Holiday celebrating Naderi's ascension. Celebrations are typically understated but include readings of The Lay of Arden and Lysena.`,id:"824561",note:null,date:{day:15,year:null,month:11},category:null},{name:"Final Day",description:`Groetus

Cultists of Groetus perform an hour's silence at dusk on the last day of the year and seek guidance from their god about the End Time.`,id:"824562",note:null,date:{day:31,year:null,month:11},category:null},{name:"Night of the Pale",description:`Not all of Golarion's holidays and festivals are times of rejoicing and delight. Holidays worshiped by dark and sinister cults and religions tend to be hidden affairs, their rituals and ceremonies involving cruelties and vile practices that send shivers of fear through gentler society. Scholars suspect that the Night of the Pale\u2014a holiday that traditionally takes place on the last day of the year, the 31st of Kuthona\u2014has links to several sinister religions, but today no one church has specific association with the event. Nonetheless, the Night of the Pale is an event that many look forward to all year, whether in fear or excitement.

On the Night of the Pale, it is said that the ghosts of those who died during the previous year manifest upon the world and come to visit the homes they lived in during life. Although some might think that the chance of seeing even the shade of a dearly departed one might be a blessing, the Night of the Pale is not a time for tearful reunions, for these ghosts, tradition says, do not return out of love for those they left behind but out of darker compulsions. Lingering jealousy, unfinished arguments, or the simmering need for revenge are said to be what compels the dead to return to torment the living on the Night of the Pale.

The evening of this night in many communities is celebrated by a morbid feast, the food prepared with themes revolving around graveyards, the dead, and other spooky traditions. This feast, on one level, helps the celebrants to make light of their fears while sharing good company with similarly nervous neighbors, but at another level is believed to placate vengeful spirits as toasts are raised to the memories of the recently departed. These feasts include retellings of favorite memories of the departed, in hopes of reminding the approaching ghosts of brighter and kinder memories than those that compel them to return. The feast always ends at least an hour before midnight in order to give participants time to return home, decorate doors and windows with salt and other trinkets taken from the feasting table (salted bread baked into crook-like shapes are a favorite, as these can be hung from doorknobs and eaves) to ward off evil spirits, and hide in their bedrooms until dawn. Brave youths and adventurers often deliberately stay out after midnight, either to dare the ghosts to challenge them or simply for the thrill of bucking tradition. Every Night of the Pale, it seems, there are disappearances among those who stay out after midnight, although whether these vanishings are the result of dissatisfied locals taking the opportunity to run away from home, murderers or wild animals or other mundane dangers, or the vengeful spirits carrying off their victims depends upon the circumstances.

The morning after a Night of the Pale is also the first day of the new year\u2014a time that many celebrate more as a relief for surviving the night before than in anticipation of what the new year might bring, although regional preferences for how this day is celebrated vary enough that no single tradition holds over the other. Save, of course, the lingering fears of what dread spirits might come knocking upon warded doors one year away...`,id:"824563",note:null,date:{day:31,year:null,month:11},category:null},{name:"Turning Day",description:`Alseta

The changing of the year is celebrated with the forgiveness of old debts and grudges, and embracing new opportunities.`,id:"824564",note:null,date:{day:31,year:null,month:11},category:null},{name:"Ritual of Stardust",description:`Desna

The Ritual of Stardust is one of the few formal religious holidays in honor of the goddess Desna. It is held on both the summer and winter solstices.

Followers of the Song of Spheres gather at dusk and light enormous bonfires and hold feasts, watching the sparks and embers float out into the darkening sky. After it is fully dark, the celebrants chant and sing songs as they watch the fires burn low. When only embers remain, sand mixed with ground star gems (either star rubies, star sapphires, or rose quartz) is thrown on them or into the air downwind. At this point it is common to make proclamations of love and friendship and of promised journeys to come. The twinkling of the sand is thought to mirror the night sky and demonstrate Desna's witnessing of these pronouncements.`,id:"824565",note:null,date:{day:null,year:null,month:null},category:null},{name:"Planting Week",description:`Erastil

This holy week to the god Erastil is a time of heavy work in the fields for farmers.`,id:"824566",note:null,date:{day:null,year:null,month:null},category:null},{name:"Ascendance Night",description:`Norgorber

Day marking the apotheosis of the Reaper of Reputation.`,id:"824567",note:null,date:{day:2,year:null,month:4},category:null},{name:"Azvadeva Dejal",description:`Gruhastha

Celebration of the revelation of the Azvadeva Pujila, with gifts of books, celebrations of knowledge, blessing of animals, and a vegetarian feast.`,id:"824568",note:null,date:{day:3,year:null,month:4},category:null},{name:"Goblin Flea Market",description:`Andoran

A market day that focuses on unusual crafts and offers games to children who dress up for the occasion.`,id:"824569",note:null,date:{day:null,year:null,month:null},category:null},{name:"Breaching Festival",description:`Korvosa

Yearly festival in which contestants try to break through the magical wards protecting the Academae.`,id:"824570",note:null,date:{day:null,year:null,month:4},category:null},{name:"Silverglazer Sunday",description:`Andoran

Silverglazer Sunday is a two-part Andoren national festival that is held on the last Sunday of Arodus and the first Sunday of Rova every year. Celebrants spend the two Sundays fishing, holding swimming competitions, and making enormous puppets.`,id:"824571",note:null,date:{day:null,year:null,month:null},category:null},{name:"Batul al-Alim",description:`Qadira

Batul al-Alim is a holiday celebrated on the last Oathday of Calistril in Qadira. It commemorates the birthday of the popular romantic poet of the same name.`,id:"824572",note:null,date:{day:null,year:null,month:1},category:null}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Religious Holidays",id:"religious-holidays",color:"#9b2c2c"},{name:"Secular Holidays",id:"secular-holidays",color:"#0D47A1"},{name:"Historical Events",id:"historical-events",color:"#455A64"},{name:"Miscellaneous Events",id:"miscellaneous-events",color:"#0288D1"}]},{name:"Calendar of Galifar",description:"Calendar of the world of Eberron.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!1,weekdays:[{type:"day",name:"Sul",id:"ID_598a7bd9b8b9"},{type:"day",name:"Mol",id:"ID_69088ac8f818"},{type:"day",name:"Zol",id:"ID_a8c85a98f8fa"},{type:"day",name:"Wir",id:"ID_fa4b687aaba9"},{type:"day",name:"Zor",id:"ID_58e9a82a6bc8"},{type:"day",name:"Far",id:"ID_9a18cb889ada"},{type:"day",name:"Sar",id:"ID_3b9bfa38c979"}],months:[{name:"Zarantyr",type:"month",length:28,id:"ID_7a8afb09aa6a"},{name:"Olarune",type:"month",length:28,id:"ID_386b188b2a89"},{name:"Therendor",type:"month",length:28,id:"ID_599a0ad859c8"},{name:"Eyre",type:"month",length:28,id:"ID_98a95869e90b"},{name:"Dravago",type:"month",length:28,id:"ID_eb5a194bcbf8"},{name:"Nymm",type:"month",length:28,id:"ID_bb596aa9ca5b"},{name:"Lharvion",type:"month",length:28,id:"ID_fb1bb9dabb88"},{name:"Barrakas",type:"month",length:28,id:"ID_8bcb19c8f90a"},{name:"Rhaan",type:"month",length:28,id:"ID_0a09eb5b7b9b"},{name:"Sypheros",type:"month",length:28,id:"ID_3b98ab1a29e8"},{name:"Aryth",type:"month",length:28,id:"ID_899b59faaba9"},{name:"Vult",type:"month",length:28,id:"ID_8a286b78aac9"}],moons:[{name:"Nymm",cycle:28,offset:-14,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_a8b88988a94a"},{name:"Sypheros",cycle:35,offset:-11,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_5ba80b4b096a"},{name:"Therendor",cycle:42,offset:21,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_c999085a499b"},{name:"Rhaan",cycle:49,offset:9,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_39f91ab8a85a"},{name:"Olarune",cycle:56,offset:27,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_2ada8b99788b"},{name:"Eyre",cycle:63,offset:10,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_49285b79d988"},{name:"Vult",cycle:70,offset:6,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_eaebb94a9acb"},{name:"Zarantyr",cycle:77,offset:31,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_98d86aabcbb9"},{name:"Aryth",cycle:84,offset:41,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_d989b809d97b"},{name:"Dravago",cycle:91,offset:31,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_1a293959eaab"},{name:"Lharvion",cycle:98,offset:34,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_cbf919491a5b"},{name:"Barrakas",cycle:105,offset:-11,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_4a1a2a6b589b"}],leapDays:[],eras:[]},current:{year:998,day:1,month:0},events:[{name:"The Tain Gala - Sharn",description:"The Tain Gala is a notable event held on the first Far of each month in Sharn.",id:"824461",note:null,date:{day:null,year:null,month:null},category:null},{name:"Revelation Day - Blood of Vol",description:"Meditation ceremony for Seekers (also called Ascension Day).",id:"824462",note:null,date:{day:13,year:null,month:0},category:null},{name:"Winter Solstice",description:"The longest night of the year.",id:"824463",note:null,date:{day:14,year:null,month:0},category:null},{name:"Rebirth Eve - The Silver Flame",description:"The Purified new year; a night for spiritual vigil and guarding against evil. ",id:"824464",note:null,date:{day:14,year:null,month:0},category:null},{name:"Crystalfall - Sharn",description:"A day of remembrance; Ice sculptures are created (and destroyed) to commemorate the destruction of the Glass Tower on 9 Olarune in 918 by abjurers. ",id:"824465",note:null,date:{day:9,year:998,month:1},category:null},{name:"Bright Souls' Day - The Silver Flame",description:"On this day each year, the Purified celebrate the lives and sacrifice of all followers of the Flame who died while fighting evil and protecting the faithful. ",id:"824466",note:null,date:{day:18,year:null,month:1},category:null},{name:"The Day of Mourning - Sharn",description:"In commemoration of the destruction of the nation of Cyre, those who survived gather to remember the loss of their kingdom on this date in the year 994. ",id:"824467",note:null,date:{day:20,year:995,month:1},category:null},{name:"Tirasday - The Silver Flame",description:"On this day, the Silver Flame work, give gifts, and partake in joyous celebration out of thankfulness for the new planting season and the birth of Tira Miron - the Voice of the Silver Flame.",id:"824468",note:null,date:{day:5,year:null,month:2},category:null},{name:"Sun's Blessing - The Sovereign Host",description:"The Sovereign Host enjoys this festival of peace, and of setting aside differences, in the name of Dol Arrah.",id:"824469",note:null,date:{day:15,year:null,month:2},category:null},{name:"Initiation Day - The Silver Flame",description:"Seminary graduations and breaking grounds for new churches are common on this day as the Silver Flame recalls their declarations of independent faith and the construction of their first cathedral on this special day each year. ",id:"824470",note:null,date:{day:11,year:null,month:3},category:null},{name:"Baker's Night - The Silver Flame",description:"An old and misunderstood, yet immensely popular, holiday wherein followers of the Silver Flame gather to share pastries and treats created by bakers within their fold. ",id:"824471",note:null,date:{day:6,year:null,month:4},category:null},{name:"Aureon's Crown - Sharn and The Sovereign Host",description:`The Sovereign Host celebrate knowledge on this day with lectures and sermons.Secular institutions hold graduation and commencement ceremonies on this date, as do the monastic schools of the Silver Flame.In Sharn this has become a common secular holiday, wherein even non-devout members of the Five Nations attend lectures and sermons held by the priests of Aureon on philosophical, historical, and a range of other topics - including discussions on the nature of the gods.

`,id:"824472",note:null,date:{day:26,year:null,month:4},category:null},{name:"Promisetide - The Silver Flame",description:"A controversial holiday outside of the Silver Flame faith, on this day the Purified honor the Silver Flame for the promise of paradise. They also honor (without worship) the Sovereign Host for having created the world, before stepping aside to allow the Flame its rightful place as the last god of Eberron.\xA0 ",id:"824473",note:null,date:{day:28,year:null,month:4},category:null},{name:"Brightblade - Sharn and The Sovereign Host",description:`This Sovereign Host festival, dedicated to Dol Dorn, is marked by gladiatorial and athletic contests. 

In Sharn, festival celebrations occur throughout the temple districts with events culminating in a combined contest of champions at the Cornerstone Arena. `,id:"824474",note:null,date:{day:12,year:null,month:5},category:null},{name:"First Dawn - The Silver Flame",description:"On this day in 914, the Church of the Silver Flame officially assumed control of the government of Thrane. On each anniversary, the Purified give thanks for their just rule, while also honoring the memory of King Thalin, whose death paved the way for their governance.",id:"824475",note:null,date:{day:21,year:915,month:5},category:null},{name:"Silvertide - The Silver Flame",description:"Commemoration of both the couatl sacrifice and the entry, thousands of years ago, of the Silver Flame into Eberron mark this highest of holy days. The vast majority of Purified spend this day in prayer and observance.\xA0 ",id:"824476",note:null,date:{day:14,year:null,month:6},category:null},{name:"The Race of Eight Winds - Sharn",description:`Legend tells of King Galifar II's fascination with aerial scouts and cavalry. The evolution of this annual contest took centuries, but has given Sharn an exotic and well anticipated event involving beasts and their riders in a symbiotic quest for glory* over a course that finds them weaving through the spires of the city. 



*the winner also receives 500gp and a land grant located elsewhere in Breland.`,id:"824477",note:null,date:{day:21,year:201,month:6},category:null},{name:"The Hunt - Sharn and The Sovereign Host",description:`The Sovereign Host celebrate Balinor with communal hunts of dangerous creatures. 

In Sharn, a dangerous beast*, whose transport to the city was arranged by the priests of Balinor, is released into the Depths of the Lower-City. Open to any who would participate (and pay an entry fee in the form of a 5gp donation), the victor must return with the beast's head to receive a 500gp purse, local fame, and the blessing of Balinor. 



*often a singular beast, it can be several - which then requires the victor to return with the most skins. `,id:"824478",note:null,date:{day:4,year:null,month:7},category:null},{name:"Victory Day - The Silver Flame",description:"Commemorating the conclusion of the lycanthropic purge (832 YK - 880 YK), on Victory Day the adult faithful of the Silver Flame attend sermons on triumph, defeat, and the somewhat questionable methods utilized by the templars during the purge - while the children of the faithful act out great battles with toy swords. ",id:"824479",note:null,date:{day:9,year:881,month:7},category:null},{name:"Fathen's Fall - Sharn",description:"Honoring the memory of Fathen, a great hero of the Silver Crusade (832 YK - 880 YK), who, in the last days of the purge, was torn apart by wererats on the streets of North Market. Faithful gather on this day at the Shrine of Fathen the Martyr to listen to a sermon from the priest of High Hope. This holiday is often uncomfortable and tense for shifter communities in Sharn. ",id:"824480",note:null,date:{day:25,year:881,month:7},category:null},{name:"Boldrei's Feast - Sharn and The Sovereign Host",description:`A feast of community in the name of Boldrei, extravagant parties are often held on this holiday and it has also become the traditional day for elections. 

In Sharn, a great feast is held at the Pavilion of the Host with goods and services donated\xA0 from local merchants, as well as House Ghallanda. Many grand parties, some quite astonishing in their opulence, are hosted by the wealthiest members of varying districts - often in competition with one another for social standing. `,id:"824481",note:null,date:{day:9,year:null,month:8},category:null},{name:"The Ascension - Sharn",description:"Each year on The Ascension, followers reaffirm their faith and give thanks as well as attend blessing ceremonies at temples throughout the city - the grandest of which occurs at the Cathedral of the Cleansing Flame. All of this is to honor the sacrifice of Tira Miron, the Voice of the Flame, without which there would be no Church of the Silver Flame. Contributions to their community on this day are a high priority for the faithful.",id:"824482",note:null,date:{day:1,year:null,month:9},category:null},{name:"Wildnight - Sharn",description:"With the The Fury (the Sovereign of Passion and Madness) reaching the height of her power on this night, people find it difficult to control or restrain their impulses - once the sun sets, public revelry in the streets climbs to joyous or, all too often, dangerous levels, calming only as the sun rises on the following morning. ",id:"824483",note:null,date:{day:18,year:null,month:9},category:null},{name:"Saint Voltros's Day - The Silver Flame",description:"Though one of the least high holy days, it is marked by brief prayers and church services in the honor of the birth of Saint Voltros - the first paladin called to only serve the Silver Flame.",id:"824484",note:null,date:{day:25,year:null,month:9},category:null},{name:"Thronehold - Sharn",description:"On this day in 996, the Treaty of Thronehold was signed, formally ending the Last War. Annual celebratory feasts are held throughout the Five Nations to mark this auspicious and long-awaited event. ",id:"824485",note:null,date:{day:11,year:997,month:10},category:null},{name:"Rampartide - The Silver Flame",description:"In accordance with scripture, on this day the Purified steel themselves against wickedness, both without and within, through repentance and fasting. Children, elderly, and the sick are required only to give up their favorite foods for the day. ",id:"824486",note:null,date:{day:24,year:null,month:10},category:null},{name:"Long Shadows - Sharn",description:"As dark magic dominates over these three days of the Long Shadows, the myth of Sovereign Lord Aureon's stolen shadow is forefront in the minds of the people. Most will spend these days indoors huddled around the warmth of a fire, but those few who worship the dark deity use this time to prey upon the weak and the foolish. ",id:"824487",note:null,date:{day:26,year:null,month:11},category:null},{name:"Khybersef - The Silver Flame",description:`Originally called Khyber's Eve, the Purified spend the night in intense prayer and spiritual vigilance against the, according to scripture, "thinning of the bonds that hold the demon lords in Khyber" between now (the beginning of winter) and the solstice. Quests and crusades often begin on Khybersef. `,id:"824488",note:null,date:{day:27,year:null,month:11},category:null},{name:"Spring Equinox",description:"The spring equinox is when the day and the night are equally as long, and are getting longer.",id:"824489",note:null,date:{day:null,year:null,month:null},category:null},{name:"Summer Solstice",description:"	At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824490",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The autumn equinox is when the day and the night are equally as long, and are getting shorter.",id:"824491",note:null,date:{day:null,year:null,month:null},category:null}],id:null,categories:[]},{name:"Barovian Calendar",description:"Calendar of the realm of Barovia, home of Strahd.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!0,weekdays:[{type:"day",name:"Monday",id:"ID_6a183b08c8eb"},{type:"day",name:"Tuesday",id:"ID_892b7b7a5ae9"},{type:"day",name:"Wednesday",id:"ID_6bb98899ba68"},{type:"day",name:"Thursday",id:"ID_4a7b683aea19"},{type:"day",name:"Friday",id:"ID_78690a099b89"},{type:"day",name:"Saturday",id:"ID_ba5b09ba5a89"},{type:"day",name:"Sunday",id:"ID_29b90acaead9"}],months:[{name:"1st Moon",type:"month",length:31,id:"ID_7b4978ab581a"},{name:"2nd Moon",type:"month",length:28,id:"ID_cb99fbb9395b"},{name:"3rd Moon",type:"month",length:31,id:"ID_79881a89cb18"},{name:"4th Moon",type:"month",length:30,id:"ID_5b9a8a397908"},{name:"5th Moon",type:"month",length:31,id:"ID_f8399ab80818"},{name:"6th Moon",type:"month",length:30,id:"ID_3ac84a7bc869"},{name:"7th Moon",type:"month",length:31,id:"ID_e98bc86bc809"},{name:"8th Moon",type:"month",length:31,id:"ID_89ea78ca5988"},{name:"9th Moon",type:"month",length:30,id:"ID_798a3b990a4b"},{name:"10th Moon",type:"month",length:31,id:"ID_3a9999e8eb59"},{name:"11th Moon",type:"month",length:30,id:"ID_db39383b990a"},{name:"12th Moon",type:"month",length:31,id:"ID_1bfa3b180a48"}],moons:[{name:"Moon",cycle:29.530588853,offset:10.24953,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_e98b3a8ab8da"}],leapDays:[{name:"Leap Day",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:400},{ignore:!1,exclusive:!0,interval:100},{ignore:!1,exclusive:!1,interval:4}],offset:0,timespan:1,intercalary:!1,id:"ID_6a28dbb81a48"}],eras:[{name:"Before Christ",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-9e3,month:0,day:0}},{name:"Anno Domini",description:"",format:"Year {{year}} - {{era_name}}",start:{year:1,month:0,day:1}}]},current:{year:735,day:1,month:0},events:[{name:"Winter Solstice",description:"The Winter Solstice is the day of the year with the least time between sunrise and sunset. Many western cultures consider it the official start of winter.",id:"824455",note:null,date:{day:null,year:null,month:null},category:"natural-event"},{name:"Summer Solstice",description:`The Summer Solstice is the day of the year with the most time between 
sunrise and sunset. Many western cultures consider it the official start
 of summer.`,id:"824456",note:null,date:{day:null,year:null,month:null},category:"natural-event"},{name:"Spring Equinox",description:`The Spring Equinox,
also called the Vernal Equinox, is the day between the winter and
summer solstices where the day is the exact same length as the night.
Many western cultures consider it the official start of Spring.
`,id:"824457",note:null,date:{day:null,year:null,month:null},category:"natural-event"},{name:"Autumnal Equinox",description:`The Autumnal Equinox,
also called the Fall Equinox, is the midpoint between the summer and
winter solstices, where the day is the exact same length as the night.
Many western cultures consider it the official start of Autumn.
`,id:"824458",note:null,date:{day:null,year:null,month:null},category:null},{name:"New Year's Day",description:"New Year's day marks the start of a new year.",id:"824459",note:null,date:{day:1,year:null,month:null},category:null},{name:"Paschal Full Moon",description:"The first full moon after march 21st, which is considered the fixed date for the spring equinox.",id:"824460",note:null,date:{day:null,year:null,month:null},category:"natural-event"}],id:null,categories:[{name:"Natural Event",id:"natural-event",color:"#9e9d24"}]},{name:"Exandrian Calendar",description:"Calendar of the world of Wildemount.",static:{displayDayNumber:!1,firstWeekDay:2,incrementDay:!1,displayMoons:!0,overflow:!0,weekdays:[{type:"day",name:"Miresen",id:"ID_3b38aaa81bca"},{type:"day",name:"Grissen",id:"ID_da6b19882baa"},{type:"day",name:"Whelsen",id:"ID_a9cae8f88b98"},{type:"day",name:"Conthsen",id:"ID_e87859eb5aaa"},{type:"day",name:"Folsen",id:"ID_59180abbea8a"},{type:"day",name:"Yulisen",id:"ID_98082bd8d8ca"},{type:"day",name:"Da'leysen",id:"ID_da4ba92b299a"}],months:[{name:"Horisal",type:"month",length:29,id:"ID_e89a4ab9995b"},{name:"Misuthar",type:"month",length:30,id:"ID_18b8894bab7b"},{name:"Dualahei",type:"month",length:30,id:"ID_0a9b29f8f8db"},{name:"Thunsheer",type:"month",length:31,id:"ID_6a8a8a5bea5b"},{name:"Unndilar",type:"month",length:28,id:"ID_b8295bdbcafa"},{name:"Brussendar",type:"month",length:31,id:"ID_c92a489bb909"},{name:"Sydenstar",type:"month",length:32,id:"ID_7b48bb1b0a4a"},{name:"Fessuran",type:"month",length:29,id:"ID_289858c97849"},{name:"Quen'pillar",type:"month",length:27,id:"ID_f8abd9a86aa9"},{name:"Cuersaar",type:"month",length:29,id:"ID_7aba59fa2b69"},{name:"Duscar",type:"month",length:32,id:"ID_5819f86b99cb"}],moons:[{name:"Catha",cycle:33,offset:7,faceColor:"#ffffff",shadowColor:"#292b4a",id:"ID_0ab929092b5b"},{name:"Ruidus",cycle:328,offset:80,faceColor:"#ff6161",shadowColor:"#1f1f1f",id:"ID_b9783ac818e9"}],leapDays:[],eras:[{name:"The Founding",description:"",format:"Year {{year}} - {{era_name}}",start:{year:1,month:0,day:1}},{name:"Age of Arcanum",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-1500,month:0,day:1}},{name:"The Calamity",description:"",format:"Year {{year}} - {{era_name}}",start:{year:-665,month:0,day:1}},{name:"Post-Divergence",description:"",format:"Year {{year}} P.D.",start:{year:1,month:0,day:1}}]},current:{day:1,month:0,year:836},events:[{name:"Spring Equinox",description:"The spring equinox is when the day and the night are equally as long, and are getting longer.",id:"824430",note:null,date:{day:null,year:null,month:null},category:null},{name:"Summer Solstice",description:"	At the summer solstice, the Sun travels the longest path through the sky, and that day therefore has the most daylight.",id:"824431",note:null,date:{day:null,year:null,month:null},category:null},{name:"Autumn Equinox",description:"The autumn equinox is when the day and the night are equally as long, and are getting shorter.",id:"824432",note:null,date:{day:null,year:null,month:null},category:null},{name:"Winter Solstice",description:"The winter solstice marks the shortest day and longest night of the year, when the sun is at its lowest arc in the sky.",id:"824433",note:null,date:{day:null,year:null,month:null},category:null},{name:"New Dawn",description:`The first day of the new year is also the holy day of the Changebringer, as the old year gives way to a new path.

In Tal'Dorei, Emon celebrates New Dawn with a grand midnight feast, which commonly features a short play celebrating the changes witnessed in the past year.

On the Menagerie Coast, people celebrate by having a feast on the shore at dusk to watch the sunset. They feast and discuss their hopes for the new year until the sun rises.`,id:"824434",note:null,date:{day:1,year:null,month:0},category:"religious-holidays"},{name:"Hillsgold",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824435",note:null,date:{day:27,year:null,month:0},category:"secular-holidays"},{name:"Day of Challenging",description:`The holy day of the Stormlord is one of the most raucous holidays in Emon. Thousands of spectators attend the annual Godsbrawl, which is held in the fighting ring within the Temple of the Stormlord. The people root for their deity's favored champion, and there is a fierce (yet friendly) rivalry between the Champion of the Stormlord and the Champion of the Platinum Dragon. The winner earns the title of "Supreme Champion" for an entire year.

The Day of Challenging is one of the most raucous holidays in Port Damali, and thousands of spectators attend the annual Godsbrawl held in the Temple of\xA0Kord to root for their favored deity's champion, particularly the chosen champions of the Storm Lord and the\xA0All-Hammer.\xA0`,id:"824436",note:null,date:{day:7,year:null,month:1},category:"religious-holidays"},{name:"Renewal Festival",description:"Spring begins early in the month of Dualahei, officially starting on the 13th with the Renewal Festival.",id:"824437",note:null,date:{day:13,year:null,month:2},category:"secular-holidays"},{name:"Wild's Grandeur",description:`Though the Archeart is the god of spring, the peak of the spring season is the holy day of the Wildmother.

The people in the southern wilds of Tal'Dorei celebrate the Wildmother's strength by journeying to a place of great natural beauty. This could be the top of a mountainous waterfall, the center of a desert, or even an old and peaceful city park (such as Azalea Street Park in Emon). Though Emon rarely celebrates Wild's Grandeur, the few who do will plant trees in observance of the holiday.

The people of the Menagerie Coast set aside this day to sail for no reason other than the pleasure of observing the natural beauty of their surroundings. Those who still partake in elements of Ki'Nau culture take this day to appreciate the fruits and foods granted by the sea, leaving offerings of delicacies and small handmade crafts at temporary altars of twisted roots and grasses.`,id:"824438",note:null,date:{day:20,year:null,month:2},category:"religious-holidays"},{name:"Harvest's Rise",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824439",note:null,date:{day:11,year:null,month:3},category:"secular-holidays"},{name:"Merryfrond's Day",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824440",note:null,date:{day:31,year:null,month:3},category:"secular-holidays"},{name:"Deep Solace",description:`Moradin's holy day is Deep Solace, which is celebrated on the eighteenth day of the fifth month. Especially devout followers of the All-Hammer spend the day in isolation, meditating on the meaning of family and how they may be better mothers, fathers, siblings, and children.

The dwarven communities across Exandria, such as the ones in Grimgolir and Kraghammer, celebrate with a full day of feasting and drinking.\xA0`,id:"824441",note:null,date:{day:18,year:null,month:4},category:"religious-holidays"},{name:"Zenith",description:"Summer begins in the middle of Unndilar, officially starting at noon on the 26th day known as the Zenith.",id:"824442",note:null,date:{day:26,year:null,month:4},category:"secular-holidays"},{name:"Artisan's Faire",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824443",note:null,date:{day:15,year:null,month:5},category:"secular-holidays"},{name:"Elvendawn",description:`Corellon's holy day is called Elvendawn,
or Midsummer. It is celebrated on the twentieth day
of the sixth month, and commemorates the elves' first
emergence from the Feywild.

In Syngorn, the Elves open small doorways into the Feywild and celebrate alongside the wild fey with uncharacteristic vigor.

Though the Dwendalian
Empire doesn't promote the worship of the Arch Heart,
the elves of Bysaes Tyl quietly celebrate in private by
opening small doors to the Feywild and having a little
more wine than usual.\xA0`,id:"824444",note:null,date:{day:20,year:null,month:5},category:"religious-holidays"},{name:"Highsummer",description:`The holy day of the Dawnfather is the peak of the summer season.

Emon celebrates with an entire week of gift-giving and feasting, ending at midnight on the 21st of Sydenstar (the anniversary of the Battle of the Umbra Hills, where Zan Tal'Dorei dethroned Trist Drassig).

Whitestone (where the Dawnfather is the city's patron god) celebrates with gift-giving and a festival of lights around the Sun Tree. Due to the Briarwood occupation, money is thin, so most Whitestone folk choose to recount the small things they are thankful for, rather than buy gifts.

While other parts of Exandria feast, the Dwendalian
Empire uses this day as an opportunity to enlist more
soldiers in its army. The military holds great feasts and
hands out toy soldiers and other propaganda, encouraging people to enlist and help fight against the evil that
threatens the king.\xA0`,id:"824445",note:null,date:{day:7,year:null,month:6},category:"religious-holidays"},{name:"Morn of Largesse",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824446",note:null,date:{day:14,year:null,month:6},category:"secular-holidays"},{name:"Harvest's Close",description:"Autumn begins on the 3rd of Fessuran\xA0and is typically celebrated with feasting in rural regions and with carnivals in the cities.\xA0",id:"824447",note:null,date:{day:3,year:null,month:7},category:"secular-holidays"},{name:"The Hazel Festival",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824448",note:null,date:{day:12,year:null,month:8},category:"secular-holidays"},{name:"Civilization's Dawn",description:`The Law Bearer's holy day is Civilization's
Dawn, which is celebrated on the autumnal equinox,
usually the twenty-second day of the ninth month.

Emon celebrates with a great bonfire in the square of each neighborhood, around which each community dances and gives gifts.

In the
Dwendalian Empire, people celebrate by having feasts 
in honor of the laws of the Dwendal bloodline. One seat
at every table is left open for the king, who eats in spirit
with the people he rules.\xA0`,id:"824449",note:null,date:{day:22,year:null,month:8},category:"religious-holidays"},{name:"Night of Ascension",description:`The Raven Queen's holy day is called the Night of Ascension, celebrating her apotheosis. The actual date of the her rise to divinity is unclear, but the Night of Ascension is celebrated on the thirteenth day of the tenth month.

Though most in Emon see this celebration of the dead as unnerving and macabre, the followers of the Matron of Ravens believe that the honored dead would prefer to be venerated with cheer, not misery.

What was once a night of cheery celebration of the dead in the Dwendalian Empire has recently become an occasion to burn effigies and decry the Kryn Dynasty for their unnatural relationship with death.`,id:"824450",note:null,date:{day:13,year:null,month:9},category:"religious-holidays"},{name:"Zan's Cup",description:"This holiday is up to the calendar owner to decide what it is for! :)",id:"824451",note:null,date:{day:21,year:null,month:9},category:"secular-holidays"},{name:"Barren Eve",description:"Winter begins on the 2nd day of Duscar, the Barren Eve, which is a nighttime celebration and remembrance of those who fell in battle.",id:"824452",note:null,date:{day:2,year:null,month:10},category:"secular-holidays"},{name:"Embertide",description:"Bahamut's holy day is called Embertide,\xA0and is celebrated on the fifth day of Duscar. This is a day\xA0of remembrance, solemnity, and respect for those who\xA0have fallen in the defense of others.",id:"824453",note:null,date:{day:5,year:null,month:10},category:"religious-holidays"},{name:"Winter's Crest",description:`This day celebrates the freedom of Tal'Dorei from Errevon the Rimelord. It is the peak of the winter season, so devout followers of the Matron of Ravens (as the goddess of winter) consider it to be one of her holy days.

However, in most of the land, people see Winter's Crest as a secular holiday, often celebrated with omnipresent music in public areas, lavish gift-giving to relatives and loved ones, and the cutting and decorating of trees placed indoors. The Sun Tree in Whitestone is often decorated with lights and other baubles for Winter's Crest.`,id:"824454",note:null,date:{day:20,year:null,month:10},category:"secular-holidays"}],id:null,categories:[{name:"Religious Holidays",id:"religious-holidays",color:"#0D47A1"},{name:"Secular Holidays",id:"secular-holidays",color:"#4A148C"}]},{name:"Calendar of Harptos",description:"Calendar of Faer\xFBn of the Forgotten Realms.",static:{displayDayNumber:!1,firstWeekDay:0,incrementDay:!1,displayMoons:!0,overflow:!1,weekdays:[{type:"day",name:"I",id:"ID_9999882bb94a"},{type:"day",name:"II",id:"ID_8a0b4b79d888"},{type:"day",name:"III",id:"ID_da483aca8bf9"},{type:"day",name:"IV",id:"ID_a8fbea39cac8"},{type:"day",name:"V",id:"ID_9b19d9787b0b"},{type:"day",name:"VI",id:"ID_382a590a8a28"},{type:"day",name:"VII",id:"ID_fbca0ab80afb"},{type:"day",name:"VIII",id:"ID_ca093bca5ad9"},{type:"day",name:"IX",id:"ID_d95b39098bf8"},{type:"day",name:"X",id:"ID_389bfb5858db"}],months:[{name:"Hammer (Deepwinter)",type:"month",length:30,id:"ID_cbeb4b190b6a"},{name:"Midwinter",type:"intercalary",length:1,id:"ID_89bad9089b7b"},{name:"Alturiak (The Claw of Winter)",type:"month",length:30,id:"ID_6a08a8aacb7b"},{name:"Ches (The Claw of the Sunsets)",type:"month",length:30,id:"ID_db2a7bf97afa"},{name:"Tarsakh (The Claw of Storms)",type:"month",length:30,id:"ID_6b48982b0bda"},{name:"Greengrass",type:"intercalary",length:1,id:"ID_08790af92809"},{name:"Mirtul (The Melting)",type:"month",length:30,id:"ID_b91b39f95a28"},{name:"Kythorn (The Time of Flowers)",type:"month",length:30,id:"ID_f8e9585a2bf8"},{name:"Flamerule (Summertide)",type:"month",length:30,id:"ID_fa895bdb38e9"},{name:"Midsummer",type:"intercalary",length:1,id:"ID_a9181b5a683a"},{name:"Eleasis (Highsun)",type:"month",length:30,id:"ID_1b1b1b287b0a"},{name:"Eleint (The Fading)",type:"month",length:30,id:"ID_1aca5918993a"},{name:"Highharvestide",type:"intercalary",length:1,id:"ID_a94a183b4b88"},{name:"Marpenoth (Leaffall)",type:"month",length:30,id:"ID_58d97969eb79"},{name:"Uktar (The Rotting)",type:"month",length:30,id:"ID_4b090b787b18"},{name:"The Feast of the Moon",type:"intercalary",length:1,id:"ID_1b0ae8dbdb4a"},{name:"Nightal (The Drawing Down)",type:"month",length:30,id:"ID_abb82afab80a"}],moons:[{name:"Sel\xFAne",cycle:30.4375,offset:13.9,faceColor:"#ffffff",shadowColor:"#000000",id:"ID_48ea2a69a888"}],leapDays:[{name:"Shieldsmeet",type:"leapday",interval:[{ignore:!1,exclusive:!1,interval:4}],offset:0,timespan:9,intercalary:!1,id:"ID_5b08faa88ada"}],eras:[]},current:{year:1491,day:1,month:0},events:[{name:"Winter Solstice",description:null,id:"824588",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Vernal Equinox",description:null,id:"824589",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Summer Solstice",description:null,id:"824590",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Autumnal Equinox",description:null,id:"824591",note:null,date:{day:null,year:null,month:null},category:"natural-events"},{name:"Shieldmeet",description:`Shieldmeet was the equivalent of a leap year day in the Calendar of Harptos, occurring once every four years, adding a day after the festival of Midsummer and before Eleasis 1. Traditionally the day was used for fairs, bazaars, musical and theatrical performances, and tournaments of skill and magical ability. Nobles usually held court to hear the petitions of their people and to make or renew trade pacts, alliances, and agreements. Shieldmeet was known as Cinnaelos'Cor (also seen as Cinnaeloscor), "the Day of Corellon's Peace" in elvish and marked the end of an aeloulaev and the beginning of a new one in the elven Aryselmalyn calendar.`,id:"824592",note:null,date:{day:2,year:null,month:9},category:"festivals"},{name:"Feast of the Moon",description:`The Feast of the Moon, or Moonfest, was an annual festival in the Calendar of Harptos, occurring between the final night of Uktar and the first day of Nightal. It was the last great festival of the calendar year.

The day traditionally marked the onset of winter. It was also a time to celebrate and honor the ancestors and the respected dead. On this day, folk blessed their ancestors' graves and performed the Ritual of Remembrance. People also gathered to tell stories of the deeds of their ancestors and of the gods until deep into the night, until they merged and became legend. This was a time to hear of past heroes, great treasures, and lost cities.

In Faer\xC3\u0192\xC2\xBBn, battles were typically fought between harvest-time and the coming of winter. This meant that most of the fighting usually occurred in the month of Uktar. The timing of the Feast of the Moon\xC3\xA2\xE2\u201A\xAC\xE2\u20ACafter recently slain soldiers had joined the ranks of the dead\xC3\xA2\xE2\u201A\xAC\xE2\u20ACwas thus practical, if sadly ironic.

The Heralds of Faer\xC3\u0192\xC2\xBBn had a number of special duties on the Feast of the Moon. Prime among these was to perform the Bloodsong ceremony, at which a Herald publicly recited the genealogies of each noble family in the area. In this way, the Heralds reaffirmed a noble family's traditional authority and status, as well as the respect accorded to them.

Priests of a number of deities of various pantheons held rites, ceremonies, and festivals on the Feast of the Moon. Many, though not all, focused on remembering the dead in one way or another.`,id:"824593",note:null,date:{day:1,year:null,month:15},category:"festivals"},{name:"Highharvesttide",description:`Highharvestide was an annual festival in the Calendar of Harptos, taking place between 30 Eleint and 1 Marpenoth. It was traditionally a feast to celebrate the harvest and the abundance of food, but also the time when those wishing to travel left on their journeys before winter set in.

Preparations for the feast started as early as a tenday before, while preparing, cooking, and preserving the harvest for the cold winter months. Traditions varied from community to community, but examples of festive activity included food-related contests; races and challenges of skill and strength; receiving homemade sweets from the local clergy; and priests blessing larders, wine cellars, grain bins, and food preserves.

This day was often an important anniversary to various governments. Often, taxes and tithes came due, rulers held "open courts" to hear the concerns of their citizens, oaths were publicly renewed, troops received marching orders to new duty stations, and guilds met to confer on prices and rate changes for goods and services.

According to tradition, dwarves only drank water and elves drank only dew on this day. However, these traditions began to fade in the 14th and 15th century DR.

It was said that children born on this day were favored by Tymora to have lifelong good luck but be smitten with wanderlust. Another legend was that human females born on this day had control over their reproductive system (i.e., got pregnant only when they wanted to) by force of will alone, and that they could instantly sense when they had been poisoned, either by ingestion or being bitten by a venomous creature for example.`,id:"824594",note:null,date:{day:1,year:null,month:12},category:"festivals"},{name:"Greengrass",description:"Greengrass was a festival to welcome in the first day of spring in the Calendar of Harptos. It occured annually on a special day between Tarsakh 30 and Mirtul 1. Traditionally, the wealthier people brought out flowers to give to the less wealthy, who either wore them or spread them on the ground to encourage the deities to usher in the summer.",id:"824595",note:null,date:{day:1,year:null,month:5},category:"festivals"},{name:"Midwinter",description:`Midwinter (also known as Deadwinter Day) was a festival to mark the midpoint of winter in the Calendar of Harptos. It occured on a special day between Hammer 30 and Alturiak 1. Amongst nobles and monarchs it was known as Midwinter and was traditionally used to make or renew alliances, although the common people called it Deadwinter Day, a reference to the cold and hard times that remained before the spring.

On Midwinter Day the Red Fellowship of the Deity known as the Red Knight observes the Retreat. This solemn ceremony consists of an assembly wherein the clergy discuss the previous year's campaigns. Strategies are discussed, battles analyzed, and the accumulated lore integrated into the church's teachings.

The holiest day of the year for the Church of Shevarash is Midwinter Night, during which the Dark Court Slaughter is remembered. Inductions into the ranks of the clergy occur at this time. Each new cleric screams vows of vengeance into the night air and swears neither to laugh nor smile until the Spider Queen and her followers are no more.`,id:"824596",note:null,date:{day:1,year:null,month:1},category:"festivals"},{name:"Midsummer",description:"Midsummer was a festival that celebrated love and music through feast. It occurred between Flamerule 30 and Eleasis 1 on the Calendar of Harptos. It was a time when love advanced, and it was said the deities themselves took a hand to ensure good weather. If bad weather was experienced on this night it was considered an extremely bad omen. Shieldmeet occurred the day after Midsummer on leap years.",id:"824597",note:null,date:{day:1,year:null,month:9},category:"festivals"}],id:null,categories:[{name:"Natural Events",id:"natural-events",color:"#2E7D32"},{name:"Festivals",id:"festivals",color:"#9b2c2c"}]}];var ao=class extends On.Modal{async onOpen(){await this.display()}async display(){this.containerEl.addClass("fantasy-calendar-choose-preset"),this.contentEl.empty(),this.contentEl.createEl("h3",{text:"Choose a Preset Calendar"});let e=this.contentEl.createDiv("fantasy-calendar-preset-container");for(let r of Zl){let a=new On.ButtonComponent(e).onClick(()=>{this.preset=r,this.display()});this.preset==r&&a.setCta(),a.buttonEl.createDiv({cls:"setting-item-name",text:r.name}),a.buttonEl.createDiv({cls:"setting-item-description",text:r.description})}let n=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new On.ButtonComponent(n).setButtonText("Apply").onClick(()=>{this.saved=!0,this.preset=(0,$l.default)(this.preset),this.close()}).setCta(),new On.ExtraButtonComponent(n).setIcon("cross").onClick(()=>{this.close()})}};function Ia(t){let e=t-1;return e*e*e+1}function io(t,{delay:e=0,duration:n=400,easing:r=Ia,x:a=0,y:i=0,opacity:o=0}={}){let l=getComputedStyle(t),s=+l.opacity,d=l.transform==="none"?"":l.transform,u=s*(1-o);return{delay:e,duration:n,easing:r,css:(c,m)=>`
			transform: ${d} translate(${(1-c)*a}px, ${(1-c)*i}px);
			opacity: ${s-u*m}`}}var Kl=Oe(require("obsidian"));function Ig(t){he(t,"svelte-1gmkedg",'.fantasy-calendar-nested-summary.svelte-1gmkedg.svelte-1gmkedg{outline:none;display:block !important;list-style:none !important;list-style-type:none !important;min-height:1rem;border-top-left-radius:0.1rem;border-top-right-radius:0.1rem;cursor:pointer}summary.svelte-1gmkedg.svelte-1gmkedg::-webkit-details-marker,summary.svelte-1gmkedg.svelte-1gmkedg::marker{display:none !important}.collapser.svelte-1gmkedg.svelte-1gmkedg{position:absolute;top:50%;right:8px;transform:translateY(-50%);content:""}.handle.svelte-1gmkedg.svelte-1gmkedg{transform:rotate(0deg);transition:transform 0.25s;background-color:currentColor;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;-webkit-mask-image:var(--admonition-details-icon);mask-image:var(--admonition-details-icon);width:20px;height:20px}details[open].svelte-1gmkedg .handle.svelte-1gmkedg{transform:rotate(90deg)}')}function Og(t){let e,n,r,a,i,o,l,s,d,u,c,m=t[5].default,g=Sl(m,t,t[4],null);return{c(){e=N("details"),n=N("summary"),r=N("div"),i=G(),o=N("div"),o.innerHTML='<div class="handle svelte-1gmkedg"></div>',l=G(),g&&g.c(),b(o,"class","collapser svelte-1gmkedg"),b(n,"class","fantasy-calendar-nested-summary svelte-1gmkedg"),b(e,"class","fantasy-calendar-nested-settings svelte-1gmkedg")},m(p,E){U(p,e,E),w(e,n),w(n,r),w(n,i),w(n,o),w(e,l),g&&g.m(e,null),d=!0,u||(c=[fe(a=t[1].call(null,r)),fe(s=t[0].call(null,e))],u=!0)},p(p,[E]){g&&g.p&&(!d||E&16)&&Ml(g,m,p,p[4],d?Nl(m,p[4],E,null):Il(p[4]),null)},i(p){d||(j(g,p),d=!0)},o(p){V(g,p),d=!1},d(p){p&&W(e),g&&g.d(p),u=!1,we(c)}}}function qg(t,e,n){let{$$slots:r={},$$scope:a}=e,{open:i=!0}=e,{name:o}=e,l=d=>{i&&d.setAttr("open","open")},s=d=>{new Kl.Setting(d).setHeading().setName(o)};return t.$$set=d=>{"open"in d&&n(2,i=d.open),"name"in d&&n(3,o=d.name),"$$scope"in d&&n(4,a=d.$$scope)},[l,s,i,o,a,r]}var Ql=class extends le{constructor(e){super();ce(this,e,qg,Og,oe,{open:2,name:3},Ig)}},sn=Ql;var jr=Oe(require("obsidian"));var sr=[];function lr(t,e=K){let n,r=new Set;function a(l){if(oe(t,l)&&(t=l,n)){let s=!sr.length;for(let d of r)d[1](),sr.push(d,t);if(s){for(let d=0;d<sr.length;d+=2)sr[d][0](sr[d+1]);sr.length=0}}}function i(l){a(l(t))}function o(l,s=K){let d=[l,s];return r.add(d),r.size===1&&(n=e(a)||K),l(t),()=>{r.delete(d),r.size===0&&(n(),n=null)}}return{set:a,update:i,subscribe:o}}function Rg(t){he(t,"svelte-a1p8m4",".fantasy-calendar-date-field-container.svelte-a1p8m4{display:flex;gap:1rem;border:0}.fantasy-calendar-date-field.svelte-a1p8m4{display:flex;flex-flow:column nowrap;flex:1 1 0;gap:0.5rem}")}function Xl(t,e,n){let r=t.slice();return r[2]=e[n],r[11]=n,r}function Jl(t){let e,n=t[2].name+"",r,a;return{c(){e=N("option"),r=be(n),e.__value=a=t[11],e.value=e.__value},m(i,o){U(i,e,o),w(e,r)},p(i,o){o&2&&n!==(n=i[2].name+"")&&Ae(r,n)},d(i){i&&W(e)}}}function Lg(t){let e,n,r,a,i,o,l,s,d,u,c,m,g,p,E,y,S,C=t[1].filter(eu),F=[];for(let M=0;M<C.length;M+=1)F[M]=Jl(Xl(t,C,M));return{c(){e=N("div"),n=N("div"),r=N("label"),r.textContent="Day",a=G(),i=N("input"),o=G(),l=N("div"),s=N("label"),s.textContent="Month",d=G(),u=N("select");for(let M=0;M<F.length;M+=1)F[M].c();c=G(),m=N("div"),g=N("label"),g.textContent="Year",p=G(),E=N("input"),b(r,"for",""),b(i,"type","number"),b(i,"spellcheck","false"),b(i,"placeholder","Day"),b(n,"class","fantasy-calendar-date-field  svelte-a1p8m4"),b(s,"for",""),b(u,"class","dropdown"),t[0].current.month===void 0&&Gt(()=>t[4].call(u)),b(l,"class","fantasy-calendar-date-field  svelte-a1p8m4"),b(g,"for",""),b(E,"type","number"),b(E,"spellcheck","false"),b(E,"placeholder","Year"),b(m,"class","fantasy-calendar-date-field  svelte-a1p8m4"),b(e,"class","fantasy-calendar-date-field-container setting-item  svelte-a1p8m4")},m(M,T){U(M,e,T),w(e,n),w(n,r),w(n,a),w(n,i),At(i,t[0].current.day),w(e,o),w(e,l),w(l,s),w(l,d),w(l,u);for(let x=0;x<F.length;x+=1)F[x].m(u,null);cn(u,t[0].current.month),w(e,c),w(e,m),w(m,g),w(m,p),w(m,E),At(E,t[0].current.year),y||(S=[J(i,"input",t[3]),J(u,"change",t[4]),J(E,"input",t[5])],y=!0)},p(M,[T]){if(T&1&&wn(i.value)!==M[0].current.day&&At(i,M[0].current.day),T&2){C=M[1].filter(eu);let x;for(x=0;x<C.length;x+=1){let _=Xl(M,C,x);F[x]?F[x].p(_,T):(F[x]=Jl(_),F[x].c(),F[x].m(u,null))}for(;x<F.length;x+=1)F[x].d(1);F.length=C.length}T&1&&cn(u,M[0].current.month),T&1&&wn(E.value)!==M[0].current.year&&At(E,M[0].current.year)},i:K,o:K,d(M){M&&W(e),Ye(F,M),y=!1,we(S)}}}var eu=t=>t.name;function Pg(t,e,n){let r,a,i;Ze("store").subscribe(g=>n(0,i=g));let l=g=>{let p=g.createEl("label",{text:"Day"});new jr.TextComponent(g).setPlaceholder("Day")},s=g=>{g.createEl("label",{text:"Month"}),new jr.DropdownComponent(g)},d=g=>{let p=g.createEl("label",{text:"Year"});new jr.TextComponent(g).setPlaceholder("Year")};function u(){i.current.day=wn(this.value),n(0,i)}function c(){i.current.month=rr(this),n(0,i)}function m(){i.current.year=wn(this.value),n(0,i)}return t.$$.update=()=>{if(t.$$.dirty&1){e:r=i.current}if(t.$$.dirty&1){e:n(1,a=i.static.months)}},[i,a,s,u,c,m]}var tu=class extends le{constructor(e){super();ce(this,e,Pg,Lg,oe,{},Rg)}},nu=tu;function jg(t){he(t,"svelte-1ezzfh1",".text-area-component.svelte-1ezzfh1{display:flex;flex-flow:column nowrap;align-items:flex-start;width:100%}textarea.svelte-1ezzfh1{width:100%}")}function Vg(t){let e,n,r,a,i,o,l;return{c(){e=N("div"),n=N("label"),r=be(t[1]),a=G(),i=N("textarea"),b(i,"spellcheck","false"),b(i,"placeholder",t[2]),b(i,"class","svelte-1ezzfh1"),b(e,"class","text-area-component setting-item svelte-1ezzfh1"),ge(e,"cls",t[3])},m(s,d){U(s,e,d),w(e,n),w(n,r),w(e,a),w(e,i),At(i,t[0]),o||(l=[J(i,"input",t[5]),J(i,"blur",t[6])],o=!0)},p(s,[d]){d&2&&Ae(r,s[1]),d&4&&b(i,"placeholder",s[2]),d&1&&At(i,s[0]),d&8&&ge(e,"cls",s[3])},i:K,o:K,d(s){s&&W(e),o=!1,we(l)}}}function Hg(t,e,n){let r=Se(),{value:a}=e,{name:i}=e,{placeholder:o=i}=e,{cls:l=""}=e;function s(){a=this.value,n(0,a)}let d=()=>r("blur",a);return t.$$set=u=>{"value"in u&&n(0,a=u.value),"name"in u&&n(1,i=u.name),"placeholder"in u&&n(2,o=u.placeholder),"cls"in u&&n(3,l=u.cls)},[a,i,o,l,r,s,d]}var ru=class extends le{constructor(e){super();ce(this,e,Hg,Vg,oe,{value:0,name:1,placeholder:2,cls:3},jg)}},au=ru;function Wg(t){let e,n,r,a,i,o,l,s,d,u,c,m;return{c(){e=N("div"),n=N("div"),r=N("div"),a=be(t[1]),i=G(),o=N("div"),l=be(t[2]),s=G(),d=N("div"),u=N("input"),b(r,"class","setting-item-name"),b(o,"class","setting-item-description"),b(n,"class","setting-item-info"),b(u,"type","text"),b(u,"spellcheck","false"),b(u,"placeholder",t[3]),b(d,"class","setting-item-control"),b(e,"class","setting-item")},m(g,p){U(g,e,p),w(e,n),w(n,r),w(r,a),w(n,i),w(n,o),w(o,l),w(e,s),w(e,d),w(d,u),At(u,t[0]),c||(m=[J(u,"input",t[5]),J(u,"blur",t[6])],c=!0)},p(g,[p]){p&2&&Ae(a,g[1]),p&4&&Ae(l,g[2]),p&8&&b(u,"placeholder",g[3]),p&1&&u.value!==g[0]&&At(u,g[0])},i:K,o:K,d(g){g&&W(e),c=!1,we(m)}}}function Gg(t,e,n){let r=Se(),{value:a}=e,{name:i}=e,{desc:o=""}=e,{placeholder:l=i}=e;function s(){a=this.value,n(0,a)}let d=()=>{r("blur",a)};return t.$$set=u=>{"value"in u&&n(0,a=u.value),"name"in u&&n(1,i=u.name),"desc"in u&&n(2,o=u.desc),"placeholder"in u&&n(3,l=u.placeholder)},[a,i,o,l,r,s,d]}var iu=class extends le{constructor(e){super();ce(this,e,Gg,Wg,oe,{value:0,name:1,desc:2,placeholder:3})}},ou=iu;function su(t){let e;function n(i,o){return typeof i[1]=="string"?zg:Ug}let r=n(t,-1),a=r(t);return{c(){a.c(),e=Je()},m(i,o){a.m(i,o),U(i,e,o)},p(i,o){r===(r=n(i,o))&&a?a.p(i,o):(a.d(1),a=r(i),a&&(a.c(),a.m(e.parentNode,e)))},d(i){a.d(i),i&&W(e)}}}function Ug(t){let e,n,r,a;return{c(){e=N("div"),b(e,"class","setting-item-description")},m(i,o){U(i,e,o),r||(a=fe(n=t[3].call(null,e)),r=!0)},p:K,d(i){i&&W(e),r=!1,a()}}}function zg(t){let e,n;return{c(){e=N("div"),n=be(t[1]),b(e,"class","setting-item-description")},m(r,a){U(r,e,a),w(e,n)},p(r,a){a&2&&Ae(n,r[1])},d(r){r&&W(e)}}}function Yg(t){let e,n,r,a,i,o,l,s,d,u,c=t[1]&&su(t);return{c(){e=N("div"),n=N("div"),r=N("div"),a=be(t[0]),i=G(),c&&c.c(),o=G(),l=N("div"),s=N("div"),b(r,"class","setting-item-name"),b(n,"class","setting-item-info"),b(s,"class","checkbox-container"),ge(s,"is-enabled",t[2]),b(l,"class","setting-item-control"),b(e,"class","setting-item mod-toggle")},m(m,g){U(m,e,g),w(e,n),w(n,r),w(r,a),w(n,i),c&&c.m(n,null),w(e,o),w(e,l),w(l,s),d||(u=J(s,"click",t[4]),d=!0)},p(m,[g]){g&1&&Ae(a,m[0]),m[1]?c?c.p(m,g):(c=su(m),c.c(),c.m(n,null)):c&&(c.d(1),c=null),g&4&&ge(s,"is-enabled",m[2])},i:K,o:K,d(m){m&&W(e),c&&c.d(),d=!1,u()}}}function Zg(t,e,n){let{name:r}=e,{desc:a}=e,{value:i}=e,o=s=>{s.append(a)};function l(s){pe.call(this,t,s)}return t.$$set=s=>{"name"in s&&n(0,r=s.name),"desc"in s&&n(1,a=s.desc),"value"in s&&n(2,i=s.value)},[r,a,i,o,l]}var lu=class extends le{constructor(e){super();ce(this,e,Zg,Yg,oe,{name:0,desc:1,value:2})}},fn=lu;function $g(t){he(t,"svelte-1uda69j",".fantasy-calendar-info.svelte-1uda69j .setting-item{padding-top:18px}.fantasy-calendar-info.svelte-1uda69j .fantasy-calendar-description{display:flex;flex-flow:column;align-items:flex-start}.fantasy-calendar-info.svelte-1uda69j .fantasy-calendar-description textarea{width:100%}")}function Kg(t){let e,n,r,a,i,o,l,s,d;return n=new ou({props:{name:"Calendar Name",value:t[0].name}}),n.$on("blur",t[4]),a=new au({props:{name:"Calendar Description",value:t[0].description}}),a.$on("blur",t[5]),o=new fn({props:{name:"Display Day Number",desc:"Display day of year in Day View",value:t[2]}}),o.$on("click",t[6]),s=new fn({props:{name:"Auto Increment Day",desc:"Automatically increment the current day every real-world day.",value:t[1]}}),s.$on("click",t[7]),{c(){e=N("div"),re(n.$$.fragment),r=G(),re(a.$$.fragment),i=G(),re(o.$$.fragment),l=G(),re(s.$$.fragment),b(e,"class","fantasy-calendar-info svelte-1uda69j")},m(u,c){U(u,e,c),te(n,e,null),w(e,r),te(a,e,null),w(e,i),te(o,e,null),w(e,l),te(s,e,null),d=!0},p(u,[c]){let m={};c&1&&(m.value=u[0].name),n.$set(m);let g={};c&1&&(g.value=u[0].description),a.$set(g);let p={};c&4&&(p.value=u[2]),o.$set(p);let E={};c&2&&(E.value=u[1]),s.$set(E)},i(u){d||(j(n.$$.fragment,u),j(a.$$.fragment,u),j(o.$$.fragment,u),j(s.$$.fragment,u),d=!0)},o(u){V(n.$$.fragment,u),V(a.$$.fragment,u),V(o.$$.fragment,u),V(s.$$.fragment,u),d=!1},d(u){u&&W(e),ee(n),ee(a),ee(o),ee(s)}}}function Qg(t,e,n){let r,a,{calendar:i}=e,o=Ze("store");o.subscribe(c=>n(0,i=c));let l=c=>{n(0,i.name=c.detail,i),o.set(i)},s=c=>n(0,i.description=c.detail,i),d=()=>{n(0,i.static.displayDayNumber=!i.static.displayDayNumber,i)},u=()=>{n(0,i.static.incrementDay=!i.static.incrementDay,i)};return t.$$set=c=>{"calendar"in c&&n(0,i=c.calendar)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(2,r=i.static.displayDayNumber)}if(t.$$.dirty&1){e:n(1,a=i.static.incrementDay)}},[i,a,r,o,l,s,d,u]}var uu=class extends le{constructor(e){super();ce(this,e,Qg,Kg,oe,{calendar:0},$g)}},cu=uu;function ur(t,{from:e,to:n},r={}){let a=getComputedStyle(t),i=a.transform==="none"?"":a.transform,[o,l]=a.transformOrigin.split(" ").map(parseFloat),s=e.left+e.width*o/n.width-(n.left+o),d=e.top+e.height*l/n.height-(n.top+l),{delay:u=0,duration:c=g=>Math.sqrt(g)*120,easing:m=Ia}=r;return{delay:u,duration:tt(c)?c(Math.sqrt(s*s+d*d)):c,easing:m,css:(g,p)=>{let E=p*s,y=p*d,S=g+p*e.width/n.width,C=g+p*e.height/n.height;return`transform: ${i} translate(${E}px, ${y}px) scale(${S}, ${C});`}}}function Vr(t){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Vr=function(e){return typeof e}:Vr=function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Vr(t)}function Hr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function du(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable})),n.push.apply(n,r)}return n}function qn(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?du(Object(n),!0).forEach(function(r){Hr(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):du(Object(n)).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function Xg(t,e){if(t==null)return{};var n={},r=Object.keys(t),a,i;for(i=0;i<r.length;i++)a=r[i],!(e.indexOf(a)>=0)&&(n[a]=t[a]);return n}function Jg(t,e){if(t==null)return{};var n=Xg(t,e),r,a;if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],!(e.indexOf(r)>=0)&&(!Object.prototype.propertyIsEnumerable.call(t,r)||(n[r]=t[r]))}return n}function e2(t,e){return n2(t)||a2(t,e)||oo(t,e)||o2()}function Oa(t){return t2(t)||r2(t)||oo(t)||i2()}function t2(t){if(Array.isArray(t))return so(t)}function n2(t){if(Array.isArray(t))return t}function r2(t){if(typeof Symbol!="undefined"&&Symbol.iterator in Object(t))return Array.from(t)}function a2(t,e){if(!(typeof Symbol=="undefined"||!(Symbol.iterator in Object(t)))){var n=[],r=!0,a=!1,i=void 0;try{for(var o=t[Symbol.iterator](),l;!(r=(l=o.next()).done)&&(n.push(l.value),!(e&&n.length===e));r=!0);}catch(s){a=!0,i=s}finally{try{!r&&o.return!=null&&o.return()}finally{if(a)throw i}}return n}}function oo(t,e){if(!!t){if(typeof t=="string")return so(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set")return Array.from(t);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return so(t,e)}}function so(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function i2(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function o2(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function lo(t,e){var n;if(typeof Symbol=="undefined"||t[Symbol.iterator]==null){if(Array.isArray(t)||(n=oo(t))||e&&t&&typeof t.length=="number"){n&&(t=n);var r=0,a=function(){};return{s:a,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(s){throw s},f:a}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var i=!0,o=!1,l;return{s:function(){n=t[Symbol.iterator]()},n:function(){var s=n.next();return i=s.done,s},e:function(s){o=!0,l=s},f:function(){try{!i&&n.return!=null&&n.return()}finally{if(o)throw l}}}}var s2="finalize",l2="consider";function cr(t,e,n){t.dispatchEvent(new CustomEvent(s2,{detail:{items:e,info:n}}))}function _n(t,e,n){t.dispatchEvent(new CustomEvent(l2,{detail:{items:e,info:n}}))}var qa="draggedEntered",Wr="draggedLeft",Ra="draggedOverIndex",uo="draggedLeftDocument",La={LEFT_FOR_ANOTHER:"leftForAnother",OUTSIDE_OF_ANY:"outsideOfAny"};function u2(t,e,n){t.dispatchEvent(new CustomEvent(qa,{detail:{indexObj:e,draggedEl:n}}))}function c2(t,e,n){t.dispatchEvent(new CustomEvent(Wr,{detail:{draggedEl:e,type:La.LEFT_FOR_ANOTHER,theOtherDz:n}}))}function d2(t,e){t.dispatchEvent(new CustomEvent(Wr,{detail:{draggedEl:e,type:La.OUTSIDE_OF_ANY}}))}function f2(t,e,n){t.dispatchEvent(new CustomEvent(Ra,{detail:{indexObj:e,draggedEl:n}}))}function h2(t){window.dispatchEvent(new CustomEvent(uo,{detail:{draggedEl:t}}))}var nt={DRAG_STARTED:"dragStarted",DRAGGED_ENTERED:qa,DRAGGED_ENTERED_ANOTHER:"dragEnteredAnother",DRAGGED_OVER_INDEX:Ra,DRAGGED_LEFT:Wr,DRAGGED_LEFT_ALL:"draggedLeftAll",DROPPED_INTO_ZONE:"droppedIntoZone",DROPPED_INTO_ANOTHER:"droppedIntoAnother",DROPPED_OUTSIDE_OF_ANY:"droppedOutsideOfAny",DRAG_STOPPED:"dragStopped"},Qe={POINTER:"pointer",KEYBOARD:"keyboard"},Pa="isDndShadowItem",co="data-is-dnd-shadow-item",fo="id:dnd-shadow-placeholder-0000",p2="dnd-action-dragged-el",mt="id",ho=0;function fu(){ho++}function hu(){if(ho===0)throw new Error("Bug! trying to decrement when there are no dropzones");ho--}var m2=typeof window=="undefined",Be=function(){};function pu(t){var e,n=t.getBoundingClientRect(),r=getComputedStyle(t),a=r.transform;if(a){var i,o,l,s;if(a.startsWith("matrix3d("))e=a.slice(9,-1).split(/, /),i=+e[0],o=+e[5],l=+e[12],s=+e[13];else if(a.startsWith("matrix("))e=a.slice(7,-1).split(/, /),i=+e[0],o=+e[3],l=+e[4],s=+e[5];else return n;var d=r.transformOrigin,u=n.x-l-(1-i)*parseFloat(d),c=n.y-s-(1-o)*parseFloat(d.slice(d.indexOf(" ")+1)),m=i?n.width/i:t.offsetWidth,g=o?n.height/o:t.offsetHeight;return{x:u,y:c,width:m,height:g,top:c,right:u+m,bottom:c+g,left:u}}else return n}function mu(t){var e=pu(t);return{top:e.top+window.scrollY,bottom:e.bottom+window.scrollY,left:e.left+window.scrollX,right:e.right+window.scrollX}}function po(t){var e=t.getBoundingClientRect();return{top:e.top+window.scrollY,bottom:e.bottom+window.scrollY,left:e.left+window.scrollX,right:e.right+window.scrollX}}function gu(t){return{x:(t.left+t.right)/2,y:(t.top+t.bottom)/2}}function g2(t,e){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}function mo(t,e){return t.y<=e.bottom&&t.y>=e.top&&t.x>=e.left&&t.x<=e.right}function Gr(t){return gu(po(t))}function yu(t,e){var n=Gr(t),r=mu(e);return mo(n,r)}function y2(t,e){var n=Gr(t),r=Gr(e);return g2(n,r)}function v2(t){var e=po(t);return e.right<0||e.left>document.documentElement.scrollWidth||e.bottom<0||e.top>document.documentElement.scrollHeight}function b2(t,e){var n=po(e);return mo(t,n)?{top:t.y-n.top,bottom:n.bottom-t.y,left:t.x-n.left,right:Math.min(n.right,document.documentElement.clientWidth)-t.x}:null}var dr;function vu(){Be(function(){return"resetting indexes cache"}),dr=new Map}vu();function w2(t){var e=Array.from(t.children).findIndex(function(n){return n.getAttribute(co)});if(e>=0)return dr.has(t)||dr.set(t,new Map),dr.get(t).set(e,mu(t.children[e])),e}function D2(t,e){if(!yu(t,e))return null;var n=e.children;if(n.length===0)return{index:0,isProximityBased:!0};for(var r=w2(e),a=0;a<n.length;a++)if(yu(t,n[a])){var i=dr.has(e)&&dr.get(e).get(a);return i&&!mo(Gr(t),i)?{index:r,isProximityBased:!1}:{index:a,isProximityBased:!1}}for(var o=Number.MAX_VALUE,l=void 0,s=0;s<n.length;s++){var d=y2(t,n[s]);d<o&&(o=d,l=s)}return{index:l,isProximityBased:!0}}var Ur=25;function bu(){var t;function e(){t={directionObj:void 0,stepPx:0}}e();function n(i){var o=t,l=o.directionObj,s=o.stepPx;l&&(i.scrollBy(l.x*s,l.y*s),window.requestAnimationFrame(function(){return n(i)}))}function r(i){return Ur-i}function a(i,o){if(!o)return!1;var l=b2(i,o);if(l===null)return e(),!1;var s=!!t.directionObj,d=!1,u=!1;return o.scrollHeight>o.clientHeight&&(l.bottom<Ur?(d=!0,t.directionObj={x:0,y:1},t.stepPx=r(l.bottom)):l.top<Ur&&(d=!0,t.directionObj={x:0,y:-1},t.stepPx=r(l.top)),!s&&d)||o.scrollWidth>o.clientWidth&&(l.right<Ur?(u=!0,t.directionObj={x:1,y:0},t.stepPx=r(l.right)):l.left<Ur&&(u=!0,t.directionObj={x:-1,y:0},t.stepPx=r(l.left)),!s&&u)?(n(o),!0):(e(),!1)}return{scrollIfNeeded:a,resetScrolling:e}}function hn(t){return JSON.stringify(t,null,2)}function wu(t){if(!t)throw new Error("cannot get depth of a falsy node");return Du(t,0)}function Du(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return t.parentElement?Du(t.parentElement,e+1):e-1}function _2(t,e){if(Object.keys(t).length!==Object.keys(e).length)return!1;for(var n in t)if(!{}.hasOwnProperty.call(e,n)||e[n]!==t[n])return!1;return!0}function E2(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}var C2=200,_u=10,Eu=bu(),A2=Eu.scrollIfNeeded,k2=Eu.resetScrolling,go;function x2(t,e){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:C2,r,a,i=!1,o,l=Array.from(e).sort(function(d,u){return wu(u)-wu(d)});function s(){var d=Gr(t),u=A2(d,r);if(!u&&o&&Math.abs(o.x-d.x)<_u&&Math.abs(o.y-d.y)<_u){go=window.setTimeout(s,n);return}if(v2(t)){Be(function(){return"off document"}),h2(t);return}o=d;var c=!1,m=lo(l),g;try{for(m.s();!(g=m.n()).done;){var p=g.value,E=D2(t,p);if(E!==null){var y=E.index;c=!0,p!==r?(r&&c2(r,t,p),u2(p,E,t),r=p):y!==a&&(f2(p,E,t),a=y);break}}}catch(S){m.e(S)}finally{m.f()}!c&&i&&r?(d2(r,t),r=void 0,a=void 0,i=!1):i=!0,go=window.setTimeout(s,n)}s()}function F2(){Be(function(){return"unobserving"}),clearTimeout(go),k2(),vu()}var T2=300,ja;function Va(t){var e=t.touches?t.touches[0]:t;ja={x:e.clientX,y:e.clientY}}var Cu=bu(),S2=Cu.scrollIfNeeded,B2=Cu.resetScrolling,Au;function ku(){ja&&S2(ja,document.documentElement),Au=window.setTimeout(ku,T2)}function N2(){Be(function(){return"arming window scroller"}),window.addEventListener("mousemove",Va),window.addEventListener("touchmove",Va),ku()}function M2(){Be(function(){return"disarming window scroller"}),window.removeEventListener("mousemove",Va),window.removeEventListener("touchmove",Va),ja=void 0,window.clearTimeout(Au),B2()}var I2=.2;function Rn(t){return"".concat(t," ").concat(I2,"s ease")}function O2(t,e){var n=t.getBoundingClientRect(),r=t.cloneNode(!0);xu(t,r),r.id=p2,r.style.position="fixed";var a=n.top,i=n.left;if(r.style.top="".concat(a,"px"),r.style.left="".concat(i,"px"),e){var o=gu(n);a-=o.y-e.y,i-=o.x-e.x,window.setTimeout(function(){r.style.top="".concat(a,"px"),r.style.left="".concat(i,"px")},0)}return r.style.margin="0",r.style.boxSizing="border-box",r.style.height="".concat(n.height,"px"),r.style.width="".concat(n.width,"px"),r.style.transition="".concat(Rn("top"),", ").concat(Rn("left"),", ").concat(Rn("background-color"),", ").concat(Rn("opacity"),", ").concat(Rn("color")," "),window.setTimeout(function(){return r.style.transition+=", ".concat(Rn("width"),", ").concat(Rn("height"))},0),r.style.zIndex="9999",r.style.cursor="grabbing",r}function q2(t){t.style.cursor="grab"}function R2(t,e,n,r,a){var i=e.getBoundingClientRect(),o=t.getBoundingClientRect(),l=i.width-o.width,s=i.height-o.height;if(l||s){var d={left:(n-o.left)/o.width,top:(r-o.top)/o.height};t.style.height="".concat(i.height,"px"),t.style.width="".concat(i.width,"px"),t.style.left="".concat(parseFloat(t.style.left)-d.left*l,"px"),t.style.top="".concat(parseFloat(t.style.top)-d.top*s,"px")}xu(e,t),a()}function xu(t,e){var n=window.getComputedStyle(t);Array.from(n).filter(function(r){return r.startsWith("background")||r.startsWith("padding")||r.startsWith("font")||r.startsWith("text")||r.startsWith("align")||r.startsWith("justify")||r.startsWith("display")||r.startsWith("flex")||r.startsWith("border")||r==="opacity"||r==="color"||r==="list-style-type"}).forEach(function(r){return e.style.setProperty(r,n.getPropertyValue(r),n.getPropertyPriority(r))})}function L2(t,e){t.draggable=!1,t.ondragstart=function(){return!1},e?(t.style.userSelect="",t.style.WebkitUserSelect="",t.style.cursor=""):(t.style.userSelect="none",t.style.WebkitUserSelect="none",t.style.cursor="grab")}function P2(t){t.style.display="none",t.style.position="fixed",t.style.zIndex="-5"}function j2(t){t.style.visibility="hidden",t.setAttribute(co,"true")}function V2(t){t.style.visibility="",t.removeAttribute(co)}function Ha(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){},n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:function(){return[]};t.forEach(function(r){var a=e(r);Object.keys(a).forEach(function(i){r.style[i]=a[i]}),n(r).forEach(function(i){return r.classList.add(i)})})}function Wa(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){},n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:function(){return[]};t.forEach(function(r){var a=e(r);Object.keys(a).forEach(function(i){r.style[i]=""}),n(r).forEach(function(i){return r.classList.contains(i)&&r.classList.remove(i)})})}function H2(t){var e=t.style.minHeight;t.style.minHeight=window.getComputedStyle(t).getPropertyValue("height");var n=t.style.minWidth;return t.style.minWidth=window.getComputedStyle(t).getPropertyValue("width"),function(){t.style.minHeight=e,t.style.minWidth=n}}var W2="--any--",G2=100,Fu=3,Tu={outline:"rgba(255, 255, 102, 0.7) solid 2px"},ln,Dt,Vt,Ga,st,Ua,fr,Ot,En,Ut,hr=!1,yo=!1,vo,zr=!1,en=new Map,ct=new Map,bo=new WeakMap;function U2(t,e){Be(function(){return"registering drop-zone if absent"}),en.has(e)||en.set(e,new Set),en.get(e).has(t)||(en.get(e).add(t),fu())}function Su(t,e){en.get(e).delete(t),hu(),en.get(e).size===0&&en.delete(e)}function z2(){Be(function(){return"watching dragged element"}),N2();var t=en.get(Ga),e=lo(t),n;try{for(e.s();!(n=e.n()).done;){var r=n.value;r.addEventListener(qa,Bu),r.addEventListener(Wr,Nu),r.addEventListener(Ra,Mu)}}catch(i){e.e(i)}finally{e.f()}window.addEventListener(uo,pr);var a=Math.max.apply(Math,[G2].concat(Oa(Array.from(t.keys()).map(function(i){return ct.get(i).dropAnimationDurationMs}))));x2(Dt,t,a*1.07)}function Y2(){Be(function(){return"unwatching dragged element"}),M2();var t=en.get(Ga),e=lo(t),n;try{for(e.s();!(n=e.n()).done;){var r=n.value;r.removeEventListener(qa,Bu),r.removeEventListener(Wr,Nu),r.removeEventListener(Ra,Mu)}}catch(a){e.e(a)}finally{e.f()}window.removeEventListener(uo,pr),F2()}function Z2(t){return t.findIndex(function(e){return e[mt]===fo})}function za(t){return t.findIndex(function(e){return!!e[Pa]&&e[mt]!==fo})}function Bu(t){Be(function(){return["dragged entered",t.currentTarget,t.detail]});var e=ct.get(t.currentTarget),n=e.items,r=e.dropFromOthersDisabled;if(r&&t.currentTarget!==st){Be(function(){return"ignoring dragged entered because drop is currently disabled"});return}if(zr=!1,n=n.filter(function(c){return c[mt]!==fr[mt]}),Be(function(){return"dragged entered items ".concat(hn(n))}),st!==t.currentTarget){var a=ct.get(st).items,i=a.filter(function(c){return!c[Pa]});_n(st,i,{trigger:nt.DRAGGED_ENTERED_ANOTHER,id:Vt[mt],source:Qe.POINTER})}else{var o=Z2(n);o!==-1&&(Be(function(){return"removing placeholder item from origin dz"}),n.splice(o,1))}var l=t.detail.indexObj,s=l.index,d=l.isProximityBased,u=d&&s===t.currentTarget.children.length-1?s+1:s;Ot=t.currentTarget,n.splice(u,0,fr),_n(t.currentTarget,n,{trigger:nt.DRAGGED_ENTERED,id:Vt[mt],source:Qe.POINTER})}function Nu(t){if(!!hr){Be(function(){return["dragged left",t.currentTarget,t.detail]});var e=ct.get(t.currentTarget),n=e.items,r=e.dropFromOthersDisabled;if(r&&t.currentTarget!==st&&t.currentTarget!==Ot){Be(function(){return"drop is currently disabled"});return}var a=za(n),i=n.splice(a,1)[0];Ot=void 0;var o=t.detail,l=o.type,s=o.theOtherDz;if(l===La.OUTSIDE_OF_ANY||l===La.LEFT_FOR_ANOTHER&&s!==st&&ct.get(s).dropFromOthersDisabled){Be(function(){return"dragged left all, putting shadow element back in the origin dz"}),zr=!0,Ot=st;var d=ct.get(st).items;d.splice(Ua,0,i),_n(st,d,{trigger:nt.DRAGGED_LEFT_ALL,id:Vt[mt],source:Qe.POINTER})}_n(t.currentTarget,n,{trigger:nt.DRAGGED_LEFT,id:Vt[mt],source:Qe.POINTER})}}function Mu(t){Be(function(){return["dragged is over index",t.currentTarget,t.detail]});var e=ct.get(t.currentTarget),n=e.items,r=e.dropFromOthersDisabled;if(r&&t.currentTarget!==st){Be(function(){return"drop is currently disabled"});return}zr=!1;var a=t.detail.indexObj.index,i=za(n);n.splice(i,1),n.splice(a,0,fr),_n(t.currentTarget,n,{trigger:nt.DRAGGED_OVER_INDEX,id:Vt[mt],source:Qe.POINTER})}function Ya(t){t.preventDefault();var e=t.touches?t.touches[0]:t;Ut={x:e.clientX,y:e.clientY},Dt.style.transform="translate3d(".concat(Ut.x-En.x,"px, ").concat(Ut.y-En.y,"px, 0)")}function pr(){Be(function(){return"dropped"}),yo=!0,window.removeEventListener("mousemove",Ya),window.removeEventListener("touchmove",Ya),window.removeEventListener("mouseup",pr),window.removeEventListener("touchend",pr),Y2(),q2(Dt),Ot||(Be(function(){return"element was dropped right after it left origin but before entering somewhere else"}),Ot=st),Be(function(){return["dropped in dz",Ot]});var t=ct.get(Ot),e=t.items,n=t.type;Wa(en.get(n),function(i){return ct.get(i).dropTargetStyle},function(i){return ct.get(i).dropTargetClasses});var r=za(e);r===-1&&(r=Ua),e=e.map(function(i){return i[Pa]?Vt:i});function a(){vo(),cr(Ot,e,{trigger:zr?nt.DROPPED_OUTSIDE_OF_ANY:nt.DROPPED_INTO_ZONE,id:Vt[mt],source:Qe.POINTER}),Ot!==st&&cr(st,ct.get(st).items,{trigger:nt.DROPPED_INTO_ANOTHER,id:Vt[mt],source:Qe.POINTER}),V2(Ot.children[r]),K2()}$2(r,a)}function $2(t,e){var n=pu(Ot.children[t]),r={x:n.left-parseFloat(Dt.style.left),y:n.top-parseFloat(Dt.style.top)},a=ct.get(Ot),i=a.dropAnimationDurationMs,o="transform ".concat(i,"ms ease");Dt.style.transition=Dt.style.transition?Dt.style.transition+","+o:o,Dt.style.transform="translate3d(".concat(r.x,"px, ").concat(r.y,"px, 0)"),window.setTimeout(e,i)}function K2(){Dt.remove(),ln.remove(),Dt=void 0,ln=void 0,Vt=void 0,Ga=void 0,st=void 0,Ua=void 0,fr=void 0,Ot=void 0,En=void 0,Ut=void 0,hr=!1,yo=!1,vo=void 0,zr=!1}function Q2(t,e){var n={items:void 0,type:void 0,flipDurationMs:0,dragDisabled:!1,morphDisabled:!1,dropFromOthersDisabled:!1,dropTargetStyle:Tu,dropTargetClasses:[],transformDraggedElement:function(){},centreDraggedOnCursor:!1};Be(function(){return["dndzone good to go options: ".concat(hn(e),", config: ").concat(hn(n)),{node:t}]});var r=new Map;function a(){window.addEventListener("mousemove",l,{passive:!1}),window.addEventListener("touchmove",l,{passive:!1,capture:!1}),window.addEventListener("mouseup",o,{passive:!1}),window.addEventListener("touchend",o,{passive:!1})}function i(){window.removeEventListener("mousemove",l),window.removeEventListener("touchmove",l),window.removeEventListener("mouseup",o),window.removeEventListener("touchend",o)}function o(){i(),ln=void 0,En=void 0,Ut=void 0}function l(c){c.preventDefault();var m=c.touches?c.touches[0]:c;Ut={x:m.clientX,y:m.clientY},(Math.abs(Ut.x-En.x)>=Fu||Math.abs(Ut.y-En.y)>=Fu)&&(i(),d())}function s(c){if(c.target!==c.currentTarget&&(c.target.value!==void 0||c.target.isContentEditable)){Be(function(){return"won't initiate drag on a nested input element"});return}if(c.button){Be(function(){return"ignoring none left click button: ".concat(c.button)});return}if(hr){Be(function(){return"cannot start a new drag before finalizing previous one"});return}c.stopPropagation();var m=c.touches?c.touches[0]:c;En={x:m.clientX,y:m.clientY},Ut=qn({},En),ln=c.currentTarget,a()}function d(){Be(function(){return["drag start config: ".concat(hn(n)),ln]}),hr=!0;var c=r.get(ln);Ua=c,st=ln.parentElement;var m=st.getRootNode(),g=m.body||m,p=n.items,E=n.type,y=n.centreDraggedOnCursor;Vt=qn({},p[c]),Ga=E,fr=qn(qn({},Vt),{},Hr({},Pa,!0));var S=qn(qn({},fr),{},Hr({},mt,fo));Dt=O2(ln,y&&Ut);function C(){Dt.parentElement?window.requestAnimationFrame(C):(g.appendChild(Dt),Dt.focus(),z2(),P2(ln),g.appendChild(ln))}window.requestAnimationFrame(C),Ha(Array.from(en.get(n.type)).filter(function(F){return F===st||!ct.get(F).dropFromOthersDisabled}),function(F){return ct.get(F).dropTargetStyle},function(F){return ct.get(F).dropTargetClasses}),p.splice(c,1,S),vo=H2(st),_n(st,p,{trigger:nt.DRAG_STARTED,id:Vt[mt],source:Qe.POINTER}),window.addEventListener("mousemove",Ya,{passive:!1}),window.addEventListener("touchmove",Ya,{passive:!1,capture:!1}),window.addEventListener("mouseup",pr,{passive:!1}),window.addEventListener("touchend",pr,{passive:!1})}function u(c){var m=c.items,g=m===void 0?void 0:m,p=c.flipDurationMs,E=p===void 0?0:p,y=c.type,S=y===void 0?W2:y,C=c.dragDisabled,F=C===void 0?!1:C,M=c.morphDisabled,T=M===void 0?!1:M,x=c.dropFromOthersDisabled,_=x===void 0?!1:x,k=c.dropTargetStyle,D=k===void 0?Tu:k,R=c.dropTargetClasses,q=R===void 0?[]:R,H=c.transformDraggedElement,ne=H===void 0?function(){}:H,ye=c.centreDraggedOnCursor,ae=ye===void 0?!1:ye;n.dropAnimationDurationMs=E,n.type&&S!==n.type&&Su(t,n.type),n.type=S,U2(t,S),n.items=Oa(g),n.dragDisabled=F,n.morphDisabled=T,n.transformDraggedElement=ne,n.centreDraggedOnCursor=ae,hr&&!yo&&(!_2(D,n.dropTargetStyle)||!E2(q,n.dropTargetClasses))&&(Wa([t],function(){return n.dropTargetStyle},function(){return q}),Ha([t],function(){return D},function(){return q})),n.dropTargetStyle=D,n.dropTargetClasses=Oa(q);function me(Ce,ve){return ct.get(Ce)?ct.get(Ce)[ve]:n[ve]}hr&&n.dropFromOthersDisabled!==_&&(_?Wa([t],function(Ce){return me(Ce,"dropTargetStyle")},function(Ce){return me(Ce,"dropTargetClasses")}):Ha([t],function(Ce){return me(Ce,"dropTargetStyle")},function(Ce){return me(Ce,"dropTargetClasses")})),n.dropFromOthersDisabled=_,ct.set(t,n);for(var Z=za(n.items),z=function(ve){var Ee=t.children[ve];if(L2(Ee,F),ve===Z)return T||R2(Dt,Ee,Ut.x,Ut.y,function(){return n.transformDraggedElement(Dt,Vt,ve)}),j2(Ee),"continue";Ee.removeEventListener("mousedown",bo.get(Ee)),Ee.removeEventListener("touchstart",bo.get(Ee)),F||(Ee.addEventListener("mousedown",s),Ee.addEventListener("touchstart",s),bo.set(Ee,s)),r.set(Ee,ve)},ue=0;ue<t.children.length;ue++)var ke=z(ue)}return u(e),{update:function(m){Be(function(){return"pointer dndzone will update newOptions: ".concat(hn(m))}),u(m)},destroy:function(){Be(function(){return"pointer dndzone will destroy"}),Su(t,n.type),ct.delete(t)}}}var Za,wo={DND_ZONE_ACTIVE:"dnd-zone-active",DND_ZONE_DRAG_DISABLED:"dnd-zone-drag-disabled"},X2=(Za={},Hr(Za,wo.DND_ZONE_ACTIVE,"Tab to one the items and press space-bar or enter to start dragging it"),Hr(Za,wo.DND_ZONE_DRAG_DISABLED,"This is a disabled drag and drop list"),Za),J2="dnd-action-aria-alert",Tt;function Iu(){Tt=document.createElement("div"),function(){Tt.id=J2,Tt.style.position="fixed",Tt.style.bottom="0",Tt.style.left="0",Tt.style.zIndex="-5",Tt.style.opacity="0",Tt.style.height="0",Tt.style.width="0",Tt.setAttribute("role","alert")}(),document.body.prepend(Tt),Object.entries(X2).forEach(function(t){var e=e2(t,2),n=e[0],r=e[1];return document.body.prepend(ty(n,r))})}function ey(){return m2?null:(document.readyState==="complete"?Iu():window.addEventListener("DOMContentLoaded",Iu),qn({},wo))}function ty(t,e){var n=document.createElement("div");return n.id=t,n.innerHTML="<p>".concat(e,"</p>"),n.style.display="none",n.style.position="fixed",n.style.zIndex="-5",n}function mr(t){Tt.innerHTML="";var e=document.createTextNode(t);Tt.appendChild(e),Tt.style.display="none",Tt.style.display="inline"}var ny="--any--",Ou={outline:"rgba(255, 255, 102, 0.7) solid 2px"},zt=!1,Do,kt,Ln="",Pn,tn,Cn="",$a=new WeakSet,qu=new WeakMap,Ru=new WeakMap,_o=new Map,_t=new Map,nn=new Map,Lu=ey();function ry(t,e){Be(function(){return"registering drop-zone if absent"}),nn.size===0&&(Be(function(){return"adding global keydown and click handlers"}),window.addEventListener("keydown",ju),window.addEventListener("click",Vu)),nn.has(e)||nn.set(e,new Set),nn.get(e).has(t)||(nn.get(e).add(t),fu())}function Pu(t,e){Be(function(){return"unregistering drop-zone"}),kt===t&&Yr(),nn.get(e).delete(t),hu(),nn.get(e).size===0&&nn.delete(e),nn.size===0&&(Be(function(){return"removing global keydown and click handlers"}),window.removeEventListener("keydown",ju),window.removeEventListener("click",Vu))}function ju(t){if(!!zt)switch(t.key){case"Escape":{Yr();break}}}function Vu(){!zt||$a.has(document.activeElement)||(Be(function(){return"clicked outside of any draggable"}),Yr())}function ay(t){if(Be(function(){return"zone focus"}),!!zt){var e=t.currentTarget;if(e!==kt){Ln=e.getAttribute("aria-label")||"";var n=_t.get(kt),r=n.items,a=r.find(function(c){return c[mt]===tn}),i=r.indexOf(a),o=r.splice(i,1)[0],l=_t.get(e),s=l.items,d=l.autoAriaDisabled;e.getBoundingClientRect().top<kt.getBoundingClientRect().top||e.getBoundingClientRect().left<kt.getBoundingClientRect().left?(s.push(o),d||mr("Moved item ".concat(Cn," to the end of the list ").concat(Ln))):(s.unshift(o),d||mr("Moved item ".concat(Cn," to the beginning of the list ").concat(Ln)));var u=kt;cr(u,r,{trigger:nt.DROPPED_INTO_ANOTHER,id:tn,source:Qe.KEYBOARD}),cr(e,s,{trigger:nt.DROPPED_INTO_ZONE,id:tn,source:Qe.KEYBOARD}),kt=e}}}function Hu(){_o.forEach(function(t,e){var n=t.update;return n(_t.get(e))})}function Yr(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!0;Be(function(){return"drop"}),_t.get(kt).autoAriaDisabled||mr("Stopped dragging item ".concat(Cn)),$a.has(document.activeElement)&&document.activeElement.blur(),t&&_n(kt,_t.get(kt).items,{trigger:nt.DRAG_STOPPED,id:tn,source:Qe.KEYBOARD}),Wa(nn.get(Do),function(e){return _t.get(e).dropTargetStyle},function(e){return _t.get(e).dropTargetClasses}),Pn=null,tn=null,Cn="",Do=null,kt=null,Ln="",zt=!1,Hu()}function iy(t,e){var n={items:void 0,type:void 0,dragDisabled:!1,zoneTabIndex:0,dropFromOthersDisabled:!1,dropTargetStyle:Ou,dropTargetClasses:[],autoAriaDisabled:!1};function r(u,c,m){u.length<=1||u.splice(m,1,u.splice(c,1,u[m])[0])}function a(u){switch(Be(function(){return["handling key down",u.key]}),u.key){case"Enter":case" ":{if((u.target.disabled!==void 0||u.target.href||u.target.isContentEditable)&&!$a.has(u.target))return;u.preventDefault(),u.stopPropagation(),zt?Yr():i(u);break}case"ArrowDown":case"ArrowRight":{if(!zt)return;u.preventDefault(),u.stopPropagation();var c=_t.get(t),m=c.items,g=Array.from(t.children),p=g.indexOf(u.currentTarget);Be(function(){return["arrow down",p]}),p<g.length-1&&(n.autoAriaDisabled||mr("Moved item ".concat(Cn," to position ").concat(p+2," in the list ").concat(Ln)),r(m,p,p+1),cr(t,m,{trigger:nt.DROPPED_INTO_ZONE,id:tn,source:Qe.KEYBOARD}));break}case"ArrowUp":case"ArrowLeft":{if(!zt)return;u.preventDefault(),u.stopPropagation();var E=_t.get(t),y=E.items,S=Array.from(t.children),C=S.indexOf(u.currentTarget);Be(function(){return["arrow up",C]}),C>0&&(n.autoAriaDisabled||mr("Moved item ".concat(Cn," to position ").concat(C," in the list ").concat(Ln)),r(y,C,C-1),cr(t,y,{trigger:nt.DROPPED_INTO_ZONE,id:tn,source:Qe.KEYBOARD}));break}}}function i(u){Be(function(){return"drag start"}),l(u.currentTarget),kt=t,Do=n.type,zt=!0;var c=Array.from(nn.get(n.type)).filter(function(g){return g===kt||!_t.get(g).dropFromOthersDisabled});if(Ha(c,function(g){return _t.get(g).dropTargetStyle},function(g){return _t.get(g).dropTargetClasses}),!n.autoAriaDisabled){var m="Started dragging item ".concat(Cn,". Use the arrow keys to move it within its list ").concat(Ln);c.length>1&&(m+=", or tab to another list in order to move the item into it"),mr(m)}_n(t,_t.get(t).items,{trigger:nt.DRAG_STARTED,id:tn,source:Qe.KEYBOARD}),Hu()}function o(u){!zt||u.currentTarget!==Pn&&(u.stopPropagation(),Yr(!1),i(u))}function l(u){var c=_t.get(t),m=c.items,g=Array.from(t.children),p=g.indexOf(u);Pn=u,Pn.tabIndex=0,tn=m[p][mt],Cn=g[p].getAttribute("aria-label")||""}function s(u){var c=u.items,m=c===void 0?[]:c,g=u.type,p=g===void 0?ny:g,E=u.dragDisabled,y=E===void 0?!1:E,S=u.zoneTabIndex,C=S===void 0?0:S,F=u.dropFromOthersDisabled,M=F===void 0?!1:F,T=u.dropTargetStyle,x=T===void 0?Ou:T,_=u.dropTargetClasses,k=_===void 0?[]:_,D=u.autoAriaDisabled,R=D===void 0?!1:D;n.items=Oa(m),n.dragDisabled=y,n.dropFromOthersDisabled=M,n.zoneTabIndex=C,n.dropTargetStyle=x,n.dropTargetClasses=k,n.autoAriaDisabled=R,R||(t.setAttribute("aria-disabled",y),t.setAttribute("role","list"),t.setAttribute("aria-describedby",y?Lu.DND_ZONE_DRAG_DISABLED:Lu.DND_ZONE_ACTIVE)),n.type&&p!==n.type&&Pu(t,n.type),n.type=p,ry(t,p),_t.set(t,n),zt?t.tabIndex=t===kt||Pn.contains(t)||n.dropFromOthersDisabled||kt&&n.type!==_t.get(kt).type?-1:0:t.tabIndex=n.zoneTabIndex,t.addEventListener("focus",ay);for(var q=function(ye){var ae=t.children[ye];$a.add(ae),ae.tabIndex=zt?-1:0,R||ae.setAttribute("role","listitem"),ae.removeEventListener("keydown",qu.get(ae)),ae.removeEventListener("click",Ru.get(ae)),y||(ae.addEventListener("keydown",a),qu.set(ae,a),ae.addEventListener("click",o),Ru.set(ae,o)),zt&&n.items[ye][mt]===tn&&(Be(function(){return["focusing on",{i:ye,focusedItemId:tn}]}),Pn=ae,Pn.tabIndex=0,ae.focus())},H=0;H<t.children.length;H++)q(H)}s(e);var d={update:function(c){Be(function(){return"keyboard dndzone will update newOptions: ".concat(hn(c))}),s(c)},destroy:function(){Be(function(){return"keyboard dndzone will destroy"}),Pu(t,n.type),_t.delete(t),_o.delete(t)}};return _o.set(t,d),d}function gr(t,e){Wu(e);var n=Q2(t,e),r=iy(t,e);return{update:function(i){Wu(i),n.update(i),r.update(i)},destroy:function(){n.destroy(),r.destroy()}}}function Wu(t){var e=t.items,n=t.flipDurationMs,r=t.type,a=t.dragDisabled,i=t.morphDisabled,o=t.dropFromOthersDisabled,l=t.zoneTabIndex,s=t.dropTargetStyle,d=t.dropTargetClasses,u=t.transformDraggedElement,c=t.autoAriaDisabled,m=t.centreDraggedOnCursor,g=Jg(t,["items","flipDurationMs","type","dragDisabled","morphDisabled","dropFromOthersDisabled","zoneTabIndex","dropTargetStyle","dropTargetClasses","transformDraggedElement","autoAriaDisabled","centreDraggedOnCursor"]);if(Object.keys(g).length>0&&console.warn("dndzone will ignore unknown options",g),!e)throw new Error("no 'items' key provided to dndzone");var p=e.find(function(E){return!{}.hasOwnProperty.call(E,mt)});if(p)throw new Error("missing '".concat(mt,"' property for item ").concat(hn(p)));if(d&&!Array.isArray(d))throw new Error("dropTargetClasses should be an array but instead it is a ".concat(Vr(d),", ").concat(hn(d)));if(l&&!oy(l))throw new Error("zoneTabIndex should be a number but instead it is a ".concat(Vr(l),", ").concat(hn(l)))}function oy(t){return!isNaN(t)&&function(e){return(e|0)===e}(parseFloat(t))}var yr=Oe(require("obsidian"));var Gu=Oe(require("obsidian"));function sy(t){he(t,"svelte-l6axd",".add-new.svelte-l6axd,.add-new.svelte-l6axd button{width:100%}.disabled.svelte-l6axd button{cursor:not-allowed}")}function ly(t){let e,n,r,a;return{c(){e=N("div"),b(e,"class","add-new setting-item svelte-l6axd"),b(e,"aria-label",t[1]),ge(e,"disabled",t[0])},m(i,o){U(i,e,o),r||(a=[fe(n=t[2].call(null,e)),J(e,"click",t[4])],r=!0)},p(i,[o]){o&2&&b(e,"aria-label",i[1]),o&1&&ge(e,"disabled",i[0])},i:K,o:K,d(i){i&&W(e),r=!1,we(a)}}}function uy(t,e,n){let{disabled:r=!1}=e,{label:a="Add New"}=e,i,o=s=>{n(3,i=new Gu.ButtonComponent(s).setButtonText("+").setDisabled(r))};function l(s){pe.call(this,t,s)}return t.$$set=s=>{"disabled"in s&&n(0,r=s.disabled),"label"in s&&n(1,a=s.label)},t.$$.update=()=>{if(t.$$.dirty&9){e:i&&i.setDisabled(r)}},[r,a,o,i,l]}var Uu=class extends le{constructor(e){super();ce(this,e,uy,ly,oe,{disabled:0,label:1},sy)}},qt=Uu;function cy(t){he(t,"svelte-u7oux9",".no-existing-items.svelte-u7oux9 span.svelte-u7oux9{width:100%;text-align:center;color:var(--text-faint)}")}function dy(t){let e,n,r;return{c(){e=N("div"),n=N("span"),r=be(t[0]),b(n,"class","svelte-u7oux9"),b(e,"class","no-existing-items setting-item svelte-u7oux9")},m(a,i){U(a,e,i),w(e,n),w(n,r)},p(a,[i]){i&1&&Ae(r,a[0])},i:K,o:K,d(a){a&&W(e)}}}function fy(t,e,n){let{message:r}=e;return t.$$set=a=>{"message"in a&&n(0,r=a.message)},[r]}var zu=class extends le{constructor(e){super();ce(this,e,fy,dy,oe,{message:0},cy)}},Rt=zu;function hy(t){he(t,"svelte-1ddbnom",".existing-items.svelte-1ddbnom.svelte-1ddbnom{width:100%}.weekday.svelte-1ddbnom.svelte-1ddbnom{display:grid;grid-template-columns:auto 1fr auto;align-items:center;justify-content:space-between;gap:1rem;width:100%}.weekday.svelte-1ddbnom .icon.svelte-1ddbnom{align-items:center}.weekday.svelte-1ddbnom.svelte-1ddbnom{margin-top:0.5rem}")}function Yu(t,e,n){let r=t.slice();return r[15]=e[n],r}function Zu(t,e,n){let r=t.slice();return r[18]=e[n],r[20]=n,r}function $u(t){let e,n=(t[18].name??"")+"",r,a,i,o;return{c(){e=N("option"),r=be(n),a=G(),e.disabled=i=!t[2],e.__value=o=t[20],e.value=e.__value},m(l,s){U(l,e,s),w(e,r),w(e,a)},p(l,s){s&2&&n!==(n=(l[18].name??"")+"")&&Ae(r,n),s&4&&i!==(i=!l[2])&&(e.disabled=i)},d(l){l&&W(e)}}}function py(t){let e,n=[],r=new Map,a,i,o,l=t[1],s=d=>d[15].id;for(let d=0;d<l.length;d+=1){let u=Yu(t,l,d),c=s(u);r.set(c,n[d]=Ku(c,u))}return{c(){e=N("div");for(let d=0;d<n.length;d+=1)n[d].c();b(e,"class","existing-items svelte-1ddbnom")},m(d,u){U(d,e,u);for(let c=0;c<n.length;c+=1)n[c].m(e,null);i||(o=[fe(a=gr.call(null,e,{items:t[1],flipDurationMs:Eo,dragDisabled:t[3]})),J(e,"consider",t[7]),J(e,"finalize",t[8])],i=!0)},p(d,u){if(u&66){l=d[1];for(let c=0;c<n.length;c+=1)n[c].r();n=or(n,u,s,1,d,l,r,e,Ma,Ku,null,Yu);for(let c=0;c<n.length;c+=1)n[c].a()}a&&tt(a.update)&&u&10&&a.update.call(null,{items:d[1],flipDurationMs:Eo,dragDisabled:d[3]})},i:K,o:K,d(d){d&&W(e);for(let u=0;u<n.length;u+=1)n[u].d();i=!1,we(o)}}}function my(t){let e,n;return e=new Rt({props:{message:"Create a new weekday to see it here."}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p:K,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Ku(t,e){let n,r,a,i,o,l,s,d,u,c,m,g=K,p,E;return{key:t,first:null,c(){n=N("div"),r=N("div"),i=G(),o=N("div"),s=G(),d=N("div"),c=G(),b(r,"class","icon svelte-1ddbnom"),b(d,"class","icon svelte-1ddbnom"),b(n,"class","weekday svelte-1ddbnom"),this.first=n},m(y,S){U(y,n,S),w(n,r),w(n,i),w(n,o),w(n,s),w(n,d),w(n,c),p||(E=[fe(a=e[4].call(null,r)),J(r,"mousedown",e[6]),J(r,"touchstart",e[6]),fe(l=e[9].call(null,o,e[15])),fe(u=e[5].call(null,d,e[15]))],p=!0)},p(y,S){e=y,l&&tt(l.update)&&S&2&&l.update.call(null,e[15]),u&&tt(u.update)&&S&2&&u.update.call(null,e[15])},r(){m=n.getBoundingClientRect()},f(){ir(n),g()},a(){g(),g=ar(n,m,ur,{duration:Eo})},d(y){y&&W(n),p=!1,we(E)}}}function gy(t){let e,n,r,a,i,o,l,s,d,u,c,m,g,p,E,y,S,C;e=new fn({props:{name:"Overflow Weeks",desc:"Turn this off to make each month start on the first of the week.",value:t[0].static.overflow}}),e.$on("click",t[11]);let F=t[1].filter(Qu),M=[];for(let k=0;k<F.length;k+=1)M[k]=$u(Zu(t,F,k));c=new qt({}),c.$on("click",t[13]);let T=[my,py],x=[];function _(k,D){return k[1].length?1:0}return g=_(t,-1),p=x[g]=T[g](t),{c(){re(e.$$.fragment),n=G(),r=N("div"),a=N("div"),a.innerHTML=`<div class="setting-item-name">First Day</div> 
        <div class="setting-item-description">The day of the week the first year starts on.</div>`,i=G(),o=N("div"),l=N("select"),s=N("option"),s.textContent="Select a Weekday";for(let k=0;k<M.length;k+=1)M[k].c();u=G(),re(c.$$.fragment),m=G(),p.c(),E=Je(),b(a,"class","setting-item-info"),s.selected=!0,s.hidden=!0,s.disabled=!0,s.__value="Select a Weekday",s.value=s.__value,b(l,"class","dropdown"),b(l,"aria-label",d=t[1].filter(Xu).length?null:"Named Weekday Required"),t[0].static.firstWeekDay===void 0&&Gt(()=>t[12].call(l)),b(o,"class","setting-item-control"),b(r,"class","setting-item")},m(k,D){te(e,k,D),U(k,n,D),U(k,r,D),w(r,a),w(r,i),w(r,o),w(o,l),w(l,s);for(let R=0;R<M.length;R+=1)M[R].m(l,null);cn(l,t[0].static.firstWeekDay),U(k,u,D),te(c,k,D),U(k,m,D),x[g].m(k,D),U(k,E,D),y=!0,S||(C=J(l,"change",t[12]),S=!0)},p(k,[D]){let R={};if(D&1&&(R.value=k[0].static.overflow),e.$set(R),D&6){F=k[1].filter(Qu);let H;for(H=0;H<F.length;H+=1){let ne=Zu(k,F,H);M[H]?M[H].p(ne,D):(M[H]=$u(ne),M[H].c(),M[H].m(l,null))}for(;H<M.length;H+=1)M[H].d(1);M.length=F.length}(!y||D&2&&d!==(d=k[1].filter(Xu).length?null:"Named Weekday Required"))&&b(l,"aria-label",d),D&1&&cn(l,k[0].static.firstWeekDay);let q=g;g=_(k,D),g===q?x[g].p(k,D):(xe(),V(x[q],1,1,()=>{x[q]=null}),Fe(),p=x[g],p?p.p(k,D):(p=x[g]=T[g](k),p.c()),j(p,1),p.m(E.parentNode,E))},i(k){y||(j(e.$$.fragment,k),j(c.$$.fragment,k),j(p),y=!0)},o(k){V(e.$$.fragment,k),V(c.$$.fragment,k),V(p),y=!1},d(k){ee(e,k),k&&W(n),k&&W(r),Ye(M,k),k&&W(u),ee(c,k),k&&W(m),x[g].d(k),k&&W(E),S=!1,C()}}}var Eo=300,Qu=t=>t.name?.length,Xu=t=>t.name?.length;function yy(t,e,n){let r,a,i=Se(),{calendar:o}=e,l=o.static.firstWeekDay,s=C=>{(0,yr.setIcon)(C,"fantasy-calendar-grip")},d=(C,F)=>{new yr.ExtraButtonComponent(C).setIcon("trash").onClick(()=>n(1,r=r.filter(M=>M.id!==F.id)))};function u(C){C.preventDefault(),n(3,c=!1)}let c=!1;function m(C){let{items:F,info:{source:M,trigger:T}}=C.detail;n(1,r=F),M===Qe.KEYBOARD&&T===nt.DRAG_STOPPED&&n(3,c=!0)}function g(C){let{items:F,info:{source:M}}=C.detail;n(1,r=F),M===Qe.POINTER&&n(3,c=!0)}let p=(C,F)=>{new yr.TextComponent(C).setValue(F.name).setPlaceholder("Name").onChange(M=>{F.name=M,i("weekday-update",r),n(1,r),n(0,o)}).inputEl.setAttr("style","width: 100%;")},E=()=>n(0,o.static.overflow=!o.static.overflow,o);function y(){o.static.firstWeekDay=rr(this),n(0,o)}let S=()=>n(0,o.static.weekdays=[...r,{type:"day",name:null,id:Xe(6)}],o);return t.$$set=C=>{"calendar"in C&&n(0,o=C.calendar)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(1,r=o.static.weekdays)}if(t.$$.dirty&1){e:n(10,l=o.static.firstWeekDay)}if(t.$$.dirty&1){e:n(2,a=o.static.overflow)}if(t.$$.dirty&2){e:i("weekday-update",r)}if(t.$$.dirty&1024){e:i("first-weekday-update",l)}if(t.$$.dirty&4){e:i("overflow-update",a)}},[o,r,a,c,s,d,u,m,g,p,l,E,y,S]}var Ju=class extends le{constructor(e){super();ce(this,e,yy,gy,oe,{calendar:0},hy)}},ec=Ju;var rc=Oe(require("obsidian"));var Ka=Oe(require("obsidian"));function vy(t){he(t,"svelte-1e37bk8",".month.svelte-1e37bk8.svelte-1e37bk8{display:grid;grid-template-columns:1fr 1fr auto auto;align-items:center;justify-content:space-between;gap:1rem;width:100%}.month.svelte-1e37bk8 .icon.svelte-1e37bk8{align-items:center}")}function by(t){let e,n,r,a,i,o,l,s,d,u,c,m,g;return{c(){e=N("div"),n=N("input"),r=G(),a=N("input"),i=G(),o=N("select"),l=N("option"),l.textContent="Month",s=N("option"),s.textContent="Intercalary",d=G(),u=N("div"),b(n,"type","text"),b(n,"spellcheck","false"),b(n,"placeholder","Name"),Ke(n,"width","100%"),b(a,"type","number"),b(a,"spellcheck","false"),b(a,"placeholder","Length"),Ke(a,"width","100%"),b(a,"min","0"),l.__value="month",l.value=l.__value,s.__value="intercalary",s.value=s.__value,b(o,"class","dropdown"),t[0]===void 0&&Gt(()=>t[8].call(o)),b(u,"class","icon svelte-1e37bk8"),b(e,"class","month svelte-1e37bk8")},m(p,E){U(p,e,E),w(e,n),At(n,t[1]),w(e,r),w(e,a),At(a,t[2]),w(e,i),w(e,o),w(o,l),w(o,s),cn(o,t[0]),w(e,d),w(e,u),m||(g=[J(n,"input",t[6]),J(n,"input",t[4]),J(a,"input",t[7]),J(a,"input",t[4]),J(o,"change",t[8]),J(o,"input",t[4]),fe(c=t[3].call(null,u))],m=!0)},p(p,[E]){E&2&&n.value!==p[1]&&At(n,p[1]),E&4&&wn(a.value)!==p[2]&&At(a,p[2]),E&1&&cn(o,p[0])},i:K,o:K,d(p){p&&W(e),m=!1,we(g)}}}function wy(t,e,n){let r=Se(),{month:a}=e,i=a.name,o=a.type,l=a.length,s=g=>{new Ka.ExtraButtonComponent(g).setIcon("trash").onClick(()=>{r("month-delete")})},d=(0,Ka.debounce)(()=>{n(5,a.name=i,a),n(5,a.type=o,a),n(5,a.length=l,a),r("month-update",a)},300,!0);function u(){i=this.value,n(1,i)}function c(){l=wn(this.value),n(2,l)}function m(){o=rr(this),n(0,o)}return t.$$set=g=>{"month"in g&&n(5,a=g.month)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(5,a.type=o,a)}},[o,i,l,s,d,a,u,c,m]}var tc=class extends le{constructor(e){super();ce(this,e,wy,by,oe,{month:5},vy)}},nc=tc;function Dy(t){he(t,"svelte-xv4vbj",".month.svelte-xv4vbj{display:flex;align-items:center;margin-top:0.5rem;gap:1rem}")}function ac(t,e,n){let r=t.slice();return r[14]=e[n],r}function _y(t){let e,n=[],r=new Map,a,i,o,l,s=t[2],d=u=>u[14].id;for(let u=0;u<s.length;u+=1){let c=ac(t,s,u),m=d(c);r.set(m,n[u]=ic(m,c))}return{c(){e=N("div");for(let u=0;u<n.length;u+=1)n[u].c();b(e,"class","existing-items")},m(u,c){U(u,e,c);for(let m=0;m<n.length;m+=1)n[m].m(e,null);i=!0,o||(l=[fe(a=gr.call(null,e,{items:t[2],flipDurationMs:Co,dragDisabled:t[1]})),J(e,"consider",t[7]),J(e,"finalize",t[8])],o=!0)},p(u,c){if(c&93){s=u[2],xe();for(let m=0;m<n.length;m+=1)n[m].r();n=or(n,c,d,1,u,s,r,e,Yl,ic,null,ac);for(let m=0;m<n.length;m+=1)n[m].a();Fe()}a&&tt(a.update)&&c&6&&a.update.call(null,{items:u[2],flipDurationMs:Co,dragDisabled:u[1]})},i(u){if(!i){for(let c=0;c<s.length;c+=1)j(n[c]);i=!0}},o(u){for(let c=0;c<n.length;c+=1)V(n[c]);i=!1},d(u){u&&W(e);for(let c=0;c<n.length;c+=1)n[c].d();o=!1,we(l)}}}function Ey(t){let e,n;return e=new Rt({props:{message:"Create a new month to see it here."}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p:K,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function ic(t,e){let n,r,a,i,o,l,s,d=K,u,c,m;function g(){return e[11](e[14])}return o=new nc({props:{month:e[14]}}),o.$on("mousedown",e[6]),o.$on("month-delete",g),o.$on("month-update",e[12]),{key:t,first:null,c(){n=N("div"),r=N("div"),i=G(),re(o.$$.fragment),l=G(),b(r,"class","icon"),b(n,"class","month svelte-xv4vbj"),this.first=n},m(p,E){U(p,n,E),w(n,r),w(n,i),te(o,n,null),w(n,l),u=!0,c||(m=[fe(a=e[5].call(null,r)),J(r,"mousedown",e[6]),J(r,"touchstart",e[6])],c=!0)},p(p,E){e=p;let y={};E&4&&(y.month=e[14]),o.$set(y)},r(){s=n.getBoundingClientRect()},f(){ir(n),d()},a(){d(),d=ar(n,s,ur,{duration:Co})},i(p){u||(j(o.$$.fragment,p),u=!0)},o(p){V(o.$$.fragment,p),u=!1},d(p){p&&W(n),ee(o),c=!1,we(m)}}}function Cy(t){let e,n,r,a,i,o;e=new qt({}),e.$on("click",t[10]);let l=[Ey,_y],s=[];function d(u,c){return u[2].length?1:0}return r=d(t,-1),a=s[r]=l[r](t),{c(){re(e.$$.fragment),n=G(),a.c(),i=Je()},m(u,c){te(e,u,c),U(u,n,c),s[r].m(u,c),U(u,i,c),o=!0},p(u,[c]){let m=r;r=d(u,c),r===m?s[r].p(u,c):(xe(),V(s[m],1,1,()=>{s[m]=null}),Fe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){V(e.$$.fragment,u),V(a),o=!1},d(u){ee(e,u),u&&W(n),s[r].d(u),u&&W(i)}}}var Co=300;function Ay(t,e,n){let r,a,i=Ze("store");i.subscribe(S=>n(0,a=S));let o=S=>{n(2,r=r.filter(C=>C.id!=S.id)),i.set(a)},l=S=>{(0,rc.setIcon)(S,"fantasy-calendar-grip")};function s(S){S.preventDefault(),n(1,d=!1)}let d=!1;function u(S){let{items:C,info:{source:F,trigger:M}}=S.detail;n(2,r=C),F===Qe.KEYBOARD&&M===nt.DRAG_STOPPED&&n(1,d=!0)}function c(S){let{items:C,info:{source:F}}=S.detail;n(2,r=C),m("month-update",r),F===Qe.POINTER&&n(1,d=!0)}let m=Se(),g=()=>{n(0,a.static.months=[...r,{type:"month",name:null,length:null,id:Xe(6)}],a),i.set(a)},p=()=>g(),E=S=>o(S),y=()=>{console.log("update"),i.set(a)};return t.$$.update=()=>{if(t.$$.dirty&1){e:n(2,r=a.static.months)}},[a,d,r,i,o,l,s,u,c,g,p,E,y]}var oc=class extends le{constructor(e){super();ce(this,e,Ay,Cy,oe,{},Dy)}},sc=oc;var br=Oe(require("obsidian"));var Zr=Oe(require("obsidian"));async function vr(t,e,n={cta:"Yes",secondary:"No"}){return new Promise((r,a)=>{let i=new lc(t,e,n);i.onClose=()=>{r(i.confirmed)},i.open()})}var lc=class extends Zr.Modal{constructor(e,n,r){super(e);this.text=n;this.buttons=r;this.confirmed=!1}async display(){new Promise(e=>{this.contentEl.empty(),this.contentEl.addClass("confirm-modal"),this.contentEl.createEl("p",{text:this.text});let n=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new Zr.ButtonComponent(n).setButtonText(this.buttons.cta).setCta().onClick(()=>{this.confirmed=!0,this.close()}),new Zr.ButtonComponent(n).setButtonText(this.buttons.secondary).onClick(()=>{this.close()})})}onOpen(){this.display()}};function ky(t){he(t,"svelte-1c4m78g",".weekday.svelte-1c4m78g.svelte-1c4m78g{display:grid;grid-template-columns:auto 1fr auto;align-items:center;justify-content:space-between;gap:1rem}.weekday.svelte-1c4m78g .icon.svelte-1c4m78g{align-items:center}.weekday.svelte-1c4m78g.svelte-1c4m78g{margin-top:0.5rem}")}function uc(t,e,n){let r=t.slice();return r[17]=e[n],r}function cc(t){let e,n,r,a,i,o;e=new qt({}),e.$on("click",t[14]);let l=[Fy,xy],s=[];function d(u,c){return!u[2]||!u[2].length?0:1}return r=d(t,-1),a=s[r]=l[r](t),{c(){re(e.$$.fragment),n=G(),a.c(),i=Je()},m(u,c){te(e,u,c),U(u,n,c),s[r].m(u,c),U(u,i,c),o=!0},p(u,c){let m=r;r=d(u,c),r===m?s[r].p(u,c):(xe(),V(s[m],1,1,()=>{s[m]=null}),Fe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){V(e.$$.fragment,u),V(a),o=!1},d(u){ee(e,u),u&&W(n),s[r].d(u),u&&W(i)}}}function xy(t){let e,n=[],r=new Map,a,i,o,l=t[2],s=d=>d[17].id;for(let d=0;d<l.length;d+=1){let u=uc(t,l,d),c=s(u);r.set(c,n[d]=dc(c,u))}return{c(){e=N("div");for(let d=0;d<n.length;d+=1)n[d].c();b(e,"class","existing-items")},m(d,u){U(d,e,u);for(let c=0;c<n.length;c+=1)n[c].m(e,null);i||(o=[fe(a=gr.call(null,e,{items:t[2],flipDurationMs:Ao,dragDisabled:t[3]})),J(e,"consider",t[10]),J(e,"finalize",t[11])],i=!0)},p(d,u){if(u&516){l=d[2];for(let c=0;c<n.length;c+=1)n[c].r();n=or(n,u,s,1,d,l,r,e,Ma,dc,null,uc);for(let c=0;c<n.length;c+=1)n[c].a()}a&&tt(a.update)&&u&12&&a.update.call(null,{items:d[2],flipDurationMs:Ao,dragDisabled:d[3]})},i:K,o:K,d(d){d&&W(e);for(let u=0;u<n.length;u+=1)n[u].d();i=!1,we(o)}}}function Fy(t){let e,n;return e=new Rt({props:{message:"Create a new year to see it here."}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p:K,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function dc(t,e){let n,r,a,i,o,l,s,d,u,c,m,g=K,p,E;return{key:t,first:null,c(){n=N("div"),r=N("div"),i=G(),o=N("div"),s=G(),d=N("div"),c=G(),b(r,"class","icon svelte-1c4m78g"),b(d,"class","icon svelte-1c4m78g"),b(n,"class","weekday svelte-1c4m78g"),this.first=n},m(y,S){U(y,n,S),w(n,r),w(n,i),w(n,o),w(n,s),w(n,d),w(n,c),p||(E=[fe(a=e[4].call(null,r)),J(r,"mousedown",e[9]),J(r,"touchstart",e[9]),fe(l=e[6].call(null,o,e[17])),fe(u=e[5].call(null,d,e[17]))],p=!0)},p(y,S){e=y,l&&tt(l.update)&&S&4&&l.update.call(null,e[17]),u&&tt(u.update)&&S&4&&u.update.call(null,e[17])},r(){m=n.getBoundingClientRect()},f(){ir(n),g()},a(){g(),g=ar(n,m,ur,{duration:Ao})},d(y){y&&W(n),p=!1,we(E)}}}function Ty(t){let e,n,r,a;e=new fn({props:{name:"Use Custom Years",desc:t[7],value:t[1]}}),e.$on("click",t[13]);let i=t[1]&&cc(t);return{c(){re(e.$$.fragment),n=G(),i&&i.c(),r=Je()},m(o,l){te(e,o,l),U(o,n,l),i&&i.m(o,l),U(o,r,l),a=!0},p(o,[l]){let s={};l&2&&(s.value=o[1]),e.$set(s),o[1]?i?(i.p(o,l),l&2&&j(i,1)):(i=cc(o),i.c(),j(i,1),i.m(r.parentNode,r)):i&&(xe(),V(i,1,1,()=>{i=null}),Fe())},i(o){a||(j(e.$$.fragment,o),j(i),a=!0)},o(o){V(e.$$.fragment,o),V(i),a=!1},d(o){ee(e,o),o&&W(n),i&&i.d(o),o&&W(r)}}}var Ao=300;function Sy(t,e,n){let r,a,{calendar:i}=e,o=Ze("store");o.subscribe(M=>n(0,i=M));let l=M=>{(0,br.setIcon)(M,"fantasy-calendar-grip")},s=(M,T)=>{new br.ExtraButtonComponent(M).setIcon("trash").onClick(()=>n(2,r=r.filter(x=>x.id!==T.id)))},d=(M,T)=>{new br.TextComponent(M).setValue(T.name).setPlaceholder("Name").onChange(_=>{T.name=_,S("years-update",r),n(2,r),n(0,i)}).inputEl.setAttr("style","width: 100%;")},{app:u}=e,c=createFragment(M=>(M.createSpan({text:"Create custom years to display instead of incrementing from 1."}),M.createEl("br"),M.createSpan({text:"If on, "}),M.createEl("strong",{text:"only the years added below will be displayed."}),M)),m=async()=>{i.static.useCustomYears&&r.length&&await vr(u,"The custom years you have created will be removed. Proceed?")&&n(0,i.static.years=[],i),n(0,i.static.useCustomYears=!i.static.useCustomYears,i),o.set(i)};function g(M){M.preventDefault(),n(3,p=!1)}let p=!1;function E(M){let{items:T,info:{source:x,trigger:_}}=M.detail;n(2,r=T),x===Qe.KEYBOARD&&_===nt.DRAG_STOPPED&&n(3,p=!0)}function y(M){let{items:T,info:{source:x}}=M.detail;n(2,r=T),x===Qe.POINTER&&n(3,p=!0)}let S=Se(),C=()=>m(),F=()=>n(0,i.static.years=[...r??[],{name:null,id:Xe(6),type:"year"}],i);return t.$$set=M=>{"calendar"in M&&n(0,i=M.calendar),"app"in M&&n(12,u=M.app)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(2,r=i.static.years)}if(t.$$.dirty&1){e:n(1,a=i.static.useCustomYears)}if(t.$$.dirty&4){e:S("years-update",r)}if(t.$$.dirty&2){e:S("use-custom-update",a)}},[i,a,r,p,l,s,d,c,m,g,E,y,u,C,F]}var fc=class extends le{constructor(e){super();ce(this,e,Sy,Ty,oe,{calendar:0,app:12},ky)}},hc=fc;var ko=Oe(require("obsidian"));function By(t){he(t,"svelte-1ldxqlp",".dot.svelte-1ldxqlp{display:inline-block;height:0.875em;width:0.875em;margin:0 1px}")}function Ny(t){let e,n;return{c(){e=Jt("svg"),n=Jt("circle"),b(n,"stroke",t[0]),b(n,"fill",t[0]),b(n,"cx","3"),b(n,"cy","3"),b(n,"r","2"),b(e,"class","dot svelte-1ldxqlp"),b(e,"viewBox","0 0 6 6"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"aria-label",t[1])},m(r,a){U(r,e,a),w(e,n)},p(r,[a]){a&1&&b(n,"stroke",r[0]),a&1&&b(n,"fill",r[0]),a&2&&b(e,"aria-label",r[1])},i:K,o:K,d(r){r&&W(e)}}}function My(t,e,n){let{color:r}=e,{label:a}=e;return t.$$set=i=>{"color"in i&&n(0,r=i.color),"label"in i&&n(1,a=i.label)},[r,a]}var pc=class extends le{constructor(e){super();ce(this,e,My,Ny,oe,{color:0,label:1},By)}},mc=pc;function Iy(t){he(t,"svelte-3snb0d",".event.svelte-3snb0d.svelte-3snb0d{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.event-info.svelte-3snb0d.svelte-3snb0d{width:100%}.icons.svelte-3snb0d.svelte-3snb0d{display:flex;align-self:flex-start;justify-self:flex-end;align-items:center}.event.svelte-3snb0d .icon.svelte-3snb0d{align-items:center}.date.svelte-3snb0d.svelte-3snb0d{display:flex;justify-content:flex-start;gap:0.25rem}.clamp.svelte-3snb0d.svelte-3snb0d{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;word-break:keep-all;overflow:hidden;width:calc(var(--event-max-width) * 0.75)}")}function gc(t){let e,n;return e=new mc({props:{color:t[1].color,label:t[1].name}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&2&&(i.color=r[1].color),a&2&&(i.label=r[1].name),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Oy(t){let e,n,r,a,i=t[0].name+"",o,l,s,d,u,c,m,g=(t[0].description??"")+"",p,E,y,S,C,F,M,T,x,_,k,D=t[1]!=null&&gc(t);return{c(){e=N("div"),n=N("div"),r=N("span"),D&&D.c(),a=G(),o=be(i),l=G(),s=N("div"),d=N("div"),u=be(t[2]),c=G(),m=N("span"),p=be(g),E=G(),y=N("div"),S=N("div"),F=G(),M=N("div"),b(r,"class","setting-item-name"),b(d,"class","date svelte-3snb0d"),b(m,"class","clamp svelte-3snb0d"),b(s,"class","setting-item-description"),b(n,"class","event-info svelte-3snb0d"),b(S,"class","icon svelte-3snb0d"),b(M,"class","icon svelte-3snb0d"),b(y,"class","icons svelte-3snb0d"),b(e,"class","event svelte-3snb0d")},m(R,q){U(R,e,q),w(e,n),w(n,r),D&&D.m(r,null),w(r,a),w(r,o),w(n,l),w(n,s),w(s,d),w(d,u),w(s,c),w(s,m),w(m,p),w(e,E),w(e,y),w(y,S),w(y,F),w(y,M),x=!0,_||(k=[fe(C=t[5].call(null,S)),J(S,"click",t[6]),fe(T=t[4].call(null,M)),J(M,"click",t[7])],_=!0)},p(R,[q]){R[1]!=null?D?(D.p(R,q),q&2&&j(D,1)):(D=gc(R),D.c(),j(D,1),D.m(r,a)):D&&(xe(),V(D,1,1,()=>{D=null}),Fe()),(!x||q&1)&&i!==(i=R[0].name+"")&&Ae(o,i),(!x||q&4)&&Ae(u,R[2]),(!x||q&1)&&g!==(g=(R[0].description??"")+"")&&Ae(p,g)},i(R){x||(j(D),x=!0)},o(R){V(D),x=!1},d(R){R&&W(e),D&&D.d(),_=!1,we(k)}}}function qy(t,e,n){let r=Se(),a=c=>{new ko.ExtraButtonComponent(c).setIcon("trash").setTooltip("Delete").extraSettingsEl.setAttr("style","margin-left: 0;")},i=c=>{new ko.ExtraButtonComponent(c).setIcon("pencil").setTooltip("Edit")},{event:o}=e,{category:l}=e,{date:s}=e,d=()=>r("edit"),u=()=>r("delete");return t.$$set=c=>{"event"in c&&n(0,o=c.event),"category"in c&&n(1,l=c.category),"date"in c&&n(2,s=c.date)},[o,l,s,r,a,i,d,u]}var yc=class extends le{constructor(e){super();ce(this,e,qy,Oy,oe,{event:0,category:1,date:2},Iy)}},vc=yc;var ft=Oe(require("obsidian"));var ai=Oe(require("obsidian"));var rt="top",dt="bottom",lt="right",ut="left",Qa="auto",An=[rt,dt,lt,ut],pn="start",jn="end",bc="clippingParents",Xa="viewport",wr="popper",wc="reference",xo=An.reduce(function(t,e){return t.concat([e+"-"+pn,e+"-"+jn])},[]),Ja=[].concat(An,[Qa]).reduce(function(t,e){return t.concat([e,e+"-"+pn,e+"-"+jn])},[]),Ry="beforeRead",Ly="read",Py="afterRead",jy="beforeMain",Vy="main",Hy="afterMain",Wy="beforeWrite",Gy="write",Uy="afterWrite",Dc=[Ry,Ly,Py,jy,Vy,Hy,Wy,Gy,Uy];function gt(t){return t?(t.nodeName||"").toLowerCase():null}function at(t){if(t==null)return window;if(t.toString()!=="[object Window]"){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function mn(t){var e=at(t).Element;return t instanceof e||t instanceof Element}function yt(t){var e=at(t).HTMLElement;return t instanceof e||t instanceof HTMLElement}function ei(t){if(typeof ShadowRoot=="undefined")return!1;var e=at(t).ShadowRoot;return t instanceof e||t instanceof ShadowRoot}function zy(t){var e=t.state;Object.keys(e.elements).forEach(function(n){var r=e.styles[n]||{},a=e.attributes[n]||{},i=e.elements[n];!yt(i)||!gt(i)||(Object.assign(i.style,r),Object.keys(a).forEach(function(o){var l=a[o];l===!1?i.removeAttribute(o):i.setAttribute(o,l===!0?"":l)}))})}function Yy(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow),function(){Object.keys(e.elements).forEach(function(r){var a=e.elements[r],i=e.attributes[r]||{},o=Object.keys(e.styles.hasOwnProperty(r)?e.styles[r]:n[r]),l=o.reduce(function(s,d){return s[d]="",s},{});!yt(a)||!gt(a)||(Object.assign(a.style,l),Object.keys(i).forEach(function(s){a.removeAttribute(s)}))})}}var _c={name:"applyStyles",enabled:!0,phase:"write",fn:zy,effect:Yy,requires:["computeStyles"]};function vt(t){return t.split("-")[0]}function Yt(t,e){e===void 0&&(e=!1);var n=t.getBoundingClientRect(),r=1,a=1;return{width:n.width/r,height:n.height/a,top:n.top/a,right:n.right/r,bottom:n.bottom/a,left:n.left/r,x:n.left/r,y:n.top/a}}function Vn(t){var e=Yt(t),n=t.offsetWidth,r=t.offsetHeight;return Math.abs(e.width-n)<=1&&(n=e.width),Math.abs(e.height-r)<=1&&(r=e.height),{x:t.offsetLeft,y:t.offsetTop,width:n,height:r}}function $r(t,e){var n=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(n&&ei(n)){var r=e;do{if(r&&t.isSameNode(r))return!0;r=r.parentNode||r.host}while(r)}return!1}function St(t){return at(t).getComputedStyle(t)}function Fo(t){return["table","td","th"].indexOf(gt(t))>=0}function Et(t){return((mn(t)?t.ownerDocument:t.document)||window.document).documentElement}function gn(t){return gt(t)==="html"?t:t.assignedSlot||t.parentNode||(ei(t)?t.host:null)||Et(t)}function Ec(t){return!yt(t)||St(t).position==="fixed"?null:t.offsetParent}function Zy(t){var e=navigator.userAgent.toLowerCase().indexOf("firefox")!==-1,n=navigator.userAgent.indexOf("Trident")!==-1;if(n&&yt(t)){var r=St(t);if(r.position==="fixed")return null}for(var a=gn(t);yt(a)&&["html","body"].indexOf(gt(a))<0;){var i=St(a);if(i.transform!=="none"||i.perspective!=="none"||i.contain==="paint"||["transform","perspective"].indexOf(i.willChange)!==-1||e&&i.willChange==="filter"||e&&i.filter&&i.filter!=="none")return a;a=a.parentNode}return null}function rn(t){for(var e=at(t),n=Ec(t);n&&Fo(n)&&St(n).position==="static";)n=Ec(n);return n&&(gt(n)==="html"||gt(n)==="body"&&St(n).position==="static")?e:n||Zy(t)||e}function Hn(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}var Zt=Math.max,kn=Math.min,Kr=Math.round;function Wn(t,e,n){return Zt(t,kn(e,n))}function Qr(){return{top:0,right:0,bottom:0,left:0}}function Xr(t){return Object.assign({},Qr(),t)}function Jr(t,e){return e.reduce(function(n,r){return n[r]=t,n},{})}var $y=function(e,n){return e=typeof e=="function"?e(Object.assign({},n.rects,{placement:n.placement})):e,Xr(typeof e!="number"?e:Jr(e,An))};function Ky(t){var e,n=t.state,r=t.name,a=t.options,i=n.elements.arrow,o=n.modifiersData.popperOffsets,l=vt(n.placement),s=Hn(l),d=[ut,lt].indexOf(l)>=0,u=d?"height":"width";if(!(!i||!o)){var c=$y(a.padding,n),m=Vn(i),g=s==="y"?rt:ut,p=s==="y"?dt:lt,E=n.rects.reference[u]+n.rects.reference[s]-o[s]-n.rects.popper[u],y=o[s]-n.rects.reference[s],S=rn(i),C=S?s==="y"?S.clientHeight||0:S.clientWidth||0:0,F=E/2-y/2,M=c[g],T=C-m[u]-c[p],x=C/2-m[u]/2+F,_=Wn(M,x,T),k=s;n.modifiersData[r]=(e={},e[k]=_,e.centerOffset=_-x,e)}}function Qy(t){var e=t.state,n=t.options,r=n.element,a=r===void 0?"[data-popper-arrow]":r;a!=null&&(typeof a=="string"&&(a=e.elements.popper.querySelector(a),!a)||!$r(e.elements.popper,a)||(e.elements.arrow=a))}var Cc={name:"arrow",enabled:!0,phase:"main",fn:Ky,effect:Qy,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function $t(t){return t.split("-")[1]}var Xy={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Jy(t){var e=t.x,n=t.y,r=window,a=r.devicePixelRatio||1;return{x:Kr(Kr(e*a)/a)||0,y:Kr(Kr(n*a)/a)||0}}function Ac(t){var e,n=t.popper,r=t.popperRect,a=t.placement,i=t.variation,o=t.offsets,l=t.position,s=t.gpuAcceleration,d=t.adaptive,u=t.roundOffsets,c=u===!0?Jy(o):typeof u=="function"?u(o):o,m=c.x,g=m===void 0?0:m,p=c.y,E=p===void 0?0:p,y=o.hasOwnProperty("x"),S=o.hasOwnProperty("y"),C=ut,F=rt,M=window;if(d){var T=rn(n),x="clientHeight",_="clientWidth";T===at(n)&&(T=Et(n),St(T).position!=="static"&&l==="absolute"&&(x="scrollHeight",_="scrollWidth")),T=T,(a===rt||(a===ut||a===lt)&&i===jn)&&(F=dt,E-=T[x]-r.height,E*=s?1:-1),(a===ut||(a===rt||a===dt)&&i===jn)&&(C=lt,g-=T[_]-r.width,g*=s?1:-1)}var k=Object.assign({position:l},d&&Xy);if(s){var D;return Object.assign({},k,(D={},D[F]=S?"0":"",D[C]=y?"0":"",D.transform=(M.devicePixelRatio||1)<=1?"translate("+g+"px, "+E+"px)":"translate3d("+g+"px, "+E+"px, 0)",D))}return Object.assign({},k,(e={},e[F]=S?E+"px":"",e[C]=y?g+"px":"",e.transform="",e))}function e0(t){var e=t.state,n=t.options,r=n.gpuAcceleration,a=r===void 0?!0:r,i=n.adaptive,o=i===void 0?!0:i,l=n.roundOffsets,s=l===void 0?!0:l;if(!1)var d;var u={placement:vt(e.placement),variation:$t(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:a};e.modifiersData.popperOffsets!=null&&(e.styles.popper=Object.assign({},e.styles.popper,Ac(Object.assign({},u,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:o,roundOffsets:s})))),e.modifiersData.arrow!=null&&(e.styles.arrow=Object.assign({},e.styles.arrow,Ac(Object.assign({},u,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:s})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})}var kc={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:e0,data:{}};var ti={passive:!0};function t0(t){var e=t.state,n=t.instance,r=t.options,a=r.scroll,i=a===void 0?!0:a,o=r.resize,l=o===void 0?!0:o,s=at(e.elements.popper),d=[].concat(e.scrollParents.reference,e.scrollParents.popper);return i&&d.forEach(function(u){u.addEventListener("scroll",n.update,ti)}),l&&s.addEventListener("resize",n.update,ti),function(){i&&d.forEach(function(u){u.removeEventListener("scroll",n.update,ti)}),l&&s.removeEventListener("resize",n.update,ti)}}var xc={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:t0,data:{}};var n0={left:"right",right:"left",bottom:"top",top:"bottom"};function Dr(t){return t.replace(/left|right|bottom|top/g,function(e){return n0[e]})}var r0={start:"end",end:"start"};function ni(t){return t.replace(/start|end/g,function(e){return r0[e]})}function Gn(t){var e=at(t),n=e.pageXOffset,r=e.pageYOffset;return{scrollLeft:n,scrollTop:r}}function Un(t){return Yt(Et(t)).left+Gn(t).scrollLeft}function To(t){var e=at(t),n=Et(t),r=e.visualViewport,a=n.clientWidth,i=n.clientHeight,o=0,l=0;return r&&(a=r.width,i=r.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(o=r.offsetLeft,l=r.offsetTop)),{width:a,height:i,x:o+Un(t),y:l}}function So(t){var e,n=Et(t),r=Gn(t),a=(e=t.ownerDocument)==null?void 0:e.body,i=Zt(n.scrollWidth,n.clientWidth,a?a.scrollWidth:0,a?a.clientWidth:0),o=Zt(n.scrollHeight,n.clientHeight,a?a.scrollHeight:0,a?a.clientHeight:0),l=-r.scrollLeft+Un(t),s=-r.scrollTop;return St(a||n).direction==="rtl"&&(l+=Zt(n.clientWidth,a?a.clientWidth:0)-i),{width:i,height:o,x:l,y:s}}function zn(t){var e=St(t),n=e.overflow,r=e.overflowX,a=e.overflowY;return/auto|scroll|overlay|hidden/.test(n+a+r)}function ri(t){return["html","body","#document"].indexOf(gt(t))>=0?t.ownerDocument.body:yt(t)&&zn(t)?t:ri(gn(t))}function xn(t,e){var n;e===void 0&&(e=[]);var r=ri(t),a=r===((n=t.ownerDocument)==null?void 0:n.body),i=at(r),o=a?[i].concat(i.visualViewport||[],zn(r)?r:[]):r,l=e.concat(o);return a?l:l.concat(xn(gn(o)))}function _r(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function a0(t){var e=Yt(t);return e.top=e.top+t.clientTop,e.left=e.left+t.clientLeft,e.bottom=e.top+t.clientHeight,e.right=e.left+t.clientWidth,e.width=t.clientWidth,e.height=t.clientHeight,e.x=e.left,e.y=e.top,e}function Fc(t,e){return e===Xa?_r(To(t)):yt(e)?a0(e):_r(So(Et(t)))}function i0(t){var e=xn(gn(t)),n=["absolute","fixed"].indexOf(St(t).position)>=0,r=n&&yt(t)?rn(t):t;return mn(r)?e.filter(function(a){return mn(a)&&$r(a,r)&&gt(a)!=="body"}):[]}function Bo(t,e,n){var r=e==="clippingParents"?i0(t):[].concat(e),a=[].concat(r,[n]),i=a[0],o=a.reduce(function(l,s){var d=Fc(t,s);return l.top=Zt(d.top,l.top),l.right=kn(d.right,l.right),l.bottom=kn(d.bottom,l.bottom),l.left=Zt(d.left,l.left),l},Fc(t,i));return o.width=o.right-o.left,o.height=o.bottom-o.top,o.x=o.left,o.y=o.top,o}function ea(t){var e=t.reference,n=t.element,r=t.placement,a=r?vt(r):null,i=r?$t(r):null,o=e.x+e.width/2-n.width/2,l=e.y+e.height/2-n.height/2,s;switch(a){case rt:s={x:o,y:e.y-n.height};break;case dt:s={x:o,y:e.y+e.height};break;case lt:s={x:e.x+e.width,y:l};break;case ut:s={x:e.x-n.width,y:l};break;default:s={x:e.x,y:e.y}}var d=a?Hn(a):null;if(d!=null){var u=d==="y"?"height":"width";switch(i){case pn:s[d]=s[d]-(e[u]/2-n[u]/2);break;case jn:s[d]=s[d]+(e[u]/2-n[u]/2);break;default:}}return s}function an(t,e){e===void 0&&(e={});var n=e,r=n.placement,a=r===void 0?t.placement:r,i=n.boundary,o=i===void 0?bc:i,l=n.rootBoundary,s=l===void 0?Xa:l,d=n.elementContext,u=d===void 0?wr:d,c=n.altBoundary,m=c===void 0?!1:c,g=n.padding,p=g===void 0?0:g,E=Xr(typeof p!="number"?p:Jr(p,An)),y=u===wr?wc:wr,S=t.rects.popper,C=t.elements[m?y:u],F=Bo(mn(C)?C:C.contextElement||Et(t.elements.popper),o,s),M=Yt(t.elements.reference),T=ea({reference:M,element:S,strategy:"absolute",placement:a}),x=_r(Object.assign({},S,T)),_=u===wr?x:M,k={top:F.top-_.top+E.top,bottom:_.bottom-F.bottom+E.bottom,left:F.left-_.left+E.left,right:_.right-F.right+E.right},D=t.modifiersData.offset;if(u===wr&&D){var R=D[a];Object.keys(k).forEach(function(q){var H=[lt,dt].indexOf(q)>=0?1:-1,ne=[rt,dt].indexOf(q)>=0?"y":"x";k[q]+=R[ne]*H})}return k}function No(t,e){e===void 0&&(e={});var n=e,r=n.placement,a=n.boundary,i=n.rootBoundary,o=n.padding,l=n.flipVariations,s=n.allowedAutoPlacements,d=s===void 0?Ja:s,u=$t(r),c=u?l?xo:xo.filter(function(p){return $t(p)===u}):An,m=c.filter(function(p){return d.indexOf(p)>=0});m.length===0&&(m=c);var g=m.reduce(function(p,E){return p[E]=an(t,{placement:E,boundary:a,rootBoundary:i,padding:o})[vt(E)],p},{});return Object.keys(g).sort(function(p,E){return g[p]-g[E]})}function o0(t){if(vt(t)===Qa)return[];var e=Dr(t);return[ni(t),e,ni(e)]}function s0(t){var e=t.state,n=t.options,r=t.name;if(!e.modifiersData[r]._skip){for(var a=n.mainAxis,i=a===void 0?!0:a,o=n.altAxis,l=o===void 0?!0:o,s=n.fallbackPlacements,d=n.padding,u=n.boundary,c=n.rootBoundary,m=n.altBoundary,g=n.flipVariations,p=g===void 0?!0:g,E=n.allowedAutoPlacements,y=e.options.placement,S=vt(y),C=S===y,F=s||(C||!p?[Dr(y)]:o0(y)),M=[y].concat(F).reduce(function(et,Pe){return et.concat(vt(Pe)===Qa?No(e,{placement:Pe,boundary:u,rootBoundary:c,padding:d,flipVariations:p,allowedAutoPlacements:E}):Pe)},[]),T=e.rects.reference,x=e.rects.popper,_=new Map,k=!0,D=M[0],R=0;R<M.length;R++){var q=M[R],H=vt(q),ne=$t(q)===pn,ye=[rt,dt].indexOf(H)>=0,ae=ye?"width":"height",me=an(e,{placement:q,boundary:u,rootBoundary:c,altBoundary:m,padding:d}),Z=ye?ne?lt:ut:ne?dt:rt;T[ae]>x[ae]&&(Z=Dr(Z));var z=Dr(Z),ue=[];if(i&&ue.push(me[H]<=0),l&&ue.push(me[Z]<=0,me[z]<=0),ue.every(function(et){return et})){D=q,k=!1;break}_.set(q,ue)}if(k)for(var ke=p?3:1,Ce=function(Pe){var ht=M.find(function(Bt){var pt=_.get(Bt);if(pt)return pt.slice(0,Pe).every(function(Ct){return Ct})});if(ht)return D=ht,"break"},ve=ke;ve>0;ve--){var Ee=Ce(ve);if(Ee==="break")break}e.placement!==D&&(e.modifiersData[r]._skip=!0,e.placement=D,e.reset=!0)}}var Tc={name:"flip",enabled:!0,phase:"main",fn:s0,requiresIfExists:["offset"],data:{_skip:!1}};function Sc(t,e,n){return n===void 0&&(n={x:0,y:0}),{top:t.top-e.height-n.y,right:t.right-e.width+n.x,bottom:t.bottom-e.height+n.y,left:t.left-e.width-n.x}}function Bc(t){return[rt,lt,dt,ut].some(function(e){return t[e]>=0})}function l0(t){var e=t.state,n=t.name,r=e.rects.reference,a=e.rects.popper,i=e.modifiersData.preventOverflow,o=an(e,{elementContext:"reference"}),l=an(e,{altBoundary:!0}),s=Sc(o,r),d=Sc(l,a,i),u=Bc(s),c=Bc(d);e.modifiersData[n]={referenceClippingOffsets:s,popperEscapeOffsets:d,isReferenceHidden:u,hasPopperEscaped:c},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":c})}var Nc={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:l0};function u0(t,e,n){var r=vt(t),a=[ut,rt].indexOf(r)>=0?-1:1,i=typeof n=="function"?n(Object.assign({},e,{placement:t})):n,o=i[0],l=i[1];return o=o||0,l=(l||0)*a,[ut,lt].indexOf(r)>=0?{x:l,y:o}:{x:o,y:l}}function c0(t){var e=t.state,n=t.options,r=t.name,a=n.offset,i=a===void 0?[0,0]:a,o=Ja.reduce(function(u,c){return u[c]=u0(c,e.rects,i),u},{}),l=o[e.placement],s=l.x,d=l.y;e.modifiersData.popperOffsets!=null&&(e.modifiersData.popperOffsets.x+=s,e.modifiersData.popperOffsets.y+=d),e.modifiersData[r]=o}var Mc={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:c0};function d0(t){var e=t.state,n=t.name;e.modifiersData[n]=ea({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})}var Ic={name:"popperOffsets",enabled:!0,phase:"read",fn:d0,data:{}};function Mo(t){return t==="x"?"y":"x"}function f0(t){var e=t.state,n=t.options,r=t.name,a=n.mainAxis,i=a===void 0?!0:a,o=n.altAxis,l=o===void 0?!1:o,s=n.boundary,d=n.rootBoundary,u=n.altBoundary,c=n.padding,m=n.tether,g=m===void 0?!0:m,p=n.tetherOffset,E=p===void 0?0:p,y=an(e,{boundary:s,rootBoundary:d,padding:c,altBoundary:u}),S=vt(e.placement),C=$t(e.placement),F=!C,M=Hn(S),T=Mo(M),x=e.modifiersData.popperOffsets,_=e.rects.reference,k=e.rects.popper,D=typeof E=="function"?E(Object.assign({},e.rects,{placement:e.placement})):E,R={x:0,y:0};if(!!x){if(i||l){var q=M==="y"?rt:ut,H=M==="y"?dt:lt,ne=M==="y"?"height":"width",ye=x[M],ae=x[M]+y[q],me=x[M]-y[H],Z=g?-k[ne]/2:0,z=C===pn?_[ne]:k[ne],ue=C===pn?-k[ne]:-_[ne],ke=e.elements.arrow,Ce=g&&ke?Vn(ke):{width:0,height:0},ve=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:Qr(),Ee=ve[q],et=ve[H],Pe=Wn(0,_[ne],Ce[ne]),ht=F?_[ne]/2-Z-Pe-Ee-D:z-Pe-Ee-D,Bt=F?-_[ne]/2+Z+Pe+et+D:ue+Pe+et+D,pt=e.elements.arrow&&rn(e.elements.arrow),Ct=pt?M==="y"?pt.clientTop||0:pt.clientLeft||0:0,xt=e.modifiersData.offset?e.modifiersData.offset[e.placement][M]:0,Lt=x[M]+ht-xt-Ct,Pt=x[M]+Bt-xt;if(i){var Wt=Wn(g?kn(ae,Lt):ae,ye,g?Zt(me,Pt):me);x[M]=Wt,R[M]=Wt-ye}if(l){var Qt=M==="x"?rt:ut,$n=M==="x"?dt:lt,ie=x[T],Fr=ie+y[Qt],oa=ie-y[$n],sa=Wn(g?kn(Fr,Lt):Fr,ie,g?Zt(oa,Pt):oa);x[T]=sa,R[T]=sa-ie}}e.modifiersData[r]=R}}var Oc={name:"preventOverflow",enabled:!0,phase:"main",fn:f0,requiresIfExists:["offset"]};function Io(t){return{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}}function Oo(t){return t===at(t)||!yt(t)?Gn(t):Io(t)}function h0(t){var e=t.getBoundingClientRect(),n=e.width/t.offsetWidth||1,r=e.height/t.offsetHeight||1;return n!==1||r!==1}function qo(t,e,n){n===void 0&&(n=!1);var r=yt(e),a=yt(e)&&h0(e),i=Et(e),o=Yt(t,a),l={scrollLeft:0,scrollTop:0},s={x:0,y:0};return(r||!r&&!n)&&((gt(e)!=="body"||zn(i))&&(l=Oo(e)),yt(e)?(s=Yt(e,!0),s.x+=e.clientLeft,s.y+=e.clientTop):i&&(s.x=Un(i))),{x:o.left+l.scrollLeft-s.x,y:o.top+l.scrollTop-s.y,width:o.width,height:o.height}}function p0(t){var e=new Map,n=new Set,r=[];t.forEach(function(i){e.set(i.name,i)});function a(i){n.add(i.name);var o=[].concat(i.requires||[],i.requiresIfExists||[]);o.forEach(function(l){if(!n.has(l)){var s=e.get(l);s&&a(s)}}),r.push(i)}return t.forEach(function(i){n.has(i.name)||a(i)}),r}function Ro(t){var e=p0(t);return Dc.reduce(function(n,r){return n.concat(e.filter(function(a){return a.phase===r}))},[])}function Lo(t){var e;return function(){return e||(e=new Promise(function(n){Promise.resolve().then(function(){e=void 0,n(t())})})),e}}function Po(t){var e=t.reduce(function(n,r){var a=n[r.name];return n[r.name]=a?Object.assign({},a,r,{options:Object.assign({},a.options,r.options),data:Object.assign({},a.data,r.data)}):r,n},{});return Object.keys(e).map(function(n){return e[n]})}var qc={placement:"bottom",modifiers:[],strategy:"absolute"};function Rc(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return!e.some(function(r){return!(r&&typeof r.getBoundingClientRect=="function")})}function Lc(t){t===void 0&&(t={});var e=t,n=e.defaultModifiers,r=n===void 0?[]:n,a=e.defaultOptions,i=a===void 0?qc:a;return function(l,s,d){d===void 0&&(d=i);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},qc,i),modifiersData:{},elements:{reference:l,popper:s},attributes:{},styles:{}},c=[],m=!1,g={state:u,setOptions:function(S){var C=typeof S=="function"?S(u.options):S;E(),u.options=Object.assign({},i,u.options,C),u.scrollParents={reference:mn(l)?xn(l):l.contextElement?xn(l.contextElement):[],popper:xn(s)};var F=Ro(Po([].concat(r,u.options.modifiers)));if(u.orderedModifiers=F.filter(function(q){return q.enabled}),!1){var M;if(getBasePlacement(u.options.placement)===auto)var T;var x,_,k,D,R}return p(),g.update()},forceUpdate:function(){if(!m){var S=u.elements,C=S.reference,F=S.popper;if(!!Rc(C,F)){u.rects={reference:qo(C,rn(F),u.options.strategy==="fixed"),popper:Vn(F)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(q){return u.modifiersData[q.name]=Object.assign({},q.data)});for(var M=0,T=0;T<u.orderedModifiers.length;T++){if(u.reset===!0){u.reset=!1,T=-1;continue}var x=u.orderedModifiers[T],_=x.fn,k=x.options,D=k===void 0?{}:k,R=x.name;typeof _=="function"&&(u=_({state:u,options:D,name:R,instance:g})||u)}}}},update:Lo(function(){return new Promise(function(y){g.forceUpdate(),y(u)})}),destroy:function(){E(),m=!0}};if(!Rc(l,s))return g;g.setOptions(d).then(function(y){!m&&d.onFirstUpdate&&d.onFirstUpdate(y)});function p(){u.orderedModifiers.forEach(function(y){var S=y.name,C=y.options,F=C===void 0?{}:C,M=y.effect;if(typeof M=="function"){var T=M({state:u,name:S,instance:g,options:F}),x=function(){};c.push(T||x)}})}function E(){c.forEach(function(y){return y()}),c=[]}return g}}var m0=[xc,Ic,kc,_c,Mc,Tc,Oc,Cc,Nc],jo=Lc({defaultModifiers:m0});var Pc=class{constructor(e,n,r){this.containerEl=n,this.owner=e,n.on("click",".suggestion-item",this.onSuggestionClick.bind(this)),n.on("mousemove",".suggestion-item",this.onSuggestionMouseover.bind(this)),r.register([],"ArrowUp",()=>(this.setSelectedItem(this.selectedItem-1,!0),!1)),r.register([],"ArrowDown",()=>(this.setSelectedItem(this.selectedItem+1,!0),!1)),r.register([],"Enter",a=>(this.useSelectedItem(a),!1)),r.register([],"Tab",a=>(this.chooseSuggestion(a),!1))}chooseSuggestion(e){if(!this.items||!this.items.length)return;let n=this.items[this.selectedItem];n&&this.owner.onChooseSuggestion(n,e)}onSuggestionClick(e,n){if(e.preventDefault(),!this.suggestions||!this.suggestions.length)return;let r=this.suggestions.indexOf(n);this.setSelectedItem(r,!1),this.useSelectedItem(e)}onSuggestionMouseover(e,n){if(!this.suggestions||!this.suggestions.length)return;let r=this.suggestions.indexOf(n);this.setSelectedItem(r,!1)}empty(){this.containerEl.empty()}setSuggestions(e){this.containerEl.empty();let n=[];e.forEach(r=>{let a=this.containerEl.createDiv("suggestion-item");this.owner.renderSuggestion(r,a),n.push(a)}),this.items=e,this.suggestions=n,this.setSelectedItem(0,!1)}useSelectedItem(e){if(!this.items||!this.items.length)return;let n=this.items[this.selectedItem];n&&this.owner.selectSuggestion(n,e)}wrap(e,n){return(e%n+n)%n}setSelectedItem(e,n){let r=this.wrap(e,this.suggestions.length),a=this.suggestions[this.selectedItem],i=this.suggestions[r];a&&a.removeClass("is-selected"),i&&i.addClass("is-selected"),this.selectedItem=r,n&&i.scrollIntoView(!1)}},ta=class extends ai.FuzzySuggestModal{constructor(e,n,r){super(e);this.items=[];this.scope=new ai.Scope;this.emptyStateText="No match found";this.limit=100;this.inputEl=n,this.items=r,this.suggestEl=createDiv("suggestion-container"),this.contentEl=this.suggestEl.createDiv("suggestion"),this.suggester=new Pc(this,this.contentEl,this.scope),this.scope.register([],"Escape",this.onEscape.bind(this)),this.inputEl.addEventListener("input",this.onInputChanged.bind(this)),this.inputEl.addEventListener("focus",this.onFocus.bind(this)),this.inputEl.addEventListener("blur",this.close.bind(this)),this.suggestEl.on("mousedown",".suggestion-container",a=>{a.preventDefault()})}empty(){this.suggester.empty()}onInputChanged(){if(this.shouldNotOpen)return;let e=this.modifyInput(this.inputEl.value),n=this.getSuggestions(e);n.length>0?this.suggester.setSuggestions(n.slice(0,this.limit)):this.onNoSuggestion(),this.open()}onFocus(){this.shouldNotOpen=!1,this.onInputChanged()}modifyInput(e){return e}onNoSuggestion(){this.empty(),this.renderSuggestion(null,this.contentEl.createDiv("suggestion-item"))}open(){this.app.keymap.pushScope(this.scope),document.body.appendChild(this.suggestEl),this.popper=jo(this.inputEl,this.suggestEl,{placement:"bottom-start",modifiers:[{name:"offset",options:{offset:[0,10]}},{name:"flip",options:{fallbackPlacements:["top"]}}]})}onEscape(){this.close(),this.shouldNotOpen=!0}close(){this.app.keymap.popScope(this.scope),this.suggester.setSuggestions([]),this.popper&&this.popper.destroy(),this.suggestEl.detach()}createPrompt(e){this.promptEl||(this.promptEl=this.suggestEl.createDiv("prompt-instructions"));let n=this.promptEl.createDiv("prompt-instruction");for(let r of e)n.appendChild(r)}};var na=Oe(require("obsidian")),ii=class extends ta{constructor(e,n,r){super(e,n.inputEl,r);this.files=[...r],this.text=n,this.createPrompts(),this.inputEl.addEventListener("input",this.getFile.bind(this))}createPrompts(){this.createPrompt([createSpan({cls:"prompt-instruction-command",text:"Type #"}),createSpan({text:"to link heading"})]),this.createPrompt([createSpan({cls:"prompt-instruction-command",text:"Type ^"}),createSpan({text:"to link blocks"})]),this.createPrompt([createSpan({cls:"prompt-instruction-command",text:"Note: "}),createSpan({text:"Blocks must have been created already"})])}getFile(){let e=this.inputEl.value,n=this.app.metadataCache.getFirstLinkpathDest(e.split(/[\^#]/).shift()||"","");n!=this.file&&(this.file=n,this.file&&(this.cache=this.app.metadataCache.getFileCache(this.file)),this.onInputChanged())}getItemText(e){if(e instanceof na.TFile)return e.path;if(Object.prototype.hasOwnProperty.call(e,"heading"))return e.heading;if(Object.prototype.hasOwnProperty.call(e,"id"))return e.id}onChooseItem(e){e instanceof na.TFile?(this.text.setValue(e.basename),this.file=e,this.cache=this.app.metadataCache.getFileCache(this.file)):Object.prototype.hasOwnProperty.call(e,"heading")?this.text.setValue(this.file.basename+"#"+e.heading):Object.prototype.hasOwnProperty.call(e,"id")&&this.text.setValue(this.file.basename+"^"+e.id)}selectSuggestion({item:e}){let n;e instanceof na.TFile?(this.file=e,n=e.basename):Object.prototype.hasOwnProperty.call(e,"heading")?n=this.file.basename+"#"+e.heading:Object.prototype.hasOwnProperty.call(e,"id")&&(n=this.file.basename+"^"+e.id),this.text.setValue(n),this.close(),this.onClose()}renderSuggestion(e,n){let{item:r,match:a}=e||{},i=n.createDiv({cls:"suggestion-content"});if(!r){i.setText(this.emptyStateText),i.parentElement.addClass("is-selected");return}if(r instanceof na.TFile){let o=r.path.length-r.name.length,l=a.matches.map(s=>createSpan("suggestion-highlight"));for(let s=o;s<r.path.length-r.extension.length-1;s++){let d=a.matches.find(u=>u[0]===s);if(d){let u=l[a.matches.indexOf(d)];i.appendChild(u),u.appendText(r.path.substring(d[0],d[1])),s+=d[1]-d[0]-1;continue}i.appendText(r.path[s])}n.createDiv({cls:"suggestion-note",text:r.path})}else Object.prototype.hasOwnProperty.call(r,"heading")?(i.setText(r.heading),i.prepend(createSpan({cls:"suggestion-flair",text:`H${r.level}`}))):Object.prototype.hasOwnProperty.call(r,"id")&&i.setText(r.id)}get headings(){return this.file?(this.cache||(this.cache=this.app.metadataCache.getFileCache(this.file)),this.cache.headings||[]):[]}get blocks(){return this.file?(this.cache||(this.cache=this.app.metadataCache.getFileCache(this.file)),Object.values(this.cache.blocks||{})||[]):[]}getItems(){let e=this.inputEl.value;return/#/.test(e)?(this.modifyInput=n=>n.split(/#/).pop(),this.headings):/\^/.test(e)?(this.modifyInput=n=>n.split(/\^/).pop(),this.blocks):this.files}};var Er=class extends ft.Modal{constructor(e,n,r,a){super(e);this.calendar=n;this.saved=!1;this.event={name:null,description:null,date:{month:null,day:null,year:null},id:Xe(6),note:null,category:null};r&&(this.event={...r},this.editing=!0),a&&(this.event.date={...a}),this.containerEl.addClass("fantasy-calendar-create-event")}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Event":"New Event"}),this.infoEl=this.contentEl.createDiv("event-info"),this.buildInfo(),this.dateEl=this.contentEl.createDiv("event-date"),this.buildDate(),new ft.Setting(this.contentEl).addButton(e=>{e.setButtonText("Save").setCta().onClick(()=>{if(!this.event.name?.length){new ft.Notice("The event must have a name.");return}if(this.event.end){this.event.end={year:this.event.end.year??this.event.date.year,month:this.event.end.month??this.event.date.month,day:this.event.end.day??this.event.date.day};let n=this.event.date,r=this.event.end,a=Math.max(...this.calendar.static.months.map(s=>s.length)),i=a*this.calendar.static.months.length,o=(n.year-1)*i+(n.month??-1)*a+n.day,l=(r.year-1)*i+(r.month??-1)*a+r.day;if(o>l){let s={...this.event.end};this.event.end={...this.event.date},this.event.date={...s}}}this.saved=!0,this.close()})}).addExtraButton(e=>{e.setIcon("cross").setTooltip("Cancel").onClick(()=>this.close())})}buildDate(){this.dateEl.empty(),this.buildStartDate(),this.endEl=this.dateEl.createDiv(),this.event.end?this.buildEndDate():new ft.Setting(this.endEl).setName("Add End Date").addToggle(e=>{e.setValue(!1).onChange(n=>this.buildEndDate())}),this.stringEl=this.dateEl.createDiv("event-date-string setting-item-description"),this.buildDateString()}buildStartDate(){this.startEl=this.dateEl.createDiv("fantasy-calendar-event-date"),this.startEl.createSpan({text:"Start:"}),this.startDateEl=this.startEl.createDiv("fantasy-calendar-date-fields"),this.buildDateFields(this.startDateEl,this.event.date)}buildEndDate(){this.event.end=this.event.end??{...this.event.date},this.endEl.empty(),this.endEl.addClass("fantasy-calendar-event-date"),this.endEl.createSpan({text:"End:"}),this.endDateEl=this.endEl.createDiv("fantasy-calendar-date-fields"),this.buildDateFields(this.endDateEl,this.event.end)}buildDateString(){this.stringEl.empty(),this.stringEl.createSpan({text:un(this.event.date,this.calendar.static.months,this.event.end)})}buildDateFields(e,n=this.event.date){e.empty();let r=e.createDiv("fantasy-calendar-date-field");r.createEl("label",{text:"Day"}),new ft.TextComponent(r).setPlaceholder("Day").setValue(`${n.day}`).onChange(s=>{n.day=Number(s),this.buildDateString()}).inputEl.setAttr("type","number");let i=e.createDiv("fantasy-calendar-date-field");i.createEl("label",{text:"Month"}),new ft.DropdownComponent(i).addOptions(Object.fromEntries([["select","Select Month"],...this.calendar.static.months.map(s=>[s.name,s.name])])).setValue(n.month!=null?this.calendar.static.months[n.month].name:"select").onChange(s=>{s==="select"&&(n.month=null);let d=this.calendar.static.months.find(u=>u.name==s);n.month=this.calendar.static.months.indexOf(d),this.buildDateString()});let o=e.createDiv("fantasy-calendar-date-field");o.createEl("label",{text:"Year"}),new ft.TextComponent(o).setPlaceholder("Year").setValue(`${n.year}`).onChange(s=>{!s||s==null?n.year=void 0:n.year=Number(s),this.buildDateString()}).inputEl.setAttr("type","number")}buildInfo(){this.infoEl.empty(),new ft.Setting(this.infoEl).setName("Note").setDesc("Link the event to a note.").addText(n=>{let r=this.app.vault.getFiles();if(n.setPlaceholder("Path"),this.event.note){let i=this.app.vault.getAbstractFileByPath(this.event.note);i&&i instanceof ft.TFile&&n.setValue(i.basename)}let a=new ii(this.app,n,[...r]);a.onClose=async()=>{n.inputEl.blur(),this.event.note=a.file.path,this.tryParse(a.file)}}),new ft.Setting(this.infoEl).setName("Event Name").addText(n=>n.setPlaceholder("Event Name").setValue(this.event.name).onChange(r=>{this.event.name=r}));let e=this.infoEl.createDiv("event-description");e.createEl("label",{text:"Event Description"}),new ft.TextAreaComponent(e).setPlaceholder("Event Description").setValue(this.event.description).onChange(n=>{this.event.description=n}),new ft.Setting(this.infoEl).setName("Event Category").addDropdown(n=>{let r=Object.fromEntries(this.calendar.categories.map(a=>[a.id,a.name]));n.addOptions(r).setValue(this.event.category).onChange(a=>this.event.category=a)})}async tryParse(e){this.event.name=e.basename;let n=this.app.metadataCache.getFileCache(e),{frontmatter:r}=n;if(r){if("fc-date"in r){let{day:a,month:i,year:o}=r["fc-date"];if(a&&(this.event.date.day=a),i){if(typeof i=="string"){let l=this.calendar.static.months?.find(s=>s.name==i)??this.calendar.static.months?.[0];this.event.date.month=this.calendar.static.months?.indexOf(l)}typeof i=="number"&&(this.event.date.month=i-1)}o&&(this.event.date.year=o)}"fc-category"in r&&(this.calendar.categories.find(a=>a.name===r["fc-category"])||this.calendar.categories.push({name:r["fantasy-category"],color:"#808080",id:Xe(6)}),this.event.category=this.calendar.categories.find(a=>a.name===r["fc-category"])?.id)}await this.display()}async onOpen(){await this.display()}};function jc(t,e,n){let r=t.slice();return r[10]=e[n],r}function g0(t){let e,n,r=t[0],a=[];for(let o=0;o<r.length;o+=1)a[o]=Vc(jc(t,r,o));let i=o=>V(a[o],1,1,()=>{a[o]=null});return{c(){e=N("div");for(let o=0;o<a.length;o+=1)a[o].c();b(e,"class","existing-items")},m(o,l){U(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&31){r=o[0];let s;for(s=0;s<r.length;s+=1){let d=jc(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=Vc(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(xe(),s=r.length;s<a.length;s+=1)i(s);Fe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)V(a[l]);n=!1},d(o){o&&W(e),Ye(a,o)}}}function y0(t){let e,n;return e=new Rt({props:{message:"Create a new event to see it here."}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p:K,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Vc(t){let e,n;function r(){return t[8](t[10])}function a(){return t[9](t[10])}return e=new vc({props:{event:t[10],category:t[3](t[10].category),date:un(t[10].date,t[1],t[10].end)}}),e.$on("edit",r),e.$on("delete",a),{c(){re(e.$$.fragment)},m(i,o){te(e,i,o),n=!0},p(i,o){t=i;let l={};o&1&&(l.event=t[10]),o&1&&(l.category=t[3](t[10].category)),o&3&&(l.date=un(t[10].date,t[1],t[10].end)),e.$set(l)},i(i){n||(j(e.$$.fragment,i),n=!0)},o(i){V(e.$$.fragment,i),n=!1},d(i){ee(e,i)}}}function v0(t){let e,n,r,a,i,o;e=new qt({}),e.$on("click",t[7]);let l=[y0,g0],s=[];function d(u,c){return u[0].length?1:0}return r=d(t,-1),a=s[r]=l[r](t),{c(){re(e.$$.fragment),n=G(),a.c(),i=Je()},m(u,c){te(e,u,c),U(u,n,c),s[r].m(u,c),U(u,i,c),o=!0},p(u,[c]){let m=r;r=d(u,c),r===m?s[r].p(u,c):(xe(),V(s[m],1,1,()=>{s[m]=null}),Fe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){V(e.$$.fragment,u),V(a),o=!1},d(u){ee(e,u),u&&W(n),s[r].d(u),u&&W(i)}}}function b0(t,e,n){let r,a,{calendar:i}=e,{plugin:o}=e,l=g=>{n(0,r=r.filter(p=>p.id!==g.id))},s=g=>i.categories.find(({id:p})=>p==g),d=g=>{let p=new Er(o.app,i,g);p.onClose=()=>{if(!!p.saved){if(p.editing){let E=i.events.findIndex(y=>y.id===p.event.id);i.events.splice(E,1,{...p.event})}else i.events.push({...p.event});n(0,r=i.events)}},p.open()},u=()=>d(),c=g=>d(g),m=g=>l(g);return t.$$set=g=>{"calendar"in g&&n(5,i=g.calendar),"plugin"in g&&n(6,o=g.plugin)},t.$$.update=()=>{if(t.$$.dirty&32){e:n(0,r=i.events)}if(t.$$.dirty&32){e:n(1,a=i.static.months)}if(t.$$.dirty&1){e:r.sort((g,p)=>g.date.year!=p.date.year?g.date.year-p.date.year:g.date.month!=p.date.month?g.date.month-p.date.month:g.date.day-p.date.day)}},[r,a,l,s,d,i,o,u,c,m]}var Hc=class extends le{constructor(e){super();ce(this,e,b0,v0,oe,{calendar:5,plugin:6})}},Wc=Hc;var oi=Oe(require("obsidian"));var Yc=Oe(Gc());var Vo="#808080",Me=["M6.5,16a9.5,9.5 0 1,0 19,0a9.5,9.5 0 1,0 -19,0","M19.79,6C22.25,7.2,25,9.92,25,16s-2.75,8.8-5.21,10a10.59,10.59,0,0,1-3.79.71A10.72,10.72,0,0,1,16,5.28,10.59,10.59,0,0,1,19.79,6Z","M19.43,5.86C21.79,7,24.5,9.7,24.5,16s-2.71,9-5.07,10.14a10.55,10.55,0,0,1-3.43.58A10.72,10.72,0,0,1,16,5.28,10.55,10.55,0,0,1,19.43,5.86Z","M17.87,5.46C20.23,6.34,24,8.88,24,16.17c0,6.85-3.33,9.36-5.69,10.29a11,11,0,0,1-2.31.26A10.72,10.72,0,0,1,16,5.28,10.49,10.49,0,0,1,17.87,5.46Z","M17.79,5.45C20,6.3,23.5,8.77,23.5,15.88c0,7.37-3.75,9.87-5.95,10.71a9.92,9.92,0,0,1-1.55.13A10.72,10.72,0,0,1,16,5.28,10.54,10.54,0,0,1,17.79,5.45Z","M17.35,5.38c1.9.79,5.15,3.25,5.15,10.72,0,7.25-3.06,9.68-5,10.5a10.87,10.87,0,0,1-1.52.12A10.72,10.72,0,0,1,16,5.28,10.1,10.1,0,0,1,17.35,5.38Z","M17.05,5.34c1.6.75,4.45,3.17,4.45,10.79,0,7.39-2.68,9.76-4.3,10.52a11.9,11.9,0,0,1-1.2.07A10.72,10.72,0,0,1,16,5.28,9,9,0,0,1,17.05,5.34Z","M16.85,5.33c1.3.74,3.65,3.12,3.65,10.67s-2.35,9.93-3.65,10.67c-.28,0-.56,0-.85,0A10.72,10.72,0,0,1,16,5.28,7.92,7.92,0,0,1,16.85,5.33Z","M16.46,5.31c.95.78,3,3.34,3,10.69s-2.09,9.91-3,10.69l-.46,0A10.72,10.72,0,0,1,16,5.28Z","M16.29,5.3c.65.8,2.21,3.48,2.21,10.78S17,25.91,16.3,26.7l-.3,0A10.72,10.72,0,0,1,16,5.28Z","M16.13,5.29c.37.89,1.37,3.92,1.37,10.79s-1,9.76-1.36,10.63H16A10.72,10.72,0,0,1,16,5.28Z","M16,5.29A85.5,85.5,0,0,1,16.5,16,85.5,85.5,0,0,1,16,26.71h0A10.72,10.72,0,0,1,16,5.28Z","M16,26.72A10.72,10.72,0,0,1,16,5.28Z","M15.5,16A85.59,85.59,0,0,0,16,26.72,10.72,10.72,0,0,1,16,5.28,85.59,85.59,0,0,0,15.5,16Z","M14.5,16.08c0,6.84,1,9.77,1.36,10.63a10.71,10.71,0,0,1,0-21.42C15.5,6.17,14.5,9.2,14.5,16.08Z","M15.7,26.7a10.7,10.7,0,0,1,0-21.4c-.65.8-2.21,3.47-2.21,10.78S15,25.92,15.7,26.7Z","M15.55,26.7a10.71,10.71,0,0,1,0-21.4c-1,.78-3.05,3.34-3.05,10.7S14.6,25.92,15.55,26.7Z","M15.16,26.68a10.71,10.71,0,0,1,0-21.36C13.85,6.06,11.5,8.43,11.5,16S13.85,25.94,15.16,26.68Z","M14.81,26.65A10.72,10.72,0,0,1,15,5.33c-1.59.76-4.45,3.17-4.45,10.8C10.5,23.53,13.19,25.9,14.81,26.65Z","M14.49,26.6a10.71,10.71,0,0,1,.17-21.23c-1.9.8-5.16,3.24-5.16,10.73C9.5,23.37,12.57,25.79,14.49,26.6Z","M14.46,26.6a10.71,10.71,0,0,1-.24-21.16C12,6.29,8.5,8.76,8.5,15.88,8.5,23.26,12.27,25.76,14.46,26.6Z","M13.72,26.47a10.71,10.71,0,0,1,.43-21C11.78,6.33,8,8.87,8,16.17,8,23,11.35,25.55,13.72,26.47Z","M12.6,26.19a10.73,10.73,0,0,1,0-20.35C10.23,7,7.5,9.67,7.5,16s2.73,9,5.1,10.16Z","M12.23,26a10.7,10.7,0,0,1,0-20C9.77,7.19,7,9.9,7,16S9.77,24.81,12.23,26Z",null,"M19.77,26C22.23,24.81,25,22.1,25,16S22.23,7.19,19.77,6a10.7,10.7,0,0,1,0,20Z","M19.4,26.16C21.77,25,24.5,22.33,24.5,16S21.77,7,19.4,5.84a10.71,10.71,0,0,1,0,20.32Z","M18.28,26.47C20.65,25.55,24,23,24,16.17c0-7.3-3.78-9.84-6.15-10.72a10.71,10.71,0,0,1,.43,21Z","M17.54,26.6c2.19-.84,6-3.34,6-10.72,0-7.12-3.5-9.59-5.72-10.44a10.71,10.71,0,0,1-.24,21.16Z","M17.51,26.6c1.92-.81,5-3.23,5-10.5,0-7.49-3.26-9.93-5.16-10.73a10.71,10.71,0,0,1,.17,21.23Z","M17.19,26.65c1.62-.75,4.31-3.12,4.31-10.52,0-7.63-2.86-10-4.45-10.8a10.72,10.72,0,0,1,.14,21.32Z","M16.84,26.68c1.31-.74,3.66-3.11,3.66-10.68S18.15,6.06,16.84,5.32a10.71,10.71,0,0,1,0,21.36Z","M16.45,26.7c.95-.78,3.05-3.34,3.05-10.7S17.4,6.08,16.45,5.3a10.71,10.71,0,0,1,0,21.4Z","M16.3,26.7c.67-.78,2.2-3.37,2.2-10.62S16.94,6.1,16.29,5.3a10.7,10.7,0,0,1,0,21.4Z","M16.14,26.71c.37-.86,1.36-3.79,1.36-10.63s-1-9.91-1.37-10.79a10.71,10.71,0,0,1,0,21.42Z","M16,26.72A85.59,85.59,0,0,0,16.5,16,85.59,85.59,0,0,0,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72V5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72h0A85.59,85.59,0,0,1,15.5,16,85.59,85.59,0,0,1,16,5.28h0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72h-.14c-.37-.86-1.36-3.79-1.36-10.63s1-9.91,1.37-10.79H16a10.72,10.72,0,0,1,0,21.44Z","M16,26.72l-.3,0c-.67-.78-2.2-3.37-2.2-10.62s1.56-10,2.21-10.78l.29,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72l-.45,0c-1-.78-3.05-3.34-3.05-10.7s2.1-9.92,3.05-10.7l.45,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72c-.28,0-.56,0-.84,0C13.85,25.94,11.5,23.57,11.5,16s2.35-9.94,3.66-10.68c.28,0,.56,0,.84,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a11.7,11.7,0,0,1-1.19-.07c-1.62-.75-4.31-3.12-4.31-10.52,0-7.63,2.86-10,4.45-10.8.35,0,.7,0,1.05,0a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a10.85,10.85,0,0,1-1.51-.12c-1.92-.81-5-3.23-5-10.5,0-7.49,3.26-9.93,5.16-10.73A11.9,11.9,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a11.16,11.16,0,0,1-1.54-.12c-2.19-.84-6-3.34-6-10.72,0-7.12,3.5-9.59,5.72-10.44A10.43,10.43,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a10.69,10.69,0,0,1-2.28-.25C11.35,25.55,8,23,8,16.17c0-7.3,3.78-9.84,6.15-10.72A11.26,11.26,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z","M16,26.72a10.63,10.63,0,0,1-3.4-.56C10.23,25,7.5,22.33,7.5,16s2.73-9,5.1-10.16A10.72,10.72,0,1,1,16,26.72Z","M16,26.72a10.52,10.52,0,0,1-3.77-.7C9.77,24.81,7,22.1,7,16S9.77,7.19,12.23,6A10.52,10.52,0,0,1,16,5.28a10.72,10.72,0,0,1,0,21.44Z"],Uc={"New Moon":Me[0],"New Moon Fading":Me[1],"New Moon Faded":Me[2],"Waxing Crescent Rising":Me[3],"Waxing Crescent Risen":Me[4],"Waxing Crescent":Me[6],"Waxing Crescent Fading":Me[7],"Waxing Crescent Faded":Me[8],"First Quarter Rising":Me[9],"First Quarter Risen":Me[10],"First Quarter":Me[12],"First Quarter Fading":Me[13],"First Quarter Faded":Me[14],"Waxing Gibbous Rising":Me[15],"Waxing Gibbous Risen":Me[16],"Waxing Gibbous":Me[18],"Waxing Gibbous Fading":Me[19],"Waxing Gibbous Faded":Me[20],"Full Moon Rising":Me[21],"Full Moon Risen":Me[22],"Full Moon":Me[24],"Full Moon Fading":Me[25],"Full Moon Faded":Me[26],"Waning Gibbous Rising":Me[27],"Waning Gibbous Risen":Me[28],"Waning Gibbous":Me[30],"Waning Gibbous Fading":Me[31],"Waning Gibbous Faded":Me[32],"Last Quarter Rising":Me[33],"Last Quarter Risen":Me[34],"Last Quarter":Me[36],"Last Quarter Fading":Me[37],"Last Quarter Faded":Me[38],"Waning Crescent Rising":Me[39],"Waning Crescent Risen":Me[40],"Waning Crescent":Me[42],"Waning Crescent Fading":Me[43],"Waning Crescent Faded":Me[44],"New Moon Rising":Me[45],"New Moon Risen":Me[46]},zc={4:["New Moon","First Quarter","Full Moon","Last Quarter"],8:["New Moon","Waxing Crescent","First Quarter","Waxing Gibbous","Full Moon","Waning Gibbous","Last Quarter","Waning Crescent"],16:["New Moon","New Moon Fading","Waxing Crescent","Waxing Crescent Fading","First Quarter","First Quarter Fading","Waxing Gibbous","Waxing Gibbous Fading","Full Moon","Full Moon Fading","Waning Gibbous","Waning Gibbous Fading","Last Quarter","Last Quarter Fading","Waning Crescent","Waning Crescent Fading"],24:["New Moon","New Moon Fading","Waxing Crescent Rising","Waxing Crescent","Waxing Crescent Fading","First Quarter Rising","First Quarter","First Quarter Fading","Waxing Gibbous Rising","Waxing Gibbous","Waxing Gibbous Fading","Full Moon Rising","Full Moon","Full Moon Fading","Waning Gibbous Rising","Waning Gibbous","Waning Gibbous Fading","Last Quarter Rising","Last Quarter","Last Quarter Fading","Waning Crescent Rising","Waning Crescent","Waning Crescent Fading","New Moon Rising"],40:["New Moon","New Moon Fading","New Moon Faded","Waxing Crescent Rising","Waxing Crescent Risen","Waxing Crescent","Waxing Crescent Fading","Waxing Crescent Faded","First Quarter Rising","First Quarter Risen","First Quarter","First Quarter Fading","First Quarter Faded","Waxing Gibbous Rising","Waxing Gibbous Risen","Waxing Gibbous","Waxing Gibbous Fading","Waxing Gibbous Faded","Full Moon Rising","Full Moon Risen","Full Moon","Full Moon Fading","Full Moon Faded","Waning Gibbous Rising","Waning Gibbous Risen","Waning Gibbous","Waning Gibbous Fading","Waning Gibbous Faded","Last Quarter Rising","Last Quarter Risen","Last Quarter","Last Quarter Fading","Last Quarter Faded","Waning Crescent Rising","Waning Crescent Risen","Waning Crescent","Waning Crescent Fading","Waning Crescent Faded","New Moon Rising","New Moon Risen"]};function w0(t){he(t,"svelte-1ok7o99",".category.svelte-1ok7o99{display:grid;grid-template-columns:1fr auto auto;align-items:center;gap:0.5rem;padding-top:0.75rem}")}function Zc(t,e,n){let r=t.slice();return r[8]=e[n],r}function D0(t){let e,n=t[1],r=[];for(let a=0;a<n.length;a+=1)r[a]=$c(Zc(t,n,a));return{c(){e=N("div");for(let a=0;a<r.length;a+=1)r[a].c();b(e,"class","existing-items")},m(a,i){U(a,e,i);for(let o=0;o<r.length;o+=1)r[o].m(e,null)},p(a,i){if(i&18){n=a[1];let o;for(o=0;o<n.length;o+=1){let l=Zc(a,n,o);r[o]?r[o].p(l,i):(r[o]=$c(l),r[o].c(),r[o].m(e,null))}for(;o<r.length;o+=1)r[o].d(1);r.length=n.length}},i:K,o:K,d(a){a&&W(e),Ye(r,a)}}}function _0(t){let e,n;return e=new Rt({props:{message:"Create a new event category to see it here."}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p:K,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function $c(t){let e,n,r,a,i,o,l,s,d,u,c,m,g;function p(...E){return t[6](t[8],...E)}return{c(){e=N("div"),n=N("div"),a=G(),i=N("div"),o=N("input"),s=G(),d=N("div"),c=G(),b(o,"type","color"),o.value=l=t[8].color,b(i,"class","color"),b(e,"class","category svelte-1ok7o99")},m(E,y){U(E,e,y),w(e,n),w(e,a),w(e,i),w(i,o),w(e,s),w(e,d),w(e,c),m||(g=[fe(r=t[2].call(null,n,t[8])),J(o,"change",p),fe(u=t[3].call(null,d,t[8]))],m=!0)},p(E,y){t=E,r&&tt(r.update)&&y&2&&r.update.call(null,t[8]),y&2&&l!==(l=t[8].color)&&(o.value=l),u&&tt(u.update)&&y&2&&u.update.call(null,t[8])},d(E){E&&W(e),m=!1,we(g)}}}function E0(t){let e,n,r,a,i,o;e=new qt({}),e.$on("click",t[5]);let l=[_0,D0],s=[];function d(u,c){return u[1].length?1:0}return r=d(t,-1),a=s[r]=l[r](t),{c(){re(e.$$.fragment),n=G(),a.c(),i=Je()},m(u,c){te(e,u,c),U(u,n,c),s[r].m(u,c),U(u,i,c),o=!0},p(u,[c]){let m=r;r=d(u,c),r===m?s[r].p(u,c):(xe(),V(s[m],1,1,()=>{s[m]=null}),Fe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){V(e.$$.fragment,u),V(a),o=!1},d(u){ee(e,u),u&&W(n),s[r].d(u),u&&W(i)}}}function C0(t,e,n){let r,a=Se(),{calendar:i}=e,o=(c,m)=>{new oi.TextComponent(c).setValue(m.name).setPlaceholder("Name").onChange(p=>{m.name=p,a("update",m)}).inputEl.setAttr("style","width: 100%;")},l=(c,m)=>{new oi.ExtraButtonComponent(c).setIcon("trash").onClick(()=>{n(1,r=r.filter(g=>g.id!==m.id)),a("delete",m)})},s=(c,m)=>{let{target:g}=c;g instanceof HTMLInputElement&&(m.color=g.value,a("update",m))},d=()=>n(0,i.categories=[...r,{id:Xe(6),color:(0,Yc.default)(),name:"Category"}],i),u=(c,m)=>s(m,c);return t.$$set=c=>{"calendar"in c&&n(0,i=c.calendar)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(1,r=i.categories)}},[i,r,o,l,s,d,u]}var Kc=class extends le{constructor(e){super();ce(this,e,C0,E0,oe,{calendar:0},w0)}},Qc=Kc;var Wo=Oe(require("obsidian"));function A0(t){let e,n,r,a,i,o,l,s;return{c(){e=Jt("svg"),n=Jt("circle"),a=Jt("path"),o=Jt("circle"),b(n,"cx","16"),b(n,"cy","16"),b(n,"r","10"),b(n,"fill",r=t[0].faceColor),b(a,"class","shadow"),b(a,"fill",i=t[0].shadowColor),b(a,"d",t[4]),b(o,"cx","16"),b(o,"cy","16"),b(o,"r","10"),b(o,"fill","none"),b(o,"stroke","#000"),b(o,"stroke-width","2px"),b(e,"class","moon"),b(e,"id",l=t[0].id),b(e,"preserveAspectRatio","xMidYMid"),b(e,"aria-label",s=t[1]?`${t[0].name}
${t[3]}`:null),b(e,"width",t[2]),b(e,"height",t[2]),b(e,"viewBox","0 0 32 32")},m(d,u){U(d,e,u),w(e,n),w(e,a),w(e,o)},p(d,[u]){u&1&&r!==(r=d[0].faceColor)&&b(n,"fill",r),u&1&&i!==(i=d[0].shadowColor)&&b(a,"fill",i),u&16&&b(a,"d",d[4]),u&1&&l!==(l=d[0].id)&&b(e,"id",l),u&11&&s!==(s=d[1]?`${d[0].name}
${d[3]}`:null)&&b(e,"aria-label",s),u&4&&b(e,"width",d[2]),u&4&&b(e,"height",d[2])},i:K,o:K,d(d){d&&W(e)}}}function k0(t,e,n){let r,{moon:a}=e,{label:i=!0}=e,{size:o=28}=e,{phase:l}=e;return t.$$set=s=>{"moon"in s&&n(0,a=s.moon),"label"in s&&n(1,i=s.label),"size"in s&&n(2,o=s.size),"phase"in s&&n(3,l=s.phase)},t.$$.update=()=>{if(t.$$.dirty&8){e:n(4,r=Uc[l])}},[a,i,o,l,r]}var Xc=class extends le{constructor(e){super();ce(this,e,k0,A0,oe,{moon:0,label:1,size:2,phase:3})}},Fn=Xc;var Kt=Oe(require("obsidian"));var Ho=class extends Kt.Modal{constructor(e,n,r){super(e);this.calendar=n;this.saved=!1;this.moon={name:null,cycle:null,offset:null,faceColor:"#fff",shadowColor:"#000",id:Xe(6)};r&&(this.moon={...r},this.editing=!0),this.containerEl.addClass("fantasy-calendar-create-moon")}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Moon":"New Moon"}),this.infoEl=this.contentEl.createDiv("moon-info"),this.buildInfo(),new Kt.Setting(this.contentEl).addButton(e=>{e.setButtonText("Save").setCta().onClick(()=>{if(!this.moon.name?.length){new Kt.Notice("The moon must have a name.");return}if(!this.moon.cycle){new Kt.Notice("The moon must have a positive cycle.");return}this.saved=!0,this.close()})}).addExtraButton(e=>{e.setIcon("cross").setTooltip("Cancel").onClick(()=>this.close())})}buildInfo(){this.infoEl.empty(),new Kt.Setting(this.infoEl).setName("Name").addText(e=>{e.setValue(this.moon.name).onChange(n=>{this.moon.name=n})}),new Kt.Setting(this.infoEl).setName("Cycle").setDesc("How many days it takes for the moon to complete a full cycle.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.moon.cycle}`).onChange(n=>{isNaN(Number(n))||(this.moon.cycle=Number(n))})}),new Kt.Setting(this.infoEl).setName("Offset").setDesc("Shift the starting moon phase by a number of days.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.moon.offset}`).onChange(n=>{isNaN(Number(n))||(this.moon.offset=Number(n))})}),new Kt.Setting(this.infoEl).setName("Face Color").addText(e=>{e.inputEl.setAttr("type","color"),e.setValue(this.moon.faceColor).onChange(n=>{this.moon.faceColor=n})}),new Kt.Setting(this.infoEl).setName("Shadow Color").addText(e=>{e.inputEl.setAttr("type","color"),e.setValue(this.moon.shadowColor).onChange(n=>{this.moon.shadowColor=n})})}async onOpen(){await this.display()}};function x0(t){he(t,"svelte-v24qmo",".moon.svelte-v24qmo{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.setting-item-name.svelte-v24qmo{display:flex;align-items:center}.icons.svelte-v24qmo{display:flex;align-self:flex-start;justify-self:flex-end;align-items:center}.icon.svelte-v24qmo{align-items:center}")}function Jc(t,e,n){let r=t.slice();return r[13]=e[n],r}function F0(t){let e,n,r=t[1],a=[];for(let o=0;o<r.length;o+=1)a[o]=ed(Jc(t,r,o));let i=o=>V(a[o],1,1,()=>{a[o]=null});return{c(){e=N("div");for(let o=0;o<a.length;o+=1)a[o].c();b(e,"class","existing-items")},m(o,l){U(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&98){r=o[1];let s;for(s=0;s<r.length;s+=1){let d=Jc(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=ed(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(xe(),s=r.length;s<a.length;s+=1)i(s);Fe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)V(a[l]);n=!1},d(o){o&&W(e),Ye(a,o)}}}function T0(t){let e,n;return e=new Rt({props:{message:"Create a new moon to see it here."}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p:K,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function ed(t){let e,n,r,a,i,o=t[13].name+"",l,s,d,u,c,m=t[13].cycle+"",g,p,E,y,S,C,F,M,T,x,_,k,D;a=new Fn({props:{moon:t[13],phase:"First Quarter",label:!1,size:20}});function R(){return t[10](t[13])}function q(){return t[11](t[13])}return{c(){e=N("div"),n=N("div"),r=N("span"),re(a.$$.fragment),i=G(),l=be(o),s=G(),d=N("div"),u=N("div"),c=be("Cycle: "),g=be(m),p=be(" days"),E=G(),y=N("div"),S=N("div"),F=G(),M=N("div"),x=G(),b(r,"class","setting-item-name svelte-v24qmo"),b(u,"class","date"),b(d,"class","setting-item-description"),b(n,"class","moon-info"),b(S,"class","icon svelte-v24qmo"),b(M,"class","icon svelte-v24qmo"),b(y,"class","icons svelte-v24qmo"),b(e,"class","moon svelte-v24qmo")},m(H,ne){U(H,e,ne),w(e,n),w(n,r),te(a,r,null),w(r,i),w(r,l),w(n,s),w(n,d),w(d,u),w(u,c),w(u,g),w(u,p),w(e,E),w(e,y),w(y,S),w(y,F),w(y,M),w(e,x),_=!0,k||(D=[fe(C=t[4].call(null,S)),J(S,"click",R),fe(T=t[3].call(null,M)),J(M,"click",q)],k=!0)},p(H,ne){t=H;let ye={};ne&2&&(ye.moon=t[13]),a.$set(ye),(!_||ne&2)&&o!==(o=t[13].name+"")&&Ae(l,o),(!_||ne&2)&&m!==(m=t[13].cycle+"")&&Ae(g,m)},i(H){_||(j(a.$$.fragment,H),_=!0)},o(H){V(a.$$.fragment,H),_=!1},d(H){H&&W(e),ee(a),k=!1,we(D)}}}function S0(t){let e,n,r,a,i,o,l,s;e=new fn({props:{name:"Display Moons",desc:"Display moons by default when viewing this calendar.",value:t[2]}}),e.$on("click",t[8]),r=new qt({}),r.$on("click",t[9]);let d=[T0,F0],u=[];function c(m,g){return m[1].length?1:0}return i=c(t,-1),o=u[i]=d[i](t),{c(){re(e.$$.fragment),n=G(),re(r.$$.fragment),a=G(),o.c(),l=Je()},m(m,g){te(e,m,g),U(m,n,g),te(r,m,g),U(m,a,g),u[i].m(m,g),U(m,l,g),s=!0},p(m,[g]){let p={};g&4&&(p.value=m[2]),e.$set(p);let E=i;i=c(m,g),i===E?u[i].p(m,g):(xe(),V(u[E],1,1,()=>{u[E]=null}),Fe(),o=u[i],o?o.p(m,g):(o=u[i]=d[i](m),o.c()),j(o,1),o.m(l.parentNode,l))},i(m){s||(j(e.$$.fragment,m),j(r.$$.fragment,m),j(o),s=!0)},o(m){V(e.$$.fragment,m),V(r.$$.fragment,m),V(o),s=!1},d(m){ee(e,m),m&&W(n),ee(r,m),m&&W(a),u[i].d(m),m&&W(l)}}}function B0(t,e,n){let r,a,{calendar:i}=e,{plugin:o}=e,l=Se(),s=y=>{let S=new Wo.ExtraButtonComponent(y).setIcon("trash").setTooltip("Delete")},d=y=>{new Wo.ExtraButtonComponent(y).setIcon("pencil").setTooltip("Edit")},u=y=>{n(0,i.static.moons=i.static.moons.filter(S=>S.id!==y.id),i)},c=y=>{let S=new Ho(o.app,i,y);S.onClose=()=>{if(!!S.saved){if(S.editing){let C=i.static.moons.findIndex(F=>F.id===S.moon.id);i.static.moons.splice(C,1,{...S.moon})}else i.static.moons.push({...S.moon});n(1,r=i.static.moons)}},S.open()},m=()=>n(0,i.static.displayMoons=!i.static.displayMoons,i),g=()=>c(),p=y=>c(y),E=y=>u(y);return t.$$set=y=>{"calendar"in y&&n(0,i=y.calendar),"plugin"in y&&n(7,o=y.plugin)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(1,r=i.static.moons)}if(t.$$.dirty&1){e:n(2,a=i.static.displayMoons)}},[i,r,a,s,d,u,c,o,m,g,p,E]}var td=class extends le{constructor(e){super();ce(this,e,B0,S0,oe,{calendar:0,plugin:7},x0)}},nd=td;var Go=Oe(require("obsidian"));function N0(t){he(t,"svelte-1rh93fc",".leapday.svelte-1rh93fc.svelte-1rh93fc{display:grid;grid-template-columns:1fr auto;align-items:center;justify-content:space-between;gap:1rem;margin-top:0.5rem}.leapday-info.svelte-1rh93fc.svelte-1rh93fc{width:100%}.icons.svelte-1rh93fc.svelte-1rh93fc{display:flex;align-self:center;justify-self:flex-end;align-items:center}.leapday.svelte-1rh93fc .icon.svelte-1rh93fc{align-items:center}")}function M0(t){let e,n,r,a=t[0].name+"",i,o,l,s,d,u,c,m,g,p,E,y,S;return{c(){e=N("div"),n=N("div"),r=N("span"),i=be(a),o=G(),l=N("div"),s=be(t[1]),d=G(),u=N("div"),c=N("div"),g=G(),p=N("div"),b(r,"class","setting-item-name"),b(l,"class","setting-item-description"),b(n,"class","leapday-info svelte-1rh93fc"),b(c,"class","icon svelte-1rh93fc"),b(p,"class","icon svelte-1rh93fc"),b(u,"class","icons svelte-1rh93fc"),b(e,"class","leapday svelte-1rh93fc")},m(C,F){U(C,e,F),w(e,n),w(n,r),w(r,i),w(n,o),w(n,l),w(l,s),w(e,d),w(e,u),w(u,c),w(u,g),w(u,p),y||(S=[fe(m=t[4].call(null,c)),J(c,"click",t[5]),fe(E=t[3].call(null,p)),J(p,"click",t[6])],y=!0)},p(C,[F]){F&1&&a!==(a=C[0].name+"")&&Ae(i,a),F&2&&Ae(s,C[1])},i:K,o:K,d(C){C&&W(e),y=!1,we(S)}}}function I0(t,e,n){let r,a=Se(),i=u=>{new Go.ExtraButtonComponent(u).setIcon("trash").setTooltip("Delete").extraSettingsEl.setAttr("style","margin-left: 0;")},o=u=>{new Go.ExtraButtonComponent(u).setIcon("pencil").setTooltip("Edit")},{leapday:l}=e,s=()=>a("edit"),d=()=>a("delete");return t.$$set=u=>{"leapday"in u&&n(0,l=u.leapday)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(1,r=Ca(l))}},[l,r,a,i,o,s,d]}var rd=class extends le{constructor(e){super();ce(this,e,I0,M0,oe,{leapday:0},N0)}},ad=rd;var it=Oe(require("obsidian"));var Uo=class extends it.Modal{constructor(e,n,r){super(e);this.calendar=n;this.saved=!1;this.leapday={id:Xe(6),name:"Leap Day",interval:[],intercalary:!1,timespan:null,offset:0,type:"leapday"};r&&(this.leapday={...r},this.editing=!0),this.containerEl.addClass("fantasy-calendar-create-leapday")}async display(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:this.editing?"Edit Leap Day":"New Leap Day"}),this.infoEl=this.contentEl.createDiv("leapday-info"),this.buildInfo(),new it.Setting(this.contentEl).addButton(e=>{e.setButtonText("Save").setCta().onClick(()=>{if(!this.leapday.interval.length){new it.Notice("The leap day must have an interval.");return}if(this.leapday.timespan==null){new it.Notice("The leap day must be attached to a Month.");return}this.saved=!0,this.close()})}).addExtraButton(e=>{e.setIcon("cross").setTooltip("Cancel").onClick(()=>this.close())})}buildInfo(){this.infoEl.empty(),new it.Setting(this.infoEl).setName("Name").addText(e=>{e.setValue(this.leapday.name).onChange(n=>{this.leapday.name=n})}),new it.Setting(this.infoEl).setName("Month").setDesc("The leap day will be added to this month.").addDropdown(e=>{for(let n of this.calendar.static.months){let r=this.calendar.static.months.indexOf(n);e.addOption(`${r}`,n.name)}e.setValue(`${this.leapday.timespan}`).onChange(n=>this.leapday.timespan=Number(n))}),new it.Setting(this.infoEl).setName("Offset").setDesc("Shift the years the leap day is applied to.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.leapday.offset}`).onChange(n=>{isNaN(Number(n))||(this.leapday.offset=Number(n))})}),this.conditionsEl=this.infoEl.createDiv(),this.buildConditions()}buildConditions(){this.conditionsEl.empty();let e=new it.ButtonComponent(this.conditionsEl).setTooltip("Add New").setButtonText("+").onClick(async()=>{let n=new zo(this.app,this.intervals.length>0);n.onClose=()=>{!n.saved||(this.leapday.interval.push(n.condition),this.buildConditions())},n.open()});e.buttonEl.style.width="100%",this.conditionsEl.createSpan({text:Ca(this.leapday),cls:"fantasy-leap-day-interval-description setting-item"});for(let n of this.intervals)new it.Setting(this.conditionsEl).setName(this.getIntervalName(n)).addExtraButton(r=>{r.setIcon("pencil").setTooltip("Edit").onClick(()=>{let a=new zo(this.app,this.intervals.indexOf(n)!=0,n);a.onClose=()=>{!a.saved||(this.leapday.interval.splice(this.leapday.interval.indexOf(n),1,a.condition),this.buildConditions())},a.open()})}).addExtraButton(r=>{r.setIcon("trash").setTooltip("Delete").onClick(()=>{this.leapday.interval.splice(this.leapday.interval.indexOf(n),1),this.intervals.length&&this.intervals[0].exclusive&&(this.intervals[0].exclusive=!1),this.buildConditions()})})}get intervals(){return this.leapday.interval.sort((e,n)=>e.interval-n.interval)}getIntervalName(e){let n=[`${e.interval}`];return e.exclusive&&n.push("(Exclusive)"),e.ignore&&n.push(" - Ignoring Offset"),n.join(" ")}async onOpen(){await this.display()}},zo=class extends it.Modal{constructor(e,n,r){super(e);this.app=e;this.canBeExclusive=n;this.saved=!1;this.editing=!1;this.condition={interval:null,exclusive:!1,ignore:!1};r&&(this.condition={...r},this.editing=!0)}onOpen(){this.contentEl.empty(),this.contentEl.createEl("h3",{text:"Leap Day Condition"}),new it.Setting(this.contentEl).setName("Interval").setDesc("How often the condition applies.").addText(e=>{e.inputEl.setAttr("type","number"),e.setValue(`${this.condition.interval}`).onChange(n=>{isNaN(Number(n))||(this.condition.interval=Number(n))})}),new it.Setting(this.contentEl).setName("Exclusive").setDesc(`If true, the leap day will not apply when the year meets the condition.

Requires the leap day to have at least one non-exclusive condition.`).addToggle(e=>e.setDisabled(!this.canBeExclusive).setValue(this.condition.exclusive).onChange(n=>this.condition.exclusive=n)),new it.Setting(this.contentEl).setName("Ignore Offset").setDesc("The condition will ignore the leap day's offset when checking to apply.").addToggle(e=>e.setValue(this.condition.ignore).onChange(n=>this.condition.ignore=n)),this.buttonsEl=this.contentEl.createDiv("fantasy-context-buttons"),new it.ButtonComponent(this.buttonsEl).setCta().setButtonText(this.editing?"Save":"Create").onClick(()=>{if(!this.condition.interval){new it.Notice("The condition requires an interval.");return}this.saved=!0,this.close()}),new it.ExtraButtonComponent(this.buttonsEl).setTooltip("Cancel").setIcon("cross").onClick(()=>this.close())}};function id(t,e,n){let r=t.slice();return r[11]=e[n],r}function O0(t){let e,n,r=t[0],a=[];for(let o=0;o<r.length;o+=1)a[o]=od(id(t,r,o));let i=o=>V(a[o],1,1,()=>{a[o]=null});return{c(){e=N("div");for(let o=0;o<a.length;o+=1)a[o].c();b(e,"class","existing-items")},m(o,l){U(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&13){r=o[0];let s;for(s=0;s<r.length;s+=1){let d=id(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=od(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(xe(),s=r.length;s<a.length;s+=1)i(s);Fe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)V(a[l]);n=!1},d(o){o&&W(e),Ye(a,o)}}}function q0(t){let e,n;return e=new Rt({props:{message:"Create a new leap day to see it here."}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p:K,i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function od(t){let e,n;function r(){return t[7](t[11])}function a(){return t[8](t[11])}return e=new ad({props:{leapday:t[11]}}),e.$on("edit",r),e.$on("delete",a),{c(){re(e.$$.fragment)},m(i,o){te(e,i,o),n=!0},p(i,o){t=i;let l={};o&1&&(l.leapday=t[11]),e.$set(l)},i(i){n||(j(e.$$.fragment,i),n=!0)},o(i){V(e.$$.fragment,i),n=!1},d(i){ee(e,i)}}}function R0(t){let e,n,r,a,i,o;e=new qt({props:{disabled:t[1],label:t[1]?"At least one named month is required":null}}),e.$on("click",t[6]);let l=[q0,O0],s=[];function d(u,c){return u[0].length?1:0}return r=d(t,-1),a=s[r]=l[r](t),{c(){re(e.$$.fragment),n=G(),a.c(),i=Je()},m(u,c){te(e,u,c),U(u,n,c),s[r].m(u,c),U(u,i,c),o=!0},p(u,[c]){let m={};c&2&&(m.disabled=u[1]),c&2&&(m.label=u[1]?"At least one named month is required":null),e.$set(m);let g=r;r=d(u,c),r===g?s[r].p(u,c):(xe(),V(s[g],1,1,()=>{s[g]=null}),Fe(),a=s[r],a?a.p(u,c):(a=s[r]=l[r](u),a.c()),j(a,1),a.m(i.parentNode,i))},i(u){o||(j(e.$$.fragment,u),j(a),o=!0)},o(u){V(e.$$.fragment,u),V(a),o=!1},d(u){ee(e,u),u&&W(n),s[r].d(u),u&&W(i)}}}function L0(t,e,n){let{calendar:r}=e,{plugin:a}=e;Ze("store").subscribe(p=>n(4,r=p));let o=r.static.leapDays,l=r.static.months?.filter(p=>p.name?.length).length==0,s=Se(),d=p=>{n(0,o=o.filter(E=>E.id!==p.id)),s("edit-leapdays",o)},u=p=>{let E=new Uo(a.app,r,p);E.onClose=()=>{if(!!E.saved){if(E.editing){let y=r.static.leapDays.findIndex(S=>S.id===E.leapday.id);r.static.leapDays.splice(y,1,{...E.leapday})}else r.static.leapDays.push({...E.leapday});n(0,o=r.static.leapDays)}},E.open()},c=()=>u(),m=p=>u(p),g=p=>d(p);return t.$$set=p=>{"calendar"in p&&n(4,r=p.calendar),"plugin"in p&&n(5,a=p.plugin)},t.$$.update=()=>{if(t.$$.dirty&16){e:n(1,l=r.static.months?.filter(p=>p.name?.length).length==0)}},[o,l,d,u,r,a,c,m,g]}var sd=class extends le{constructor(e){super();ce(this,e,L0,R0,oe,{calendar:4,plugin:5})}},ld=sd;function P0(t){he(t,"svelte-jxs4t3",".fantasy-calendar-creator.svelte-jxs4t3,.fantasy-calendar-creator-inner.svelte-jxs4t3,.fantasy-creator-app.svelte-jxs4t3{height:100%;background-color:inherit}.fantasy-creator-app.svelte-jxs4t3{overflow:auto}.fantasy-calendar-creator-header.svelte-jxs4t3{margin:0}.top-nav.svelte-jxs4t3{position:sticky;top:0px;padding:10px 0px;background-color:inherit;z-index:1}.icons.svelte-jxs4t3{display:flex;justify-content:space-between}.back.svelte-jxs4t3{width:min-content}.back.svelte-jxs4t3 .clickable-icon{margin-left:0}")}function cd(t){let e,n,r,a,i,o,l,s,d,u,c,m,g,p,E,y,S,C,F,M,T,x,_,k,D,R,q,H,ne,ye,ae,me,Z,z,ue,ke,Ce;return S=new sn({props:{name:"Basic Info",$$slots:{default:[j0]},$$scope:{ctx:t}}}),F=new sn({props:{name:"Weekdays",$$slots:{default:[V0]},$$scope:{ctx:t}}}),T=new sn({props:{name:"Months",$$slots:{default:[H0]},$$scope:{ctx:t}}}),_=new sn({props:{name:"Years",$$slots:{default:[W0]},$$scope:{ctx:t}}}),D=new sn({props:{name:"Current Date",$$slots:{default:[G0]},$$scope:{ctx:t}}}),q=new sn({props:{name:"Events",$$slots:{default:[U0]},$$scope:{ctx:t}}}),ne=new sn({props:{name:"Categories",$$slots:{default:[z0]},$$scope:{ctx:t}}}),ae=new sn({props:{name:"Moons",$$slots:{default:[Y0]},$$scope:{ctx:t}}}),Z=new sn({props:{name:"Leap Days",$$slots:{default:[Z0]},$$scope:{ctx:t}}}),{c(){e=N("div"),n=N("div"),r=N("div"),a=N("div"),o=G(),l=N("div"),d=G(),u=N("h3"),c=be("Calendar Creator"),m=G(),g=N("div"),p=N("div"),y=G(),re(S.$$.fragment),C=G(),re(F.$$.fragment),M=G(),re(T.$$.fragment),x=G(),re(_.$$.fragment),k=G(),re(D.$$.fragment),R=G(),re(q.$$.fragment),H=G(),re(ne.$$.fragment),ye=G(),re(ae.$$.fragment),me=G(),re(Z.$$.fragment),b(a,"class","back svelte-jxs4t3"),b(l,"class","cancel"),b(r,"class","icons svelte-jxs4t3"),b(u,"class","fantasy-calendar-creator-header svelte-jxs4t3"),Ke(u,"font-size","calc(var(--h1) - "+(t[2]??0)+"px)"),b(n,"class","top-nav svelte-jxs4t3"),b(g,"class","fantasy-creator-app svelte-jxs4t3"),b(e,"class","inherit fantasy-calendar-creator-inner svelte-jxs4t3")},m(ve,Ee){U(ve,e,Ee),w(e,n),w(n,r),w(r,a),w(r,o),w(r,l),w(n,d),w(n,u),w(u,c),w(e,m),w(e,g),w(g,p),w(g,y),te(S,g,null),w(g,C),te(F,g,null),w(g,M),te(T,g,null),w(g,x),te(_,g,null),w(g,k),te(D,g,null),w(g,R),te(q,g,null),w(g,H),te(ne,g,null),w(g,ye),te(ae,g,null),w(g,me),te(Z,g,null),ue=!0,ke||(Ce=[fe(i=t[8].call(null,a)),J(a,"click",t[12]),fe(s=t[9].call(null,l)),J(l,"click",t[13]),fe(E=t[10].call(null,p)),J(g,"scroll",t[14]),J(e,"introend",t[15]),J(e,"outroend",t[16])],ke=!0)},p(ve,Ee){t=ve,(!ue||Ee&4)&&Ke(u,"font-size","calc(var(--h1) - "+(t[2]??0)+"px)");let et={};Ee&2097153&&(et.$$scope={dirty:Ee,ctx:t}),S.$set(et);let Pe={};Ee&2097153&&(Pe.$$scope={dirty:Ee,ctx:t}),F.$set(Pe);let ht={};Ee&2097152&&(ht.$$scope={dirty:Ee,ctx:t}),T.$set(ht);let Bt={};Ee&2097155&&(Bt.$$scope={dirty:Ee,ctx:t}),_.$set(Bt);let pt={};Ee&2097152&&(pt.$$scope={dirty:Ee,ctx:t}),D.$set(pt);let Ct={};Ee&2097155&&(Ct.$$scope={dirty:Ee,ctx:t}),q.$set(Ct);let xt={};Ee&2097153&&(xt.$$scope={dirty:Ee,ctx:t}),ne.$set(xt);let Lt={};Ee&2097155&&(Lt.$$scope={dirty:Ee,ctx:t}),ae.$set(Lt);let Pt={};Ee&2097155&&(Pt.$$scope={dirty:Ee,ctx:t}),Z.$set(Pt)},i(ve){ue||(j(S.$$.fragment,ve),j(F.$$.fragment,ve),j(T.$$.fragment,ve),j(_.$$.fragment,ve),j(D.$$.fragment,ve),j(q.$$.fragment,ve),j(ne.$$.fragment,ve),j(ae.$$.fragment,ve),j(Z.$$.fragment,ve),Gt(()=>{z||(z=ro(e,io,{x:t[4]},!0)),z.run(1)}),ue=!0)},o(ve){V(S.$$.fragment,ve),V(F.$$.fragment,ve),V(T.$$.fragment,ve),V(_.$$.fragment,ve),V(D.$$.fragment,ve),V(q.$$.fragment,ve),V(ne.$$.fragment,ve),V(ae.$$.fragment,ve),V(Z.$$.fragment,ve),z||(z=ro(e,io,{x:t[4]},!1)),z.run(0),ue=!1},d(ve){ve&&W(e),ee(S),ee(F),ee(T),ee(_),ee(D),ee(q),ee(ne),ee(ae),ee(Z),ve&&z&&z.end(),ke=!1,we(Ce)}}}function j0(t){let e,n;return e=new cu({props:{calendar:t[0]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&1&&(i.calendar=r[0]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function V0(t){let e,n;return e=new ec({props:{calendar:t[0]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&1&&(i.calendar=r[0]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function H0(t){let e,n;return e=new sc({}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function W0(t){let e,n;return e=new hc({props:{calendar:t[0],app:t[1].app}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&1&&(i.calendar=r[0]),a&2&&(i.app=r[1].app),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function G0(t){let e,n;return e=new nu({}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function U0(t){let e,n;return e=new Wc({props:{plugin:t[1],calendar:t[0]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&2&&(i.plugin=r[1]),a&1&&(i.calendar=r[0]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function z0(t){let e,n;return e=new Qc({props:{calendar:t[0]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&1&&(i.calendar=r[0]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Y0(t){let e,n;return e=new nd({props:{plugin:t[1],calendar:t[0]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&2&&(i.plugin=r[1]),a&1&&(i.calendar=r[0]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Z0(t){let e,n;return e=new ld({props:{calendar:t[0],plugin:t[1]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&1&&(i.calendar=r[0]),a&2&&(i.plugin=r[1]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function $0(t){let e,n,r=t[3]&&cd(t);return{c(){e=N("div"),r&&r.c(),b(e,"class","fantasy-calendar-creator svelte-jxs4t3")},m(a,i){U(a,e,i),r&&r.m(e,null),t[17](e),n=!0},p(a,[i]){a[3]?r?(r.p(a,i),i&8&&j(r,1)):(r=cd(a),r.c(),j(r,1),r.m(e,null)):r&&(xe(),V(r,1,1,()=>{r=null}),Fe())},i(a){n||(j(r),n=!0)},o(a){V(r),n=!1},d(a){a&&W(e),r&&r.d(),t[17](null)}}}function K0(t,e,n){let r=!1,a,i;Nn(()=>{n(4,a=i.clientWidth),n(3,r=!0)});let o=Se(),{calendar:l}=e,{plugin:s}=e,d=lr(l);d.subscribe(k=>{n(0,l=k)}),Mn("store",d);let u=k=>{new Yn.ExtraButtonComponent(k).setIcon("left-arrow-with-tail").setTooltip("Save and exit")},c=k=>{new Yn.ExtraButtonComponent(k).setIcon("cross").setTooltip("Exit without saving")},m=k=>{let D=k.createDiv("fantasy-calendar-apply-preset");new Yn.Setting(D).setName("Apply Preset").setDesc("Apply a common fantasy calendar as a preset.").addButton(R=>{R.setCta().setButtonText("Choose Preset").onClick(()=>{let q=new ao(s.app);q.onClose=()=>{if(!!q.saved){if(n(0,l={...(0,ud.default)(q.preset),id:l.id}),l?.name=="Gregorian Calendar"){let H=new Date;n(0,l.current={year:H.getFullYear(),month:H.getMonth(),day:H.getDate()},l)}d.set(l)}},q.open()})})},g,p=!1,E=!1,y=()=>{let k=[];if(l.name?.length||k.push("A calendar must have a name."),!l.static.weekdays?.length)k.push("A calendar must have at least 1 weekday.");else{if(!l.static.weekdays?.every(D=>D.name?.length)){let D=l.static.weekdays?.filter(R=>!R.name?.length).length;D==1?k.push(`${D} weekday does not have a name.`):k.push(`${D} weekdays do not have names.`)}l.static.firstWeekDay>=(l.static.weekdays?.length??1/0)&&k.push(`Invalid first weekday selection: ${l.static.weekdays[l.static.firstWeekDay]}`)}if(!l.static.months?.length)k.push("A calendar must have at least 1 month.");else{if(!l.static.months?.every(D=>D.name?.length)){let D=l.static.months?.filter(R=>!R.name?.length).length;D==1?k.push(`${D} month does not have a name.`):k.push(`${D} months do not have names.`)}if(!l.static.months?.every(D=>D.length>0)){let D=l.static.months?.filter(R=>!(R.length>0)).length;D==1?k.push(`${D} month does not have a length.`):k.push(`${D} months do not have lengths.`)}}if(l.static.useCustomYears){if(!l.static.years?.length)k.push("Use Custom Years is on but no years have been created.");else if(!l.static.years.every(D=>D.name?.length)){let D=l.static.years.filter(R=>!R.name?.length).length;D==1?k.push(`${D} year does not have a name.`):k.push(`${D} years do not have names.`)}}return k.join(`
`)},S=()=>{if(!E){new Yn.Notice(y());return}n(6,p=!0),n(3,r=!1)},C=()=>{S()},F=()=>n(3,r=!1),M=k=>n(2,g++,g),T=()=>o("flown"),x=()=>o("exit",p);function _(k){Dn[k?"unshift":"push"](()=>{i=k,n(5,i)})}return t.$$set=k=>{"calendar"in k&&n(0,l=k.calendar),"plugin"in k&&n(1,s=k.plugin)},t.$$.update=()=>{if(t.$$.dirty&1){e:window.calendar=l}if(t.$$.dirty&1){e:l.static.months?.length&&l.static.months?.every(k=>k.name?.length)&&l.static.months?.every(k=>k.length>0)&&l.static.weekdays?.length&&l.static.weekdays?.every(k=>k.name?.length)&&l.name?.length&&l.static.firstWeekDay<(l.static.weekdays?.length??1/0)&&(!l.static.useCustomYears||l.static.useCustomYears&&l.static.years?.length&&l.static.years.every(k=>k.name?.length))&&(E=!0)}},[l,s,g,r,a,i,p,o,u,c,m,S,C,F,M,T,x,_]}var dd=class extends le{constructor(e){super();ce(this,e,K0,$0,oe,{calendar:0,plugin:1},P0)}},fd=dd;var hd=Oe(require("obsidian"));var si=class extends ta{constructor(e,n,r){super(e,n.inputEl,r);this.folders=[...r],this.text=n,this.inputEl.addEventListener("input",()=>this.getFolder())}getFolder(){let e=this.inputEl.value,n=this.app.vault.getAbstractFileByPath(e);n!=this.folder&&n instanceof hd.TFolder&&(this.folder=n,this.onInputChanged())}getItemText(e){return e.path}onChooseItem(e){this.text.setValue(e.path),this.folder=e}selectSuggestion({item:e}){let n=e.path;this.text.setValue(n),this.onClose(),this.close()}renderSuggestion(e,n){let{item:r,match:a}=e||{},i=n.createDiv({cls:"suggestion-content"});if(!r){i.setText(this.emptyStateText),i.parentElement.addClass("is-selected");return}let o=r.path.length-r.name.length,l=a.matches.map(s=>createSpan("suggestion-highlight"));for(let s=o;s<r.path.length;s++){let d=a.matches.find(u=>u[0]===s);if(d){let u=l[a.matches.indexOf(d)];i.appendChild(u),u.appendText(r.path.substring(d[0],d[1])),s+=d[1]-d[0]-1;continue}i.appendText(r.path[s])}n.createDiv({cls:"suggestion-note",text:r.path})}getItems(){return this.folders}};var md;(function(r){r.none="None",r.monthly="Monthly",r.yearly="Yearly"})(md||(md={}));(0,Ve.addIcon)("fantasy-calendar-grip",'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="grip-lines" class="svg-inline--fa fa-grip-lines fa-w-16" role="img" viewBox="0 0 512 512"><path fill="currentColor" d="M496 288H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-128H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z"/></svg>');(0,Ve.addIcon)("fantasy-calendar-warning",'<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="exclamation-triangle" class="svg-inline--fa fa-exclamation-triangle fa-w-18" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"></path></svg>');var li=class extends Ve.PluginSettingTab{constructor(e){super(e.app,e);this.plugin=e}get data(){return this.plugin.data}async display(){this.containerEl.empty(),console.log("display"),this.containerEl.createEl("h2",{text:"Fantasy Calendars"}),this.containerEl.addClass("fantasy-calendar-settings"),this.buildInfo(this.containerEl.createDiv("fantasy-calendar-nested-settings")),this.buildCalendars(this.containerEl.createEl("details",{cls:"fantasy-calendar-nested-settings",attr:{...this.data.settingsToggleState.calendars?{open:"open"}:{}}})),this.buildEvents(this.containerEl.createEl("details",{cls:"fantasy-calendar-nested-settings",attr:{...this.data.settingsToggleState.events?{open:"open"}:{}}}))}buildInfo(e){e.empty(),new Ve.Setting(e).setName(createFragment(n=>{let r=n.createSpan("fantasy-calendar-warning");(0,Ve.setIcon)(r.createSpan("fantasy-calendar-warning"),"fantasy-calendar-warning"),r.createSpan({text:"Default Config Directory"})})).setDesc(createFragment(n=>{n.createSpan({text:"Please back up your data before changing this setting. Hidden directories must be manually entered."}),n.createEl("br"),n.createSpan({text:"Current directory: "});let r=this.data.configDirectory??this.app.vault.configDir;n.createEl("code",{text:r})})).addText(async n=>{let r=this.app.vault.getAllLoadedFiles().filter(i=>i instanceof Ve.TFolder);n.setPlaceholder(this.data.configDirectory??this.app.vault.configDir);let a=new si(this.app,n,[...r]);a.onClose=async()=>{n.inputEl.value?await this.app.vault.adapter.exists(n.inputEl.value)||(this.data.configDirectory=n.inputEl.value,await this.plugin.saveSettings()):this.data.configDirectory=null},n.inputEl.onblur=async()=>{if(!n.inputEl.value)return;let i=await this.app.vault.adapter.exists(n.inputEl.value);this.data.configDirectory=n.inputEl.value,await this.plugin.saveSettings(),this.display()}}).addExtraButton(n=>{n.setTooltip("Reset to Default").setIcon("reset").onClick(async()=>{this.data.configDirectory=null,await this.plugin.saveSettings(),this.display()})})}buildCalendars(e){e.empty(),e.ontoggle=()=>{this.data.settingsToggleState.calendars=e.open};let n=e.createEl("summary");new Ve.Setting(n).setHeading().setName("Calendar Management"),n.createDiv("collapser").createDiv("handle"),new Ve.Setting(e).setName("Default Calendar").setDesc("Views will open to this calendar by default.").addDropdown(a=>{a.addOption("none","None");for(let i of this.data.calendars)a.addOption(i.id,i.name);a.setValue(this.plugin.data.defaultCalendar),a.onChange(i=>{if(i==="none"){this.plugin.data.defaultCalendar=null,this.plugin.saveSettings();return}this.plugin.data.defaultCalendar=i,this.plugin.saveSettings()})}),new Ve.Setting(e).setName("Import Calendar").setDesc(createFragment(a=>{a.createSpan({text:"Import calendar from "}),a.createEl("a",{href:"https://app.fantasy-calendar.com",text:"Fantasy Calendar",cls:"external-link"})})).addButton(a=>{let i=createEl("input",{attr:{type:"file",name:"merge",accept:".json",multiple:!0,style:"display: none;"}});i.onchange=async()=>{let{files:o}=i;if(!!o.length){try{let l=[];for(let d of Array.from(o))l.push(JSON.parse(await d.text()));let s=ka.import(l);this.plugin.data.calendars.push(...s),await this.plugin.saveCalendar(),this.showCalendars(r)}catch(l){new Ve.Notice(`There was an error while importing the calendar${o.length==1?"":"s"}.`),console.error(l)}i.value=null}},a.setButtonText("Choose Files"),a.buttonEl.addClass("calendar-file-upload"),a.buttonEl.appendChild(i),a.onClick(()=>i.click())}),new Ve.Setting(e).setName("Create New Calendar").addButton(a=>a.setTooltip("Launch Calendar Creator").setIcon("plus-with-circle").onClick(async()=>{this.launchCalendarCreator()}));let r=e.createDiv("existing-calendars");this.showCalendars(r)}showCalendars(e){if(e.empty(),!this.data.calendars.length){e.createSpan({text:"No calendars created! Create a calendar to see it here."});return}for(let n of this.data.calendars)new Ve.Setting(e).setName(n.name).setDesc(n.description??"").addExtraButton(r=>{r.setIcon("pencil").onClick(()=>{this.launchCalendarCreator(n)})}).addExtraButton(r=>{r.setIcon("trash").onClick(async()=>{!await vr(this.app,"Are you sure you want to delete this calendar?",{cta:"Delete",secondary:"Cancel"})||(this.plugin.data.calendars=this.plugin.data.calendars.filter(a=>a.id!=n.id),await this.plugin.saveCalendar(),n.name==this.plugin.data.defaultCalendar?this.display():this.showCalendars(e))})})}buildEvents(e){e.empty(),e.ontoggle=()=>{this.data.settingsToggleState.events=e.open};let n=e.createEl("summary");new Ve.Setting(n).setHeading().setName("Events"),n.createDiv("collapser").createDiv("handle"),new Ve.Setting(e).setName("Display Event Previews").setDesc("Use the core Note Preview plugin to display event notes when hovered.").addToggle(r=>{r.setValue(this.data.eventPreview).onChange(a=>{this.data.eventPreview=a,this.plugin.saveSettings()})}),new Ve.Setting(e).setName("Automatically Parse for Events").setDesc("The plugin will automatically parse files in the vault for events.").addToggle(r=>{r.setValue(this.data.autoParse).onChange(a=>{this.data.autoParse=a,this.plugin.saveSettings()})}),new Ve.Setting(e).setName("Events Folder").setDesc("The plugin will only watch for changes in this folder.").addText(r=>{let a=this.app.vault.getAllLoadedFiles().filter(o=>o instanceof Ve.TFolder);r.setPlaceholder(this.plugin.data.path??"/");let i=new si(this.app,r,[...a]);i.onClose=async()=>{let o=r.inputEl.value?.trim()?r.inputEl.value.trim():"/";this.plugin.data.path=(0,Ve.normalizePath)(o)},r.inputEl.onblur=async()=>{let o=r.inputEl.value?.trim()?r.inputEl.value.trim():"/";this.plugin.data.path=(0,Ve.normalizePath)(o)}}),new Ve.Setting(e).setName("Parse Note Titles for Event Dates").setDesc("The plugin will parse note titles for event dates.").addToggle(r=>{r.setValue(this.data.parseDates).onChange(a=>{this.data.parseDates=a,this.plugin.saveSettings()})}),new Ve.Setting(e).setName("Date Format").setClass(this.data.dailyNotes?"daily-notes":"no-daily-notes").setDesc(createFragment(r=>{if(r.createSpan({text:"Event dates will be parsed using this format."}),r.createSpan({text:"Only the "}),r.createEl("code",{text:"Y"}),r.createSpan({text:", "}),r.createEl("code",{text:"M"}),r.createSpan({text:", and "}),r.createEl("code",{text:"D"}),r.createEl("a",{text:"tokens",href:"https://momentjs.com/docs/#/displaying/format/",cls:"external-link"}),r.createSpan({text:" are supported."}),["Y","M","D"].some(a=>!this.data.dateFormat.includes(a))){r.createEl("br");let a=r.createSpan({cls:"fantasy-calendar-warning date-format"});(0,Ve.setIcon)(a.createSpan("fantasy-calendar-warning"),"fantasy-calendar-warning");let i=["Y","M","D"].filter(o=>!this.data.dateFormat.includes(o));a.createSpan({text:` Date format is missing: ${i.join(", ").replace(/, ([^,]*)$/," and $1")}`})}})).addText(r=>{r.setDisabled(this.data.dailyNotes).setValue(this.plugin.format).onChange(a=>{this.data.dateFormat=a,this.plugin.saveSettings()}),r.inputEl.onblur=()=>this.buildEvents(e)}).addExtraButton(r=>{if(!this.plugin.canUseDailyNotes){r.extraSettingsEl.detach();return}this.data.dailyNotes?r.setIcon("checkmark").setTooltip("Unlink from Daily Notes").onClick(()=>{this.data.dailyNotes=!1,this.buildEvents(e)}):r.setIcon("sync").setTooltip("Link with Daily Notes").onClick(()=>{this.data.dailyNotes=!0,this.buildEvents(e)})}),new Ve.Setting(e).setName("Support Timelines Events").setDesc(createFragment(r=>{r.createSpan({text:"Support <span> elements used by the "}),r.createEl("a",{text:"Obsidian Timelines",href:"obsidian://show-plugin?id=obsidian-timelines"}),r.createSpan({text:" plugin (by Darakah)."})})).addToggle(r=>{r.setValue(this.data.supportTimelines).onChange(a=>{this.data.supportTimelines=a,this.plugin.saveSettings()})}),new Ve.Setting(e).setName("Default tag marking pages containing Timelines data").setDesc("Tag to specify which notes to include in created timelines e.g. timeline to use the #timeline tag").addText(r=>r.setPlaceholder(this.data.timelineTag).setValue(this.data.timelineTag.replace("#","")).setDisabled(this.plugin.syncTimelines).onChange(a=>{this.data.timelineTag=a.startsWith("#")?a:`#${a}`,this.plugin.saveSettings()})).addExtraButton(r=>{if(!this.plugin.canUseTimelines){this.data.syncTimelines=!1,r.extraSettingsEl.detach();return}this.data.syncTimelines?r.setIcon("checkmark").setTooltip("Unsync from Timelines Plugin").onClick(async()=>{this.data.syncTimelines=!1,await this.plugin.saveSettings(),this.buildEvents(e)}):r.setIcon("sync").setTooltip("Sync with Timelines Plugin").onClick(async()=>{this.data.syncTimelines=!0,this.data.timelineTag=this.plugin.app.plugins.getPlugin("obsidian-timelines").settings.timelineTag,await this.plugin.saveSettings(),this.buildEvents(e)})})}launchCalendarCreator(e=Yo){this.containerEl.empty(),this.containerEl.addClass("fantasy-calendar-creator-open");let n=(0,pd.default)(e);new fd({target:this.containerEl,props:{calendar:n,plugin:this.plugin}}).$on("exit",a=>{this.containerEl.removeClass("fantasy-calendar-creator-open"),this.display(),console.log(a.detail)})}};var Ne=Oe(require("obsidian"));var ia=Oe(require("obsidian"));var Zo=class{constructor(e,n,r,a){this.data=e;this.number=n;this.year=r;this.calendar=a;this.days=[];this.leapDays=[];this.shouldUpdateEvents=!1;this.shouldUpdateMoons=!1;this.leapDays=this.calendar.leapDaysForMonth(this.number,r),this.daysBefore=this.calendar.daysBeforeMonth(this.number,this.year),this.days=[...new Array(e.length+this.leapDays.length).keys()].map(i=>new gd(this,i+1))}get id(){return this.data.id}get index(){return this.calendar.data.months.indexOf(this.data)}get name(){return this.data.name}get length(){return this.days.length}get firstWeekday(){return this.calendar.data.overflow?this.days[0].weekday:0}get lastWeekday(){return this.days[this.days.length-1].weekday}get type(){return this.data.type}getEventsOnDay(e){return(!this.events||!this.events.length||this.shouldUpdateEvents)&&(this.events=this.calendar.eventsForMonth(this)),this.events.filter(n=>{if(n.date.day==e.day)return!0;if(!n.end)return!1;let r={...n.date},a={...n.end};r.year||(r.year=a.year=this.year),r.month||(r.month=a.month=this.number);let i=Number(this.calendar.hash(e));if(Number(this.calendar.hash(r))<=i&&i<=Number(this.calendar.hash(a)))return!0})}getMoonsForDay(e){return(!this.moons||!this.moons.length||this.shouldUpdateMoons)&&(this.moons=this.calendar.getMoonsForMonth(this)),this.moons[e.day-1]}},gd=class{constructor(e,n){this.month=e;this.number=n}get calendar(){return this.month.calendar}get date(){return{day:this.number,month:this.month.number,year:this.year}}get events(){return(!this._events||!this._events.length||this.month.shouldUpdateEvents)&&(this._events=this.month.getEventsOnDay(this.date)),this._events}get longDate(){return{day:this.number,month:this.month.name,year:this.year}}get daysBefore(){return this.month.daysBefore+this.number-1}get year(){return this.month.year}get weekday(){let e=this.calendar.firstDayOfYear(this.year);return Bn(this.daysBefore%this.calendar.weekdays.length+e,this.calendar.weekdays.length)}get isCurrentDay(){return this.number==this.calendar.current.day&&this.month.number==this.calendar.current.month&&this.month.year==this.calendar.current.year}get isDisplaying(){return this.number==this.calendar.viewing.day&&this.calendar.displayed.year==this.calendar.viewing.year&&this.calendar.displayed.month==this.calendar.viewing.month}get moons(){return(!this._moons||!this._moons.length)&&(this._moons=this.month.getMoonsForDay(this.date)),this._moons}},Cr=class extends ia.Events{constructor(e,n){super();this.calendar=e;this.plugin=n;this._cache=new Map;this.displayed={year:null,month:null,day:null};this.viewing={year:null,month:null,day:null};this.displayed={...this.current},this.update(this.calendar),this.plugin.registerEvent(this.plugin.app.workspace.on("fantasy-calendars-event-update",r=>{if(!r.has(this.calendar.id))return;let a=r.get(this.calendar.id);for(let[i,o]of a)if(!!this._cache.has(i))for(let l of o)!this._cache.get(i).has(l)||(this._cache.get(i).get(l).shouldUpdateEvents=!0,(i==this.displayed.year&&l==this.displayed.month||i==this.viewing.year&&l==this.viewing.month)&&this.trigger("month-update"))}))}getDayForDate(e){return this.getMonth(e.month,e.year).days[e.day-1]}eventsForMonth(e){let{year:n,number:r}=e;return this.calendar.events.filter(i=>{let o={...i.date},l={...i.end};return o.month==null||(o.year==n||o.year==null)&&o.month==r?!0:o.year>n||o.year==n&&o.month>r||!l&&(o.month!=r||o.year<n)?!1:(o.year==null&&(l.year=o.year=n),(o.year<=n||o.month<=r)&&l.year>=n&&l.month>=r)})}getNameForYear(e){if(!this.data.useCustomYears)return`${e}`;if(this.data.useCustomYears&&e-1>=0&&e<=this.data.years?.length)return this.data.years[e-1].name}get displayWeeks(){return this.calendar.displayWeeks}getMonthsForYear(e){return this._cache.has(e)||this._cache.set(e,new Map(this.data.months.map((n,r)=>[r,new Zo(n,r,e,this)]))),Array.from(this._cache.get(e).values())}hash(e){if(e.year==null||e.month==null||e.day==null)return null;let n=`${this.data.months.length}`.length,r=`${e.month}`.padStart(n,"0"),a=`${this.maxDays}`.length,i=`${e.day}`.padStart(a,"0");return`${e.year}${r}${i}`}update(e){this.calendar=e??this.calendar,this.maxDays=Math.max(...this.data.months.map(n=>n.length)),this.trigger("month-update"),this.trigger("day-update")}get categories(){return this.calendar.categories}get data(){return this.calendar.static}get current(){return this.calendar.current}get leapdays(){return this.data.leapDays}get currentDate(){return un(this.current,this.data.months)}get displayedDate(){return un(this.displayed,this.data.months)}get viewedDate(){return un(this.viewing,this.data.months)}reset(){this.displayed={...this.current},this.viewing={...this.current},this.trigger("month-update"),this.trigger("day-update")}setCurrentMonth(e){this.displayed.month=e,this.trigger("month-update")}goToNextDay(){this.viewing.day+=1;let e=this.getMonth(this.displayed.month,this.displayed.year);this.viewing.day>e.days.length&&(this.goToNext(),this.viewing.month=this.displayed.month,this.viewing.year=this.displayed.year,this.viewing.day=1),this.trigger("day-update")}goToNextCurrentDay(){this.current.day+=1;let e=this.getMonth(this.current.month,this.current.year);this.current.day>=e.days.length&&(this.current.day=1,this.current.month+=1,this.current.month>=this.data.months.length&&(this.current.month=0,this.current.year+=1)),this.trigger("day-update")}get nextMonthIndex(){return Bn(this.displayed.month+1,this.data.months.length)}get nextMonth(){return this.getMonth(this.displayed.month+1,this.displayed.year)}canGoToNextYear(e=this.displayed.year){return!this.data.useCustomYears||e<this.data.years.length}goToNext(){if(this.nextMonthIndex<this.displayed.month){if(!this.canGoToNextYear()){new ia.Notice("This is the last year. Additional years can be created in settings.");return}this.goToNextYear()}this.setCurrentMonth(this.nextMonthIndex)}goToNextYear(){this.displayed.year+=1,this.trigger("year-update")}get prevMonthIndex(){return Bn(this.displayed.month-1,this.data.months.length)}get previousMonth(){return this.getMonth(this.displayed.month-1,this.displayed.year)}goToPrevious(){if(this.prevMonthIndex>this.displayed.month){if(this.displayed.year==1){new ia.Notice("This is the earliest year.");return}this.goToPreviousYear()}this.setCurrentMonth(this.prevMonthIndex)}goToPreviousDay(){this.viewing.day-=1,this.viewing.day<1&&(this.goToPrevious(),this.viewing.month=this.displayed.month,this.viewing.year=this.displayed.year,this.viewing.day=this.currentMonth.days.length),this.trigger("day-update")}goToPreviousYear(){this.displayed.year-=1,this.trigger("year-update")}get weekdays(){return this.data.weekdays}get currentMonth(){return this.getMonth(this.displayed.month,this.displayed.year)}testLeapDay(e,n){return e.interval.sort((r,a)=>r.interval-a.interval).some(({interval:r,exclusive:a},i,o)=>{if(a&&i==0)return(n-e.offset)%r!=0;if(!a)return o[i+1]&&o[i+1].exclusive?(n-e.offset)%r==0&&(n-e.offset)%o[i+1].interval!=0:(n-e.offset)%r==0})}leapDaysForYear(e){return this.leapdays.filter(n=>this.testLeapDay(n,e))}leapDaysForMonth(e,n=this.displayed.year){return this.leapdays.filter(r=>r.timespan!=e?!1:this.testLeapDay(r,n))}getMonth(e,n,r=0){let a=this.data.months,i=Bn(e,a.length);if(e<0&&(n-=1),n==0)return null;if(e>=a.length&&(n+=1),this._cache.has(n)){if(this._cache.get(n).has(i))return this._cache.get(n).get(i)}else this._cache.set(n,new Map);if(a[i].type=="intercalary"&&r!=0)return this.getMonth(e+r,n,r);let o=new Zo(a[i],i,n,this);return this._cache.set(n,this._cache.get(n).set(i,o)),o}getPaddedDaysForMonth(e){let n=e.days,r=[],a=this.getMonth(e.index-1,this.displayed.year,-1);e.firstWeekday>0&&e.type=="month"&&(r=a!=null?a.days.slice(-e.firstWeekday):Array(e.firstWeekday).fill(null));let i=[],o=this.getMonth(e.index+1,this.displayed.year,1);return e.lastWeekday<this.weekdays.length-1&&e.type=="month"&&(i=o.days.slice(0,this.weekdays.length-e.lastWeekday-1)),{previous:r,current:n,next:i}}get weeksPerCurrentMonth(){return Math.ceil(this.getMonth(this.displayed.month,this.displayed.year).length/this.data.weekdays.length)}weeksOfMonth(e){return Math.ceil((e.length+e.firstWeekday)/this.data.weekdays.length)}weekNumbersOfMonth(e){let n=e.daysBefore+this.firstDayOfYear(e.year);return Math.floor(n/this.data.weekdays.length)}get daysPerYear(){return this.data.months.filter(e=>e.type==="month").reduce((e,n)=>e+n.length,0)}daysBeforeMonth(e,n,r=!1){return!e||e==0?0:this.data.months.slice(0,e).filter(a=>r?!0:a.type=="month").map((a,i)=>a.length+this.leapDaysForMonth(i,n).length).reduce((a,i)=>a+i,0)}areDatesEqual(e,n){return!(e.day!=n.day||e.month!=n.month&&e.month!=null&&n.month!=null||e.year!=n.year&&e.year!=null&&n.year!=null)}dayNumberForDate(e){return this.daysBeforeMonth(e.month,e.year,!0)+e.day}get firstWeekday(){return this.data.firstWeekDay}get leapDaysBefore(){return this.displayed.year==1?0:this.leapDaysBeforeYear(this.displayed.year-1)}leapDaysBeforeYear(e){if(e==1)return 0;let n=e-1,r=0;for(let{interval:a,offset:i}of this.leapdays){let o=0;for(let l=0;l<a.length;l++){let s=a[l],d=a.slice(l+1).filter(c=>!c.exclusive).map(c=>Math.floor((n+(c.ignore?0:i))/c.interval)).reduce((c,m)=>c+m,0),u=Math.floor((n+(s.ignore?0:i))/s.interval);s.exclusive?(o-=u,o+=d):(o+=u,o-=d)}r+=o}return r}get totalDaysBefore(){return this.totalDaysBeforeYear(this.displayed.year)}totalDaysBeforeYear(e,n=!1){return e<1?0:Math.abs(e-1)*this.data.months.filter(r=>n||r.type=="month").reduce((r,a)=>r+a.length,0)+this.leapDaysBeforeYear(e)}firstDayOfYear(e=this.displayed.year){return this.data.overflow?e==1?this.firstWeekday:Bn(this.totalDaysBeforeYear(e)%this.data.weekdays.length+this.firstWeekday+(this.data.offset??0),this.data.weekdays.length):0}get moons(){return this.data.moons}getMoonsForMonth(e){let n=[];for(let r of e.days){let a=this.totalDaysBeforeYear(e.year,!0)+this.daysBeforeMonth(e.number,e.year,!0)+r.number-1,i=[];for(let o of this.moons){let{offset:l,cycle:s}=o,d=24,u=(a-l)/s,m=(u-Math.floor(u))*d%d,g=zc[d];i.push([o,g[Bn(Math.round(m),g.length)]])}n.push(i)}return n}};var Ar=Oe(require("obsidian"));var ui=Oe(require("obsidian"));function Q0(t){he(t,"svelte-1e1nyi2",".flag.svelte-1e1nyi2.svelte-1e1nyi2{cursor:pointer;position:relative;padding-left:0.125rem;text-align:left;width:100%;background-color:var(--hex-alpha);border-left:2px solid var(--color)}.flag-content.svelte-1e1nyi2.svelte-1e1nyi2{display:flex;gap:0.25rem;align-items:flex-start;justify-content:space-between}.day-view.svelte-1e1nyi2 .flag-content.svelte-1e1nyi2{justify-content:space-between}.clamp.svelte-1e1nyi2.svelte-1e1nyi2{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;word-break:keep-all;overflow:hidden;text-overflow:ellipsis}.note.svelte-1e1nyi2.svelte-1e1nyi2{display:flex;align-self:center}.multi.svelte-1e1nyi2.svelte-1e1nyi2{flex-shrink:0;overflow:visible;width:unset}.multi.svelte-1e1nyi2 .clamp.svelte-1e1nyi2{-webkit-line-clamp:1;overflow:visible}.multi.start.svelte-1e1nyi2.svelte-1e1nyi2{margin-left:0}.multi.end.svelte-1e1nyi2.svelte-1e1nyi2{margin-right:0}.multi.first.svelte-1e1nyi2.svelte-1e1nyi2{overflow:visible;white-space:nowrap}.multi.svelte-1e1nyi2.svelte-1e1nyi2:not(.first){color:transparent;overflow:hidden}.multi.svelte-1e1nyi2.svelte-1e1nyi2:not(.start){border:0;margin-left:-6px}.multi.svelte-1e1nyi2.svelte-1e1nyi2:not(.end){margin-right:-6px}.start.svelte-1e1nyi2>.flag-content.svelte-1e1nyi2{justify-content:flex-start;gap:1em}")}function yd(t){let e,n,r,a;return{c(){e=N("div"),b(e,"class","note svelte-1e1nyi2")},m(i,o){U(i,e,o),r||(a=fe(n=t[9].call(null,e)),r=!0)},d(i){i&&W(e),r=!1,a()}}}function X0(t){let e,n,r,a=t[0].name+"",i,o,l,s,d,u=t[0].note&&yd(t);return{c(){e=N("div"),n=N("div"),r=N("span"),i=be(a),o=G(),u&&u.c(),b(r,"class","svelte-1e1nyi2"),ge(r,"clamp",!t[1]),ge(r,"day-view",t[1]),b(n,"class","flag-content svelte-1e1nyi2"),b(e,"class","flag svelte-1e1nyi2"),b(e,"aria-label",l=t[1]?null:t[0].name),Ke(e,"--hex-alpha",t[6]+"40"),Ke(e,"--color",t[6]),ge(e,"multi",t[4]),ge(e,"start",t[2]),ge(e,"end",t[3]),ge(e,"first",t[5]),ge(e,"day-view",t[1])},m(c,m){U(c,e,m),w(e,n),w(n,r),w(r,i),w(n,o),u&&u.m(n,null),s||(d=[J(e,"click",t[12]),J(e,"mouseover",t[13]),J(e,"focus",J0),J(e,"contextmenu",t[14])],s=!0)},p(c,[m]){m&1&&a!==(a=c[0].name+"")&&Ae(i,a),m&2&&ge(r,"clamp",!c[1]),m&2&&ge(r,"day-view",c[1]),c[0].note?u||(u=yd(c),u.c(),u.m(n,null)):u&&(u.d(1),u=null),m&3&&l!==(l=c[1]?null:c[0].name)&&b(e,"aria-label",l),m&64&&Ke(e,"--hex-alpha",c[6]+"40"),m&64&&Ke(e,"--color",c[6]),m&16&&ge(e,"multi",c[4]),m&4&&ge(e,"start",c[2]),m&8&&ge(e,"end",c[3]),m&32&&ge(e,"first",c[5]),m&2&&ge(e,"day-view",c[1])},i:K,o:K,d(c){c&&W(e),u&&u.d(),s=!1,we(d)}}}var J0=()=>{};function ev(t,e,n){let r=Se(),{event:a}=e,{date:i}=e,{dayView:o=!1}=e,l=!1,s=!1,d=!1,u=!1,{categories:c}=e,m=c.find(C=>C.id==a.category)?.color??Vo,g=ui.Platform.isMacOS?"Meta":"Control",p=C=>{(0,ui.setIcon)(C,"note-glyph")},E=C=>{C.stopPropagation(),r("event-click",{event:a,modifier:C.getModifierState(g)})},y=C=>r("event-mouseover",{target:C.target,event:a}),S=C=>{C.stopPropagation(),r("event-context",{evt:C,event:a})};return t.$$set=C=>{"event"in C&&n(0,a=C.event),"date"in C&&n(10,i=C.date),"dayView"in C&&n(1,o=C.dayView),"categories"in C&&n(11,c=C.categories)},t.$$.update=()=>{if(t.$$.dirty&1039){e:a.end!=null&&!o&&(n(4,l=!0),n(2,s=i.day===a.date.day&&(a.date.month==null||i.month==a.date.month)&&(a.date.year==null||i.year===a.date.year)),n(5,u=s||i.day==1),n(3,d=i.day===a.end.day&&(a.end.month==null||i.month==a.end.month)&&(a.end.year==null||i.year===a.end.year)),s&&d&&(n(4,l=!1),n(2,s=!1),n(3,d=!1)))}if(t.$$.dirty&2049){e:n(6,m=c.find(C=>C.id==a.category)?.color??Vo)}},[a,o,s,d,l,u,m,r,g,p,i,c,E,y,S]}var vd=class extends le{constructor(e){super();ce(this,e,ev,X0,oe,{event:0,date:10,dayView:1,categories:11},Q0)}},bd=vd;function tv(t){he(t,"svelte-qnut28",".flags-container.svelte-qnut28{height:100%}.flag-container.svelte-qnut28{display:flex;flex-flow:column nowrap;gap:0.25rem}.overflow.svelte-qnut28{color:var(--text-muted);display:flex;justify-content:flex-end;width:100%}")}function wd(t){let e,n,r,a;return{c(){e=N("div"),b(e,"class","flag-container svelte-qnut28")},m(i,o){U(i,e,o),r||(a=fe(n=t[2].call(null,e)),r=!0)},d(i){i&&W(e),r=!1,a()}}}function Dd(t){let e,n,r;return{c(){e=N("span"),n=be("+"),r=be(t[1])},m(a,i){U(a,e,i),w(e,n),w(e,r)},p(a,i){i&2&&Ae(r,a[1])},d(a){a&&W(e)}}}function nv(t){let e,n=t[0],r,a,i=wd(t),o=t[1]>0&&Dd(t);return{c(){e=N("div"),i.c(),r=G(),a=N("div"),o&&o.c(),b(a,"class","overflow svelte-qnut28"),b(e,"class","flags-container svelte-qnut28")},m(l,s){U(l,e,s),i.m(e,null),w(e,r),w(e,a),o&&o.m(a,null)},p(l,[s]){s&1&&oe(n,n=l[0])&&(i.d(1),i=wd(l),i.c(),i.m(e,r)),l[1]>0?o?o.p(l,s):(o=Dd(l),o.c(),o.m(a,null)):o&&(o.d(1),o=null)},i:K,o:K,d(l){l&&W(e),i.d(l),o&&o.d()}}}function rv(t,e,n){let{events:r=[]}=e,{categories:a}=e,{dayView:i=!1}=e,{date:o}=e,{calendar:l}=e,s=0,d=Se(),u,c=0,m=g=>{if(r.length){let p=g?.parentElement?.getBoundingClientRect()?.height;if(!i&&(p==null||Math.floor(p)==Math.floor(c)))return;c=p,u=g,g.empty(),n(1,s=0);let E=p;for(let y of r){let S=new bd({target:g,props:{event:y,categories:a,dayView:i,date:o}});if(S.$on("event-click",C=>d("event-click",C.detail)),S.$on("event-mouseover",C=>d("event-mouseover",C.detail)),S.$on("event-context",C=>d("event-context",C.detail)),!i){if(E=p-g.getBoundingClientRect().height,E<0){g.lastElementChild.detach(),n(1,s=r.length-r.indexOf(y));break}else if(E==0){n(1,s=r.length-r.indexOf(y)-1);break}}}}};return l.on("view-resized",()=>{i||m(u)}),t.$$set=g=>{"events"in g&&n(0,r=g.events),"categories"in g&&n(3,a=g.categories),"dayView"in g&&n(4,i=g.dayView),"date"in g&&n(5,o=g.date),"calendar"in g&&n(6,l=g.calendar)},t.$$.update=()=>{if(t.$$.dirty&1){e:n(0,r=[...r])}},[r,s,m,a,i,o,l]}var _d=class extends le{constructor(e){super();ce(this,e,rv,nv,oe,{events:0,categories:3,dayView:4,date:5,calendar:6},tv)}},ci=_d;function av(t){he(t,"svelte-1uhffao",".day-view.svelte-1uhffao{padding:5px 15px;display:flex;flex-flow:column nowrap;gap:0.5rem}.nav.svelte-1uhffao,.date.svelte-1uhffao{display:flex;justify-content:space-between;align-items:center}.left-nav.svelte-1uhffao{display:flex}.left-nav.svelte-1uhffao .clickable-icon{margin-right:0}.calendar-clickable.svelte-1uhffao{align-items:center;cursor:pointer;display:flex;justify-content:center}h3.svelte-1uhffao{margin:0}.day-view.svelte-1uhffao .flag-container > .flag{padding-left:0.5rem}.title-container.svelte-1uhffao{display:flex;flex-flow:column nowrap;align-items:center;justify-content:center}.day-number.svelte-1uhffao{font-size:small}")}function Ed(t,e,n){let r=t.slice();return r[24]=e[n][0],r[25]=e[n][1],r}function Cd(t){let e,n,r,a;return{c(){e=N("div"),n=N("em"),r=be("Day "),a=be(t[8]),b(e,"class","day-number svelte-1uhffao")},m(i,o){U(i,e,o),w(e,n),w(n,r),w(n,a)},p(i,o){o&256&&Ae(a,i[8])},d(i){i&&W(e)}}}function Ad(t){let e,n,r=t[5],a=[];for(let o=0;o<r.length;o+=1)a[o]=kd(Ed(t,r,o));let i=o=>V(a[o],1,1,()=>{a[o]=null});return{c(){e=N("div");for(let o=0;o<a.length;o+=1)a[o].c();b(e,"class","moon-container")},m(o,l){U(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&32){r=o[5];let s;for(s=0;s<r.length;s+=1){let d=Ed(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=kd(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(xe(),s=r.length;s<a.length;s+=1)i(s);Fe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)V(a[l]);n=!1},d(o){o&&W(e),Ye(a,o)}}}function kd(t){let e,n;return e=new Fn({props:{moon:t[24],phase:t[25]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&32&&(i.moon=r[24]),a&32&&(i.phase=r[25]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function iv(t){let e,n,r,a,i,o,l,s,d,u,c,m,g,p,E,y,S,C,F,M,T,x,_,k,D,R,q,H,ne,ye,ae=t[0]&&Cd(t),me=t[4]&&t[5]&&t[5].length&&Ad(t);return q=new ci({props:{events:t[3].events,categories:t[7],date:t[2],dayView:!0,calendar:t[1]}}),q.$on("event-click",t[19]),q.$on("event-mouseover",t[20]),q.$on("event-context",t[21]),{c(){e=N("div"),n=N("div"),r=N("div"),a=N("div"),o=G(),l=N("div"),d=G(),u=N("div"),m=G(),g=N("div"),p=N("div"),y=G(),S=N("div"),C=N("h3"),F=N("span"),M=be(t[6]),T=G(),ae&&ae.c(),x=G(),_=N("div"),D=G(),me&&me.c(),R=G(),re(q.$$.fragment),b(r,"class","left-nav svelte-1uhffao"),b(n,"class","nav svelte-1uhffao"),b(p,"class","arrow calendar-clickable svelte-1uhffao"),b(p,"aria-label","Previous"),b(F,"class","current"),b(C,"class","fantasy-title title svelte-1uhffao"),b(S,"class","title-container svelte-1uhffao"),b(_,"class","arrow right calendar-clickable svelte-1uhffao"),b(_,"aria-label","Next"),b(g,"class","date svelte-1uhffao"),b(e,"class","day-view svelte-1uhffao")},m(Z,z){U(Z,e,z),w(e,n),w(n,r),w(r,a),w(r,o),w(r,l),w(n,d),w(n,u),w(e,m),w(e,g),w(g,p),w(g,y),w(g,S),w(S,C),w(C,F),w(F,M),w(S,T),ae&&ae.m(S,null),w(g,x),w(g,_),w(e,D),me&&me.m(e,null),w(e,R),te(q,e,null),H=!0,ne||(ye=[fe(i=t[11].call(null,a)),J(a,"click",t[15]),fe(s=t[12].call(null,l)),fe(c=t[10].call(null,u)),J(u,"click",t[16]),fe(E=t[13].call(null,p)),J(p,"click",t[17]),fe(k=t[14].call(null,_)),J(_,"click",t[18])],ne=!0)},p(Z,[z]){(!H||z&64)&&Ae(M,Z[6]),Z[0]?ae?ae.p(Z,z):(ae=Cd(Z),ae.c(),ae.m(S,null)):ae&&(ae.d(1),ae=null),Z[4]&&Z[5]&&Z[5].length?me?(me.p(Z,z),z&48&&j(me,1)):(me=Ad(Z),me.c(),j(me,1),me.m(e,R)):me&&(xe(),V(me,1,1,()=>{me=null}),Fe());let ue={};z&8&&(ue.events=Z[3].events),z&128&&(ue.categories=Z[7]),z&4&&(ue.date=Z[2]),z&2&&(ue.calendar=Z[1]),q.$set(ue)},i(Z){H||(j(me),j(q.$$.fragment,Z),H=!0)},o(Z){V(me),V(q.$$.fragment,Z),H=!1},d(Z){Z&&W(e),ae&&ae.d(),me&&me.d(),ee(q),ne=!1,we(ye)}}}function ov(t,e,n){let r,a,i,o,l,s,{displayDayNumber:d}=e,u=Ze("calendar"),c;u.subscribe(q=>{n(1,c=q)});let m;Ze("displayMoons").subscribe(q=>n(4,m=q)),c.on("day-update",()=>{n(2,a=c.viewing),n(6,r=c.viewedDate),n(3,i=c.getDayForDate(a)),n(5,l=i.moons)});let p=Se(),E=q=>{new Ar.ExtraButtonComponent(q).setIcon("cross").setTooltip("Close")},y=q=>{new Ar.ExtraButtonComponent(q).setIcon("fantasy-calendar-reveal").setTooltip("Show on Calendar").onClick(()=>{n(1,c.displayed.year=c.viewing.year,c),c.setCurrentMonth(c.viewing.month)})},S=q=>{new Ar.ExtraButtonComponent(q).setIcon("plus-with-circle").setTooltip("New Event").onClick(()=>p("event",a))},C=q=>{new Ar.ExtraButtonComponent(q).setIcon("left-arrow")},F=q=>{new Ar.ExtraButtonComponent(q).setIcon("right-arrow")},M=()=>p("reveal"),T=()=>p("close"),x=()=>c.goToPreviousDay(),_=()=>c.goToNextDay();function k(q){pe.call(this,t,q)}function D(q){pe.call(this,t,q)}function R(q){pe.call(this,t,q)}return t.$$set=q=>{"displayDayNumber"in q&&n(0,d=q.displayDayNumber)},t.$$.update=()=>{if(t.$$.dirty&2){e:n(6,r=c.viewedDate)}if(t.$$.dirty&2){e:n(2,a=c.viewing)}if(t.$$.dirty&6){e:n(3,i=c.getDayForDate(a))}if(t.$$.dirty&6){e:n(8,o=c.dayNumberForDate(a))}if(t.$$.dirty&8){e:n(5,l=i.moons)}if(t.$$.dirty&2){e:n(7,s=c.categories)}},[d,c,a,i,m,l,r,s,o,p,E,y,S,C,F,M,T,x,_,k,D,R]}var xd=class extends le{constructor(e){super();ce(this,e,ov,iv,oe,{displayDayNumber:0},av)}},Fd=xd;function sv(t){he(t,"svelte-1gou5hh",".dot.svelte-1gou5hh{display:inline-block;min-height:6px;min-width:6px;height:6px;width:6px;margin:0 2px}.active.svelte-1gou5hh{color:var(--text-on-accent)}")}function lv(t){let e,n,r,a;return{c(){e=Jt("svg"),n=Jt("circle"),b(n,"stroke",r=t[2]??"currentColor"),b(n,"fill",a=t[2]??"currentColor"),b(n,"cx","3"),b(n,"cy","3"),b(n,"r","2"),b(e,"class","dot svelte-1gou5hh"),b(e,"viewBox","0 0 6 6"),b(e,"xmlns","http://www.w3.org/2000/svg"),ge(e,"filled",t[0]),ge(e,"active",t[1])},m(i,o){U(i,e,o),w(e,n)},p(i,[o]){o&4&&r!==(r=i[2]??"currentColor")&&b(n,"stroke",r),o&4&&a!==(a=i[2]??"currentColor")&&b(n,"fill",a),o&1&&ge(e,"filled",i[0]),o&2&&ge(e,"active",i[1])},i:K,o:K,d(i){i&&W(e)}}}function uv(t,e,n){let{isFilled:r=!0}=e,{isActive:a=!1}=e,{color:i}=e;return t.$$set=o=>{"isFilled"in o&&n(0,r=o.isFilled),"isActive"in o&&n(1,a=o.isActive),"color"in o&&n(2,i=o.color)},[r,a,i]}var Td=class extends le{constructor(e){super();ce(this,e,uv,lv,oe,{isFilled:0,isActive:1,color:2},sv)}},Sd=Td;function cv(t){he(t,"svelte-1w3ytba",".dots-container.svelte-1w3ytba{width:100%}.dot-container.svelte-1w3ytba{display:flex;flex-flow:row nowrap;width:fit-content;margin:auto;line-height:6px;min-height:6px}.centered.svelte-1w3ytba{justify-content:center;align-items:center}.overflow.svelte-1w3ytba{color:var(--text-muted);font-size:xx-small;display:flex;justify-content:flex-end;width:100%;line-height:1.25}")}function Bd(t){let e,n,r,a;return{c(){e=N("div"),b(e,"class","dot-container centered svelte-1w3ytba")},m(i,o){U(i,e,o),r||(a=fe(n=t[2].call(null,e)),r=!0)},d(i){i&&W(e),r=!1,a()}}}function Nd(t){let e,n,r;return{c(){e=N("span"),n=be("+"),r=be(t[1])},m(a,i){U(a,e,i),w(e,n),w(e,r)},p(a,i){i&2&&Ae(r,a[1])},d(a){a&&W(e)}}}function dv(t){let e,n=t[0],r,a,i=Bd(t),o=t[1]>0&&Nd(t);return{c(){e=N("div"),i.c(),r=G(),a=N("div"),o&&o.c(),b(a,"class","overflow svelte-1w3ytba"),b(e,"class","dots-container svelte-1w3ytba")},m(l,s){U(l,e,s),i.m(e,null),w(e,r),w(e,a),o&&o.m(a,null)},p(l,[s]){s&1&&oe(n,n=l[0])&&(i.d(1),i=Bd(l),i.c(),i.m(e,r)),l[1]>0?o?o.p(l,s):(o=Nd(l),o.c(),o.m(a,null)):o&&(o.d(1),o=null)},i:K,o:K,d(l){l&&W(e),i.d(l),o&&o.d()}}}function fv(t,e,n){let{events:r=[]}=e,{categories:a}=e,{calendar:i}=e,o=0,l,s=0,d=c=>{if(l=c,r.length){let m=c.parentElement?.getBoundingClientRect()?.width;if(!m||Math.floor(m)==Math.floor(s))return;s=m;let g=m;c.empty(),n(1,o=0);for(let p of r)if(new Sd({target:c,props:{color:u(p)}}),g=m-c.getBoundingClientRect().width,g<0){c.lastElementChild.detach(),n(1,o=r.length-r.indexOf(p));break}else if(g==0){n(1,o=r.length-r.indexOf(p)-1);break}}};i.on("view-resized",()=>{!l||d(l)});let u=c=>a.find(m=>m.id==c.category)?.color;return t.$$set=c=>{"events"in c&&n(0,r=c.events),"categories"in c&&n(3,a=c.categories),"calendar"in c&&n(4,i=c.calendar)},[r,o,d,a,i]}var Md=class extends le{constructor(e){super();ce(this,e,fv,dv,oe,{events:0,categories:3,calendar:4},cv)}},Id=Md;function hv(t){he(t,"svelte-3pptg2",".day.svelte-3pptg2{background-color:transparent;border:2px solid transparent;border-radius:4px;color:var(--color-text-day);cursor:pointer;font-size:0.8em;height:100%;padding:2px;position:relative;text-align:center;vertical-align:baseline;overflow:visible;display:flex;flex-flow:column nowrap}.active.svelte-3pptg2{background-color:var(--background-secondary)}.viewing.svelte-3pptg2{border:2px solid var(--background-modifier-border)}.adjacent-month.svelte-3pptg2{opacity:0.25}")}function Od(t,e,n){let r=t.slice();return r[20]=e[n][0],r[21]=e[n][1],r}function pv(t){let e,n;return e=new Id({props:{events:t[4],categories:t[9],calendar:t[0].calendar}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&16&&(i.events=r[4]),a&512&&(i.categories=r[9]),a&1&&(i.calendar=r[0].calendar),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function mv(t){let e,n,r,a=t[5]&&t[10]&&t[10].length&&qd(t);return n=new ci({props:{events:t[4],categories:t[9],date:t[8],calendar:t[0].calendar}}),n.$on("event-click",t[12]),n.$on("event-mouseover",t[13]),n.$on("event-context",t[14]),{c(){a&&a.c(),e=G(),re(n.$$.fragment)},m(i,o){a&&a.m(i,o),U(i,e,o),te(n,i,o),r=!0},p(i,o){i[5]&&i[10]&&i[10].length?a?(a.p(i,o),o&1056&&j(a,1)):(a=qd(i),a.c(),j(a,1),a.m(e.parentNode,e)):a&&(xe(),V(a,1,1,()=>{a=null}),Fe());let l={};o&16&&(l.events=i[4]),o&512&&(l.categories=i[9]),o&256&&(l.date=i[8]),o&1&&(l.calendar=i[0].calendar),n.$set(l)},i(i){r||(j(a),j(n.$$.fragment,i),r=!0)},o(i){V(a),V(n.$$.fragment,i),r=!1},d(i){a&&a.d(i),i&&W(e),ee(n,i)}}}function qd(t){let e,n,r=t[10],a=[];for(let o=0;o<r.length;o+=1)a[o]=Rd(Od(t,r,o));let i=o=>V(a[o],1,1,()=>{a[o]=null});return{c(){e=N("div");for(let o=0;o<a.length;o+=1)a[o].c();b(e,"class","moon-container")},m(o,l){U(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,l){if(l&1024){r=o[10];let s;for(s=0;s<r.length;s+=1){let d=Od(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=Rd(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(xe(),s=r.length;s<a.length;s+=1)i(s);Fe()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)V(a[l]);n=!1},d(o){o&&W(e),Ye(a,o)}}}function Rd(t){let e,n;return e=new Fn({props:{moon:t[20],phase:t[21]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&1024&&(i.moon=r[20]),a&1024&&(i.phase=r[21]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function gv(t){let e,n,r=t[0].number+"",a,i,o,l,s,d,u,c,m,g=[mv,pv],p=[];function E(y,S){return y[2]?0:1}return o=E(t,-1),l=p[o]=g[o](t),{c(){e=N("div"),n=N("span"),a=be(r),i=G(),l.c(),b(e,"class",s=""+($i(t[1]?"adjacent-month fantasy-adjacent-month":"")+" svelte-3pptg2")),b(e,"aria-label",d=!t[2]&&t[4].length?`${t[4].length} event${t[4].length==1?"":"s"}`:void 0),ge(e,"day",!0),ge(e,"fantasy-day",!0),ge(e,"active",t[7]&&!t[1]),ge(e,"viewing",t[3]&&t[6]&&!t[1])},m(y,S){U(y,e,S),w(e,n),w(n,a),w(e,i),p[o].m(e,null),u=!0,c||(m=[J(e,"click",t[15]),J(e,"dblclick",t[16]),J(e,"contextmenu",t[17])],c=!0)},p(y,[S]){(!u||S&1)&&r!==(r=y[0].number+"")&&Ae(a,r);let C=o;o=E(y,S),o===C?p[o].p(y,S):(xe(),V(p[C],1,1,()=>{p[C]=null}),Fe(),l=p[o],l?l.p(y,S):(l=p[o]=g[o](y),l.c()),j(l,1),l.m(e,null)),(!u||S&2&&s!==(s=""+($i(y[1]?"adjacent-month fantasy-adjacent-month":"")+" svelte-3pptg2")))&&b(e,"class",s),(!u||S&20&&d!==(d=!y[2]&&y[4].length?`${y[4].length} event${y[4].length==1?"":"s"}`:void 0))&&b(e,"aria-label",d),S&2&&ge(e,"day",!0),S&2&&ge(e,"fantasy-day",!0),S&130&&ge(e,"active",y[7]&&!y[1]),S&74&&ge(e,"viewing",y[3]&&y[6]&&!y[1])},i(y){u||(j(l),u=!0)},o(y){V(l),u=!1},d(y){y&&W(e),p[o].d(),c=!1,we(m)}}}function yv(t,e,n){let r,a,i,o,l,s=Se(),{day:d}=e,{adjacent:u}=e,{fullView:c}=e,m=[],g;Ze("dayView").subscribe(_=>n(3,g=_));let E;Ze("displayMoons").subscribe(_=>n(5,E=_)),d.calendar.on("month-update",()=>{n(7,o=d.isCurrentDay),n(6,l=d.isDisplaying),n(4,m=d.events)}),d.calendar.on("day-update",()=>{n(7,o=d.isCurrentDay),n(6,l=d.isDisplaying)});function S(_){pe.call(this,t,_)}function C(_){pe.call(this,t,_)}function F(_){pe.call(this,t,_)}let M=()=>s("day-click",d),T=()=>s("day-doubleclick",d),x=_=>s("day-context-menu",{day:d,evt:_});return t.$$set=_=>{"day"in _&&n(0,d=_.day),"adjacent"in _&&n(1,u=_.adjacent),"fullView"in _&&n(2,c=_.fullView)},t.$$.update=()=>{if(t.$$.dirty&3){e:u||n(4,m=d.events)}if(t.$$.dirty&1){e:n(10,r=d.moons)}if(t.$$.dirty&1){e:n(9,a=d.calendar.categories)}if(t.$$.dirty&1){e:n(8,i=d.date)}if(t.$$.dirty&1){e:n(7,o=d.isCurrentDay)}if(t.$$.dirty&1){e:n(6,l=d.isDisplaying)}if(t.$$.dirty&8){e:n(3,g)}},[d,u,c,g,m,E,l,o,i,a,r,s,S,C,F,M,T,x]}var Ld=class extends le{constructor(e){super();ce(this,e,yv,gv,oe,{day:0,adjacent:1,fullView:2},hv)}},di=Ld;function vv(t){he(t,"svelte-1xujcmn",`.fantasy-month.svelte-1xujcmn{display:grid;grid-template-columns:repeat(
            var(--calendar-columns),
            var(--column-widths)
        );grid-auto-rows:var(--calendar-rows)}.full-view.svelte-1xujcmn{height:100%;margin-bottom:0.5rem}.month.svelte-1xujcmn{border-radius:1rem;padding:0.25rem}.month-name.svelte-1xujcmn{margin:0}.month.svelte-1xujcmn .fantasy-day.day{padding:0px}`)}function Pd(t,e,n){let r=t.slice();return r[16]=e[n],r}function jd(t,e,n){let r=t.slice();return r[16]=e[n],r}function Vd(t,e,n){let r=t.slice();return r[16]=e[n],r}function Hd(t){let e,n=t[1].name+"",r;return{c(){e=N("h3"),r=be(n),b(e,"class","month-name svelte-1xujcmn")},m(a,i){U(a,e,i),w(e,r)},p(a,i){i&2&&n!==(n=a[1].name+"")&&Ae(r,n)},d(a){a&&W(e)}}}function bv(t){let e;return{c(){e=N("div")},m(n,r){U(n,e,r)},p:K,i:K,o:K,d(n){n&&W(e)}}}function wv(t){let e,n;return e=new di({props:{day:t[16],adjacent:!0,fullView:t[3]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&256&&(i.day=r[16]),a&8&&(i.fullView=r[3]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Wd(t){let e,n,r,a,i=[wv,bv],o=[];function l(s,d){return s[5]&&s[16]!=null?0:1}return e=l(t,-1),n=o[e]=i[e](t),{c(){n.c(),r=Je()},m(s,d){o[e].m(s,d),U(s,r,d),a=!0},p(s,d){let u=e;e=l(s,d),e===u?o[e].p(s,d):(xe(),V(o[u],1,1,()=>{o[u]=null}),Fe(),n=o[e],n?n.p(s,d):(n=o[e]=i[e](s),n.c()),j(n,1),n.m(r.parentNode,r))},i(s){a||(j(n),a=!0)},o(s){V(n),a=!1},d(s){o[e].d(s),s&&W(r)}}}function Gd(t){let e,n;return e=new di({props:{day:t[16],adjacent:!1,fullView:t[3]}}),e.$on("day-click",t[10]),e.$on("day-doubleclick",t[11]),e.$on("day-context-menu",t[12]),e.$on("event-click",t[13]),e.$on("event-mouseover",t[14]),e.$on("event-context",t[15]),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&128&&(i.day=r[16]),a&8&&(i.fullView=r[3]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Dv(t){let e;return{c(){e=N("div")},m(n,r){U(n,e,r)},p:K,i:K,o:K,d(n){n&&W(e)}}}function _v(t){let e,n;return e=new di({props:{day:t[16],adjacent:!0,fullView:t[3]}}),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&64&&(i.day=r[16]),a&8&&(i.fullView=r[3]),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Ud(t){let e,n,r,a,i=[_v,Dv],o=[];function l(s,d){return s[5]?0:1}return e=l(t,-1),n=o[e]=i[e](t),{c(){n.c(),r=Je()},m(s,d){o[e].m(s,d),U(s,r,d),a=!0},p(s,d){let u=e;e=l(s,d),e===u?o[e].p(s,d):(xe(),V(o[u],1,1,()=>{o[u]=null}),Fe(),n=o[e],n?n.p(s,d):(n=o[e]=i[e](s),n.c()),j(n,1),n.m(r.parentNode,r))},i(s){a||(j(n),a=!0)},o(s){V(n),a=!1},d(s){o[e].d(s),s&&W(r)}}}function zd(t){let e,n,r,a,i=t[8],o=[];for(let p=0;p<i.length;p+=1)o[p]=Wd(Vd(t,i,p));let l=p=>V(o[p],1,1,()=>{o[p]=null}),s=t[7],d=[];for(let p=0;p<s.length;p+=1)d[p]=Gd(jd(t,s,p));let u=p=>V(d[p],1,1,()=>{d[p]=null}),c=t[6],m=[];for(let p=0;p<c.length;p+=1)m[p]=Ud(Pd(t,c,p));let g=p=>V(m[p],1,1,()=>{m[p]=null});return{c(){e=N("div");for(let p=0;p<o.length;p+=1)o[p].c();n=G();for(let p=0;p<d.length;p+=1)d[p].c();r=G();for(let p=0;p<m.length;p+=1)m[p].c();b(e,"class","fantasy-month svelte-1xujcmn"),Ke(e,"--calendar-columns",t[2]),Ke(e,"--calendar-rows",t[3]?`${1/t[4]*100}%`:"1fr"),ge(e,"full-view",t[3]),ge(e,"year-view",t[0])},m(p,E){U(p,e,E);for(let y=0;y<o.length;y+=1)o[y].m(e,null);w(e,n);for(let y=0;y<d.length;y+=1)d[y].m(e,null);w(e,r);for(let y=0;y<m.length;y+=1)m[y].m(e,null);a=!0},p(p,E){if(E&296){i=p[8];let y;for(y=0;y<i.length;y+=1){let S=Vd(p,i,y);o[y]?(o[y].p(S,E),j(o[y],1)):(o[y]=Wd(S),o[y].c(),j(o[y],1),o[y].m(e,n))}for(xe(),y=i.length;y<o.length;y+=1)l(y);Fe()}if(E&136){s=p[7];let y;for(y=0;y<s.length;y+=1){let S=jd(p,s,y);d[y]?(d[y].p(S,E),j(d[y],1)):(d[y]=Gd(S),d[y].c(),j(d[y],1),d[y].m(e,r))}for(xe(),y=s.length;y<d.length;y+=1)u(y);Fe()}if(E&104){c=p[6];let y;for(y=0;y<c.length;y+=1){let S=Pd(p,c,y);m[y]?(m[y].p(S,E),j(m[y],1)):(m[y]=Ud(S),m[y].c(),j(m[y],1),m[y].m(e,null))}for(xe(),y=c.length;y<m.length;y+=1)g(y);Fe()}(!a||E&4)&&Ke(e,"--calendar-columns",p[2]),(!a||E&24)&&Ke(e,"--calendar-rows",p[3]?`${1/p[4]*100}%`:"1fr"),E&8&&ge(e,"full-view",p[3]),E&1&&ge(e,"year-view",p[0])},i(p){if(!a){for(let E=0;E<i.length;E+=1)j(o[E]);for(let E=0;E<s.length;E+=1)j(d[E]);for(let E=0;E<c.length;E+=1)j(m[E]);a=!0}},o(p){o=o.filter(Boolean);for(let E=0;E<o.length;E+=1)V(o[E]);d=d.filter(Boolean);for(let E=0;E<d.length;E+=1)V(d[E]);m=m.filter(Boolean);for(let E=0;E<m.length;E+=1)V(m[E]);a=!1},d(p){p&&W(e),Ye(o,p),Ye(d,p),Ye(m,p)}}}function Ev(t){let e,n,r=t[7],a,i,o,l=t[0]&&Hd(t),s=zd(t);return{c(){e=N("div"),l&&l.c(),n=G(),s.c(),b(e,"class","month svelte-1xujcmn"),b(e,"data-id",a=t[1].id),b(e,"id",i=`MONTH-${t[1].id}-${t[1].year}`),ge(e,"full-view",t[3])},m(d,u){U(d,e,u),l&&l.m(e,null),w(e,n),s.m(e,null),o=!0},p(d,[u]){d[0]?l?l.p(d,u):(l=Hd(d),l.c(),l.m(e,n)):l&&(l.d(1),l=null),u&128&&oe(r,r=d[7])?(xe(),V(s,1,1,K),Fe(),s=zd(d),s.c(),j(s),s.m(e,null)):s.p(d,u),(!o||u&2&&a!==(a=d[1].id))&&b(e,"data-id",a),(!o||u&2&&i!==(i=`MONTH-${d[1].id}-${d[1].year}`))&&b(e,"id",i),u&8&&ge(e,"full-view",d[3])},i(d){o||(j(s),o=!0)},o(d){V(s),o=!1},d(d){d&&W(e),l&&l.d(),s.d(d)}}}function Cv(t,e,n){let r,a,i,o,{yearView:l=!1}=e,{month:s}=e,{columns:d}=e,{fullView:u=!1}=e,{weeks:c}=e,{showPad:m=!0}=e;function g(F){pe.call(this,t,F)}function p(F){pe.call(this,t,F)}function E(F){pe.call(this,t,F)}function y(F){pe.call(this,t,F)}function S(F){pe.call(this,t,F)}function C(F){pe.call(this,t,F)}return t.$$set=F=>{"yearView"in F&&n(0,l=F.yearView),"month"in F&&n(1,s=F.month),"columns"in F&&n(2,d=F.columns),"fullView"in F&&n(3,u=F.fullView),"weeks"in F&&n(4,c=F.weeks),"showPad"in F&&n(5,m=F.showPad)},t.$$.update=()=>{if(t.$$.dirty&2){e:n(9,r=s.calendar.getPaddedDaysForMonth(s))}if(t.$$.dirty&512){e:n(8,a=r.previous)}if(t.$$.dirty&2){e:n(7,i=s.days)}if(t.$$.dirty&512){e:n(6,o=r.next)}},[l,s,d,u,c,m,o,i,a,r,g,p,E,y,S,C]}var Yd=class extends le{constructor(e){super();ce(this,e,Cv,Ev,oe,{yearView:0,month:1,columns:2,fullView:3,weeks:4,showPad:5},vv)}},kr=Yd;var fi=Oe(require("obsidian"));function Av(t){he(t,"svelte-131055d",".fantasy-nav.nav.nav.svelte-131055d{padding:10px 0px;margin:0;display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:stretch}.container.svelte-131055d{display:flex;align-items:center}.fantasy-title.svelte-131055d{margin:0;line-height:1.25}.fantasy-right-nav.svelte-131055d{display:flex;justify-content:center;align-items:flex-start}.calendar-clickable.svelte-131055d{align-items:center;cursor:pointer;display:flex;justify-content:center}.title-container.svelte-131055d{display:flex;flex-flow:column nowrap;align-items:flex-start}")}function kv(t){let e,n,r,a,i,o,l,s,d,u,c,m,g,p,E,y,S,C,F,M,T,x,_,k,D;return{c(){e=N("div"),n=N("div"),r=N("h3"),a=N("span"),i=be(t[0]),o=G(),l=N("span"),s=be(t[1]),d=G(),u=N("div"),c=N("div"),m=N("div"),p=G(),E=N("div"),y=N("span"),y.textContent="Today",C=G(),F=N("div"),T=G(),x=N("div"),b(a,"class","fantasy-month month"),b(l,"class","fantasy-year year"),b(r,"class","fantasy-title title svelte-131055d"),b(n,"class","title-container svelte-131055d"),b(m,"class","arrow calendar-clickable svelte-131055d"),b(m,"aria-label","Previous Month"),b(E,"class","reset-button calendar-clickable svelte-131055d"),b(E,"aria-label",S="Today is "+t[2]),b(F,"class","arrow right calendar-clickable svelte-131055d"),b(F,"aria-label","Next Month"),b(x,"class","calendar-clickable svelte-131055d"),b(x,"aria-label","Calendar Settings"),b(c,"class","container svelte-131055d"),b(u,"class","right-nav fantasy-right-nav svelte-131055d"),b(e,"class","fantasy-nav nav svelte-131055d")},m(R,q){U(R,e,q),w(e,n),w(n,r),w(r,a),w(a,i),w(r,o),w(r,l),w(l,s),w(e,d),w(e,u),w(u,c),w(c,m),w(c,p),w(c,E),w(E,y),w(c,C),w(c,F),w(c,T),w(c,x),k||(D=[fe(g=t[4].call(null,m)),J(m,"click",t[7]),J(E,"click",t[8]),fe(M=t[5].call(null,F)),J(F,"click",t[9]),fe(_=t[6].call(null,x)),J(x,"click",t[10])],k=!0)},p(R,[q]){q&1&&Ae(i,R[0]),q&2&&Ae(s,R[1]),q&4&&S!==(S="Today is "+R[2])&&b(E,"aria-label",S)},i:K,o:K,d(R){R&&W(e),k=!1,we(D)}}}function xv(t,e,n){let r=Se(),{month:a}=e,{year:i}=e,{current:o}=e,l=p=>{new fi.ExtraButtonComponent(p).setIcon("left-arrow")},s=p=>{new fi.ExtraButtonComponent(p).setIcon("right-arrow")},d=p=>{new fi.ExtraButtonComponent(p).setIcon("gear")},u=()=>r("previous"),c=()=>r("reset"),m=p=>r("next"),g=p=>r("settings",p);return t.$$set=p=>{"month"in p&&n(0,a=p.month),"year"in p&&n(1,i=p.year),"current"in p&&n(2,o=p.current)},[a,i,o,r,l,s,d,u,c,m,g]}var Zd=class extends le{constructor(e){super();ce(this,e,xv,kv,oe,{month:0,year:1,current:2},Av)}},$d=Zd;var hi=Oe(require("obsidian"));function Fv(t){he(t,"svelte-i3pajt","#calendar-container .fantasy-nav.nav.nav.svelte-i3pajt{padding:0;margin:0;display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center;position:sticky;top:0;z-index:2}.fantasy-year-nav.svelte-i3pajt{display:flex;align-items:center;margin-right:auto}.container.svelte-i3pajt{display:flex;align-items:center}.fantasy-title.svelte-i3pajt{margin:0}.fantasy-right-nav.svelte-i3pajt{display:flex;justify-content:center;align-items:flex-start}.calendar-clickable.svelte-i3pajt{align-items:center;cursor:pointer;display:flex;justify-content:center}")}function Kd(t){let e,n,r,a;return{c(){e=N("div"),b(e,"class","arrow calendar-clickable svelte-i3pajt"),b(e,"aria-label","Previous Year")},m(i,o){U(i,e,o),r||(a=[fe(n=t[4].call(null,e)),J(e,"click",t[7])],r=!0)},p:K,d(i){i&&W(e),r=!1,we(a)}}}function Qd(t){let e,n,r,a;return{c(){e=N("div"),b(e,"class","arrow right calendar-clickable svelte-i3pajt"),b(e,"aria-label","Next Year")},m(i,o){U(i,e,o),r||(a=[fe(n=t[5].call(null,e)),J(e,"click",t[9])],r=!0)},p:K,d(i){i&&W(e),r=!1,we(a)}}}function Tv(t){let e,n,r,a,i,o,l,s,d,u,c,m,g,p,E,y,S,C,F=t[1]&&Kd(t),M=t[1]&&Qd(t);return{c(){e=N("div"),n=N("div"),r=N("h2"),a=N("span"),i=be(t[0]),o=G(),l=N("div"),s=N("div"),F&&F.c(),d=G(),u=N("div"),c=N("span"),c.textContent="Today",g=G(),M&&M.c(),p=G(),E=N("div"),b(a,"class","fantasy-year"),b(r,"class","fantasy-title svelte-i3pajt"),b(n,"class","fantasy-year-nav svelte-i3pajt"),b(u,"class","reset-button calendar-clickable svelte-i3pajt"),b(u,"aria-label",m="Today is "+t[2]),b(E,"class","calendar-clickable svelte-i3pajt"),b(E,"aria-label","Calendar Settings"),b(s,"class","container svelte-i3pajt"),b(l,"class","right-nav fantasy-right-nav svelte-i3pajt"),b(e,"class","fantasy-nav nav svelte-i3pajt")},m(T,x){U(T,e,x),w(e,n),w(n,r),w(r,a),w(a,i),w(e,o),w(e,l),w(l,s),F&&F.m(s,null),w(s,d),w(s,u),w(u,c),w(s,g),M&&M.m(s,null),w(s,p),w(s,E),S||(C=[J(u,"click",t[8]),fe(y=t[6].call(null,E)),J(E,"click",t[10])],S=!0)},p(T,[x]){x&1&&Ae(i,T[0]),T[1]?F?F.p(T,x):(F=Kd(T),F.c(),F.m(s,d)):F&&(F.d(1),F=null),x&4&&m!==(m="Today is "+T[2])&&b(u,"aria-label",m),T[1]?M?M.p(T,x):(M=Qd(T),M.c(),M.m(s,p)):M&&(M.d(1),M=null)},i:K,o:K,d(T){T&&W(e),F&&F.d(),M&&M.d(),S=!1,we(C)}}}function Sv(t,e,n){let r=Se(),{year:a}=e,{arrows:i=!1}=e,{current:o}=e,l=p=>{new hi.ExtraButtonComponent(p).setIcon("left-arrow")},s=p=>{new hi.ExtraButtonComponent(p).setIcon("right-arrow")},d=p=>{new hi.ExtraButtonComponent(p).setIcon("gear")},u=()=>r("previous"),c=()=>r("reset"),m=p=>r("next"),g=p=>r("settings",p);return t.$$set=p=>{"year"in p&&n(0,a=p.year),"arrows"in p&&n(1,i=p.arrows),"current"in p&&n(2,o=p.current)},[a,i,o,r,l,s,d,u,c,m,g]}var Xd=class extends le{constructor(e){super();ce(this,e,Sv,Tv,oe,{year:0,arrows:1,current:2},Fv)}},pi=Xd;function Bv(t){he(t,"svelte-15hvixf",".year-view.svelte-15hvixf{height:100%;position:relative;display:flex;flex-direction:column}.year.svelte-15hvixf{display:grid;grid-template-columns:1fr 1fr 1fr;gap:1rem;overflow:auto;flex:1}.year.svelte-15hvixf:not(.full-view){grid-template-columns:1fr}")}function Nv(t){let e,n,r,a,i,o,l;return n=new pi({props:{year:t[3],current:t[0]}}),n.$on("next",t[9]),n.$on("previous",t[10]),n.$on("reset",t[11]),n.$on("settings",t[12]),{c(){e=N("div"),re(n.$$.fragment),r=G(),a=N("div"),b(a,"class","year svelte-15hvixf"),ge(a,"full-view",t[1]),b(e,"class","year-view svelte-15hvixf")},m(s,d){U(s,e,d),te(n,e,null),w(e,r),w(e,a),t[13](a),i=!0,o||(l=J(a,"scroll",t[5],{once:!0}),o=!0)},p(s,[d]){let u={};d&8&&(u.year=s[3]),d&1&&(u.current=s[0]),n.$set(u),d&2&&ge(a,"full-view",s[1])},i(s){i||(j(n.$$.fragment,s),i=!0)},o(s){V(n.$$.fragment,s),i=!1},d(s){s&&W(e),ee(n),t[13](null),o=!1,l()}}}function Mv(t,e,n){let r,a=Se(),{current:i}=e,{year:o}=e,{columns:l}=e,{fullView:s}=e,d,u,c,m=Ze("calendar"),g;m.subscribe(z=>{n(8,g=z)});let p=[],E=Ze("dayView"),y=Ze("displayMoons"),S=new IntersectionObserver((z,ue)=>{ue===S&&(!z.length||!z[0].isIntersecting||(S.disconnect(),!(!g.canGoToNextYear(c.year)&&c.number===g.data.months.length-1)&&(M(),R(p.shift()),C())))},{root:d,rootMargin:"0px",threshold:.25}),C=()=>{let z=d.children[d.children.length-2];!z||S.observe(z)},F=new IntersectionObserver((z,ue)=>{if(ue!==F||!z&&!z.length||z[0].isIntersecting)return;let ke=d.getBoundingClientRect();z[0].boundingClientRect.top<ke.top&&(n(6,o+=1),_.observe(z[0].target),F.disconnect())},{root:d,rootMargin:"0px",threshold:0}),M=(z=!0)=>{if(!(!g.canGoToNextYear(c.year)&&c.number===g.data.months.length-1)){if(c=g.getMonth(c.number+1,c.year),c.number===0&&!(d.lastElementChild instanceof HTMLHeadingElement)){let ue=d.createEl("h2",{text:g.getNameForYear(c.year),cls:"fantasy-title"});p.push(ue),F.disconnect(),F.observe(ue)}p.push(D(c,!1)),z&&(u=g.getMonth((u?.number??0)+1,u?.year??1)),x()}},T=new IntersectionObserver((z,ue)=>{ue===T&&(!z.length||!z[0].isIntersecting||(T.disconnect(),!!u&&(k(),R(p.pop()),x())))},{root:d,rootMargin:"0px",threshold:.25}),x=()=>{let z=d.children[1];!z||T.observe(z)},_=new IntersectionObserver((z,ue)=>{ue===_&&(!z&&!z.length||z[0].isIntersecting&&(n(6,o-=1),F.observe(z[0].target),_.disconnect()))},{root:d,rootMargin:"0px",threshold:0}),k=(z=!0)=>{if(u=g.getMonth(u.number-1,u.year),!!u){if(p.unshift(D(u,!0)),u.number===0&&!(d.firstElementChild instanceof HTMLHeadingElement)){let ue=createEl("h2",{text:g.getNameForYear(u.year),cls:"fantasy-title"});d.prepend(ue),p.unshift(ue),_.disconnect(),_.observe(ue)}z&&(c=g.getMonth(c.number-1,c.year)),C()}},D=(z,ue)=>{let ke=new kr({target:d,anchor:ue?d.children[0]:null,props:{month:z,fullView:!1,yearView:!0,columns:l,weeks:g.weekdays.length,showPad:!1},context:new Map([["dayView",E],["displayMoons",y]])});return ke.$on("day-click",Ce=>a("day-click",Ce.detail)),ke.$on("day-doubleclick",Ce=>a("day-doubleclick",Ce.detail)),ke.$on("day-context-menu",Ce=>a("day-context-menu",Ce.detail)),ke.$on("event-mouseover",Ce=>a("event-mouseover",Ce.detail)),ke.$on("event-mouseover",Ce=>a("event-mouseover",Ce.detail)),ke},R=z=>{z instanceof HTMLHeadingElement?z.detach():z.$destroy()},q=async(z=!1)=>{for(let ke of p)R(ke);p.splice(0,p.length),d.empty(),await In(),n(6,o=g.current.year),u=g.getMonth(g.displayed.month-1,g.displayed.year),c=u;for(let ke=0;ke<g.data.months.length;ke++)M(!1);k(!1),await In(),d.querySelector(`#MONTH-${g.currentMonth.id}-${o}`).scrollIntoView(!0),z&&H()};Ji(()=>{T.disconnect(),S.disconnect(),_.disconnect(),F.disconnect()}),Nn(q);let H=async()=>{await In(),T.observe(d.children[1]),S.observe(d.children[d.children.length-2])};function ne(z){pe.call(this,t,z)}function ye(z){pe.call(this,t,z)}let ae=()=>q(!0);function me(z){pe.call(this,t,z)}function Z(z){Dn[z?"unshift":"push"](()=>{d=z,n(2,d)})}return t.$$set=z=>{"current"in z&&n(0,i=z.current),"year"in z&&n(6,o=z.year),"columns"in z&&n(7,l=z.columns),"fullView"in z&&n(1,s=z.fullView)},t.$$.update=()=>{if(t.$$.dirty&320){e:n(3,r=g.getNameForYear(o))}},[i,s,d,r,q,H,o,l,g,ne,ye,ae,me,Z]}var Jd=class extends le{constructor(e){super();ce(this,e,Mv,Nv,oe,{current:0,year:6,columns:7,fullView:1},Bv)}},ef=Jd;var $o=Oe(require("obsidian"));function Iv(t){he(t,"svelte-ztrrn8",".year.svelte-ztrrn8{display:grid;grid-template-columns:1fr 1fr 1fr;gap:1rem;overflow:auto;flex:1}.year.svelte-ztrrn8:not(.full-view){grid-template-columns:1fr}")}function tf(t,e,n){let r=t.slice();return r[8]=e[n],r}function nf(t){let e,n;return e=new kr({props:{month:t[8],fullView:!1,yearView:!0,columns:t[2],weeks:t[8].calendar.weekdays.length,showPad:!1}}),e.$on("day-click",t[3]),e.$on("day-doubleclick",t[4]),e.$on("day-context-menu",t[5]),e.$on("event-click",t[6]),e.$on("event-mouseover",t[7]),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a&2&&(i.month=r[8]),a&4&&(i.columns=r[2]),a&2&&(i.weeks=r[8].calendar.weekdays.length),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Ov(t){let e,n,r=t[1],a=[];for(let o=0;o<r.length;o+=1)a[o]=nf(tf(t,r,o));let i=o=>V(a[o],1,1,()=>{a[o]=null});return{c(){e=N("div");for(let o=0;o<a.length;o+=1)a[o].c();b(e,"class","year svelte-ztrrn8"),ge(e,"full-view",t[0])},m(o,l){U(o,e,l);for(let s=0;s<a.length;s+=1)a[s].m(e,null);n=!0},p(o,[l]){if(l&6){r=o[1];let s;for(s=0;s<r.length;s+=1){let d=tf(o,r,s);a[s]?(a[s].p(d,l),j(a[s],1)):(a[s]=nf(d),a[s].c(),j(a[s],1),a[s].m(e,null))}for(xe(),s=r.length;s<a.length;s+=1)i(s);Fe()}l&1&&ge(e,"full-view",o[0])},i(o){if(!n){for(let l=0;l<r.length;l+=1)j(a[l]);n=!0}},o(o){a=a.filter(Boolean);for(let l=0;l<a.length;l+=1)V(a[l]);n=!1},d(o){o&&W(e),Ye(a,o)}}}function qv(t,e,n){let{fullView:r}=e,{months:a}=e,{columns:i}=e;function o(c){pe.call(this,t,c)}function l(c){pe.call(this,t,c)}function s(c){pe.call(this,t,c)}function d(c){pe.call(this,t,c)}function u(c){pe.call(this,t,c)}return t.$$set=c=>{"fullView"in c&&n(0,r=c.fullView),"months"in c&&n(1,a=c.months),"columns"in c&&n(2,i=c.columns)},[r,a,i,o,l,s,d,u]}var rf=class extends le{constructor(e){super();ce(this,e,qv,Ov,oe,{fullView:0,months:1,columns:2},Iv)}},af=rf;function Rv(t){he(t,"svelte-1xpvbi",".year-view.svelte-1xpvbi{height:100%;position:relative;display:flex;flex-direction:column}.year-container.svelte-1xpvbi{flex:1;overflow:auto}")}function Lv(t){let e,n,r,a,i;return n=new pi({props:{year:t[2],current:t[0],arrows:!0}}),n.$on("next",t[9]),n.$on("previous",t[10]),n.$on("reset",t[11]),n.$on("settings",t[12]),{c(){e=N("div"),re(n.$$.fragment),r=G(),a=N("div"),b(a,"class","year-container svelte-1xpvbi"),b(e,"class","year-view svelte-1xpvbi")},m(o,l){U(o,e,l),te(n,e,null),w(e,r),w(e,a),t[13](a),i=!0},p(o,[l]){let s={};l&4&&(s.year=o[2]),l&1&&(s.current=o[0]),n.$set(s)},i(o){i||(j(n.$$.fragment,o),i=!0)},o(o){V(n.$$.fragment,o),i=!1},d(o){o&&W(e),ee(n),t[13](null)}}}function Pv(t,e,n){let r,a=Se(),i=Ze("calendar"),o=Ze("dayView"),l=Ze("displayMoons"),s;i.subscribe(D=>{n(8,s=D)});let{year:d}=e,{current:u}=e,{columns:c}=e,m,g=(D,R=!1)=>{let q=s.getMonthsForYear(D),H=new af({target:m,anchor:R?m.children[0]:null,props:{months:q,fullView:!0,columns:c},context:new Map([["dayView",o],["displayMoons",l]])});return H.$on("day-click",ne=>a("day-click",ne.detail)),H.$on("day-doubleclick",ne=>a("day-doubleclick",ne.detail)),H.$on("day-context-menu",ne=>a("day-context-menu",ne.detail)),H.$on("event-mouseover",ne=>a("event-mouseover",ne.detail)),H.$on("event-mouseover",ne=>a("event-mouseover",ne.detail)),H},p=D=>{D instanceof HTMLHeadingElement?D.detach():D.$destroy()},E=[],y=()=>{if(!s.canGoToNextYear(d)){new $o.Notice("This is the last year. Additional years can be created in settings.");return}n(6,d=d+1),F(d)},S=()=>{if(d===1){new $o.Notice("This is the earliest year.");return}n(6,d=d-1),F(d)},C=()=>{n(6,d=s.current.year),F(d)},F=async D=>{E.forEach(R=>p(R)),m.empty(),await In(),D=D,E.push(g(D))};Nn(()=>E.push(g(d)));let M=()=>y(),T=()=>S(),x=()=>C();function _(D){pe.call(this,t,D)}function k(D){Dn[D?"unshift":"push"](()=>{m=D,n(1,m)})}return t.$$set=D=>{"year"in D&&n(6,d=D.year),"current"in D&&n(0,u=D.current),"columns"in D&&n(7,c=D.columns)},t.$$.update=()=>{if(t.$$.dirty&320){e:n(2,r=s.getNameForYear(d))}},[u,m,r,y,S,C,d,c,s,M,T,x,_,k]}var of=class extends le{constructor(e){super();ce(this,e,Pv,Lv,oe,{year:6,current:0,columns:7},Rv)}},sf=of;function jv(t){he(t,"svelte-1kty1w6","#calendar-container.year-view.svelte-1kty1w6.svelte-1kty1w6{height:100%}#calendar-container.fantasy-calendar.full-view.svelte-1kty1w6.svelte-1kty1w6{width:100%;padding:0 0.5rem 0.5rem;height:100%;display:flex;flex-flow:column}.fantasy-calendar.full-view.svelte-1kty1w6 .month-container.svelte-1kty1w6{height:100%}.month-container.svelte-1kty1w6.svelte-1kty1w6{display:flex}.month-view.svelte-1kty1w6.svelte-1kty1w6{flex-grow:2}.weeks.svelte-1kty1w6.svelte-1kty1w6{display:grid;grid-template-rows:auto 1fr}.week-num-container.svelte-1kty1w6.svelte-1kty1w6{display:grid;grid-template-rows:repeat(var(--calendar-rows), auto);padding:0.25rem 0}.week-num.svelte-1kty1w6.svelte-1kty1w6{background-color:transparent;border:2px solid transparent;border-radius:4px;color:var(--color-text-day);cursor:pointer;font-size:0.8em;height:100%;padding:2px;position:relative;text-align:center;vertical-align:baseline;overflow:visible}.weekdays.svelte-1kty1w6.svelte-1kty1w6{display:grid;grid-template-columns:repeat(var(--calendar-columns), 1fr);grid-template-rows:auto;padding:0 0.25rem;gap:2px}.weekday.svelte-1kty1w6.svelte-1kty1w6{background-color:var(--color-background-heading);color:var(--color-text-heading);font-size:0.6em;letter-spacing:1px;padding:4px;text-transform:uppercase;text-align:center;border:2px solid transparent}hr.svelte-1kty1w6.svelte-1kty1w6{margin:1rem 0}.moon-container{display:flex;flex-flow:row wrap;align-items:center;justify-content:center}")}function lf(t,e,n){let r=t.slice();return r[49]=e[n],r}function uf(t,e,n){let r=t.slice();return r[52]=e[n],r}function Vv(t){let e,n,r,a,i,o,l,s,d,u;e=new $d({props:{month:t[6].name,year:t[9],current:t[3].displayedDate}}),e.$on("next",t[31]),e.$on("previous",t[32]),e.$on("reset",t[33]),e.$on("settings",t[34]);let c=t[5]&&cf(t),m=t[11],g=[];for(let p=0;p<m.length;p+=1)g[p]=ff(lf(t,m,p));return d=new kr({props:{columns:t[11].length,weeks:t[7],month:t[6],fullView:t[1]}}),d.$on("day-click",t[35]),d.$on("day-doubleclick",t[36]),d.$on("day-context-menu",t[37]),d.$on("event-click",t[38]),d.$on("event-mouseover",t[39]),d.$on("event-context",t[40]),{c(){re(e.$$.fragment),n=G(),r=N("div"),a=N("div"),c&&c.c(),i=G(),o=N("div"),l=N("div");for(let p=0;p<g.length;p+=1)g[p].c();s=G(),re(d.$$.fragment),b(a,"class","weeks svelte-1kty1w6"),b(l,"class","weekdays svelte-1kty1w6"),b(o,"class","month-view svelte-1kty1w6"),b(r,"class","month-container svelte-1kty1w6")},m(p,E){te(e,p,E),U(p,n,E),U(p,r,E),w(r,a),c&&c.m(a,null),w(r,i),w(r,o),w(o,l);for(let y=0;y<g.length;y+=1)g[y].m(l,null);w(o,s),te(d,o,null),u=!0},p(p,E){let y={};if(E[0]&64&&(y.month=p[6].name),E[0]&512&&(y.year=p[9]),E[0]&8&&(y.current=p[3].displayedDate),e.$set(y),p[5]?c?c.p(p,E):(c=cf(p),c.c(),c.m(a,null)):c&&(c.d(1),c=null),E[0]&2048){m=p[11];let C;for(C=0;C<m.length;C+=1){let F=lf(p,m,C);g[C]?g[C].p(F,E):(g[C]=ff(F),g[C].c(),g[C].m(l,null))}for(;C<g.length;C+=1)g[C].d(1);g.length=m.length}let S={};E[0]&2048&&(S.columns=p[11].length),E[0]&128&&(S.weeks=p[7]),E[0]&64&&(S.month=p[6]),E[0]&2&&(S.fullView=p[1]),d.$set(S)},i(p){u||(j(e.$$.fragment,p),j(d.$$.fragment,p),u=!0)},o(p){V(e.$$.fragment,p),V(d.$$.fragment,p),u=!1},d(p){ee(e,p),p&&W(n),p&&W(r),c&&c.d(),Ye(g,p),ee(d)}}}function Hv(t){let e,n;return e=new sf({props:{year:t[10],columns:t[11].length,current:t[3].displayedDate}}),e.$on("next",t[22]),e.$on("previous",t[23]),e.$on("reset",t[24]),e.$on("settings",t[25]),e.$on("day-click",t[26]),e.$on("day-doubleclick",t[27]),e.$on("day-context-menu",t[28]),e.$on("event-click",t[29]),e.$on("event-mouseover",t[30]),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a[0]&1024&&(i.year=r[10]),a[0]&2048&&(i.columns=r[11].length),a[0]&8&&(i.current=r[3].displayedDate),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function Wv(t){let e,n;return e=new ef({props:{year:t[10],fullView:t[1],columns:t[11].length,current:t[3].displayedDate}}),e.$on("next",t[13]),e.$on("previous",t[14]),e.$on("reset",t[15]),e.$on("settings",t[16]),e.$on("day-click",t[17]),e.$on("day-doubleclick",t[18]),e.$on("day-context-menu",t[19]),e.$on("event-click",t[20]),e.$on("event-mouseover",t[21]),{c(){re(e.$$.fragment)},m(r,a){te(e,r,a),n=!0},p(r,a){let i={};a[0]&1024&&(i.year=r[10]),a[0]&2&&(i.fullView=r[1]),a[0]&2048&&(i.columns=r[11].length),a[0]&8&&(i.current=r[3].displayedDate),e.$set(i)},i(r){n||(j(e.$$.fragment,r),n=!0)},o(r){V(e.$$.fragment,r),n=!1},d(r){ee(e,r)}}}function cf(t){let e,n,r,a=[...Array(t[7]).keys()],i=[];for(let o=0;o<a.length;o+=1)i[o]=df(uf(t,a,o));return{c(){e=N("span"),e.textContent="W",n=G(),r=N("div");for(let o=0;o<i.length;o+=1)i[o].c();b(e,"class","week-num weekday fantasy-weekday svelte-1kty1w6"),b(r,"class","week-num-container svelte-1kty1w6")},m(o,l){U(o,e,l),U(o,n,l),U(o,r,l);for(let s=0;s<i.length;s+=1)i[s].m(r,null)},p(o,l){if(l[0]&384){a=[...Array(o[7]).keys()];let s;for(s=0;s<a.length;s+=1){let d=uf(o,a,s);i[s]?i[s].p(d,l):(i[s]=df(d),i[s].c(),i[s].m(r,null))}for(;s<i.length;s+=1)i[s].d(1);i.length=a.length}},d(o){o&&W(e),o&&W(n),o&&W(r),Ye(i,o)}}}function df(t){let e,n=t[8]+1+t[52]+"",r;return{c(){e=N("span"),r=be(n),b(e,"class","week-num svelte-1kty1w6")},m(a,i){U(a,e,i),w(e,r)},p(a,i){i[0]&384&&n!==(n=a[8]+1+a[52]+"")&&Ae(r,n)},d(a){a&&W(e)}}}function ff(t){let e,n=t[49].name.slice(0,3)+"",r;return{c(){e=N("span"),r=be(n),b(e,"class","weekday fantasy-weekday svelte-1kty1w6")},m(a,i){U(a,e,i),w(e,r)},p(a,i){i[0]&2048&&n!==(n=a[49].name.slice(0,3)+"")&&Ae(r,n)},d(a){a&&W(e)}}}function hf(t){let e,n,r,a;return r=new Fd({props:{displayDayNumber:t[4]}}),r.$on("close",t[41]),r.$on("event-click",t[42]),r.$on("event-mouseover",t[43]),r.$on("event-context",t[44]),r.$on("event",t[45]),{c(){e=N("hr"),n=G(),re(r.$$.fragment),b(e,"class","svelte-1kty1w6")},m(i,o){U(i,e,o),U(i,n,o),te(r,i,o),a=!0},p(i,o){let l={};o[0]&16&&(l.displayDayNumber=i[4]),r.$set(l)},i(i){a||(j(r.$$.fragment,i),a=!0)},o(i){V(r.$$.fragment,i),a=!1},d(i){i&&W(e),i&&W(n),ee(r,i)}}}function Gv(t){let e,n,r,a,i,o,l=[Wv,Hv,Vv],s=[];function d(c,m){return c[2]&&!c[1]?0:c[2]?1:2}n=d(t,[-1,-1]),r=s[n]=l[n](t);let u=t[0]&&!t[1]&&hf(t);return{c(){e=N("div"),r.c(),a=G(),u&&u.c(),i=Je(),b(e,"id","calendar-container"),b(e,"class","fantasy-calendar svelte-1kty1w6"),Ke(e,"--calendar-columns",t[3].weekdays.length),Ke(e,"--column-widths",1/t[3].weekdays.length*100+"%"),Ke(e,"--calendar-rows",t[3].weeksPerCurrentMonth),ge(e,"full-view",t[1]),ge(e,"year-view",t[2])},m(c,m){U(c,e,m),s[n].m(e,null),U(c,a,m),u&&u.m(c,m),U(c,i,m),o=!0},p(c,m){let g=n;n=d(c,m),n===g?s[n].p(c,m):(xe(),V(s[g],1,1,()=>{s[g]=null}),Fe(),r=s[n],r?r.p(c,m):(r=s[n]=l[n](c),r.c()),j(r,1),r.m(e,null)),(!o||m[0]&8)&&Ke(e,"--calendar-columns",c[3].weekdays.length),(!o||m[0]&8)&&Ke(e,"--column-widths",1/c[3].weekdays.length*100+"%"),(!o||m[0]&8)&&Ke(e,"--calendar-rows",c[3].weeksPerCurrentMonth),m[0]&2&&ge(e,"full-view",c[1]),m[0]&4&&ge(e,"year-view",c[2]),c[0]&&!c[1]?u?(u.p(c,m),m[0]&3&&j(u,1)):(u=hf(c),u.c(),j(u,1),u.m(i.parentNode,i)):u&&(xe(),V(u,1,1,()=>{u=null}),Fe())},i(c){o||(j(r),j(u),o=!0)},o(c){V(r),V(u),o=!1},d(c){c&&W(e),s[n].d(),c&&W(a),u&&u.d(c),c&&W(i)}}}function Uv(t,e,n){let r,a,i,o,l,s,{fullView:d=!1}=e,{dayView:u=!1}=e,{yearView:c=!1}=e,{calendar:m}=e,{moons:g}=e,{displayDayNumber:p}=e,{displayWeeks:E}=e,y=lr(u),S=lr(g),C=lr(m);Mn("dayView",y),Mn("displayMoons",S),Mn("calendar",C),m.on("month-update",()=>{n(10,a=m.displayed.year),n(9,i=m.getNameForYear(m.displayed.year)),n(6,o=m.currentMonth),n(7,s=m.weeksOfMonth(o)),n(8,l=m.weekNumbersOfMonth(o))});let F=()=>m.goToNextYear(),M=()=>m.goToPreviousYear();function T(ie){pe.call(this,t,ie)}function x(ie){pe.call(this,t,ie)}function _(ie){pe.call(this,t,ie)}function k(ie){pe.call(this,t,ie)}function D(ie){pe.call(this,t,ie)}function R(ie){pe.call(this,t,ie)}function q(ie){pe.call(this,t,ie)}let H=()=>m.goToNextYear(),ne=()=>m.goToPreviousYear();function ye(ie){pe.call(this,t,ie)}function ae(ie){pe.call(this,t,ie)}function me(ie){pe.call(this,t,ie)}function Z(ie){pe.call(this,t,ie)}function z(ie){pe.call(this,t,ie)}function ue(ie){pe.call(this,t,ie)}function ke(ie){pe.call(this,t,ie)}let Ce=()=>m.goToNext(),ve=()=>m.goToPrevious();function Ee(ie){pe.call(this,t,ie)}function et(ie){pe.call(this,t,ie)}function Pe(ie){pe.call(this,t,ie)}function ht(ie){pe.call(this,t,ie)}function Bt(ie){pe.call(this,t,ie)}function pt(ie){pe.call(this,t,ie)}function Ct(ie){pe.call(this,t,ie)}function xt(ie){pe.call(this,t,ie)}let Lt=()=>n(0,u=!1);function Pt(ie){pe.call(this,t,ie)}function Wt(ie){pe.call(this,t,ie)}function Qt(ie){pe.call(this,t,ie)}function $n(ie){pe.call(this,t,ie)}return t.$$set=ie=>{"fullView"in ie&&n(1,d=ie.fullView),"dayView"in ie&&n(0,u=ie.dayView),"yearView"in ie&&n(2,c=ie.yearView),"calendar"in ie&&n(3,m=ie.calendar),"moons"in ie&&n(12,g=ie.moons),"displayDayNumber"in ie&&n(4,p=ie.displayDayNumber),"displayWeeks"in ie&&n(5,E=ie.displayWeeks)},t.$$.update=()=>{if(t.$$.dirty[0]&4){e:c&&n(0,u=!1)}if(t.$$.dirty[0]&1){e:y.set(u)}if(t.$$.dirty[0]&4096){e:S.set(g)}if(t.$$.dirty[0]&8){e:C.set(m)}if(t.$$.dirty[0]&8){e:n(11,r=m.weekdays)}if(t.$$.dirty[0]&8){e:n(10,a=m.displayed.year)}if(t.$$.dirty[0]&8){e:n(9,i=m.getNameForYear(m.displayed.year))}if(t.$$.dirty[0]&8){e:n(6,o=m.currentMonth)}if(t.$$.dirty[0]&72){e:n(8,l=m.weekNumbersOfMonth(o))}if(t.$$.dirty[0]&72){e:n(7,s=m.weeksOfMonth(o))}},[u,d,c,m,p,E,o,s,l,i,a,r,g,F,M,T,x,_,k,D,R,q,H,ne,ye,ae,me,Z,z,ue,ke,Ce,ve,Ee,et,Pe,ht,Bt,pt,Ct,xt,Lt,Pt,Wt,Qt,$n]}var pf=class extends le{constructor(e){super();ce(this,e,Uv,Gv,oe,{fullView:1,dayView:0,yearView:2,calendar:3,moons:12,displayDayNumber:4,displayWeeks:5},jv,[-1,-1])}},mf=pf;var Ht="FANTASY_CALENDAR",Zn="FANTASY_CALENDAR_FULL_VIEW";(0,Ne.addIcon)(Ht,'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="far" data-icon="calendar" class="svg-inline--fa fa-calendar fa-w-14" role="img" viewBox="0 0 448 512"><path xmlns="http://www.w3.org/2000/svg" fill="currentColor" d="M400 64h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V160h352v298c0 3.3-2.7 6-6 6z"/><path fill="currentColor" d="M18.32 255.78L192 223.96l-91.28 68.69c-10.08 10.08-2.94 27.31 11.31 27.31h222.7c-9.44-26.4-14.73-54.47-14.73-83.38v-42.27l-119.73-87.6c-23.82-15.88-55.29-14.01-77.06 4.59L5.81 227.64c-12.38 10.33-3.45 30.42 12.51 28.14zm556.87 34.1l-100.66-50.31A47.992 47.992 0 0 1 448 196.65v-36.69h64l28.09 22.63c6 6 14.14 9.37 22.63 9.37h30.97a32 32 0 0 0 28.62-17.69l14.31-28.62a32.005 32.005 0 0 0-3.02-33.51l-74.53-99.38C553.02 4.7 543.54 0 533.47 0H296.02c-7.13 0-10.7 8.57-5.66 13.61L352 63.96 292.42 88.8c-5.9 2.95-5.9 11.36 0 14.31L352 127.96v108.62c0 72.08 36.03 139.39 96 179.38-195.59 6.81-344.56 41.01-434.1 60.91C5.78 478.67 0 485.88 0 494.2 0 504 7.95 512 17.76 512h499.08c63.29.01 119.61-47.56 122.99-110.76 2.52-47.28-22.73-90.4-64.64-111.36zM489.18 66.25l45.65 11.41c-2.75 10.91-12.47 18.89-24.13 18.26-12.96-.71-25.85-12.53-21.52-29.67z" style="&#10;    transform: scale(0.4125) translate(50%, 95%);&#10;"/></svg>');(0,Ne.addIcon)("fantasy-calendar-reveal",'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="calendar-day" class="svg-inline--fa fa-calendar-day fa-w-14" role="img" viewBox="0 0 448 512"><path fill="currentColor" d="M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h96c8.8 0 16 7.2 16 16v96c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-96zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z"/></svg>');var Tn=class extends Ne.ItemView{constructor(e,n,r={}){super(n);this.plugin=e;this.leaf=n;this.options=r;this.updateMe=!0;this.yearView=!1;this.moons=!0;this.containerEl.addClass("fantasy-calendar-view"),this.contentEl.addClass("fantasy-calendar-view-content"),this.registerEvent(this.plugin.app.workspace.on("fantasy-calendars-updated",()=>{this.updateCalendars()})),this.registerEvent(this.plugin.app.workspace.on("layout-change",()=>{!this._app||this._app.$set({fullView:this.full,...this.full?{dayView:!1}:{}})}))}get root(){return this.leaf.getRoot()}get full(){return!("collapse"in this.root)}updateCalendars(){if(!this.updateMe){this.updateMe=!0;return}if(!this.plugin.data.calendars.length){this._app?.$destroy(),this.contentEl.empty(),this.noCalendarEl=this.contentEl.createDiv("fantasy-no-calendar"),this.noCalendarEl.createSpan({text:"No calendars created! Create a calendar to see it here."});return}let e=this.plugin.data.calendars.find(n=>n.id==this.calendar?.id)??this.plugin.defaultCalendar??this.plugin.data.calendars[0];this.helper&&this.helper.calendar.id==e.id?this.update(e):this.setCurrentCalendar(e)}update(e){this.calendar=e,this.helper.update(this.calendar),this.registerCalendarInterval(),this._app?this._app.$set({calendar:this.helper}):this.build()}registerCalendarInterval(){if(this.interval&&(clearInterval(this.interval),this.interval=null),this.calendar.static.incrementDay){let e=new Date;this.calendar.date||(this.calendar.date=e.valueOf());let n=Yi(new Date(this.calendar.date),e);if(n>=1){for(let r=0;r<n;r++)this.helper.goToNextCurrentDay();this.calendar.date=e.valueOf(),this.plugin.saveSettings()}this.interval=window.setInterval(()=>{Yi(new Date,e)>=1&&(this.helper.goToNextCurrentDay(),this.helper.current,e=new Date,this.calendar.date=e.valueOf(),this.plugin.saveSettings())},60*1e3),this.registerInterval(this.interval)}}setCurrentCalendar(e){this.noCalendarEl?.detach(),this.calendar=e,this.moons=this.calendar.static.displayMoons,this.dayNumber=this.calendar.static.displayDayNumber,this.helper=new Cr(this.calendar,this.plugin),this.registerCalendarInterval(),this.build()}createEventForDay(e){let n=new Er(this.app,this.calendar,null,e);n.onClose=()=>{!n.saved||(this.calendar.events.push(n.event),this.plugin.saveSettings(),this._app.$set({calendar:this.helper}),this.triggerHelperEvent("day-update"))},n.open()}async onOpen(){this.updateCalendars()}build(){this.contentEl.empty(),this._app=new mf({target:this.contentEl,props:{calendar:this.helper,fullView:this.full,yearView:this.yearView,moons:this.moons,displayWeeks:this.helper.displayWeeks,displayDayNumber:this.dayNumber}}),this._app.$on("day-click",e=>{let n=e.detail;n.events.length||this.createEventForDay(n.date)}),this._app.$on("day-doubleclick",e=>{let n=e.detail;!n.events.length||(this.helper.viewing.day=n.number,this.helper.viewing.month=this.helper.displayed.month,this.helper.viewing.year=this.helper.displayed.year,this.yearView=!1,this._app.$set({yearView:!1}),this._app.$set({dayView:!0}),this.triggerHelperEvent("day-update",!1))}),this._app.$on("day-context-menu",e=>{let{day:n,evt:r}=e.detail,a=new Ne.Menu(this.app);a.setNoIcon(),this.full||a.addItem(i=>{i.setTitle("Open Day").onClick(()=>{this.openDay({day:n.number,month:this.helper.displayed.month,year:this.helper.displayed.year})})}),a.addItem(i=>{i.setTitle("Set as Today").onClick(()=>{this.calendar.current=n.date,this.helper.current.day=n.number,this.triggerHelperEvent("day-update"),this.plugin.saveSettings()})}),a.addItem(i=>i.setTitle("New Event").onClick(()=>{this.createEventForDay(n.date)})),a.showAtMouseEvent(r)}),this._app.$on("settings",e=>{let n=e.detail,r=new Ne.Menu(this.app);r.setNoIcon(),r.addItem(a=>{a.setTitle(`${this.calendar.displayWeeks?"Hide":"Show"} Weeks`).onClick(()=>{this.calendar.displayWeeks=!this.calendar.displayWeeks,this.helper.update(this.calendar),this._app.$set({displayWeeks:this.calendar.displayWeeks}),this.plugin.saveSettings()})}),r.addItem(a=>{a.setTitle(`Open ${this.yearView?"Month":"Year"}`).onClick(()=>{this.yearView=!this.yearView,this._app.$set({yearView:this.yearView})})}),r.addItem(a=>{a.setTitle(this.moons?"Hide Moons":"Display Moons").onClick(()=>{this.toggleMoons()})}),r.addItem(a=>{a.setTitle(this.dayNumber?"Hide Day Number":"Display Day Number").onClick(()=>{this.dayNumber=!this.dayNumber,this.calendar.static.displayDayNumber=this.dayNumber,this._app.$set({displayDayNumber:this.dayNumber}),this.plugin.saveSettings()})}),r.addItem(a=>{a.setTitle("View Day"),a.onClick(()=>{this.openDate()})}),r.addItem(a=>{a.setTitle("Switch Calendars"),a.setDisabled(this.plugin.data.calendars.length<=1),a.onClick(()=>{let i=new gf(this.plugin,this.calendar);i.onClose=()=>{!i.confirmed||this.setCurrentCalendar(i.calendar)},i.open()})}),r.showAtMouseEvent(n)}),this._app.$on("event-click",e=>{let{event:n,modifier:r}=e.detail;if(n.note){let a=[];this.app.workspace.iterateAllLeaves(i=>{i.view instanceof Ne.MarkdownView&&i.view.file.basename===n.note&&a.push(i)}),a.length?this.app.workspace.setActiveLeaf(a[0]):this.app.workspace.openLinkText(n.note,"",this.full||r)}else new vf(n,this.plugin).open()}),this._app.$on("event-mouseover",e=>{if(!this.plugin.data.eventPreview)return;let{target:n,event:r}=e.detail;r.note&&this.app.workspace.trigger("link-hover",this,n,r.note,"")}),this._app.$on("event-context",e=>{let{evt:n,event:r}=e.detail,a=new Ne.Menu(this.app);a.setNoIcon(),r.note||a.addItem(i=>{i.setTitle("Create Note").onClick(async()=>{let o=this.app.workspace.getActiveFile()?.path,l=o?this.app.fileManager.getNewFileParent(o)?.parent??"/":"/",s=`${r.date.year}-${r.date.month+1}-${r.date.day}`,d;r.end&&(d=`${r.end.year}-${r.end.month+1}-${r.end.day}`);let u={"fc-calendar":this.calendar.name,"fc-date":s,...r.end?{"fc-end":d}:{},...r.category?{"fc-category":this.calendar.categories.find(m=>m.id==r.category)?.name}:{}};r.note=(0,Ne.normalizePath)(`${l}/${r.name}.md`);let c=this.app.vault.getAbstractFileByPath(r.note);if(c||(c=await this.app.vault.create(r.note,`---
${(0,Ne.stringifyYaml)(u)}
---`)),this.plugin.saveCalendar(),c instanceof Ne.TFile){let g=this.app.workspace.getLeavesOfType("markdown").find(p=>{p.view instanceof Ne.FileView&&p.view.file.path==r.note});g?this.app.workspace.setActiveLeaf(g):await this.app.workspace.getUnpinnedLeaf().openFile(c,{active:!0})}})}),a.addItem(i=>{i.setTitle("Edit Event").onClick(()=>{let o=new Er(this.app,this.calendar,r);o.onClose=()=>{if(!o.saved)return;let l=this.calendar.events.find(s=>s.id==r.id);this.calendar.events.splice(this.calendar.events.indexOf(l),1,o.event),this.plugin.saveSettings(),this._app.$set({calendar:this.helper}),this.triggerHelperEvent("day-update")},o.open()})}),a.addItem(i=>{i.setTitle("Delete Event").onClick(async()=>{if(await vr(this.app,"Are you sure you wish to delete this event?",{cta:"Delete",secondary:"Cancel"})){let o=this.calendar.events.find(l=>l.id==r.id);this.calendar.events.splice(this.calendar.events.indexOf(o),1),this.plugin.saveSettings(),this._app.$set({calendar:this.helper}),this.triggerHelperEvent("day-update")}})}),a.showAtMouseEvent(n)}),this._app.$on("event",e=>{let n=e.detail;this.createEventForDay(n)}),this._app.$on("reset",()=>{this.helper.reset(),this.yearView=!1,this._app.$set({yearView:!1}),this._app.$set({dayView:!0}),this.triggerHelperEvent("day-update",!1)})}openDay(e){this.helper.viewing.day=e.day,this.helper.viewing.month=e.month,this.helper.viewing.year=e.year,this.yearView=!1,this._app.$set({yearView:!1}),this._app.$set({dayView:!0}),this.triggerHelperEvent("day-update",!1)}openDate(){if(!this.helper||!this.calendar)return;let e=new yf(this.plugin,this.calendar);e.onClose=()=>{!e.confirmed||(e.setCurrent?(this.calendar.current={...e.date},this.setCurrentCalendar(this.calendar)):(this.helper.displayed={...e.date},this.helper.update(),this._app.$set({calendar:this.helper})),this.plugin.saveSettings())},e.open()}toggleMoons(){this.moons=!this.moons,this._app.$set({moons:this.moons})}async onClose(){}onResize(){this.triggerHelperEvent("view-resized",!1)}getViewType(){return Ht}getDisplayText(){return"Fantasy Calendar"}getIcon(){return Ht}triggerHelperEvent(e,n=!0){!this.helper||(this.helper.trigger(e),n&&(this.updateMe=!1,this.plugin.app.workspace.trigger("fantasy-calendars-updated")))}async onunload(){}},gf=class extends Ne.Modal{constructor(e,n){super(e.app);this.plugin=e;this.calendar=n;this.confirmed=!1}async display(){this.contentEl.empty(),this.contentEl.createEl("h4",{text:"Switch Calendars"});let e=this.contentEl.createDiv("fantasy-calendar-dropdown");e.createEl("label",{text:"Choose a Calendar"}),new Ne.DropdownComponent(e).onChange(a=>{this.calendar=this.plugin.data.calendars.find(i=>i.id==a)}).addOptions(Object.fromEntries(this.plugin.data.calendars.map(a=>[a.id,a.name]))).setValue(this.calendar?this.calendar.id:null);let r=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new Ne.ButtonComponent(r).setButtonText("Switch").setCta().onClick(()=>{this.confirmed=!0,this.close()}),new Ne.ButtonComponent(r).setButtonText("Cancel").onClick(()=>{this.close()})}onOpen(){this.display()}},yf=class extends Ne.Modal{constructor(e,n){super(e.app);this.plugin=e;this.calendar=n;this.confirmed=!1;this.setCurrent=!1;this.date={...this.calendar.current},this.tempCurrentDays=this.date.day}async display(){this.contentEl.empty(),this.contentEl.createEl("h4",{text:"View Day"}),this.dateFieldEl=this.contentEl.createDiv("fantasy-calendar-date-fields"),this.buildDateFields(),new Ne.Setting(this.contentEl).setName("Set as Current Date").setDesc("Also set this date to today's date.").addToggle(n=>n.setValue(this.setCurrent).onChange(r=>{this.setCurrent=r}));let e=this.contentEl.createDiv("fantasy-calendar-confirm-buttons");new Ne.ButtonComponent(e).setButtonText("Switch").setCta().onClick(()=>{this.confirmed=!0,this.date.day=this.tempCurrentDays,this.close()}),new Ne.ButtonComponent(e).setButtonText("Cancel").onClick(()=>{this.close()})}buildDateFields(){this.dateFieldEl.empty(),this.tempCurrentDays!=null&&this.date.month!=null&&this.tempCurrentDays>this.calendar.static.months[this.date.month]?.length&&(this.tempCurrentDays=this.calendar.static.months[this.date.month]?.length);let e=this.dateFieldEl.createDiv("fantasy-calendar-date-field");e.createEl("label",{text:"Day"}),new Ne.TextComponent(e).setPlaceholder("Day").setValue(`${this.tempCurrentDays}`).setDisabled(this.date.month==null).onChange(i=>{if(Number(i)<1||Number(i)>this.calendar.static.months[this.date.month]?.length){new Ne.Notice(`The current day must be between 1 and ${this.calendar.static.months[this.date.month].length}`),this.tempCurrentDays=this.date.day,this.buildDateFields();return}this.tempCurrentDays=Number(i)}).inputEl.setAttr("type","number");let r=this.dateFieldEl.createDiv("fantasy-calendar-date-field");r.createEl("label",{text:"Month"}),new Ne.DropdownComponent(r).addOptions(Object.fromEntries([["select","Select Month"],...this.calendar.static.months.map(i=>[i.name,i.name])])).setValue(this.date.month!=null?this.calendar.static.months[this.date.month].name:"select").onChange(i=>{i==="select"&&(this.date.month=null);let o=this.calendar.static.months.find(l=>l.name==i);this.date.month=this.calendar.static.months.indexOf(o),this.buildDateFields()});let a=this.dateFieldEl.createDiv("fantasy-calendar-date-field");if(a.createEl("label",{text:"Year"}),this.calendar.static.useCustomYears){let i=new Ne.DropdownComponent(a);(this.calendar.static.years??[]).forEach(o=>{i.addOption(o.id,o.name)}),this.date.year>this.calendar.static.years?.length&&(this.date.year=this.calendar.static.years?this.calendar.static.years.length:null),i.setValue(this.calendar.static.years?.[this.date.year-1]?.id).onChange(o=>{this.date.year=this.calendar.static.years.findIndex(l=>l.id==o)+1})}else new Ne.TextComponent(a).setPlaceholder("Year").setValue(`${this.date.year}`).onChange(o=>{this.date.year=Number(o)}).inputEl.setAttr("type","number")}onOpen(){this.display()}},vf=class extends Ne.Modal{constructor(e,n){super(n.app);this.event=e;this.plugin=n;this.containerEl.addClass("fantasy-calendar-view-event")}async display(){this.contentEl.empty(),this.contentEl.createEl("h4",{text:this.event.name}),await Ne.MarkdownRenderer.renderMarkdown(this.event.description,this.contentEl,this.event.note,null)}async onOpen(){await this.display()}};var i8=Oe(require("fs")),on=Oe(require("obsidian"));function Ko(t){let e=new Blob([t],{type:"text/javascript"}),n=URL.createObjectURL(e),r=new Worker(n);return URL.revokeObjectURL(n),r}function Qo(){return Ko(`var ee=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var Re=ee(Ie=>{Ie.entityMap={lt:"<",gt:">",amp:"&",quot:'"',apos:"'",Agrave:"\\xC0",Aacute:"\\xC1",Acirc:"\\xC2",Atilde:"\\xC3",Auml:"\\xC4",Aring:"\\xC5",AElig:"\\xC6",Ccedil:"\\xC7",Egrave:"\\xC8",Eacute:"\\xC9",Ecirc:"\\xCA",Euml:"\\xCB",Igrave:"\\xCC",Iacute:"\\xCD",Icirc:"\\xCE",Iuml:"\\xCF",ETH:"\\xD0",Ntilde:"\\xD1",Ograve:"\\xD2",Oacute:"\\xD3",Ocirc:"\\xD4",Otilde:"\\xD5",Ouml:"\\xD6",Oslash:"\\xD8",Ugrave:"\\xD9",Uacute:"\\xDA",Ucirc:"\\xDB",Uuml:"\\xDC",Yacute:"\\xDD",THORN:"\\xDE",szlig:"\\xDF",agrave:"\\xE0",aacute:"\\xE1",acirc:"\\xE2",atilde:"\\xE3",auml:"\\xE4",aring:"\\xE5",aelig:"\\xE6",ccedil:"\\xE7",egrave:"\\xE8",eacute:"\\xE9",ecirc:"\\xEA",euml:"\\xEB",igrave:"\\xEC",iacute:"\\xED",icirc:"\\xEE",iuml:"\\xEF",eth:"\\xF0",ntilde:"\\xF1",ograve:"\\xF2",oacute:"\\xF3",ocirc:"\\xF4",otilde:"\\xF5",ouml:"\\xF6",oslash:"\\xF8",ugrave:"\\xF9",uacute:"\\xFA",ucirc:"\\xFB",uuml:"\\xFC",yacute:"\\xFD",thorn:"\\xFE",yuml:"\\xFF",nbsp:"\\xA0",iexcl:"\\xA1",cent:"\\xA2",pound:"\\xA3",curren:"\\xA4",yen:"\\xA5",brvbar:"\\xA6",sect:"\\xA7",uml:"\\xA8",copy:"\\xA9",ordf:"\\xAA",laquo:"\\xAB",not:"\\xAC",shy:"\\xAD\\xAD",reg:"\\xAE",macr:"\\xAF",deg:"\\xB0",plusmn:"\\xB1",sup2:"\\xB2",sup3:"\\xB3",acute:"\\xB4",micro:"\\xB5",para:"\\xB6",middot:"\\xB7",cedil:"\\xB8",sup1:"\\xB9",ordm:"\\xBA",raquo:"\\xBB",frac14:"\\xBC",frac12:"\\xBD",frac34:"\\xBE",iquest:"\\xBF",times:"\\xD7",divide:"\\xF7",forall:"\\u2200",part:"\\u2202",exist:"\\u2203",empty:"\\u2205",nabla:"\\u2207",isin:"\\u2208",notin:"\\u2209",ni:"\\u220B",prod:"\\u220F",sum:"\\u2211",minus:"\\u2212",lowast:"\\u2217",radic:"\\u221A",prop:"\\u221D",infin:"\\u221E",ang:"\\u2220",and:"\\u2227",or:"\\u2228",cap:"\\u2229",cup:"\\u222A",int:"\\u222B",there4:"\\u2234",sim:"\\u223C",cong:"\\u2245",asymp:"\\u2248",ne:"\\u2260",equiv:"\\u2261",le:"\\u2264",ge:"\\u2265",sub:"\\u2282",sup:"\\u2283",nsub:"\\u2284",sube:"\\u2286",supe:"\\u2287",oplus:"\\u2295",otimes:"\\u2297",perp:"\\u22A5",sdot:"\\u22C5",Alpha:"\\u0391",Beta:"\\u0392",Gamma:"\\u0393",Delta:"\\u0394",Epsilon:"\\u0395",Zeta:"\\u0396",Eta:"\\u0397",Theta:"\\u0398",Iota:"\\u0399",Kappa:"\\u039A",Lambda:"\\u039B",Mu:"\\u039C",Nu:"\\u039D",Xi:"\\u039E",Omicron:"\\u039F",Pi:"\\u03A0",Rho:"\\u03A1",Sigma:"\\u03A3",Tau:"\\u03A4",Upsilon:"\\u03A5",Phi:"\\u03A6",Chi:"\\u03A7",Psi:"\\u03A8",Omega:"\\u03A9",alpha:"\\u03B1",beta:"\\u03B2",gamma:"\\u03B3",delta:"\\u03B4",epsilon:"\\u03B5",zeta:"\\u03B6",eta:"\\u03B7",theta:"\\u03B8",iota:"\\u03B9",kappa:"\\u03BA",lambda:"\\u03BB",mu:"\\u03BC",nu:"\\u03BD",xi:"\\u03BE",omicron:"\\u03BF",pi:"\\u03C0",rho:"\\u03C1",sigmaf:"\\u03C2",sigma:"\\u03C3",tau:"\\u03C4",upsilon:"\\u03C5",phi:"\\u03C6",chi:"\\u03C7",psi:"\\u03C8",omega:"\\u03C9",thetasym:"\\u03D1",upsih:"\\u03D2",piv:"\\u03D6",OElig:"\\u0152",oelig:"\\u0153",Scaron:"\\u0160",scaron:"\\u0161",Yuml:"\\u0178",fnof:"\\u0192",circ:"\\u02C6",tilde:"\\u02DC",ensp:"\\u2002",emsp:"\\u2003",thinsp:"\\u2009",zwnj:"\\u200C",zwj:"\\u200D",lrm:"\\u200E",rlm:"\\u200F",ndash:"\\u2013",mdash:"\\u2014",lsquo:"\\u2018",rsquo:"\\u2019",sbquo:"\\u201A",ldquo:"\\u201C",rdquo:"\\u201D",bdquo:"\\u201E",dagger:"\\u2020",Dagger:"\\u2021",bull:"\\u2022",hellip:"\\u2026",permil:"\\u2030",prime:"\\u2032",Prime:"\\u2033",lsaquo:"\\u2039",rsaquo:"\\u203A",oline:"\\u203E",euro:"\\u20AC",trade:"\\u2122",larr:"\\u2190",uarr:"\\u2191",rarr:"\\u2192",darr:"\\u2193",harr:"\\u2194",crarr:"\\u21B5",lceil:"\\u2308",rceil:"\\u2309",lfloor:"\\u230A",rfloor:"\\u230B",loz:"\\u25CA",spades:"\\u2660",clubs:"\\u2663",hearts:"\\u2665",diams:"\\u2666"}});var Pe=ee(pe=>{var fe=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/,Oe=new RegExp("[\\\\-\\\\.0-9"+fe.source.slice(1,-1)+"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]"),Se=new RegExp("^"+fe.source+Oe.source+"*(?::"+fe.source+Oe.source+"*)?$"),z=0,O=1,$=2,j=3,F=4,L=5,G=6,te=7;function P(e,t){this.message=e,this.locator=t,Error.captureStackTrace&&Error.captureStackTrace(this,P)}P.prototype=new Error;P.prototype.name=P.name;function Me(){}Me.prototype={parse:function(e,t,n){var r=this.domBuilder;r.startDocument(),Fe(t,t={}),vt(e,t,n,r,this.errorHandler),r.endDocument()}};function vt(e,t,n,r,a){function i(v){if(v>65535){v-=65536;var C=55296+(v>>10),dt=56320+(v&1023);return String.fromCharCode(C,dt)}else return String.fromCharCode(v)}function o(v){var C=v.slice(1,-1);return C in n?n[C]:C.charAt(0)==="#"?i(parseInt(C.substr(1).replace("x","0x"))):(a.error("entity not found:"+v),v)}function c(v){if(v>m){var C=e.substring(m,v).replace(/&#?\\w+;/g,o);p&&l(m),r.characters(C,0,v-m),m=v}}function l(v,C){for(;v>=u&&(C=h.exec(e));)s=C.index,u=s+C[0].length,p.lineNumber++;p.columnNumber=v-s+1}for(var s=0,u=0,h=/.*(?:\\r\\n?|\\n)|.*$/g,p=r.locator,d=[{currentNSMap:t}],T={},m=0;;){try{var f=e.indexOf("<",m);if(f<0){if(!e.substr(m).match(/^\\s*$/)){var A=r.doc,be=A.createTextNode(e.substr(m));A.appendChild(be),r.currentElement=be}return}switch(f>m&&c(f),e.charAt(f+1)){case"/":var y=e.indexOf(">",f+3),_=e.substring(f+2,y),I=d.pop();y<0?(_=e.substring(f+2).replace(/[\\s<].*/,""),a.error("end tag name: "+_+" is not complete:"+I.tagName),y=f+1+_.length):_.match(/\\s</)&&(_=_.replace(/[\\s<].*/,""),a.error("end tag name: "+_+" maybe not complete"),y=f+1+_.length);var _e=I.localNSMap,Ce=I.tagName==_,pt=Ce||I.tagName&&I.tagName.toLowerCase()==_.toLowerCase();if(pt){if(r.endElement(I.uri,I.localName,_),_e)for(var mt in _e)r.endPrefixMapping(mt);Ce||a.fatalError("end tag name: "+_+" is not match the current start tagName:"+I.tagName)}else d.push(I);y++;break;case"?":p&&l(f),y=Dt(e,f,r);break;case"!":p&&l(f),y=yt(e,f,r,a);break;default:p&&l(f);var b=new Le,se=d[d.length-1].currentNSMap,y=gt(e,f,b,se,o,a),xe=b.length;if(!b.closed&&Nt(e,y,b.tagName,T)&&(b.closed=!0,n.nbsp||a.warning("unclosed xml attribute")),p&&xe){for(var ht=Ue(p,{}),ue=0;ue<xe;ue++){var Ae=b[ue];l(Ae.offset),Ae.locator=Ue(p,{})}r.locator=ht,$e(b,r,se)&&d.push(b),r.locator=p}else $e(b,r,se)&&d.push(b);b.uri==="http://www.w3.org/1999/xhtml"&&!b.closed?y=Et(e,y,b.tagName,o,r):y++}}catch(v){if(v instanceof P)throw v;a.error("element parse error: "+v),y=-1}y>m?m=y:c(Math.max(f,m)+1)}}function Ue(e,t){return t.lineNumber=e.lineNumber,t.columnNumber=e.columnNumber,t}function gt(e,t,n,r,a,i){function o(d,T,m){d in n.attributeNames&&i.fatalError("Attribute "+d+" redefined"),n.addValue(d,T,m)}for(var c,l,s=++t,u=z;;){var h=e.charAt(s);switch(h){case"=":if(u===O)c=e.slice(t,s),u=j;else if(u===$)u=j;else throw new Error("attribute equal must after attrName");break;case"'":case'"':if(u===j||u===O)if(u===O&&(i.warning('attribute value must after "="'),c=e.slice(t,s)),t=s+1,s=e.indexOf(h,t),s>0)l=e.slice(t,s).replace(/&#?\\w+;/g,a),o(c,l,t-1),u=L;else throw new Error("attribute value no end '"+h+"' match");else if(u==F)l=e.slice(t,s).replace(/&#?\\w+;/g,a),o(c,l,t),i.warning('attribute "'+c+'" missed start quot('+h+")!!"),t=s+1,u=L;else throw new Error('attribute value must after "="');break;case"/":switch(u){case z:n.setTagName(e.slice(t,s));case L:case G:case te:u=te,n.closed=!0;case F:case O:case $:break;default:throw new Error("attribute invalid close char('/')")}break;case"":return i.error("unexpected end of input"),u==z&&n.setTagName(e.slice(t,s)),s;case">":switch(u){case z:n.setTagName(e.slice(t,s));case L:case G:case te:break;case F:case O:l=e.slice(t,s),l.slice(-1)==="/"&&(n.closed=!0,l=l.slice(0,-1));case $:u===$&&(l=c),u==F?(i.warning('attribute "'+l+'" missed quot(")!'),o(c,l.replace(/&#?\\w+;/g,a),t)):((r[""]!=="http://www.w3.org/1999/xhtml"||!l.match(/^(?:disabled|checked|selected)$/i))&&i.warning('attribute "'+l+'" missed value!! "'+l+'" instead!!'),o(l,l,t));break;case j:throw new Error("attribute value missed!!")}return s;case"\\x80":h=" ";default:if(h<=" ")switch(u){case z:n.setTagName(e.slice(t,s)),u=G;break;case O:c=e.slice(t,s),u=$;break;case F:var l=e.slice(t,s).replace(/&#?\\w+;/g,a);i.warning('attribute "'+l+'" missed quot(")!!'),o(c,l,t);case L:u=G;break}else switch(u){case $:var p=n.tagName;(r[""]!=="http://www.w3.org/1999/xhtml"||!c.match(/^(?:disabled|checked|selected)$/i))&&i.warning('attribute "'+c+'" missed value!! "'+c+'" instead2!!'),o(c,c,t),t=s,u=O;break;case L:i.warning('attribute space is required"'+c+'"!!');case G:u=O,t=s;break;case j:u=F,t=s;break;case te:throw new Error("elements closed character '/' and '>' must be connected to")}}s++}}function $e(e,t,n){for(var r=e.tagName,a=null,i=e.length;i--;){var o=e[i],c=o.qName,l=o.value,p=c.indexOf(":");if(p>0)var s=o.prefix=c.slice(0,p),u=c.slice(p+1),h=s==="xmlns"&&u;else u=c,s=null,h=c==="xmlns"&&"";o.localName=u,h!==!1&&(a==null&&(a={},Fe(n,n={})),n[h]=a[h]=l,o.uri="http://www.w3.org/2000/xmlns/",t.startPrefixMapping(h,l))}for(var i=e.length;i--;){o=e[i];var s=o.prefix;s&&(s==="xml"&&(o.uri="http://www.w3.org/XML/1998/namespace"),s!=="xmlns"&&(o.uri=n[s||""]))}var p=r.indexOf(":");p>0?(s=e.prefix=r.slice(0,p),u=e.localName=r.slice(p+1)):(s=null,u=e.localName=r);var d=e.uri=n[s||""];if(t.startElement(d,u,r,e),e.closed){if(t.endElement(d,u,r),a)for(s in a)t.endPrefixMapping(s)}else return e.currentNSMap=n,e.localNSMap=a,!0}function Et(e,t,n,r,a){if(/^(?:script|textarea)$/i.test(n)){var i=e.indexOf("</"+n+">",t),o=e.substring(t+1,i);if(/[&<]/.test(o))return/^script$/i.test(n)?(a.characters(o,0,o.length),i):(o=o.replace(/&#?\\w+;/g,r),a.characters(o,0,o.length),i)}return t+1}function Nt(e,t,n,r){var a=r[n];return a==null&&(a=e.lastIndexOf("</"+n+">"),a<t&&(a=e.lastIndexOf("</"+n)),r[n]=a),a<t}function Fe(e,t){for(var n in e)t[n]=e[n]}function yt(e,t,n,r){var a=e.charAt(t+2);switch(a){case"-":if(e.charAt(t+3)==="-"){var i=e.indexOf("-->",t+4);return i>t?(n.comment(e,t+4,i-t-4),i+3):(r.error("Unclosed comment"),-1)}else return-1;default:if(e.substr(t+3,6)=="CDATA["){var i=e.indexOf("]]>",t+9);return n.startCDATA(),n.characters(e,t+9,i-t-9),n.endCDATA(),i+3}var o=wt(e,t),c=o.length;if(c>1&&/!doctype/i.test(o[0][0])){var l=o[1][0],s=!1,u=!1;c>3&&(/^public$/i.test(o[2][0])?(s=o[3][0],u=c>4&&o[4][0]):/^system$/i.test(o[2][0])&&(u=o[3][0]));var h=o[c-1];return n.startDTD(l,s,u),n.endDTD(),h.index+h[0].length}}return-1}function Dt(e,t,n){var r=e.indexOf("?>",t);if(r){var a=e.substring(t,r).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(a){var i=a[0].length;return n.processingInstruction(a[1],a[2]),r+2}else return-1}return-1}function Le(){this.attributeNames={}}Le.prototype={setTagName:function(e){if(!Se.test(e))throw new Error("invalid tagName:"+e);this.tagName=e},addValue:function(e,t,n){if(!Se.test(e))throw new Error("invalid attribute:"+e);this.attributeNames[e]=this.length,this[this.length++]={qName:e,value:t,offset:n}},length:0,getLocalName:function(e){return this[e].localName},getLocator:function(e){return this[e].locator},getQName:function(e){return this[e].qName},getURI:function(e){return this[e].uri},getValue:function(e){return this[e].value}};function wt(e,t){var n,r=[],a=/'[^']+'|"[^"]+"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;for(a.lastIndex=t,a.exec(e);n=a.exec(e);)if(r.push(n),n[1])return r}pe.XMLReader=Me;pe.ParseError=P});var we=ee(K=>{function W(e,t){for(var n in e)t[n]=e[n]}function D(e,t){var n=e.prototype;if(!(n instanceof t)){let a=function(){};var r=a;a.prototype=t.prototype,a=new a,W(n,a),e.prototype=n=a}n.constructor!=e&&(typeof e!="function"&&console.error("unknow Class:"+e),n.constructor=e)}var Tt="http://www.w3.org/1999/xhtml",w={},x=w.ELEMENT_NODE=1,k=w.ATTRIBUTE_NODE=2,ne=w.TEXT_NODE=3,ke=w.CDATA_SECTION_NODE=4,Ve=w.ENTITY_REFERENCE_NODE=5,bt=w.ENTITY_NODE=6,qe=w.PROCESSING_INSTRUCTION_NODE=7,Xe=w.COMMENT_NODE=8,Ye=w.DOCUMENT_NODE=9,ze=w.DOCUMENT_TYPE_NODE=10,R=w.DOCUMENT_FRAGMENT_NODE=11,_t=w.NOTATION_NODE=12,E={},g={},qt=E.INDEX_SIZE_ERR=(g[1]="Index size error",1),Xt=E.DOMSTRING_SIZE_ERR=(g[2]="DOMString size error",2),Ct=E.HIERARCHY_REQUEST_ERR=(g[3]="Hierarchy request error",3),Yt=E.WRONG_DOCUMENT_ERR=(g[4]="Wrong document",4),zt=E.INVALID_CHARACTER_ERR=(g[5]="Invalid character",5),jt=E.NO_DATA_ALLOWED_ERR=(g[6]="No data allowed",6),Gt=E.NO_MODIFICATION_ALLOWED_ERR=(g[7]="No modification allowed",7),xt=E.NOT_FOUND_ERR=(g[8]="Not found",8),Wt=E.NOT_SUPPORTED_ERR=(g[9]="Not supported",9),je=E.INUSE_ATTRIBUTE_ERR=(g[10]="Attribute in use",10),Qt=E.INVALID_STATE_ERR=(g[11]="Invalid state",11),Bt=E.SYNTAX_ERR=(g[12]="Syntax error",12),Zt=E.INVALID_MODIFICATION_ERR=(g[13]="Invalid modification",13),Kt=E.NAMESPACE_ERR=(g[14]="Invalid namespace",14),Jt=E.INVALID_ACCESS_ERR=(g[15]="Invalid access",15);function U(e,t){if(t instanceof Error)var n=t;else n=this,Error.call(this,g[e]),this.message=g[e],Error.captureStackTrace&&Error.captureStackTrace(this,U);return n.code=e,t&&(this.message=this.message+": "+t),n}U.prototype=Error.prototype;W(E,U);function S(){}S.prototype={length:0,item:function(e){return this[e]||null},toString:function(e,t){for(var n=[],r=0;r<this.length;r++)X(this[r],n,e,t);return n.join("")}};function V(e,t){this._node=e,this._refresh=t,me(this)}function me(e){var t=e._node._inc||e._node.ownerDocument._inc;if(e._inc!=t){var n=e._refresh(e._node);ot(e,"length",n.length),W(n,e),e._inc=t}}V.prototype.item=function(e){return me(this),this[e]};D(V,S);function re(){}function Ge(e,t){for(var n=e.length;n--;)if(e[n]===t)return n}function We(e,t,n,r){if(r?t[Ge(t,r)]=n:t[t.length++]=n,e){n.ownerElement=e;var a=e.ownerDocument;a&&(r&&Ke(a,e,r),At(a,e,n))}}function Qe(e,t,n){var r=Ge(t,n);if(r>=0){for(var a=t.length-1;r<a;)t[r]=t[++r];if(t.length=a,e){var i=e.ownerDocument;i&&(Ke(i,e,n),n.ownerElement=null)}}else throw U(xt,new Error(e.tagName+"@"+n))}re.prototype={length:0,item:S.prototype.item,getNamedItem:function(e){for(var t=this.length;t--;){var n=this[t];if(n.nodeName==e)return n}},setNamedItem:function(e){var t=e.ownerElement;if(t&&t!=this._ownerElement)throw new U(je);var n=this.getNamedItem(e.nodeName);return We(this._ownerElement,this,e,n),n},setNamedItemNS:function(e){var t=e.ownerElement,n;if(t&&t!=this._ownerElement)throw new U(je);return n=this.getNamedItemNS(e.namespaceURI,e.localName),We(this._ownerElement,this,e,n),n},removeNamedItem:function(e){var t=this.getNamedItem(e);return Qe(this._ownerElement,this,t),t},removeNamedItemNS:function(e,t){var n=this.getNamedItemNS(e,t);return Qe(this._ownerElement,this,n),n},getNamedItemNS:function(e,t){for(var n=this.length;n--;){var r=this[n];if(r.localName==t&&r.namespaceURI==e)return r}return null}};function Be(e){if(this._features={},e)for(var t in e)this._features=e[t]}Be.prototype={hasFeature:function(e,t){var n=this._features[e.toLowerCase()];return!!(n&&(!t||t in n))},createDocument:function(e,t,n){var r=new B;if(r.implementation=this,r.childNodes=new S,r.doctype=n,n&&r.appendChild(n),t){var a=r.createElementNS(e,t);r.appendChild(a)}return r},createDocumentType:function(e,t,n){var r=new Ee;return r.name=e,r.nodeName=e,r.publicId=t,r.systemId=n,r}};function N(){}N.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(e,t){return He(this,e,t)},replaceChild:function(e,t){this.insertBefore(e,t),t&&this.removeChild(t)},removeChild:function(e){return Je(this,e)},appendChild:function(e){return this.insertBefore(e,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(e){return De(this.ownerDocument||this,this,e)},normalize:function(){for(var e=this.firstChild;e;){var t=e.nextSibling;t&&t.nodeType==ne&&e.nodeType==ne?(this.removeChild(t),e.appendData(t.data)):(e.normalize(),e=t)}},isSupported:function(e,t){return this.ownerDocument.implementation.hasFeature(e,t)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(e){for(var t=this;t;){var n=t._nsMap;if(n){for(var r in n)if(n[r]==e)return r}t=t.nodeType==k?t.ownerDocument:t.parentNode}return null},lookupNamespaceURI:function(e){for(var t=this;t;){var n=t._nsMap;if(n&&e in n)return n[e];t=t.nodeType==k?t.ownerDocument:t.parentNode}return null},isDefaultNamespace:function(e){var t=this.lookupPrefix(e);return t==null}};function Ze(e){return e=="<"&&"&lt;"||e==">"&&"&gt;"||e=="&"&&"&amp;"||e=='"'&&"&quot;"||"&#"+e.charCodeAt()+";"}W(w,N);W(w,N.prototype);function Q(e,t){if(t(e))return!0;if(e=e.firstChild)do if(Q(e,t))return!0;while(e=e.nextSibling)}function B(){}function At(e,t,n){e&&e._inc++;var r=n.namespaceURI;r=="http://www.w3.org/2000/xmlns/"&&(t._nsMap[n.prefix?n.localName:""]=n.value)}function Ke(e,t,n,r){e&&e._inc++;var a=n.namespaceURI;a=="http://www.w3.org/2000/xmlns/"&&delete t._nsMap[n.prefix?n.localName:""]}function he(e,t,n){if(e&&e._inc){e._inc++;var r=t.childNodes;if(n)r[r.length++]=n;else{for(var a=t.firstChild,i=0;a;)r[i++]=a,a=a.nextSibling;r.length=i}}}function Je(e,t){var n=t.previousSibling,r=t.nextSibling;return n?n.nextSibling=r:e.firstChild=r,r?r.previousSibling=n:e.lastChild=n,he(e.ownerDocument,e),t}function He(e,t,n){var r=t.parentNode;if(r&&r.removeChild(t),t.nodeType===R){var a=t.firstChild;if(a==null)return t;var i=t.lastChild}else a=i=t;var o=n?n.previousSibling:e.lastChild;a.previousSibling=o,i.nextSibling=n,o?o.nextSibling=a:e.firstChild=a,n==null?e.lastChild=i:n.previousSibling=i;do a.parentNode=e;while(a!==i&&(a=a.nextSibling));return he(e.ownerDocument||e,e),t.nodeType==R&&(t.firstChild=t.lastChild=null),t}function It(e,t){var n=t.parentNode;if(n){var r=e.lastChild;n.removeChild(t);var r=e.lastChild}var r=e.lastChild;return t.parentNode=e,t.previousSibling=r,t.nextSibling=null,r?r.nextSibling=t:e.firstChild=t,e.lastChild=t,he(e.ownerDocument,e,t),t}B.prototype={nodeName:"#document",nodeType:Ye,doctype:null,documentElement:null,_inc:1,insertBefore:function(e,t){if(e.nodeType==R){for(var n=e.firstChild;n;){var r=n.nextSibling;this.insertBefore(n,t),n=r}return e}return this.documentElement==null&&e.nodeType==x&&(this.documentElement=e),He(this,e,t),e.ownerDocument=this,e},removeChild:function(e){return this.documentElement==e&&(this.documentElement=null),Je(this,e)},importNode:function(e,t){return it(this,e,t)},getElementById:function(e){var t=null;return Q(this.documentElement,function(n){if(n.nodeType==x&&n.getAttribute("id")==e)return t=n,!0}),t},getElementsByClassName:function(e){var t=new RegExp("(^|\\\\s)"+e+"(\\\\s|$)");return new V(this,function(n){var r=[];return Q(n.documentElement,function(a){a!==n&&a.nodeType==x&&t.test(a.getAttribute("class"))&&r.push(a)}),r})},createElement:function(e){var t=new q;t.ownerDocument=this,t.nodeName=e,t.tagName=e,t.childNodes=new S;var n=t.attributes=new re;return n._ownerElement=t,t},createDocumentFragment:function(){var e=new ie;return e.ownerDocument=this,e.childNodes=new S,e},createTextNode:function(e){var t=new de;return t.ownerDocument=this,t.appendData(e),t},createComment:function(e){var t=new ve;return t.ownerDocument=this,t.appendData(e),t},createCDATASection:function(e){var t=new ge;return t.ownerDocument=this,t.appendData(e),t},createProcessingInstruction:function(e,t){var n=new ye;return n.ownerDocument=this,n.tagName=n.target=e,n.nodeValue=n.data=t,n},createAttribute:function(e){var t=new ae;return t.ownerDocument=this,t.name=e,t.nodeName=e,t.localName=e,t.specified=!0,t},createEntityReference:function(e){var t=new Ne;return t.ownerDocument=this,t.nodeName=e,t},createElementNS:function(e,t){var n=new q,r=t.split(":"),a=n.attributes=new re;return n.childNodes=new S,n.ownerDocument=this,n.nodeName=t,n.tagName=t,n.namespaceURI=e,r.length==2?(n.prefix=r[0],n.localName=r[1]):n.localName=t,a._ownerElement=n,n},createAttributeNS:function(e,t){var n=new ae,r=t.split(":");return n.ownerDocument=this,n.nodeName=t,n.name=t,n.namespaceURI=e,n.specified=!0,r.length==2?(n.prefix=r[0],n.localName=r[1]):n.localName=t,n}};D(B,N);function q(){this._nsMap={}}q.prototype={nodeType:x,hasAttribute:function(e){return this.getAttributeNode(e)!=null},getAttribute:function(e){var t=this.getAttributeNode(e);return t&&t.value||""},getAttributeNode:function(e){return this.attributes.getNamedItem(e)},setAttribute:function(e,t){var n=this.ownerDocument.createAttribute(e);n.value=n.nodeValue=""+t,this.setAttributeNode(n)},removeAttribute:function(e){var t=this.getAttributeNode(e);t&&this.removeAttributeNode(t)},appendChild:function(e){return e.nodeType===R?this.insertBefore(e,null):It(this,e)},setAttributeNode:function(e){return this.attributes.setNamedItem(e)},setAttributeNodeNS:function(e){return this.attributes.setNamedItemNS(e)},removeAttributeNode:function(e){return this.attributes.removeNamedItem(e.nodeName)},removeAttributeNS:function(e,t){var n=this.getAttributeNodeNS(e,t);n&&this.removeAttributeNode(n)},hasAttributeNS:function(e,t){return this.getAttributeNodeNS(e,t)!=null},getAttributeNS:function(e,t){var n=this.getAttributeNodeNS(e,t);return n&&n.value||""},setAttributeNS:function(e,t,n){var r=this.ownerDocument.createAttributeNS(e,t);r.value=r.nodeValue=""+n,this.setAttributeNode(r)},getAttributeNodeNS:function(e,t){return this.attributes.getNamedItemNS(e,t)},getElementsByTagName:function(e){return new V(this,function(t){var n=[];return Q(t,function(r){r!==t&&r.nodeType==x&&(e==="*"||r.tagName==e)&&n.push(r)}),n})},getElementsByTagNameNS:function(e,t){return new V(this,function(n){var r=[];return Q(n,function(a){a!==n&&a.nodeType===x&&(e==="*"||a.namespaceURI===e)&&(t==="*"||a.localName==t)&&r.push(a)}),r})}};B.prototype.getElementsByTagName=q.prototype.getElementsByTagName;B.prototype.getElementsByTagNameNS=q.prototype.getElementsByTagNameNS;D(q,N);function ae(){}ae.prototype.nodeType=k;D(ae,N);function Z(){}Z.prototype={data:"",substringData:function(e,t){return this.data.substring(e,e+t)},appendData:function(e){e=this.data+e,this.nodeValue=this.data=e,this.length=e.length},insertData:function(e,t){this.replaceData(e,0,t)},appendChild:function(e){throw new Error(g[Ct])},deleteData:function(e,t){this.replaceData(e,t,"")},replaceData:function(e,t,n){var r=this.data.substring(0,e),a=this.data.substring(e+t);n=r+n+a,this.nodeValue=this.data=n,this.length=n.length}};D(Z,N);function de(){}de.prototype={nodeName:"#text",nodeType:ne,splitText:function(e){var t=this.data,n=t.substring(e);t=t.substring(0,e),this.data=this.nodeValue=t,this.length=t.length;var r=this.ownerDocument.createTextNode(n);return this.parentNode&&this.parentNode.insertBefore(r,this.nextSibling),r}};D(de,Z);function ve(){}ve.prototype={nodeName:"#comment",nodeType:Xe};D(ve,Z);function ge(){}ge.prototype={nodeName:"#cdata-section",nodeType:ke};D(ge,Z);function Ee(){}Ee.prototype.nodeType=ze;D(Ee,N);function et(){}et.prototype.nodeType=_t;D(et,N);function tt(){}tt.prototype.nodeType=bt;D(tt,N);function Ne(){}Ne.prototype.nodeType=Ve;D(Ne,N);function ie(){}ie.prototype.nodeName="#document-fragment";ie.prototype.nodeType=R;D(ie,N);function ye(){}ye.prototype.nodeType=qe;D(ye,N);function nt(){}nt.prototype.serializeToString=function(e,t,n){return rt.call(e,t,n)};N.prototype.toString=rt;function rt(e,t){var n=[],r=this.nodeType==9&&this.documentElement||this,a=r.prefix,i=r.namespaceURI;if(i&&a==null){var a=r.lookupPrefix(i);if(a==null)var o=[{namespace:i,prefix:null}]}return X(this,n,e,t,o),n.join("")}function at(e,t,n){var r=e.prefix||"",a=e.namespaceURI;if(!r&&!a||r==="xml"&&a==="http://www.w3.org/XML/1998/namespace"||a=="http://www.w3.org/2000/xmlns/")return!1;for(var i=n.length;i--;){var o=n[i];if(o.prefix==r)return o.namespace!=a}return!0}function X(e,t,n,r,a){if(r)if(e=r(e),e){if(typeof e=="string"){t.push(e);return}}else return;switch(e.nodeType){case x:a||(a=[]);var i=a.length,o=e.attributes,c=o.length,l=e.firstChild,s=e.tagName;n=Tt===e.namespaceURI||n,t.push("<",s);for(var u=0;u<c;u++){var h=o.item(u);h.prefix=="xmlns"?a.push({prefix:h.localName,namespace:h.value}):h.nodeName=="xmlns"&&a.push({prefix:"",namespace:h.value})}for(var u=0;u<c;u++){var h=o.item(u);if(at(h,n,a)){var p=h.prefix||"",d=h.namespaceURI,T=p?" xmlns:"+p:" xmlns";t.push(T,'="',d,'"'),a.push({prefix:p,namespace:d})}X(h,t,n,r,a)}if(at(e,n,a)){var p=e.prefix||"",d=e.namespaceURI;if(d){var T=p?" xmlns:"+p:" xmlns";t.push(T,'="',d,'"'),a.push({prefix:p,namespace:d})}}if(l||n&&!/^(?:meta|link|img|br|hr|input)$/i.test(s)){if(t.push(">"),n&&/^script$/i.test(s))for(;l;)l.data?t.push(l.data):X(l,t,n,r,a),l=l.nextSibling;else for(;l;)X(l,t,n,r,a),l=l.nextSibling;t.push("</",s,">")}else t.push("/>");return;case Ye:case R:for(var l=e.firstChild;l;)X(l,t,n,r,a),l=l.nextSibling;return;case k:return t.push(" ",e.name,'="',e.value.replace(/[<&"]/g,Ze),'"');case ne:return t.push(e.data.replace(/[<&]/g,Ze).replace(/]]>/g,"]]&gt;"));case ke:return t.push("<![CDATA[",e.data,"]]>");case Xe:return t.push("<!--",e.data,"-->");case ze:var m=e.publicId,f=e.systemId;if(t.push("<!DOCTYPE ",e.name),m)t.push(" PUBLIC ",m),f&&f!="."&&t.push(" ",f),t.push(">");else if(f&&f!=".")t.push(" SYSTEM ",f,">");else{var A=e.internalSubset;A&&t.push(" [",A,"]"),t.push(">")}return;case qe:return t.push("<?",e.target," ",e.data,"?>");case Ve:return t.push("&",e.nodeName,";");default:t.push("??",e.nodeName)}}function it(e,t,n){var r;switch(t.nodeType){case x:r=t.cloneNode(!1),r.ownerDocument=e;case R:break;case k:n=!0;break}if(r||(r=t.cloneNode(!1)),r.ownerDocument=e,r.parentNode=null,n)for(var a=t.firstChild;a;)r.appendChild(it(e,a,n)),a=a.nextSibling;return r}function De(e,t,n){var r=new t.constructor;for(var a in t){var i=t[a];typeof i!="object"&&i!=r[a]&&(r[a]=i)}switch(t.childNodes&&(r.childNodes=new S),r.ownerDocument=e,r.nodeType){case x:var o=t.attributes,c=r.attributes=new re,l=o.length;c._ownerElement=r;for(var s=0;s<l;s++)r.setAttributeNode(De(e,o.item(s),!0));break;case k:n=!0}if(n)for(var u=t.firstChild;u;)r.appendChild(De(e,u,n)),u=u.nextSibling;return r}function ot(e,t,n){e[t]=n}try{if(Object.defineProperty){let e=function(t){switch(t.nodeType){case x:case R:var n=[];for(t=t.firstChild;t;)t.nodeType!==7&&t.nodeType!==8&&n.push(e(t)),t=t.nextSibling;return n.join("");default:return t.nodeValue}};Ht=e,Object.defineProperty(V.prototype,"length",{get:function(){return me(this),this.$$length}}),Object.defineProperty(N.prototype,"textContent",{get:function(){return e(this)},set:function(t){switch(this.nodeType){case x:case R:for(;this.firstChild;)this.removeChild(this.firstChild);(t||String(t))&&this.appendChild(this.ownerDocument.createTextNode(t));break;default:this.data=t,this.value=t,this.nodeValue=t}}}),ot=function(t,n,r){t["$$"+n]=r}}}catch(e){}var Ht;K.Node=N;K.DOMException=U;K.DOMImplementation=Be;K.XMLSerializer=nt});var ct=ee(H=>{function st(e){this.options=e||{locator:{}}}st.prototype.parseFromString=function(e,t){var n=this.options,r=new St,a=n.domBuilder||new J,i=n.errorHandler,o=n.locator,c=n.xmlns||{},l=/\\/x?html?$/.test(t),s=l?Ot.entityMap:{lt:"<",gt:">",amp:"&",quot:'"',apos:"'"};return o&&a.setDocumentLocator(o),r.errorHandler=Rt(i,a,o),r.domBuilder=n.domBuilder||a,l&&(c[""]="http://www.w3.org/1999/xhtml"),c.xml=c.xml||"http://www.w3.org/XML/1998/namespace",e&&typeof e=="string"?r.parse(e,c,s):r.errorHandler.error("invalid doc source"),a.doc};function Rt(e,t,n){if(!e){if(t instanceof J)return t;e=t}var r={},a=e instanceof Function;n=n||{};function i(o){var c=e[o];!c&&a&&(c=e.length==2?function(l){e(o,l)}:e),r[o]=c&&function(l){c("[xmldom "+o+"]	"+l+Te(n))}||function(){}}return i("warning"),i("error"),i("fatalError"),r}function J(){this.cdata=!1}function Y(e,t){t.lineNumber=e.lineNumber,t.columnNumber=e.columnNumber}J.prototype={startDocument:function(){this.doc=new Ut().createDocument(null,null,null),this.locator&&(this.doc.documentURI=this.locator.systemId)},startElement:function(e,t,n,r){var a=this.doc,i=a.createElementNS(e,n||t),o=r.length;oe(this,i),this.currentElement=i,this.locator&&Y(this.locator,i);for(var c=0;c<o;c++){var e=r.getURI(c),l=r.getValue(c),n=r.getQName(c),s=a.createAttributeNS(e,n);this.locator&&Y(r.getLocator(c),s),s.value=s.nodeValue=l,i.setAttributeNode(s)}},endElement:function(e,t,n){var r=this.currentElement,a=r.tagName;this.currentElement=r.parentNode},startPrefixMapping:function(e,t){},endPrefixMapping:function(e){},processingInstruction:function(e,t){var n=this.doc.createProcessingInstruction(e,t);this.locator&&Y(this.locator,n),oe(this,n)},ignorableWhitespace:function(e,t,n){},characters:function(e,t,n){if(e=ut.apply(this,arguments),e){if(this.cdata)var r=this.doc.createCDATASection(e);else var r=this.doc.createTextNode(e);this.currentElement?this.currentElement.appendChild(r):/^\\s*$/.test(e)&&this.doc.appendChild(r),this.locator&&Y(this.locator,r)}},skippedEntity:function(e){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(e){(this.locator=e)&&(e.lineNumber=0)},comment:function(e,t,n){e=ut.apply(this,arguments);var r=this.doc.createComment(e);this.locator&&Y(this.locator,r),oe(this,r)},startCDATA:function(){this.cdata=!0},endCDATA:function(){this.cdata=!1},startDTD:function(e,t,n){var r=this.doc.implementation;if(r&&r.createDocumentType){var a=r.createDocumentType(e,t,n);this.locator&&Y(this.locator,a),oe(this,a)}},warning:function(e){console.warn("[xmldom warning]	"+e,Te(this.locator))},error:function(e){console.error("[xmldom error]	"+e,Te(this.locator))},fatalError:function(e){throw new Mt(e,this.locator)}};function Te(e){if(e)return\`
@\`+(e.systemId||"")+"#[line:"+e.lineNumber+",col:"+e.columnNumber+"]"}function ut(e,t,n){return typeof e=="string"?e.substr(t,n):e.length>=t+n||t?new java.lang.String(e,t,n)+"":e}"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\\w+/g,function(e){J.prototype[e]=function(){return null}});function oe(e,t){e.currentElement?e.currentElement.appendChild(t):e.doc.appendChild(t)}var Ot=Re(),lt=Pe(),St=lt.XMLReader,Mt=lt.ParseError,Ut=H.DOMImplementation=we().DOMImplementation;H.XMLSerializer=we().XMLSerializer;H.DOMParser=st;H.__DOMHandler=J});function le(e,t){return(e%t+t)%t}function ce(e){return"ID_xyxyxyxyxyxy".replace(/[xy]/g,function(t){var n=Math.random()*16|0,r=t=="x"?n:n&3|8;return r.toString(16)})}var{DOMParser:$t}=ct(),Ft=/(<(span|div).*?<\\/(span|div)>)/g,M=self,ft=class{constructor(){this.queue=[];this.parsing=!1;this.parseTitle=!1;M.addEventListener("message",t=>{if(t.data.type=="options"){let{defaultCalendar:n,format:r,parseTitle:a,supportsTimelines:i,timelineTag:o}=t.data;this.defaultCalendar=n,this.format=r,this.parseTitle=a,this.supportsTimelines=i,this.timelineTag=o}}),M.addEventListener("message",t=>{if(t.data.type=="calendars"){let{calendars:n}=t.data;this.calendars=[...n]}}),M.addEventListener("message",t=>{t.data.type=="queue"&&this.add(...t.data.paths)})}add(...t){this.queue.push(...t),this.parsing||this.parse()}async parse(){for(this.parsing=!0;this.queue.length;){let t=this.queue.shift();this.getFileData(t)}this.parsing=!1,M.postMessage({type:"save"})}async getFileData(t){let n=this;return new Promise(r=>{function a(i){if(i.data.type!="file"||i.data.path!=t)return;M.removeEventListener("message",a);let{data:o,cache:c,allTags:l,file:s}=i.data;n.parseFileForEvents(o,c,l,s)}M.addEventListener("message",a),M.postMessage({path:t,type:"get"})})}getDataFromFrontmatter(t){let n,r;return t&&(n=t==null?void 0:t["fc-calendar"],r=t==null?void 0:t["fc-category"]),(!n||!n.length)&&(n=this.defaultCalendar),n=n.toLowerCase(),{calendar:this.calendars.find(i=>n==i.name.toLowerCase()),fcCategory:r}}parseFileForEvents(t,n,r,a){var s,u,h,p,d,T;let i=[],{frontmatter:o}=n!=null?n:{},{calendar:c,fcCategory:l}=this.getDataFromFrontmatter(o);if(!!c){this.supportsTimelines&&r&&r.includes(this.timelineTag)&&i.push(...this.parseTimelineEvents(c,t,a,l)),i.push(...this.parseFrontmatterEvents(c,l,o,a));for(let m of i){let f=c.events.find(A=>A.note==a.path&&(!m.timestamp||A.timestamp==m.timestamp));(f==null?void 0:f.date.day)==m.date.day&&(f==null?void 0:f.date.month)==m.date.month&&(f==null?void 0:f.date.year)==m.date.year&&((s=f==null?void 0:f.end)==null?void 0:s.day)==((u=m.end)==null?void 0:u.day)&&((h=f==null?void 0:f.end)==null?void 0:h.month)==((p=m.end)==null?void 0:p.month)&&((d=f==null?void 0:f.end)==null?void 0:d.year)==((T=m.end)==null?void 0:T.year)&&(f==null?void 0:f.category)==m.category&&(!m.timestamp&&!(f==null?void 0:f.timestamp)||(f==null?void 0:f.timestamp)==m.timestamp)||M.postMessage({type:"update",id:c.id,index:f?c.events.findIndex(A=>A.id==(f==null?void 0:f.id)):-1,event:m,original:f})}}}parseFrontmatterEvents(t,n,r,a){let{date:i,end:o}=this.getDates(r,this.parseTitle?a.basename:"");if(!i)return[];if((i==null?void 0:i.month)&&typeof(i==null?void 0:i.month)=="string"){let s=t.static.months.find(u=>u.name==i.month);s?i.month=t.static.months.indexOf(s):i.month=null}else(i==null?void 0:i.month)&&typeof(i==null?void 0:i.month)=="number"&&(i.month=le(i.month-1,t.static.months.length));if((o==null?void 0:o.month)&&typeof(o==null?void 0:o.month)=="string"){let s=t.static.months.find(u=>u.name==o.month);s?o.month=t.static.months.indexOf(s):o.month=null}else(o==null?void 0:o.month)&&typeof(o==null?void 0:o.month)=="number"&&(o.month=le(o.month-1,t.static.months.length));let c=Number(\`\${i.year}\${i.month}\${i.day}00\`),l=t.categories.find(s=>(s==null?void 0:s.name)==n);return[{id:ce(6),name:a.basename,note:a.path,date:i,end:o,category:l==null?void 0:l.id,description:""}]}parseTimelineEvents(t,n,r,a){var c;let i=[],o=new $t;for(let l of n.matchAll(Ft)){let s=o.parseFromString(l[0],"text/html"),u={class:s.documentElement.getAttribute("class"),dataset:{date:s.documentElement.getAttribute("data-date"),title:s.documentElement.getAttribute("data-title"),class:s.documentElement.getAttribute("data-class"),end:s.documentElement.getAttribute("data-end")},content:s.documentElement.textContent};if(u.class!=="ob-timelines"||!u.dataset.date)continue;let h=Number(u.dataset.date[0]=="-"?+u.dataset.date.substring(1,u.dataset.date.length).split("-").join("")*-1:+u.dataset.date.split("-").join("")),p=u.dataset.date.split(/(?<!^)-/),d={year:parseInt(p[0]),month:parseInt(p[1]),day:parseInt(p[2])},T;u.dataset.end&&(p=u.dataset.end.split(/(?<!^)-/),T={year:parseInt(p[0]),month:parseInt(p[1]),day:parseInt(p[2])});let m=t.categories.find(f=>(f==null?void 0:f.name)==a);i.push({id:ce(6),name:(c=u.dataset.title)!=null?c:r.basename,note:r.path,date:d,end:T,timestamp:h,category:m==null?void 0:m.id,description:u.content})}return i}parseDate(t){var n;if(typeof t=="string"){if(!/\\d+[./-]\\d+[./-]\\d+/.test(t))return;try{let[r]=(n=t.match(/\\d+[./-]\\d+[./-]\\d+/))!=null?n:[];if(!r)return;let a=r.split(/[.\\-\\/]/).map(o=>Number(o)),i=[...new Set(this.format.replace(/[^\\w]/g,"").toUpperCase().split(""))];return{year:a[i.indexOf("Y")],month:a[i.indexOf("M")],day:a[i.indexOf("D")]}}catch(r){return}}else return t}getDates(t={},n){let r="fc-date"in t?"fc-date":"fc-start",a;t&&r in t&&(a=t[r]),a||(a=n);let i=this.parseDate(a),o="fc-end"in t?t["fc-end"]:null,c=this.parseDate(o);return{date:i,end:c}}};new ft;
`)}var Xo=class extends on.Component{constructor(e){super();this.plugin=e;this.parsing=new Set;this.tree=new Map;this.worker=new Qo}get calendars(){return this.plugin.data.calendars}get metadataCache(){return this.plugin.app.metadataCache}get vault(){return this.plugin.app.vault}onload(){if(this.worker.postMessage({type:"calendars",calendars:this.calendars}),this.registerEvent(this.plugin.app.workspace.on("fantasy-calendars-updated",()=>{this.worker.postMessage({type:"calendars",calendars:this.calendars})})),this.worker.postMessage({type:"options",parseTitle:this.plugin.data.parseDates,format:this.plugin.format,defaultCalendar:this.plugin.defaultCalendar?.name,supportsTimelines:this.plugin.data.supportTimelines,timelineTag:this.plugin.data.timelineTag}),this.registerEvent(this.plugin.app.workspace.on("fantasy-calendar-settings-change",()=>{this.worker.postMessage({type:"options",parseTitle:this.plugin.data.parseDates,format:this.plugin.format,defaultCalendar:this.plugin.defaultCalendar?.name,supportsTimelines:this.plugin.data.supportTimelines,timelineTag:this.plugin.data.timelineTag})})),this.registerEvent(this.metadataCache.on("changed",n=>{this.startParsing([n.path])})),this.registerEvent(this.vault.on("rename",(n,r)=>{!this.calendars.length||n instanceof on.TFile&&this.worker.postMessage({type:"rename",file:{path:n.path,basename:n.basename,oldPath:r},sourceCalendars:this.calendars})})),this.registerEvent(this.vault.on("delete",n=>{if(n instanceof on.TFile){for(let r of this.calendars)for(let a of r.events)!a.note||a.note===n.path&&(a.note=null);this.plugin.saveCalendar()}})),this.worker.addEventListener("message",async n=>{if(n.data.type=="get"){let{path:r}=n.data,a=this.plugin.app.vault.getAbstractFileByPath(r);if(a instanceof on.TFile){let i=this.metadataCache.getFileCache(a),o=(0,on.getAllTags)(i),l=await this.vault.cachedRead(a);this.worker.postMessage({type:"file",path:r,cache:i,file:{path:a.path,basename:a.basename},allTags:o,data:l})}else if(a instanceof on.TFolder){let i=a.children.map(o=>o.path);this.startParsing(i)}}}),this.worker.addEventListener("message",async n=>{if(n.data.type=="update"){let{id:r,index:a,event:i,original:o}=n.data,l=this.calendars.find(s=>s.id==r);if(!l)return;l.events.splice(a,a>=0?1:0,i),this.addToTree(l,i),o&&this.addToTree(l,o)}}),this.worker.addEventListener("message",async n=>{n.data.type=="save"&&(this.plugin.app.workspace.trigger("fantasy-calendars-event-update",this.tree),this.tree=new Map,await this.plugin.saveCalendar())}),!this.calendars.length)return;let e=this.vault.getAbstractFileByPath(this.plugin.data.path);!e||!(e instanceof on.TFolder)||this.startParsing(e.children.map(n=>n.path))}addToTree(e,n){this.tree.has(e.id)||this.tree.set(e.id,new Map);let r=this.tree.get(e.id);r.has(n.date.year)||r.set(n.date.year,new Set);let a=r.get(n.date.year);this.tree.set(e.id,r.set(n.date.year,a.add(n.date.month)))}startParsing(e){e.length&&this.worker.postMessage({type:"queue",paths:e})}onunload(){this.worker.terminate(),this.worker=null}};var Jo=class{constructor(e){this.plugin=e}getMoons(e,n){let r=n?this.plugin.data.calendars.find(({name:s})=>s==n):this.plugin.defaultCalendar??this.plugin.defaultCalendar,a=this._getHelper(r),i=e||a.current,o=a.getDayForDate(i),l=[];for(let[s,d]of o.moons){let u=createSpan();new Fn({target:u,props:{moon:s,phase:d}}),l.push({icon:u,moon:s,phase:d})}return l}_getHelper(e=this.plugin.defaultCalendar){return new Cr(e,this.plugin)}};var bf=Oe(Nr()),wf=xr.Platform.isMacOS?"Meta":"Control",Yo={name:null,description:null,id:null,static:{incrementDay:!1,firstWeekDay:null,overflow:!0,weekdays:[],months:[],moons:[],displayMoons:!0,displayDayNumber:!1,leapDays:[],eras:[]},current:{year:1,month:null,day:null},events:[],categories:[]},Df={calendars:[],currentCalendar:null,defaultCalendar:null,eventPreview:!1,configDirectory:null,path:"/",parseDates:!1,dateFormat:"YYYY-MM-DD",dailyNotes:!1,version:{major:null,minor:null,patch:null},supportTimelines:!1,timelineTag:"#timeline",syncTimelines:!0,autoParse:!0,settingsToggleState:{calendars:!1,events:!1}},es=class extends xr.Plugin{constructor(){super(...arguments);this.api=new Jo(this);this.watcher=new Xo(this)}async addNewCalendar(e){this.data.calendars.push({...e}),this.data.defaultCalendar||(this.data.defaultCalendar=e.id),await this.saveCalendar()}get currentCalendar(){return this.data.calendars.find(e=>e.id==this.data.currentCalendar)}get canUseDailyNotes(){return this.dailyNotes._loaded}get dailyNotes(){return this.app.internalPlugins.getPluginById("daily-notes")}get canUseTimelines(){return this.app.plugins.getPlugin("obsidian-timelines")!=null}get syncTimelines(){return this.data.syncTimelines&&this.canUseTimelines}get timelineTag(){return this.syncTimelines?this.app.plugins.getPlugin("obsidian-timelines").settings.timelineTag:this.data.timelineTag}get format(){return(this.data.dailyNotes&&this.canUseDailyNotes?this.dailyNotes.instance.options.format:this.data.dateFormat)??"YYYY-MM-DD"}get defaultCalendar(){return this.data.calendars.find(e=>e.id==this.data.defaultCalendar)??this.data.calendars[0]}get view(){let e=this.app.workspace.getLeavesOfType(Ht),n=e.length?e[0]:null;if(n&&n.view&&n.view instanceof Tn)return n.view}get full(){let e=this.app.workspace.getLeavesOfType(Zn),n=e.length?e[0]:null;if(n&&n.view&&n.view instanceof Tn)return n.view}async onload(){console.log("Loading Fantasy Calendars v"+this.manifest.version),await this.loadSettings(),this.registerView(Ht,e=>new Tn(this,e)),this.registerView(Zn,e=>new Tn(this,e,{full:!0})),this.app.workspace.onLayoutReady(()=>{this.watcher.load(),this.addSettingTab(new li(this)),this.addCalendarView(!0)}),this.addRibbonIcon(Ht,"Open Large Fantasy Calendar",e=>{this.app.workspace.getLeaf(e.getModifierState(wf)).setViewState({type:Zn})}),this.addCommand({id:"open-fantasy-calendar",name:"Open Fantasy Calendar",callback:()=>{this.addCalendarView()}}),this.addCommand({id:"open-big-fantasy-calendar",name:"Open Large Fantasy Calendar",callback:()=>{this.addFullCalendarView()}}),this.addCommand({id:"toggle-moons",name:"Toggle Moons",checkCallback:e=>{let n=this.app.workspace.getLeavesOfType(Ht);if(n&&n.length)return e||n[0].view.toggleMoons(),!0}}),this.addCommand({id:"view-date",name:"View Date",checkCallback:e=>{let n=this.app.workspace.getLeavesOfType(Ht);if(n&&n.length)return e||n[0].view.openDate(),!0}}),this.addCommand({id:"view-date",name:"View Note Event",checkCallback:e=>{let n=this.app.workspace.getLeavesOfType(Ht);if(n&&n.length&&n[0].view instanceof Tn){let r=this.app.workspace.getActiveFile();if(r){let a=n[0].view.calendar.events.find(i=>i.note==r.path);if(a)return e||n[0].view.openDay(a.date),!0}}}})}async onunload(){console.log("Unloading Fantasy Calendars v"+this.manifest.version),this.app.workspace.getLeavesOfType(Ht).forEach(e=>e.detach()),this.app.workspace.getLeavesOfType(Zn).forEach(e=>e.detach()),this.watcher.unload()}async addCalendarView(e=!1){e&&this.app.workspace.getLeavesOfType(Ht)?.length||(await this.app.workspace.getRightLeaf(!1).setViewState({type:Ht}),this.view&&this.app.workspace.revealLeaf(this.view.leaf))}async addFullCalendarView(e=!1){e&&this.app.workspace.getLeavesOfType(Zn)?.length||(this.app.workspace.getLeaf(!1).setViewState({type:Zn}),this.full&&this.app.workspace.revealLeaf(this.full.leaf))}async loadSettings(){this.data={...(0,bf.default)(Df),...await this.loadData()},this.configDirectory&&await this.app.vault.adapter.exists(this.configFilePath)&&(this.data=Object.assign({},this.data,JSON.parse(await this.app.vault.adapter.read(this.configFilePath)))),!this.data.defaultCalendar&&this.data.calendars.length&&(this.data.defaultCalendar=this.data.calendars[0].id)}async saveCalendar(){await this.saveSettings(),this.app.workspace.trigger("fantasy-calendars-updated")}get configDirectory(){if(!(!this.data||!this.data.configDirectory))return`${this.data.configDirectory}/plugins/fantasy-calendar`}get configFilePath(){if(!!this.data.configDirectory)return`${this.configDirectory}/data.json`}async saveSettings(){await this.saveData(this.data),this.app.workspace.trigger("fantasy-calendar-settings-change")}async saveData(e){if(this.configDirectory)try{await this.app.vault.adapter.exists(this.configDirectory)||await this.app.vault.adapter.mkdir(this.configDirectory),await this.app.vault.adapter.write(this.configFilePath,JSON.stringify(e))}catch(n){console.error(n),new xr.Notice("There was an error saving into the configured directory.")}await super.saveData(e)}};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/*! https://mths.be/he v1.2.0 by @mathias | MIT license */
/**
 * chroma.js - JavaScript library for color conversions
 *
 * Copyright (c) 2011-2019, Gregor Aisch
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. The name Gregor Aisch may not be used to endorse or promote products
 * derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * -------------------------------------------------------
 *
 * chroma.js includes colors from colorbrewer2.org, which are released under
 * the following license:
 *
 * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,
 * and The Pennsylvania State University.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * ------------------------------------------------------
 *
 * Named colors are taken from X11 Color Names.
 * http://www.w3.org/TR/css3-color/#svg-color
 *
 * @preserve
 */
//# sourceMappingURL=data:application/json;base64,
