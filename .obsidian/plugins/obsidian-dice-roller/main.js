/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var Ic=Object.create;var Nt=Object.defineProperty;var Uc=Object.getOwnPropertyDescriptor;var Oc=Object.getOwnPropertyNames;var Gc=Object.getPrototypeOf,qc=Object.prototype.hasOwnProperty;var fi=n=>Nt(n,"__esModule",{value:!0});var di=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),Wc=(n,e)=>{fi(n);for(var t in e)Nt(n,t,{get:e[t],enumerable:!0})},jc=(n,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Oc(e))!qc.call(n,i)&&i!=="default"&&Nt(n,i,{get:()=>e[i],enumerable:!(t=Uc(e,i))||t.enumerable});return n},Y2=n=>jc(fi(Nt(n!=null?Ic(Gc(n)):{},"default",n&&n.__esModule&&"default"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var Yi=di((Ot,it)=>{(function(n){var e=typeof Ot=="object"&&Ot,t=typeof it=="object"&&it&&it.exports==e&&it,i=typeof global=="object"&&global;(i.global===i||i.window===i)&&(n=i);var a=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,r=/[\x01-\x7F]/g,s=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,c=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,o={"\xAD":"shy","\u200C":"zwnj","\u200D":"zwj","\u200E":"lrm","\u2063":"ic","\u2062":"it","\u2061":"af","\u200F":"rlm","\u200B":"ZeroWidthSpace","\u2060":"NoBreak","\u0311":"DownBreve","\u20DB":"tdot","\u20DC":"DotDot","	":"Tab","\n":"NewLine","\u2008":"puncsp","\u205F":"MediumSpace","\u2009":"thinsp","\u200A":"hairsp","\u2004":"emsp13","\u2002":"ensp","\u2005":"emsp14","\u2003":"emsp","\u2007":"numsp","\xA0":"nbsp","\u205F\u200A":"ThickSpace","\u203E":"oline",_:"lowbar","\u2010":"dash","\u2013":"ndash","\u2014":"mdash","\u2015":"horbar",",":"comma",";":"semi","\u204F":"bsemi",":":"colon","\u2A74":"Colone","!":"excl","\xA1":"iexcl","?":"quest","\xBF":"iquest",".":"period","\u2025":"nldr","\u2026":"mldr","\xB7":"middot","'":"apos","\u2018":"lsquo","\u2019":"rsquo","\u201A":"sbquo","\u2039":"lsaquo","\u203A":"rsaquo",'"':"quot","\u201C":"ldquo","\u201D":"rdquo","\u201E":"bdquo","\xAB":"laquo","\xBB":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","\u2308":"lceil","\u2309":"rceil","\u230A":"lfloor","\u230B":"rfloor","\u2985":"lopar","\u2986":"ropar","\u298B":"lbrke","\u298C":"rbrke","\u298D":"lbrkslu","\u298E":"rbrksld","\u298F":"lbrksld","\u2990":"rbrkslu","\u2991":"langd","\u2992":"rangd","\u2993":"lparlt","\u2994":"rpargt","\u2995":"gtlPar","\u2996":"ltrPar","\u27E6":"lobrk","\u27E7":"robrk","\u27E8":"lang","\u27E9":"rang","\u27EA":"Lang","\u27EB":"Rang","\u27EC":"loang","\u27ED":"roang","\u2772":"lbbrk","\u2773":"rbbrk","\u2016":"Vert","\xA7":"sect","\xB6":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","\u2030":"permil","\u2031":"pertenk","\u2020":"dagger","\u2021":"Dagger","\u2022":"bull","\u2043":"hybull","\u2032":"prime","\u2033":"Prime","\u2034":"tprime","\u2057":"qprime","\u2035":"bprime","\u2041":"caret","`":"grave","\xB4":"acute","\u02DC":"tilde","^":"Hat","\xAF":"macr","\u02D8":"breve","\u02D9":"dot","\xA8":"die","\u02DA":"ring","\u02DD":"dblac","\xB8":"cedil","\u02DB":"ogon","\u02C6":"circ","\u02C7":"caron","\xB0":"deg","\xA9":"copy","\xAE":"reg","\u2117":"copysr","\u2118":"wp","\u211E":"rx","\u2127":"mho","\u2129":"iiota","\u2190":"larr","\u219A":"nlarr","\u2192":"rarr","\u219B":"nrarr","\u2191":"uarr","\u2193":"darr","\u2194":"harr","\u21AE":"nharr","\u2195":"varr","\u2196":"nwarr","\u2197":"nearr","\u2198":"searr","\u2199":"swarr","\u219D":"rarrw","\u219D\u0338":"nrarrw","\u219E":"Larr","\u219F":"Uarr","\u21A0":"Rarr","\u21A1":"Darr","\u21A2":"larrtl","\u21A3":"rarrtl","\u21A4":"mapstoleft","\u21A5":"mapstoup","\u21A6":"map","\u21A7":"mapstodown","\u21A9":"larrhk","\u21AA":"rarrhk","\u21AB":"larrlp","\u21AC":"rarrlp","\u21AD":"harrw","\u21B0":"lsh","\u21B1":"rsh","\u21B2":"ldsh","\u21B3":"rdsh","\u21B5":"crarr","\u21B6":"cularr","\u21B7":"curarr","\u21BA":"olarr","\u21BB":"orarr","\u21BC":"lharu","\u21BD":"lhard","\u21BE":"uharr","\u21BF":"uharl","\u21C0":"rharu","\u21C1":"rhard","\u21C2":"dharr","\u21C3":"dharl","\u21C4":"rlarr","\u21C5":"udarr","\u21C6":"lrarr","\u21C7":"llarr","\u21C8":"uuarr","\u21C9":"rrarr","\u21CA":"ddarr","\u21CB":"lrhar","\u21CC":"rlhar","\u21D0":"lArr","\u21CD":"nlArr","\u21D1":"uArr","\u21D2":"rArr","\u21CF":"nrArr","\u21D3":"dArr","\u21D4":"iff","\u21CE":"nhArr","\u21D5":"vArr","\u21D6":"nwArr","\u21D7":"neArr","\u21D8":"seArr","\u21D9":"swArr","\u21DA":"lAarr","\u21DB":"rAarr","\u21DD":"zigrarr","\u21E4":"larrb","\u21E5":"rarrb","\u21F5":"duarr","\u21FD":"loarr","\u21FE":"roarr","\u21FF":"hoarr","\u2200":"forall","\u2201":"comp","\u2202":"part","\u2202\u0338":"npart","\u2203":"exist","\u2204":"nexist","\u2205":"empty","\u2207":"Del","\u2208":"in","\u2209":"notin","\u220B":"ni","\u220C":"notni","\u03F6":"bepsi","\u220F":"prod","\u2210":"coprod","\u2211":"sum","+":"plus","\xB1":"pm","\xF7":"div","\xD7":"times","<":"lt","\u226E":"nlt","<\u20D2":"nvlt","=":"equals","\u2260":"ne","=\u20E5":"bne","\u2A75":"Equal",">":"gt","\u226F":"ngt",">\u20D2":"nvgt","\xAC":"not","|":"vert","\xA6":"brvbar","\u2212":"minus","\u2213":"mp","\u2214":"plusdo","\u2044":"frasl","\u2216":"setmn","\u2217":"lowast","\u2218":"compfn","\u221A":"Sqrt","\u221D":"prop","\u221E":"infin","\u221F":"angrt","\u2220":"ang","\u2220\u20D2":"nang","\u2221":"angmsd","\u2222":"angsph","\u2223":"mid","\u2224":"nmid","\u2225":"par","\u2226":"npar","\u2227":"and","\u2228":"or","\u2229":"cap","\u2229\uFE00":"caps","\u222A":"cup","\u222A\uFE00":"cups","\u222B":"int","\u222C":"Int","\u222D":"tint","\u2A0C":"qint","\u222E":"oint","\u222F":"Conint","\u2230":"Cconint","\u2231":"cwint","\u2232":"cwconint","\u2233":"awconint","\u2234":"there4","\u2235":"becaus","\u2236":"ratio","\u2237":"Colon","\u2238":"minusd","\u223A":"mDDot","\u223B":"homtht","\u223C":"sim","\u2241":"nsim","\u223C\u20D2":"nvsim","\u223D":"bsim","\u223D\u0331":"race","\u223E":"ac","\u223E\u0333":"acE","\u223F":"acd","\u2240":"wr","\u2242":"esim","\u2242\u0338":"nesim","\u2243":"sime","\u2244":"nsime","\u2245":"cong","\u2247":"ncong","\u2246":"simne","\u2248":"ap","\u2249":"nap","\u224A":"ape","\u224B":"apid","\u224B\u0338":"napid","\u224C":"bcong","\u224D":"CupCap","\u226D":"NotCupCap","\u224D\u20D2":"nvap","\u224E":"bump","\u224E\u0338":"nbump","\u224F":"bumpe","\u224F\u0338":"nbumpe","\u2250":"doteq","\u2250\u0338":"nedot","\u2251":"eDot","\u2252":"efDot","\u2253":"erDot","\u2254":"colone","\u2255":"ecolon","\u2256":"ecir","\u2257":"cire","\u2259":"wedgeq","\u225A":"veeeq","\u225C":"trie","\u225F":"equest","\u2261":"equiv","\u2262":"nequiv","\u2261\u20E5":"bnequiv","\u2264":"le","\u2270":"nle","\u2264\u20D2":"nvle","\u2265":"ge","\u2271":"nge","\u2265\u20D2":"nvge","\u2266":"lE","\u2266\u0338":"nlE","\u2267":"gE","\u2267\u0338":"ngE","\u2268\uFE00":"lvnE","\u2268":"lnE","\u2269":"gnE","\u2269\uFE00":"gvnE","\u226A":"ll","\u226A\u0338":"nLtv","\u226A\u20D2":"nLt","\u226B":"gg","\u226B\u0338":"nGtv","\u226B\u20D2":"nGt","\u226C":"twixt","\u2272":"lsim","\u2274":"nlsim","\u2273":"gsim","\u2275":"ngsim","\u2276":"lg","\u2278":"ntlg","\u2277":"gl","\u2279":"ntgl","\u227A":"pr","\u2280":"npr","\u227B":"sc","\u2281":"nsc","\u227C":"prcue","\u22E0":"nprcue","\u227D":"sccue","\u22E1":"nsccue","\u227E":"prsim","\u227F":"scsim","\u227F\u0338":"NotSucceedsTilde","\u2282":"sub","\u2284":"nsub","\u2282\u20D2":"vnsub","\u2283":"sup","\u2285":"nsup","\u2283\u20D2":"vnsup","\u2286":"sube","\u2288":"nsube","\u2287":"supe","\u2289":"nsupe","\u228A\uFE00":"vsubne","\u228A":"subne","\u228B\uFE00":"vsupne","\u228B":"supne","\u228D":"cupdot","\u228E":"uplus","\u228F":"sqsub","\u228F\u0338":"NotSquareSubset","\u2290":"sqsup","\u2290\u0338":"NotSquareSuperset","\u2291":"sqsube","\u22E2":"nsqsube","\u2292":"sqsupe","\u22E3":"nsqsupe","\u2293":"sqcap","\u2293\uFE00":"sqcaps","\u2294":"sqcup","\u2294\uFE00":"sqcups","\u2295":"oplus","\u2296":"ominus","\u2297":"otimes","\u2298":"osol","\u2299":"odot","\u229A":"ocir","\u229B":"oast","\u229D":"odash","\u229E":"plusb","\u229F":"minusb","\u22A0":"timesb","\u22A1":"sdotb","\u22A2":"vdash","\u22AC":"nvdash","\u22A3":"dashv","\u22A4":"top","\u22A5":"bot","\u22A7":"models","\u22A8":"vDash","\u22AD":"nvDash","\u22A9":"Vdash","\u22AE":"nVdash","\u22AA":"Vvdash","\u22AB":"VDash","\u22AF":"nVDash","\u22B0":"prurel","\u22B2":"vltri","\u22EA":"nltri","\u22B3":"vrtri","\u22EB":"nrtri","\u22B4":"ltrie","\u22EC":"nltrie","\u22B4\u20D2":"nvltrie","\u22B5":"rtrie","\u22ED":"nrtrie","\u22B5\u20D2":"nvrtrie","\u22B6":"origof","\u22B7":"imof","\u22B8":"mumap","\u22B9":"hercon","\u22BA":"intcal","\u22BB":"veebar","\u22BD":"barvee","\u22BE":"angrtvb","\u22BF":"lrtri","\u22C0":"Wedge","\u22C1":"Vee","\u22C2":"xcap","\u22C3":"xcup","\u22C4":"diam","\u22C5":"sdot","\u22C6":"Star","\u22C7":"divonx","\u22C8":"bowtie","\u22C9":"ltimes","\u22CA":"rtimes","\u22CB":"lthree","\u22CC":"rthree","\u22CD":"bsime","\u22CE":"cuvee","\u22CF":"cuwed","\u22D0":"Sub","\u22D1":"Sup","\u22D2":"Cap","\u22D3":"Cup","\u22D4":"fork","\u22D5":"epar","\u22D6":"ltdot","\u22D7":"gtdot","\u22D8":"Ll","\u22D8\u0338":"nLl","\u22D9":"Gg","\u22D9\u0338":"nGg","\u22DA\uFE00":"lesg","\u22DA":"leg","\u22DB":"gel","\u22DB\uFE00":"gesl","\u22DE":"cuepr","\u22DF":"cuesc","\u22E6":"lnsim","\u22E7":"gnsim","\u22E8":"prnsim","\u22E9":"scnsim","\u22EE":"vellip","\u22EF":"ctdot","\u22F0":"utdot","\u22F1":"dtdot","\u22F2":"disin","\u22F3":"isinsv","\u22F4":"isins","\u22F5":"isindot","\u22F5\u0338":"notindot","\u22F6":"notinvc","\u22F7":"notinvb","\u22F9":"isinE","\u22F9\u0338":"notinE","\u22FA":"nisd","\u22FB":"xnis","\u22FC":"nis","\u22FD":"notnivc","\u22FE":"notnivb","\u2305":"barwed","\u2306":"Barwed","\u230C":"drcrop","\u230D":"dlcrop","\u230E":"urcrop","\u230F":"ulcrop","\u2310":"bnot","\u2312":"profline","\u2313":"profsurf","\u2315":"telrec","\u2316":"target","\u231C":"ulcorn","\u231D":"urcorn","\u231E":"dlcorn","\u231F":"drcorn","\u2322":"frown","\u2323":"smile","\u232D":"cylcty","\u232E":"profalar","\u2336":"topbot","\u233D":"ovbar","\u233F":"solbar","\u237C":"angzarr","\u23B0":"lmoust","\u23B1":"rmoust","\u23B4":"tbrk","\u23B5":"bbrk","\u23B6":"bbrktbrk","\u23DC":"OverParenthesis","\u23DD":"UnderParenthesis","\u23DE":"OverBrace","\u23DF":"UnderBrace","\u23E2":"trpezium","\u23E7":"elinters","\u2423":"blank","\u2500":"boxh","\u2502":"boxv","\u250C":"boxdr","\u2510":"boxdl","\u2514":"boxur","\u2518":"boxul","\u251C":"boxvr","\u2524":"boxvl","\u252C":"boxhd","\u2534":"boxhu","\u253C":"boxvh","\u2550":"boxH","\u2551":"boxV","\u2552":"boxdR","\u2553":"boxDr","\u2554":"boxDR","\u2555":"boxdL","\u2556":"boxDl","\u2557":"boxDL","\u2558":"boxuR","\u2559":"boxUr","\u255A":"boxUR","\u255B":"boxuL","\u255C":"boxUl","\u255D":"boxUL","\u255E":"boxvR","\u255F":"boxVr","\u2560":"boxVR","\u2561":"boxvL","\u2562":"boxVl","\u2563":"boxVL","\u2564":"boxHd","\u2565":"boxhD","\u2566":"boxHD","\u2567":"boxHu","\u2568":"boxhU","\u2569":"boxHU","\u256A":"boxvH","\u256B":"boxVh","\u256C":"boxVH","\u2580":"uhblk","\u2584":"lhblk","\u2588":"block","\u2591":"blk14","\u2592":"blk12","\u2593":"blk34","\u25A1":"squ","\u25AA":"squf","\u25AB":"EmptyVerySmallSquare","\u25AD":"rect","\u25AE":"marker","\u25B1":"fltns","\u25B3":"xutri","\u25B4":"utrif","\u25B5":"utri","\u25B8":"rtrif","\u25B9":"rtri","\u25BD":"xdtri","\u25BE":"dtrif","\u25BF":"dtri","\u25C2":"ltrif","\u25C3":"ltri","\u25CA":"loz","\u25CB":"cir","\u25EC":"tridot","\u25EF":"xcirc","\u25F8":"ultri","\u25F9":"urtri","\u25FA":"lltri","\u25FB":"EmptySmallSquare","\u25FC":"FilledSmallSquare","\u2605":"starf","\u2606":"star","\u260E":"phone","\u2640":"female","\u2642":"male","\u2660":"spades","\u2663":"clubs","\u2665":"hearts","\u2666":"diams","\u266A":"sung","\u2713":"check","\u2717":"cross","\u2720":"malt","\u2736":"sext","\u2758":"VerticalSeparator","\u27C8":"bsolhsub","\u27C9":"suphsol","\u27F5":"xlarr","\u27F6":"xrarr","\u27F7":"xharr","\u27F8":"xlArr","\u27F9":"xrArr","\u27FA":"xhArr","\u27FC":"xmap","\u27FF":"dzigrarr","\u2902":"nvlArr","\u2903":"nvrArr","\u2904":"nvHarr","\u2905":"Map","\u290C":"lbarr","\u290D":"rbarr","\u290E":"lBarr","\u290F":"rBarr","\u2910":"RBarr","\u2911":"DDotrahd","\u2912":"UpArrowBar","\u2913":"DownArrowBar","\u2916":"Rarrtl","\u2919":"latail","\u291A":"ratail","\u291B":"lAtail","\u291C":"rAtail","\u291D":"larrfs","\u291E":"rarrfs","\u291F":"larrbfs","\u2920":"rarrbfs","\u2923":"nwarhk","\u2924":"nearhk","\u2925":"searhk","\u2926":"swarhk","\u2927":"nwnear","\u2928":"toea","\u2929":"tosa","\u292A":"swnwar","\u2933":"rarrc","\u2933\u0338":"nrarrc","\u2935":"cudarrr","\u2936":"ldca","\u2937":"rdca","\u2938":"cudarrl","\u2939":"larrpl","\u293C":"curarrm","\u293D":"cularrp","\u2945":"rarrpl","\u2948":"harrcir","\u2949":"Uarrocir","\u294A":"lurdshar","\u294B":"ldrushar","\u294E":"LeftRightVector","\u294F":"RightUpDownVector","\u2950":"DownLeftRightVector","\u2951":"LeftUpDownVector","\u2952":"LeftVectorBar","\u2953":"RightVectorBar","\u2954":"RightUpVectorBar","\u2955":"RightDownVectorBar","\u2956":"DownLeftVectorBar","\u2957":"DownRightVectorBar","\u2958":"LeftUpVectorBar","\u2959":"LeftDownVectorBar","\u295A":"LeftTeeVector","\u295B":"RightTeeVector","\u295C":"RightUpTeeVector","\u295D":"RightDownTeeVector","\u295E":"DownLeftTeeVector","\u295F":"DownRightTeeVector","\u2960":"LeftUpTeeVector","\u2961":"LeftDownTeeVector","\u2962":"lHar","\u2963":"uHar","\u2964":"rHar","\u2965":"dHar","\u2966":"luruhar","\u2967":"ldrdhar","\u2968":"ruluhar","\u2969":"rdldhar","\u296A":"lharul","\u296B":"llhard","\u296C":"rharul","\u296D":"lrhard","\u296E":"udhar","\u296F":"duhar","\u2970":"RoundImplies","\u2971":"erarr","\u2972":"simrarr","\u2973":"larrsim","\u2974":"rarrsim","\u2975":"rarrap","\u2976":"ltlarr","\u2978":"gtrarr","\u2979":"subrarr","\u297B":"suplarr","\u297C":"lfisht","\u297D":"rfisht","\u297E":"ufisht","\u297F":"dfisht","\u299A":"vzigzag","\u299C":"vangrt","\u299D":"angrtvbd","\u29A4":"ange","\u29A5":"range","\u29A6":"dwangle","\u29A7":"uwangle","\u29A8":"angmsdaa","\u29A9":"angmsdab","\u29AA":"angmsdac","\u29AB":"angmsdad","\u29AC":"angmsdae","\u29AD":"angmsdaf","\u29AE":"angmsdag","\u29AF":"angmsdah","\u29B0":"bemptyv","\u29B1":"demptyv","\u29B2":"cemptyv","\u29B3":"raemptyv","\u29B4":"laemptyv","\u29B5":"ohbar","\u29B6":"omid","\u29B7":"opar","\u29B9":"operp","\u29BB":"olcross","\u29BC":"odsold","\u29BE":"olcir","\u29BF":"ofcir","\u29C0":"olt","\u29C1":"ogt","\u29C2":"cirscir","\u29C3":"cirE","\u29C4":"solb","\u29C5":"bsolb","\u29C9":"boxbox","\u29CD":"trisb","\u29CE":"rtriltri","\u29CF":"LeftTriangleBar","\u29CF\u0338":"NotLeftTriangleBar","\u29D0":"RightTriangleBar","\u29D0\u0338":"NotRightTriangleBar","\u29DC":"iinfin","\u29DD":"infintie","\u29DE":"nvinfin","\u29E3":"eparsl","\u29E4":"smeparsl","\u29E5":"eqvparsl","\u29EB":"lozf","\u29F4":"RuleDelayed","\u29F6":"dsol","\u2A00":"xodot","\u2A01":"xoplus","\u2A02":"xotime","\u2A04":"xuplus","\u2A06":"xsqcup","\u2A0D":"fpartint","\u2A10":"cirfnint","\u2A11":"awint","\u2A12":"rppolint","\u2A13":"scpolint","\u2A14":"npolint","\u2A15":"pointint","\u2A16":"quatint","\u2A17":"intlarhk","\u2A22":"pluscir","\u2A23":"plusacir","\u2A24":"simplus","\u2A25":"plusdu","\u2A26":"plussim","\u2A27":"plustwo","\u2A29":"mcomma","\u2A2A":"minusdu","\u2A2D":"loplus","\u2A2E":"roplus","\u2A2F":"Cross","\u2A30":"timesd","\u2A31":"timesbar","\u2A33":"smashp","\u2A34":"lotimes","\u2A35":"rotimes","\u2A36":"otimesas","\u2A37":"Otimes","\u2A38":"odiv","\u2A39":"triplus","\u2A3A":"triminus","\u2A3B":"tritime","\u2A3C":"iprod","\u2A3F":"amalg","\u2A40":"capdot","\u2A42":"ncup","\u2A43":"ncap","\u2A44":"capand","\u2A45":"cupor","\u2A46":"cupcap","\u2A47":"capcup","\u2A48":"cupbrcap","\u2A49":"capbrcup","\u2A4A":"cupcup","\u2A4B":"capcap","\u2A4C":"ccups","\u2A4D":"ccaps","\u2A50":"ccupssm","\u2A53":"And","\u2A54":"Or","\u2A55":"andand","\u2A56":"oror","\u2A57":"orslope","\u2A58":"andslope","\u2A5A":"andv","\u2A5B":"orv","\u2A5C":"andd","\u2A5D":"ord","\u2A5F":"wedbar","\u2A66":"sdote","\u2A6A":"simdot","\u2A6D":"congdot","\u2A6D\u0338":"ncongdot","\u2A6E":"easter","\u2A6F":"apacir","\u2A70":"apE","\u2A70\u0338":"napE","\u2A71":"eplus","\u2A72":"pluse","\u2A73":"Esim","\u2A77":"eDDot","\u2A78":"equivDD","\u2A79":"ltcir","\u2A7A":"gtcir","\u2A7B":"ltquest","\u2A7C":"gtquest","\u2A7D":"les","\u2A7D\u0338":"nles","\u2A7E":"ges","\u2A7E\u0338":"nges","\u2A7F":"lesdot","\u2A80":"gesdot","\u2A81":"lesdoto","\u2A82":"gesdoto","\u2A83":"lesdotor","\u2A84":"gesdotol","\u2A85":"lap","\u2A86":"gap","\u2A87":"lne","\u2A88":"gne","\u2A89":"lnap","\u2A8A":"gnap","\u2A8B":"lEg","\u2A8C":"gEl","\u2A8D":"lsime","\u2A8E":"gsime","\u2A8F":"lsimg","\u2A90":"gsiml","\u2A91":"lgE","\u2A92":"glE","\u2A93":"lesges","\u2A94":"gesles","\u2A95":"els","\u2A96":"egs","\u2A97":"elsdot","\u2A98":"egsdot","\u2A99":"el","\u2A9A":"eg","\u2A9D":"siml","\u2A9E":"simg","\u2A9F":"simlE","\u2AA0":"simgE","\u2AA1":"LessLess","\u2AA1\u0338":"NotNestedLessLess","\u2AA2":"GreaterGreater","\u2AA2\u0338":"NotNestedGreaterGreater","\u2AA4":"glj","\u2AA5":"gla","\u2AA6":"ltcc","\u2AA7":"gtcc","\u2AA8":"lescc","\u2AA9":"gescc","\u2AAA":"smt","\u2AAB":"lat","\u2AAC":"smte","\u2AAC\uFE00":"smtes","\u2AAD":"late","\u2AAD\uFE00":"lates","\u2AAE":"bumpE","\u2AAF":"pre","\u2AAF\u0338":"npre","\u2AB0":"sce","\u2AB0\u0338":"nsce","\u2AB3":"prE","\u2AB4":"scE","\u2AB5":"prnE","\u2AB6":"scnE","\u2AB7":"prap","\u2AB8":"scap","\u2AB9":"prnap","\u2ABA":"scnap","\u2ABB":"Pr","\u2ABC":"Sc","\u2ABD":"subdot","\u2ABE":"supdot","\u2ABF":"subplus","\u2AC0":"supplus","\u2AC1":"submult","\u2AC2":"supmult","\u2AC3":"subedot","\u2AC4":"supedot","\u2AC5":"subE","\u2AC5\u0338":"nsubE","\u2AC6":"supE","\u2AC6\u0338":"nsupE","\u2AC7":"subsim","\u2AC8":"supsim","\u2ACB\uFE00":"vsubnE","\u2ACB":"subnE","\u2ACC\uFE00":"vsupnE","\u2ACC":"supnE","\u2ACF":"csub","\u2AD0":"csup","\u2AD1":"csube","\u2AD2":"csupe","\u2AD3":"subsup","\u2AD4":"supsub","\u2AD5":"subsub","\u2AD6":"supsup","\u2AD7":"suphsub","\u2AD8":"supdsub","\u2AD9":"forkv","\u2ADA":"topfork","\u2ADB":"mlcp","\u2AE4":"Dashv","\u2AE6":"Vdashl","\u2AE7":"Barv","\u2AE8":"vBar","\u2AE9":"vBarv","\u2AEB":"Vbar","\u2AEC":"Not","\u2AED":"bNot","\u2AEE":"rnmid","\u2AEF":"cirmid","\u2AF0":"midcir","\u2AF1":"topcir","\u2AF2":"nhpar","\u2AF3":"parsim","\u2AFD":"parsl","\u2AFD\u20E5":"nparsl","\u266D":"flat","\u266E":"natur","\u266F":"sharp","\xA4":"curren","\xA2":"cent",$:"dollar","\xA3":"pound","\xA5":"yen","\u20AC":"euro","\xB9":"sup1","\xBD":"half","\u2153":"frac13","\xBC":"frac14","\u2155":"frac15","\u2159":"frac16","\u215B":"frac18","\xB2":"sup2","\u2154":"frac23","\u2156":"frac25","\xB3":"sup3","\xBE":"frac34","\u2157":"frac35","\u215C":"frac38","\u2158":"frac45","\u215A":"frac56","\u215D":"frac58","\u215E":"frac78","\u{1D4B6}":"ascr","\u{1D552}":"aopf","\u{1D51E}":"afr","\u{1D538}":"Aopf","\u{1D504}":"Afr","\u{1D49C}":"Ascr",\u00AA:"ordf",\u00E1:"aacute",\u00C1:"Aacute",\u00E0:"agrave",\u00C0:"Agrave",\u0103:"abreve",\u0102:"Abreve",\u00E2:"acirc",\u00C2:"Acirc",\u00E5:"aring",\u00C5:"angst",\u00E4:"auml",\u00C4:"Auml",\u00E3:"atilde",\u00C3:"Atilde",\u0105:"aogon",\u0104:"Aogon",\u0101:"amacr",\u0100:"Amacr",\u00E6:"aelig",\u00C6:"AElig","\u{1D4B7}":"bscr","\u{1D553}":"bopf","\u{1D51F}":"bfr","\u{1D539}":"Bopf",\u212C:"Bscr","\u{1D505}":"Bfr","\u{1D520}":"cfr","\u{1D4B8}":"cscr","\u{1D554}":"copf",\u212D:"Cfr","\u{1D49E}":"Cscr",\u2102:"Copf",\u0107:"cacute",\u0106:"Cacute",\u0109:"ccirc",\u0108:"Ccirc",\u010D:"ccaron",\u010C:"Ccaron",\u010B:"cdot",\u010A:"Cdot",\u00E7:"ccedil",\u00C7:"Ccedil","\u2105":"incare","\u{1D521}":"dfr","\u2146":"dd","\u{1D555}":"dopf","\u{1D4B9}":"dscr","\u{1D49F}":"Dscr","\u{1D507}":"Dfr","\u2145":"DD","\u{1D53B}":"Dopf",\u010F:"dcaron",\u010E:"Dcaron",\u0111:"dstrok",\u0110:"Dstrok",\u00F0:"eth",\u00D0:"ETH","\u2147":"ee",\u212F:"escr","\u{1D522}":"efr","\u{1D556}":"eopf",\u2130:"Escr","\u{1D508}":"Efr","\u{1D53C}":"Eopf",\u00E9:"eacute",\u00C9:"Eacute",\u00E8:"egrave",\u00C8:"Egrave",\u00EA:"ecirc",\u00CA:"Ecirc",\u011B:"ecaron",\u011A:"Ecaron",\u00EB:"euml",\u00CB:"Euml",\u0117:"edot",\u0116:"Edot",\u0119:"eogon",\u0118:"Eogon",\u0113:"emacr",\u0112:"Emacr","\u{1D523}":"ffr","\u{1D557}":"fopf","\u{1D4BB}":"fscr","\u{1D509}":"Ffr","\u{1D53D}":"Fopf",\u2131:"Fscr",\uFB00:"fflig",\uFB03:"ffilig",\uFB04:"ffllig",\uFB01:"filig",fj:"fjlig",\uFB02:"fllig",\u0192:"fnof",\u210A:"gscr","\u{1D558}":"gopf","\u{1D524}":"gfr","\u{1D4A2}":"Gscr","\u{1D53E}":"Gopf","\u{1D50A}":"Gfr",\u01F5:"gacute",\u011F:"gbreve",\u011E:"Gbreve",\u011D:"gcirc",\u011C:"Gcirc",\u0121:"gdot",\u0120:"Gdot",\u0122:"Gcedil","\u{1D525}":"hfr",\u210E:"planckh","\u{1D4BD}":"hscr","\u{1D559}":"hopf",\u210B:"Hscr",\u210C:"Hfr",\u210D:"Hopf",\u0125:"hcirc",\u0124:"Hcirc",\u210F:"hbar",\u0127:"hstrok",\u0126:"Hstrok","\u{1D55A}":"iopf","\u{1D526}":"ifr","\u{1D4BE}":"iscr","\u2148":"ii","\u{1D540}":"Iopf",\u2110:"Iscr",\u2111:"Im",\u00ED:"iacute",\u00CD:"Iacute",\u00EC:"igrave",\u00CC:"Igrave",\u00EE:"icirc",\u00CE:"Icirc",\u00EF:"iuml",\u00CF:"Iuml",\u0129:"itilde",\u0128:"Itilde",\u0130:"Idot",\u012F:"iogon",\u012E:"Iogon",\u012B:"imacr",\u012A:"Imacr",\u0133:"ijlig",\u0132:"IJlig",\u0131:"imath","\u{1D4BF}":"jscr","\u{1D55B}":"jopf","\u{1D527}":"jfr","\u{1D4A5}":"Jscr","\u{1D50D}":"Jfr","\u{1D541}":"Jopf",\u0135:"jcirc",\u0134:"Jcirc","\u0237":"jmath","\u{1D55C}":"kopf","\u{1D4C0}":"kscr","\u{1D528}":"kfr","\u{1D4A6}":"Kscr","\u{1D542}":"Kopf","\u{1D50E}":"Kfr",\u0137:"kcedil",\u0136:"Kcedil","\u{1D529}":"lfr","\u{1D4C1}":"lscr",\u2113:"ell","\u{1D55D}":"lopf",\u2112:"Lscr","\u{1D50F}":"Lfr","\u{1D543}":"Lopf",\u013A:"lacute",\u0139:"Lacute",\u013E:"lcaron",\u013D:"Lcaron",\u013C:"lcedil",\u013B:"Lcedil",\u0142:"lstrok",\u0141:"Lstrok",\u0140:"lmidot",\u013F:"Lmidot","\u{1D52A}":"mfr","\u{1D55E}":"mopf","\u{1D4C2}":"mscr","\u{1D510}":"Mfr","\u{1D544}":"Mopf",\u2133:"Mscr","\u{1D52B}":"nfr","\u{1D55F}":"nopf","\u{1D4C3}":"nscr",\u2115:"Nopf","\u{1D4A9}":"Nscr","\u{1D511}":"Nfr",\u0144:"nacute",\u0143:"Nacute",\u0148:"ncaron",\u0147:"Ncaron",\u00F1:"ntilde",\u00D1:"Ntilde",\u0146:"ncedil",\u0145:"Ncedil","\u2116":"numero",\u014B:"eng",\u014A:"ENG","\u{1D560}":"oopf","\u{1D52C}":"ofr",\u2134:"oscr","\u{1D4AA}":"Oscr","\u{1D512}":"Ofr","\u{1D546}":"Oopf",\u00BA:"ordm",\u00F3:"oacute",\u00D3:"Oacute",\u00F2:"ograve",\u00D2:"Ograve",\u00F4:"ocirc",\u00D4:"Ocirc",\u00F6:"ouml",\u00D6:"Ouml",\u0151:"odblac",\u0150:"Odblac",\u00F5:"otilde",\u00D5:"Otilde",\u00F8:"oslash",\u00D8:"Oslash",\u014D:"omacr",\u014C:"Omacr",\u0153:"oelig",\u0152:"OElig","\u{1D52D}":"pfr","\u{1D4C5}":"pscr","\u{1D561}":"popf",\u2119:"Popf","\u{1D513}":"Pfr","\u{1D4AB}":"Pscr","\u{1D562}":"qopf","\u{1D52E}":"qfr","\u{1D4C6}":"qscr","\u{1D4AC}":"Qscr","\u{1D514}":"Qfr",\u211A:"Qopf",\u0138:"kgreen","\u{1D52F}":"rfr","\u{1D563}":"ropf","\u{1D4C7}":"rscr",\u211B:"Rscr",\u211C:"Re",\u211D:"Ropf",\u0155:"racute",\u0154:"Racute",\u0159:"rcaron",\u0158:"Rcaron",\u0157:"rcedil",\u0156:"Rcedil","\u{1D564}":"sopf","\u{1D4C8}":"sscr","\u{1D530}":"sfr","\u{1D54A}":"Sopf","\u{1D516}":"Sfr","\u{1D4AE}":"Sscr","\u24C8":"oS",\u015B:"sacute",\u015A:"Sacute",\u015D:"scirc",\u015C:"Scirc",\u0161:"scaron",\u0160:"Scaron",\u015F:"scedil",\u015E:"Scedil",\u00DF:"szlig","\u{1D531}":"tfr","\u{1D4C9}":"tscr","\u{1D565}":"topf","\u{1D4AF}":"Tscr","\u{1D517}":"Tfr","\u{1D54B}":"Topf",\u0165:"tcaron",\u0164:"Tcaron",\u0163:"tcedil",\u0162:"Tcedil","\u2122":"trade",\u0167:"tstrok",\u0166:"Tstrok","\u{1D4CA}":"uscr","\u{1D566}":"uopf","\u{1D532}":"ufr","\u{1D54C}":"Uopf","\u{1D518}":"Ufr","\u{1D4B0}":"Uscr",\u00FA:"uacute",\u00DA:"Uacute",\u00F9:"ugrave",\u00D9:"Ugrave",\u016D:"ubreve",\u016C:"Ubreve",\u00FB:"ucirc",\u00DB:"Ucirc",\u016F:"uring",\u016E:"Uring",\u00FC:"uuml",\u00DC:"Uuml",\u0171:"udblac",\u0170:"Udblac",\u0169:"utilde",\u0168:"Utilde",\u0173:"uogon",\u0172:"Uogon",\u016B:"umacr",\u016A:"Umacr","\u{1D533}":"vfr","\u{1D567}":"vopf","\u{1D4CB}":"vscr","\u{1D519}":"Vfr","\u{1D54D}":"Vopf","\u{1D4B1}":"Vscr","\u{1D568}":"wopf","\u{1D4CC}":"wscr","\u{1D534}":"wfr","\u{1D4B2}":"Wscr","\u{1D54E}":"Wopf","\u{1D51A}":"Wfr",\u0175:"wcirc",\u0174:"Wcirc","\u{1D535}":"xfr","\u{1D4CD}":"xscr","\u{1D569}":"xopf","\u{1D54F}":"Xopf","\u{1D51B}":"Xfr","\u{1D4B3}":"Xscr","\u{1D536}":"yfr","\u{1D4CE}":"yscr","\u{1D56A}":"yopf","\u{1D4B4}":"Yscr","\u{1D51C}":"Yfr","\u{1D550}":"Yopf",\u00FD:"yacute",\u00DD:"Yacute",\u0177:"ycirc",\u0176:"Ycirc",\u00FF:"yuml",\u0178:"Yuml","\u{1D4CF}":"zscr","\u{1D537}":"zfr","\u{1D56B}":"zopf",\u2128:"Zfr",\u2124:"Zopf","\u{1D4B5}":"Zscr",\u017A:"zacute",\u0179:"Zacute",\u017E:"zcaron",\u017D:"Zcaron",\u017C:"zdot",\u017B:"Zdot",\u01B5:"imped",\u00FE:"thorn",\u00DE:"THORN",\u0149:"napos",\u03B1:"alpha",\u0391:"Alpha",\u03B2:"beta",\u0392:"Beta",\u03B3:"gamma",\u0393:"Gamma",\u03B4:"delta",\u0394:"Delta",\u03B5:"epsi","\u03F5":"epsiv",\u0395:"Epsilon",\u03DD:"gammad",\u03DC:"Gammad",\u03B6:"zeta",\u0396:"Zeta",\u03B7:"eta",\u0397:"Eta",\u03B8:"theta",\u03D1:"thetav",\u0398:"Theta",\u03B9:"iota",\u0399:"Iota",\u03BA:"kappa",\u03F0:"kappav",\u039A:"Kappa",\u03BB:"lambda",\u039B:"Lambda",\u03BC:"mu",\u00B5:"micro",\u039C:"Mu",\u03BD:"nu",\u039D:"Nu",\u03BE:"xi",\u039E:"Xi",\u03BF:"omicron",\u039F:"Omicron",\u03C0:"pi",\u03D6:"piv",\u03A0:"Pi",\u03C1:"rho",\u03F1:"rhov",\u03A1:"Rho",\u03C3:"sigma",\u03A3:"Sigma",\u03C2:"sigmaf",\u03C4:"tau",\u03A4:"Tau",\u03C5:"upsi",\u03A5:"Upsilon",\u03D2:"Upsi",\u03C6:"phi",\u03D5:"phiv",\u03A6:"Phi",\u03C7:"chi",\u03A7:"Chi",\u03C8:"psi",\u03A8:"Psi",\u03C9:"omega",\u03A9:"ohm",\u0430:"acy",\u0410:"Acy",\u0431:"bcy",\u0411:"Bcy",\u0432:"vcy",\u0412:"Vcy",\u0433:"gcy",\u0413:"Gcy",\u0453:"gjcy",\u0403:"GJcy",\u0434:"dcy",\u0414:"Dcy",\u0452:"djcy",\u0402:"DJcy",\u0435:"iecy",\u0415:"IEcy",\u0451:"iocy",\u0401:"IOcy",\u0454:"jukcy",\u0404:"Jukcy",\u0436:"zhcy",\u0416:"ZHcy",\u0437:"zcy",\u0417:"Zcy",\u0455:"dscy",\u0405:"DScy",\u0438:"icy",\u0418:"Icy",\u0456:"iukcy",\u0406:"Iukcy",\u0457:"yicy",\u0407:"YIcy",\u0439:"jcy",\u0419:"Jcy",\u0458:"jsercy",\u0408:"Jsercy",\u043A:"kcy",\u041A:"Kcy",\u045C:"kjcy",\u040C:"KJcy",\u043B:"lcy",\u041B:"Lcy",\u0459:"ljcy",\u0409:"LJcy",\u043C:"mcy",\u041C:"Mcy",\u043D:"ncy",\u041D:"Ncy",\u045A:"njcy",\u040A:"NJcy",\u043E:"ocy",\u041E:"Ocy",\u043F:"pcy",\u041F:"Pcy",\u0440:"rcy",\u0420:"Rcy",\u0441:"scy",\u0421:"Scy",\u0442:"tcy",\u0422:"Tcy",\u045B:"tshcy",\u040B:"TSHcy",\u0443:"ucy",\u0423:"Ucy",\u045E:"ubrcy",\u040E:"Ubrcy",\u0444:"fcy",\u0424:"Fcy",\u0445:"khcy",\u0425:"KHcy",\u0446:"tscy",\u0426:"TScy",\u0447:"chcy",\u0427:"CHcy",\u045F:"dzcy",\u040F:"DZcy",\u0448:"shcy",\u0428:"SHcy",\u0449:"shchcy",\u0429:"SHCHcy",\u044A:"hardcy",\u042A:"HARDcy",\u044B:"ycy",\u042B:"Ycy",\u044C:"softcy",\u042C:"SOFTcy",\u044D:"ecy",\u042D:"Ecy",\u044E:"yucy",\u042E:"YUcy",\u044F:"yacy",\u042F:"YAcy",\u2135:"aleph",\u2136:"beth",\u2137:"gimel",\u2138:"daleth"},l=/["&'<>`]/g,h={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},f=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,u=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,m=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,v={aacute:"\xE1",Aacute:"\xC1",abreve:"\u0103",Abreve:"\u0102",ac:"\u223E",acd:"\u223F",acE:"\u223E\u0333",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",acy:"\u0430",Acy:"\u0410",aelig:"\xE6",AElig:"\xC6",af:"\u2061",afr:"\u{1D51E}",Afr:"\u{1D504}",agrave:"\xE0",Agrave:"\xC0",alefsym:"\u2135",aleph:"\u2135",alpha:"\u03B1",Alpha:"\u0391",amacr:"\u0101",Amacr:"\u0100",amalg:"\u2A3F",amp:"&",AMP:"&",and:"\u2227",And:"\u2A53",andand:"\u2A55",andd:"\u2A5C",andslope:"\u2A58",andv:"\u2A5A",ang:"\u2220",ange:"\u29A4",angle:"\u2220",angmsd:"\u2221",angmsdaa:"\u29A8",angmsdab:"\u29A9",angmsdac:"\u29AA",angmsdad:"\u29AB",angmsdae:"\u29AC",angmsdaf:"\u29AD",angmsdag:"\u29AE",angmsdah:"\u29AF",angrt:"\u221F",angrtvb:"\u22BE",angrtvbd:"\u299D",angsph:"\u2222",angst:"\xC5",angzarr:"\u237C",aogon:"\u0105",Aogon:"\u0104",aopf:"\u{1D552}",Aopf:"\u{1D538}",ap:"\u2248",apacir:"\u2A6F",ape:"\u224A",apE:"\u2A70",apid:"\u224B",apos:"'",ApplyFunction:"\u2061",approx:"\u2248",approxeq:"\u224A",aring:"\xE5",Aring:"\xC5",ascr:"\u{1D4B6}",Ascr:"\u{1D49C}",Assign:"\u2254",ast:"*",asymp:"\u2248",asympeq:"\u224D",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",awconint:"\u2233",awint:"\u2A11",backcong:"\u224C",backepsilon:"\u03F6",backprime:"\u2035",backsim:"\u223D",backsimeq:"\u22CD",Backslash:"\u2216",Barv:"\u2AE7",barvee:"\u22BD",barwed:"\u2305",Barwed:"\u2306",barwedge:"\u2305",bbrk:"\u23B5",bbrktbrk:"\u23B6",bcong:"\u224C",bcy:"\u0431",Bcy:"\u0411",bdquo:"\u201E",becaus:"\u2235",because:"\u2235",Because:"\u2235",bemptyv:"\u29B0",bepsi:"\u03F6",bernou:"\u212C",Bernoullis:"\u212C",beta:"\u03B2",Beta:"\u0392",beth:"\u2136",between:"\u226C",bfr:"\u{1D51F}",Bfr:"\u{1D505}",bigcap:"\u22C2",bigcirc:"\u25EF",bigcup:"\u22C3",bigodot:"\u2A00",bigoplus:"\u2A01",bigotimes:"\u2A02",bigsqcup:"\u2A06",bigstar:"\u2605",bigtriangledown:"\u25BD",bigtriangleup:"\u25B3",biguplus:"\u2A04",bigvee:"\u22C1",bigwedge:"\u22C0",bkarow:"\u290D",blacklozenge:"\u29EB",blacksquare:"\u25AA",blacktriangle:"\u25B4",blacktriangledown:"\u25BE",blacktriangleleft:"\u25C2",blacktriangleright:"\u25B8",blank:"\u2423",blk12:"\u2592",blk14:"\u2591",blk34:"\u2593",block:"\u2588",bne:"=\u20E5",bnequiv:"\u2261\u20E5",bnot:"\u2310",bNot:"\u2AED",bopf:"\u{1D553}",Bopf:"\u{1D539}",bot:"\u22A5",bottom:"\u22A5",bowtie:"\u22C8",boxbox:"\u29C9",boxdl:"\u2510",boxdL:"\u2555",boxDl:"\u2556",boxDL:"\u2557",boxdr:"\u250C",boxdR:"\u2552",boxDr:"\u2553",boxDR:"\u2554",boxh:"\u2500",boxH:"\u2550",boxhd:"\u252C",boxhD:"\u2565",boxHd:"\u2564",boxHD:"\u2566",boxhu:"\u2534",boxhU:"\u2568",boxHu:"\u2567",boxHU:"\u2569",boxminus:"\u229F",boxplus:"\u229E",boxtimes:"\u22A0",boxul:"\u2518",boxuL:"\u255B",boxUl:"\u255C",boxUL:"\u255D",boxur:"\u2514",boxuR:"\u2558",boxUr:"\u2559",boxUR:"\u255A",boxv:"\u2502",boxV:"\u2551",boxvh:"\u253C",boxvH:"\u256A",boxVh:"\u256B",boxVH:"\u256C",boxvl:"\u2524",boxvL:"\u2561",boxVl:"\u2562",boxVL:"\u2563",boxvr:"\u251C",boxvR:"\u255E",boxVr:"\u255F",boxVR:"\u2560",bprime:"\u2035",breve:"\u02D8",Breve:"\u02D8",brvbar:"\xA6",bscr:"\u{1D4B7}",Bscr:"\u212C",bsemi:"\u204F",bsim:"\u223D",bsime:"\u22CD",bsol:"\\",bsolb:"\u29C5",bsolhsub:"\u27C8",bull:"\u2022",bullet:"\u2022",bump:"\u224E",bumpe:"\u224F",bumpE:"\u2AAE",bumpeq:"\u224F",Bumpeq:"\u224E",cacute:"\u0107",Cacute:"\u0106",cap:"\u2229",Cap:"\u22D2",capand:"\u2A44",capbrcup:"\u2A49",capcap:"\u2A4B",capcup:"\u2A47",capdot:"\u2A40",CapitalDifferentialD:"\u2145",caps:"\u2229\uFE00",caret:"\u2041",caron:"\u02C7",Cayleys:"\u212D",ccaps:"\u2A4D",ccaron:"\u010D",Ccaron:"\u010C",ccedil:"\xE7",Ccedil:"\xC7",ccirc:"\u0109",Ccirc:"\u0108",Cconint:"\u2230",ccups:"\u2A4C",ccupssm:"\u2A50",cdot:"\u010B",Cdot:"\u010A",cedil:"\xB8",Cedilla:"\xB8",cemptyv:"\u29B2",cent:"\xA2",centerdot:"\xB7",CenterDot:"\xB7",cfr:"\u{1D520}",Cfr:"\u212D",chcy:"\u0447",CHcy:"\u0427",check:"\u2713",checkmark:"\u2713",chi:"\u03C7",Chi:"\u03A7",cir:"\u25CB",circ:"\u02C6",circeq:"\u2257",circlearrowleft:"\u21BA",circlearrowright:"\u21BB",circledast:"\u229B",circledcirc:"\u229A",circleddash:"\u229D",CircleDot:"\u2299",circledR:"\xAE",circledS:"\u24C8",CircleMinus:"\u2296",CirclePlus:"\u2295",CircleTimes:"\u2297",cire:"\u2257",cirE:"\u29C3",cirfnint:"\u2A10",cirmid:"\u2AEF",cirscir:"\u29C2",ClockwiseContourIntegral:"\u2232",CloseCurlyDoubleQuote:"\u201D",CloseCurlyQuote:"\u2019",clubs:"\u2663",clubsuit:"\u2663",colon:":",Colon:"\u2237",colone:"\u2254",Colone:"\u2A74",coloneq:"\u2254",comma:",",commat:"@",comp:"\u2201",compfn:"\u2218",complement:"\u2201",complexes:"\u2102",cong:"\u2245",congdot:"\u2A6D",Congruent:"\u2261",conint:"\u222E",Conint:"\u222F",ContourIntegral:"\u222E",copf:"\u{1D554}",Copf:"\u2102",coprod:"\u2210",Coproduct:"\u2210",copy:"\xA9",COPY:"\xA9",copysr:"\u2117",CounterClockwiseContourIntegral:"\u2233",crarr:"\u21B5",cross:"\u2717",Cross:"\u2A2F",cscr:"\u{1D4B8}",Cscr:"\u{1D49E}",csub:"\u2ACF",csube:"\u2AD1",csup:"\u2AD0",csupe:"\u2AD2",ctdot:"\u22EF",cudarrl:"\u2938",cudarrr:"\u2935",cuepr:"\u22DE",cuesc:"\u22DF",cularr:"\u21B6",cularrp:"\u293D",cup:"\u222A",Cup:"\u22D3",cupbrcap:"\u2A48",cupcap:"\u2A46",CupCap:"\u224D",cupcup:"\u2A4A",cupdot:"\u228D",cupor:"\u2A45",cups:"\u222A\uFE00",curarr:"\u21B7",curarrm:"\u293C",curlyeqprec:"\u22DE",curlyeqsucc:"\u22DF",curlyvee:"\u22CE",curlywedge:"\u22CF",curren:"\xA4",curvearrowleft:"\u21B6",curvearrowright:"\u21B7",cuvee:"\u22CE",cuwed:"\u22CF",cwconint:"\u2232",cwint:"\u2231",cylcty:"\u232D",dagger:"\u2020",Dagger:"\u2021",daleth:"\u2138",darr:"\u2193",dArr:"\u21D3",Darr:"\u21A1",dash:"\u2010",dashv:"\u22A3",Dashv:"\u2AE4",dbkarow:"\u290F",dblac:"\u02DD",dcaron:"\u010F",Dcaron:"\u010E",dcy:"\u0434",Dcy:"\u0414",dd:"\u2146",DD:"\u2145",ddagger:"\u2021",ddarr:"\u21CA",DDotrahd:"\u2911",ddotseq:"\u2A77",deg:"\xB0",Del:"\u2207",delta:"\u03B4",Delta:"\u0394",demptyv:"\u29B1",dfisht:"\u297F",dfr:"\u{1D521}",Dfr:"\u{1D507}",dHar:"\u2965",dharl:"\u21C3",dharr:"\u21C2",DiacriticalAcute:"\xB4",DiacriticalDot:"\u02D9",DiacriticalDoubleAcute:"\u02DD",DiacriticalGrave:"`",DiacriticalTilde:"\u02DC",diam:"\u22C4",diamond:"\u22C4",Diamond:"\u22C4",diamondsuit:"\u2666",diams:"\u2666",die:"\xA8",DifferentialD:"\u2146",digamma:"\u03DD",disin:"\u22F2",div:"\xF7",divide:"\xF7",divideontimes:"\u22C7",divonx:"\u22C7",djcy:"\u0452",DJcy:"\u0402",dlcorn:"\u231E",dlcrop:"\u230D",dollar:"$",dopf:"\u{1D555}",Dopf:"\u{1D53B}",dot:"\u02D9",Dot:"\xA8",DotDot:"\u20DC",doteq:"\u2250",doteqdot:"\u2251",DotEqual:"\u2250",dotminus:"\u2238",dotplus:"\u2214",dotsquare:"\u22A1",doublebarwedge:"\u2306",DoubleContourIntegral:"\u222F",DoubleDot:"\xA8",DoubleDownArrow:"\u21D3",DoubleLeftArrow:"\u21D0",DoubleLeftRightArrow:"\u21D4",DoubleLeftTee:"\u2AE4",DoubleLongLeftArrow:"\u27F8",DoubleLongLeftRightArrow:"\u27FA",DoubleLongRightArrow:"\u27F9",DoubleRightArrow:"\u21D2",DoubleRightTee:"\u22A8",DoubleUpArrow:"\u21D1",DoubleUpDownArrow:"\u21D5",DoubleVerticalBar:"\u2225",downarrow:"\u2193",Downarrow:"\u21D3",DownArrow:"\u2193",DownArrowBar:"\u2913",DownArrowUpArrow:"\u21F5",DownBreve:"\u0311",downdownarrows:"\u21CA",downharpoonleft:"\u21C3",downharpoonright:"\u21C2",DownLeftRightVector:"\u2950",DownLeftTeeVector:"\u295E",DownLeftVector:"\u21BD",DownLeftVectorBar:"\u2956",DownRightTeeVector:"\u295F",DownRightVector:"\u21C1",DownRightVectorBar:"\u2957",DownTee:"\u22A4",DownTeeArrow:"\u21A7",drbkarow:"\u2910",drcorn:"\u231F",drcrop:"\u230C",dscr:"\u{1D4B9}",Dscr:"\u{1D49F}",dscy:"\u0455",DScy:"\u0405",dsol:"\u29F6",dstrok:"\u0111",Dstrok:"\u0110",dtdot:"\u22F1",dtri:"\u25BF",dtrif:"\u25BE",duarr:"\u21F5",duhar:"\u296F",dwangle:"\u29A6",dzcy:"\u045F",DZcy:"\u040F",dzigrarr:"\u27FF",eacute:"\xE9",Eacute:"\xC9",easter:"\u2A6E",ecaron:"\u011B",Ecaron:"\u011A",ecir:"\u2256",ecirc:"\xEA",Ecirc:"\xCA",ecolon:"\u2255",ecy:"\u044D",Ecy:"\u042D",eDDot:"\u2A77",edot:"\u0117",eDot:"\u2251",Edot:"\u0116",ee:"\u2147",efDot:"\u2252",efr:"\u{1D522}",Efr:"\u{1D508}",eg:"\u2A9A",egrave:"\xE8",Egrave:"\xC8",egs:"\u2A96",egsdot:"\u2A98",el:"\u2A99",Element:"\u2208",elinters:"\u23E7",ell:"\u2113",els:"\u2A95",elsdot:"\u2A97",emacr:"\u0113",Emacr:"\u0112",empty:"\u2205",emptyset:"\u2205",EmptySmallSquare:"\u25FB",emptyv:"\u2205",EmptyVerySmallSquare:"\u25AB",emsp:"\u2003",emsp13:"\u2004",emsp14:"\u2005",eng:"\u014B",ENG:"\u014A",ensp:"\u2002",eogon:"\u0119",Eogon:"\u0118",eopf:"\u{1D556}",Eopf:"\u{1D53C}",epar:"\u22D5",eparsl:"\u29E3",eplus:"\u2A71",epsi:"\u03B5",epsilon:"\u03B5",Epsilon:"\u0395",epsiv:"\u03F5",eqcirc:"\u2256",eqcolon:"\u2255",eqsim:"\u2242",eqslantgtr:"\u2A96",eqslantless:"\u2A95",Equal:"\u2A75",equals:"=",EqualTilde:"\u2242",equest:"\u225F",Equilibrium:"\u21CC",equiv:"\u2261",equivDD:"\u2A78",eqvparsl:"\u29E5",erarr:"\u2971",erDot:"\u2253",escr:"\u212F",Escr:"\u2130",esdot:"\u2250",esim:"\u2242",Esim:"\u2A73",eta:"\u03B7",Eta:"\u0397",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",euro:"\u20AC",excl:"!",exist:"\u2203",Exists:"\u2203",expectation:"\u2130",exponentiale:"\u2147",ExponentialE:"\u2147",fallingdotseq:"\u2252",fcy:"\u0444",Fcy:"\u0424",female:"\u2640",ffilig:"\uFB03",fflig:"\uFB00",ffllig:"\uFB04",ffr:"\u{1D523}",Ffr:"\u{1D509}",filig:"\uFB01",FilledSmallSquare:"\u25FC",FilledVerySmallSquare:"\u25AA",fjlig:"fj",flat:"\u266D",fllig:"\uFB02",fltns:"\u25B1",fnof:"\u0192",fopf:"\u{1D557}",Fopf:"\u{1D53D}",forall:"\u2200",ForAll:"\u2200",fork:"\u22D4",forkv:"\u2AD9",Fouriertrf:"\u2131",fpartint:"\u2A0D",frac12:"\xBD",frac13:"\u2153",frac14:"\xBC",frac15:"\u2155",frac16:"\u2159",frac18:"\u215B",frac23:"\u2154",frac25:"\u2156",frac34:"\xBE",frac35:"\u2157",frac38:"\u215C",frac45:"\u2158",frac56:"\u215A",frac58:"\u215D",frac78:"\u215E",frasl:"\u2044",frown:"\u2322",fscr:"\u{1D4BB}",Fscr:"\u2131",gacute:"\u01F5",gamma:"\u03B3",Gamma:"\u0393",gammad:"\u03DD",Gammad:"\u03DC",gap:"\u2A86",gbreve:"\u011F",Gbreve:"\u011E",Gcedil:"\u0122",gcirc:"\u011D",Gcirc:"\u011C",gcy:"\u0433",Gcy:"\u0413",gdot:"\u0121",Gdot:"\u0120",ge:"\u2265",gE:"\u2267",gel:"\u22DB",gEl:"\u2A8C",geq:"\u2265",geqq:"\u2267",geqslant:"\u2A7E",ges:"\u2A7E",gescc:"\u2AA9",gesdot:"\u2A80",gesdoto:"\u2A82",gesdotol:"\u2A84",gesl:"\u22DB\uFE00",gesles:"\u2A94",gfr:"\u{1D524}",Gfr:"\u{1D50A}",gg:"\u226B",Gg:"\u22D9",ggg:"\u22D9",gimel:"\u2137",gjcy:"\u0453",GJcy:"\u0403",gl:"\u2277",gla:"\u2AA5",glE:"\u2A92",glj:"\u2AA4",gnap:"\u2A8A",gnapprox:"\u2A8A",gne:"\u2A88",gnE:"\u2269",gneq:"\u2A88",gneqq:"\u2269",gnsim:"\u22E7",gopf:"\u{1D558}",Gopf:"\u{1D53E}",grave:"`",GreaterEqual:"\u2265",GreaterEqualLess:"\u22DB",GreaterFullEqual:"\u2267",GreaterGreater:"\u2AA2",GreaterLess:"\u2277",GreaterSlantEqual:"\u2A7E",GreaterTilde:"\u2273",gscr:"\u210A",Gscr:"\u{1D4A2}",gsim:"\u2273",gsime:"\u2A8E",gsiml:"\u2A90",gt:">",Gt:"\u226B",GT:">",gtcc:"\u2AA7",gtcir:"\u2A7A",gtdot:"\u22D7",gtlPar:"\u2995",gtquest:"\u2A7C",gtrapprox:"\u2A86",gtrarr:"\u2978",gtrdot:"\u22D7",gtreqless:"\u22DB",gtreqqless:"\u2A8C",gtrless:"\u2277",gtrsim:"\u2273",gvertneqq:"\u2269\uFE00",gvnE:"\u2269\uFE00",Hacek:"\u02C7",hairsp:"\u200A",half:"\xBD",hamilt:"\u210B",hardcy:"\u044A",HARDcy:"\u042A",harr:"\u2194",hArr:"\u21D4",harrcir:"\u2948",harrw:"\u21AD",Hat:"^",hbar:"\u210F",hcirc:"\u0125",Hcirc:"\u0124",hearts:"\u2665",heartsuit:"\u2665",hellip:"\u2026",hercon:"\u22B9",hfr:"\u{1D525}",Hfr:"\u210C",HilbertSpace:"\u210B",hksearow:"\u2925",hkswarow:"\u2926",hoarr:"\u21FF",homtht:"\u223B",hookleftarrow:"\u21A9",hookrightarrow:"\u21AA",hopf:"\u{1D559}",Hopf:"\u210D",horbar:"\u2015",HorizontalLine:"\u2500",hscr:"\u{1D4BD}",Hscr:"\u210B",hslash:"\u210F",hstrok:"\u0127",Hstrok:"\u0126",HumpDownHump:"\u224E",HumpEqual:"\u224F",hybull:"\u2043",hyphen:"\u2010",iacute:"\xED",Iacute:"\xCD",ic:"\u2063",icirc:"\xEE",Icirc:"\xCE",icy:"\u0438",Icy:"\u0418",Idot:"\u0130",iecy:"\u0435",IEcy:"\u0415",iexcl:"\xA1",iff:"\u21D4",ifr:"\u{1D526}",Ifr:"\u2111",igrave:"\xEC",Igrave:"\xCC",ii:"\u2148",iiiint:"\u2A0C",iiint:"\u222D",iinfin:"\u29DC",iiota:"\u2129",ijlig:"\u0133",IJlig:"\u0132",Im:"\u2111",imacr:"\u012B",Imacr:"\u012A",image:"\u2111",ImaginaryI:"\u2148",imagline:"\u2110",imagpart:"\u2111",imath:"\u0131",imof:"\u22B7",imped:"\u01B5",Implies:"\u21D2",in:"\u2208",incare:"\u2105",infin:"\u221E",infintie:"\u29DD",inodot:"\u0131",int:"\u222B",Int:"\u222C",intcal:"\u22BA",integers:"\u2124",Integral:"\u222B",intercal:"\u22BA",Intersection:"\u22C2",intlarhk:"\u2A17",intprod:"\u2A3C",InvisibleComma:"\u2063",InvisibleTimes:"\u2062",iocy:"\u0451",IOcy:"\u0401",iogon:"\u012F",Iogon:"\u012E",iopf:"\u{1D55A}",Iopf:"\u{1D540}",iota:"\u03B9",Iota:"\u0399",iprod:"\u2A3C",iquest:"\xBF",iscr:"\u{1D4BE}",Iscr:"\u2110",isin:"\u2208",isindot:"\u22F5",isinE:"\u22F9",isins:"\u22F4",isinsv:"\u22F3",isinv:"\u2208",it:"\u2062",itilde:"\u0129",Itilde:"\u0128",iukcy:"\u0456",Iukcy:"\u0406",iuml:"\xEF",Iuml:"\xCF",jcirc:"\u0135",Jcirc:"\u0134",jcy:"\u0439",Jcy:"\u0419",jfr:"\u{1D527}",Jfr:"\u{1D50D}",jmath:"\u0237",jopf:"\u{1D55B}",Jopf:"\u{1D541}",jscr:"\u{1D4BF}",Jscr:"\u{1D4A5}",jsercy:"\u0458",Jsercy:"\u0408",jukcy:"\u0454",Jukcy:"\u0404",kappa:"\u03BA",Kappa:"\u039A",kappav:"\u03F0",kcedil:"\u0137",Kcedil:"\u0136",kcy:"\u043A",Kcy:"\u041A",kfr:"\u{1D528}",Kfr:"\u{1D50E}",kgreen:"\u0138",khcy:"\u0445",KHcy:"\u0425",kjcy:"\u045C",KJcy:"\u040C",kopf:"\u{1D55C}",Kopf:"\u{1D542}",kscr:"\u{1D4C0}",Kscr:"\u{1D4A6}",lAarr:"\u21DA",lacute:"\u013A",Lacute:"\u0139",laemptyv:"\u29B4",lagran:"\u2112",lambda:"\u03BB",Lambda:"\u039B",lang:"\u27E8",Lang:"\u27EA",langd:"\u2991",langle:"\u27E8",lap:"\u2A85",Laplacetrf:"\u2112",laquo:"\xAB",larr:"\u2190",lArr:"\u21D0",Larr:"\u219E",larrb:"\u21E4",larrbfs:"\u291F",larrfs:"\u291D",larrhk:"\u21A9",larrlp:"\u21AB",larrpl:"\u2939",larrsim:"\u2973",larrtl:"\u21A2",lat:"\u2AAB",latail:"\u2919",lAtail:"\u291B",late:"\u2AAD",lates:"\u2AAD\uFE00",lbarr:"\u290C",lBarr:"\u290E",lbbrk:"\u2772",lbrace:"{",lbrack:"[",lbrke:"\u298B",lbrksld:"\u298F",lbrkslu:"\u298D",lcaron:"\u013E",Lcaron:"\u013D",lcedil:"\u013C",Lcedil:"\u013B",lceil:"\u2308",lcub:"{",lcy:"\u043B",Lcy:"\u041B",ldca:"\u2936",ldquo:"\u201C",ldquor:"\u201E",ldrdhar:"\u2967",ldrushar:"\u294B",ldsh:"\u21B2",le:"\u2264",lE:"\u2266",LeftAngleBracket:"\u27E8",leftarrow:"\u2190",Leftarrow:"\u21D0",LeftArrow:"\u2190",LeftArrowBar:"\u21E4",LeftArrowRightArrow:"\u21C6",leftarrowtail:"\u21A2",LeftCeiling:"\u2308",LeftDoubleBracket:"\u27E6",LeftDownTeeVector:"\u2961",LeftDownVector:"\u21C3",LeftDownVectorBar:"\u2959",LeftFloor:"\u230A",leftharpoondown:"\u21BD",leftharpoonup:"\u21BC",leftleftarrows:"\u21C7",leftrightarrow:"\u2194",Leftrightarrow:"\u21D4",LeftRightArrow:"\u2194",leftrightarrows:"\u21C6",leftrightharpoons:"\u21CB",leftrightsquigarrow:"\u21AD",LeftRightVector:"\u294E",LeftTee:"\u22A3",LeftTeeArrow:"\u21A4",LeftTeeVector:"\u295A",leftthreetimes:"\u22CB",LeftTriangle:"\u22B2",LeftTriangleBar:"\u29CF",LeftTriangleEqual:"\u22B4",LeftUpDownVector:"\u2951",LeftUpTeeVector:"\u2960",LeftUpVector:"\u21BF",LeftUpVectorBar:"\u2958",LeftVector:"\u21BC",LeftVectorBar:"\u2952",leg:"\u22DA",lEg:"\u2A8B",leq:"\u2264",leqq:"\u2266",leqslant:"\u2A7D",les:"\u2A7D",lescc:"\u2AA8",lesdot:"\u2A7F",lesdoto:"\u2A81",lesdotor:"\u2A83",lesg:"\u22DA\uFE00",lesges:"\u2A93",lessapprox:"\u2A85",lessdot:"\u22D6",lesseqgtr:"\u22DA",lesseqqgtr:"\u2A8B",LessEqualGreater:"\u22DA",LessFullEqual:"\u2266",LessGreater:"\u2276",lessgtr:"\u2276",LessLess:"\u2AA1",lesssim:"\u2272",LessSlantEqual:"\u2A7D",LessTilde:"\u2272",lfisht:"\u297C",lfloor:"\u230A",lfr:"\u{1D529}",Lfr:"\u{1D50F}",lg:"\u2276",lgE:"\u2A91",lHar:"\u2962",lhard:"\u21BD",lharu:"\u21BC",lharul:"\u296A",lhblk:"\u2584",ljcy:"\u0459",LJcy:"\u0409",ll:"\u226A",Ll:"\u22D8",llarr:"\u21C7",llcorner:"\u231E",Lleftarrow:"\u21DA",llhard:"\u296B",lltri:"\u25FA",lmidot:"\u0140",Lmidot:"\u013F",lmoust:"\u23B0",lmoustache:"\u23B0",lnap:"\u2A89",lnapprox:"\u2A89",lne:"\u2A87",lnE:"\u2268",lneq:"\u2A87",lneqq:"\u2268",lnsim:"\u22E6",loang:"\u27EC",loarr:"\u21FD",lobrk:"\u27E6",longleftarrow:"\u27F5",Longleftarrow:"\u27F8",LongLeftArrow:"\u27F5",longleftrightarrow:"\u27F7",Longleftrightarrow:"\u27FA",LongLeftRightArrow:"\u27F7",longmapsto:"\u27FC",longrightarrow:"\u27F6",Longrightarrow:"\u27F9",LongRightArrow:"\u27F6",looparrowleft:"\u21AB",looparrowright:"\u21AC",lopar:"\u2985",lopf:"\u{1D55D}",Lopf:"\u{1D543}",loplus:"\u2A2D",lotimes:"\u2A34",lowast:"\u2217",lowbar:"_",LowerLeftArrow:"\u2199",LowerRightArrow:"\u2198",loz:"\u25CA",lozenge:"\u25CA",lozf:"\u29EB",lpar:"(",lparlt:"\u2993",lrarr:"\u21C6",lrcorner:"\u231F",lrhar:"\u21CB",lrhard:"\u296D",lrm:"\u200E",lrtri:"\u22BF",lsaquo:"\u2039",lscr:"\u{1D4C1}",Lscr:"\u2112",lsh:"\u21B0",Lsh:"\u21B0",lsim:"\u2272",lsime:"\u2A8D",lsimg:"\u2A8F",lsqb:"[",lsquo:"\u2018",lsquor:"\u201A",lstrok:"\u0142",Lstrok:"\u0141",lt:"<",Lt:"\u226A",LT:"<",ltcc:"\u2AA6",ltcir:"\u2A79",ltdot:"\u22D6",lthree:"\u22CB",ltimes:"\u22C9",ltlarr:"\u2976",ltquest:"\u2A7B",ltri:"\u25C3",ltrie:"\u22B4",ltrif:"\u25C2",ltrPar:"\u2996",lurdshar:"\u294A",luruhar:"\u2966",lvertneqq:"\u2268\uFE00",lvnE:"\u2268\uFE00",macr:"\xAF",male:"\u2642",malt:"\u2720",maltese:"\u2720",map:"\u21A6",Map:"\u2905",mapsto:"\u21A6",mapstodown:"\u21A7",mapstoleft:"\u21A4",mapstoup:"\u21A5",marker:"\u25AE",mcomma:"\u2A29",mcy:"\u043C",Mcy:"\u041C",mdash:"\u2014",mDDot:"\u223A",measuredangle:"\u2221",MediumSpace:"\u205F",Mellintrf:"\u2133",mfr:"\u{1D52A}",Mfr:"\u{1D510}",mho:"\u2127",micro:"\xB5",mid:"\u2223",midast:"*",midcir:"\u2AF0",middot:"\xB7",minus:"\u2212",minusb:"\u229F",minusd:"\u2238",minusdu:"\u2A2A",MinusPlus:"\u2213",mlcp:"\u2ADB",mldr:"\u2026",mnplus:"\u2213",models:"\u22A7",mopf:"\u{1D55E}",Mopf:"\u{1D544}",mp:"\u2213",mscr:"\u{1D4C2}",Mscr:"\u2133",mstpos:"\u223E",mu:"\u03BC",Mu:"\u039C",multimap:"\u22B8",mumap:"\u22B8",nabla:"\u2207",nacute:"\u0144",Nacute:"\u0143",nang:"\u2220\u20D2",nap:"\u2249",napE:"\u2A70\u0338",napid:"\u224B\u0338",napos:"\u0149",napprox:"\u2249",natur:"\u266E",natural:"\u266E",naturals:"\u2115",nbsp:"\xA0",nbump:"\u224E\u0338",nbumpe:"\u224F\u0338",ncap:"\u2A43",ncaron:"\u0148",Ncaron:"\u0147",ncedil:"\u0146",Ncedil:"\u0145",ncong:"\u2247",ncongdot:"\u2A6D\u0338",ncup:"\u2A42",ncy:"\u043D",Ncy:"\u041D",ndash:"\u2013",ne:"\u2260",nearhk:"\u2924",nearr:"\u2197",neArr:"\u21D7",nearrow:"\u2197",nedot:"\u2250\u0338",NegativeMediumSpace:"\u200B",NegativeThickSpace:"\u200B",NegativeThinSpace:"\u200B",NegativeVeryThinSpace:"\u200B",nequiv:"\u2262",nesear:"\u2928",nesim:"\u2242\u0338",NestedGreaterGreater:"\u226B",NestedLessLess:"\u226A",NewLine:`
`,nexist:"\u2204",nexists:"\u2204",nfr:"\u{1D52B}",Nfr:"\u{1D511}",nge:"\u2271",ngE:"\u2267\u0338",ngeq:"\u2271",ngeqq:"\u2267\u0338",ngeqslant:"\u2A7E\u0338",nges:"\u2A7E\u0338",nGg:"\u22D9\u0338",ngsim:"\u2275",ngt:"\u226F",nGt:"\u226B\u20D2",ngtr:"\u226F",nGtv:"\u226B\u0338",nharr:"\u21AE",nhArr:"\u21CE",nhpar:"\u2AF2",ni:"\u220B",nis:"\u22FC",nisd:"\u22FA",niv:"\u220B",njcy:"\u045A",NJcy:"\u040A",nlarr:"\u219A",nlArr:"\u21CD",nldr:"\u2025",nle:"\u2270",nlE:"\u2266\u0338",nleftarrow:"\u219A",nLeftarrow:"\u21CD",nleftrightarrow:"\u21AE",nLeftrightarrow:"\u21CE",nleq:"\u2270",nleqq:"\u2266\u0338",nleqslant:"\u2A7D\u0338",nles:"\u2A7D\u0338",nless:"\u226E",nLl:"\u22D8\u0338",nlsim:"\u2274",nlt:"\u226E",nLt:"\u226A\u20D2",nltri:"\u22EA",nltrie:"\u22EC",nLtv:"\u226A\u0338",nmid:"\u2224",NoBreak:"\u2060",NonBreakingSpace:"\xA0",nopf:"\u{1D55F}",Nopf:"\u2115",not:"\xAC",Not:"\u2AEC",NotCongruent:"\u2262",NotCupCap:"\u226D",NotDoubleVerticalBar:"\u2226",NotElement:"\u2209",NotEqual:"\u2260",NotEqualTilde:"\u2242\u0338",NotExists:"\u2204",NotGreater:"\u226F",NotGreaterEqual:"\u2271",NotGreaterFullEqual:"\u2267\u0338",NotGreaterGreater:"\u226B\u0338",NotGreaterLess:"\u2279",NotGreaterSlantEqual:"\u2A7E\u0338",NotGreaterTilde:"\u2275",NotHumpDownHump:"\u224E\u0338",NotHumpEqual:"\u224F\u0338",notin:"\u2209",notindot:"\u22F5\u0338",notinE:"\u22F9\u0338",notinva:"\u2209",notinvb:"\u22F7",notinvc:"\u22F6",NotLeftTriangle:"\u22EA",NotLeftTriangleBar:"\u29CF\u0338",NotLeftTriangleEqual:"\u22EC",NotLess:"\u226E",NotLessEqual:"\u2270",NotLessGreater:"\u2278",NotLessLess:"\u226A\u0338",NotLessSlantEqual:"\u2A7D\u0338",NotLessTilde:"\u2274",NotNestedGreaterGreater:"\u2AA2\u0338",NotNestedLessLess:"\u2AA1\u0338",notni:"\u220C",notniva:"\u220C",notnivb:"\u22FE",notnivc:"\u22FD",NotPrecedes:"\u2280",NotPrecedesEqual:"\u2AAF\u0338",NotPrecedesSlantEqual:"\u22E0",NotReverseElement:"\u220C",NotRightTriangle:"\u22EB",NotRightTriangleBar:"\u29D0\u0338",NotRightTriangleEqual:"\u22ED",NotSquareSubset:"\u228F\u0338",NotSquareSubsetEqual:"\u22E2",NotSquareSuperset:"\u2290\u0338",NotSquareSupersetEqual:"\u22E3",NotSubset:"\u2282\u20D2",NotSubsetEqual:"\u2288",NotSucceeds:"\u2281",NotSucceedsEqual:"\u2AB0\u0338",NotSucceedsSlantEqual:"\u22E1",NotSucceedsTilde:"\u227F\u0338",NotSuperset:"\u2283\u20D2",NotSupersetEqual:"\u2289",NotTilde:"\u2241",NotTildeEqual:"\u2244",NotTildeFullEqual:"\u2247",NotTildeTilde:"\u2249",NotVerticalBar:"\u2224",npar:"\u2226",nparallel:"\u2226",nparsl:"\u2AFD\u20E5",npart:"\u2202\u0338",npolint:"\u2A14",npr:"\u2280",nprcue:"\u22E0",npre:"\u2AAF\u0338",nprec:"\u2280",npreceq:"\u2AAF\u0338",nrarr:"\u219B",nrArr:"\u21CF",nrarrc:"\u2933\u0338",nrarrw:"\u219D\u0338",nrightarrow:"\u219B",nRightarrow:"\u21CF",nrtri:"\u22EB",nrtrie:"\u22ED",nsc:"\u2281",nsccue:"\u22E1",nsce:"\u2AB0\u0338",nscr:"\u{1D4C3}",Nscr:"\u{1D4A9}",nshortmid:"\u2224",nshortparallel:"\u2226",nsim:"\u2241",nsime:"\u2244",nsimeq:"\u2244",nsmid:"\u2224",nspar:"\u2226",nsqsube:"\u22E2",nsqsupe:"\u22E3",nsub:"\u2284",nsube:"\u2288",nsubE:"\u2AC5\u0338",nsubset:"\u2282\u20D2",nsubseteq:"\u2288",nsubseteqq:"\u2AC5\u0338",nsucc:"\u2281",nsucceq:"\u2AB0\u0338",nsup:"\u2285",nsupe:"\u2289",nsupE:"\u2AC6\u0338",nsupset:"\u2283\u20D2",nsupseteq:"\u2289",nsupseteqq:"\u2AC6\u0338",ntgl:"\u2279",ntilde:"\xF1",Ntilde:"\xD1",ntlg:"\u2278",ntriangleleft:"\u22EA",ntrianglelefteq:"\u22EC",ntriangleright:"\u22EB",ntrianglerighteq:"\u22ED",nu:"\u03BD",Nu:"\u039D",num:"#",numero:"\u2116",numsp:"\u2007",nvap:"\u224D\u20D2",nvdash:"\u22AC",nvDash:"\u22AD",nVdash:"\u22AE",nVDash:"\u22AF",nvge:"\u2265\u20D2",nvgt:">\u20D2",nvHarr:"\u2904",nvinfin:"\u29DE",nvlArr:"\u2902",nvle:"\u2264\u20D2",nvlt:"<\u20D2",nvltrie:"\u22B4\u20D2",nvrArr:"\u2903",nvrtrie:"\u22B5\u20D2",nvsim:"\u223C\u20D2",nwarhk:"\u2923",nwarr:"\u2196",nwArr:"\u21D6",nwarrow:"\u2196",nwnear:"\u2927",oacute:"\xF3",Oacute:"\xD3",oast:"\u229B",ocir:"\u229A",ocirc:"\xF4",Ocirc:"\xD4",ocy:"\u043E",Ocy:"\u041E",odash:"\u229D",odblac:"\u0151",Odblac:"\u0150",odiv:"\u2A38",odot:"\u2299",odsold:"\u29BC",oelig:"\u0153",OElig:"\u0152",ofcir:"\u29BF",ofr:"\u{1D52C}",Ofr:"\u{1D512}",ogon:"\u02DB",ograve:"\xF2",Ograve:"\xD2",ogt:"\u29C1",ohbar:"\u29B5",ohm:"\u03A9",oint:"\u222E",olarr:"\u21BA",olcir:"\u29BE",olcross:"\u29BB",oline:"\u203E",olt:"\u29C0",omacr:"\u014D",Omacr:"\u014C",omega:"\u03C9",Omega:"\u03A9",omicron:"\u03BF",Omicron:"\u039F",omid:"\u29B6",ominus:"\u2296",oopf:"\u{1D560}",Oopf:"\u{1D546}",opar:"\u29B7",OpenCurlyDoubleQuote:"\u201C",OpenCurlyQuote:"\u2018",operp:"\u29B9",oplus:"\u2295",or:"\u2228",Or:"\u2A54",orarr:"\u21BB",ord:"\u2A5D",order:"\u2134",orderof:"\u2134",ordf:"\xAA",ordm:"\xBA",origof:"\u22B6",oror:"\u2A56",orslope:"\u2A57",orv:"\u2A5B",oS:"\u24C8",oscr:"\u2134",Oscr:"\u{1D4AA}",oslash:"\xF8",Oslash:"\xD8",osol:"\u2298",otilde:"\xF5",Otilde:"\xD5",otimes:"\u2297",Otimes:"\u2A37",otimesas:"\u2A36",ouml:"\xF6",Ouml:"\xD6",ovbar:"\u233D",OverBar:"\u203E",OverBrace:"\u23DE",OverBracket:"\u23B4",OverParenthesis:"\u23DC",par:"\u2225",para:"\xB6",parallel:"\u2225",parsim:"\u2AF3",parsl:"\u2AFD",part:"\u2202",PartialD:"\u2202",pcy:"\u043F",Pcy:"\u041F",percnt:"%",period:".",permil:"\u2030",perp:"\u22A5",pertenk:"\u2031",pfr:"\u{1D52D}",Pfr:"\u{1D513}",phi:"\u03C6",Phi:"\u03A6",phiv:"\u03D5",phmmat:"\u2133",phone:"\u260E",pi:"\u03C0",Pi:"\u03A0",pitchfork:"\u22D4",piv:"\u03D6",planck:"\u210F",planckh:"\u210E",plankv:"\u210F",plus:"+",plusacir:"\u2A23",plusb:"\u229E",pluscir:"\u2A22",plusdo:"\u2214",plusdu:"\u2A25",pluse:"\u2A72",PlusMinus:"\xB1",plusmn:"\xB1",plussim:"\u2A26",plustwo:"\u2A27",pm:"\xB1",Poincareplane:"\u210C",pointint:"\u2A15",popf:"\u{1D561}",Popf:"\u2119",pound:"\xA3",pr:"\u227A",Pr:"\u2ABB",prap:"\u2AB7",prcue:"\u227C",pre:"\u2AAF",prE:"\u2AB3",prec:"\u227A",precapprox:"\u2AB7",preccurlyeq:"\u227C",Precedes:"\u227A",PrecedesEqual:"\u2AAF",PrecedesSlantEqual:"\u227C",PrecedesTilde:"\u227E",preceq:"\u2AAF",precnapprox:"\u2AB9",precneqq:"\u2AB5",precnsim:"\u22E8",precsim:"\u227E",prime:"\u2032",Prime:"\u2033",primes:"\u2119",prnap:"\u2AB9",prnE:"\u2AB5",prnsim:"\u22E8",prod:"\u220F",Product:"\u220F",profalar:"\u232E",profline:"\u2312",profsurf:"\u2313",prop:"\u221D",Proportion:"\u2237",Proportional:"\u221D",propto:"\u221D",prsim:"\u227E",prurel:"\u22B0",pscr:"\u{1D4C5}",Pscr:"\u{1D4AB}",psi:"\u03C8",Psi:"\u03A8",puncsp:"\u2008",qfr:"\u{1D52E}",Qfr:"\u{1D514}",qint:"\u2A0C",qopf:"\u{1D562}",Qopf:"\u211A",qprime:"\u2057",qscr:"\u{1D4C6}",Qscr:"\u{1D4AC}",quaternions:"\u210D",quatint:"\u2A16",quest:"?",questeq:"\u225F",quot:'"',QUOT:'"',rAarr:"\u21DB",race:"\u223D\u0331",racute:"\u0155",Racute:"\u0154",radic:"\u221A",raemptyv:"\u29B3",rang:"\u27E9",Rang:"\u27EB",rangd:"\u2992",range:"\u29A5",rangle:"\u27E9",raquo:"\xBB",rarr:"\u2192",rArr:"\u21D2",Rarr:"\u21A0",rarrap:"\u2975",rarrb:"\u21E5",rarrbfs:"\u2920",rarrc:"\u2933",rarrfs:"\u291E",rarrhk:"\u21AA",rarrlp:"\u21AC",rarrpl:"\u2945",rarrsim:"\u2974",rarrtl:"\u21A3",Rarrtl:"\u2916",rarrw:"\u219D",ratail:"\u291A",rAtail:"\u291C",ratio:"\u2236",rationals:"\u211A",rbarr:"\u290D",rBarr:"\u290F",RBarr:"\u2910",rbbrk:"\u2773",rbrace:"}",rbrack:"]",rbrke:"\u298C",rbrksld:"\u298E",rbrkslu:"\u2990",rcaron:"\u0159",Rcaron:"\u0158",rcedil:"\u0157",Rcedil:"\u0156",rceil:"\u2309",rcub:"}",rcy:"\u0440",Rcy:"\u0420",rdca:"\u2937",rdldhar:"\u2969",rdquo:"\u201D",rdquor:"\u201D",rdsh:"\u21B3",Re:"\u211C",real:"\u211C",realine:"\u211B",realpart:"\u211C",reals:"\u211D",rect:"\u25AD",reg:"\xAE",REG:"\xAE",ReverseElement:"\u220B",ReverseEquilibrium:"\u21CB",ReverseUpEquilibrium:"\u296F",rfisht:"\u297D",rfloor:"\u230B",rfr:"\u{1D52F}",Rfr:"\u211C",rHar:"\u2964",rhard:"\u21C1",rharu:"\u21C0",rharul:"\u296C",rho:"\u03C1",Rho:"\u03A1",rhov:"\u03F1",RightAngleBracket:"\u27E9",rightarrow:"\u2192",Rightarrow:"\u21D2",RightArrow:"\u2192",RightArrowBar:"\u21E5",RightArrowLeftArrow:"\u21C4",rightarrowtail:"\u21A3",RightCeiling:"\u2309",RightDoubleBracket:"\u27E7",RightDownTeeVector:"\u295D",RightDownVector:"\u21C2",RightDownVectorBar:"\u2955",RightFloor:"\u230B",rightharpoondown:"\u21C1",rightharpoonup:"\u21C0",rightleftarrows:"\u21C4",rightleftharpoons:"\u21CC",rightrightarrows:"\u21C9",rightsquigarrow:"\u219D",RightTee:"\u22A2",RightTeeArrow:"\u21A6",RightTeeVector:"\u295B",rightthreetimes:"\u22CC",RightTriangle:"\u22B3",RightTriangleBar:"\u29D0",RightTriangleEqual:"\u22B5",RightUpDownVector:"\u294F",RightUpTeeVector:"\u295C",RightUpVector:"\u21BE",RightUpVectorBar:"\u2954",RightVector:"\u21C0",RightVectorBar:"\u2953",ring:"\u02DA",risingdotseq:"\u2253",rlarr:"\u21C4",rlhar:"\u21CC",rlm:"\u200F",rmoust:"\u23B1",rmoustache:"\u23B1",rnmid:"\u2AEE",roang:"\u27ED",roarr:"\u21FE",robrk:"\u27E7",ropar:"\u2986",ropf:"\u{1D563}",Ropf:"\u211D",roplus:"\u2A2E",rotimes:"\u2A35",RoundImplies:"\u2970",rpar:")",rpargt:"\u2994",rppolint:"\u2A12",rrarr:"\u21C9",Rrightarrow:"\u21DB",rsaquo:"\u203A",rscr:"\u{1D4C7}",Rscr:"\u211B",rsh:"\u21B1",Rsh:"\u21B1",rsqb:"]",rsquo:"\u2019",rsquor:"\u2019",rthree:"\u22CC",rtimes:"\u22CA",rtri:"\u25B9",rtrie:"\u22B5",rtrif:"\u25B8",rtriltri:"\u29CE",RuleDelayed:"\u29F4",ruluhar:"\u2968",rx:"\u211E",sacute:"\u015B",Sacute:"\u015A",sbquo:"\u201A",sc:"\u227B",Sc:"\u2ABC",scap:"\u2AB8",scaron:"\u0161",Scaron:"\u0160",sccue:"\u227D",sce:"\u2AB0",scE:"\u2AB4",scedil:"\u015F",Scedil:"\u015E",scirc:"\u015D",Scirc:"\u015C",scnap:"\u2ABA",scnE:"\u2AB6",scnsim:"\u22E9",scpolint:"\u2A13",scsim:"\u227F",scy:"\u0441",Scy:"\u0421",sdot:"\u22C5",sdotb:"\u22A1",sdote:"\u2A66",searhk:"\u2925",searr:"\u2198",seArr:"\u21D8",searrow:"\u2198",sect:"\xA7",semi:";",seswar:"\u2929",setminus:"\u2216",setmn:"\u2216",sext:"\u2736",sfr:"\u{1D530}",Sfr:"\u{1D516}",sfrown:"\u2322",sharp:"\u266F",shchcy:"\u0449",SHCHcy:"\u0429",shcy:"\u0448",SHcy:"\u0428",ShortDownArrow:"\u2193",ShortLeftArrow:"\u2190",shortmid:"\u2223",shortparallel:"\u2225",ShortRightArrow:"\u2192",ShortUpArrow:"\u2191",shy:"\xAD",sigma:"\u03C3",Sigma:"\u03A3",sigmaf:"\u03C2",sigmav:"\u03C2",sim:"\u223C",simdot:"\u2A6A",sime:"\u2243",simeq:"\u2243",simg:"\u2A9E",simgE:"\u2AA0",siml:"\u2A9D",simlE:"\u2A9F",simne:"\u2246",simplus:"\u2A24",simrarr:"\u2972",slarr:"\u2190",SmallCircle:"\u2218",smallsetminus:"\u2216",smashp:"\u2A33",smeparsl:"\u29E4",smid:"\u2223",smile:"\u2323",smt:"\u2AAA",smte:"\u2AAC",smtes:"\u2AAC\uFE00",softcy:"\u044C",SOFTcy:"\u042C",sol:"/",solb:"\u29C4",solbar:"\u233F",sopf:"\u{1D564}",Sopf:"\u{1D54A}",spades:"\u2660",spadesuit:"\u2660",spar:"\u2225",sqcap:"\u2293",sqcaps:"\u2293\uFE00",sqcup:"\u2294",sqcups:"\u2294\uFE00",Sqrt:"\u221A",sqsub:"\u228F",sqsube:"\u2291",sqsubset:"\u228F",sqsubseteq:"\u2291",sqsup:"\u2290",sqsupe:"\u2292",sqsupset:"\u2290",sqsupseteq:"\u2292",squ:"\u25A1",square:"\u25A1",Square:"\u25A1",SquareIntersection:"\u2293",SquareSubset:"\u228F",SquareSubsetEqual:"\u2291",SquareSuperset:"\u2290",SquareSupersetEqual:"\u2292",SquareUnion:"\u2294",squarf:"\u25AA",squf:"\u25AA",srarr:"\u2192",sscr:"\u{1D4C8}",Sscr:"\u{1D4AE}",ssetmn:"\u2216",ssmile:"\u2323",sstarf:"\u22C6",star:"\u2606",Star:"\u22C6",starf:"\u2605",straightepsilon:"\u03F5",straightphi:"\u03D5",strns:"\xAF",sub:"\u2282",Sub:"\u22D0",subdot:"\u2ABD",sube:"\u2286",subE:"\u2AC5",subedot:"\u2AC3",submult:"\u2AC1",subne:"\u228A",subnE:"\u2ACB",subplus:"\u2ABF",subrarr:"\u2979",subset:"\u2282",Subset:"\u22D0",subseteq:"\u2286",subseteqq:"\u2AC5",SubsetEqual:"\u2286",subsetneq:"\u228A",subsetneqq:"\u2ACB",subsim:"\u2AC7",subsub:"\u2AD5",subsup:"\u2AD3",succ:"\u227B",succapprox:"\u2AB8",succcurlyeq:"\u227D",Succeeds:"\u227B",SucceedsEqual:"\u2AB0",SucceedsSlantEqual:"\u227D",SucceedsTilde:"\u227F",succeq:"\u2AB0",succnapprox:"\u2ABA",succneqq:"\u2AB6",succnsim:"\u22E9",succsim:"\u227F",SuchThat:"\u220B",sum:"\u2211",Sum:"\u2211",sung:"\u266A",sup:"\u2283",Sup:"\u22D1",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",supdot:"\u2ABE",supdsub:"\u2AD8",supe:"\u2287",supE:"\u2AC6",supedot:"\u2AC4",Superset:"\u2283",SupersetEqual:"\u2287",suphsol:"\u27C9",suphsub:"\u2AD7",suplarr:"\u297B",supmult:"\u2AC2",supne:"\u228B",supnE:"\u2ACC",supplus:"\u2AC0",supset:"\u2283",Supset:"\u22D1",supseteq:"\u2287",supseteqq:"\u2AC6",supsetneq:"\u228B",supsetneqq:"\u2ACC",supsim:"\u2AC8",supsub:"\u2AD4",supsup:"\u2AD6",swarhk:"\u2926",swarr:"\u2199",swArr:"\u21D9",swarrow:"\u2199",swnwar:"\u292A",szlig:"\xDF",Tab:"	",target:"\u2316",tau:"\u03C4",Tau:"\u03A4",tbrk:"\u23B4",tcaron:"\u0165",Tcaron:"\u0164",tcedil:"\u0163",Tcedil:"\u0162",tcy:"\u0442",Tcy:"\u0422",tdot:"\u20DB",telrec:"\u2315",tfr:"\u{1D531}",Tfr:"\u{1D517}",there4:"\u2234",therefore:"\u2234",Therefore:"\u2234",theta:"\u03B8",Theta:"\u0398",thetasym:"\u03D1",thetav:"\u03D1",thickapprox:"\u2248",thicksim:"\u223C",ThickSpace:"\u205F\u200A",thinsp:"\u2009",ThinSpace:"\u2009",thkap:"\u2248",thksim:"\u223C",thorn:"\xFE",THORN:"\xDE",tilde:"\u02DC",Tilde:"\u223C",TildeEqual:"\u2243",TildeFullEqual:"\u2245",TildeTilde:"\u2248",times:"\xD7",timesb:"\u22A0",timesbar:"\u2A31",timesd:"\u2A30",tint:"\u222D",toea:"\u2928",top:"\u22A4",topbot:"\u2336",topcir:"\u2AF1",topf:"\u{1D565}",Topf:"\u{1D54B}",topfork:"\u2ADA",tosa:"\u2929",tprime:"\u2034",trade:"\u2122",TRADE:"\u2122",triangle:"\u25B5",triangledown:"\u25BF",triangleleft:"\u25C3",trianglelefteq:"\u22B4",triangleq:"\u225C",triangleright:"\u25B9",trianglerighteq:"\u22B5",tridot:"\u25EC",trie:"\u225C",triminus:"\u2A3A",TripleDot:"\u20DB",triplus:"\u2A39",trisb:"\u29CD",tritime:"\u2A3B",trpezium:"\u23E2",tscr:"\u{1D4C9}",Tscr:"\u{1D4AF}",tscy:"\u0446",TScy:"\u0426",tshcy:"\u045B",TSHcy:"\u040B",tstrok:"\u0167",Tstrok:"\u0166",twixt:"\u226C",twoheadleftarrow:"\u219E",twoheadrightarrow:"\u21A0",uacute:"\xFA",Uacute:"\xDA",uarr:"\u2191",uArr:"\u21D1",Uarr:"\u219F",Uarrocir:"\u2949",ubrcy:"\u045E",Ubrcy:"\u040E",ubreve:"\u016D",Ubreve:"\u016C",ucirc:"\xFB",Ucirc:"\xDB",ucy:"\u0443",Ucy:"\u0423",udarr:"\u21C5",udblac:"\u0171",Udblac:"\u0170",udhar:"\u296E",ufisht:"\u297E",ufr:"\u{1D532}",Ufr:"\u{1D518}",ugrave:"\xF9",Ugrave:"\xD9",uHar:"\u2963",uharl:"\u21BF",uharr:"\u21BE",uhblk:"\u2580",ulcorn:"\u231C",ulcorner:"\u231C",ulcrop:"\u230F",ultri:"\u25F8",umacr:"\u016B",Umacr:"\u016A",uml:"\xA8",UnderBar:"_",UnderBrace:"\u23DF",UnderBracket:"\u23B5",UnderParenthesis:"\u23DD",Union:"\u22C3",UnionPlus:"\u228E",uogon:"\u0173",Uogon:"\u0172",uopf:"\u{1D566}",Uopf:"\u{1D54C}",uparrow:"\u2191",Uparrow:"\u21D1",UpArrow:"\u2191",UpArrowBar:"\u2912",UpArrowDownArrow:"\u21C5",updownarrow:"\u2195",Updownarrow:"\u21D5",UpDownArrow:"\u2195",UpEquilibrium:"\u296E",upharpoonleft:"\u21BF",upharpoonright:"\u21BE",uplus:"\u228E",UpperLeftArrow:"\u2196",UpperRightArrow:"\u2197",upsi:"\u03C5",Upsi:"\u03D2",upsih:"\u03D2",upsilon:"\u03C5",Upsilon:"\u03A5",UpTee:"\u22A5",UpTeeArrow:"\u21A5",upuparrows:"\u21C8",urcorn:"\u231D",urcorner:"\u231D",urcrop:"\u230E",uring:"\u016F",Uring:"\u016E",urtri:"\u25F9",uscr:"\u{1D4CA}",Uscr:"\u{1D4B0}",utdot:"\u22F0",utilde:"\u0169",Utilde:"\u0168",utri:"\u25B5",utrif:"\u25B4",uuarr:"\u21C8",uuml:"\xFC",Uuml:"\xDC",uwangle:"\u29A7",vangrt:"\u299C",varepsilon:"\u03F5",varkappa:"\u03F0",varnothing:"\u2205",varphi:"\u03D5",varpi:"\u03D6",varpropto:"\u221D",varr:"\u2195",vArr:"\u21D5",varrho:"\u03F1",varsigma:"\u03C2",varsubsetneq:"\u228A\uFE00",varsubsetneqq:"\u2ACB\uFE00",varsupsetneq:"\u228B\uFE00",varsupsetneqq:"\u2ACC\uFE00",vartheta:"\u03D1",vartriangleleft:"\u22B2",vartriangleright:"\u22B3",vBar:"\u2AE8",Vbar:"\u2AEB",vBarv:"\u2AE9",vcy:"\u0432",Vcy:"\u0412",vdash:"\u22A2",vDash:"\u22A8",Vdash:"\u22A9",VDash:"\u22AB",Vdashl:"\u2AE6",vee:"\u2228",Vee:"\u22C1",veebar:"\u22BB",veeeq:"\u225A",vellip:"\u22EE",verbar:"|",Verbar:"\u2016",vert:"|",Vert:"\u2016",VerticalBar:"\u2223",VerticalLine:"|",VerticalSeparator:"\u2758",VerticalTilde:"\u2240",VeryThinSpace:"\u200A",vfr:"\u{1D533}",Vfr:"\u{1D519}",vltri:"\u22B2",vnsub:"\u2282\u20D2",vnsup:"\u2283\u20D2",vopf:"\u{1D567}",Vopf:"\u{1D54D}",vprop:"\u221D",vrtri:"\u22B3",vscr:"\u{1D4CB}",Vscr:"\u{1D4B1}",vsubne:"\u228A\uFE00",vsubnE:"\u2ACB\uFE00",vsupne:"\u228B\uFE00",vsupnE:"\u2ACC\uFE00",Vvdash:"\u22AA",vzigzag:"\u299A",wcirc:"\u0175",Wcirc:"\u0174",wedbar:"\u2A5F",wedge:"\u2227",Wedge:"\u22C0",wedgeq:"\u2259",weierp:"\u2118",wfr:"\u{1D534}",Wfr:"\u{1D51A}",wopf:"\u{1D568}",Wopf:"\u{1D54E}",wp:"\u2118",wr:"\u2240",wreath:"\u2240",wscr:"\u{1D4CC}",Wscr:"\u{1D4B2}",xcap:"\u22C2",xcirc:"\u25EF",xcup:"\u22C3",xdtri:"\u25BD",xfr:"\u{1D535}",Xfr:"\u{1D51B}",xharr:"\u27F7",xhArr:"\u27FA",xi:"\u03BE",Xi:"\u039E",xlarr:"\u27F5",xlArr:"\u27F8",xmap:"\u27FC",xnis:"\u22FB",xodot:"\u2A00",xopf:"\u{1D569}",Xopf:"\u{1D54F}",xoplus:"\u2A01",xotime:"\u2A02",xrarr:"\u27F6",xrArr:"\u27F9",xscr:"\u{1D4CD}",Xscr:"\u{1D4B3}",xsqcup:"\u2A06",xuplus:"\u2A04",xutri:"\u25B3",xvee:"\u22C1",xwedge:"\u22C0",yacute:"\xFD",Yacute:"\xDD",yacy:"\u044F",YAcy:"\u042F",ycirc:"\u0177",Ycirc:"\u0176",ycy:"\u044B",Ycy:"\u042B",yen:"\xA5",yfr:"\u{1D536}",Yfr:"\u{1D51C}",yicy:"\u0457",YIcy:"\u0407",yopf:"\u{1D56A}",Yopf:"\u{1D550}",yscr:"\u{1D4CE}",Yscr:"\u{1D4B4}",yucy:"\u044E",YUcy:"\u042E",yuml:"\xFF",Yuml:"\u0178",zacute:"\u017A",Zacute:"\u0179",zcaron:"\u017E",Zcaron:"\u017D",zcy:"\u0437",Zcy:"\u0417",zdot:"\u017C",Zdot:"\u017B",zeetrf:"\u2128",ZeroWidthSpace:"\u200B",zeta:"\u03B6",Zeta:"\u0396",zfr:"\u{1D537}",Zfr:"\u2128",zhcy:"\u0436",ZHcy:"\u0416",zigrarr:"\u21DD",zopf:"\u{1D56B}",Zopf:"\u2124",zscr:"\u{1D4CF}",Zscr:"\u{1D4B5}",zwj:"\u200D",zwnj:"\u200C"},g={aacute:"\xE1",Aacute:"\xC1",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",aelig:"\xE6",AElig:"\xC6",agrave:"\xE0",Agrave:"\xC0",amp:"&",AMP:"&",aring:"\xE5",Aring:"\xC5",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",brvbar:"\xA6",ccedil:"\xE7",Ccedil:"\xC7",cedil:"\xB8",cent:"\xA2",copy:"\xA9",COPY:"\xA9",curren:"\xA4",deg:"\xB0",divide:"\xF7",eacute:"\xE9",Eacute:"\xC9",ecirc:"\xEA",Ecirc:"\xCA",egrave:"\xE8",Egrave:"\xC8",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",frac12:"\xBD",frac14:"\xBC",frac34:"\xBE",gt:">",GT:">",iacute:"\xED",Iacute:"\xCD",icirc:"\xEE",Icirc:"\xCE",iexcl:"\xA1",igrave:"\xEC",Igrave:"\xCC",iquest:"\xBF",iuml:"\xEF",Iuml:"\xCF",laquo:"\xAB",lt:"<",LT:"<",macr:"\xAF",micro:"\xB5",middot:"\xB7",nbsp:"\xA0",not:"\xAC",ntilde:"\xF1",Ntilde:"\xD1",oacute:"\xF3",Oacute:"\xD3",ocirc:"\xF4",Ocirc:"\xD4",ograve:"\xF2",Ograve:"\xD2",ordf:"\xAA",ordm:"\xBA",oslash:"\xF8",Oslash:"\xD8",otilde:"\xF5",Otilde:"\xD5",ouml:"\xF6",Ouml:"\xD6",para:"\xB6",plusmn:"\xB1",pound:"\xA3",quot:'"',QUOT:'"',raquo:"\xBB",reg:"\xAE",REG:"\xAE",sect:"\xA7",shy:"\xAD",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",szlig:"\xDF",thorn:"\xFE",THORN:"\xDE",times:"\xD7",uacute:"\xFA",Uacute:"\xDA",ucirc:"\xFB",Ucirc:"\xDB",ugrave:"\xF9",Ugrave:"\xD9",uml:"\xA8",uuml:"\xFC",Uuml:"\xDC",yacute:"\xFD",Yacute:"\xDD",yen:"\xA5",yuml:"\xFF"},x={"0":"\uFFFD","128":"\u20AC","130":"\u201A","131":"\u0192","132":"\u201E","133":"\u2026","134":"\u2020","135":"\u2021","136":"\u02C6","137":"\u2030","138":"\u0160","139":"\u2039","140":"\u0152","142":"\u017D","145":"\u2018","146":"\u2019","147":"\u201C","148":"\u201D","149":"\u2022","150":"\u2013","151":"\u2014","152":"\u02DC","153":"\u2122","154":"\u0161","155":"\u203A","156":"\u0153","158":"\u017E","159":"\u0178"},p=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],d=String.fromCharCode,C={},b=C.hasOwnProperty,A=function(D,I){return b.call(D,I)},L=function(D,I){for(var W=-1,$=D.length;++W<$;)if(D[W]==I)return!0;return!1},y=function(D,I){if(!D)return I;var W={},$;for($ in I)W[$]=A(D,$)?D[$]:I[$];return W},z=function(D,I){var W="";return D>=55296&&D<=57343||D>1114111?(I&&S("character reference outside the permissible Unicode range"),"\uFFFD"):A(x,D)?(I&&S("disallowed character reference"),x[D]):(I&&L(p,D)&&S("disallowed character reference"),D>65535&&(D-=65536,W+=d(D>>>10&1023|55296),D=56320|D&1023),W+=d(D),W)},B=function(D){return"&#x"+D.toString(16).toUpperCase()+";"},H=function(D){return"&#"+D+";"},S=function(D){throw Error("Parse error: "+D)},G=function(D,I){I=y(I,G.options);var W=I.strict;W&&u.test(D)&&S("forbidden code point");var $=I.encodeEverything,J=I.useNamedReferences,Z=I.allowUnsafeSymbols,j=I.decimal?H:B,Y=function(e1){return j(e1.charCodeAt(0))};return $?(D=D.replace(r,function(e1){return J&&A(o,e1)?"&"+o[e1]+";":Y(e1)}),J&&(D=D.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),J&&(D=D.replace(c,function(e1){return"&"+o[e1]+";"}))):J?(Z||(D=D.replace(l,function(e1){return"&"+o[e1]+";"})),D=D.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;"),D=D.replace(c,function(e1){return"&"+o[e1]+";"})):Z||(D=D.replace(l,Y)),D.replace(a,function(e1){var N=e1.charCodeAt(0),u1=e1.charCodeAt(1),g1=(N-55296)*1024+u1-56320+65536;return j(g1)}).replace(s,Y)};G.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var _=function(D,I){I=y(I,_.options);var W=I.strict;return W&&f.test(D)&&S("malformed character reference"),D.replace(m,function($,J,Z,j,Y,e1,N,u1,g1){var s1,h1,L1,v1,N1,j1;return J?(N1=J,v[N1]):Z?(N1=Z,j1=j,j1&&I.isAttributeValue?(W&&j1=="="&&S("`&` did not start a character reference"),$):(W&&S("named character reference was not terminated by a semicolon"),g[N1]+(j1||""))):Y?(L1=Y,h1=e1,W&&!h1&&S("character reference was not terminated by a semicolon"),s1=parseInt(L1,10),z(s1,W)):N?(v1=N,h1=u1,W&&!h1&&S("character reference was not terminated by a semicolon"),s1=parseInt(v1,16),z(s1,W)):(W&&S("named character reference was not terminated by a semicolon"),$)})};_.options={isAttributeValue:!1,strict:!1};var V=function(D){return D.replace(l,function(I){return h[I]})},R={version:"1.2.0",encode:G,decode:_,escape:V,unescape:_};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd)define(function(){return R});else if(e&&!e.nodeType)if(t)t.exports=R;else for(var T in R)A(R,T)&&(e[T]=R[T]);else n.he=R})(Ot)});var Hc=di((Tc,Z6)=>{(function(n,e){typeof define=="function"&&define.amd?define([],e):typeof Z6=="object"&&Z6.exports?Z6.exports=e():n.moo=e()})(Tc,function(){"use strict";var n=Object.prototype.hasOwnProperty,e=Object.prototype.toString,t=typeof new RegExp().sticky=="boolean";function i(z){return z&&e.call(z)==="[object RegExp]"}function a(z){return z&&typeof z=="object"&&!i(z)&&!Array.isArray(z)}function r(z){return z.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function s(z){var B=new RegExp("|"+z);return B.exec("").length-1}function c(z){return"("+z+")"}function o(z){if(!z.length)return"(?!)";var B=z.map(function(H){return"(?:"+H+")"}).join("|");return"(?:"+B+")"}function l(z){if(typeof z=="string")return"(?:"+r(z)+")";if(i(z)){if(z.ignoreCase)throw new Error("RegExp /i flag not allowed");if(z.global)throw new Error("RegExp /g flag is implied");if(z.sticky)throw new Error("RegExp /y flag is implied");if(z.multiline)throw new Error("RegExp /m flag is implied");return z.source}else throw new Error("Not a pattern: "+z)}function h(z){for(var B=Object.getOwnPropertyNames(z),H=[],S=0;S<B.length;S++){var G=B[S],_=z[G],V=[].concat(_);if(G==="include"){for(var R=0;R<V.length;R++)H.push({include:V[R]});continue}var T=[];V.forEach(function(D){a(D)?(T.length&&H.push(u(G,T)),H.push(u(G,D)),T=[]):T.push(D)}),T.length&&H.push(u(G,T))}return H}function f(z){for(var B=[],H=0;H<z.length;H++){var S=z[H];if(S.include){for(var G=[].concat(S.include),_=0;_<G.length;_++)B.push({include:G[_]});continue}if(!S.type)throw new Error("Rule has no type: "+JSON.stringify(S));B.push(u(S.type,S))}return B}function u(z,B){if(a(B)||(B={match:B}),B.include)throw new Error("Matching rules cannot also include states");var H={defaultType:z,lineBreaks:!!B.error||!!B.fallback,pop:!1,next:null,push:null,error:!1,fallback:!1,value:null,type:null,shouldThrow:!1};for(var S in B)n.call(B,S)&&(H[S]=B[S]);if(typeof H.type=="string"&&z!==H.type)throw new Error("Type transform cannot be a string (type '"+H.type+"' for token '"+z+"')");var G=H.match;return H.match=Array.isArray(G)?G:G?[G]:[],H.match.sort(function(_,V){return i(_)&&i(V)?0:i(V)?-1:i(_)?1:V.length-_.length}),H}function m(z){return Array.isArray(z)?f(z):h(z)}var v=u("error",{lineBreaks:!0,shouldThrow:!0});function g(z,B){for(var H=null,S=Object.create(null),G=!0,_=null,V=[],R=[],T=0;T<z.length;T++)z[T].fallback&&(G=!1);for(var T=0;T<z.length;T++){var D=z[T];if(D.include)throw new Error("Inheritance is not allowed in stateless lexers");if(D.error||D.fallback){if(H)throw!D.fallback==!H.fallback?new Error("Multiple "+(D.fallback?"fallback":"error")+" rules not allowed (for token '"+D.defaultType+"')"):new Error("fallback and error are mutually exclusive (for token '"+D.defaultType+"')");H=D}var I=D.match.slice();if(G)for(;I.length&&typeof I[0]=="string"&&I[0].length===1;){var W=I.shift();S[W.charCodeAt(0)]=D}if(D.pop||D.push||D.next){if(!B)throw new Error("State-switching options are not allowed in stateless lexers (for token '"+D.defaultType+"')");if(D.fallback)throw new Error("State-switching options are not allowed on fallback tokens (for token '"+D.defaultType+"')")}if(I.length!==0){G=!1,V.push(D);for(var $=0;$<I.length;$++){var J=I[$];if(!!i(J)){if(_===null)_=J.unicode;else if(_!==J.unicode&&D.fallback===!1)throw new Error("If one rule is /u then all must be")}}var Z=o(I.map(l)),j=new RegExp(Z);if(j.test(""))throw new Error("RegExp matches empty string: "+j);var Y=s(Z);if(Y>0)throw new Error("RegExp has capture groups: "+j+`
Use (?: \u2026 ) instead`);if(!D.lineBreaks&&j.test(`
`))throw new Error("Rule should declare lineBreaks: "+j);R.push(c(Z))}}var e1=H&&H.fallback,N=t&&!e1?"ym":"gm",u1=t||e1?"":"|";_===!0&&(N+="u");var g1=new RegExp(o(R)+u1,N);return{regexp:g1,groups:V,fast:S,error:H||v}}function x(z){var B=g(m(z));return new b({start:B},"start")}function p(z,B,H){var S=z&&(z.push||z.next);if(S&&!H[S])throw new Error("Missing state '"+S+"' (in token '"+z.defaultType+"' of state '"+B+"')");if(z&&z.pop&&+z.pop!=1)throw new Error("pop must be 1 (in token '"+z.defaultType+"' of state '"+B+"')")}function d(z,B){var H=z.$all?m(z.$all):[];delete z.$all;var S=Object.getOwnPropertyNames(z);B||(B=S[0]);for(var G=Object.create(null),_=0;_<S.length;_++){var V=S[_];G[V]=m(z[V]).concat(H)}for(var _=0;_<S.length;_++)for(var V=S[_],R=G[V],T=Object.create(null),D=0;D<R.length;D++){var I=R[D];if(!!I.include){var W=[D,1];if(I.include!==V&&!T[I.include]){T[I.include]=!0;var $=G[I.include];if(!$)throw new Error("Cannot include nonexistent state '"+I.include+"' (in state '"+V+"')");for(var J=0;J<$.length;J++){var Z=$[J];R.indexOf(Z)===-1&&W.push(Z)}}R.splice.apply(R,W),D--}}for(var j=Object.create(null),_=0;_<S.length;_++){var V=S[_];j[V]=g(G[V],!0)}for(var _=0;_<S.length;_++){for(var Y=S[_],e1=j[Y],N=e1.groups,D=0;D<N.length;D++)p(N[D],Y,j);for(var u1=Object.getOwnPropertyNames(e1.fast),D=0;D<u1.length;D++)p(e1.fast[u1[D]],Y,j)}return new b(j,B)}function C(z){for(var B=Object.create(null),H=Object.create(null),S=Object.getOwnPropertyNames(z),G=0;G<S.length;G++){var _=S[G],V=z[_],R=Array.isArray(V)?V:[V];R.forEach(function($){if((H[$.length]=H[$.length]||[]).push($),typeof $!="string")throw new Error("keyword must be string (in keyword '"+_+"')");B[$]=_})}function T($){return JSON.stringify($)}var D="";D+=`switch (value.length) {
`;for(var I in H){var W=H[I];D+="case "+I+`:
`,D+=`switch (value) {
`,W.forEach(function($){var J=B[$];D+="case "+T($)+": return "+T(J)+`
`}),D+=`}
`}return D+=`}
`,Function("value",D)}var b=function(z,B){this.startState=B,this.states=z,this.buffer="",this.stack=[],this.reset()};b.prototype.reset=function(z,B){return this.buffer=z||"",this.index=0,this.line=B?B.line:1,this.col=B?B.col:1,this.queuedToken=B?B.queuedToken:null,this.queuedThrow=B?B.queuedThrow:null,this.setState(B?B.state:this.startState),this.stack=B&&B.stack?B.stack.slice():[],this},b.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedThrow:this.queuedThrow}},b.prototype.setState=function(z){if(!(!z||this.state===z)){this.state=z;var B=this.states[z];this.groups=B.groups,this.error=B.error,this.re=B.regexp,this.fast=B.fast}},b.prototype.popState=function(){this.setState(this.stack.pop())},b.prototype.pushState=function(z){this.stack.push(this.state),this.setState(z)};var A=t?function(z,B){return z.exec(B)}:function(z,B){var H=z.exec(B);return H[0].length===0?null:H};b.prototype._getGroup=function(z){for(var B=this.groups.length,H=0;H<B;H++)if(z[H+1]!==void 0)return this.groups[H];throw new Error("Cannot find token type for matched text")};function L(){return this.value}if(b.prototype.next=function(){var z=this.index;if(this.queuedGroup){var B=this._token(this.queuedGroup,this.queuedText,z);return this.queuedGroup=null,this.queuedText="",B}var H=this.buffer;if(z!==H.length){var S=this.fast[H.charCodeAt(z)];if(S)return this._token(S,H.charAt(z),z);var G=this.re;G.lastIndex=z;var _=A(G,H),V=this.error;if(_==null)return this._token(V,H.slice(z,H.length),z);var S=this._getGroup(_),R=_[0];return V.fallback&&_.index!==z?(this.queuedGroup=S,this.queuedText=R,this._token(V,H.slice(z,_.index),z)):this._token(S,R,z)}},b.prototype._token=function(z,B,H){var S=0;if(z.lineBreaks){var G=/\n/g,_=1;if(B===`
`)S=1;else for(;G.exec(B);)S++,_=G.lastIndex}var V={type:typeof z.type=="function"&&z.type(B)||z.defaultType,value:typeof z.value=="function"?z.value(B):B,text:B,toString:L,offset:H,lineBreaks:S,line:this.line,col:this.col},R=B.length;if(this.index+=R,this.line+=S,S!==0?this.col=R-_+1:this.col+=R,z.shouldThrow)throw new Error(this.formatError(V,"invalid syntax"));return z.pop?this.popState():z.push?this.pushState(z.push):z.next&&this.setState(z.next),V},typeof Symbol!="undefined"&&Symbol.iterator){var y=function(z){this.lexer=z};y.prototype.next=function(){var z=this.lexer.next();return{value:z,done:!z}},y.prototype[Symbol.iterator]=function(){return this},b.prototype[Symbol.iterator]=function(){return new y(this)}}return b.prototype.formatError=function(z,B){if(z==null)var H=this.buffer.slice(this.index),z={text:H,offset:this.index,lineBreaks:H.indexOf(`
`)===-1?0:1,line:this.line,col:this.col};var S=Math.max(0,z.offset-z.col+1),G=z.lineBreaks?z.text.indexOf(`
`):z.text.length,_=this.buffer.substring(S,z.offset+G);return B+=" at line "+z.line+" col "+z.col+`:

`,B+="  "+_+`
`,B+="  "+Array(z.col).join(" ")+"^",B},b.prototype.clone=function(){return new b(this.states,this.state)},b.prototype.has=function(z){return!0},{compile:x,states:d,error:Object.freeze({error:!0}),fallback:Object.freeze({fallback:!0}),keywords:C}})});Wc(exports,{DEFAULT_SETTINGS:()=>Wt,default:()=>ni});var l2=Y2(require("obsidian"));var pi={prefix:"fas",iconName:"dice",icon:[640,512,[],"f522","M592 192H473.26c12.69 29.59 7.12 65.2-17 89.32L320 417.58V464c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48V240c0-26.51-21.49-48-48-48zM480 376c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm-46.37-186.7L258.7 14.37c-19.16-19.16-50.23-19.16-69.39 0L14.37 189.3c-19.16 19.16-19.16 50.23 0 69.39L189.3 433.63c19.16 19.16 50.23 19.16 69.39 0L433.63 258.7c19.16-19.17 19.16-50.24 0-69.4zM96 248c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z"]};var mi={prefix:"far",iconName:"copy",icon:[448,512,[],"f0c5","M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"]};function Q4(n){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Q4=function(e){return typeof e}:Q4=function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Q4(n)}function Xc(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function vi(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}function Zc(n,e,t){return e&&vi(n.prototype,e),t&&vi(n,t),n}function Yc(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function F1(n){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{},i=Object.keys(t);typeof Object.getOwnPropertySymbols=="function"&&(i=i.concat(Object.getOwnPropertySymbols(t).filter(function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),i.forEach(function(a){Yc(n,a,t[a])})}return n}function gi(n,e){return $c(n)||Kc(n,e)||Jc()}function $c(n){if(Array.isArray(n))return n}function Kc(n,e){var t=[],i=!0,a=!1,r=void 0;try{for(var s=n[Symbol.iterator](),c;!(i=(c=s.next()).done)&&(t.push(c.value),!(e&&t.length===e));i=!0);}catch(o){a=!0,r=o}finally{try{!i&&s.return!=null&&s.return()}finally{if(a)throw r}}return t}function Jc(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}var xi=function(){},J6={},Mi={},Qc=null,bi={mark:xi,measure:xi};try{typeof window!="undefined"&&(J6=window),typeof document!="undefined"&&(Mi=document),typeof MutationObserver!="undefined"&&(Qc=MutationObserver),typeof performance!="undefined"&&(bi=performance)}catch{}var eo=J6.navigator||{},yi=eo.userAgent,Ci=yi===void 0?"":yi,Ft=J6,m2=Mi;var Rt=bi,Ku=!!Ft.document,Q6=!!m2.documentElement&&!!m2.head&&typeof m2.addEventListener=="function"&&typeof m2.createElement=="function",Ju=~Ci.indexOf("MSIE")||~Ci.indexOf("Trident/"),ue="___FONT_AWESOME___";var zi="fa",Ai="svg-inline--fa",to="data-fa-i2svg";var Qu=function(){try{return!0}catch{return!1}}();var wi=[1,2,3,4,5,6,7,8,9,10],io=wi.concat([11,12,13,14,15,16,17,18,19,20]);var r4={GROUP:"group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},eh=["xs","sm","lg","fw","ul","li","border","pull-left","pull-right","spin","pulse","rotate-90","rotate-180","rotate-270","flip-horizontal","flip-vertical","flip-both","stack","stack-1x","stack-2x","inverse","layers","layers-text","layers-counter",r4.GROUP,r4.SWAP_OPACITY,r4.PRIMARY,r4.SECONDARY].concat(wi.map(function(n){return"".concat(n,"x")})).concat(io.map(function(n){return"w-".concat(n)})),_i=Ft.FontAwesomeConfig||{};function ao(n){var e=m2.querySelector("script["+n+"]");if(e)return e.getAttribute(n)}function ro(n){return n===""?!0:n==="false"?!1:n==="true"?!0:n}m2&&typeof m2.querySelector=="function"&&(Si=[["data-family-prefix","familyPrefix"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]],Si.forEach(function(n){var e=gi(n,2),t=e[0],i=e[1],a=ro(ao(t));a!=null&&(_i[i]=a)}));var Si,no={familyPrefix:zi,replacementClass:Ai,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0},e0=F1({},no,_i);e0.autoReplaceSvg||(e0.observeMutations=!1);var w2=F1({},e0);Ft.FontAwesomeConfig=w2;var he=Ft||{};he[ue]||(he[ue]={});he[ue].styles||(he[ue].styles={});he[ue].hooks||(he[ue].hooks={});he[ue].shims||(he[ue].shims=[]);var $2=he[ue],so=[],co=function n(){m2.removeEventListener("DOMContentLoaded",n),t0=1,so.map(function(e){return e()})},t0=!1;Q6&&(t0=(m2.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(m2.readyState),t0||m2.addEventListener("DOMContentLoaded",co));var i0="pending",Li="settled",Bt="fulfilled",Pt="rejected",oo=function(){},Ei=typeof global!="undefined"&&typeof global.process!="undefined"&&typeof global.process.emit=="function",lo=typeof setImmediate=="undefined"?setTimeout:setImmediate,et=[],a0;function uo(){for(var n=0;n<et.length;n++)et[n][0](et[n][1]);et=[],a0=!1}function kt(n,e){et.push([n,e]),a0||(a0=!0,lo(uo,0))}function ho(n,e){function t(a){r0(e,a)}function i(a){tt(e,a)}try{n(t,i)}catch(a){i(a)}}function Di(n){var e=n.owner,t=e._state,i=e._data,a=n[t],r=n.then;if(typeof a=="function"){t=Bt;try{i=a(i)}catch(s){tt(r,s)}}Ti(r,i)||(t===Bt&&r0(r,i),t===Pt&&tt(r,i))}function Ti(n,e){var t;try{if(n===e)throw new TypeError("A promises callback cannot return that same promise.");if(e&&(typeof e=="function"||Q4(e)==="object")){var i=e.then;if(typeof i=="function")return i.call(e,function(a){t||(t=!0,e===a?Hi(n,a):r0(n,a))},function(a){t||(t=!0,tt(n,a))}),!0}}catch(a){return t||tt(n,a),!0}return!1}function r0(n,e){(n===e||!Ti(n,e))&&Hi(n,e)}function Hi(n,e){n._state===i0&&(n._state=Li,n._data=e,kt(fo,n))}function tt(n,e){n._state===i0&&(n._state=Li,n._data=e,kt(po,n))}function Vi(n){n._then=n._then.forEach(Di)}function fo(n){n._state=Bt,Vi(n)}function po(n){n._state=Pt,Vi(n),!n._handled&&Ei&&global.process.emit("unhandledRejection",n._data,n)}function mo(n){global.process.emit("rejectionHandled",n)}function D2(n){if(typeof n!="function")throw new TypeError("Promise resolver "+n+" is not a function");if(!(this instanceof D2))throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");this._then=[],ho(n,this)}D2.prototype={constructor:D2,_state:i0,_then:null,_data:void 0,_handled:!1,then:function(e,t){var i={owner:this,then:new this.constructor(oo),fulfilled:e,rejected:t};return(t||e)&&!this._handled&&(this._handled=!0,this._state===Pt&&Ei&&kt(mo,this)),this._state===Bt||this._state===Pt?kt(Di,i):this._then.push(i),i.then},catch:function(e){return this.then(null,e)}};D2.all=function(n){if(!Array.isArray(n))throw new TypeError("You must pass an array to Promise.all().");return new D2(function(e,t){var i=[],a=0;function r(o){return a++,function(l){i[o]=l,--a||e(i)}}for(var s=0,c;s<n.length;s++)c=n[s],c&&typeof c.then=="function"?c.then(r(s),t):i[s]=c;a||e(i)})};D2.race=function(n){if(!Array.isArray(n))throw new TypeError("You must pass an array to Promise.race().");return new D2(function(e,t){for(var i=0,a;i<n.length;i++)a=n[i],a&&typeof a.then=="function"?a.then(e,t):e(a)})};D2.resolve=function(n){return n&&Q4(n)==="object"&&n.constructor===D2?n:new D2(function(e){e(n)})};D2.reject=function(n){return new D2(function(e,t){t(n)})};var b4={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function vo(n){if(!(!n||!Q6)){var e=m2.createElement("style");e.setAttribute("type","text/css"),e.innerHTML=n;for(var t=m2.head.childNodes,i=null,a=t.length-1;a>-1;a--){var r=t[a],s=(r.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(s)>-1&&(i=r)}return m2.head.insertBefore(e,i),n}}var go="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function It(){for(var n=12,e="";n-- >0;)e+=go[Math.random()*62|0];return e}function Ni(n){return"".concat(n).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function xo(n){return Object.keys(n||{}).reduce(function(e,t){return e+"".concat(t,'="').concat(Ni(n[t]),'" ')},"").trim()}function Fi(n){return Object.keys(n||{}).reduce(function(e,t){return e+"".concat(t,": ").concat(n[t],";")},"")}function Ri(n){return n.size!==b4.size||n.x!==b4.x||n.y!==b4.y||n.rotate!==b4.rotate||n.flipX||n.flipY}function Bi(n){var e=n.transform,t=n.containerWidth,i=n.iconWidth,a={transform:"translate(".concat(t/2," 256)")},r="translate(".concat(e.x*32,", ").concat(e.y*32,") "),s="scale(".concat(e.size/16*(e.flipX?-1:1),", ").concat(e.size/16*(e.flipY?-1:1),") "),c="rotate(".concat(e.rotate," 0 0)"),o={transform:"".concat(r," ").concat(s," ").concat(c)},l={transform:"translate(".concat(i/2*-1," -256)")};return{outer:a,inner:o,path:l}}var n0={x:0,y:0,width:"100%",height:"100%"};function Pi(n){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return n.attributes&&(n.attributes.fill||e)&&(n.attributes.fill="black"),n}function Mo(n){return n.tag==="g"?n.children:[n]}function bo(n){var e=n.children,t=n.attributes,i=n.main,a=n.mask,r=n.maskId,s=n.transform,c=i.width,o=i.icon,l=a.width,h=a.icon,f=Bi({transform:s,containerWidth:l,iconWidth:c}),u={tag:"rect",attributes:F1({},n0,{fill:"white"})},m=o.children?{children:o.children.map(Pi)}:{},v={tag:"g",attributes:F1({},f.inner),children:[Pi(F1({tag:o.tag,attributes:F1({},o.attributes,f.path)},m))]},g={tag:"g",attributes:F1({},f.outer),children:[v]},x="mask-".concat(r||It()),p="clip-".concat(r||It()),d={tag:"mask",attributes:F1({},n0,{id:x,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"}),children:[u,g]},C={tag:"defs",children:[{tag:"clipPath",attributes:{id:p},children:Mo(h)},d]};return e.push(C,{tag:"rect",attributes:F1({fill:"currentColor","clip-path":"url(#".concat(p,")"),mask:"url(#".concat(x,")")},n0)}),{children:e,attributes:t}}function yo(n){var e=n.children,t=n.attributes,i=n.main,a=n.transform,r=n.styles,s=Fi(r);if(s.length>0&&(t.style=s),Ri(a)){var c=Bi({transform:a,containerWidth:i.width,iconWidth:i.width});e.push({tag:"g",attributes:F1({},c.outer),children:[{tag:"g",attributes:F1({},c.inner),children:[{tag:i.icon.tag,children:i.icon.children,attributes:F1({},i.icon.attributes,c.path)}]}]})}else e.push(i.icon);return{children:e,attributes:t}}function Co(n){var e=n.children,t=n.main,i=n.mask,a=n.attributes,r=n.styles,s=n.transform;if(Ri(s)&&t.found&&!i.found){var c=t.width,o=t.height,l={x:c/o/2,y:.5};a.style=Fi(F1({},r,{"transform-origin":"".concat(l.x+s.x/16,"em ").concat(l.y+s.y/16,"em")}))}return[{tag:"svg",attributes:a,children:e}]}function zo(n){var e=n.prefix,t=n.iconName,i=n.children,a=n.attributes,r=n.symbol,s=r===!0?"".concat(e,"-").concat(w2.familyPrefix,"-").concat(t):r;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:F1({},a,{id:s}),children:i}]}]}function Ao(n){var e=n.icons,t=e.main,i=e.mask,a=n.prefix,r=n.iconName,s=n.transform,c=n.symbol,o=n.title,l=n.maskId,h=n.titleId,f=n.extra,u=n.watchable,m=u===void 0?!1:u,v=i.found?i:t,g=v.width,x=v.height,p=a==="fak",d=p?"":"fa-w-".concat(Math.ceil(g/x*16)),C=[w2.replacementClass,r?"".concat(w2.familyPrefix,"-").concat(r):"",d].filter(function(H){return f.classes.indexOf(H)===-1}).filter(function(H){return H!==""||!!H}).concat(f.classes).join(" "),b={children:[],attributes:F1({},f.attributes,{"data-prefix":a,"data-icon":r,class:C,role:f.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(g," ").concat(x)})},A=p&&!~f.classes.indexOf("fa-fw")?{width:"".concat(g/x*16*.0625,"em")}:{};m&&(b.attributes[to]=""),o&&b.children.push({tag:"title",attributes:{id:b.attributes["aria-labelledby"]||"title-".concat(h||It())},children:[o]});var L=F1({},b,{prefix:a,iconName:r,main:t,mask:i,maskId:l,transform:s,symbol:c,styles:F1({},A,f.styles)}),y=i.found&&t.found?bo(L):yo(L),z=y.children,B=y.attributes;return L.children=z,L.attributes=B,c?zo(L):Co(L)}var ki=function(){},th=w2.measurePerformance&&Rt&&Rt.mark&&Rt.measure?Rt:{mark:ki,measure:ki};var wo=function(e,t){return function(i,a,r,s){return e.call(t,i,a,r,s)}},s0=function(e,t,i,a){var r=Object.keys(e),s=r.length,c=a!==void 0?wo(t,a):t,o,l,h;for(i===void 0?(o=1,h=e[r[0]]):(o=0,h=i);o<s;o++)l=r[o],h=c(h,e[l],l,e);return h};function Ii(n,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},i=t.skipHooks,a=i===void 0?!1:i,r=Object.keys(e).reduce(function(s,c){var o=e[c],l=!!o.icon;return l?s[o.iconName]=o.icon:s[c]=o,s},{});typeof $2.hooks.addPack=="function"&&!a?$2.hooks.addPack(n,r):$2.styles[n]=F1({},$2.styles[n]||{},r),n==="fas"&&Ii("fa",e)}var Ui=$2.styles,_o=$2.shims,So={},Lo={},Eo={},Oi=function(){var e=function(a){return s0(Ui,function(r,s,c){return r[c]=s0(s,a,{}),r},{})};So=e(function(i,a,r){return a[3]&&(i[a[3]]=r),i}),Lo=e(function(i,a,r){var s=a[2];return i[r]=r,s.forEach(function(c){i[c]=r}),i});var t="far"in Ui;Eo=s0(_o,function(i,a){var r=a[0],s=a[1],c=a[2];return s==="far"&&!t&&(s="fas"),i[r]={prefix:s,iconName:c},i},{})};Oi();var ih=$2.styles;function Gi(n,e,t){if(n&&n[e]&&n[e][t])return{prefix:e,iconName:t,icon:n[e][t]}}function qi(n){var e=n.tag,t=n.attributes,i=t===void 0?{}:t,a=n.children,r=a===void 0?[]:a;return typeof n=="string"?Ni(n):"<".concat(e," ").concat(xo(i),">").concat(r.map(qi).join(""),"</").concat(e,">")}function c0(n){this.name="MissingIcon",this.message=n||"Icon unavailable",this.stack=new Error().stack}c0.prototype=Object.create(Error.prototype);c0.prototype.constructor=c0;var Ut={fill:"currentColor"},Wi={attributeType:"XML",repeatCount:"indefinite",dur:"2s"},ah={tag:"path",attributes:F1({},Ut,{d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"})},o0=F1({},Wi,{attributeName:"opacity"}),rh={tag:"circle",attributes:F1({},Ut,{cx:"256",cy:"364",r:"28"}),children:[{tag:"animate",attributes:F1({},Wi,{attributeName:"r",values:"28;14;28;28;14;28;"})},{tag:"animate",attributes:F1({},o0,{values:"1;0;1;1;0;1;"})}]},nh={tag:"path",attributes:F1({},Ut,{opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"}),children:[{tag:"animate",attributes:F1({},o0,{values:"1;0;0;0;0;1;"})}]},sh={tag:"path",attributes:F1({},Ut,{opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"}),children:[{tag:"animate",attributes:F1({},o0,{values:"0;0;1;1;0;0;"})}]};var ch=$2.styles;function ji(n){var e=n[0],t=n[1],i=n.slice(4),a=gi(i,1),r=a[0],s=null;return Array.isArray(r)?s={tag:"g",attributes:{class:"".concat(w2.familyPrefix,"-").concat(r4.GROUP)},children:[{tag:"path",attributes:{class:"".concat(w2.familyPrefix,"-").concat(r4.SECONDARY),fill:"currentColor",d:r[0]}},{tag:"path",attributes:{class:"".concat(w2.familyPrefix,"-").concat(r4.PRIMARY),fill:"currentColor",d:r[1]}}]}:s={tag:"path",attributes:{fill:"currentColor",d:r}},{found:!0,width:e,height:t,icon:s}}var oh=$2.styles;var Do=`svg:not(:root).svg-inline--fa {
  overflow: visible;
}

.svg-inline--fa {
  display: inline-block;
  font-size: inherit;
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.225em;
}
.svg-inline--fa.fa-w-1 {
  width: 0.0625em;
}
.svg-inline--fa.fa-w-2 {
  width: 0.125em;
}
.svg-inline--fa.fa-w-3 {
  width: 0.1875em;
}
.svg-inline--fa.fa-w-4 {
  width: 0.25em;
}
.svg-inline--fa.fa-w-5 {
  width: 0.3125em;
}
.svg-inline--fa.fa-w-6 {
  width: 0.375em;
}
.svg-inline--fa.fa-w-7 {
  width: 0.4375em;
}
.svg-inline--fa.fa-w-8 {
  width: 0.5em;
}
.svg-inline--fa.fa-w-9 {
  width: 0.5625em;
}
.svg-inline--fa.fa-w-10 {
  width: 0.625em;
}
.svg-inline--fa.fa-w-11 {
  width: 0.6875em;
}
.svg-inline--fa.fa-w-12 {
  width: 0.75em;
}
.svg-inline--fa.fa-w-13 {
  width: 0.8125em;
}
.svg-inline--fa.fa-w-14 {
  width: 0.875em;
}
.svg-inline--fa.fa-w-15 {
  width: 0.9375em;
}
.svg-inline--fa.fa-w-16 {
  width: 1em;
}
.svg-inline--fa.fa-w-17 {
  width: 1.0625em;
}
.svg-inline--fa.fa-w-18 {
  width: 1.125em;
}
.svg-inline--fa.fa-w-19 {
  width: 1.1875em;
}
.svg-inline--fa.fa-w-20 {
  width: 1.25em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: 0.3em;
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: 0.3em;
  width: auto;
}
.svg-inline--fa.fa-border {
  height: 1.5em;
}
.svg-inline--fa.fa-li {
  width: 2em;
}
.svg-inline--fa.fa-fw {
  width: 1.25em;
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter {
  background-color: #ff253a;
  border-radius: 1em;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: #fff;
  height: 1.5em;
  line-height: 1;
  max-width: 5em;
  min-width: 1.5em;
  overflow: hidden;
  padding: 0.25em;
  right: 0;
  text-overflow: ellipsis;
  top: 0;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: 0;
  right: 0;
  top: auto;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: 0;
  left: 0;
  right: auto;
  top: auto;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
}

.fa-layers-top-right {
  right: 0;
  top: 0;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-top-left {
  left: 0;
  right: auto;
  top: 0;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.fa-lg {
  font-size: 1.3333333333em;
  line-height: 0.75em;
  vertical-align: -0.0667em;
}

.fa-xs {
  font-size: 0.75em;
}

.fa-sm {
  font-size: 0.875em;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: 2.5em;
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: -2em;
  position: absolute;
  text-align: center;
  width: 2em;
  line-height: inherit;
}

.fa-border {
  border: solid 0.08em #eee;
  border-radius: 0.1em;
  padding: 0.2em 0.25em 0.15em;
}

.fa-pull-left {
  float: left;
}

.fa-pull-right {
  float: right;
}

.fa.fa-pull-left,
.fas.fa-pull-left,
.far.fa-pull-left,
.fal.fa-pull-left,
.fab.fa-pull-left {
  margin-right: 0.3em;
}
.fa.fa-pull-right,
.fas.fa-pull-right,
.far.fa-pull-right,
.fal.fa-pull-right,
.fab.fa-pull-right {
  margin-left: 0.3em;
}

.fa-spin {
  -webkit-animation: fa-spin 2s infinite linear;
          animation: fa-spin 2s infinite linear;
}

.fa-pulse {
  -webkit-animation: fa-spin 1s infinite steps(8);
          animation: fa-spin 1s infinite steps(8);
}

@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.fa-rotate-180 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.fa-rotate-270 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}

.fa-flip-horizontal {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}

.fa-flip-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1);
}

.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1);
}

:root .fa-rotate-90,
:root .fa-rotate-180,
:root .fa-rotate-270,
:root .fa-flip-horizontal,
:root .fa-flip-vertical,
:root .fa-flip-both {
  -webkit-filter: none;
          filter: none;
}

.fa-stack {
  display: inline-block;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: #fff;
}

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.sr-only-focusable:active, .sr-only-focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: 1;
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: 0.4;
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: 0.4;
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: 1;
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse {
  color: #fff;
}`;function To(){var n=zi,e=Ai,t=w2.familyPrefix,i=w2.replacementClass,a=Do;if(t!==n||i!==e){var r=new RegExp("\\.".concat(n,"\\-"),"g"),s=new RegExp("\\--".concat(n,"\\-"),"g"),c=new RegExp("\\.".concat(e),"g");a=a.replace(r,".".concat(t,"-")).replace(s,"--".concat(t,"-")).replace(c,".".concat(i))}return a}var Ho=function(){function n(){Xc(this,n),this.definitions={}}return Zc(n,[{key:"add",value:function(){for(var t=this,i=arguments.length,a=new Array(i),r=0;r<i;r++)a[r]=arguments[r];var s=a.reduce(this._pullDefinitions,{});Object.keys(s).forEach(function(c){t.definitions[c]=F1({},t.definitions[c]||{},s[c]),Ii(c,s[c]),Oi()})}},{key:"reset",value:function(){this.definitions={}}},{key:"_pullDefinitions",value:function(t,i){var a=i.prefix&&i.iconName&&i.icon?{0:i}:i;return Object.keys(a).map(function(r){var s=a[r],c=s.prefix,o=s.iconName,l=s.icon;t[c]||(t[c]={}),t[c][o]=l}),t}}]),n}();function Vo(){w2.autoAddCss&&!Zi&&(vo(To()),Zi=!0)}function No(n,e){return Object.defineProperty(n,"abstract",{get:e}),Object.defineProperty(n,"html",{get:function(){return n.abstract.map(function(i){return qi(i)})}}),Object.defineProperty(n,"node",{get:function(){if(!!Q6){var i=m2.createElement("div");return i.innerHTML=n.html,i.children}}}),n}function Xi(n){var e=n.prefix,t=e===void 0?"fa":e,i=n.iconName;if(!!i)return Gi(Ro.definitions,t,i)||Gi($2.styles,t,i)}function Fo(n){return function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=(e||{}).icon?e:Xi(e||{}),a=t.mask;return a&&(a=(a||{}).icon?a:Xi(a||{})),n(i,F1({},t,{mask:a}))}}var Ro=new Ho;var Zi=!1;var l0=Fo(function(n){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},t=e.transform,i=t===void 0?b4:t,a=e.symbol,r=a===void 0?!1:a,s=e.mask,c=s===void 0?null:s,o=e.maskId,l=o===void 0?null:o,h=e.title,f=h===void 0?null:h,u=e.titleId,m=u===void 0?null:u,v=e.classes,g=v===void 0?[]:v,x=e.attributes,p=x===void 0?{}:x,d=e.styles,C=d===void 0?{}:d;if(!!n){var b=n.prefix,A=n.iconName,L=n.icon;return No(F1({type:"icon"},n),function(){return Vo(),w2.autoA11y&&(f?p["aria-labelledby"]="".concat(w2.replacementClass,"-title-").concat(m||It()):(p["aria-hidden"]="true",p.focusable="false")),Ao({icons:{main:ji(L),mask:c?ji(c.icon):{found:!1,width:null,height:null,icon:{}}},prefix:b,iconName:A,transform:F1({},b4,i),symbol:r,title:f,maskId:l,titleId:m,extra:{attributes:p,styles:C,classes:g}})})}});function u0(n,e){let t=Object.keys(e).map(i=>Bo(n,i,e[i]));return t.length===1?t[0]:function(){t.forEach(i=>i())}}function Bo(n,e,t){let i=n[e],a=n.hasOwnProperty(e),r=t(i);return i&&Object.setPrototypeOf(r,i),Object.setPrototypeOf(s,r),n[e]=s,c;function s(...o){return r===i&&n[e]===s&&c(),r.apply(this,o)}function c(){n[e]===s&&(a?n[e]=i:delete n[e]),r!==i&&(r=i,Object.setPrototypeOf(s,i||Function))}}var Nc=Y2(Yi());var h0=/(?:(?<roll>\d+)[Dd])?#(?<tag>[\p{Letter}\p{Emoji_Presentation}\w/-]+)(?:\|(?<collapse>[\+-]))?(?:\|(?<types>[^\+-]+))?/u,$i=/(?:(?<roll>\d+)[Dd])?(?:\[.*\]\(|\[\[)(?<link>.+?)#?\^(?<block>.+?)(?:\]\]|\))\|?(?<header>.+)?/,f0=/(?:(?<roll>\d+)[Dd])?(?:\[.*\]\(|\[\[)(?<link>.+)(?:\]\]|\))\|?(?<types>.+)?/;var fe="dice-roller-icon",de="dice-roller-copy";var z4=Y2(require("obsidian"));function Ki(n,e,t){[...n].slice(e).reverse().forEach(([a,r])=>{n.set(a+1,r)}),n.set(e,t)}var y4=Y2(require("obsidian"));var Ji=class extends y4.Events{constructor(e,t,i,a=e.data.showDice){super();this.plugin=e;this.original=t;this.lexemes=i;this.showDice=a;this.loaded=!1;this.containerEl=createDiv({cls:"dice-roller",attr:{"aria-label-position":"top","data-dice":this.original}});this.save=!1;this.resultEl=this.containerEl.createDiv("dice-roller-result");if(this.showDice){let r=this.containerEl.createDiv({cls:"dice-roller-button"});(0,y4.setIcon)(r,fe),r.onclick=this.onClick.bind(this)}else this.containerEl.addClass("no-icon");this.containerEl.onclick=this.onClick.bind(this)}setTooltip(){this.plugin.data.displayResultsInline||this.containerEl.setAttrs({"aria-label":this.tooltip})}getRandomBetween(e,t){return Math.floor(Math.random()*(t-e+1))+e}async render(){this.setTooltip(),await this.build()}get inlineText(){return`${this.tooltip.split(`
`).join(" -> ")} -> `}async onClick(e){e.stopPropagation(),e.stopImmediatePropagation(),window.getSelection()?.isCollapsed&&await this.roll()}},n4=class extends Ji{},C4=class extends n4{constructor(e,t,i,a,r=e.data.showDice){super(e,t,[i],r);this.plugin=e;this.original=t;this.lexeme=i;this.source=a;this.watch=!0;this.getPath(),this.getFile()}async getFile(){if(this.file=this.plugin.app.metadataCache.getFirstLinkpathDest(this.path,this.source),!this.file||!(this.file instanceof y4.TFile))throw new Error("Could not load file.");await this.load(),this.registerFileWatcher()}registerFileWatcher(){this.plugin.registerEvent(this.plugin.app.vault.on("modify",async e=>{!this.watch||this.save||e===this.file&&await this.getOptions()}))}};var B2=class{constructor(e,t={value:e,conditions:[],type:"dice"}){this.lexeme=t;this.modifiers=new Map;this.modifiersAllowed=!0;this.static=!1;this.conditions=[];this.fudge=!1;if(!/(\-?\d+)[dD]?(\d+|%|\[\d+,\s?\d+\])?/.test(e))throw new Error("Non parseable dice string passed to DiceRoll.");this.dice=e.split(" ").join(""),/^-?\d+$/.test(this.dice)&&(this.static=!0,this.modifiersAllowed=!1);let[,i,a=null,r=1]=this.dice.match(/(\-?\d+)[dD]\[?(?:(-?\d+)\s?,)?\s?(-?\d+|%|F)\]?/)||[,1,null,1];this.multiplier=i<0?-1:1,this.rolls=Math.abs(Number(i))||1,Number(r)<0&&!a&&(a=-1),r==="%"&&(r=100),r==="F"&&(r=1,a=-1,this.fudge=!0),Number(r)<Number(a)&&([r,a]=[a,r]),this.faces={max:r?Number(r):1,min:a?Number(a):1},this.conditions=this.lexeme.conditions??[],this.results=new Map([...this.roll()].map((s,c)=>[c,{usable:!0,value:s,display:`${s}`,modifiers:new Set}]))}get text(){return`${this.result}`}get result(){return this.static?Number(this.dice):[...this.results].map(([,{usable:t,value:i}])=>t?i:0).reduce((t,i)=>t+i,0)}get display(){return this.static?`${this.result}`:`[${[...this.results].map(([,{modifiers:e,display:t}])=>`${t}${[...e].join("")}`).join(", ")}]`}get modifierText(){if(!this.modifiers.size)return"";let e=[...this.conditions].map(({value:i})=>i).join(""),t=[...this.modifiers].map(([i,{conditionals:a,value:r}])=>{let s=a.map(c=>c.value);return`${r}${s.join("")}`}).join("");return`${e}${t}`}keepLow(e=1){if(!this.modifiersAllowed){new z4.Notice("Modifiers are only allowed on dice rolls.");return}[...this.results].sort((t,i)=>t[1].value-i[1].value).slice(e-this.results.size).forEach(([t])=>{let i=this.results.get(t);i.usable=!1,i.modifiers.add("d"),this.results.set(t,{...i})})}keepHigh(e=1){if(!this.modifiersAllowed){new z4.Notice("Modifiers are only allowed on dice rolls.");return}[...this.results].sort((t,i)=>i[1].value-t[1].value).slice(e).forEach(([t])=>{let i=this.results.get(t);i.usable=!1,i.modifiers.add("d"),this.results.set(t,{...i})})}reroll(e,t){if(!this.modifiersAllowed){new z4.Notice("Modifiers are only allowed on dice rolls.");return}t.length||t.push({operator:"=",comparer:this.faces.min,value:""});let i=0,a=[...this.results].filter(([,{value:r}])=>this.checkCondition(r,t));for(;i<e&&a.filter(([,{value:r}])=>this.checkCondition(r,t)).length>0;)i++,a.map(([,r])=>{r.modifiers.add("r"),r.value=this.getRandomBetween(this.faces.min,this.faces.max)});a.forEach(([r,s])=>{this.results.set(r,s)})}explodeAndCombine(e,t){if(!this.modifiersAllowed){new z4.Notice("Modifiers are only allowed on dice rolls.");return}t.length||t.push({operator:"=",comparer:this.faces.max,value:""});let i=0;[...this.results].filter(([,{value:r}])=>this.checkCondition(r,t)).forEach(([r,s])=>{let c=this.getRandomBetween(this.faces.min,this.faces.max);for(i++,s.modifiers.add("!"),s.value+=c,s.display=`${s.value}`,this.results.set(r,s);i<e&&this.checkCondition(c,t);)i++,c=this.getRandomBetween(this.faces.min,this.faces.max),s.value+=c,s.display=`${s.value}`,this.results.set(r,s)})}explode(e,t){if(!this.modifiersAllowed){new z4.Notice("Modifiers are only allowed on dice rolls.");return}t.length||t.push({operator:"=",comparer:this.faces.max,value:""});let i=[...this.results].filter(([,{value:r}])=>this.checkCondition(r,t)),a=0;i.forEach(([r,s])=>{let c=s.value,o=0;for(;o<e&&this.checkCondition(c,t);)this.results.get(r+a+o).modifiers.add("!"),c=this.getRandomBetween(this.faces.min,this.faces.max),Ki(this.results,r+a+o+1,{usable:!0,value:c,display:`${c}`,modifiers:new Set}),o++;a+=o})}_roll(){return this.static?[Number(this.dice)]:[...Array(this.rolls)].map(()=>this.multiplier*this.getRandomBetween(this.faces.min,this.faces.max))}setResults(e){this.results=new Map([...e].map((t,i)=>[i,{usable:!0,value:t,display:`${t}`,modifiers:new Set}]))}applyModifiers(){for(let[e,t]of this.modifiers)this.applyModifier(e,t)}roll(){let e=this._roll();return this.results=new Map([...e].map((t,i)=>[i,{usable:!0,value:t,display:`${t}`,modifiers:new Set}])),this.applyModifiers(),this.conditions?.length&&this.applyConditions(),e}applyConditions(){for(let[e,t]of this.results){let i=this.conditions.find(({operator:r})=>r==="-="||r==="=-");if(i&&t.value===i.comparer){t.value=-1,t.modifiers.add("-");continue}this.checkCondition(t.value,this.conditions)?(t.modifiers.add("*"),t.value=1):t.usable=!1}}applyModifier(e,t){switch(e){case"kh":{this.keepHigh(t.data);break}case"kl":{this.keepLow(t.data);break}case"!":{this.explode(t.data,t.conditionals);break}case"!!":{this.explodeAndCombine(t.data,t.conditionals);break}case"r":{this.reroll(t.data,t.conditionals);break}case"condition":}}checkCondition(e,t){return!t||!t.length?e:t.some(({operator:i,comparer:a})=>{if(Number.isNaN(e)||Number.isNaN(a))return!1;let r=!1;switch(i){case"=":r=e===a;break;case"!=":case"=!":r=e!==a;break;case"<":r=e<a;break;case"<=":r=e<=a;break;case">":r=e>a;break;case">=":r=e>=a;break}return r})}getRandomBetween(e,t){return Math.floor(Math.random()*(t-e+1))+e}},at=class extends B2{constructor(e,t){super("3d6",t);this.dice=e;this.lexeme=t}get doubles(){return new Set([...this.results].map(([,{usable:e,value:t}])=>e?t:0)).size<3}get result(){return this.static?Number(this.dice):[...this.results].map(([,{usable:t,value:i}])=>t?i:0).reduce((t,i)=>t+i,0)}get display(){let e=[];for(let t of this.results){if(t[0]==0&&this.doubles){e.push(`${t[1].value}S`);continue}e.push(`${t[1].value}`)}return`[${e.join(", ")}]`}},Qi=class extends B2{constructor(e,t){super(e,t);this.dice=e;this.lexeme=t;this.stack=[];let i=`${this.faces.max}`.split("");for(let a=0;a<this.rolls;a++){let r=[];for(let s of i){let c=new B2(`1d${s}`);r.push(c),c.roll()}this.stack.push(r)}}get result(){return this.stack.map(e=>Number(e.map(t=>t.result).join(""))).reduce((e,t)=>e+t)}get display(){return this.stack.map(e=>e.map(t=>t.result).join(",")).join("|")}roll(){return!this.stack||!this.stack.length?super.roll():(this.stack.forEach(e=>e.map(t=>t.roll())),[...this.stack.map(e=>e.map(t=>t.result)).flat()])}},pe=class extends n4{constructor(e,t,i,a=e.data.showDice){super(e,t,i,a);this.plugin=e;this.original=t;this.lexemes=i;this.stunted="";this.shouldRender=!1;this.operators={"+":(e,t)=>e+t,"-":(e,t)=>e-t,"*":(e,t)=>e*t,"/":(e,t)=>e/t,"^":(e,t)=>Math.pow(e,t)};this.stack=[];this.stackCopy=[];this.dice=[];this.loaded=!0,this.trigger("loaded")}get replacer(){return`${this.result}`}get resultText(){let e=[],t=0;return this.dice.forEach(i=>{let a=this.original.slice(t);e.push(a.slice(0,a.indexOf(i.lexeme.text)),i.display),t+=a.indexOf(i.lexeme.text)+i.lexeme.text.length+i.modifierText.length}),e.join("")}get tooltip(){return this._tooltip?this._tooltip:`${this.original}
${this.resultText}`}async build(){let e=[this.result.toLocaleString(navigator.language,{maximumFractionDigits:2})];this.plugin.data.displayResultsInline&&e.unshift(this.inlineText),this.resultEl.setText(e.join("")+this.stunted)}async onClick(e){e.stopPropagation(),e.stopImmediatePropagation(),window.getSelection()?.isCollapsed&&await this.roll()}get dynamic(){return this.dice.filter(e=>!e.static)}get static(){return this.dice.filter(e=>e.static)}get isStatic(){return this.dice.every(e=>e.static)}async roll(){let e=0;if(this.stunted="",this.shouldRender)await this.plugin.renderRoll(this);else{for(let i of this.lexemes)switch(i.type){case"+":case"-":case"*":case"/":case"^":case"math":let a=this.stack.pop(),r=this.stack.pop();if(!r){i.value==="-"&&(a=new B2(`-${a.dice}`,a.lexeme)),this.stackCopy.push(i.value),this.stack.push(a);continue}a.roll(),a instanceof at&&a.doubles&&(this.stunted=` - ${a.results.get(0).value} Stunt Points`),r.roll(),r instanceof at&&r.doubles&&(this.stunted=` - ${r.results.get(0).value} Stunt Points`);let s=this.operators[i.value](r.result,a.result);this.stackCopy.push(i.value),this.stack.push(new B2(`${s}`,i));break;case"kh":{let c=this.dice[e-1],o=i.value?Number(i.value):1;c.modifiers.set("kh",{data:o,conditionals:[],value:i.text});break}case"dl":{let c=this.dice[e-1],o=i.value?Number(i.value):1;o=c.results.size-o,c.modifiers.set("kh",{data:o,conditionals:[],value:i.text});break}case"kl":{let c=this.dice[e-1],o=i.value?Number(i.value):1;c.modifiers.set("kl",{data:o,conditionals:[],value:i.text});break}case"dh":{let c=this.dice[e-1],o=i.value?Number(i.value):1;o=c.results.size-o,c.modifiers.set("kl",{data:o,conditionals:[],value:i.text});break}case"!":{let c=this.dice[e-1],o=Number(i.value)||1;c.modifiers.set("!",{data:o,conditionals:i.conditions??[],value:i.text});break}case"!!":{let c=this.dice[e-1],o=Number(i.value)||1;c.modifiers.set("!!",{data:o,conditionals:i.conditions??[],value:i.text});break}case"r":{let c=this.dice[e-1],o=Number(i.value)||1;c.modifiers.set("r",{data:o,conditionals:i.conditions??[],value:i.text});break}case"dice":{if(i.parenedDice&&/^d/.test(i.value)&&this.stack.length){let c=this.stack.pop();i.value=`${c.result}${i.value}`,this.dice[e]=new B2(i.value,i)}this.dice[e]||(this.dice[e]=new B2(i.value,i)),this.stack.push(this.dice[e]),this.stackCopy.push(this.dice[e]),e++;break}case"stunt":{this.dice[e]||(this.dice[e]=new at(i.value,i)),this.stack.push(this.dice[e]),this.stackCopy.push(this.dice[e]),e++;break}case"%":{this.dice[e]||(this.dice[e]=new Qi(i.value,i)),this.stack.push(this.dice[e]),this.stackCopy.push(this.dice[e]),e++;break}}let t=this.stack.pop();t.roll(),t instanceof at&&t.doubles&&(this.stunted=` - ${t.results.get(0).value} Stunt Points`),this.result=t.result,this._tooltip=null}return this.render(),this.trigger("new-result"),this.result}recalculate(){let e=[],t=0;for(let i of this.stackCopy)if(typeof i=="string"){let a=e.pop(),r=e.pop();if(!r){i==="-"&&(a=new B2(`-${a.result}`,a.lexeme)),e.push(a);continue}let s=this.operators[i](r.result,a.result);e.push(new B2(`${s}`))}else e.push(i);e.length&&e[0]instanceof B2&&(e[0].applyModifiers(),t+=e[0].result),this.result=t}toResult(){return{type:"dice",result:this.result,tooltip:this.tooltip}}async applyResult(e){e.type==="dice"&&(e.result&&(this.result=e.result),e.tooltip&&(this._tooltip=e.tooltip),await this.render())}setResult(e){}};var f2=Y2(require("obsidian"));function Po(n){let e="",t="abcdefghijklmnopqrstuvwxyz0123456789",i=t.length;for(let a=0;a<n;a++)e+=t.charAt(Math.floor(Math.random()*i));return e}function ko(n){return`dice-${Po(4)}`}var Gt=class extends C4{constructor(e,t,i,a,r=!0,s=e.data.showDice){super(e,t,i,a,s);this.plugin=e;this.original=t;this.lexeme=i;this.inline=r;this.containerEl.addClasses(["has-embed","markdown-embed"]),this.resultEl.addClass("internal-embed"),this.resultEl.setAttrs({src:a}),this.copy=this.containerEl.createDiv({cls:"dice-content-copy dice-roller-button no-show",attr:{"aria-label":"Copy Contents"}}),this.copy.addEventListener("click",c=>{c.stopPropagation(),navigator.clipboard.writeText(this.displayFromCache(...this.results).trim()).then(async()=>{new f2.Notice("Result copied to clipboard.")})}),(0,f2.setIcon)(this.copy,de)}get replacer(){let e=this.getBlockId(this.result);return e?`![[${this.path}#^${e}]]`:""}get tooltip(){return`${this.original}
${this.path}`}async build(){if(this.resultEl.empty(),this.plugin.data.displayResultsInline&&this.inline&&this.resultEl.createSpan({text:this.inlineText}),!this.results||!this.results.length){this.resultEl.createDiv({cls:"dice-no-results",text:"No results."});return}this.plugin.data.copyContentButton&&this.copy.removeClass("no-show");for(let e of this.results){this.resultEl.onclick=async i=>{if(i&&i.getModifierState("Control")||i.getModifierState("Meta")){i.stopPropagation();return}};let t=this.resultEl.createDiv({cls:"markdown-embed"});if(!this.plugin.data.displayResultsInline){let i="type"in e?e.type:"List Item";t.setAttrs({"aria-label":`${this.file.basename}: ${i}`})}if(!e){t.createDiv({cls:"dice-no-results",text:"No results."});continue}if(f2.MarkdownRenderer.renderMarkdown(this.displayFromCache(e),t.createDiv(),this.source,null),this.plugin.data.copyContentButton&&this.results.length>1){let i=t.createDiv({cls:"dice-content-copy dice-roller-button",attr:{"aria-label":"Copy Contents"}});i.addEventListener("click",a=>{a.stopPropagation(),navigator.clipboard.writeText(this.displayFromCache(e).trim()).then(async()=>{new f2.Notice("Result copied to clipboard.")})}),(0,f2.setIcon)(i,de)}}}async load(){await this.getOptions()}displayFromCache(...e){let t=[];for(let i of e)t.push(this.content.slice(i.position.start.offset,i.position.end.offset));return t.join(`

`)}getBlockId(e){let t=this.cache.blocks??{},i=Object.entries(t).find(([a,r])=>ea(r.position,e.position));if(!i){let a=`${ko(4)}`,r=`${this.content.slice(0,this.result.position.end.offset+1)}^${a}${this.content.slice(this.result.position.end.offset)}`;return this.watch=!1,this.plugin.app.vault.modify(this.file,r),a}return i[0]}getPath(){let{groups:e}=this.lexeme.value.match(f0),{roll:t=1,link:i,types:a}=e;if(!i)throw new Error("Could not parse link.");this.rolls=(t&&!isNaN(Number(t))&&Number(t))??1,this.path=decodeURIComponent(i.replace(/(\[|\]|\(|\))/g,"")),this.types=a?.split(","),this.levels=a?.split(",").map(r=>/heading\-\d+/.test(r)?r.split("-").pop():null).filter(r=>r),this.types=a?.split(",").map(r=>/heading\-\d+/.test(r)?r.split("-").shift():r)}async getOptions(){if(this.cache=this.plugin.app.metadataCache.getFileCache(this.file),!this.cache||!this.cache.sections)throw new Error("Could not read file cache.");this.content=await this.plugin.app.vault.cachedRead(this.file),this.options=this.cache.sections.filter(({type:e,position:t})=>this.types?e=="heading"&&this.types.includes(e)&&this.levels.length?(this.cache.headings??[]).filter(({level:a})=>this.levels.includes(`${a}`)).some(({position:a})=>ea(a,t)):this.types.includes(e):!["yaml","thematicBreak"].includes(e)),this.types&&this.types.includes("listItem")&&this.options.push(...this.cache.listItems),this.loaded=!0,this.trigger("loaded")}async roll(){return new Promise((e,t)=>{if(!this.loaded)this.on("loaded",()=>{let i=[...this.options];this.results=[...Array(this.rolls)].map(()=>{let a=i[this.getRandomBetween(0,i.length-1)];return i.splice(i.indexOf(a),1),a}).filter(a=>a),this.render(),this.trigger("new-result"),this.result=this.results[0],e(this.results[0])});else{let i=[...this.options];this.results=[...Array(this.rolls)].map(()=>{let a=i[this.getRandomBetween(0,i.length-1)];return i.splice(i.indexOf(a),1),a}).filter(a=>a),this.render(),this.trigger("new-result"),this.result=this.results[0],e(this.results[0])}})}toResult(){return{type:"section",result:this.results}}async applyResult(e){e.type==="section"&&(e.result&&(this.results=e.result),await this.render())}},d0=class extends n4{constructor(e,t,i,a,r=e.data.showDice){super(e,t,[i],r);this.plugin=e;this.original=t;this.lexeme=i;this.source=a;this.loaded=!1;if(!this.plugin.canUseDataview)throw new f2.Notice("A tag can only be rolled with the Dataview plugin enabled."),new Error("A tag can only be rolled with the Dataview plugin enabled.");this.containerEl.addClasses(["has-embed","markdown-embed"]);let{roll:s=1,tag:c,collapse:o,types:l}=i.value.match(h0).groups;this.collapse=o==="-"?!0:o==="+"?!1:!this.plugin.data.returnAllTags,this.tag=`#${c}`,this.rolls=Number(s),this.types=l,this.getFiles()}get replacer(){return this.result.replacer}get typeText(){return this.types?.length?`|${this.types}`:""}async getFiles(){await this.plugin.dataviewReady();let e=this.plugin.dataview.index.tags.invMap.get(this.tag);if(e&&e.delete(this.source),!e||!e.size)throw new Error(`No files found with that tag. Is the tag correct?

`+this.tag);let t=Array.from(e).map(i=>`${this.rolls}d[[${i}]]${this.typeText}`);this.results=t.map(i=>new Gt(this.plugin,i,{...this.lexeme,value:i,type:"section"},this.source,!1)),this.loaded=!0,this.trigger("loaded")}async build(){if(this.resultEl.empty(),this.plugin.data.displayResultsInline&&this.resultEl.createSpan({text:this.inlineText}),this.collapse){this.chosen=this.random??this.getRandomBetween(0,this.results.length-1);let e=this.results[this.chosen];this.random=null;let t=this.resultEl.createDiv();t.createEl("h5",{cls:"dice-file-name",text:e.file.basename}),t.appendChild(e.containerEl)}else for(let e of this.results){let t=this.resultEl.createDiv();t.createEl("h5",{cls:"dice-file-name",text:e.file.basename}),t.appendChild(e.containerEl)}}async roll(){return new Promise((e,t)=>{this.loaded?(this.results.forEach(async i=>await i.roll()),this.render(),this.trigger("new-result"),this.result=this.results[0],e(this.result)):this.on("loaded",()=>{this.results.forEach(async i=>await i.roll()),this.render(),this.trigger("new-result"),this.result=this.results[0],e(this.result)})})}get tooltip(){return this.original}toResult(){return{type:"tag",random:this.chosen,result:Object.fromEntries(this.results.map(e=>[e.path,e.toResult()]))}}async applyResult(e){if(e.type==="tag"){if(e.result)for(let t in e.result){let i=this.results.find(a=>a.path===t);!i||i.applyResult(e.result[t])}e.random&&(this.random=e.random),await this.render()}}},p0=class extends n4{constructor(e,t,i,a,r=e.data.showDice){super(e,t,[i],r);this.plugin=e;this.original=t;this.lexeme=i;this.source=a;let{roll:s=1,tag:c}=i.value.match(h0).groups;this.tag=`#${c}`,this.rolls=(s&&!isNaN(Number(s))&&Number(s))??1,this.getFiles()}get replacer(){return`[[${this.result.basename}]]`}get tooltip(){return`${this.original}
${this.result.basename}`}async roll(){return new Promise((e,t)=>{this.loaded?(this.result=this.links[this.getRandomBetween(0,this.links.length-1)],this.render(),this.trigger("new-result"),e(this.result)):this.on("loaded",()=>{this.result=this.links[this.getRandomBetween(0,this.links.length-1)],this.render(),this.trigger("new-result"),e(this.result)})})}async build(){this.resultEl.empty(),this.plugin.data.displayResultsInline&&this.resultEl.createSpan({text:this.inlineText});let e=this.resultEl.createEl("a",{cls:"internal-link",text:this.result.basename});e.onclick=async t=>{t.stopPropagation(),this.plugin.app.workspace.openLinkText(this.result.path,this.plugin.app.workspace.getActiveFile()?.path,!0)},e.onmouseenter=async t=>{this.plugin.app.workspace.trigger("link-hover",this,e,this.result.path,this.plugin.app.workspace.getActiveFile()?.path)}}async getFiles(){await this.plugin.dataviewReady();let e=this.plugin.dataview.index.tags.invMap.get(this.tag);if(e&&e.delete(this.source),!e||!e.size)throw new Error(`No files found with that tag. Is the tag correct?

`+this.tag);this.links=Array.from(e).map(t=>this.plugin.app.metadataCache.getFirstLinkpathDest(t,this.source)),this.loaded=!0,this.trigger("loaded")}toResult(){return{type:"link",result:this.result.path}}async applyResult(e){if(e.type==="link"){if(e.result){let t=this.plugin.app.vault.getAbstractFileByPath(e.result);t&&t instanceof f2.TFile&&(this.result=t)}await this.render()}}},m0=class extends C4{constructor(e,t,i,a,r=!0,s=e.data.showDice){super(e,t,i,a,s);this.plugin=e;this.original=t;this.lexeme=i;this.inline=r;this.containerEl.addClasses(["has-embed","markdown-embed"]),this.resultEl.addClass("internal-embed"),this.resultEl.setAttrs({src:a}),this.copy=this.containerEl.createDiv({cls:"dice-content-copy dice-roller-button no-show",attr:{"aria-label":"Copy Contents"}}),this.copy.addEventListener("click",c=>{c.stopPropagation(),navigator.clipboard.writeText(this.results.join(`
`)).then(async()=>{new f2.Notice("Result copied to clipboard.")})}),(0,f2.setIcon)(this.copy,de)}get replacer(){return this.result}get tooltip(){return`${this.original}
${this.path}`}async build(){if(this.resultEl.empty(),this.plugin.data.displayResultsInline&&this.inline&&this.resultEl.createSpan({text:this.inlineText}),!this.results||!this.results.length){this.resultEl.createDiv({cls:"dice-no-results",text:"No results."});return}this.plugin.data.copyContentButton&&this.copy.removeClass("no-show");for(let e of this.results){this.resultEl.onclick=async i=>{if(i&&i.getModifierState("Control")||i.getModifierState("Meta")){i.stopPropagation();return}};let t=this.resultEl.createDiv({cls:"markdown-embed"});if(!e){t.createDiv({cls:"dice-no-results",text:"No results."});continue}if(f2.MarkdownRenderer.renderMarkdown(e,t.createDiv(),this.source,null),this.plugin.data.copyContentButton&&this.results.length>1){let i=t.createDiv({cls:"dice-content-copy dice-roller-button",attr:{"aria-label":"Copy Contents"}});i.addEventListener("click",a=>{a.stopPropagation(),navigator.clipboard.writeText(e).then(async()=>{new f2.Notice("Result copied to clipboard.")})}),(0,f2.setIcon)(i,de)}}}async load(){await this.getOptions()}getPath(){let{groups:e}=this.lexeme.value.match(f0),{roll:t=1,link:i,types:a}=e;if(!i)throw new Error("Could not parse link.");this.rolls=(t&&!isNaN(Number(t))&&Number(t))??1,this.path=i.replace(/(\[|\])/g,""),this.types=a?.split(",")}async getOptions(){if(this.content=await this.plugin.app.vault.cachedRead(this.file),!this.content)throw new Error("Could not read file cache.");this.options=this.content.trim().split(`
`).map(e=>e.trim()).filter(e=>e&&e.length),this.loaded=!0,this.trigger("loaded")}async roll(){return new Promise((e,t)=>{if(!this.loaded)this.on("loaded",()=>{let i=[...this.options];this.results=[...Array(this.rolls)].map(()=>{let a=i[this.getRandomBetween(0,i.length-1)];return i.splice(i.indexOf(a),1),a}).filter(a=>a),this.render(),this.trigger("new-result"),e(this.results[0])});else{let i=[...this.options];this.results=[...Array(this.rolls)].map(()=>{let a=i[this.getRandomBetween(0,i.length-1)];return i.splice(i.indexOf(a),1),a}).filter(a=>a),this.render(),this.trigger("new-result"),e(this.results[0])}})}toResult(){return{type:"section",result:this.results}}async applyResult(e){e.type==="section"&&(e.result&&(this.results=e.result),await this.render())}},ea=(n,e)=>n.start.col==e.start.col&&n.start.line==e.start.line&&n.start.offset==e.start.offset;var ta=Y2(require("obsidian"));var v0=class extends C4{getPath(){let{groups:e}=this.lexeme.value.match($i),{roll:t=1,link:i,block:a,header:r}=e;if(!i||!a)throw new Error("Could not parse link.");this.rolls=(t&&!isNaN(Number(t))&&Number(t))??1,this.path=decodeURIComponent(i.replace(/(\[|\]|\(|\))/g,"")),this.block=a.replace(/(\^|#)/g,"").trim().toLowerCase(),this.header=r}get tooltip(){return`${this.original}
${this.path} > ${this.block}${this.header?" | "+this.header:""}`}get replacer(){return this.result}async build(){this.resultEl.empty();let e=[this.result];this.plugin.data.displayResultsInline&&e.unshift(this.inlineText),ta.MarkdownRenderer.renderMarkdown(e.join(""),this.resultEl.createSpan("embedded-table-result"),this.source,null)}async getResult(){if(this.isLookup){let t=await this.lookupRoller.roll(),i=this.lookupRanges.find(([a])=>a[1]===void 0&&t===a[0]||t>=a[0]&&a[1]>=t);if(i)return i[1]}let e=[...this.options];return[...Array(this.rolls)].map(()=>{let t=e[this.getRandomBetween(0,e.length-1)];return e.splice(e.indexOf(t),1),t}).join("||")}async roll(){return new Promise(async e=>{this.loaded?(this.result=await this.getResult(),this.render(),this.trigger("new-result"),e(this.result)):this.on("loaded",async()=>{this.result=await this.getResult(),this.render(),this.trigger("new-result"),e(this.result)})})}async load(){await this.getOptions()}async getOptions(){if(this.cache=this.plugin.app.metadataCache.getFileCache(this.file),!this.cache||!this.cache.blocks||!(this.block in this.cache.blocks))throw new Error(`Could not read file cache. Does the block reference exist?

${this.path} > ${this.block}`);let e=this.cache.sections?.find(t=>t.position==this.cache.blocks[this.block].position);if(this.position=this.cache.blocks[this.block].position,this.content=(await this.plugin.app.vault.cachedRead(this.file))?.slice(this.position.start.offset,this.position.end.offset),e&&e.type==="list")this.options=this.content.split(`
`);else{let t=Uo(this.content);if(Object.keys(t.columns).length===2&&/dice:\s*([\s\S]+)\s*?/.test(Object.keys(t.columns)[0])){let i=this.plugin.getRoller(Object.keys(t.columns)[0].split(":").pop(),this.source);i instanceof pe&&(this.lookupRoller=i,await this.lookupRoller.roll(),this.lookupRanges=t.rows.map(a=>{let[r,s]=a.split("|").map(l=>l.replace("{ESCAPED_PIPE}","|")).map(l=>l.trim()),[,c,o]=r.match(/(\d+)(?:[^\d]+?(\d+))?/)??[];if(!(!c&&!o))return[[Number(c),o?Number(o):void 0],s]}),this.isLookup=!0)}if(this.header&&t.columns[this.header])this.options=t.columns[this.header];else{if(this.header)throw new Error(`Header ${this.header} was not found in table ${this.path} > ${this.block}.`);this.options=t.rows}}this.loaded=!0,this.trigger("loaded")}toResult(){return{type:"table",result:this.result}}async applyResult(e){e.type==="table"&&(e.result&&(this.result=e.result),await this.render())}},Io=/^\|?([\s\S]+?)\|?$/,ia=/\|/;function Uo(n){let e=n.split(`
`),i=e.map(s=>(s.trim().match(Io)??[,s.trim()])[1])[0].replace("\\|","{ESCAPED_PIPE}").split(ia),a=[],r=[];for(let s in i){let c=i[s];c.trim().length||(c=s),r.push([c.trim(),[]])}for(let s of e.slice(2)){let c=s.trim().replace("\\|","{ESCAPED_PIPE}").split(ia).map(o=>o.trim()).filter(o=>o.length);a.push(c.join(" | "));for(let o in c){let l=c[o].trim();!l.length||!r[o]||r[o][1].push(l)}}return{columns:Object.fromEntries(r),rows:a}}var H1=Y2(require("obsidian"));var qt=class extends H1.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t;this.plugin=t}async display(){let{containerEl:e}=this;e.empty(),e.addClass("dice-roller-settings"),e.createEl("h2",{text:"Dice Roller Settings"}),this.buildGenerics(e.createDiv()),this.buildDisplay(e.createDiv()),this.buildTables(e.createDiv()),this.buildSections(e.createDiv()),this.buildTags(e.createDiv()),this.buildView(e.createDiv()),this.buildRender(e.createDiv()),this.buildFormulaSettings(e.createDiv("dice-roller-setting-additional-container")),e.createDiv("coffee").createEl("a",{href:"https://www.buymeacoffee.com/valentine195"}).createEl("img",{attr:{src:"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&emoji=\u2615&slug=valentine195&button_colour=e3e7ef&font_colour=262626&font_family=Inter&outline_colour=262626&coffee_colour=ff0000"}})}buildGenerics(e){e.empty(),new H1.Setting(e).setName("Default Face").setDesc("Use this as the number of faces when it is omitted.").addText(t=>{t.setValue(`${this.plugin.data.defaultFace}`),t.inputEl.onblur=async()=>{isNaN(Number(t.inputEl.value))&&new H1.Notice("The default face must be a number."),this.plugin.data.defaultFace=Number(t.inputEl.value),await this.plugin.saveSettings()}}),new H1.Setting(e).setName("Globally Save Results").setDesc(createFragment(t=>{t.createSpan({text:"Dice results will be saved by default. This can be overridden using "}),t.createEl("code",{text:"dice-: formula"}),t.createEl("p",{text:"Please note that the plugin will attempt to save the result but may not be able to."})})).addToggle(t=>{t.setValue(this.plugin.data.persistResults),t.onChange(async i=>{this.plugin.data.persistResults=i,await this.plugin.saveSettings()})})}buildDisplay(e){e.empty(),new H1.Setting(e).setHeading().setName("Dice Display"),new H1.Setting(e).setName("Display Formula With Results").setDesc("Both the formula and the results will both be displayed in preview mode.").addToggle(t=>{t.setValue(this.plugin.data.displayResultsInline),t.onChange(async i=>{this.plugin.data.displayResultsInline=i,await this.plugin.saveSettings()})}),new H1.Setting(e).setName("Display Dice Button With Results").setDesc("A dice button will appear next to results.").addToggle(t=>{t.setValue(this.plugin.data.showDice),t.onChange(async i=>{this.plugin.data.showDice=i,await this.plugin.saveSettings()})}),new H1.Setting(e).setName("Add Formula When Using Modify Dice").setDesc(createFragment(t=>{t.createSpan({text:"Both the formula and the results will both be added to the note when using "}),t.createEl("code",{text:"dice-mod"}),t.createSpan({text:"."})})).addToggle(t=>{t.setValue(this.plugin.data.displayFormulaForMod),t.onChange(async i=>{this.plugin.data.displayFormulaForMod=i,await this.plugin.saveSettings()})})}buildTables(e){e.empty(),new H1.Setting(e).setHeading().setName("Table Rollers"),new H1.Setting(e).setName("Display Lookup Table Roll").setDesc("Lookup table rolls will display the rolled number along with the result.").addToggle(t=>{t.setValue(this.plugin.data.displayLookupRoll),t.onChange(async i=>{this.plugin.data.displayLookupRoll=i,await this.plugin.saveSettings()})})}buildSections(e){e.empty(),new H1.Setting(e).setHeading().setName("Section Rollers"),new H1.Setting(e).setName("Add Copy Button to Section Results").setDesc("Randomly rolled sections will have a copy-content button to easy add result to clipboard.").addToggle(t=>{t.setValue(this.plugin.data.copyContentButton),t.onChange(async i=>{this.plugin.data.copyContentButton=i,await this.plugin.saveSettings()})})}buildTags(e){e.empty(),new H1.Setting(e).setHeading().setName("Tag Rollers"),new H1.Setting(e).setName("Roll All Files for Tags").setDesc("Return a result for each file when rolling tags.").addToggle(t=>{t.setValue(this.plugin.data.returnAllTags),t.onChange(async i=>{this.plugin.data.returnAllTags=i,await this.plugin.saveSettings()})}),new H1.Setting(e).setName("Always Return Links for Tags").setDesc("Enables random link rolling with the link parameter. Override by specifying a section type.").addToggle(t=>{t.setValue(this.plugin.data.rollLinksForTags),t.onChange(async i=>{this.plugin.data.rollLinksForTags=i,await this.plugin.saveSettings()})})}buildView(e){e.empty(),new H1.Setting(e).setHeading().setName("Dice View"),new H1.Setting(e).setName("Open Dice View on Startup").setDesc("The dice view can always be opened using the command from the command palette.").addToggle(t=>{t.setValue(this.plugin.data.showLeafOnStartup),t.onChange(async i=>{this.plugin.data.showLeafOnStartup=i,await this.plugin.saveSettings()})})}buildRender(e){e.empty(),new H1.Setting(e).setHeading().setName("Graphical Dice"),new H1.Setting(e).setName("Display graphics for Dice View Rolls").setDesc("Dice rolls from dice view will be displayed on screen.").addToggle(a=>{a.setValue(this.plugin.data.renderer),a.onChange(async r=>{this.plugin.data.renderer=r,await this.plugin.saveSettings()})}),new H1.Setting(e).setName("Display Time for Dice Graphics").setDesc("Rendered dice will stay on screen for this number of milliseconds. Leave blank to require a click to clear dice.").addText(a=>{a.inputEl.setAttr("type","number"),a.inputEl.onblur=r=>{Number(a.getValue())<0&&(new H1.Notice("Render time cannot be less than 0."),a.setValue("0"))},a.setValue(`${this.plugin.data.renderTime}`),a.onChange(async r=>{r&&Number(r)<0||isNaN(Number(r))||(this.plugin.data.renderTime=Number(r),await this.plugin.saveSettings())})}).addExtraButton(a=>{a.setIcon("reset").setTooltip("Reset to Default").onClick(async()=>{this.plugin.data.renderTime=Wt.renderTime,await this.plugin.saveSettings(),this.buildRender(e)})}),new H1.Setting(e).setName("Dice Base Color").setDesc("Rendered dice will be this color.").controlEl.createEl("input",{type:"color",value:this.plugin.data.diceColor},a=>{a.value=this.plugin.data.diceColor,a.onchange=async({target:r})=>{let s=r.value;this.plugin.data.diceColor=s,await this.plugin.saveSettings(),this.plugin.app.workspace.trigger("dice-roller:update-colors")}}),new H1.Setting(e).setName("Dice Text Color").setDesc("Rendered dice will use this color for their numbers.").controlEl.createEl("input",{type:"color",value:this.plugin.data.textColor},a=>{a.value=this.plugin.data.textColor,a.onchange=async({target:r})=>{let s=r.value;!s||(this.plugin.data.textColor=s,await this.plugin.saveSettings(),this.plugin.app.workspace.trigger("dice-roller:update-colors"))}})}buildFormulaSettings(e){e.empty(),new H1.Setting(e).setHeading().setName("Saved Formulas");let t=e.createDiv();new H1.Setting(t).setName("Add Formula").setDesc("Add a new formula shortcut.").addButton(r=>r.setTooltip("Add Formula").setButtonText("+").onClick(async()=>{let c=await this.buildFormulaForm(t);c&&(this.plugin.data.formulas[c.alias]=c.formula,this.buildFormulaSettings(e),await this.plugin.saveSettings())}));let i=e.createDiv("additional"),a=this.plugin.data.formulas;for(let[r,s]of Object.entries(a)){let c=new H1.Setting(i).setName(r);c.controlEl.createSpan({text:s}),c.addExtraButton(o=>o.setIcon("pencil").setTooltip("Edit").onClick(async()=>{let l=await this.buildFormulaForm(t,{alias:r,formula:s});l&&(delete this.plugin.data.formulas[r],this.plugin.data.formulas[l.alias]=l.formula,this.buildFormulaSettings(e),await this.plugin.saveSettings())})).addExtraButton(o=>o.setIcon("trash").setTooltip("Delete").onClick(async()=>{delete this.plugin.data.formulas[r],await this.plugin.saveSettings(),this.buildFormulaSettings(e)}))}Object.values(a).length||i.createSpan({text:"Create a formula to see it here!",cls:"no-formulas"})}async buildFormulaForm(e,t={alias:null,formula:null}){return new Promise(i=>{let a=e.createDiv("add-new-formula"),r=a.createDiv("formula-data");new H1.Setting(r).setName("Alias").addText(c=>{c.setValue(t.alias).onChange(o=>t.alias=o)}),new H1.Setting(r).setName("Formula").addText(c=>{c.setValue(t.formula).onChange(o=>t.formula=o)});let s=a.createDiv("formula-buttons");new H1.Setting(s).addButton(c=>c.setCta().setButtonText("Save").onClick(async()=>{a.detach(),i(t)})).addExtraButton(c=>c.setIcon("cross").setTooltip("Cancel").onClick(()=>{a.detach(),i(null)}))})}};var _1=Y2(require("obsidian"));var s4="DICE_ROLLER_VIEW",Oo='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><defs><style>.cls-1{fill:none;stroke: currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:15px !important;}</style></defs><g id="Shapes"><path class="cls-1" d="M244.62,49.31,40.31,403.19a6.21,6.21,0,0,0,5.38,9.31H454.31a6.21,6.21,0,0,0,5.38-9.31L255.38,49.31A6.21,6.21,0,0,0,244.62,49.31Z"/></g><g fill="currentColor" id="Layer_1" data-name="Layer 1"><path d="M270.21,278.16h21.7v16.22h-21.7v36.31h-20V294.38H179V282.67l70-108.39h21.16Zm-68.64,0h48.66v-76.7l-2.36,4.3Z"/></g></svg>',Go='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><defs><style>.cls-1{fill:none;stroke: currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:15px !important;}</style></defs><g id="Shapes"><rect class="cls-1" x="87.5" y="87.5" width="325" height="325" rx="10"/></g><g fill="currentColor" id="Layer_1" data-name="Layer 1"><path d="M279.22,174.18V191h-3.65q-23.2.44-37,13.75t-15.9,37.49q12.36-14.17,33.74-14.18,20.4,0,32.6,14.4t12.19,37.17q0,24.16-13.16,38.67t-35.29,14.5q-22.46,0-36.41-17.24t-14-44.42v-7.63q0-43.19,18.42-66t54.84-23.36Zm-26.1,70.47a33.41,33.41,0,0,0-30.73,21.48v7.31q0,19.33,8.7,31.15t21.7,11.81q13.43,0,21.11-9.88t7.68-25.89q0-16.11-7.79-26A25,25,0,0,0,253.12,244.65Z"/></g></svg>',qo='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><defs><style>.cls-1{fill:none;stroke: currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:15px !important;}</style></defs><g id="Shapes"><rect class="cls-1" x="102.75" y="102.75" width="294.51" height="294.51" rx="9.8" transform="translate(-103.55 250) rotate(-45)"/></g><g fill="currentColor" id="Layer_1" data-name="Layer 1"><path d="M292.08,215.1a36.35,36.35,0,0,1-6.17,20.84,42.05,42.05,0,0,1-16.71,14.29,44.8,44.8,0,0,1,19.39,15.36,38.7,38.7,0,0,1,7.15,22.88q0,20.31-13.7,32.34t-36,12q-22.56,0-36.15-12.09t-13.59-32.28a39.84,39.84,0,0,1,6.93-22.88,43.14,43.14,0,0,1,19.18-15.47,40.88,40.88,0,0,1-16.44-14.28,36.85,36.85,0,0,1-6-20.74q0-19.75,12.67-31.36T246,172.14q20.63,0,33.35,11.6T292.08,215.1ZM275.86,288q0-13.1-8.32-21.37t-21.75-8.27q-13.44,0-21.54,8.16T216.14,288q0,13.33,7.89,20.95t22,7.63q14,0,21.91-7.68T275.86,288ZM246,188.46q-11.72,0-19,7.26t-7.25,19.71q0,11.92,7.14,19.28T246,242.07q11.92,0,19.07-7.36t7.14-19.28q0-11.93-7.41-19.45T246,188.46Z"/></g></svg>',Wo='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><defs><style>.cls-1{fill:none;stroke: currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:15px !important;}</style></defs><g id="Shapes"><rect class="cls-1" x="102.75" y="102.75" width="294.51" height="294.51" rx="9.8" transform="translate(-103.55 250) rotate(-45)"/></g><g fill="currentColor" id="Layer_1" data-name="Layer 1"><path d="M219,330.69H199V198.24L158.92,213V194.91l56.93-21.38H219Z"/><path d="M344.47,264q0,34.92-11.93,51.89t-37.27,17q-25,0-37.06-16.6t-12.46-49.57V240.13q0-34.47,11.92-51.24t37.38-16.75q25.24,0,37.17,16.16t12.25,49.9ZM324.59,236.8q0-25.23-7.09-36.79t-22.45-11.55q-15.26,0-22.23,11.5t-7.2,35.34v31.8q0,25.35,7.36,37.43t22.29,12.09q14.72,0,21.86-11.39t7.46-35.88Z"/></g></svg>',jo='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><defs><style>.cls-1{fill:none;stroke: currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:15px !important;}</style></defs><g id="Shapes"><path class="cls-1" d="M244.31,29.14,52,168.87a9.72,9.72,0,0,0-3.52,10.84l73.47,226.1a9.69,9.69,0,0,0,9.21,6.69H368.87a9.69,9.69,0,0,0,9.21-6.69l73.47-226.1A9.72,9.72,0,0,0,448,168.87L255.69,29.14A9.66,9.66,0,0,0,244.31,29.14Z"/></g><g fill="currentColor" id="Layer_1" data-name="Layer 1"><path d="M208,330.69H188V198.24L147.93,213V194.91l56.93-21.38H208Z"/><path d="M342.28,330.69H239.8V316.4l54.14-60.15q12-13.65,16.6-22.19a37,37,0,0,0,4.56-17.67q0-12.24-7.41-20.08t-19.77-7.85q-14.82,0-23,8.44t-8.22,23.47H236.79q0-21.6,13.91-34.91t37.22-13.32q21.81,0,34.49,11.44T335.08,214q0,23.1-29.43,55l-41.9,45.44h78.53Z"/></g></svg>',Xo='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><defs><style>.cls-1{fill:none;stroke: currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:15px !important;}</style></defs><g id="Shapes"><path class="cls-1" d="M55.14,143.27V356.73a10,10,0,0,0,5,8.66L245,472.11a10,10,0,0,0,10,0L439.86,365.39a10,10,0,0,0,5-8.66V143.27a10,10,0,0,0-5-8.66L255,27.89a10,10,0,0,0-10,0L60.14,134.61A10,10,0,0,0,55.14,143.27Z"/></g><g fill="currentColor" id="Layer_1" data-name="Layer 1"><path d="M251.34,330.69H148.86V316.4L203,256.25q12-13.65,16.6-22.19a37,37,0,0,0,4.57-17.67q0-12.24-7.42-20.08T197,188.46q-14.82,0-23,8.44t-8.22,23.47H145.86q0-21.6,13.91-34.91T197,172.14q21.81,0,34.48,11.44T244.15,214q0,23.1-29.44,55l-41.89,45.44h78.52Z"/><path d="M361.67,264q0,34.92-11.92,51.89t-37.27,17q-25,0-37.06-16.6T263,266.67V240.13q0-34.47,11.93-51.24t37.38-16.75q25.25,0,37.17,16.16t12.24,49.9ZM341.8,236.8q0-25.23-7.09-36.79t-22.45-11.55Q297,188.46,290,200t-7.19,35.34v31.8q0,25.35,7.36,37.43t22.29,12.09q14.72,0,21.86-11.39t7.46-35.88Z"/></g></svg>',Zo='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><defs><style>.cls-1{fill:none;stroke: currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:15px !important;}</style></defs><g id="Shapes"><circle class="cls-1" cx="246.23" cy="250" r="189.38"/></g><g fill="currentColor" id="Layer_1" data-name="Layer 1"><path d="M172.54,194.88q0-15.7,10.19-25.49t26.72-9.79q16.76,0,27,9.67t10.19,26.19v8.44q0,15.82-10.19,25.43t-26.72,9.61q-16.65,0-26.9-9.67T172.54,203.2Zm22.5,9.17q0,7.06,4,11.37a13.88,13.88,0,0,0,10.61,4.3,13.24,13.24,0,0,0,10.43-4.36Q224,211,224,203.69V195c0-4.71-1.28-8.53-3.86-11.43s-6.14-4.36-10.67-4.36a13.56,13.56,0,0,0-10.43,4.3q-4,4.31-4,12Zm21.33,115.87L199.84,311l83.32-133.36,16.53,8.91Zm37.73-29.06q0-15.83,10.31-25.49t26.72-9.67q16.65,0,26.9,9.55t10.25,26.31V300q0,15.71-10.08,25.37T291.37,335q-16.87,0-27.07-9.73t-10.2-25.78Zm22.5,9.28a15.82,15.82,0,0,0,4.22,11.08,13.71,13.71,0,0,0,10.55,4.6q14.29,0,14.29-15.92V291q0-7.08-4-11.38a15.08,15.08,0,0,0-21.09,0q-4,4.31-4,11.73Z"/></g></svg>';(0,_1.addIcon)("d4",Oo);(0,_1.addIcon)("d6",Go);(0,_1.addIcon)("d8",qo);(0,_1.addIcon)("d10",Wo);(0,_1.addIcon)("d12",jo);(0,_1.addIcon)("d20",Xo);(0,_1.addIcon)("d100",Zo);(0,_1.addIcon)("dice-roller-save",'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="far" data-icon="save" class="svg-inline--fa fa-save fa-w-14" role="img" viewBox="0 0 448 512"><path fill="currentColor" d="M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 0 1 1.757 4.243V426a6 6 0 0 1-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z"/></svg>');(0,_1.addIcon)("dice-roller-plus",'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="far" data-icon="plus-square" class="svg-inline--fa fa-plus-square fa-w-14" role="img" viewBox="0 0 448 512"><path fill="currentColor" d="M352 240v32c0 6.6-5.4 12-12 12h-88v88c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-88h-88c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h88v-88c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v88h88c6.6 0 12 5.4 12 12zm96-160v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z"/></svg>');(0,_1.addIcon)("dice-roller-minus",'<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="far" data-icon="minus-square" class="svg-inline--fa fa-minus-square fa-w-14" role="img" viewBox="0 0 448 512"><path fill="currentColor" d="M108 284c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h232c6.6 0 12 5.4 12 12v32c0 6.6-5.4 12-12 12H108zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z"/></svg>');var Be=class extends _1.ItemView{constructor(e,t){super(t);this.plugin=e;this.leaf=t;this.dice=Be.DICE();this.custom="";this.adv=!1;this.dis=!1;this.add=0;this.contentEl.addClass("dice-roller-view"),this.registerEvent(this.plugin.app.workspace.on("dice-roller:update-colors",()=>{this.renderer.factory.updateColors()}))}static DICE(){return{d4:0,d6:0,d8:0,d10:0,d12:0,d20:0,d100:0}}get customFormulas(){return this.plugin.data.customFormulas}get renderer(){return this.plugin.renderer}async onOpen(){this.display()}async display(){this.contentEl.empty(),this.gridEl=this.contentEl.createDiv("dice-roller-grid"),this.formulaEl=this.contentEl.createDiv("dice-roller-formula");let e=this.contentEl.createDiv("dice-roller-results-container"),t=e.createDiv("dice-roller-results-header");t.createEl("h4",{text:"Results"}),new _1.ExtraButtonComponent(t.createDiv("clear-all")).setIcon("trash").setTooltip("Clear All").onClick(()=>{this.resultEl.empty(),this.resultEl.append(this.noResultsEl)}),this.resultEl=e.createDiv("dice-roller-results"),this.noResultsEl=this.resultEl.createSpan({text:"No results yet! Roll some dice to get started :)"}),this.buildButtons(),this.buildFormula()}buildButtons(){this.gridEl.empty();let e=this.gridEl.createDiv("dice-buttons");for(let c in this.dice){let o=new _1.ExtraButtonComponent(e.createDiv("dice-button")).setIcon(c);o.extraSettingsEl.onclick=async l=>{let h=l.getModifierState("Shift")?-1:1;this.dice[c]+=h,this.setFormula();let f=await this.plugin.getRoller(this.formulaComponent.inputEl.value,"view");f instanceof pe&&(this.stack=f)}}let t=this.gridEl.createDiv("advantage-disadvantage"),i=new _1.ButtonComponent(t).setButtonText("ADV").onClick(()=>{this.adv=!this.adv,this.dis=!1,this.adv?(i.setCta(),a.removeCta()):i.removeCta(),this.setFormula()}),a=new _1.ButtonComponent(t).setButtonText("DIS").onClick(()=>{this.dis=!this.dis,this.dis?(a.setCta(),i.removeCta()):a.removeCta(),this.adv=!1,this.setFormula()}),r=this.gridEl.createDiv("dice-context").createDiv("add-subtract");new _1.ExtraButtonComponent(r).setIcon("dice-roller-minus").onClick(()=>{this.add-=1,s.setValue(`${this.add}`),this.setFormula()});let s=new _1.TextComponent(r).setValue(`${this.add?this.add:""}`).onChange(c=>{isNaN(Number(c))||(this.add=Number(c)),this.setFormula()});if(new _1.ExtraButtonComponent(r).setIcon("dice-roller-plus").onClick(()=>{this.add+=1,s.setValue(`${this.add}`),this.setFormula()}),this.customFormulas.length){let c=this.gridEl.createDiv("dice-roller-results-container");c.createDiv("dice-roller-results-header").createEl("h4",{text:"Saved Formulas"});for(let l of this.customFormulas){let h=c.createDiv("dice-custom-formula-container"),f=h.createDiv("dice-custom-formula");new _1.ExtraButtonComponent(f).setIcon(fe).setTooltip("Roll").onClick(()=>this.roll(l)),f.createSpan({text:l}),new _1.ExtraButtonComponent(h).setIcon("trash").setTooltip("Remove").onClick(()=>{this.plugin.data.customFormulas=this.plugin.data.customFormulas.filter(u=>u!=l),this.plugin.saveSettings(),this.buildButtons()})}}}async roll(e=this.formulaComponent.inputEl.value){if(!e)return;this.rollButton.setDisabled(!0);let t=await this.plugin.getRoller(e,"view");if(!(t instanceof pe)){new _1.Notice("The Dice View only supports dice rolls.");return}if(await t.roll(),!t.dice.length){new _1.Notice("Invalid formula.");return}try{this.plugin.data.renderer&&(this.addChild(this.renderer),this.renderer.setDice(t),await this.renderer.start(),t.recalculate())}catch(i){new _1.Notice("There was an error rendering the roll."),console.error(i)}this.rollButton.setDisabled(!1),this.addResult({result:t.result,original:t.original,resultText:t.resultText}),this.dice=Be.DICE(),this.add=null,this.adv=!1,this.dis=!1,this.buildButtons(),this.setFormula()}buildFormula(){this.formulaEl.empty(),this.formulaComponent=new _1.TextAreaComponent(this.formulaEl).setPlaceholder("Dice Formula"),this.formulaComponent.onChange((0,_1.debounce)(async t=>{},500,!0));let e=this.formulaEl.createDiv("action-buttons");this.saveButton=new _1.ButtonComponent(e).setIcon("plus-with-circle").setCta().setTooltip("Save Formula").onClick(()=>this.save()),this.saveButton.buttonEl.addClass("dice-roller-roll"),this.rollButton=new _1.ButtonComponent(e).setIcon(fe).setCta().setTooltip("Roll").onClick(()=>this.roll()),this.rollButton.buttonEl.addClass("dice-roller-roll")}save(){!this.formulaComponent.inputEl.value||(this.plugin.data.customFormulas.push(this.formulaComponent.inputEl.value),this.buildButtons(),this.plugin.saveSettings())}addResult(e){this.noResultsEl&&this.noResultsEl.detach();let t=createDiv("view-result");t.createSpan({text:e.original}),t.createEl("strong",{text:`${e.result}`,attr:{"aria-label":e.resultText}});let i=t.createDiv("result-context");i.createEl("em",{text:new Date().toLocaleString()}),new _1.ExtraButtonComponent(i).setIcon("trash").onClick(()=>{t.detach(),this.resultEl.children.length===0&&this.resultEl.prepend(this.noResultsEl)}),new _1.ExtraButtonComponent(i).setIcon(de).setTooltip("Copy Result").onClick(async()=>{await navigator.clipboard.writeText(`${e.result}`)}).extraSettingsEl.addClass("dice-content-copy"),new _1.ExtraButtonComponent(i).setIcon(fe).setTooltip("Roll Again").onClick(()=>this.roll(e.original)).extraSettingsEl.addClass("dice-result-reroll"),this.resultEl.prepend(t)}get formulaString(){let e=[],t=Object.entries(this.dice).filter(([a,r])=>r!=0);if(!t.length)return"";t.sort((a,r)=>Number(r[0].slice(1))-Number(a[0].slice(1)));let i=t.shift();return e.push(`${i[1]}${i[0]}`),this.adv?e.push("kh"):this.dis&&e.push("dh"),t.length&&e.push(...t.map(([a,r])=>`${r>0?"+":"-"}${Math.abs(r)}${a}`)),this.add&&this.add!=0&&(e.push(this.add>0?"+":"-"),e.push(Math.abs(this.add))),e.join("")}setFormula(){this.formulaComponent.setValue(this.formulaString)}getDisplayText(){return"Dice Roller"}getViewType(){return s4}getIcon(){return fe}async onClose(){await super.onClose(),this.renderer.unload()}};var Tt=Y2(require("obsidian"));var M2=class{constructor(e=[0,0,0,0,0,0,0,0,0]){this.elements=void 0,this.elements=e}identity(){let e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1}setZero(){let e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0}setTrace(e){let t=this.elements;t[0]=e.x,t[4]=e.y,t[8]=e.z}getTrace(e=new M){let t=this.elements;return e.x=t[0],e.y=t[4],e.z=t[8],e}vmult(e,t=new M){let i=this.elements,a=e.x,r=e.y,s=e.z;return t.x=i[0]*a+i[1]*r+i[2]*s,t.y=i[3]*a+i[4]*r+i[5]*s,t.z=i[6]*a+i[7]*r+i[8]*s,t}smult(e){for(let t=0;t<this.elements.length;t++)this.elements[t]*=e}mmult(e,t=new M2){let i=this.elements,a=e.elements,r=t.elements,s=i[0],c=i[1],o=i[2],l=i[3],h=i[4],f=i[5],u=i[6],m=i[7],v=i[8],g=a[0],x=a[1],p=a[2],d=a[3],C=a[4],b=a[5],A=a[6],L=a[7],y=a[8];return r[0]=s*g+c*d+o*A,r[1]=s*x+c*C+o*L,r[2]=s*p+c*b+o*y,r[3]=l*g+h*d+f*A,r[4]=l*x+h*C+f*L,r[5]=l*p+h*b+f*y,r[6]=u*g+m*d+v*A,r[7]=u*x+m*C+v*L,r[8]=u*p+m*b+v*y,t}scale(e,t=new M2){let i=this.elements,a=t.elements;for(let r=0;r!==3;r++)a[3*r+0]=e.x*i[3*r+0],a[3*r+1]=e.y*i[3*r+1],a[3*r+2]=e.z*i[3*r+2];return t}solve(e,t=new M){let i=3,a=4,r=[],s,c;for(s=0;s<i*a;s++)r.push(0);for(s=0;s<3;s++)for(c=0;c<3;c++)r[s+a*c]=this.elements[s+3*c];r[3+4*0]=e.x,r[3+4*1]=e.y,r[3+4*2]=e.z;let o=3,l=o,h,f=4,u;do{if(s=l-o,r[s+a*s]===0){for(c=s+1;c<l;c++)if(r[s+a*c]!==0){h=f;do u=f-h,r[u+a*s]+=r[u+a*c];while(--h);break}}if(r[s+a*s]!==0)for(c=s+1;c<l;c++){let m=r[s+a*c]/r[s+a*s];h=f;do u=f-h,r[u+a*c]=u<=s?0:r[u+a*c]-r[u+a*s]*m;while(--h)}}while(--o);if(t.z=r[2*a+3]/r[2*a+2],t.y=(r[1*a+3]-r[1*a+2]*t.z)/r[1*a+1],t.x=(r[0*a+3]-r[0*a+2]*t.z-r[0*a+1]*t.y)/r[0*a+0],isNaN(t.x)||isNaN(t.y)||isNaN(t.z)||t.x===1/0||t.y===1/0||t.z===1/0)throw"Could not solve equation! Got x=["+t.toString()+"], b=["+e.toString()+"], A=["+this.toString()+"]";return t}e(e,t,i){if(i===void 0)return this.elements[t+3*e];this.elements[t+3*e]=i}copy(e){for(let t=0;t<e.elements.length;t++)this.elements[t]=e.elements[t];return this}toString(){let e="",t=",";for(let i=0;i<9;i++)e+=this.elements[i]+t;return e}reverse(e=new M2){let t=3,i=6,a=Yo,r,s;for(r=0;r<3;r++)for(s=0;s<3;s++)a[r+i*s]=this.elements[r+3*s];a[3+6*0]=1,a[3+6*1]=0,a[3+6*2]=0,a[4+6*0]=0,a[4+6*1]=1,a[4+6*2]=0,a[5+6*0]=0,a[5+6*1]=0,a[5+6*2]=1;let c=3,o=c,l,h=i,f;do{if(r=o-c,a[r+i*r]===0){for(s=r+1;s<o;s++)if(a[r+i*s]!==0){l=h;do f=h-l,a[f+i*r]+=a[f+i*s];while(--l);break}}if(a[r+i*r]!==0)for(s=r+1;s<o;s++){let u=a[r+i*s]/a[r+i*r];l=h;do f=h-l,a[f+i*s]=f<=r?0:a[f+i*s]-a[f+i*r]*u;while(--l)}}while(--c);r=2;do{s=r-1;do{let u=a[r+i*s]/a[r+i*r];l=i;do f=i-l,a[f+i*s]=a[f+i*s]-a[f+i*r]*u;while(--l)}while(s--)}while(--r);r=2;do{let u=1/a[r+i*r];l=i;do f=i-l,a[f+i*r]=a[f+i*r]*u;while(--l)}while(r--);r=2;do{s=2;do{if(f=a[t+s+i*r],isNaN(f)||f===1/0)throw"Could not reverse! A=["+this.toString()+"]";e.e(r,s,f)}while(s--)}while(r--);return e}setRotationFromQuaternion(e){let t=e.x,i=e.y,a=e.z,r=e.w,s=t+t,c=i+i,o=a+a,l=t*s,h=t*c,f=t*o,u=i*c,m=i*o,v=a*o,g=r*s,x=r*c,p=r*o,d=this.elements;return d[3*0+0]=1-(u+v),d[3*0+1]=h-p,d[3*0+2]=f+x,d[3*1+0]=h+p,d[3*1+1]=1-(l+v),d[3*1+2]=m-g,d[3*2+0]=f-x,d[3*2+1]=m+g,d[3*2+2]=1-(l+u),this}transpose(e=new M2){let t=this.elements,i=e.elements,a;return i[0]=t[0],i[4]=t[4],i[8]=t[8],a=t[1],i[1]=t[3],i[3]=a,a=t[2],i[2]=t[6],i[6]=a,a=t[5],i[5]=t[7],i[7]=a,e}},Yo=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],M=class{constructor(e=0,t=0,i=0){this.x=void 0,this.y=void 0,this.z=void 0,this.x=e,this.y=t,this.z=i}cross(e,t=new M){let i=e.x,a=e.y,r=e.z,s=this.x,c=this.y,o=this.z;return t.x=c*r-o*a,t.y=o*i-s*r,t.z=s*a-c*i,t}set(e,t,i){return this.x=e,this.y=t,this.z=i,this}setZero(){this.x=this.y=this.z=0}vadd(e,t){if(t)t.x=e.x+this.x,t.y=e.y+this.y,t.z=e.z+this.z;else return new M(this.x+e.x,this.y+e.y,this.z+e.z)}vsub(e,t){if(t)t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z;else return new M(this.x-e.x,this.y-e.y,this.z-e.z)}crossmat(){return new M2([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){let e=this.x,t=this.y,i=this.z,a=Math.sqrt(e*e+t*t+i*i);if(a>0){let r=1/a;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return a}unit(e=new M){let t=this.x,i=this.y,a=this.z,r=Math.sqrt(t*t+i*i+a*a);return r>0?(r=1/r,e.x=t*r,e.y=i*r,e.z=a*r):(e.x=1,e.y=0,e.z=0),e}length(){let e=this.x,t=this.y,i=this.z;return Math.sqrt(e*e+t*t+i*i)}lengthSquared(){return this.dot(this)}distanceTo(e){let t=this.x,i=this.y,a=this.z,r=e.x,s=e.y,c=e.z;return Math.sqrt((r-t)*(r-t)+(s-i)*(s-i)+(c-a)*(c-a))}distanceSquared(e){let t=this.x,i=this.y,a=this.z,r=e.x,s=e.y,c=e.z;return(r-t)*(r-t)+(s-i)*(s-i)+(c-a)*(c-a)}scale(e,t=new M){let i=this.x,a=this.y,r=this.z;return t.x=e*i,t.y=e*a,t.z=e*r,t}vmul(e,t=new M){return t.x=e.x*this.x,t.y=e.y*this.y,t.z=e.z*this.z,t}addScaledVector(e,t,i=new M){return i.x=this.x+e*t.x,i.y=this.y+e*t.y,i.z=this.z+e*t.z,i}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(e=new M){return e.x=-this.x,e.y=-this.y,e.z=-this.z,e}tangents(e,t){let i=this.length();if(i>0){let a=$o,r=1/i;a.set(this.x*r,this.y*r,this.z*r);let s=Ko;Math.abs(a.x)<.9?(s.set(1,0,0),a.cross(s,e)):(s.set(0,1,0),a.cross(s,e)),a.cross(e,t)}else e.set(1,0,0),t.set(0,1,0)}toString(){return this.x+","+this.y+","+this.z}toArray(){return[this.x,this.y,this.z]}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}lerp(e,t,i){let a=this.x,r=this.y,s=this.z;i.x=a+(e.x-a)*t,i.y=r+(e.y-r)*t,i.z=s+(e.z-s)*t}almostEquals(e,t=1e-6){return!(Math.abs(this.x-e.x)>t||Math.abs(this.y-e.y)>t||Math.abs(this.z-e.z)>t)}almostZero(e=1e-6){return!(Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e)}isAntiparallelTo(e,t){return this.negate(aa),aa.almostEquals(e,t)}clone(){return new M(this.x,this.y,this.z)}};M.ZERO=void 0;M.UNIT_X=void 0;M.UNIT_Y=void 0;M.UNIT_Z=void 0;M.ZERO=new M(0,0,0);M.UNIT_X=new M(1,0,0);M.UNIT_Y=new M(0,1,0);M.UNIT_Z=new M(0,0,1);var $o=new M,Ko=new M,aa=new M,b2=class{constructor(e={}){this.lowerBound=void 0,this.upperBound=void 0,this.lowerBound=new M,this.upperBound=new M,e.lowerBound&&this.lowerBound.copy(e.lowerBound),e.upperBound&&this.upperBound.copy(e.upperBound)}setFromPoints(e,t,i,a){let r=this.lowerBound,s=this.upperBound,c=i;r.copy(e[0]),c&&c.vmult(r,r),s.copy(r);for(let o=1;o<e.length;o++){let l=e[o];c&&(c.vmult(l,ra),l=ra),l.x>s.x&&(s.x=l.x),l.x<r.x&&(r.x=l.x),l.y>s.y&&(s.y=l.y),l.y<r.y&&(r.y=l.y),l.z>s.z&&(s.z=l.z),l.z<r.z&&(r.z=l.z)}return t&&(t.vadd(r,r),t.vadd(s,s)),a&&(r.x-=a,r.y-=a,r.z-=a,s.x+=a,s.y+=a,s.z+=a),this}copy(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this}clone(){return new b2().copy(this)}extend(e){this.lowerBound.x=Math.min(this.lowerBound.x,e.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,e.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,e.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,e.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,e.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,e.upperBound.z)}overlaps(e){let t=this.lowerBound,i=this.upperBound,a=e.lowerBound,r=e.upperBound,s=a.x<=i.x&&i.x<=r.x||t.x<=r.x&&r.x<=i.x,c=a.y<=i.y&&i.y<=r.y||t.y<=r.y&&r.y<=i.y,o=a.z<=i.z&&i.z<=r.z||t.z<=r.z&&r.z<=i.z;return s&&c&&o}volume(){let e=this.lowerBound,t=this.upperBound;return(t.x-e.x)*(t.y-e.y)*(t.z-e.z)}contains(e){let t=this.lowerBound,i=this.upperBound,a=e.lowerBound,r=e.upperBound;return t.x<=a.x&&i.x>=r.x&&t.y<=a.y&&i.y>=r.y&&t.z<=a.z&&i.z>=r.z}getCorners(e,t,i,a,r,s,c,o){let l=this.lowerBound,h=this.upperBound;e.copy(l),t.set(h.x,l.y,l.z),i.set(h.x,h.y,l.z),a.set(l.x,h.y,h.z),r.set(h.x,l.y,h.z),s.set(l.x,h.y,l.z),c.set(l.x,l.y,h.z),o.copy(h)}toLocalFrame(e,t){let i=na,a=i[0],r=i[1],s=i[2],c=i[3],o=i[4],l=i[5],h=i[6],f=i[7];this.getCorners(a,r,s,c,o,l,h,f);for(let u=0;u!==8;u++){let m=i[u];e.pointToLocal(m,m)}return t.setFromPoints(i)}toWorldFrame(e,t){let i=na,a=i[0],r=i[1],s=i[2],c=i[3],o=i[4],l=i[5],h=i[6],f=i[7];this.getCorners(a,r,s,c,o,l,h,f);for(let u=0;u!==8;u++){let m=i[u];e.pointToWorld(m,m)}return t.setFromPoints(i)}overlapsRay(e){let{direction:t,from:i}=e,a=1/t.x,r=1/t.y,s=1/t.z,c=(this.lowerBound.x-i.x)*a,o=(this.upperBound.x-i.x)*a,l=(this.lowerBound.y-i.y)*r,h=(this.upperBound.y-i.y)*r,f=(this.lowerBound.z-i.z)*s,u=(this.upperBound.z-i.z)*s,m=Math.max(Math.max(Math.min(c,o),Math.min(l,h)),Math.min(f,u)),v=Math.min(Math.min(Math.max(c,o),Math.max(l,h)),Math.max(f,u));return!(v<0||m>v)}},ra=new M,na=[new M,new M,new M,new M,new M,new M,new M,new M],g0=class{constructor(){this.matrix=void 0,this.matrix=[]}get(e,t){let{index:i}=e,{index:a}=t;if(a>i){let r=a;a=i,i=r}return this.matrix[(i*(i+1)>>1)+a-1]}set(e,t,i){let{index:a}=e,{index:r}=t;if(r>a){let s=r;r=a,a=s}this.matrix[(a*(a+1)>>1)+r-1]=i?1:0}reset(){for(let e=0,t=this.matrix.length;e!==t;e++)this.matrix[e]=0}setNumObjects(e){this.matrix.length=e*(e-1)>>1}},x0=class{constructor(){this._listeners=void 0}addEventListener(e,t){this._listeners===void 0&&(this._listeners={});let i=this._listeners;return i[e]===void 0&&(i[e]=[]),i[e].includes(t)||i[e].push(t),this}hasEventListener(e,t){if(this._listeners===void 0)return!1;let i=this._listeners;return!!(i[e]!==void 0&&i[e].includes(t))}hasAnyEventListener(e){return this._listeners===void 0?!1:this._listeners[e]!==void 0}removeEventListener(e,t){if(this._listeners===void 0)return this;let i=this._listeners;if(i[e]===void 0)return this;let a=i[e].indexOf(t);return a!==-1&&i[e].splice(a,1),this}dispatchEvent(e){if(this._listeners===void 0)return this;let i=this._listeners[e.type];if(i!==void 0){e.target=this;for(let a=0,r=i.length;a<r;a++)i[a].call(this,e)}return this}},I1=class{constructor(e=0,t=0,i=0,a=1){this.x=void 0,this.y=void 0,this.z=void 0,this.w=void 0,this.x=e,this.y=t,this.z=i,this.w=a}set(e,t,i,a){return this.x=e,this.y=t,this.z=i,this.w=a,this}toString(){return this.x+","+this.y+","+this.z+","+this.w}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(e,t){let i=Math.sin(t*.5);return this.x=e.x*i,this.y=e.y*i,this.z=e.z*i,this.w=Math.cos(t*.5),this}toAxisAngle(e=new M){this.normalize();let t=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/i,e.y=this.y/i,e.z=this.z/i),[e,t]}setFromVectors(e,t){if(e.isAntiparallelTo(t)){let i=Jo,a=Qo;e.tangents(i,a),this.setFromAxisAngle(i,Math.PI)}else{let i=e.cross(t);this.x=i.x,this.y=i.y,this.z=i.z,this.w=Math.sqrt(e.length()**2*t.length()**2)+e.dot(t),this.normalize()}return this}mult(e,t=new I1){let i=this.x,a=this.y,r=this.z,s=this.w,c=e.x,o=e.y,l=e.z,h=e.w;return t.x=i*h+s*c+a*l-r*o,t.y=a*h+s*o+r*c-i*l,t.z=r*h+s*l+i*o-a*c,t.w=s*h-i*c-a*o-r*l,t}inverse(e=new I1){let t=this.x,i=this.y,a=this.z,r=this.w;this.conjugate(e);let s=1/(t*t+i*i+a*a+r*r);return e.x*=s,e.y*=s,e.z*=s,e.w*=s,e}conjugate(e=new I1){return e.x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e}normalize(){let e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return e===0?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}normalizeFast(){let e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return e===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}vmult(e,t=new M){let i=e.x,a=e.y,r=e.z,s=this.x,c=this.y,o=this.z,l=this.w,h=l*i+c*r-o*a,f=l*a+o*i-s*r,u=l*r+s*a-c*i,m=-s*i-c*a-o*r;return t.x=h*l+m*-s+f*-o-u*-c,t.y=f*l+m*-c+u*-s-h*-o,t.z=u*l+m*-o+h*-c-f*-s,t}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}toEuler(e,t="YZX"){let i,a,r,s=this.x,c=this.y,o=this.z,l=this.w;switch(t){case"YZX":let h=s*c+o*l;if(h>.499&&(i=2*Math.atan2(s,l),a=Math.PI/2,r=0),h<-.499&&(i=-2*Math.atan2(s,l),a=-Math.PI/2,r=0),i===void 0){let f=s*s,u=c*c,m=o*o;i=Math.atan2(2*c*l-2*s*o,1-2*u-2*m),a=Math.asin(2*h),r=Math.atan2(2*s*l-2*c*o,1-2*f-2*m)}break;default:throw new Error("Euler order "+t+" not supported yet.")}e.y=i,e.z=a,e.x=r}setFromEuler(e,t,i,a="XYZ"){let r=Math.cos(e/2),s=Math.cos(t/2),c=Math.cos(i/2),o=Math.sin(e/2),l=Math.sin(t/2),h=Math.sin(i/2);return a==="XYZ"?(this.x=o*s*c+r*l*h,this.y=r*l*c-o*s*h,this.z=r*s*h+o*l*c,this.w=r*s*c-o*l*h):a==="YXZ"?(this.x=o*s*c+r*l*h,this.y=r*l*c-o*s*h,this.z=r*s*h-o*l*c,this.w=r*s*c+o*l*h):a==="ZXY"?(this.x=o*s*c-r*l*h,this.y=r*l*c+o*s*h,this.z=r*s*h+o*l*c,this.w=r*s*c-o*l*h):a==="ZYX"?(this.x=o*s*c-r*l*h,this.y=r*l*c+o*s*h,this.z=r*s*h-o*l*c,this.w=r*s*c+o*l*h):a==="YZX"?(this.x=o*s*c+r*l*h,this.y=r*l*c+o*s*h,this.z=r*s*h-o*l*c,this.w=r*s*c-o*l*h):a==="XZY"&&(this.x=o*s*c-r*l*h,this.y=r*l*c-o*s*h,this.z=r*s*h+o*l*c,this.w=r*s*c+o*l*h),this}clone(){return new I1(this.x,this.y,this.z,this.w)}slerp(e,t,i=new I1){let a=this.x,r=this.y,s=this.z,c=this.w,o=e.x,l=e.y,h=e.z,f=e.w,u,m,v,g,x;return m=a*o+r*l+s*h+c*f,m<0&&(m=-m,o=-o,l=-l,h=-h,f=-f),1-m>1e-6?(u=Math.acos(m),v=Math.sin(u),g=Math.sin((1-t)*u)/v,x=Math.sin(t*u)/v):(g=1-t,x=t),i.x=g*a+x*o,i.y=g*r+x*l,i.z=g*s+x*h,i.w=g*c+x*f,i}integrate(e,t,i,a=new I1){let r=e.x*i.x,s=e.y*i.y,c=e.z*i.z,o=this.x,l=this.y,h=this.z,f=this.w,u=t*.5;return a.x+=u*(r*f+s*h-c*l),a.y+=u*(s*f+c*o-r*h),a.z+=u*(c*f+r*l-s*o),a.w+=u*(-r*o-s*l-c*h),a}},Jo=new M,Qo=new M,e7={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256},n1=class{constructor(e={}){this.id=void 0,this.type=void 0,this.boundingSphereRadius=void 0,this.collisionResponse=void 0,this.collisionFilterGroup=void 0,this.collisionFilterMask=void 0,this.material=void 0,this.body=void 0,this.id=n1.idCounter++,this.type=e.type||0,this.boundingSphereRadius=0,this.collisionResponse=e.collisionResponse?e.collisionResponse:!0,this.collisionFilterGroup=e.collisionFilterGroup!==void 0?e.collisionFilterGroup:1,this.collisionFilterMask=e.collisionFilterMask!==void 0?e.collisionFilterMask:-1,this.material=e.material?e.material:null,this.body=null}updateBoundingSphereRadius(){throw"computeBoundingSphereRadius() not implemented for shape type "+this.type}volume(){throw"volume() not implemented for shape type "+this.type}calculateLocalInertia(e,t){throw"calculateLocalInertia() not implemented for shape type "+this.type}calculateWorldAABB(e,t,i,a){throw"calculateWorldAABB() not implemented for shape type "+this.type}};n1.idCounter=0;n1.types=e7;var V1=class{constructor(e={}){this.position=void 0,this.quaternion=void 0,this.position=new M,this.quaternion=new I1,e.position&&this.position.copy(e.position),e.quaternion&&this.quaternion.copy(e.quaternion)}pointToLocal(e,t){return V1.pointToLocalFrame(this.position,this.quaternion,e,t)}pointToWorld(e,t){return V1.pointToWorldFrame(this.position,this.quaternion,e,t)}vectorToWorldFrame(e,t=new M){return this.quaternion.vmult(e,t),t}static pointToLocalFrame(e,t,i,a=new M){return i.vsub(e,a),t.conjugate(sa),sa.vmult(a,a),a}static pointToWorldFrame(e,t,i,a=new M){return t.vmult(i,a),a.vadd(e,a),a}static vectorToWorldFrame(e,t,i=new M){return e.vmult(t,i),i}static vectorToLocalFrame(e,t,i,a=new M){return t.w*=-1,t.vmult(i,a),t.w*=-1,a}},sa=new I1,Pe=class extends n1{constructor(e={}){let{vertices:t=[],faces:i=[],normals:a=[],axes:r,boundingSphereRadius:s}=e;super({type:n1.types.CONVEXPOLYHEDRON});this.vertices=void 0,this.faces=void 0,this.faceNormals=void 0,this.worldVertices=void 0,this.worldVerticesNeedsUpdate=void 0,this.worldFaceNormals=void 0,this.worldFaceNormalsNeedsUpdate=void 0,this.uniqueAxes=void 0,this.uniqueEdges=void 0,this.vertices=t,this.faces=i,this.faceNormals=a,this.faceNormals.length===0&&this.computeNormals(),s?this.boundingSphereRadius=s:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){let e=this.faces,t=this.vertices,i=this.uniqueEdges;i.length=0;let a=new M;for(let r=0;r!==e.length;r++){let s=e[r],c=s.length;for(let o=0;o!==c;o++){let l=(o+1)%c;t[s[o]].vsub(t[s[l]],a),a.normalize();let h=!1;for(let f=0;f!==i.length;f++)if(i[f].almostEquals(a)||i[f].almostEquals(a)){h=!0;break}h||i.push(a.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let e=0;e<this.faces.length;e++){for(let a=0;a<this.faces[e].length;a++)if(!this.vertices[this.faces[e][a]])throw new Error("Vertex "+this.faces[e][a]+" not found!");let t=this.faceNormals[e]||new M;this.getFaceNormal(e,t),t.negate(t),this.faceNormals[e]=t;let i=this.vertices[this.faces[e][0]];if(t.dot(i)<0){console.error(".faceNormals["+e+"] = Vec3("+t.toString()+") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.");for(let a=0;a<this.faces[e].length;a++)console.warn(".vertices["+this.faces[e][a]+"] = Vec3("+this.vertices[this.faces[e][a]].toString()+")")}}}getFaceNormal(e,t){let i=this.faces[e],a=this.vertices[i[0]],r=this.vertices[i[1]],s=this.vertices[i[2]];Pe.computeNormal(a,r,s,t)}static computeNormal(e,t,i,a){let r=new M,s=new M;t.vsub(e,s),i.vsub(t,r),r.cross(s,a),a.isZero()||a.normalize()}clipAgainstHull(e,t,i,a,r,s,c,o,l){let h=new M,f=-1,u=-Number.MAX_VALUE;for(let v=0;v<i.faces.length;v++){h.copy(i.faceNormals[v]),r.vmult(h,h);let g=h.dot(s);g>u&&(u=g,f=v)}let m=[];for(let v=0;v<i.faces[f].length;v++){let g=i.vertices[i.faces[f][v]],x=new M;x.copy(g),r.vmult(x,x),a.vadd(x,x),m.push(x)}f>=0&&this.clipFaceAgainstHull(s,e,t,m,c,o,l)}findSeparatingAxis(e,t,i,a,r,s,c,o){let l=new M,h=new M,f=new M,u=new M,m=new M,v=new M,g=Number.MAX_VALUE,x=this;if(x.uniqueAxes)for(let p=0;p!==x.uniqueAxes.length;p++){i.vmult(x.uniqueAxes[p],l);let d=x.testSepAxis(l,e,t,i,a,r);if(d===!1)return!1;d<g&&(g=d,s.copy(l))}else{let p=c?c.length:x.faces.length;for(let d=0;d<p;d++){let C=c?c[d]:d;l.copy(x.faceNormals[C]),i.vmult(l,l);let b=x.testSepAxis(l,e,t,i,a,r);if(b===!1)return!1;b<g&&(g=b,s.copy(l))}}if(e.uniqueAxes)for(let p=0;p!==e.uniqueAxes.length;p++){r.vmult(e.uniqueAxes[p],h);let d=x.testSepAxis(h,e,t,i,a,r);if(d===!1)return!1;d<g&&(g=d,s.copy(h))}else{let p=o?o.length:e.faces.length;for(let d=0;d<p;d++){let C=o?o[d]:d;h.copy(e.faceNormals[C]),r.vmult(h,h);let b=x.testSepAxis(h,e,t,i,a,r);if(b===!1)return!1;b<g&&(g=b,s.copy(h))}}for(let p=0;p!==x.uniqueEdges.length;p++){i.vmult(x.uniqueEdges[p],u);for(let d=0;d!==e.uniqueEdges.length;d++)if(r.vmult(e.uniqueEdges[d],m),u.cross(m,v),!v.almostZero()){v.normalize();let C=x.testSepAxis(v,e,t,i,a,r);if(C===!1)return!1;C<g&&(g=C,s.copy(v))}}return a.vsub(t,f),f.dot(s)>0&&s.negate(s),!0}testSepAxis(e,t,i,a,r,s){let c=this;Pe.project(c,e,i,a,M0),Pe.project(t,e,r,s,b0);let o=M0[0],l=M0[1],h=b0[0],f=b0[1];if(o<f||h<l)return!1;let u=o-f,m=h-l;return u<m?u:m}calculateLocalInertia(e,t){let i=new M,a=new M;this.computeLocalAABB(a,i);let r=i.x-a.x,s=i.y-a.y,c=i.z-a.z;t.x=1/12*e*(2*s*2*s+2*c*2*c),t.y=1/12*e*(2*r*2*r+2*c*2*c),t.z=1/12*e*(2*s*2*s+2*r*2*r)}getPlaneConstantOfFace(e){let t=this.faces[e],i=this.faceNormals[e],a=this.vertices[t[0]];return-i.dot(a)}clipFaceAgainstHull(e,t,i,a,r,s,c){let o=new M,l=new M,h=new M,f=new M,u=new M,m=new M,v=new M,g=new M,x=this,p=[],d=a,C=p,b=-1,A=Number.MAX_VALUE;for(let H=0;H<x.faces.length;H++){o.copy(x.faceNormals[H]),i.vmult(o,o);let S=o.dot(e);S<A&&(A=S,b=H)}if(b<0)return;let L=x.faces[b];L.connectedFaces=[];for(let H=0;H<x.faces.length;H++)for(let S=0;S<x.faces[H].length;S++)L.indexOf(x.faces[H][S])!==-1&&H!==b&&L.connectedFaces.indexOf(H)===-1&&L.connectedFaces.push(H);let y=L.length;for(let H=0;H<y;H++){let S=x.vertices[L[H]],G=x.vertices[L[(H+1)%y]];S.vsub(G,l),h.copy(l),i.vmult(h,h),t.vadd(h,h),f.copy(this.faceNormals[b]),i.vmult(f,f),t.vadd(f,f),h.cross(f,u),u.negate(u),m.copy(S),i.vmult(m,m),t.vadd(m,m);let _=L.connectedFaces[H];v.copy(this.faceNormals[_]);let V=this.getPlaneConstantOfFace(_);g.copy(v),i.vmult(g,g);let R=V-g.dot(t);for(this.clipFaceAgainstPlane(d,C,g,R);d.length;)d.shift();for(;C.length;)d.push(C.shift())}v.copy(this.faceNormals[b]);let z=this.getPlaneConstantOfFace(b);g.copy(v),i.vmult(g,g);let B=z-g.dot(t);for(let H=0;H<d.length;H++){let S=g.dot(d[H])+B;if(S<=r&&(console.log("clamped: depth="+S+" to minDist="+r),S=r),S<=s){let G=d[H];if(S<=1e-6){let _={point:G,normal:g,depth:S};c.push(_)}}}}clipFaceAgainstPlane(e,t,i,a){let r,s,c=e.length;if(c<2)return t;let o=e[e.length-1],l=e[0];r=i.dot(o)+a;for(let h=0;h<c;h++){if(l=e[h],s=i.dot(l)+a,r<0)if(s<0){let f=new M;f.copy(l),t.push(f)}else{let f=new M;o.lerp(l,r/(r-s),f),t.push(f)}else if(s<0){let f=new M;o.lerp(l,r/(r-s),f),t.push(f),t.push(l)}o=l,r=s}return t}computeWorldVertices(e,t){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new M);let i=this.vertices,a=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)t.vmult(i[r],a[r]),e.vadd(a[r],a[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(e,t){let i=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let a=0;a<this.vertices.length;a++){let r=i[a];r.x<e.x?e.x=r.x:r.x>t.x&&(t.x=r.x),r.y<e.y?e.y=r.y:r.y>t.y&&(t.y=r.y),r.z<e.z?e.z=r.z:r.z>t.z&&(t.z=r.z)}}computeWorldFaceNormals(e){let t=this.faceNormals.length;for(;this.worldFaceNormals.length<t;)this.worldFaceNormals.push(new M);let i=this.faceNormals,a=this.worldFaceNormals;for(let r=0;r!==t;r++)e.vmult(i[r],a[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let e=0,t=this.vertices;for(let i=0;i!==t.length;i++){let a=t[i].lengthSquared();a>e&&(e=a)}this.boundingSphereRadius=Math.sqrt(e)}calculateWorldAABB(e,t,i,a){let r=this.vertices,s,c,o,l,h,f,u=new M;for(let m=0;m<r.length;m++){u.copy(r[m]),t.vmult(u,u),e.vadd(u,u);let v=u;(s===void 0||v.x<s)&&(s=v.x),(l===void 0||v.x>l)&&(l=v.x),(c===void 0||v.y<c)&&(c=v.y),(h===void 0||v.y>h)&&(h=v.y),(o===void 0||v.z<o)&&(o=v.z),(f===void 0||v.z>f)&&(f=v.z)}i.set(s,c,o),a.set(l,h,f)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(e=new M){let t=this.vertices;for(let i=0;i<t.length;i++)e.vadd(t[i],e);return e.scale(1/t.length,e),e}transformAllPoints(e,t){let i=this.vertices.length,a=this.vertices;if(t){for(let r=0;r<i;r++){let s=a[r];t.vmult(s,s)}for(let r=0;r<this.faceNormals.length;r++){let s=this.faceNormals[r];t.vmult(s,s)}}if(e)for(let r=0;r<i;r++){let s=a[r];s.vadd(e,s)}}pointIsInside(e){let t=this.vertices,i=this.faces,a=this.faceNormals,r=new M;this.getAveragePointLocal(r);for(let s=0;s<this.faces.length;s++){let c=a[s],o=t[i[s][0]],l=new M;e.vsub(o,l);let h=c.dot(l),f=new M;r.vsub(o,f);let u=c.dot(f);if(h<0&&u>0||h>0&&u<0)return!1}return-1}static project(e,t,i,a,r){let s=e.vertices.length,c=t7,o=0,l=0,h=i7,f=e.vertices;h.setZero(),V1.vectorToLocalFrame(i,a,t,c),V1.pointToLocalFrame(i,a,h,h);let u=h.dot(c);l=o=f[0].dot(c);for(let m=1;m<s;m++){let v=f[m].dot(c);v>o&&(o=v),v<l&&(l=v)}if(l-=u,o-=u,l>o){let m=l;l=o,o=m}r[0]=o,r[1]=l}},M0=[],b0=[],t7=new M,i7=new M,jt=class extends n1{constructor(e){super({type:n1.types.BOX});this.halfExtents=void 0,this.convexPolyhedronRepresentation=void 0,this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){let e=this.halfExtents.x,t=this.halfExtents.y,i=this.halfExtents.z,a=M,r=[new a(-e,-t,-i),new a(e,-t,-i),new a(e,t,-i),new a(-e,t,-i),new a(-e,-t,i),new a(e,-t,i),new a(e,t,i),new a(-e,t,i)],s=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],c=[new a(0,0,1),new a(0,1,0),new a(1,0,0)],o=new Pe({vertices:r,faces:s,axes:c});this.convexPolyhedronRepresentation=o,o.material=this.material}calculateLocalInertia(e,t=new M){return jt.calculateInertia(this.halfExtents,e,t),t}static calculateInertia(e,t,i){let a=e;i.x=1/12*t*(2*a.y*2*a.y+2*a.z*2*a.z),i.y=1/12*t*(2*a.x*2*a.x+2*a.z*2*a.z),i.z=1/12*t*(2*a.y*2*a.y+2*a.x*2*a.x)}getSideNormals(e,t){let i=e,a=this.halfExtents;if(i[0].set(a.x,0,0),i[1].set(0,a.y,0),i[2].set(0,0,a.z),i[3].set(-a.x,0,0),i[4].set(0,-a.y,0),i[5].set(0,0,-a.z),t!==void 0)for(let r=0;r!==i.length;r++)t.vmult(i[r],i[r]);return i}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(e,t,i){let a=this.halfExtents,r=[[a.x,a.y,a.z],[-a.x,a.y,a.z],[-a.x,-a.y,a.z],[-a.x,-a.y,-a.z],[a.x,-a.y,-a.z],[a.x,a.y,-a.z],[-a.x,a.y,-a.z],[a.x,-a.y,a.z]];for(let s=0;s<r.length;s++)ke.set(r[s][0],r[s][1],r[s][2]),t.vmult(ke,ke),e.vadd(ke,ke),i(ke.x,ke.y,ke.z)}calculateWorldAABB(e,t,i,a){let r=this.halfExtents;K2[0].set(r.x,r.y,r.z),K2[1].set(-r.x,r.y,r.z),K2[2].set(-r.x,-r.y,r.z),K2[3].set(-r.x,-r.y,-r.z),K2[4].set(r.x,-r.y,-r.z),K2[5].set(r.x,r.y,-r.z),K2[6].set(-r.x,r.y,-r.z),K2[7].set(r.x,-r.y,r.z);let s=K2[0];t.vmult(s,s),e.vadd(s,s),a.copy(s),i.copy(s);for(let c=1;c<8;c++){let o=K2[c];t.vmult(o,o),e.vadd(o,o);let l=o.x,h=o.y,f=o.z;l>a.x&&(a.x=l),h>a.y&&(a.y=h),f>a.z&&(a.z=f),l<i.x&&(i.x=l),h<i.y&&(i.y=h),f<i.z&&(i.z=f)}}},ke=new M,K2=[new M,new M,new M,new M,new M,new M,new M,new M],y0={DYNAMIC:1,STATIC:2,KINEMATIC:4},C0={AWAKE:0,SLEEPY:1,SLEEPING:2},a1=class extends x0{constructor(e={}){super();this.id=void 0,this.index=void 0,this.world=void 0,this.preStep=void 0,this.postStep=void 0,this.vlambda=void 0,this.collisionFilterGroup=void 0,this.collisionFilterMask=void 0,this.collisionResponse=void 0,this.position=void 0,this.previousPosition=void 0,this.interpolatedPosition=void 0,this.initPosition=void 0,this.velocity=void 0,this.initVelocity=void 0,this.force=void 0,this.mass=void 0,this.invMass=void 0,this.material=void 0,this.linearDamping=void 0,this.type=void 0,this.allowSleep=void 0,this.sleepState=void 0,this.sleepSpeedLimit=void 0,this.sleepTimeLimit=void 0,this.timeLastSleepy=void 0,this.wakeUpAfterNarrowphase=void 0,this.torque=void 0,this.quaternion=void 0,this.initQuaternion=void 0,this.previousQuaternion=void 0,this.interpolatedQuaternion=void 0,this.angularVelocity=void 0,this.initAngularVelocity=void 0,this.shapes=void 0,this.shapeOffsets=void 0,this.shapeOrientations=void 0,this.inertia=void 0,this.invInertia=void 0,this.invInertiaWorld=void 0,this.invMassSolve=void 0,this.invInertiaSolve=void 0,this.invInertiaWorldSolve=void 0,this.fixedRotation=void 0,this.angularDamping=void 0,this.linearFactor=void 0,this.angularFactor=void 0,this.aabb=void 0,this.aabbNeedsUpdate=void 0,this.boundingRadius=void 0,this.wlambda=void 0,this.isTrigger=void 0,this.id=a1.idCounter++,this.index=-1,this.world=null,this.preStep=null,this.postStep=null,this.vlambda=new M,this.collisionFilterGroup=typeof e.collisionFilterGroup=="number"?e.collisionFilterGroup:1,this.collisionFilterMask=typeof e.collisionFilterMask=="number"?e.collisionFilterMask:-1,this.collisionResponse=typeof e.collisionResponse=="boolean"?e.collisionResponse:!0,this.position=new M,this.previousPosition=new M,this.interpolatedPosition=new M,this.initPosition=new M,e.position&&(this.position.copy(e.position),this.previousPosition.copy(e.position),this.interpolatedPosition.copy(e.position),this.initPosition.copy(e.position)),this.velocity=new M,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new M,this.force=new M;let t=typeof e.mass=="number"?e.mass:0;this.mass=t,this.invMass=t>0?1/t:0,this.material=e.material||null,this.linearDamping=typeof e.linearDamping=="number"?e.linearDamping:.01,this.type=t<=0?a1.STATIC:a1.DYNAMIC,typeof e.type==typeof a1.STATIC&&(this.type=e.type),this.allowSleep=typeof e.allowSleep!="undefined"?e.allowSleep:!0,this.sleepState=a1.AWAKE,this.sleepSpeedLimit=typeof e.sleepSpeedLimit!="undefined"?e.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof e.sleepTimeLimit!="undefined"?e.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new M,this.quaternion=new I1,this.initQuaternion=new I1,this.previousQuaternion=new I1,this.interpolatedQuaternion=new I1,e.quaternion&&(this.quaternion.copy(e.quaternion),this.initQuaternion.copy(e.quaternion),this.previousQuaternion.copy(e.quaternion),this.interpolatedQuaternion.copy(e.quaternion)),this.angularVelocity=new M,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new M,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new M,this.invInertia=new M,this.invInertiaWorld=new M2,this.invMassSolve=0,this.invInertiaSolve=new M,this.invInertiaWorldSolve=new M2,this.fixedRotation=typeof e.fixedRotation!="undefined"?e.fixedRotation:!1,this.angularDamping=typeof e.angularDamping!="undefined"?e.angularDamping:.01,this.linearFactor=new M(1,1,1),e.linearFactor&&this.linearFactor.copy(e.linearFactor),this.angularFactor=new M(1,1,1),e.angularFactor&&this.angularFactor.copy(e.angularFactor),this.aabb=new b2,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new M,this.isTrigger=Boolean(e.isTrigger),e.shape&&this.addShape(e.shape),this.updateMassProperties()}wakeUp(){let e=this.sleepState;this.sleepState=a1.AWAKE,this.wakeUpAfterNarrowphase=!1,e===a1.SLEEPING&&this.dispatchEvent(a1.wakeupEvent)}sleep(){this.sleepState=a1.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(e){if(this.allowSleep){let t=this.sleepState,i=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),a=this.sleepSpeedLimit**2;t===a1.AWAKE&&i<a?(this.sleepState=a1.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(a1.sleepyEvent)):t===a1.SLEEPY&&i>a?this.wakeUp():t===a1.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(a1.sleepEvent))}}updateSolveMassProperties(){this.sleepState===a1.SLEEPING||this.type===a1.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(e,t=new M){return e.vsub(this.position,t),this.quaternion.conjugate().vmult(t,t),t}vectorToLocalFrame(e,t=new M){return this.quaternion.conjugate().vmult(e,t),t}pointToWorldFrame(e,t=new M){return this.quaternion.vmult(e,t),t.vadd(this.position,t),t}vectorToWorldFrame(e,t=new M){return this.quaternion.vmult(e,t),t}addShape(e,t,i){let a=new M,r=new I1;return t&&a.copy(t),i&&r.copy(i),this.shapes.push(e),this.shapeOffsets.push(a),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=this,this}removeShape(e){let t=this.shapes.indexOf(e);return t===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(t,1),this.shapeOffsets.splice(t,1),this.shapeOrientations.splice(t,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=null,this)}updateBoundingRadius(){let e=this.shapes,t=this.shapeOffsets,i=e.length,a=0;for(let r=0;r!==i;r++){let s=e[r];s.updateBoundingSphereRadius();let c=t[r].length(),o=s.boundingSphereRadius;c+o>a&&(a=c+o)}this.boundingRadius=a}updateAABB(){let e=this.shapes,t=this.shapeOffsets,i=this.shapeOrientations,a=e.length,r=a7,s=r7,c=this.quaternion,o=this.aabb,l=n7;for(let h=0;h!==a;h++){let f=e[h];c.vmult(t[h],r),r.vadd(this.position,r),c.mult(i[h],s),f.calculateWorldAABB(r,s,l.lowerBound,l.upperBound),h===0?o.copy(l):o.extend(l)}this.aabbNeedsUpdate=!1}updateInertiaWorld(e){let t=this.invInertia;if(!(t.x===t.y&&t.y===t.z&&!e)){let i=s7,a=c7;i.setRotationFromQuaternion(this.quaternion),i.transpose(a),i.scale(t,i),i.mmult(a,this.invInertiaWorld)}}applyForce(e,t=new M){if(this.type!==a1.DYNAMIC)return;this.sleepState===a1.SLEEPING&&this.wakeUp();let i=o7;t.cross(e,i),this.force.vadd(e,this.force),this.torque.vadd(i,this.torque)}applyLocalForce(e,t=new M){if(this.type!==a1.DYNAMIC)return;let i=l7,a=u7;this.vectorToWorldFrame(e,i),this.vectorToWorldFrame(t,a),this.applyForce(i,a)}applyTorque(e){this.type===a1.DYNAMIC&&(this.sleepState===a1.SLEEPING&&this.wakeUp(),this.torque.vadd(e,this.torque))}applyImpulse(e,t=new M){if(this.type!==a1.DYNAMIC)return;this.sleepState===a1.SLEEPING&&this.wakeUp();let i=t,a=h7;a.copy(e),a.scale(this.invMass,a),this.velocity.vadd(a,this.velocity);let r=f7;i.cross(e,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}applyLocalImpulse(e,t=new M){if(this.type!==a1.DYNAMIC)return;let i=d7,a=p7;this.vectorToWorldFrame(e,i),this.vectorToWorldFrame(t,a),this.applyImpulse(i,a)}updateMassProperties(){let e=m7;this.invMass=this.mass>0?1/this.mass:0;let t=this.inertia,i=this.fixedRotation;this.updateAABB(),e.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),jt.calculateInertia(e,this.mass,t),this.invInertia.set(t.x>0&&!i?1/t.x:0,t.y>0&&!i?1/t.y:0,t.z>0&&!i?1/t.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(e,t){let i=new M;return e.vsub(this.position,i),this.angularVelocity.cross(i,t),this.velocity.vadd(t,t),t}integrate(e,t,i){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===a1.DYNAMIC||this.type===a1.KINEMATIC)||this.sleepState===a1.SLEEPING)return;let a=this.velocity,r=this.angularVelocity,s=this.position,c=this.force,o=this.torque,l=this.quaternion,h=this.invMass,f=this.invInertiaWorld,u=this.linearFactor,m=h*e;a.x+=c.x*m*u.x,a.y+=c.y*m*u.y,a.z+=c.z*m*u.z;let v=f.elements,g=this.angularFactor,x=o.x*g.x,p=o.y*g.y,d=o.z*g.z;r.x+=e*(v[0]*x+v[1]*p+v[2]*d),r.y+=e*(v[3]*x+v[4]*p+v[5]*d),r.z+=e*(v[6]*x+v[7]*p+v[8]*d),s.x+=a.x*e,s.y+=a.y*e,s.z+=a.z*e,l.integrate(this.angularVelocity,e,this.angularFactor,l),t&&(i?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}};a1.idCounter=0;a1.COLLIDE_EVENT_NAME="collide";a1.DYNAMIC=y0.DYNAMIC;a1.STATIC=y0.STATIC;a1.KINEMATIC=y0.KINEMATIC;a1.AWAKE=C0.AWAKE;a1.SLEEPY=C0.SLEEPY;a1.SLEEPING=C0.SLEEPING;a1.wakeupEvent={type:"wakeup"};a1.sleepyEvent={type:"sleepy"};a1.sleepEvent={type:"sleep"};var a7=new M,r7=new I1,n7=new b2,s7=new M2,c7=new M2,o7=new M,l7=new M,u7=new M,h7=new M,f7=new M,d7=new M,p7=new M,m7=new M,ca=class{constructor(){this.world=void 0,this.useBoundingBoxes=void 0,this.dirty=void 0,this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(e,t,i){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(e,t){return!((e.collisionFilterGroup&t.collisionFilterMask)==0||(t.collisionFilterGroup&e.collisionFilterMask)==0||((e.type&a1.STATIC)!=0||e.sleepState===a1.SLEEPING)&&((t.type&a1.STATIC)!=0||t.sleepState===a1.SLEEPING))}intersectionTest(e,t,i,a){this.useBoundingBoxes?this.doBoundingBoxBroadphase(e,t,i,a):this.doBoundingSphereBroadphase(e,t,i,a)}doBoundingSphereBroadphase(e,t,i,a){let r=v7;t.position.vsub(e.position,r);let s=(e.boundingRadius+t.boundingRadius)**2;r.lengthSquared()<s&&(i.push(e),a.push(t))}doBoundingBoxBroadphase(e,t,i,a){e.aabbNeedsUpdate&&e.updateAABB(),t.aabbNeedsUpdate&&t.updateAABB(),e.aabb.overlaps(t.aabb)&&(i.push(e),a.push(t))}makePairsUnique(e,t){let i=g7,a=x7,r=M7,s=e.length;for(let c=0;c!==s;c++)a[c]=e[c],r[c]=t[c];e.length=0,t.length=0;for(let c=0;c!==s;c++){let o=a[c].id,l=r[c].id,h=o<l?o+","+l:l+","+o;i[h]=c,i.keys.push(h)}for(let c=0;c!==i.keys.length;c++){let o=i.keys.pop(),l=i[o];e.push(a[l]),t.push(r[l]),delete i[o]}}setWorld(e){}static boundingSphereCheck(e,t){let i=new M;e.position.vsub(t.position,i);let a=e.shapes[0],r=t.shapes[0];return Math.pow(a.boundingSphereRadius+r.boundingSphereRadius,2)>i.lengthSquared()}aabbQuery(e,t,i){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}},v7=new M,g7={keys:[]},x7=[],M7=[];var Xh=new M,Xt=class extends ca{constructor(){super()}collisionPairs(e,t,i){let a=e.bodies,r=a.length,s,c;for(let o=0;o!==r;o++)for(let l=0;l!==o;l++)s=a[o],c=a[l],!!this.needBroadphaseCollision(s,c)&&this.intersectionTest(s,c,t,i)}aabbQuery(e,t,i=[]){for(let a=0;a<e.bodies.length;a++){let r=e.bodies[a];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(t)&&i.push(r)}return i}},Zt=class{constructor(){this.rayFromWorld=void 0,this.rayToWorld=void 0,this.hitNormalWorld=void 0,this.hitPointWorld=void 0,this.hasHit=void 0,this.shape=void 0,this.body=void 0,this.hitFaceIndex=void 0,this.distance=void 0,this.shouldStop=void 0,this.rayFromWorld=new M,this.rayToWorld=new M,this.hitNormalWorld=new M,this.hitPointWorld=new M,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(e,t,i,a,r,s,c){this.rayFromWorld.copy(e),this.rayToWorld.copy(t),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(a),this.shape=r,this.body=s,this.distance=c}},oa,la,ua,ha,fa,da,pa,z0={CLOSEST:1,ANY:2,ALL:4};oa=n1.types.SPHERE;la=n1.types.PLANE;ua=n1.types.BOX;ha=n1.types.CYLINDER;fa=n1.types.CONVEXPOLYHEDRON;da=n1.types.HEIGHTFIELD;pa=n1.types.TRIMESH;var W1=class{get[oa](){return this._intersectSphere}get[la](){return this._intersectPlane}get[ua](){return this._intersectBox}get[ha](){return this._intersectConvex}get[fa](){return this._intersectConvex}get[da](){return this._intersectHeightfield}get[pa](){return this._intersectTrimesh}constructor(e=new M,t=new M){this.from=void 0,this.to=void 0,this.direction=void 0,this.precision=void 0,this.checkCollisionResponse=void 0,this.skipBackfaces=void 0,this.collisionFilterMask=void 0,this.collisionFilterGroup=void 0,this.mode=void 0,this.result=void 0,this.hasHit=void 0,this.callback=void 0,this.from=e.clone(),this.to=t.clone(),this.direction=new M,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=W1.ANY,this.result=new Zt,this.hasHit=!1,this.callback=i=>{}}intersectWorld(e,t){return this.mode=t.mode||W1.ANY,this.result=t.result||new Zt,this.skipBackfaces=!!t.skipBackfaces,this.collisionFilterMask=typeof t.collisionFilterMask!="undefined"?t.collisionFilterMask:-1,this.collisionFilterGroup=typeof t.collisionFilterGroup!="undefined"?t.collisionFilterGroup:-1,this.checkCollisionResponse=typeof t.checkCollisionResponse!="undefined"?t.checkCollisionResponse:!0,t.from&&this.from.copy(t.from),t.to&&this.to.copy(t.to),this.callback=t.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(ma),A0.length=0,e.broadphase.aabbQuery(e,ma,A0),this.intersectBodies(A0),this.hasHit}intersectBody(e,t){t&&(this.result=t,this.updateDirection());let i=this.checkCollisionResponse;if(i&&!e.collisionResponse||(this.collisionFilterGroup&e.collisionFilterMask)==0||(e.collisionFilterGroup&this.collisionFilterMask)==0)return;let a=b7,r=y7;for(let s=0,c=e.shapes.length;s<c;s++){let o=e.shapes[s];if(!(i&&!o.collisionResponse)&&(e.quaternion.mult(e.shapeOrientations[s],r),e.quaternion.vmult(e.shapeOffsets[s],a),a.vadd(e.position,a),this.intersectShape(o,r,a,e),this.result.shouldStop))break}}intersectBodies(e,t){t&&(this.result=t,this.updateDirection());for(let i=0,a=e.length;!this.result.shouldStop&&i<a;i++)this.intersectBody(e[i])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(e,t,i,a){let r=this.from;if(F7(r,this.direction,i)>e.boundingSphereRadius)return;let c=this[e.type];c&&c.call(this,e,t,i,a,e)}_intersectBox(e,t,i,a,r){return this._intersectConvex(e.convexPolyhedronRepresentation,t,i,a,r)}_intersectPlane(e,t,i,a,r){let s=this.from,c=this.to,o=this.direction,l=new M(0,0,1);t.vmult(l,l);let h=new M;s.vsub(i,h);let f=h.dot(l);c.vsub(i,h);let u=h.dot(l);if(f*u>0||s.distanceTo(c)<f)return;let m=l.dot(o);if(Math.abs(m)<this.precision)return;let v=new M,g=new M,x=new M;s.vsub(i,v);let p=-l.dot(v)/m;o.scale(p,g),s.vadd(g,x),this.reportIntersection(l,x,r,a,-1)}getAABB(e){let{lowerBound:t,upperBound:i}=e,a=this.to,r=this.from;t.x=Math.min(a.x,r.x),t.y=Math.min(a.y,r.y),t.z=Math.min(a.z,r.z),i.x=Math.max(a.x,r.x),i.y=Math.max(a.y,r.y),i.z=Math.max(a.z,r.z)}_intersectHeightfield(e,t,i,a,r){e.data,e.elementSize;let s=C7;s.from.copy(this.from),s.to.copy(this.to),V1.pointToLocalFrame(i,t,s.from,s.from),V1.pointToLocalFrame(i,t,s.to,s.to),s.updateDirection();let c=z7,o,l,h,f;o=l=0,h=f=e.data.length-1;let u=new b2;s.getAABB(u),e.getIndexOfPosition(u.lowerBound.x,u.lowerBound.y,c,!0),o=Math.max(o,c[0]),l=Math.max(l,c[1]),e.getIndexOfPosition(u.upperBound.x,u.upperBound.y,c,!0),h=Math.min(h,c[0]+1),f=Math.min(f,c[1]+1);for(let m=o;m<h;m++)for(let v=l;v<f;v++){if(this.result.shouldStop)return;if(e.getAabbAtIndex(m,v,u),!!u.overlapsRay(s)){if(e.getConvexTrianglePillar(m,v,!1),V1.pointToWorldFrame(i,t,e.pillarOffset,Yt),this._intersectConvex(e.pillarConvex,t,Yt,a,r,va),this.result.shouldStop)return;e.getConvexTrianglePillar(m,v,!0),V1.pointToWorldFrame(i,t,e.pillarOffset,Yt),this._intersectConvex(e.pillarConvex,t,Yt,a,r,va)}}}_intersectSphere(e,t,i,a,r){let s=this.from,c=this.to,o=e.radius,l=(c.x-s.x)**2+(c.y-s.y)**2+(c.z-s.z)**2,h=2*((c.x-s.x)*(s.x-i.x)+(c.y-s.y)*(s.y-i.y)+(c.z-s.z)*(s.z-i.z)),f=(s.x-i.x)**2+(s.y-i.y)**2+(s.z-i.z)**2-o**2,u=h**2-4*l*f,m=A7,v=w7;if(!(u<0))if(u===0)s.lerp(c,u,m),m.vsub(i,v),v.normalize(),this.reportIntersection(v,m,r,a,-1);else{let g=(-h-Math.sqrt(u))/(2*l),x=(-h+Math.sqrt(u))/(2*l);if(g>=0&&g<=1&&(s.lerp(c,g,m),m.vsub(i,v),v.normalize(),this.reportIntersection(v,m,r,a,-1)),this.result.shouldStop)return;x>=0&&x<=1&&(s.lerp(c,x,m),m.vsub(i,v),v.normalize(),this.reportIntersection(v,m,r,a,-1))}}_intersectConvex(e,t,i,a,r,s){let c=_7,o=ga,l=s&&s.faceList||null,h=e.faces,f=e.vertices,u=e.faceNormals,m=this.direction,v=this.from,g=this.to,x=v.distanceTo(g),p=l?l.length:h.length,d=this.result;for(let C=0;!d.shouldStop&&C<p;C++){let b=l?l[C]:C,A=h[b],L=u[b],y=t,z=i;o.copy(f[A[0]]),y.vmult(o,o),o.vadd(z,o),o.vsub(v,o),y.vmult(L,c);let B=m.dot(c);if(Math.abs(B)<this.precision)continue;let H=c.dot(o)/B;if(!(H<0)){m.scale(H,y2),y2.vadd(v,y2),P2.copy(f[A[0]]),y.vmult(P2,P2),z.vadd(P2,P2);for(let S=1;!d.shouldStop&&S<A.length-1;S++){J2.copy(f[A[S]]),Q2.copy(f[A[S+1]]),y.vmult(J2,J2),y.vmult(Q2,Q2),z.vadd(J2,J2),z.vadd(Q2,Q2);let G=y2.distanceTo(v);!(W1.pointInTriangle(y2,P2,J2,Q2)||W1.pointInTriangle(y2,J2,P2,Q2))||G>x||this.reportIntersection(c,y2,r,a,b)}}}}_intersectTrimesh(e,t,i,a,r,s){let c=S7,o=V7,l=N7,h=ga,f=L7,u=E7,m=D7,v=H7,g=T7,x=e.indices;e.vertices;let p=this.from,d=this.to,C=this.direction;l.position.copy(i),l.quaternion.copy(t),V1.vectorToLocalFrame(i,t,C,f),V1.pointToLocalFrame(i,t,p,u),V1.pointToLocalFrame(i,t,d,m),m.x*=e.scale.x,m.y*=e.scale.y,m.z*=e.scale.z,u.x*=e.scale.x,u.y*=e.scale.y,u.z*=e.scale.z,m.vsub(u,f),f.normalize();let b=u.distanceSquared(m);e.tree.rayQuery(this,l,o);for(let A=0,L=o.length;!this.result.shouldStop&&A!==L;A++){let y=o[A];e.getNormal(y,c),e.getVertex(x[y*3],P2),P2.vsub(u,h);let z=f.dot(c),B=c.dot(h)/z;if(B<0)continue;f.scale(B,y2),y2.vadd(u,y2),e.getVertex(x[y*3+1],J2),e.getVertex(x[y*3+2],Q2);let H=y2.distanceSquared(u);!(W1.pointInTriangle(y2,J2,P2,Q2)||W1.pointInTriangle(y2,P2,J2,Q2))||H>b||(V1.vectorToWorldFrame(t,c,g),V1.pointToWorldFrame(i,t,y2,v),this.reportIntersection(g,v,r,a,y))}o.length=0}reportIntersection(e,t,i,a,r){let s=this.from,c=this.to,o=s.distanceTo(t),l=this.result;if(!(this.skipBackfaces&&e.dot(this.direction)>0))switch(l.hitFaceIndex=typeof r!="undefined"?r:-1,this.mode){case W1.ALL:this.hasHit=!0,l.set(s,c,e,t,i,a,o),l.hasHit=!0,this.callback(l);break;case W1.CLOSEST:(o<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(s,c,e,t,i,a,o));break;case W1.ANY:this.hasHit=!0,l.hasHit=!0,l.set(s,c,e,t,i,a,o),l.shouldStop=!0;break}}static pointInTriangle(e,t,i,a){a.vsub(t,c4),i.vsub(t,rt),e.vsub(t,w0);let r=c4.dot(c4),s=c4.dot(rt),c=c4.dot(w0),o=rt.dot(rt),l=rt.dot(w0),h,f;return(h=o*c-s*l)>=0&&(f=r*l-s*c)>=0&&h+f<r*o-s*s}};W1.CLOSEST=z0.CLOSEST;W1.ANY=z0.ANY;W1.ALL=z0.ALL;var ma=new b2,A0=[],rt=new M,w0=new M,b7=new M,y7=new I1,y2=new M,P2=new M,J2=new M,Q2=new M,va={faceList:[0]},Yt=new M,C7=new W1,z7=[],A7=new M,w7=new M,_7=new M,ga=new M,S7=new M,L7=new M,E7=new M,D7=new M,T7=new M,H7=new M;new b2;var V7=[],N7=new V1,c4=new M,$t=new M;function F7(n,e,t){t.vsub(n,c4);let i=c4.dot(e);return e.scale(i,$t),$t.vadd(n,$t),t.distanceTo($t)}var _0=class{static defaults(e={},t){for(let i in t)i in e||(e[i]=t[i]);return e}},Kt=class{constructor(e,t,i={}){this.equations=void 0,this.bodyA=void 0,this.bodyB=void 0,this.id=void 0,this.collideConnected=void 0,i=_0.defaults(i,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=e,this.bodyB=t,this.id=Kt.idCounter++,this.collideConnected=i.collideConnected,i.wakeUpBodies&&(e&&e.wakeUp(),t&&t.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){let e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!0}disable(){let e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!1}};Kt.idCounter=0;var S0=class{constructor(){this.spatial=void 0,this.rotational=void 0,this.spatial=new M,this.rotational=new M}multiplyElement(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)}multiplyVectors(e,t){return e.dot(this.spatial)+t.dot(this.rotational)}},A4=class{constructor(e,t,i=-1e6,a=1e6){this.id=void 0,this.minForce=void 0,this.maxForce=void 0,this.bi=void 0,this.bj=void 0,this.si=void 0,this.sj=void 0,this.a=void 0,this.b=void 0,this.eps=void 0,this.jacobianElementA=void 0,this.jacobianElementB=void 0,this.enabled=void 0,this.multiplier=void 0,this.id=A4.idCounter++,this.minForce=i,this.maxForce=a,this.bi=e,this.bj=t,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new S0,this.jacobianElementB=new S0,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(e,t,i){let a=t,r=e,s=i;this.a=4/(s*(1+4*a)),this.b=4*a/(1+4*a),this.eps=4/(s*s*r*(1+4*a))}computeB(e,t,i){let a=this.computeGW(),r=this.computeGq(),s=this.computeGiMf();return-r*e-a*t-s*i}computeGq(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,a=this.bj,r=i.position,s=a.position;return e.spatial.dot(r)+t.spatial.dot(s)}computeGW(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,a=this.bj,r=i.velocity,s=a.velocity,c=i.angularVelocity,o=a.angularVelocity;return e.multiplyVectors(r,c)+t.multiplyVectors(s,o)}computeGWlambda(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,a=this.bj,r=i.vlambda,s=a.vlambda,c=i.wlambda,o=a.wlambda;return e.multiplyVectors(r,c)+t.multiplyVectors(s,o)}computeGiMf(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,a=this.bj,r=i.force,s=i.torque,c=a.force,o=a.torque,l=i.invMassSolve,h=a.invMassSolve;return r.scale(l,xa),c.scale(h,Ma),i.invInertiaWorldSolve.vmult(s,ba),a.invInertiaWorldSolve.vmult(o,ya),e.multiplyVectors(xa,ba)+t.multiplyVectors(Ma,ya)}computeGiMGt(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,a=this.bj,r=i.invMassSolve,s=a.invMassSolve,c=i.invInertiaWorldSolve,o=a.invInertiaWorldSolve,l=r+s;return c.vmult(e.rotational,Jt),l+=Jt.dot(e.rotational),o.vmult(t.rotational,Jt),l+=Jt.dot(t.rotational),l}addToWlambda(e){let t=this.jacobianElementA,i=this.jacobianElementB,a=this.bi,r=this.bj,s=R7;a.vlambda.addScaledVector(a.invMassSolve*e,t.spatial,a.vlambda),r.vlambda.addScaledVector(r.invMassSolve*e,i.spatial,r.vlambda),a.invInertiaWorldSolve.vmult(t.rotational,s),a.wlambda.addScaledVector(e,s,a.wlambda),r.invInertiaWorldSolve.vmult(i.rotational,s),r.wlambda.addScaledVector(e,s,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}};A4.idCounter=0;var xa=new M,Ma=new M,ba=new M,ya=new M,Jt=new M,R7=new M,Ca=class extends A4{constructor(e,t,i=1e6){super(e,t,0,i);this.restitution=void 0,this.ri=void 0,this.rj=void 0,this.ni=void 0,this.restitution=0,this.ri=new M,this.rj=new M,this.ni=new M}computeB(e){let t=this.a,i=this.b,a=this.bi,r=this.bj,s=this.ri,c=this.rj,o=B7,l=P7,h=a.velocity,f=a.angularVelocity;a.force,a.torque;let u=r.velocity,m=r.angularVelocity;r.force,r.torque;let v=k7,g=this.jacobianElementA,x=this.jacobianElementB,p=this.ni;s.cross(p,o),c.cross(p,l),p.negate(g.spatial),o.negate(g.rotational),x.spatial.copy(p),x.rotational.copy(l),v.copy(r.position),v.vadd(c,v),v.vsub(a.position,v),v.vsub(s,v);let d=p.dot(v),C=this.restitution+1,b=C*u.dot(p)-C*h.dot(p)+m.dot(l)-f.dot(o),A=this.computeGiMf();return-d*t-b*i-e*A}getImpactVelocityAlongNormal(){let e=I7,t=U7,i=O7,a=G7,r=q7;return this.bi.position.vadd(this.ri,i),this.bj.position.vadd(this.rj,a),this.bi.getVelocityAtWorldPoint(i,e),this.bj.getVelocityAtWorldPoint(a,t),e.vsub(t,r),this.ni.dot(r)}},B7=new M,P7=new M,k7=new M,I7=new M,U7=new M,O7=new M,G7=new M,q7=new M;var Zh=new M,Yh=new M;var $h=new M,Kh=new M;var Jh=new M,Qh=new M,L0=class extends A4{constructor(e,t,i){super(e,t,-i,i);this.ri=void 0,this.rj=void 0,this.t=void 0,this.ri=new M,this.rj=new M,this.t=new M}computeB(e){this.a;let t=this.b;this.bi,this.bj;let i=this.ri,a=this.rj,r=W7,s=j7,c=this.t;i.cross(c,r),a.cross(c,s);let o=this.jacobianElementA,l=this.jacobianElementB;c.negate(o.spatial),r.negate(o.rotational),l.spatial.copy(c),l.rotational.copy(s);let h=this.computeGW(),f=this.computeGiMf();return-h*t-e*f}},W7=new M,j7=new M,me=class{constructor(e,t,i){this.id=void 0,this.materials=void 0,this.friction=void 0,this.restitution=void 0,this.contactEquationStiffness=void 0,this.contactEquationRelaxation=void 0,this.frictionEquationStiffness=void 0,this.frictionEquationRelaxation=void 0,i=_0.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=me.idCounter++,this.materials=[e,t],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}};me.idCounter=0;var ve=class{constructor(e={}){this.name=void 0,this.id=void 0,this.friction=void 0,this.restitution=void 0;let t="";typeof e=="string"&&(t=e,e={}),this.name=t,this.id=ve.idCounter++,this.friction=typeof e.friction!="undefined"?e.friction:-1,this.restitution=typeof e.restitution!="undefined"?e.restitution:-1}};ve.idCounter=0;var ef=new M,tf=new M,af=new M,rf=new M,nf=new M,sf=new M,cf=new M,of=new M,lf=new M,uf=new M,hf=new M;var ff=new M,df=new M;var pf=new M,mf=new M,vf=new M;new W1;var gf=new M,xf=new M,Mf=[new M(1,0,0),new M(0,1,0),new M(0,0,1)],bf=new M;var yf=new M,Cf=new M,zf=new M;var Af=new M,wf=new M,_f=new M,Sf=new M;var Lf=new M,Ef=new M,Df=new M;var Tf=new M,Hf=new M;var Vf=new M,Nf=new M,Ff=new M,Rf=new M,Bf=new M,Pf=new M,kf=new M;var Ie=class extends n1{constructor(){super({type:n1.types.PLANE});this.worldNormal=void 0,this.worldNormalNeedsUpdate=void 0,this.boundingSphereRadius=void 0,this.worldNormal=new M,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(e){let t=this.worldNormal;t.set(0,0,1),e.vmult(t,t),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(e,t=new M){return t}volume(){return Number.MAX_VALUE}calculateWorldAABB(e,t,i,a){ge.set(0,0,1),t.vmult(ge,ge);let r=Number.MAX_VALUE;i.set(-r,-r,-r),a.set(r,r,r),ge.x===1?a.x=e.x:ge.x===-1&&(i.x=e.x),ge.y===1?a.y=e.y:ge.y===-1&&(i.y=e.y),ge.z===1?a.z=e.z:ge.z===-1&&(i.z=e.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}},ge=new M;var If=new M,Uf=new M,Of=new M,Gf=new M,qf=new M,Wf=new M,jf=new M,Xf=new M,Zf=new M;var Yf=new M,$f=new b2;var Kf=new M,Jf=new b2,Qf=new M,ed=new M,td=new M,id=new M,ad=new M,rd=new M,nd=new M,sd=new b2,cd=new M,od=new V1,ld=new b2,za=class{constructor(){this.equations=void 0,this.equations=[]}solve(e,t){return 0}addEquation(e){e.enabled&&!e.bi.isTrigger&&!e.bj.isTrigger&&this.equations.push(e)}removeEquation(e){let t=this.equations,i=t.indexOf(e);i!==-1&&t.splice(i,1)}removeAllEquations(){this.equations.length=0}},Aa=class extends za{constructor(){super();this.iterations=void 0,this.tolerance=void 0,this.iterations=10,this.tolerance=1e-7}solve(e,t){let i=0,a=this.iterations,r=this.tolerance*this.tolerance,s=this.equations,c=s.length,o=t.bodies,l=o.length,h=e,f,u,m,v,g,x;if(c!==0)for(let b=0;b!==l;b++)o[b].updateSolveMassProperties();let p=Z7,d=Y7,C=X7;p.length=c,d.length=c,C.length=c;for(let b=0;b!==c;b++){let A=s[b];C[b]=0,d[b]=A.computeB(h),p[b]=1/A.computeC()}if(c!==0){for(let L=0;L!==l;L++){let y=o[L],z=y.vlambda,B=y.wlambda;z.set(0,0,0),B.set(0,0,0)}for(i=0;i!==a;i++){v=0;for(let L=0;L!==c;L++){let y=s[L];f=d[L],u=p[L],x=C[L],g=y.computeGWlambda(),m=u*(f-g-y.eps*x),x+m<y.minForce?m=y.minForce-x:x+m>y.maxForce&&(m=y.maxForce-x),C[L]+=m,v+=m>0?m:-m,y.addToWlambda(m)}if(v*v<r)break}for(let L=0;L!==l;L++){let y=o[L],z=y.velocity,B=y.angularVelocity;y.vlambda.vmul(y.linearFactor,y.vlambda),z.vadd(y.vlambda,z),y.wlambda.vmul(y.angularFactor,y.wlambda),B.vadd(y.wlambda,B)}let b=s.length,A=1/h;for(;b--;)s[b].multiplier=C[b]*A}return i}},X7=[],Z7=[],Y7=[];var ud=a1.STATIC;var wa=class{constructor(){this.objects=[],this.type=Object}release(...e){let t=e.length;for(let i=0;i!==t;i++)this.objects.push(e[i]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(e){let t=this.objects;for(;t.length>e;)t.pop();for(;t.length<e;)t.push(this.constructObject());return this}},_a=class extends wa{constructor(...e){super(...e);this.type=M}constructObject(){return new M}},Sa,La,Ea,Da,Ta,Ha,Va,Na,Fa,Ra,Ba,Pa,ka,Ia,Ua,Oa,Ga,qa,Wa,ja,Xa,Za,Ya,$a,Ka,U1={sphereSphere:n1.types.SPHERE,spherePlane:n1.types.SPHERE|n1.types.PLANE,boxBox:n1.types.BOX|n1.types.BOX,sphereBox:n1.types.SPHERE|n1.types.BOX,planeBox:n1.types.PLANE|n1.types.BOX,convexConvex:n1.types.CONVEXPOLYHEDRON,sphereConvex:n1.types.SPHERE|n1.types.CONVEXPOLYHEDRON,planeConvex:n1.types.PLANE|n1.types.CONVEXPOLYHEDRON,boxConvex:n1.types.BOX|n1.types.CONVEXPOLYHEDRON,sphereHeightfield:n1.types.SPHERE|n1.types.HEIGHTFIELD,boxHeightfield:n1.types.BOX|n1.types.HEIGHTFIELD,convexHeightfield:n1.types.CONVEXPOLYHEDRON|n1.types.HEIGHTFIELD,sphereParticle:n1.types.PARTICLE|n1.types.SPHERE,planeParticle:n1.types.PLANE|n1.types.PARTICLE,boxParticle:n1.types.BOX|n1.types.PARTICLE,convexParticle:n1.types.PARTICLE|n1.types.CONVEXPOLYHEDRON,cylinderCylinder:n1.types.CYLINDER,sphereCylinder:n1.types.SPHERE|n1.types.CYLINDER,planeCylinder:n1.types.PLANE|n1.types.CYLINDER,boxCylinder:n1.types.BOX|n1.types.CYLINDER,convexCylinder:n1.types.CONVEXPOLYHEDRON|n1.types.CYLINDER,heightfieldCylinder:n1.types.HEIGHTFIELD|n1.types.CYLINDER,particleCylinder:n1.types.PARTICLE|n1.types.CYLINDER,sphereTrimesh:n1.types.SPHERE|n1.types.TRIMESH,planeTrimesh:n1.types.PLANE|n1.types.TRIMESH};Sa=U1.sphereSphere;La=U1.spherePlane;Ea=U1.boxBox;Da=U1.sphereBox;Ta=U1.planeBox;Ha=U1.convexConvex;Va=U1.sphereConvex;Na=U1.planeConvex;Fa=U1.boxConvex;Ra=U1.sphereHeightfield;Ba=U1.boxHeightfield;Pa=U1.convexHeightfield;ka=U1.sphereParticle;Ia=U1.planeParticle;Ua=U1.boxParticle;Oa=U1.convexParticle;Ga=U1.cylinderCylinder;qa=U1.sphereCylinder;Wa=U1.planeCylinder;ja=U1.boxCylinder;Xa=U1.convexCylinder;Za=U1.heightfieldCylinder;Ya=U1.particleCylinder;$a=U1.sphereTrimesh;Ka=U1.planeTrimesh;var Ja=class{get[Sa](){return this.sphereSphere}get[La](){return this.spherePlane}get[Ea](){return this.boxBox}get[Da](){return this.sphereBox}get[Ta](){return this.planeBox}get[Ha](){return this.convexConvex}get[Va](){return this.sphereConvex}get[Na](){return this.planeConvex}get[Fa](){return this.boxConvex}get[Ra](){return this.sphereHeightfield}get[Ba](){return this.boxHeightfield}get[Pa](){return this.convexHeightfield}get[ka](){return this.sphereParticle}get[Ia](){return this.planeParticle}get[Ua](){return this.boxParticle}get[Oa](){return this.convexParticle}get[Ga](){return this.convexConvex}get[qa](){return this.sphereConvex}get[Wa](){return this.planeConvex}get[ja](){return this.boxConvex}get[Xa](){return this.convexConvex}get[Za](){return this.heightfieldCylinder}get[Ya](){return this.particleCylinder}get[$a](){return this.sphereTrimesh}get[Ka](){return this.planeTrimesh}constructor(e){this.contactPointPool=void 0,this.frictionEquationPool=void 0,this.result=void 0,this.frictionResult=void 0,this.v3pool=void 0,this.world=void 0,this.currentContactMaterial=void 0,this.enableFrictionReduction=void 0,this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new _a,this.world=e,this.currentContactMaterial=e.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(e,t,i,a,r,s){let c;this.contactPointPool.length?(c=this.contactPointPool.pop(),c.bi=e,c.bj=t):c=new Ca(e,t),c.enabled=e.collisionResponse&&t.collisionResponse&&i.collisionResponse&&a.collisionResponse;let o=this.currentContactMaterial;c.restitution=o.restitution,c.setSpookParams(o.contactEquationStiffness,o.contactEquationRelaxation,this.world.dt);let l=i.material||e.material,h=a.material||t.material;return l&&h&&l.restitution>=0&&h.restitution>=0&&(c.restitution=l.restitution*h.restitution),c.si=r||i,c.sj=s||a,c}createFrictionEquationsFromContact(e,t){let i=e.bi,a=e.bj,r=e.si,s=e.sj,c=this.world,o=this.currentContactMaterial,l=o.friction,h=r.material||i.material,f=s.material||a.material;if(h&&f&&h.friction>=0&&f.friction>=0&&(l=h.friction*f.friction),l>0){let u=l*c.gravity.length(),m=i.invMass+a.invMass;m>0&&(m=1/m);let v=this.frictionEquationPool,g=v.length?v.pop():new L0(i,a,u*m),x=v.length?v.pop():new L0(i,a,u*m);return g.bi=x.bi=i,g.bj=x.bj=a,g.minForce=x.minForce=-u*m,g.maxForce=x.maxForce=u*m,g.ri.copy(e.ri),g.rj.copy(e.rj),x.ri.copy(e.ri),x.rj.copy(e.rj),e.ni.tangents(g.t,x.t),g.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,c.dt),x.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,c.dt),g.enabled=x.enabled=e.enabled,t.push(g,x),!0}return!1}createFrictionFromAverage(e){let t=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(t,this.frictionResult)||e===1)return;let i=this.frictionResult[this.frictionResult.length-2],a=this.frictionResult[this.frictionResult.length-1];o4.setZero(),w4.setZero(),_4.setZero();let r=t.bi;t.bj;for(let c=0;c!==e;c++)t=this.result[this.result.length-1-c],t.bi!==r?(o4.vadd(t.ni,o4),w4.vadd(t.ri,w4),_4.vadd(t.rj,_4)):(o4.vsub(t.ni,o4),w4.vadd(t.rj,w4),_4.vadd(t.ri,_4));let s=1/e;w4.scale(s,i.ri),_4.scale(s,i.rj),a.ri.copy(i.ri),a.rj.copy(i.rj),o4.normalize(),o4.tangents(i.t,a.t)}getContacts(e,t,i,a,r,s,c){this.contactPointPool=r,this.frictionEquationPool=c,this.result=a,this.frictionResult=s;let o=J7,l=Q7,h=$7,f=K7;for(let u=0,m=e.length;u!==m;u++){let v=e[u],g=t[u],x=null;v.material&&g.material&&(x=i.getContactMaterial(v.material,g.material)||null);let p=v.type&a1.KINEMATIC&&g.type&a1.STATIC||v.type&a1.STATIC&&g.type&a1.KINEMATIC||v.type&a1.KINEMATIC&&g.type&a1.KINEMATIC;for(let d=0;d<v.shapes.length;d++){v.quaternion.mult(v.shapeOrientations[d],o),v.quaternion.vmult(v.shapeOffsets[d],h),h.vadd(v.position,h);let C=v.shapes[d];for(let b=0;b<g.shapes.length;b++){g.quaternion.mult(g.shapeOrientations[b],l),g.quaternion.vmult(g.shapeOffsets[b],f),f.vadd(g.position,f);let A=g.shapes[b];if(!(C.collisionFilterMask&A.collisionFilterGroup&&A.collisionFilterMask&C.collisionFilterGroup)||h.distanceTo(f)>C.boundingSphereRadius+A.boundingSphereRadius)continue;let L=null;C.material&&A.material&&(L=i.getContactMaterial(C.material,A.material)||null),this.currentContactMaterial=L||x||i.defaultContactMaterial;let y=C.type|A.type,z=this[y];if(z){let B=!1;C.type<A.type?B=z.call(this,C,A,h,f,o,l,v,g,C,A,p):B=z.call(this,A,C,f,h,l,o,g,v,C,A,p),B&&p&&(i.shapeOverlapKeeper.set(C.id,A.id),i.bodyOverlapKeeper.set(v.id,g.id))}}}}}sphereSphere(e,t,i,a,r,s,c,o,l,h,f){if(f)return i.distanceSquared(a)<(e.radius+t.radius)**2;let u=this.createContactEquation(c,o,e,t,l,h);a.vsub(i,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.scale(e.radius,u.ri),u.rj.scale(-t.radius,u.rj),u.ri.vadd(i,u.ri),u.ri.vsub(c.position,u.ri),u.rj.vadd(a,u.rj),u.rj.vsub(o.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}spherePlane(e,t,i,a,r,s,c,o,l,h,f){let u=this.createContactEquation(c,o,e,t,l,h);if(u.ni.set(0,0,1),s.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.scale(e.radius,u.ri),i.vsub(a,Qt),u.ni.scale(u.ni.dot(Qt),Qa),Qt.vsub(Qa,u.rj),-Qt.dot(u.ni)<=e.radius){if(f)return!0;let m=u.ri,v=u.rj;m.vadd(i,m),m.vsub(c.position,m),v.vadd(a,v),v.vsub(o.position,v),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}}boxBox(e,t,i,a,r,s,c,o,l,h,f){return e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t.convexPolyhedronRepresentation,i,a,r,s,c,o,e,t,f)}sphereBox(e,t,i,a,r,s,c,o,l,h,f){let u=this.v3pool,m=wl;i.vsub(a,e6),t.getSideNormals(m,s);let v=e.radius,g=!1,x=Sl,p=Ll,d=El,C=null,b=0,A=0,L=0,y=null;for(let T=0,D=m.length;T!==D&&g===!1;T++){let I=Cl;I.copy(m[T]);let W=I.length();I.normalize();let $=e6.dot(I);if($<W+v&&$>0){let J=zl,Z=Al;J.copy(m[(T+1)%3]),Z.copy(m[(T+2)%3]);let j=J.length(),Y=Z.length();J.normalize(),Z.normalize();let e1=e6.dot(J),N=e6.dot(Z);if(e1<j&&e1>-j&&N<Y&&N>-Y){let u1=Math.abs($-W-v);if((y===null||u1<y)&&(y=u1,A=e1,L=N,C=W,x.copy(I),p.copy(J),d.copy(Z),b++,f))return!0}}}if(b){g=!0;let T=this.createContactEquation(c,o,e,t,l,h);x.scale(-v,T.ri),T.ni.copy(x),T.ni.negate(T.ni),x.scale(C,x),p.scale(A,p),x.vadd(p,x),d.scale(L,d),x.vadd(d,T.rj),T.ri.vadd(i,T.ri),T.ri.vsub(c.position,T.ri),T.rj.vadd(a,T.rj),T.rj.vsub(o.position,T.rj),this.result.push(T),this.createFrictionEquationsFromContact(T,this.frictionResult)}let z=u.get(),B=_l;for(let T=0;T!==2&&!g;T++)for(let D=0;D!==2&&!g;D++)for(let I=0;I!==2&&!g;I++)if(z.set(0,0,0),T?z.vadd(m[0],z):z.vsub(m[0],z),D?z.vadd(m[1],z):z.vsub(m[1],z),I?z.vadd(m[2],z):z.vsub(m[2],z),a.vadd(z,B),B.vsub(i,B),B.lengthSquared()<v*v){if(f)return!0;g=!0;let W=this.createContactEquation(c,o,e,t,l,h);W.ri.copy(B),W.ri.normalize(),W.ni.copy(W.ri),W.ri.scale(v,W.ri),W.rj.copy(z),W.ri.vadd(i,W.ri),W.ri.vsub(c.position,W.ri),W.rj.vadd(a,W.rj),W.rj.vsub(o.position,W.rj),this.result.push(W),this.createFrictionEquationsFromContact(W,this.frictionResult)}u.release(z),z=null;let H=u.get(),S=u.get(),G=u.get(),_=u.get(),V=u.get(),R=m.length;for(let T=0;T!==R&&!g;T++)for(let D=0;D!==R&&!g;D++)if(T%3!=D%3){m[D].cross(m[T],H),H.normalize(),m[T].vadd(m[D],S),G.copy(i),G.vsub(S,G),G.vsub(a,G);let I=G.dot(H);H.scale(I,_);let W=0;for(;W===T%3||W===D%3;)W++;V.copy(i),V.vsub(_,V),V.vsub(S,V),V.vsub(a,V);let $=Math.abs(I),J=V.length();if($<m[W].length()&&J<v){if(f)return!0;g=!0;let Z=this.createContactEquation(c,o,e,t,l,h);S.vadd(_,Z.rj),Z.rj.copy(Z.rj),V.negate(Z.ni),Z.ni.normalize(),Z.ri.copy(Z.rj),Z.ri.vadd(a,Z.ri),Z.ri.vsub(i,Z.ri),Z.ri.normalize(),Z.ri.scale(v,Z.ri),Z.ri.vadd(i,Z.ri),Z.ri.vsub(c.position,Z.ri),Z.rj.vadd(a,Z.rj),Z.rj.vsub(o.position,Z.rj),this.result.push(Z),this.createFrictionEquationsFromContact(Z,this.frictionResult)}}u.release(H,S,G,_,V)}planeBox(e,t,i,a,r,s,c,o,l,h,f){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,t.convexPolyhedronRepresentation.id=t.id,this.planeConvex(e,t.convexPolyhedronRepresentation,i,a,r,s,c,o,e,t,f)}convexConvex(e,t,i,a,r,s,c,o,l,h,f,u,m){let v=ql;if(!(i.distanceTo(a)>e.boundingSphereRadius+t.boundingSphereRadius)&&e.findSeparatingAxis(t,i,r,a,s,v,u,m)){let g=[],x=Wl;e.clipAgainstHull(i,r,t,a,s,v,-100,100,g);let p=0;for(let d=0;d!==g.length;d++){if(f)return!0;let C=this.createContactEquation(c,o,e,t,l,h),b=C.ri,A=C.rj;v.negate(C.ni),g[d].normal.negate(x),x.scale(g[d].depth,x),g[d].point.vadd(x,b),A.copy(g[d].point),b.vsub(i,b),A.vsub(a,A),b.vadd(i,b),b.vsub(c.position,b),A.vadd(a,A),A.vsub(o.position,A),this.result.push(C),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(C,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}}sphereConvex(e,t,i,a,r,s,c,o,l,h,f){let u=this.v3pool;i.vsub(a,Dl);let m=t.faceNormals,v=t.faces,g=t.vertices,x=e.radius,p=!1;for(let d=0;d!==g.length;d++){let C=g[d],b=Nl;s.vmult(C,b),a.vadd(b,b);let A=Vl;if(b.vsub(i,A),A.lengthSquared()<x*x){if(f)return!0;p=!0;let L=this.createContactEquation(c,o,e,t,l,h);L.ri.copy(A),L.ri.normalize(),L.ni.copy(L.ri),L.ri.scale(x,L.ri),b.vsub(a,L.rj),L.ri.vadd(i,L.ri),L.ri.vsub(c.position,L.ri),L.rj.vadd(a,L.rj),L.rj.vsub(o.position,L.rj),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult);return}}for(let d=0,C=v.length;d!==C&&p===!1;d++){let b=m[d],A=v[d],L=Fl;s.vmult(b,L);let y=Rl;s.vmult(g[A[0]],y),y.vadd(a,y);let z=Bl;L.scale(-x,z),i.vadd(z,z);let B=Pl;z.vsub(y,B);let H=B.dot(L),S=kl;if(i.vsub(y,S),H<0&&S.dot(L)>0){let G=[];for(let _=0,V=A.length;_!==V;_++){let R=u.get();s.vmult(g[A[_]],R),a.vadd(R,R),G.push(R)}if(yl(G,L,i)){if(f)return!0;p=!0;let _=this.createContactEquation(c,o,e,t,l,h);L.scale(-x,_.ri),L.negate(_.ni);let V=u.get();L.scale(-H,V);let R=u.get();L.scale(-x,R),i.vsub(a,_.rj),_.rj.vadd(R,_.rj),_.rj.vadd(V,_.rj),_.rj.vadd(a,_.rj),_.rj.vsub(o.position,_.rj),_.ri.vadd(i,_.ri),_.ri.vsub(c.position,_.ri),u.release(V),u.release(R),this.result.push(_),this.createFrictionEquationsFromContact(_,this.frictionResult);for(let T=0,D=G.length;T!==D;T++)u.release(G[T]);return}else for(let _=0;_!==A.length;_++){let V=u.get(),R=u.get();s.vmult(g[A[(_+1)%A.length]],V),s.vmult(g[A[(_+2)%A.length]],R),a.vadd(V,V),a.vadd(R,R);let T=Tl;R.vsub(V,T);let D=Hl;T.unit(D);let I=u.get(),W=u.get();i.vsub(V,W);let $=W.dot(D);D.scale($,I),I.vadd(V,I);let J=u.get();if(I.vsub(i,J),$>0&&$*$<T.lengthSquared()&&J.lengthSquared()<x*x){if(f)return!0;let Z=this.createContactEquation(c,o,e,t,l,h);I.vsub(a,Z.rj),I.vsub(i,Z.ni),Z.ni.normalize(),Z.ni.scale(x,Z.ri),Z.rj.vadd(a,Z.rj),Z.rj.vsub(o.position,Z.rj),Z.ri.vadd(i,Z.ri),Z.ri.vsub(c.position,Z.ri),this.result.push(Z),this.createFrictionEquationsFromContact(Z,this.frictionResult);for(let j=0,Y=G.length;j!==Y;j++)u.release(G[j]);u.release(V),u.release(R),u.release(I),u.release(J),u.release(W);return}u.release(V),u.release(R),u.release(I),u.release(J),u.release(W)}for(let _=0,V=G.length;_!==V;_++)u.release(G[_])}}}planeConvex(e,t,i,a,r,s,c,o,l,h,f){let u=Il,m=Ul;m.set(0,0,1),r.vmult(m,m);let v=0,g=Ol;for(let x=0;x!==t.vertices.length;x++)if(u.copy(t.vertices[x]),s.vmult(u,u),a.vadd(u,u),u.vsub(i,g),m.dot(g)<=0){if(f)return!0;let d=this.createContactEquation(c,o,e,t,l,h),C=Gl;m.scale(m.dot(g),C),u.vsub(C,C),C.vsub(i,d.ri),d.ni.copy(m),u.vsub(a,d.rj),d.ri.vadd(i,d.ri),d.ri.vsub(c.position,d.ri),d.rj.vadd(a,d.rj),d.rj.vsub(o.position,d.rj),this.result.push(d),v++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(d,this.frictionResult)}this.enableFrictionReduction&&v&&this.createFrictionFromAverage(v)}boxConvex(e,t,i,a,r,s,c,o,l,h,f){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t,i,a,r,s,c,o,e,t,f)}sphereHeightfield(e,t,i,a,r,s,c,o,l,h,f){let u=t.data,m=e.radius,v=t.elementSize,g=a9,x=i9;V1.pointToLocalFrame(a,s,i,x);let p=Math.floor((x.x-m)/v)-1,d=Math.ceil((x.x+m)/v)+1,C=Math.floor((x.y-m)/v)-1,b=Math.ceil((x.y+m)/v)+1;if(d<0||b<0||p>u.length||C>u[0].length)return;p<0&&(p=0),d<0&&(d=0),C<0&&(C=0),b<0&&(b=0),p>=u.length&&(p=u.length-1),d>=u.length&&(d=u.length-1),b>=u[0].length&&(b=u[0].length-1),C>=u[0].length&&(C=u[0].length-1);let A=[];t.getRectMinMax(p,C,d,b,A);let L=A[0],y=A[1];if(x.z-m>y||x.z+m<L)return;let z=this.result;for(let B=p;B<d;B++)for(let H=C;H<b;H++){let S=z.length,G=!1;if(t.getConvexTrianglePillar(B,H,!1),V1.pointToWorldFrame(a,s,t.pillarOffset,g),i.distanceTo(g)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(G=this.sphereConvex(e,t.pillarConvex,i,g,r,s,c,o,e,t,f)),f&&G||(t.getConvexTrianglePillar(B,H,!0),V1.pointToWorldFrame(a,s,t.pillarOffset,g),i.distanceTo(g)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(G=this.sphereConvex(e,t.pillarConvex,i,g,r,s,c,o,e,t,f)),f&&G))return!0;if(z.length-S>2)return}}boxHeightfield(e,t,i,a,r,s,c,o,l,h,f){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexHeightfield(e.convexPolyhedronRepresentation,t,i,a,r,s,c,o,e,t,f)}convexHeightfield(e,t,i,a,r,s,c,o,l,h,f){let u=t.data,m=t.elementSize,v=e.boundingSphereRadius,g=e9,x=t9,p=Ql;V1.pointToLocalFrame(a,s,i,p);let d=Math.floor((p.x-v)/m)-1,C=Math.ceil((p.x+v)/m)+1,b=Math.floor((p.y-v)/m)-1,A=Math.ceil((p.y+v)/m)+1;if(C<0||A<0||d>u.length||b>u[0].length)return;d<0&&(d=0),C<0&&(C=0),b<0&&(b=0),A<0&&(A=0),d>=u.length&&(d=u.length-1),C>=u.length&&(C=u.length-1),A>=u[0].length&&(A=u[0].length-1),b>=u[0].length&&(b=u[0].length-1);let L=[];t.getRectMinMax(d,b,C,A,L);let y=L[0],z=L[1];if(!(p.z-v>z||p.z+v<y))for(let B=d;B<C;B++)for(let H=b;H<A;H++){let S=!1;if(t.getConvexTrianglePillar(B,H,!1),V1.pointToWorldFrame(a,s,t.pillarOffset,g),i.distanceTo(g)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(S=this.convexConvex(e,t.pillarConvex,i,g,r,s,c,o,null,null,f,x,null)),f&&S||(t.getConvexTrianglePillar(B,H,!0),V1.pointToWorldFrame(a,s,t.pillarOffset,g),i.distanceTo(g)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(S=this.convexConvex(e,t.pillarConvex,i,g,r,s,c,o,null,null,f,x,null)),f&&S))return!0}}sphereParticle(e,t,i,a,r,s,c,o,l,h,f){let u=Yl;if(u.set(0,0,1),a.vsub(i,u),u.lengthSquared()<=e.radius*e.radius){if(f)return!0;let v=this.createContactEquation(o,c,t,e,l,h);u.normalize(),v.rj.copy(u),v.rj.scale(e.radius,v.rj),v.ni.copy(u),v.ni.negate(v.ni),v.ri.set(0,0,0),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}planeParticle(e,t,i,a,r,s,c,o,l,h,f){let u=jl;u.set(0,0,1),c.quaternion.vmult(u,u);let m=Xl;if(a.vsub(c.position,m),u.dot(m)<=0){if(f)return!0;let g=this.createContactEquation(o,c,t,e,l,h);g.ni.copy(u),g.ni.negate(g.ni),g.ri.set(0,0,0);let x=Zl;u.scale(u.dot(a),x),a.vsub(x,x),g.rj.copy(x),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}boxParticle(e,t,i,a,r,s,c,o,l,h,f){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexParticle(e.convexPolyhedronRepresentation,t,i,a,r,s,c,o,e,t,f)}convexParticle(e,t,i,a,r,s,c,o,l,h,f){let u=-1,m=Kl,v=Jl,g=null,x=$l;if(x.copy(a),x.vsub(i,x),r.conjugate(e8),e8.vmult(x,x),e.pointIsInside(x)){e.worldVerticesNeedsUpdate&&e.computeWorldVertices(i,r),e.worldFaceNormalsNeedsUpdate&&e.computeWorldFaceNormals(r);for(let p=0,d=e.faces.length;p!==d;p++){let C=[e.worldVertices[e.faces[p][0]]],b=e.worldFaceNormals[p];a.vsub(C[0],t8);let A=-b.dot(t8);if(g===null||Math.abs(A)<Math.abs(g)){if(f)return!0;g=A,u=p,m.copy(b)}}if(u!==-1){let p=this.createContactEquation(o,c,t,e,l,h);m.scale(g,v),v.vadd(a,v),v.vsub(i,v),p.rj.copy(v),m.negate(p.ni),p.ri.set(0,0,0);let d=p.ri,C=p.rj;d.vadd(a,d),d.vsub(o.position,d),C.vadd(i,C),C.vsub(c.position,C),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(e,t,i,a,r,s,c,o,l,h,f){return this.convexHeightfield(t,e,a,i,s,r,o,c,l,h,f)}particleCylinder(e,t,i,a,r,s,c,o,l,h,f){return this.convexParticle(t,e,a,i,s,r,o,c,l,h,f)}sphereTrimesh(e,t,i,a,r,s,c,o,l,h,f){let u=cl,m=ol,v=ll,g=ul,x=hl,p=fl,d=vl,C=sl,b=rl,A=gl;V1.pointToLocalFrame(a,s,i,x);let L=e.radius;d.lowerBound.set(x.x-L,x.y-L,x.z-L),d.upperBound.set(x.x+L,x.y+L,x.z+L),t.getTrianglesInAABB(d,A);let y=nl,z=e.radius*e.radius;for(let _=0;_<A.length;_++)for(let V=0;V<3;V++)if(t.getVertex(t.indices[A[_]*3+V],y),y.vsub(x,b),b.lengthSquared()<=z){if(C.copy(y),V1.pointToWorldFrame(a,s,C,y),y.vsub(i,b),f)return!0;let R=this.createContactEquation(c,o,e,t,l,h);R.ni.copy(b),R.ni.normalize(),R.ri.copy(R.ni),R.ri.scale(e.radius,R.ri),R.ri.vadd(i,R.ri),R.ri.vsub(c.position,R.ri),R.rj.copy(y),R.rj.vsub(o.position,R.rj),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}for(let _=0;_<A.length;_++)for(let V=0;V<3;V++){t.getVertex(t.indices[A[_]*3+V],u),t.getVertex(t.indices[A[_]*3+(V+1)%3],m),m.vsub(u,v),x.vsub(m,p);let R=p.dot(v);x.vsub(u,p);let T=p.dot(v);if(T>0&&R<0&&(x.vsub(u,p),g.copy(v),g.normalize(),T=p.dot(g),g.scale(T,p),p.vadd(u,p),p.distanceTo(x)<e.radius)){if(f)return!0;let I=this.createContactEquation(c,o,e,t,l,h);p.vsub(x,I.ni),I.ni.normalize(),I.ni.scale(e.radius,I.ri),I.ri.vadd(i,I.ri),I.ri.vsub(c.position,I.ri),V1.pointToWorldFrame(a,s,p,p),p.vsub(o.position,I.rj),V1.vectorToWorldFrame(s,I.ni,I.ni),V1.vectorToWorldFrame(s,I.ri,I.ri),this.result.push(I),this.createFrictionEquationsFromContact(I,this.frictionResult)}}let B=dl,H=pl,S=ml,G=al;for(let _=0,V=A.length;_!==V;_++){t.getTriangleVertices(A[_],B,H,S),t.getNormal(A[_],G),x.vsub(B,p);let R=p.dot(G);if(G.scale(R,p),x.vsub(p,p),R=p.distanceTo(x),W1.pointInTriangle(p,B,H,S)&&R<e.radius){if(f)return!0;let T=this.createContactEquation(c,o,e,t,l,h);p.vsub(x,T.ni),T.ni.normalize(),T.ni.scale(e.radius,T.ri),T.ri.vadd(i,T.ri),T.ri.vsub(c.position,T.ri),V1.pointToWorldFrame(a,s,p,p),p.vsub(o.position,T.rj),V1.vectorToWorldFrame(s,T.ni,T.ni),V1.vectorToWorldFrame(s,T.ri,T.ri),this.result.push(T),this.createFrictionEquationsFromContact(T,this.frictionResult)}}A.length=0}planeTrimesh(e,t,i,a,r,s,c,o,l,h,f){let u=new M,m=el;m.set(0,0,1),r.vmult(m,m);for(let v=0;v<t.vertices.length/3;v++){t.getVertex(v,u);let g=new M;g.copy(u),V1.pointToWorldFrame(a,s,g,u);let x=tl;if(u.vsub(i,x),m.dot(x)<=0){if(f)return!0;let d=this.createContactEquation(c,o,e,t,l,h);d.ni.copy(m);let C=il;m.scale(x.dot(m),C),u.vsub(C,C),d.ri.copy(C),d.ri.vsub(c.position,d.ri),d.rj.copy(u),d.rj.vsub(o.position,d.rj),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}}}},o4=new M,w4=new M,_4=new M,$7=new M,K7=new M,J7=new I1,Q7=new I1,el=new M,tl=new M,il=new M,al=new M,rl=new M,nl=new M,sl=new M,cl=new M,ol=new M,ll=new M,ul=new M,hl=new M,fl=new M,dl=new M,pl=new M,ml=new M,vl=new b2,gl=[],Qt=new M,Qa=new M,xl=new M,Ml=new M,bl=new M;function yl(n,e,t){let i=null,a=n.length;for(let r=0;r!==a;r++){let s=n[r],c=xl;n[(r+1)%a].vsub(s,c);let o=Ml;c.cross(e,o);let l=bl;t.vsub(s,l);let h=o.dot(l);if(i===null||h>0&&i===!0||h<=0&&i===!1){i===null&&(i=h>0);continue}else return!1}return!0}var e6=new M,Cl=new M,zl=new M,Al=new M,wl=[new M,new M,new M,new M,new M,new M],_l=new M,Sl=new M,Ll=new M,El=new M,Dl=new M,Tl=new M,Hl=new M,Vl=new M,Nl=new M,Fl=new M,Rl=new M,Bl=new M,Pl=new M,kl=new M,Il=new M,Ul=new M,Ol=new M,Gl=new M,ql=new M,Wl=new M,jl=new M,Xl=new M,Zl=new M,Yl=new M,e8=new I1,$l=new M,Kl=new M,t8=new M,Jl=new M,Ql=new M,e9=new M,t9=[0],i9=new M,a9=new M,E0=class{constructor(){this.current=void 0,this.previous=void 0,this.current=[],this.previous=[]}getKey(e,t){if(t<e){let i=t;t=e,e=i}return e<<16|t}set(e,t){let i=this.getKey(e,t),a=this.current,r=0;for(;i>a[r];)r++;if(i!==a[r]){for(let s=a.length-1;s>=r;s--)a[s+1]=a[s];a[r]=i}}tick(){let e=this.current;this.current=this.previous,this.previous=e,this.current.length=0}getDiff(e,t){let i=this.current,a=this.previous,r=i.length,s=a.length,c=0;for(let o=0;o<r;o++){let l=!1,h=i[o];for(;h>a[c];)c++;l=h===a[c],l||i8(e,h)}c=0;for(let o=0;o<s;o++){let l=!1,h=a[o];for(;h>i[c];)c++;l=i[c]===h,l||i8(t,h)}}};function i8(n,e){n.push((e&4294901760)>>16,e&65535)}var a8=class{constructor(){this.data={keys:[]}}get(e,t){if(e>t){let i=t;t=e,e=i}return this.data[e+"-"+t]}set(e,t,i){if(e>t){let r=t;t=e,e=r}let a=e+"-"+t;this.get(e,t)||this.data.keys.push(a),this.data[a]=i}reset(){let e=this.data,t=e.keys;for(;t.length>0;){let i=t.pop();delete e[i]}}},D0=class extends x0{constructor(e={}){super();this.dt=void 0,this.allowSleep=void 0,this.contacts=void 0,this.frictionEquations=void 0,this.quatNormalizeSkip=void 0,this.quatNormalizeFast=void 0,this.time=void 0,this.stepnumber=void 0,this.default_dt=void 0,this.nextId=void 0,this.gravity=void 0,this.broadphase=void 0,this.bodies=void 0,this.hasActiveBodies=void 0,this.solver=void 0,this.constraints=void 0,this.narrowphase=void 0,this.collisionMatrix=void 0,this.collisionMatrixPrevious=void 0,this.bodyOverlapKeeper=void 0,this.shapeOverlapKeeper=void 0,this.materials=void 0,this.contactmaterials=void 0,this.contactMaterialTable=void 0,this.defaultMaterial=void 0,this.defaultContactMaterial=void 0,this.doProfiling=void 0,this.profile=void 0,this.accumulator=void 0,this.subsystems=void 0,this.addBodyEvent=void 0,this.removeBodyEvent=void 0,this.idToBodyMap=void 0,this.dt=-1,this.allowSleep=!!e.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=e.quatNormalizeSkip!==void 0?e.quatNormalizeSkip:0,this.quatNormalizeFast=e.quatNormalizeFast!==void 0?e.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new M,e.gravity&&this.gravity.copy(e.gravity),this.broadphase=e.broadphase!==void 0?e.broadphase:new Xt,this.bodies=[],this.hasActiveBodies=!1,this.solver=e.solver!==void 0?e.solver:new Aa,this.constraints=[],this.narrowphase=new Ja(this),this.collisionMatrix=new g0,this.collisionMatrixPrevious=new g0,this.bodyOverlapKeeper=new E0,this.shapeOverlapKeeper=new E0,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new a8,this.defaultMaterial=new ve("default"),this.defaultContactMaterial=new me(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(e,t){return this.contactMaterialTable.get(e.id,t.id)}numObjects(){return this.bodies.length}collisionMatrixTick(){let e=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=e,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(e){this.constraints.push(e)}removeConstraint(e){let t=this.constraints.indexOf(e);t!==-1&&this.constraints.splice(t,1)}rayTest(e,t,i){i instanceof Zt?this.raycastClosest(e,t,{skipBackfaces:!0},i):this.raycastAll(e,t,{skipBackfaces:!0},i)}raycastAll(e,t,i={},a){return i.mode=W1.ALL,i.from=e,i.to=t,i.callback=a,T0.intersectWorld(this,i)}raycastAny(e,t,i={},a){return i.mode=W1.ANY,i.from=e,i.to=t,i.result=a,T0.intersectWorld(this,i)}raycastClosest(e,t,i={},a){return i.mode=W1.CLOSEST,i.from=e,i.to=t,i.result=a,T0.intersectWorld(this,i)}addBody(e){this.bodies.includes(e)||(e.index=this.bodies.length,this.bodies.push(e),e.world=this,e.initPosition.copy(e.position),e.initVelocity.copy(e.velocity),e.timeLastSleepy=this.time,e instanceof a1&&(e.initAngularVelocity.copy(e.angularVelocity),e.initQuaternion.copy(e.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=e,this.idToBodyMap[e.id]=e,this.dispatchEvent(this.addBodyEvent))}removeBody(e){e.world=null;let t=this.bodies.length-1,i=this.bodies,a=i.indexOf(e);if(a!==-1){i.splice(a,1);for(let r=0;r!==i.length;r++)i[r].index=r;this.collisionMatrix.setNumObjects(t),this.removeBodyEvent.body=e,delete this.idToBodyMap[e.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(e){return this.idToBodyMap[e]}getShapeById(e){let t=this.bodies;for(let i=0;i<t.length;i++){let a=t[i].shapes;for(let r=0;r<a.length;r++){let s=a[r];if(s.id===e)return s}}return null}addMaterial(e){this.materials.push(e)}addContactMaterial(e){this.contactmaterials.push(e),this.contactMaterialTable.set(e.materials[0].id,e.materials[1].id,e)}step(e,t,i=10){if(t===void 0)this.internalStep(e),this.time+=e;else{this.accumulator+=t;let a=e2.now(),r=0;for(;this.accumulator>=e&&r<i&&(this.internalStep(e),this.accumulator-=e,r++,!(e2.now()-a>e*1e3)););this.accumulator=this.accumulator%e;let s=this.accumulator/e;for(let c=0;c!==this.bodies.length;c++){let o=this.bodies[c];o.previousPosition.lerp(o.position,s,o.interpolatedPosition),o.previousQuaternion.slerp(o.quaternion,s,o.interpolatedQuaternion),o.previousQuaternion.normalize()}this.time+=t}}internalStep(e){this.dt=e;let t=this.contacts,i=o9,a=l9,r=this.numObjects(),s=this.bodies,c=this.solver,o=this.gravity,l=this.doProfiling,h=this.profile,f=a1.DYNAMIC,u=-1/0,m=this.constraints,v=c9;o.length();let g=o.x,x=o.y,p=o.z,d=0;for(l&&(u=e2.now()),d=0;d!==r;d++){let _=s[d];if(_.type===f){let V=_.force,R=_.mass;V.x+=R*g,V.y+=R*x,V.z+=R*p}}for(let _=0,V=this.subsystems.length;_!==V;_++)this.subsystems[_].update();l&&(u=e2.now()),i.length=0,a.length=0,this.broadphase.collisionPairs(this,i,a),l&&(h.broadphase=e2.now()-u);let C=m.length;for(d=0;d!==C;d++){let _=m[d];if(!_.collideConnected)for(let V=i.length-1;V>=0;V-=1)(_.bodyA===i[V]&&_.bodyB===a[V]||_.bodyB===i[V]&&_.bodyA===a[V])&&(i.splice(V,1),a.splice(V,1))}this.collisionMatrixTick(),l&&(u=e2.now());let b=s9,A=t.length;for(d=0;d!==A;d++)b.push(t[d]);t.length=0;let L=this.frictionEquations.length;for(d=0;d!==L;d++)v.push(this.frictionEquations[d]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(i,a,this,t,b,this.frictionEquations,v),l&&(h.narrowphase=e2.now()-u),l&&(u=e2.now()),d=0;d<this.frictionEquations.length;d++)c.addEquation(this.frictionEquations[d]);let y=t.length;for(let _=0;_!==y;_++){let V=t[_],R=V.bi,T=V.bj,D=V.si,I=V.sj,W;if(R.material&&T.material?W=this.getContactMaterial(R.material,T.material)||this.defaultContactMaterial:W=this.defaultContactMaterial,W.friction,R.material&&T.material&&(R.material.friction>=0&&T.material.friction>=0&&R.material.friction*T.material.friction,R.material.restitution>=0&&T.material.restitution>=0&&(V.restitution=R.material.restitution*T.material.restitution)),c.addEquation(V),R.allowSleep&&R.type===a1.DYNAMIC&&R.sleepState===a1.SLEEPING&&T.sleepState===a1.AWAKE&&T.type!==a1.STATIC){let $=T.velocity.lengthSquared()+T.angularVelocity.lengthSquared(),J=T.sleepSpeedLimit**2;$>=J*2&&(R.wakeUpAfterNarrowphase=!0)}if(T.allowSleep&&T.type===a1.DYNAMIC&&T.sleepState===a1.SLEEPING&&R.sleepState===a1.AWAKE&&R.type!==a1.STATIC){let $=R.velocity.lengthSquared()+R.angularVelocity.lengthSquared(),J=R.sleepSpeedLimit**2;$>=J*2&&(T.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(R,T,!0),this.collisionMatrixPrevious.get(R,T)||(nt.body=T,nt.contact=V,R.dispatchEvent(nt),nt.body=R,T.dispatchEvent(nt)),this.bodyOverlapKeeper.set(R.id,T.id),this.shapeOverlapKeeper.set(D.id,I.id)}for(this.emitContactEvents(),l&&(h.makeContactConstraints=e2.now()-u,u=e2.now()),d=0;d!==r;d++){let _=s[d];_.wakeUpAfterNarrowphase&&(_.wakeUp(),_.wakeUpAfterNarrowphase=!1)}for(C=m.length,d=0;d!==C;d++){let _=m[d];_.update();for(let V=0,R=_.equations.length;V!==R;V++){let T=_.equations[V];c.addEquation(T)}}c.solve(e,this),l&&(h.solve=e2.now()-u),c.removeAllEquations();let z=Math.pow;for(d=0;d!==r;d++){let _=s[d];if(_.type&f){let V=z(1-_.linearDamping,e),R=_.velocity;R.scale(V,R);let T=_.angularVelocity;if(T){let D=z(1-_.angularDamping,e);T.scale(D,T)}}}for(this.dispatchEvent(n9),d=0;d!==r;d++){let _=s[d];_.preStep&&_.preStep.call(_)}l&&(u=e2.now());let H=this.stepnumber%(this.quatNormalizeSkip+1)==0,S=this.quatNormalizeFast;for(d=0;d!==r;d++)s[d].integrate(e,H,S);for(this.clearForces(),this.broadphase.dirty=!0,l&&(h.integrate=e2.now()-u),this.stepnumber+=1,this.dispatchEvent(r9),d=0;d!==r;d++){let _=s[d],V=_.postStep;V&&V.call(_)}let G=!0;if(this.allowSleep)for(G=!1,d=0;d!==r;d++){let _=s[d];_.sleepTick(this.time),_.sleepState!==a1.SLEEPING&&(G=!0)}this.hasActiveBodies=G}emitContactEvents(){let e=this.hasAnyEventListener("beginContact"),t=this.hasAnyEventListener("endContact");if((e||t)&&this.bodyOverlapKeeper.getDiff(xe,Me),e){for(let r=0,s=xe.length;r<s;r+=2)st.bodyA=this.getBodyById(xe[r]),st.bodyB=this.getBodyById(xe[r+1]),this.dispatchEvent(st);st.bodyA=st.bodyB=null}if(t){for(let r=0,s=Me.length;r<s;r+=2)ct.bodyA=this.getBodyById(Me[r]),ct.bodyB=this.getBodyById(Me[r+1]),this.dispatchEvent(ct);ct.bodyA=ct.bodyB=null}xe.length=Me.length=0;let i=this.hasAnyEventListener("beginShapeContact"),a=this.hasAnyEventListener("endShapeContact");if((i||a)&&this.shapeOverlapKeeper.getDiff(xe,Me),i){for(let r=0,s=xe.length;r<s;r+=2){let c=this.getShapeById(xe[r]),o=this.getShapeById(xe[r+1]);be.shapeA=c,be.shapeB=o,c&&(be.bodyA=c.body),o&&(be.bodyB=o.body),this.dispatchEvent(be)}be.bodyA=be.bodyB=be.shapeA=be.shapeB=null}if(a){for(let r=0,s=Me.length;r<s;r+=2){let c=this.getShapeById(Me[r]),o=this.getShapeById(Me[r+1]);ye.shapeA=c,ye.shapeB=o,c&&(ye.bodyA=c.body),o&&(ye.bodyB=o.body),this.dispatchEvent(ye)}ye.bodyA=ye.bodyB=ye.shapeA=ye.shapeB=null}}clearForces(){let e=this.bodies,t=e.length;for(let i=0;i!==t;i++){let a=e[i];a.force,a.torque,a.force.set(0,0,0),a.torque.set(0,0,0)}}};new b2;var T0=new W1,e2=globalThis.performance||{};if(!e2.now){let n=Date.now();e2.timing&&e2.timing.navigationStart&&(n=e2.timing.navigationStart),e2.now=()=>Date.now()-n}var r9={type:"postStep"},n9={type:"preStep"},nt={type:a1.COLLIDE_EVENT_NAME,body:null,contact:null},s9=[],c9=[],o9=[],l9=[],xe=[],Me=[],st={type:"beginContact",bodyA:null,bodyB:null},ct={type:"endContact",bodyA:null,bodyB:null},be={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ye={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};var O1=class{constructor(e=0,t=0,i=0,a=1){this.x=e,this.y=t,this.z=i,this.w=a}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,a){return this.x=e,this.y=t,this.z=i,this.w=a,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,a=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*a+s[12]*r,this.y=s[1]*t+s[5]*i+s[9]*a+s[13]*r,this.z=s[2]*t+s[6]*i+s[10]*a+s[14]*r,this.w=s[3]*t+s[7]*i+s[11]*a+s[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,a,r,s=.01,c=.1,o=e.elements,l=o[0],h=o[4],f=o[8],u=o[1],m=o[5],v=o[9],g=o[2],x=o[6],p=o[10];if(Math.abs(h-u)<s&&Math.abs(f-g)<s&&Math.abs(v-x)<s){if(Math.abs(h+u)<c&&Math.abs(f+g)<c&&Math.abs(v+x)<c&&Math.abs(l+m+p-3)<c)return this.set(1,0,0,0),this;t=Math.PI;let C=(l+1)/2,b=(m+1)/2,A=(p+1)/2,L=(h+u)/4,y=(f+g)/4,z=(v+x)/4;return C>b&&C>A?C<s?(i=0,a=.707106781,r=.707106781):(i=Math.sqrt(C),a=L/i,r=y/i):b>A?b<s?(i=.707106781,a=0,r=.707106781):(a=Math.sqrt(b),i=L/a,r=z/a):A<s?(i=.707106781,a=.707106781,r=0):(r=Math.sqrt(A),i=y/r,a=z/r),this.set(i,a,r,t),this}let d=Math.sqrt((x-v)*(x-v)+(f-g)*(f-g)+(u-h)*(u-h));return Math.abs(d)<.001&&(d=1),this.x=(x-v)/d,this.y=(f-g)/d,this.z=(u-h)/d,this.w=Math.acos((l+m+p-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}};O1.prototype.isVector4=!0;var s2=[];for(let n=0;n<256;n++)s2[n]=(n<16?"0":"")+n.toString(16);var t6=Math.PI/180,ot=180/Math.PI;function Ce(){let n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(s2[n&255]+s2[n>>8&255]+s2[n>>16&255]+s2[n>>24&255]+"-"+s2[e&255]+s2[e>>8&255]+"-"+s2[e>>16&15|64]+s2[e>>24&255]+"-"+s2[t&63|128]+s2[t>>8&255]+"-"+s2[t>>16&255]+s2[t>>24&255]+s2[i&255]+s2[i>>8&255]+s2[i>>16&255]+s2[i>>24&255]).toUpperCase()}function C2(n,e,t){return Math.max(e,Math.min(t,n))}function r8(n,e){return(n%e+e)%e}function i6(n,e,t){return(1-t)*n+t*e}function H0(n){return(n&n-1)==0&&n!==0}function n8(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}var te=class{constructor(e=0,t=0,i=0,a=1){this._x=e,this._y=t,this._z=i,this._w=a}static slerp(e,t,i,a){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(e,t,a)}static slerpFlat(e,t,i,a,r,s,c){let o=i[a+0],l=i[a+1],h=i[a+2],f=i[a+3],u=r[s+0],m=r[s+1],v=r[s+2],g=r[s+3];if(c===0){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=f;return}if(c===1){e[t+0]=u,e[t+1]=m,e[t+2]=v,e[t+3]=g;return}if(f!==g||o!==u||l!==m||h!==v){let x=1-c,p=o*u+l*m+h*v+f*g,d=p>=0?1:-1,C=1-p*p;if(C>Number.EPSILON){let A=Math.sqrt(C),L=Math.atan2(A,p*d);x=Math.sin(x*L)/A,c=Math.sin(c*L)/A}let b=c*d;if(o=o*x+u*b,l=l*x+m*b,h=h*x+v*b,f=f*x+g*b,x===1-c){let A=1/Math.sqrt(o*o+l*l+h*h+f*f);o*=A,l*=A,h*=A,f*=A}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=f}static multiplyQuaternionsFlat(e,t,i,a,r,s){let c=i[a],o=i[a+1],l=i[a+2],h=i[a+3],f=r[s],u=r[s+1],m=r[s+2],v=r[s+3];return e[t]=c*v+h*f+o*m-l*u,e[t+1]=o*v+h*u+l*f-c*m,e[t+2]=l*v+h*m+c*u-o*f,e[t+3]=h*v-c*f-o*u-l*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,a){return this._x=e,this._y=t,this._z=i,this._w=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let i=e._x,a=e._y,r=e._z,s=e._order,c=Math.cos,o=Math.sin,l=c(i/2),h=c(a/2),f=c(r/2),u=o(i/2),m=o(a/2),v=o(r/2);switch(s){case"XYZ":this._x=u*h*f+l*m*v,this._y=l*m*f-u*h*v,this._z=l*h*v+u*m*f,this._w=l*h*f-u*m*v;break;case"YXZ":this._x=u*h*f+l*m*v,this._y=l*m*f-u*h*v,this._z=l*h*v-u*m*f,this._w=l*h*f+u*m*v;break;case"ZXY":this._x=u*h*f-l*m*v,this._y=l*m*f+u*h*v,this._z=l*h*v+u*m*f,this._w=l*h*f-u*m*v;break;case"ZYX":this._x=u*h*f-l*m*v,this._y=l*m*f+u*h*v,this._z=l*h*v-u*m*f,this._w=l*h*f+u*m*v;break;case"YZX":this._x=u*h*f+l*m*v,this._y=l*m*f+u*h*v,this._z=l*h*v-u*m*f,this._w=l*h*f-u*m*v;break;case"XZY":this._x=u*h*f-l*m*v,this._y=l*m*f-u*h*v,this._z=l*h*v+u*m*f,this._w=l*h*f+u*m*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,a=Math.sin(i);return this._x=e.x*a,this._y=e.y*a,this._z=e.z*a,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],a=t[4],r=t[8],s=t[1],c=t[5],o=t[9],l=t[2],h=t[6],f=t[10],u=i+c+f;if(u>0){let m=.5/Math.sqrt(u+1);this._w=.25/m,this._x=(h-o)*m,this._y=(r-l)*m,this._z=(s-a)*m}else if(i>c&&i>f){let m=2*Math.sqrt(1+i-c-f);this._w=(h-o)/m,this._x=.25*m,this._y=(a+s)/m,this._z=(r+l)/m}else if(c>f){let m=2*Math.sqrt(1+c-i-f);this._w=(r-l)/m,this._x=(a+s)/m,this._y=.25*m,this._z=(o+h)/m}else{let m=2*Math.sqrt(1+f-i-c);this._w=(s-a)/m,this._x=(r+l)/m,this._y=(o+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(C2(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);if(i===0)return this;let a=Math.min(1,t/i);return this.slerp(e,a),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,a=e._y,r=e._z,s=e._w,c=t._x,o=t._y,l=t._z,h=t._w;return this._x=i*h+s*c+a*l-r*o,this._y=a*h+s*o+r*c-i*l,this._z=r*h+s*l+i*o-a*c,this._w=s*h-i*c-a*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);let i=this._x,a=this._y,r=this._z,s=this._w,c=s*e._w+i*e._x+a*e._y+r*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=s,this._x=i,this._y=a,this._z=r,this;let o=1-c*c;if(o<=Number.EPSILON){let m=1-t;return this._w=m*s+t*this._w,this._x=m*i+t*this._x,this._y=m*a+t*this._y,this._z=m*r+t*this._z,this.normalize(),this._onChangeCallback(),this}let l=Math.sqrt(o),h=Math.atan2(l,c),f=Math.sin((1-t)*h)/l,u=Math.sin(t*h)/l;return this._w=s*f+this._w*u,this._x=i*f+this._x*u,this._y=a*f+this._y*u,this._z=r*f+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,i){this.copy(e).slerp(t,i)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}};te.prototype.isQuaternion=!0;var P=class{constructor(e=0,t=0,i=0){this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(s8.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(s8.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,a=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*a,this.y=r[1]*t+r[4]*i+r[7]*a,this.z=r[2]*t+r[5]*i+r[8]*a,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,a=this.z,r=e.elements,s=1/(r[3]*t+r[7]*i+r[11]*a+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*a+r[12])*s,this.y=(r[1]*t+r[5]*i+r[9]*a+r[13])*s,this.z=(r[2]*t+r[6]*i+r[10]*a+r[14])*s,this}applyQuaternion(e){let t=this.x,i=this.y,a=this.z,r=e.x,s=e.y,c=e.z,o=e.w,l=o*t+s*a-c*i,h=o*i+c*t-r*a,f=o*a+r*i-s*t,u=-r*t-s*i-c*a;return this.x=l*o+u*-r+h*-c-f*-s,this.y=h*o+u*-s+f*-r-l*-c,this.z=f*o+u*-c+l*-s-h*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,a=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*a,this.y=r[1]*t+r[5]*i+r[9]*a,this.z=r[2]*t+r[6]*i+r[10]*a,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,a=e.y,r=e.z,s=t.x,c=t.y,o=t.z;return this.x=a*o-r*c,this.y=r*s-i*o,this.z=i*c-a*s,this}projectOnVector(e){let t=e.lengthSq();if(t===0)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return V0.copy(this).projectOnVector(e),this.sub(V0)}reflect(e){return this.sub(V0.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;let i=this.dot(e)/t;return Math.acos(C2(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,a=this.z-e.z;return t*t+i*i+a*a}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let a=Math.sin(t)*e;return this.x=a*Math.sin(i),this.y=Math.cos(t)*e,this.z=a*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),a=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=a,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}};P.prototype.isVector3=!0;var V0=new P,s8=new te;var A1=class{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,a=e.elements;return this.x=a[0]*t+a[3]*i+a[6],this.y=a[1]*t+a[4]*i+a[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),a=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*i-s*a+e.x,this.y=r*a+s*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}};A1.prototype.isVector2=!0;var c8={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},k2={h:0,s:0,l:0},a6={h:0,s:0,l:0};function N0(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}function F0(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function R0(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}var b1=class{constructor(e,t,i){return t===void 0&&i===void 0?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,i){return this.r=e,this.g=t,this.b=i,this}setHSL(e,t,i){if(e=r8(e,1),t=C2(t,0,1),i=C2(i,0,1),t===0)this.r=this.g=this.b=i;else{let a=i<=.5?i*(1+t):i+t-i*t,r=2*i-a;this.r=N0(r,a,e+1/3),this.g=N0(r,a,e),this.b=N0(r,a,e-1/3)}return this}setStyle(e){function t(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let a,r=i[1],s=i[2];switch(r){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,t(a[4]),this;if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,t(a[4]),this;break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){let c=parseFloat(a[1])/360,o=parseInt(a[2],10)/100,l=parseInt(a[3],10)/100;return t(a[4]),this.setHSL(c,o,l)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){let a=i[1],r=a.length;if(r===3)return this.r=parseInt(a.charAt(0)+a.charAt(0),16)/255,this.g=parseInt(a.charAt(1)+a.charAt(1),16)/255,this.b=parseInt(a.charAt(2)+a.charAt(2),16)/255,this;if(r===6)return this.r=parseInt(a.charAt(0)+a.charAt(1),16)/255,this.g=parseInt(a.charAt(2)+a.charAt(3),16)/255,this.b=parseInt(a.charAt(4)+a.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){let t=c8[e.toLowerCase()];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){let i=t>0?1/t:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=F0(e.r),this.g=F0(e.g),this.b=F0(e.b),this}copyLinearToSRGB(e){return this.r=R0(e.r),this.g=R0(e.g),this.b=R0(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){let t=this.r,i=this.g,a=this.b,r=Math.max(t,i,a),s=Math.min(t,i,a),c,o,l=(s+r)/2;if(s===r)c=0,o=0;else{let h=r-s;switch(o=l<=.5?h/(r+s):h/(2-r-s),r){case t:c=(i-a)/h+(i<a?6:0);break;case i:c=(a-t)/h+2;break;case a:c=(t-i)/h+4;break}c/=6}return e.h=c,e.s=o,e.l=l,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,i){return this.getHSL(k2),k2.h+=e,k2.s+=t,k2.l+=i,this.setHSL(k2.h,k2.s,k2.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(k2),e.getHSL(a6);let i=i6(k2.h,a6.h,t),a=i6(k2.s,a6.s,t),r=i6(k2.l,a6.l,t);return this.setHSL(i,a,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}};b1.NAMES=c8;b1.prototype.isColor=!0;b1.prototype.r=1;b1.prototype.g=1;b1.prototype.b=1;var o8=0,B0=1,l8=2;var r6=1,n6=2,l4=3,ze=0,B1=1,I2=2,u8=1;var T2=0,u4=1,P0=2,k0=3,I0=4,h8=5,Ue=100,f8=101,d8=102,U0=103,O0=104,p8=200,m8=201,v8=202,g8=203,s6=204,c6=205,x8=206,M8=207,b8=208,y8=209,C8=210,z8=0,A8=1,w8=2,lt=3,_8=4,S8=5,L8=6,E8=7,S4=0,D8=1,T8=2,U2=0,H8=1,V8=2,N8=3,F8=4,R8=5,G0=300,Oe=301,h4=302,ut=303,ht=304,Ge=306,ft=307,dt=1e3,t2=1001,pt=1002,Z1=1003,q0=1004;var W0=1005;var v2=1006,B8=1007;var qe=1008;var ie=1009,P8=1010,k8=1011,mt=1012,I8=1013,L4=1014,ae=1015,Ae=1016,U8=1017,O8=1018,G8=1019,E4=1020,q8=1021,re=1022,K1=1023,W8=1024,j8=1025,X8=K1,vt=1026,gt=1027,Z8=1028,Y8=1029,$8=1030,K8=1031,J8=1032,Q8=1033,j0=33776,X0=33777,Z0=33778,Y0=33779,$0=35840,K0=35841,J0=35842,Q0=35843,er=36196,e3=37492,t3=37496,tr=37808,ir=37809,ar=37810,rr=37811,nr=37812,sr=37813,cr=37814,or=37815,lr=37816,ur=37817,hr=37818,fr=37819,dr=37820,pr=37821,mr=36492,vr=37840,gr=37841,xr=37842,Mr=37843,br=37844,yr=37845,Cr=37846,zr=37847,Ar=37848,wr=37849,_r=37850,Sr=37851,Lr=37852,Er=37853;var i2=3e3,xt=3001,Mt=3007,bt=3002,Dr=3003,o6=3004,l6=3005,u6=3006,Tr=3200,Hr=3201,h6=0,Vr=1;var f6=7680;var Nr=519,i3=35044;var a3="300 es";var k1=new P,d6=new A1,d2=class{constructor(e,t,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i===!0,this.usage=i3,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let a=0,r=this.itemSize;a<r;a++)this.array[e+a]=t.array[i+a];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){let t=this.array,i=0;for(let a=0,r=e.length;a<r;a++){let s=e[a];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",a),s=new b1),t[i++]=s.r,t[i++]=s.g,t[i++]=s.b}return this}copyVector2sArray(e){let t=this.array,i=0;for(let a=0,r=e.length;a<r;a++){let s=e[a];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",a),s=new A1),t[i++]=s.x,t[i++]=s.y}return this}copyVector3sArray(e){let t=this.array,i=0;for(let a=0,r=e.length;a<r;a++){let s=e[a];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",a),s=new P),t[i++]=s.x,t[i++]=s.y,t[i++]=s.z}return this}copyVector4sArray(e){let t=this.array,i=0;for(let a=0,r=e.length;a<r;a++){let s=e[a];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",a),s=new O1),t[i++]=s.x,t[i++]=s.y,t[i++]=s.z,t[i++]=s.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)d6.fromBufferAttribute(this,t),d6.applyMatrix3(e),this.setXY(t,d6.x,d6.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)k1.fromBufferAttribute(this,t),k1.applyMatrix3(e),this.setXYZ(t,k1.x,k1.y,k1.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)k1.x=this.getX(t),k1.y=this.getY(t),k1.z=this.getZ(t),k1.applyMatrix4(e),this.setXYZ(t,k1.x,k1.y,k1.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)k1.x=this.getX(t),k1.y=this.getY(t),k1.z=this.getZ(t),k1.applyNormalMatrix(e),this.setXYZ(t,k1.x,k1.y,k1.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)k1.x=this.getX(t),k1.y=this.getY(t),k1.z=this.getZ(t),k1.transformDirection(e),this.setXYZ(t,k1.x,k1.y,k1.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=a,this}setXYZW(e,t,i,a,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=a,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==i3&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}};d2.prototype.isBufferAttribute=!0;var yt=class extends d2{constructor(e,t,i){super(new Uint16Array(e),t,i)}};var Ct=class extends d2{constructor(e,t,i){super(new Uint32Array(e),t,i)}},Fr=class extends d2{constructor(e,t,i){super(new Uint16Array(e),t,i)}};Fr.prototype.isFloat16BufferAttribute=!0;var g2=class extends d2{constructor(e,t,i){super(new Float32Array(e),t,i)}};var we=class{constructor(e=new P(1/0,1/0,1/0),t=new P(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,a=1/0,r=-1/0,s=-1/0,c=-1/0;for(let o=0,l=e.length;o<l;o+=3){let h=e[o],f=e[o+1],u=e[o+2];h<t&&(t=h),f<i&&(i=f),u<a&&(a=u),h>r&&(r=h),f>s&&(s=f),u>c&&(c=u)}return this.min.set(t,i,a),this.max.set(r,s,c),this}setFromBufferAttribute(e){let t=1/0,i=1/0,a=1/0,r=-1/0,s=-1/0,c=-1/0;for(let o=0,l=e.count;o<l;o++){let h=e.getX(o),f=e.getY(o),u=e.getZ(o);h<t&&(t=h),f<i&&(i=f),u<a&&(a=u),h>r&&(r=h),f>s&&(s=f),u>c&&(c=u)}return this.min.set(t,i,a),this.max.set(r,s,c),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=zt.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);let t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),r3.copy(t.boundingBox),r3.applyMatrix4(e.matrixWorld),this.union(r3));let i=e.children;for(let a=0,r=i.length;a<r;a++)this.expandByObject(i[a]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,zt),zt.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(At),p6.subVectors(this.max,At),D4.subVectors(e.a,At),T4.subVectors(e.b,At),H4.subVectors(e.c,At),We.subVectors(T4,D4),je.subVectors(H4,T4),f4.subVectors(D4,H4);let t=[0,-We.z,We.y,0,-je.z,je.y,0,-f4.z,f4.y,We.z,0,-We.x,je.z,0,-je.x,f4.z,0,-f4.x,-We.y,We.x,0,-je.y,je.x,0,-f4.y,f4.x,0];return!n3(t,D4,T4,H4,p6)||(t=[1,0,0,0,1,0,0,0,1],!n3(t,D4,T4,H4,p6))?!1:(m6.crossVectors(We,je),t=[m6.x,m6.y,m6.z],n3(t,D4,T4,H4,p6))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return zt.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(zt).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(_e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_e),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};we.prototype.isBox3=!0;var _e=[new P,new P,new P,new P,new P,new P,new P,new P],zt=new P,r3=new we,D4=new P,T4=new P,H4=new P,We=new P,je=new P,f4=new P,At=new P,p6=new P,m6=new P,d4=new P;function n3(n,e,t,i,a){for(let r=0,s=n.length-3;r<=s;r+=3){d4.fromArray(n,r);let c=a.x*Math.abs(d4.x)+a.y*Math.abs(d4.y)+a.z*Math.abs(d4.z),o=e.dot(d4),l=t.dot(d4),h=i.dot(d4);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>c)return!1}return!0}var _2=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});let i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;let i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;let a=this._listeners[e];if(a!==void 0){let r=a.indexOf(t);r!==-1&&a.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;let i=this._listeners[e.type];if(i!==void 0){e.target=this;let a=i.slice(0);for(let r=0,s=a.length;r<s;r++)a[r].call(this,e);e.target=null}}};var u9=new we,Rr=new P,s3=new P,c3=new P,Se=class{constructor(e=new P,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;t!==void 0?i.copy(t):u9.setFromPoints(e).getCenter(i);let a=0;for(let r=0,s=e.length;r<s;r++)a=Math.max(a,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(a),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){c3.subVectors(e,this.center);let t=c3.lengthSq();if(t>this.radius*this.radius){let i=Math.sqrt(t),a=(i-this.radius)*.5;this.center.add(c3.multiplyScalar(a/i)),this.radius+=a}return this}union(e){return s3.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Rr.copy(e.center).add(s3)),this.expandByPoint(Rr.copy(e.center).sub(s3)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};var P1=class{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,a,r,s,c,o,l,h,f,u,m,v,g,x){let p=this.elements;return p[0]=e,p[4]=t,p[8]=i,p[12]=a,p[1]=r,p[5]=s,p[9]=c,p[13]=o,p[2]=l,p[6]=h,p[10]=f,p[14]=u,p[3]=m,p[7]=v,p[11]=g,p[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new P1().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,a=1/V4.setFromMatrixColumn(e,0).length(),r=1/V4.setFromMatrixColumn(e,1).length(),s=1/V4.setFromMatrixColumn(e,2).length();return t[0]=i[0]*a,t[1]=i[1]*a,t[2]=i[2]*a,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*s,t[9]=i[9]*s,t[10]=i[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let t=this.elements,i=e.x,a=e.y,r=e.z,s=Math.cos(i),c=Math.sin(i),o=Math.cos(a),l=Math.sin(a),h=Math.cos(r),f=Math.sin(r);if(e.order==="XYZ"){let u=s*h,m=s*f,v=c*h,g=c*f;t[0]=o*h,t[4]=-o*f,t[8]=l,t[1]=m+v*l,t[5]=u-g*l,t[9]=-c*o,t[2]=g-u*l,t[6]=v+m*l,t[10]=s*o}else if(e.order==="YXZ"){let u=o*h,m=o*f,v=l*h,g=l*f;t[0]=u+g*c,t[4]=v*c-m,t[8]=s*l,t[1]=s*f,t[5]=s*h,t[9]=-c,t[2]=m*c-v,t[6]=g+u*c,t[10]=s*o}else if(e.order==="ZXY"){let u=o*h,m=o*f,v=l*h,g=l*f;t[0]=u-g*c,t[4]=-s*f,t[8]=v+m*c,t[1]=m+v*c,t[5]=s*h,t[9]=g-u*c,t[2]=-s*l,t[6]=c,t[10]=s*o}else if(e.order==="ZYX"){let u=s*h,m=s*f,v=c*h,g=c*f;t[0]=o*h,t[4]=v*l-m,t[8]=u*l+g,t[1]=o*f,t[5]=g*l+u,t[9]=m*l-v,t[2]=-l,t[6]=c*o,t[10]=s*o}else if(e.order==="YZX"){let u=s*o,m=s*l,v=c*o,g=c*l;t[0]=o*h,t[4]=g-u*f,t[8]=v*f+m,t[1]=f,t[5]=s*h,t[9]=-c*h,t[2]=-l*h,t[6]=m*f+v,t[10]=u-g*f}else if(e.order==="XZY"){let u=s*o,m=s*l,v=c*o,g=c*l;t[0]=o*h,t[4]=-f,t[8]=l*h,t[1]=u*f+g,t[5]=s*h,t[9]=m*f-v,t[2]=v*f-m,t[6]=c*h,t[10]=g*f+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(h9,e,f9)}lookAt(e,t,i){let a=this.elements;return S2.subVectors(e,t),S2.lengthSq()===0&&(S2.z=1),S2.normalize(),Xe.crossVectors(i,S2),Xe.lengthSq()===0&&(Math.abs(i.z)===1?S2.x+=1e-4:S2.z+=1e-4,S2.normalize(),Xe.crossVectors(i,S2)),Xe.normalize(),v6.crossVectors(S2,Xe),a[0]=Xe.x,a[4]=v6.x,a[8]=S2.x,a[1]=Xe.y,a[5]=v6.y,a[9]=S2.y,a[2]=Xe.z,a[6]=v6.z,a[10]=S2.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,a=t.elements,r=this.elements,s=i[0],c=i[4],o=i[8],l=i[12],h=i[1],f=i[5],u=i[9],m=i[13],v=i[2],g=i[6],x=i[10],p=i[14],d=i[3],C=i[7],b=i[11],A=i[15],L=a[0],y=a[4],z=a[8],B=a[12],H=a[1],S=a[5],G=a[9],_=a[13],V=a[2],R=a[6],T=a[10],D=a[14],I=a[3],W=a[7],$=a[11],J=a[15];return r[0]=s*L+c*H+o*V+l*I,r[4]=s*y+c*S+o*R+l*W,r[8]=s*z+c*G+o*T+l*$,r[12]=s*B+c*_+o*D+l*J,r[1]=h*L+f*H+u*V+m*I,r[5]=h*y+f*S+u*R+m*W,r[9]=h*z+f*G+u*T+m*$,r[13]=h*B+f*_+u*D+m*J,r[2]=v*L+g*H+x*V+p*I,r[6]=v*y+g*S+x*R+p*W,r[10]=v*z+g*G+x*T+p*$,r[14]=v*B+g*_+x*D+p*J,r[3]=d*L+C*H+b*V+A*I,r[7]=d*y+C*S+b*R+A*W,r[11]=d*z+C*G+b*T+A*$,r[15]=d*B+C*_+b*D+A*J,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],a=e[8],r=e[12],s=e[1],c=e[5],o=e[9],l=e[13],h=e[2],f=e[6],u=e[10],m=e[14],v=e[3],g=e[7],x=e[11],p=e[15];return v*(+r*o*f-a*l*f-r*c*u+i*l*u+a*c*m-i*o*m)+g*(+t*o*m-t*l*u+r*s*u-a*s*m+a*l*h-r*o*h)+x*(+t*l*f-t*c*m-r*s*f+i*s*m+r*c*h-i*l*h)+p*(-a*c*h-t*o*f+t*c*u+a*s*f-i*s*u+i*o*h)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){let a=this.elements;return e.isVector3?(a[12]=e.x,a[13]=e.y,a[14]=e.z):(a[12]=e,a[13]=t,a[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],a=e[2],r=e[3],s=e[4],c=e[5],o=e[6],l=e[7],h=e[8],f=e[9],u=e[10],m=e[11],v=e[12],g=e[13],x=e[14],p=e[15],d=f*x*l-g*u*l+g*o*m-c*x*m-f*o*p+c*u*p,C=v*u*l-h*x*l-v*o*m+s*x*m+h*o*p-s*u*p,b=h*g*l-v*f*l+v*c*m-s*g*m-h*c*p+s*f*p,A=v*f*o-h*g*o-v*c*u+s*g*u+h*c*x-s*f*x,L=t*d+i*C+a*b+r*A;if(L===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let y=1/L;return e[0]=d*y,e[1]=(g*u*r-f*x*r-g*a*m+i*x*m+f*a*p-i*u*p)*y,e[2]=(c*x*r-g*o*r+g*a*l-i*x*l-c*a*p+i*o*p)*y,e[3]=(f*o*r-c*u*r-f*a*l+i*u*l+c*a*m-i*o*m)*y,e[4]=C*y,e[5]=(h*x*r-v*u*r+v*a*m-t*x*m-h*a*p+t*u*p)*y,e[6]=(v*o*r-s*x*r-v*a*l+t*x*l+s*a*p-t*o*p)*y,e[7]=(s*u*r-h*o*r+h*a*l-t*u*l-s*a*m+t*o*m)*y,e[8]=b*y,e[9]=(v*f*r-h*g*r-v*i*m+t*g*m+h*i*p-t*f*p)*y,e[10]=(s*g*r-v*c*r+v*i*l-t*g*l-s*i*p+t*c*p)*y,e[11]=(h*c*r-s*f*r-h*i*l+t*f*l+s*i*m-t*c*m)*y,e[12]=A*y,e[13]=(h*g*a-v*f*a+v*i*u-t*g*u-h*i*x+t*f*x)*y,e[14]=(v*c*a-s*g*a-v*i*o+t*g*o+s*i*x-t*c*x)*y,e[15]=(s*f*a-h*c*a+h*i*o-t*f*o-s*i*u+t*c*u)*y,this}scale(e){let t=this.elements,i=e.x,a=e.y,r=e.z;return t[0]*=i,t[4]*=a,t[8]*=r,t[1]*=i,t[5]*=a,t[9]*=r,t[2]*=i,t[6]*=a,t[10]*=r,t[3]*=i,t[7]*=a,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],a=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,a))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),a=Math.sin(t),r=1-i,s=e.x,c=e.y,o=e.z,l=r*s,h=r*c;return this.set(l*s+i,l*c-a*o,l*o+a*c,0,l*c+a*o,h*c+i,h*o-a*s,0,l*o-a*c,h*o+a*s,r*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,a,r,s){return this.set(1,i,r,0,e,1,s,0,t,a,1,0,0,0,0,1),this}compose(e,t,i){let a=this.elements,r=t._x,s=t._y,c=t._z,o=t._w,l=r+r,h=s+s,f=c+c,u=r*l,m=r*h,v=r*f,g=s*h,x=s*f,p=c*f,d=o*l,C=o*h,b=o*f,A=i.x,L=i.y,y=i.z;return a[0]=(1-(g+p))*A,a[1]=(m+b)*A,a[2]=(v-C)*A,a[3]=0,a[4]=(m-b)*L,a[5]=(1-(u+p))*L,a[6]=(x+d)*L,a[7]=0,a[8]=(v+C)*y,a[9]=(x-d)*y,a[10]=(1-(u+g))*y,a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1,this}decompose(e,t,i){let a=this.elements,r=V4.set(a[0],a[1],a[2]).length(),s=V4.set(a[4],a[5],a[6]).length(),c=V4.set(a[8],a[9],a[10]).length();this.determinant()<0&&(r=-r),e.x=a[12],e.y=a[13],e.z=a[14],O2.copy(this);let l=1/r,h=1/s,f=1/c;return O2.elements[0]*=l,O2.elements[1]*=l,O2.elements[2]*=l,O2.elements[4]*=h,O2.elements[5]*=h,O2.elements[6]*=h,O2.elements[8]*=f,O2.elements[9]*=f,O2.elements[10]*=f,t.setFromRotationMatrix(O2),i.x=r,i.y=s,i.z=c,this}makePerspective(e,t,i,a,r,s){s===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let c=this.elements,o=2*r/(t-e),l=2*r/(i-a),h=(t+e)/(t-e),f=(i+a)/(i-a),u=-(s+r)/(s-r),m=-2*s*r/(s-r);return c[0]=o,c[4]=0,c[8]=h,c[12]=0,c[1]=0,c[5]=l,c[9]=f,c[13]=0,c[2]=0,c[6]=0,c[10]=u,c[14]=m,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,i,a,r,s){let c=this.elements,o=1/(t-e),l=1/(i-a),h=1/(s-r),f=(t+e)*o,u=(i+a)*l,m=(s+r)*h;return c[0]=2*o,c[4]=0,c[8]=0,c[12]=-f,c[1]=0,c[5]=2*l,c[9]=0,c[13]=-u,c[2]=0,c[6]=0,c[10]=-2*h,c[14]=-m,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let a=0;a<16;a++)if(t[a]!==i[a])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}};P1.prototype.isMatrix4=!0;var V4=new P,O2=new P1,h9=new P(0,0,0),f9=new P(1,1,1),Xe=new P,v6=new P,S2=new P;var Br=new P1,Pr=new te,Ze=class{constructor(e=0,t=0,i=0,a=Ze.DefaultOrder){this._x=e,this._y=t,this._z=i,this._order=a}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,a=this._order){return this._x=e,this._y=t,this._z=i,this._order=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){let a=e.elements,r=a[0],s=a[4],c=a[8],o=a[1],l=a[5],h=a[9],f=a[2],u=a[6],m=a[10];switch(t){case"XYZ":this._y=Math.asin(C2(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,m),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-C2(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(c,m),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-f,r),this._z=0);break;case"ZXY":this._x=Math.asin(C2(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-f,m),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-C2(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(u,m),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(C2(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-f,r)):(this._x=0,this._y=Math.atan2(c,m));break;case"XZY":this._z=Math.asin(-C2(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(c,r)):(this._x=Math.atan2(-h,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Br.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Br,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Pr.setFromEuler(this),this.setFromQuaternion(Pr,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new P(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}};Ze.prototype.isEuler=!0;Ze.DefaultOrder="XYZ";Ze.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var o3=class{constructor(){this.mask=1|0}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=4294967295|0}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}};var J1=class{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,a,r,s,c,o,l){let h=this.elements;return h[0]=e,h[1]=a,h[2]=c,h[3]=t,h[4]=r,h[5]=o,h[6]=i,h[7]=s,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,a=t.elements,r=this.elements,s=i[0],c=i[3],o=i[6],l=i[1],h=i[4],f=i[7],u=i[2],m=i[5],v=i[8],g=a[0],x=a[3],p=a[6],d=a[1],C=a[4],b=a[7],A=a[2],L=a[5],y=a[8];return r[0]=s*g+c*d+o*A,r[3]=s*x+c*C+o*L,r[6]=s*p+c*b+o*y,r[1]=l*g+h*d+f*A,r[4]=l*x+h*C+f*L,r[7]=l*p+h*b+f*y,r[2]=u*g+m*d+v*A,r[5]=u*x+m*C+v*L,r[8]=u*p+m*b+v*y,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],a=e[2],r=e[3],s=e[4],c=e[5],o=e[6],l=e[7],h=e[8];return t*s*h-t*c*l-i*r*h+i*c*o+a*r*l-a*s*o}invert(){let e=this.elements,t=e[0],i=e[1],a=e[2],r=e[3],s=e[4],c=e[5],o=e[6],l=e[7],h=e[8],f=h*s-c*l,u=c*o-h*r,m=l*r-s*o,v=t*f+i*u+a*m;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);let g=1/v;return e[0]=f*g,e[1]=(a*l-h*i)*g,e[2]=(c*i-a*s)*g,e[3]=u*g,e[4]=(h*t-a*o)*g,e[5]=(a*r-c*t)*g,e[6]=m*g,e[7]=(i*o-l*t)*g,e[8]=(s*t-i*r)*g,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,a,r,s,c){let o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*s+l*c)+s+e,-a*l,a*o,-a*(-l*s+o*c)+c+t,0,0,1),this}scale(e,t){let i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){let t=Math.cos(e),i=Math.sin(e),a=this.elements,r=a[0],s=a[3],c=a[6],o=a[1],l=a[4],h=a[7];return a[0]=t*r+i*o,a[3]=t*s+i*l,a[6]=t*c+i*h,a[1]=-i*r+t*o,a[4]=-i*s+t*l,a[7]=-i*c+t*h,this}translate(e,t){let i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){let t=this.elements,i=e.elements;for(let a=0;a<9;a++)if(t[a]!==i[a])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}};J1.prototype.isMatrix3=!0;var d9=0,kr=new P,N4=new te,Le=new P1,g6=new P,wt=new P,p9=new P,m9=new te,Ir=new P(1,0,0),Ur=new P(0,1,0),Or=new P(0,0,1),v9={type:"added"},Gr={type:"removed"},G1=class extends _2{constructor(){super();Object.defineProperty(this,"id",{value:d9++}),this.uuid=Ce(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=G1.DefaultUp.clone();let e=new P,t=new Ze,i=new te,a=new P(1,1,1);function r(){i.setFromEuler(t,!1)}function s(){t.setFromQuaternion(i,void 0,!1)}t._onChange(r),i._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new P1},normalMatrix:{value:new J1}}),this.matrix=new P1,this.matrixWorld=new P1,this.matrixAutoUpdate=G1.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new o3,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return N4.setFromAxisAngle(e,t),this.quaternion.multiply(N4),this}rotateOnWorldAxis(e,t){return N4.setFromAxisAngle(e,t),this.quaternion.premultiply(N4),this}rotateX(e){return this.rotateOnAxis(Ir,e)}rotateY(e){return this.rotateOnAxis(Ur,e)}rotateZ(e){return this.rotateOnAxis(Or,e)}translateOnAxis(e,t){return kr.copy(e).applyQuaternion(this.quaternion),this.position.add(kr.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ir,e)}translateY(e){return this.translateOnAxis(Ur,e)}translateZ(e){return this.translateOnAxis(Or,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Le.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?g6.copy(e):g6.set(e,t,i);let a=this.parent;this.updateWorldMatrix(!0,!1),wt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Le.lookAt(wt,g6,this.up):Le.lookAt(g6,wt,this.up),this.quaternion.setFromRotationMatrix(Le),a&&(Le.extractRotation(a.matrixWorld),N4.setFromRotationMatrix(Le),this.quaternion.premultiply(N4.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(v9)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}let t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Gr)),this}removeFromParent(){let e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(Gr)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Le.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Le.multiply(e.parent.matrixWorld)),e.applyMatrix4(Le),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,a=this.children.length;i<a;i++){let s=this.children[i].getObjectByProperty(e,t);if(s!==void 0)return s}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wt,e,p9),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wt,m9,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,a=t.length;i<a;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);let t=this.children;for(let i=0,a=t.length;i<a;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,a=t.length;i<a;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){let i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){let a=this.children;for(let r=0,s=a.length;r<s;r++)a[r].updateWorldMatrix(!1,!0)}}toJSON(e){let t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let a={};a.uuid=this.uuid,a.type=this.type,this.name!==""&&(a.name=this.name),this.castShadow===!0&&(a.castShadow=!0),this.receiveShadow===!0&&(a.receiveShadow=!0),this.visible===!1&&(a.visible=!1),this.frustumCulled===!1&&(a.frustumCulled=!1),this.renderOrder!==0&&(a.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(a.instanceColor=this.instanceColor.toJSON()));function r(c,o){return c[o.uuid]===void 0&&(c[o.uuid]=o.toJSON(e)),o.uuid}if(this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(a.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=r(e.geometries,this.geometry);let c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){let o=c.shapes;if(Array.isArray(o))for(let l=0,h=o.length;l<h;l++){let f=o[l];r(e.shapes,f)}else r(e.shapes,o)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){let c=[];for(let o=0,l=this.material.length;o<l;o++)c.push(r(e.materials,this.material[o]));a.material=c}else a.material=r(e.materials,this.material);if(this.children.length>0){a.children=[];for(let c=0;c<this.children.length;c++)a.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){a.animations=[];for(let c=0;c<this.animations.length;c++){let o=this.animations[c];a.animations.push(r(e.animations,o))}}if(t){let c=s(e.geometries),o=s(e.materials),l=s(e.textures),h=s(e.images),f=s(e.shapes),u=s(e.skeletons),m=s(e.animations);c.length>0&&(i.geometries=c),o.length>0&&(i.materials=o),l.length>0&&(i.textures=l),h.length>0&&(i.images=h),f.length>0&&(i.shapes=f),u.length>0&&(i.skeletons=u),m.length>0&&(i.animations=m)}return i.object=a,i;function s(c){let o=[];for(let l in c){let h=c[l];delete h.metadata,o.push(h)}return o}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){let a=e.children[i];this.add(a.clone())}return this}};G1.DefaultUp=new P(0,1,0);G1.DefaultMatrixAutoUpdate=!0;G1.prototype.isObject3D=!0;function x6(n){if(n.length===0)return-1/0;let e=n[0];for(let t=1,i=n.length;t<i;++t)n[t]>e&&(e=n[t]);return e}var g9=0,H2=new P1,l3=new G1,F4=new P,L2=new we,_t=new we,a2=new P,c2=class extends _2{constructor(){super();Object.defineProperty(this,"id",{value:g9++}),this.uuid=Ce(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(x6(e)>65535?Ct:yt)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(i!==void 0){let r=new J1().getNormalMatrix(e);i.applyNormalMatrix(r),i.needsUpdate=!0}let a=this.attributes.tangent;return a!==void 0&&(a.transformDirection(e),a.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return H2.makeRotationFromQuaternion(e),this.applyMatrix4(H2),this}rotateX(e){return H2.makeRotationX(e),this.applyMatrix4(H2),this}rotateY(e){return H2.makeRotationY(e),this.applyMatrix4(H2),this}rotateZ(e){return H2.makeRotationZ(e),this.applyMatrix4(H2),this}translate(e,t,i){return H2.makeTranslation(e,t,i),this.applyMatrix4(H2),this}scale(e,t,i){return H2.makeScale(e,t,i),this.applyMatrix4(H2),this}lookAt(e){return l3.lookAt(e),l3.updateMatrix(),this.applyMatrix4(l3.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(F4).negate(),this.translate(F4.x,F4.y,F4.z),this}setFromPoints(e){let t=[];for(let i=0,a=e.length;i<a;i++){let r=e[i];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new g2(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new we);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,a=t.length;i<a;i++){let r=t[i];L2.setFromBufferAttribute(r),this.morphTargetsRelative?(a2.addVectors(this.boundingBox.min,L2.min),this.boundingBox.expandByPoint(a2),a2.addVectors(this.boundingBox.max,L2.max),this.boundingBox.expandByPoint(a2)):(this.boundingBox.expandByPoint(L2.min),this.boundingBox.expandByPoint(L2.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Se);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new P,1/0);return}if(e){let i=this.boundingSphere.center;if(L2.setFromBufferAttribute(e),t)for(let r=0,s=t.length;r<s;r++){let c=t[r];_t.setFromBufferAttribute(c),this.morphTargetsRelative?(a2.addVectors(L2.min,_t.min),L2.expandByPoint(a2),a2.addVectors(L2.max,_t.max),L2.expandByPoint(a2)):(L2.expandByPoint(_t.min),L2.expandByPoint(_t.max))}L2.getCenter(i);let a=0;for(let r=0,s=e.count;r<s;r++)a2.fromBufferAttribute(e,r),a=Math.max(a,i.distanceToSquared(a2));if(t)for(let r=0,s=t.length;r<s;r++){let c=t[r],o=this.morphTargetsRelative;for(let l=0,h=c.count;l<h;l++)a2.fromBufferAttribute(c,l),o&&(F4.fromBufferAttribute(e,l),a2.add(F4)),a=Math.max(a,i.distanceToSquared(a2))}this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=e.array,a=t.position.array,r=t.normal.array,s=t.uv.array,c=a.length/3;t.tangent===void 0&&this.setAttribute("tangent",new d2(new Float32Array(4*c),4));let o=t.tangent.array,l=[],h=[];for(let H=0;H<c;H++)l[H]=new P,h[H]=new P;let f=new P,u=new P,m=new P,v=new A1,g=new A1,x=new A1,p=new P,d=new P;function C(H,S,G){f.fromArray(a,H*3),u.fromArray(a,S*3),m.fromArray(a,G*3),v.fromArray(s,H*2),g.fromArray(s,S*2),x.fromArray(s,G*2),u.sub(f),m.sub(f),g.sub(v),x.sub(v);let _=1/(g.x*x.y-x.x*g.y);!isFinite(_)||(p.copy(u).multiplyScalar(x.y).addScaledVector(m,-g.y).multiplyScalar(_),d.copy(m).multiplyScalar(g.x).addScaledVector(u,-x.x).multiplyScalar(_),l[H].add(p),l[S].add(p),l[G].add(p),h[H].add(d),h[S].add(d),h[G].add(d))}let b=this.groups;b.length===0&&(b=[{start:0,count:i.length}]);for(let H=0,S=b.length;H<S;++H){let G=b[H],_=G.start,V=G.count;for(let R=_,T=_+V;R<T;R+=3)C(i[R+0],i[R+1],i[R+2])}let A=new P,L=new P,y=new P,z=new P;function B(H){y.fromArray(r,H*3),z.copy(y);let S=l[H];A.copy(S),A.sub(y.multiplyScalar(y.dot(S))).normalize(),L.crossVectors(z,S);let _=L.dot(h[H])<0?-1:1;o[H*4]=A.x,o[H*4+1]=A.y,o[H*4+2]=A.z,o[H*4+3]=_}for(let H=0,S=b.length;H<S;++H){let G=b[H],_=G.start,V=G.count;for(let R=_,T=_+V;R<T;R+=3)B(i[R+0]),B(i[R+1]),B(i[R+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new d2(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let u=0,m=i.count;u<m;u++)i.setXYZ(u,0,0,0);let a=new P,r=new P,s=new P,c=new P,o=new P,l=new P,h=new P,f=new P;if(e)for(let u=0,m=e.count;u<m;u+=3){let v=e.getX(u+0),g=e.getX(u+1),x=e.getX(u+2);a.fromBufferAttribute(t,v),r.fromBufferAttribute(t,g),s.fromBufferAttribute(t,x),h.subVectors(s,r),f.subVectors(a,r),h.cross(f),c.fromBufferAttribute(i,v),o.fromBufferAttribute(i,g),l.fromBufferAttribute(i,x),c.add(h),o.add(h),l.add(h),i.setXYZ(v,c.x,c.y,c.z),i.setXYZ(g,o.x,o.y,o.z),i.setXYZ(x,l.x,l.y,l.z)}else for(let u=0,m=t.count;u<m;u+=3)a.fromBufferAttribute(t,u+0),r.fromBufferAttribute(t,u+1),s.fromBufferAttribute(t,u+2),h.subVectors(s,r),f.subVectors(a,r),h.cross(f),i.setXYZ(u+0,h.x,h.y,h.z),i.setXYZ(u+1,h.x,h.y,h.z),i.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let i=this.attributes;for(let a in i){if(e.attributes[a]===void 0)continue;let s=i[a].array,c=e.attributes[a],o=c.array,l=c.itemSize*t,h=Math.min(o.length,s.length-l);for(let f=0,u=l;f<h;f++,u++)s[u]=o[f]}return this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)a2.fromBufferAttribute(e,t),a2.normalize(),e.setXYZ(t,a2.x,a2.y,a2.z)}toNonIndexed(){function e(c,o){let l=c.array,h=c.itemSize,f=c.normalized,u=new l.constructor(o.length*h),m=0,v=0;for(let g=0,x=o.length;g<x;g++){c.isInterleavedBufferAttribute?m=o[g]*c.data.stride+c.offset:m=o[g]*h;for(let p=0;p<h;p++)u[v++]=l[m++]}return new d2(u,h,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new c2,i=this.index.array,a=this.attributes;for(let c in a){let o=a[c],l=e(o,i);t.setAttribute(c,l)}let r=this.morphAttributes;for(let c in r){let o=[],l=r[c];for(let h=0,f=l.length;h<f;h++){let u=l[h],m=e(u,i);o.push(m)}t.morphAttributes[c]=o}t.morphTargetsRelative=this.morphTargetsRelative;let s=this.groups;for(let c=0,o=s.length;c<o;c++){let l=s[c];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){let e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){let o=this.parameters;for(let l in o)o[l]!==void 0&&(e[l]=o[l]);return e}e.data={attributes:{}};let t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let i=this.attributes;for(let o in i){let l=i[o];e.data.attributes[o]=l.toJSON(e.data)}let a={},r=!1;for(let o in this.morphAttributes){let l=this.morphAttributes[o],h=[];for(let f=0,u=l.length;f<u;f++){let m=l[f];h.push(m.toJSON(e.data))}h.length>0&&(a[o]=h,r=!0)}r&&(e.data.morphAttributes=a,e.data.morphTargetsRelative=this.morphTargetsRelative);let s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));let c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new c2().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;i!==null&&this.setIndex(i.clone(t));let a=e.attributes;for(let l in a){let h=a[l];this.setAttribute(l,h.clone(t))}let r=e.morphAttributes;for(let l in r){let h=[],f=r[l];for(let u=0,m=f.length;u<m;u++)h.push(f[u].clone(t));this.morphAttributes[l]=h}this.morphTargetsRelative=e.morphTargetsRelative;let s=e.groups;for(let l=0,h=s.length;l<h;l++){let f=s[l];this.addGroup(f.start,f.count,f.materialIndex)}let c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());let o=e.boundingSphere;return o!==null&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};c2.prototype.isBufferGeometry=!0;var x9=0,z2=class extends _2{constructor(){super();Object.defineProperty(this,"id",{value:x9++}),this.uuid=Ce(),this.name="",this.type="Material",this.fog=!0,this.blending=u4,this.side=ze,this.vertexColors=!1,this.opacity=1,this.format=K1,this.transparent=!1,this.blendSrc=s6,this.blendDst=c6,this.blendEquation=Ue,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=lt,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Nr,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=f6,this.stencilZFail=f6,this.stencilZPass=f6,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(let t in e){let i=e[t];if(i===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===u8;continue}let a=this[t];if(a===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}a&&a.isColor?a.set(i):a&&a.isVector3&&i&&i.isVector3?a.copy(i):this[t]=i}}toJSON(e){let t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});let i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheenTint&&this.sheenTint.isColor&&(i.sheenTint=this.sheenTint.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularTint&&this.specularTint.isColor&&(i.specularTint=this.specularTint.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularTintMap&&this.specularTintMap.isTexture&&(i.specularTintMap=this.specularTintMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationTint!==void 0&&(i.attenuationTint=this.attenuationTint.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==u4&&(i.blending=this.blending),this.side!==ze&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.format!==K1&&(i.format=this.format),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function a(r){let s=[];for(let c in r){let o=r[c];delete o.metadata,s.push(o)}return s}if(t){let r=a(e.textures),s=a(e.images);r.length>0&&(i.textures=r),s.length>0&&(i.images=s)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(t!==null){let a=t.length;i=new Array(a);for(let r=0;r!==a;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}};z2.prototype.isMaterial=!0;var St=class extends z2{constructor(e){super();this.type="MeshPhongMaterial",this.color=new b1(16777215),this.specular=new b1(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new b1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=h6,this.normalScale=new A1(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=S4,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}};St.prototype.isMeshPhongMaterial=!0;var Ee=new P,u3=new P,M6=new P,Ye=new P,h3=new P,b6=new P,f3=new P,d3=class{constructor(e=new P,t=new P(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ee)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=Ee.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ee.copy(this.direction).multiplyScalar(t).add(this.origin),Ee.distanceToSquared(e))}distanceSqToSegment(e,t,i,a){u3.copy(e).add(t).multiplyScalar(.5),M6.copy(t).sub(e).normalize(),Ye.copy(this.origin).sub(u3);let r=e.distanceTo(t)*.5,s=-this.direction.dot(M6),c=Ye.dot(this.direction),o=-Ye.dot(M6),l=Ye.lengthSq(),h=Math.abs(1-s*s),f,u,m,v;if(h>0)if(f=s*o-c,u=s*c-o,v=r*h,f>=0)if(u>=-v)if(u<=v){let g=1/h;f*=g,u*=g,m=f*(f+s*u+2*c)+u*(s*f+u+2*o)+l}else u=r,f=Math.max(0,-(s*u+c)),m=-f*f+u*(u+2*o)+l;else u=-r,f=Math.max(0,-(s*u+c)),m=-f*f+u*(u+2*o)+l;else u<=-v?(f=Math.max(0,-(-s*r+c)),u=f>0?-r:Math.min(Math.max(-r,-o),r),m=-f*f+u*(u+2*o)+l):u<=v?(f=0,u=Math.min(Math.max(-r,-o),r),m=u*(u+2*o)+l):(f=Math.max(0,-(s*r+c)),u=f>0?r:Math.min(Math.max(-r,-o),r),m=-f*f+u*(u+2*o)+l);else u=s>0?-r:r,f=Math.max(0,-(s*u+c)),m=-f*f+u*(u+2*o)+l;return i&&i.copy(this.direction).multiplyScalar(f).add(this.origin),a&&a.copy(M6).multiplyScalar(u).add(u3),m}intersectSphere(e,t){Ee.subVectors(e.center,this.origin);let i=Ee.dot(this.direction),a=Ee.dot(Ee)-i*i,r=e.radius*e.radius;if(a>r)return null;let s=Math.sqrt(r-a),c=i-s,o=i+s;return c<0&&o<0?null:c<0?this.at(o,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,a,r,s,c,o,l=1/this.direction.x,h=1/this.direction.y,f=1/this.direction.z,u=this.origin;return l>=0?(i=(e.min.x-u.x)*l,a=(e.max.x-u.x)*l):(i=(e.max.x-u.x)*l,a=(e.min.x-u.x)*l),h>=0?(r=(e.min.y-u.y)*h,s=(e.max.y-u.y)*h):(r=(e.max.y-u.y)*h,s=(e.min.y-u.y)*h),i>s||r>a||((r>i||i!==i)&&(i=r),(s<a||a!==a)&&(a=s),f>=0?(c=(e.min.z-u.z)*f,o=(e.max.z-u.z)*f):(c=(e.max.z-u.z)*f,o=(e.min.z-u.z)*f),i>o||c>a)||((c>i||i!==i)&&(i=c),(o<a||a!==a)&&(a=o),a<0)?null:this.at(i>=0?i:a,t)}intersectsBox(e){return this.intersectBox(e,Ee)!==null}intersectTriangle(e,t,i,a,r){h3.subVectors(t,e),b6.subVectors(i,e),f3.crossVectors(h3,b6);let s=this.direction.dot(f3),c;if(s>0){if(a)return null;c=1}else if(s<0)c=-1,s=-s;else return null;Ye.subVectors(this.origin,e);let o=c*this.direction.dot(b6.crossVectors(Ye,b6));if(o<0)return null;let l=c*this.direction.dot(h3.cross(Ye));if(l<0||o+l>s)return null;let h=-c*Ye.dot(f3);return h<0?null:this.at(h/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}};var G2=new P,De=new P,p3=new P,Te=new P,R4=new P,B4=new P,qr=new P,m3=new P,v3=new P,g3=new P,q2=class{constructor(e=new P,t=new P,i=new P){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,a){a.subVectors(i,t),G2.subVectors(e,t),a.cross(G2);let r=a.lengthSq();return r>0?a.multiplyScalar(1/Math.sqrt(r)):a.set(0,0,0)}static getBarycoord(e,t,i,a,r){G2.subVectors(a,t),De.subVectors(i,t),p3.subVectors(e,t);let s=G2.dot(G2),c=G2.dot(De),o=G2.dot(p3),l=De.dot(De),h=De.dot(p3),f=s*l-c*c;if(f===0)return r.set(-2,-1,-1);let u=1/f,m=(l*o-c*h)*u,v=(s*h-c*o)*u;return r.set(1-m-v,v,m)}static containsPoint(e,t,i,a){return this.getBarycoord(e,t,i,a,Te),Te.x>=0&&Te.y>=0&&Te.x+Te.y<=1}static getUV(e,t,i,a,r,s,c,o){return this.getBarycoord(e,t,i,a,Te),o.set(0,0),o.addScaledVector(r,Te.x),o.addScaledVector(s,Te.y),o.addScaledVector(c,Te.z),o}static isFrontFacing(e,t,i,a){return G2.subVectors(i,t),De.subVectors(e,t),G2.cross(De).dot(a)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,a){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[a]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return G2.subVectors(this.c,this.b),De.subVectors(this.a,this.b),G2.cross(De).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return q2.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return q2.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,a,r){return q2.getUV(e,this.a,this.b,this.c,t,i,a,r)}containsPoint(e){return q2.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return q2.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i=this.a,a=this.b,r=this.c,s,c;R4.subVectors(a,i),B4.subVectors(r,i),m3.subVectors(e,i);let o=R4.dot(m3),l=B4.dot(m3);if(o<=0&&l<=0)return t.copy(i);v3.subVectors(e,a);let h=R4.dot(v3),f=B4.dot(v3);if(h>=0&&f<=h)return t.copy(a);let u=o*f-h*l;if(u<=0&&o>=0&&h<=0)return s=o/(o-h),t.copy(i).addScaledVector(R4,s);g3.subVectors(e,r);let m=R4.dot(g3),v=B4.dot(g3);if(v>=0&&m<=v)return t.copy(r);let g=m*l-o*v;if(g<=0&&l>=0&&v<=0)return c=l/(l-v),t.copy(i).addScaledVector(B4,c);let x=h*v-m*f;if(x<=0&&f-h>=0&&m-v>=0)return qr.subVectors(r,a),c=(f-h)/(f-h+(m-v)),t.copy(a).addScaledVector(qr,c);let p=1/(x+g+u);return s=g*p,c=u*p,t.copy(i).addScaledVector(R4,s).addScaledVector(B4,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};var P4=class extends z2{constructor(e){super();this.type="MeshBasicMaterial",this.color=new b1(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=S4,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}};P4.prototype.isMeshBasicMaterial=!0;var Wr=new P1,k4=new d3,x3=new Se,$e=new P,Ke=new P,Je=new P,M3=new P,b3=new P,y3=new P,y6=new P,C6=new P,z6=new P,A6=new A1,w6=new A1,_6=new A1,C3=new P,S6=new P,r2=class extends G1{constructor(e=new c2,t=new P4){super();this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let a=t[i[0]];if(a!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=a.length;r<s;r++){let c=a[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}else{let t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){let i=this.geometry,a=this.material,r=this.matrixWorld;if(a===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),x3.copy(i.boundingSphere),x3.applyMatrix4(r),e.ray.intersectsSphere(x3)===!1)||(Wr.copy(r).invert(),k4.copy(e.ray).applyMatrix4(Wr),i.boundingBox!==null&&k4.intersectsBox(i.boundingBox)===!1))return;let s;if(i.isBufferGeometry){let c=i.index,o=i.attributes.position,l=i.morphAttributes.position,h=i.morphTargetsRelative,f=i.attributes.uv,u=i.attributes.uv2,m=i.groups,v=i.drawRange;if(c!==null)if(Array.isArray(a))for(let g=0,x=m.length;g<x;g++){let p=m[g],d=a[p.materialIndex],C=Math.max(p.start,v.start),b=Math.min(p.start+p.count,v.start+v.count);for(let A=C,L=b;A<L;A+=3){let y=c.getX(A),z=c.getX(A+1),B=c.getX(A+2);s=L6(this,d,e,k4,o,l,h,f,u,y,z,B),s&&(s.faceIndex=Math.floor(A/3),s.face.materialIndex=p.materialIndex,t.push(s))}}else{let g=Math.max(0,v.start),x=Math.min(c.count,v.start+v.count);for(let p=g,d=x;p<d;p+=3){let C=c.getX(p),b=c.getX(p+1),A=c.getX(p+2);s=L6(this,a,e,k4,o,l,h,f,u,C,b,A),s&&(s.faceIndex=Math.floor(p/3),t.push(s))}}else if(o!==void 0)if(Array.isArray(a))for(let g=0,x=m.length;g<x;g++){let p=m[g],d=a[p.materialIndex],C=Math.max(p.start,v.start),b=Math.min(p.start+p.count,v.start+v.count);for(let A=C,L=b;A<L;A+=3){let y=A,z=A+1,B=A+2;s=L6(this,d,e,k4,o,l,h,f,u,y,z,B),s&&(s.faceIndex=Math.floor(A/3),s.face.materialIndex=p.materialIndex,t.push(s))}}else{let g=Math.max(0,v.start),x=Math.min(o.count,v.start+v.count);for(let p=g,d=x;p<d;p+=3){let C=p,b=p+1,A=p+2;s=L6(this,a,e,k4,o,l,h,f,u,C,b,A),s&&(s.faceIndex=Math.floor(p/3),t.push(s))}}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}};r2.prototype.isMesh=!0;function M9(n,e,t,i,a,r,s,c){let o;if(e.side===B1?o=i.intersectTriangle(s,r,a,!0,c):o=i.intersectTriangle(a,r,s,e.side!==I2,c),o===null)return null;S6.copy(c),S6.applyMatrix4(n.matrixWorld);let l=t.ray.origin.distanceTo(S6);return l<t.near||l>t.far?null:{distance:l,point:S6.clone(),object:n}}function L6(n,e,t,i,a,r,s,c,o,l,h,f){$e.fromBufferAttribute(a,l),Ke.fromBufferAttribute(a,h),Je.fromBufferAttribute(a,f);let u=n.morphTargetInfluences;if(r&&u){y6.set(0,0,0),C6.set(0,0,0),z6.set(0,0,0);for(let v=0,g=r.length;v<g;v++){let x=u[v],p=r[v];x!==0&&(M3.fromBufferAttribute(p,l),b3.fromBufferAttribute(p,h),y3.fromBufferAttribute(p,f),s?(y6.addScaledVector(M3,x),C6.addScaledVector(b3,x),z6.addScaledVector(y3,x)):(y6.addScaledVector(M3.sub($e),x),C6.addScaledVector(b3.sub(Ke),x),z6.addScaledVector(y3.sub(Je),x)))}$e.add(y6),Ke.add(C6),Je.add(z6)}n.isSkinnedMesh&&(n.boneTransform(l,$e),n.boneTransform(h,Ke),n.boneTransform(f,Je));let m=M9(n,e,t,i,$e,Ke,Je,C3);if(m){c&&(A6.fromBufferAttribute(c,l),w6.fromBufferAttribute(c,h),_6.fromBufferAttribute(c,f),m.uv=q2.getUV(C3,$e,Ke,Je,A6,w6,_6,new A1)),o&&(A6.fromBufferAttribute(o,l),w6.fromBufferAttribute(o,h),_6.fromBufferAttribute(o,f),m.uv2=q2.getUV(C3,$e,Ke,Je,A6,w6,_6,new A1));let v={a:l,b:h,c:f,normal:new P,materialIndex:0};q2.getNormal($e,Ke,Je,v.normal),m.face=v}return m}var I4,z3=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{I4===void 0&&(I4=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),I4.width=e.width,I4.height=e.height;let i=I4.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=I4}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}};var b9=0,Y1=class extends _2{constructor(e=Y1.DEFAULT_IMAGE,t=Y1.DEFAULT_MAPPING,i=t2,a=t2,r=v2,s=qe,c=K1,o=ie,l=1,h=i2){super();Object.defineProperty(this,"id",{value:b9++}),this.uuid=Ce(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=a,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=c,this.internalFormat=null,this.type=o,this.offset=new A1(0,0),this.repeat=new A1(1,1),this.center=new A1(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new J1,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){let t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];let i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){let a=this.image;if(a.uuid===void 0&&(a.uuid=Ce()),!t&&e.images[a.uuid]===void 0){let r;if(Array.isArray(a)){r=[];for(let s=0,c=a.length;s<c;s++)a[s].isDataTexture?r.push(A3(a[s].image)):r.push(A3(a[s]))}else r=A3(a);e.images[a.uuid]={uuid:a.uuid,url:r}}i.image=a.uuid}return t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==G0)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case dt:e.x=e.x-Math.floor(e.x);break;case t2:e.x=e.x<0?0:1;break;case pt:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case dt:e.y=e.y-Math.floor(e.y);break;case t2:e.y=e.y<0?0:1;break;case pt:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&this.version++}};Y1.DEFAULT_IMAGE=void 0;Y1.DEFAULT_MAPPING=G0;Y1.prototype.isTexture=!0;function A3(n){return typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&n instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&n instanceof ImageBitmap?z3.getDataURL(n):n.data?{data:Array.prototype.slice.call(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}var jr={specular:1515554,color:15790320,shininess:60,flatShading:!0},V2={diceColor:"#202020",textColor:"#ffffff"},W2=class{constructor(e,t,i={diceColor:"#202020",textColor:"#aaaaaa"}){this.w=e;this.h=t;this.options=i;this.scale=50;this.labels=[" ","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"];this.fontFace="Arial";this.options={...V2,...i}}setColor({diceColor:e,textColor:t}){e&&(this.options.diceColor=e),t&&(this.options.textColor=t)}get radius(){return this.scale*this.scaleFactor}get diceColor(){return this.options.diceColor}get textColor(){return this.options.textColor}get buffer(){return this.geometry.geometry}create(){this.textureSize=this.calculateTextureSize(this.scale/2+this.scale*this.margin)*2;let e=this.getGeometry(),t=this.getMaterials();return this.geometry=new r2(e,t),this.geometry.receiveShadow=!0,this.geometry.castShadow=!0,this.body.position.set(0+this.radius*2*Math.random(),0+this.radius*2*Math.random(),0+this.radius*4),this.body.velocity.x=500*Math.random()*2-1,this.body.velocity.y=500*Math.random()*2-1,this.body.angularVelocity.x=100*Math.random(),this.body.angularVelocity.y=100*Math.random(),this}getGeometry(){let e=new Array(this.vertices.length);for(let i=0;i<this.vertices.length;++i)e[i]=new P().fromArray(this.vertices[i]).normalize();this.chamferGeometry=this.getChamferGeometry(e);let t=this.makeGeometry(this.chamferGeometry.vectors,this.chamferGeometry.faces);return this.shape=this.makeShape(e),this.body=new a1({mass:this.mass,shape:this.shape}),t}makeShape(e){let t=new Array(e.length),i=new Array(this.faces.length);for(let a=0;a<e.length;++a){let r=e[a];t[a]=new M(r.x*this.radius,r.y*this.radius,r.z*this.radius)}for(let a=0;a<this.faces.length;++a)i[a]=this.faces[a].slice(0,this.faces[a].length-1);return this.shapeData={vertices:t,faces:i},new Pe({vertices:t,faces:i})}getChamferGeometry(e){let t=[],i=[],a=new Array(e.length);for(let r=0;r<e.length;++r)a[r]=[];for(let r=0;r<this.faces.length;++r){let s=this.faces[r],c=s.length-1,o=new P,l=new Array(c);for(let h=0;h<c;++h){let f=e[s[h]].clone();o.add(f),a[s[h]].push(l[h]=t.push(f)-1)}o.divideScalar(c);for(let h=0;h<c;++h){let f=t[l[h]];f.subVectors(f,o).multiplyScalar(this.chamfer).addVectors(f,o)}l.push(s[c]),i.push(l)}for(let r=0;r<this.faces.length-1;++r)for(let s=r+1;s<this.faces.length;++s){let c=[],o=-1;for(let l=0;l<this.faces[r].length-1;++l){let h=this.faces[s].indexOf(this.faces[r][l]);h>=0&&h<this.faces[s].length-1&&(o>=0&&l!==o+1?c.unshift([r,l],[s,h]):c.push([r,l],[s,h]),o=l)}c.length===4&&i.push([i[c[0][0]][c[0][1]],i[c[1][0]][c[1][1]],i[c[3][0]][c[3][1]],i[c[2][0]][c[2][1]],-1])}for(let r=0;r<a.length;++r){let s=a[r],c=[s[0]],o=s.length-1;for(;o;){for(let l=this.faces.length;l<i.length;++l){let h=i[l].indexOf(c[c.length-1]);if(h>=0&&h<4){--h==-1&&(h=3);let f=i[l][h];if(s.indexOf(f)>=0){c.push(f);break}}}--o}c.push(-1),i.push(c)}return{vectors:t,faces:i}}makeGeometry(e,t){let i=new c2;for(let f=0;f<e.length;++f)e[f]=e[f].multiplyScalar(this.radius);let a=[],r=[],s=[],c=new P,o=new P,l,h=0;for(let f=0;f<t.length;++f){let u=t[f],m=u.length-1,v=Math.PI*2/m;l=u[m]+1;for(let x=0;x<m-2;++x)a.push(...e[u[0]].toArray()),a.push(...e[u[x+1]].toArray()),a.push(...e[u[x+2]].toArray()),c.subVectors(e[u[x+2]],e[u[x+1]]),o.subVectors(e[u[0]],e[u[x+1]]),c.cross(o),c.normalize(),r.push(...c.toArray()),r.push(...c.toArray()),r.push(...c.toArray()),s.push((Math.cos(this.af)+1+this.tab)/2/(1+this.tab),(Math.sin(this.af)+1+this.tab)/2/(1+this.tab)),s.push((Math.cos(v*(x+1)+this.af)+1+this.tab)/2/(1+this.tab),(Math.sin(v*(x+1)+this.af)+1+this.tab)/2/(1+this.tab)),s.push((Math.cos(v*(x+2)+this.af)+1+this.tab)/2/(1+this.tab),(Math.sin(v*(x+2)+this.af)+1+this.tab)/2/(1+this.tab));let g=(m-2)*3;for(let x=0;x<g/3;x++)i.addGroup(h,3,l),h+=3}return i.setAttribute("position",new g2(a,3)),i.setAttribute("normal",new g2(r,3)),i.setAttribute("uv",new g2(s,2)),i.boundingSphere=new Se(new P,this.radius),i}getMaterials(){let e=[];for(let t=0;t<this.labels.length;t++){let i=this.createTextTexture(t);e.push(new St(Object.assign({},jr,{map:i})))}return e}calculateTextureSize(e){return Math.max(128,Math.pow(2,Math.floor(Math.log(e)/Math.log(2))))}createTextTexture(e){let t=this.labels[e];if(t==null)return null;let i=createEl("canvas");i.width=i.height=this.textureSize;let a=i.height/2,r=i.width/2,{context:s,fontsize:c}=this.getContext(i),o=s.measureText("M").width*1.4,l=t.split(`
`);l.length>1&&(c=c/l.length,s.font=`${c}pt '${this.fontFace}'`,o=s.measureText("M").width*1.2,a-=o*l.length/2);for(let f=0,u=l.length;f<u;f++){let m=l[f].trim();s.fillText(l[f],r,a),(m=="6"||m=="9")&&s.fillText("  .",r,a),a+=o*1.5}let h=new Y1(i);return h.needsUpdate=!0,i.detach(),h}getContext(e){let t=e.getContext("2d",{alpha:!0});t.clearRect(0,0,e.width,e.height);let i=e.width/(1+2*this.margin);return this.sides==100&&(i*=.75),t.font=`${i}pt '${this.fontFace}'`,t.fillStyle=this.diceColor,t.fillRect(0,0,e.width,e.height),t.textAlign="center",t.textBaseline="middle",(this.sides==10||this.sides==100)&&(t.translate(e.width/2,e.height/2),t.rotate(60*Math.PI/180),t.translate(-e.width/2,-e.height/2)),t.fillStyle=this.textColor,{context:t,fontsize:i}}clone(){return{body:new a1({mass:this.mass,shape:this.shape}),geometry:this.geometry.clone(),values:this.values}}},w3=class extends W2{constructor(e,t,i=V2){super(e,t,i);this.sides=20;this.tab=-.2;this.af=-Math.PI/4/2;this.chamfer=.955;this.vertices=[];this.faces=[[0,11,5,1],[0,5,1,2],[0,1,7,3],[0,7,10,4],[0,10,11,5],[1,5,9,6],[5,11,4,7],[11,10,2,8],[10,7,6,9],[7,1,8,10],[3,9,4,11],[3,4,2,12],[3,2,6,13],[3,6,8,14],[3,8,9,15],[4,9,5,16],[2,4,11,17],[6,2,10,18],[8,6,7,19],[9,8,1,20]];this.scaleFactor=1;this.values=[...Array(20).keys()];this.margin=1;this.mass=400;let a=(1+Math.sqrt(5))/2;this.vertices=[[-1,a,0],[1,a,0],[-1,-a,0],[1,-a,0],[0,-1,a],[0,1,a],[0,-1,-a],[0,1,-a],[a,0,-1],[a,0,1],[-a,0,-1],[-a,0,1]]}},_3=class extends W2{constructor(e,t,i=V2){super(e,t,i);this.mass=350;this.sides=12;this.tab=.2;this.af=-Math.PI/4/2;this.chamfer=.968;this.vertices=[];this.faces=[[2,14,4,12,0,1],[15,9,11,19,3,2],[16,10,17,7,6,3],[6,7,19,11,18,4],[6,18,2,0,16,5],[18,11,9,14,2,6],[1,17,10,8,13,7],[1,13,5,15,3,8],[13,8,12,4,5,9],[5,4,14,9,15,10],[0,12,8,10,16,11],[3,19,7,17,1,12]];this.scaleFactor=.9;this.values=[...Array(12).keys()];this.margin=1;let a=(1+Math.sqrt(5))/2,r=1/a;this.vertices=[[0,r,a],[0,r,-a],[0,-r,a],[0,-r,-a],[a,0,r],[a,0,-r],[-a,0,r],[-a,0,-r],[r,a,0],[r,-a,0],[-r,a,0],[-r,-a,0],[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]]}},S3=class extends W2{constructor(e,t,i=V2){super(e,t,i);this.mass=350;this.sides=10;this.tab=0;this.af=-Math.PI*6/5;this.chamfer=.945;this.vertices=[];this.faces=[[5,7,11,0],[4,2,10,1],[1,3,11,2],[0,8,10,3],[7,9,11,4],[8,6,10,5],[9,1,11,6],[2,0,10,7],[3,5,11,8],[6,4,10,9],[1,0,2,-1],[1,2,3,-1],[3,2,4,-1],[3,4,5,-1],[5,4,6,-1],[5,6,7,-1],[7,6,8,-1],[7,8,9,-1],[9,8,0,-1],[9,0,1,-1]];this.scaleFactor=.9;this.values=[...Array(10).keys()];this.margin=1;for(let a=0,r=0;a<10;++a,r+=Math.PI*2/10)this.vertices.push([Math.cos(r),Math.sin(r),.105*(a%2?1:-1)]);this.vertices.push([0,0,-1]),this.vertices.push([0,0,1])}},L3=class extends W2{constructor(e,t,i=V2){super(e,t,i);this.labels=["","00","10","20","30","40","50","60","70","80","90"];this.sides=100;this.mass=350;this.tab=0;this.af=-Math.PI*6/5;this.chamfer=.945;this.vertices=[];this.faces=[[5,7,11,0],[4,2,10,1],[1,3,11,2],[0,8,10,3],[7,9,11,4],[8,6,10,5],[9,1,11,6],[2,0,10,7],[3,5,11,8],[6,4,10,9],[1,0,2,-1],[1,2,3,-1],[3,2,4,-1],[3,4,5,-1],[5,4,6,-1],[5,6,7,-1],[7,6,8,-1],[7,8,9,-1],[9,8,0,-1],[9,0,1,-1]];this.scaleFactor=.9;this.values=[...Array(10).keys()];this.margin=1;for(let a=0,r=0;a<10;++a,r+=Math.PI*2/10)this.vertices.push([Math.cos(r),Math.sin(r),.105*(a%2?1:-1)]);this.vertices.push([0,0,-1]),this.vertices.push([0,0,1])}},E3=class extends W2{constructor(){super(...arguments);this.mass=340;this.sides=8;this.tab=0;this.af=-Math.PI/4/2;this.chamfer=.965;this.vertices=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]];this.faces=[[0,2,4,1],[0,4,3,2],[0,3,5,3],[0,5,2,4],[1,3,4,5],[1,4,2,6],[1,2,5,7],[1,5,3,8]];this.scaleFactor=1;this.values=[...Array(8).keys()];this.margin=1.2}},D3=class extends W2{constructor(){super(...arguments);this.mass=300;this.tab=.1;this.af=Math.PI/4;this.chamfer=.96;this.vertices=[[-1,-1,-1],[1,-1,-1],[1,1,-1],[-1,1,-1],[-1,-1,1],[1,-1,1],[1,1,1],[-1,1,1]];this.faces=[[0,3,2,1,1],[1,2,6,5,2],[0,1,5,4,3],[3,7,6,2,4],[0,4,7,3,5],[4,5,6,7,6]];this.scaleFactor=.9;this.sides=6;this.margin=1;this.values=[...Array(6).keys()]}},T3=class extends W2{constructor(){super(...arguments);this.mass=300;this.tab=.1;this.af=Math.PI/4;this.chamfer=.96;this.vertices=[[-1,-1,-1],[1,-1,-1],[1,1,-1],[-1,1,-1],[-1,-1,1],[1,-1,1],[1,1,1],[-1,1,1]];this.faces=[[0,3,2,1,1],[1,2,6,5,2],[0,1,5,4,3],[3,7,6,2,4],[0,4,7,3,5],[4,5,6,7,6]];this.scaleFactor=.9;this.sides=6;this.margin=1;this.labels=["","","+","-"," ","+","-"," "];this.values=[null,1,-1,0,1,-1,0]}},H3=class extends W2{constructor(){super(...arguments);this.mass=300;this.tab=-.1;this.af=Math.PI*7/6;this.chamfer=.96;this.vertices=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]];this.faces=[[1,0,2,1],[0,1,3,2],[0,3,2,3],[1,2,3,4]];this.scaleFactor=1.2;this.sides=4;this.margin=1;this.d4FaceTexts=[[[],[0,0,0],[2,4,3],[1,3,4],[2,1,4],[1,2,3]],[[],[0,0,0],[2,3,4],[3,1,4],[2,4,1],[3,2,1]],[[],[0,0,0],[4,3,2],[3,4,1],[4,2,1],[3,1,2]],[[],[0,0,0],[4,2,3],[1,4,3],[4,1,2],[1,3,2]]];this.faceTexts=this.d4FaceTexts[0];this.values=[...Array(4).keys()]}getMaterials(){let e=[];for(let t=0;t<this.d4FaceTexts[0].length;++t){let i=null;i=this.createTextTexture(t),e.push(new St(Object.assign({},jr,{map:i})))}return e}createTextTexture(e){let t=document.createElement("canvas"),i=t.getContext("2d"),a=this.calculateTextureSize(this.radius/2+this.radius*2)*2;t.width=t.height=a,i.font=`${a/5}pt '${this.fontFace}'`,i.fillStyle=this.diceColor,i.fillRect(0,0,t.width,t.height),i.textAlign="center",i.textBaseline="middle",i.fillStyle=this.textColor;for(let s in this.faceTexts[e])i.fillText(`${this.faceTexts[e][s]}`,t.width/2,t.height/2-a*.3),i.translate(t.width/2,t.height/2),i.rotate(Math.PI*2/3),i.translate(-t.width/2,-t.height/2);let r=new Y1(t);return r.needsUpdate=!0,r}updateMaterialsForValue(e){e<0&&(e+=4),this.faceTexts=this.d4FaceTexts[e],this.geometry.material=this.getMaterials()}},E6=class extends W2{constructor(){super(...arguments);this.fontFace="DICE_ROLLER_GENESYS_FONT"}},V3=class extends E6{constructor(e,t,i=V2){super(e,t,i);this.mass=350;this.sides=12;this.tab=.2;this.af=-Math.PI/4/2;this.chamfer=.968;this.vertices=[];this.faces=[[2,14,4,12,0,1],[15,9,11,19,3,2],[16,10,17,7,6,3],[6,7,19,11,18,4],[6,18,2,0,16,5],[18,11,9,14,2,6],[1,17,10,8,13,7],[1,13,5,15,3,8],[13,8,12,4,5,9],[5,4,14,9,15,10],[0,12,8,10,16,11],[3,19,7,17,1,12]];this.scaleFactor=.9;this.values=[...Array(12).keys()];this.margin=1;let a=(1+Math.sqrt(5))/2,r=1/a;this.vertices=[[0,r,a],[0,r,-a],[0,-r,a],[0,-r,-a],[a,0,r],[a,0,-r],[-a,0,r],[-a,0,-r],[r,a,0],[r,-a,0],[-r,a,0],[-r,-a,0],[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]]}},N3=class extends V3{constructor(e,t,i=V2){super(e,t,i);this.labels=["","",`a
a`,"a",`a
a`,"x","s",`s
a`,"s",`s
a`,`s
s`,`s
a`,`s
s`,""];this.setColor({diceColor:"#FEF035",textColor:"#000000"})}},F3=class extends V3{constructor(e,t,i=V2){super(e,t,i);this.labels=["","",`t
t`,"t",`t
t`,"t",`t
f`,"f",`t
f`,"f",`f
f`,"y",`f
f`,""];this.setColor({diceColor:"#751317",textColor:"#FFFFFF"})}},R3=class extends E6{constructor(){super(...arguments);this.mass=340;this.sides=8;this.tab=0;this.af=-Math.PI/4/2;this.chamfer=.965;this.vertices=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]];this.faces=[[0,2,4,1],[0,4,3,2],[0,3,5,3],[0,5,2,4],[1,3,4,5],[1,4,2,6],[1,2,5,7],[1,5,3,8]];this.scaleFactor=1;this.values=[...Array(8).keys()];this.margin=1.2}},B3=class extends R3{constructor(e,t,i=V2){super(e,t,i);this.labels=["","","s","a",`s
a`,`s
s`,"a","s",`a
a`,""];this.setColor({diceColor:"#46AC4E",textColor:"#000000"})}},P3=class extends R3{constructor(e,t,i=V2){super(e,t,i);this.labels=["","","t","f",`f
t`,"t","",`t
t`,`f
f`,"t",""];this.setColor({diceColor:"#52287E",textColor:"#FFFFFF"})}},k3=class extends E6{constructor(){super(...arguments);this.mass=300;this.tab=.1;this.af=Math.PI/4;this.chamfer=.96;this.vertices=[[-1,-1,-1],[1,-1,-1],[1,1,-1],[-1,1,-1],[-1,-1,1],[1,-1,1],[1,1,1],[-1,1,1]];this.faces=[[0,3,2,1,1],[1,2,6,5,2],[0,1,5,4,3],[3,7,6,2,4],[0,4,7,3,5],[4,5,6,7,6]];this.scaleFactor=.9;this.sides=6;this.margin=1;this.values=[null,1,-1,0,1,-1,0]}},I3=class extends k3{constructor(e,t,i=V2){super(e,t,i);this.labels=["","","","","s",`s  
  a`,`a  
  a`,"a","",""];this.setColor({diceColor:"#76CDDB",textColor:"#000000"})}},U3=class extends k3{constructor(e,t,i=V2){super(e,t,i);this.labels=["","","","t","f","",""];this.setColor({diceColor:"#000000",textColor:"#FFFFFF"})}};var y9={pos:{x:0+100*Math.random(),y:0+100*Math.random(),z:0+250},velocity:{x:600*(Math.random()*2+1),y:750*(Math.random()*2+1),z:0},angular:{x:200*Math.random(),y:200*Math.random(),z:100*Math.random()},axis:{x:Math.random(),y:Math.random(),z:Math.random(),w:Math.random()}},p4=class{constructor(e,t,i){this.w=e;this.h=t;this.data=i;this.scale=50;this.stopped=!1;this.iteration=0;this.vector={...y9};this.exploded=!1;this.rerolled=0;this.geometry=i.geometry,this.body=i.body}generateVector(e){let t=Math.sqrt(e.x*e.x+e.y*e.y),i=(Math.random()+3)*t,a={x:e.x/t,y:e.y/t},r=this.makeRandomVector(a),s={x:this.w*(r.x>0?-1:1)*.9,y:this.h*(r.y>0?-1:1)*.9,z:Math.random()*200+200},c=Math.abs(r.x/r.y);c>1?s.y/=c:s.x*=c;let o=this.makeRandomVector(a),l={x:o.x*i,y:o.y*i,z:-10},h={x:-(Math.random()*r.y*5+this.inertia*r.y),y:Math.random()*r.x*5+this.inertia*r.x,z:0},f={x:Math.random(),y:Math.random(),z:Math.random(),w:Math.random()};return{pos:s,velocity:l,angular:h,axis:f}}makeRandomVector(e){let t=Math.random()*Math.PI/5-Math.PI/5/2,i={x:e.x*Math.cos(t)-e.y*Math.sin(t),y:e.x*Math.sin(t)+e.y*Math.cos(t)};return i.x==0&&(i.x=.01),i.y==0&&(i.y=.01),i}get buffer(){return this.geometry.geometry}get result(){return this.getUpsideValue()}getUpsideValue(){let e=new P(0,0,this.sides==4?-1:1),t,i=Math.PI*2,a=this.buffer.getAttribute("normal").array;for(let s=0,c=this.buffer.groups.length;s<c;++s){let o=this.buffer.groups[s];if(o.materialIndex==0)continue;let l=s*9,f=new P(a[l],a[l+1],a[l+2]).clone().applyQuaternion(new I1(this.body.quaternion.x,this.body.quaternion.y,this.body.quaternion.z,this.body.quaternion.w)).angleTo(e);f<i&&(i=f,t=o)}let r=t.materialIndex-1;return this.sides==10&&r==0&&(r=10),this.data.values?.[r]??r}shiftUpperValue(e){let t=this.geometry.geometry.clone(),i=this.getUpsideValue();for(let a=0,r=t.groups.length;a<r;++a){let s=t.groups[a].materialIndex;if(s!==0){for(s+=e-i-1;s>this.sides;)s-=this.sides;for(;s<1;)s+=this.sides;t.groups[a].materialIndex=s+1}}this.updateMaterialsForValue(e-i),this.geometry.geometry=t}resetBody(){this.body.vlambda=new M,this.body.position=new M,this.body.previousPosition=new M,this.body.initPosition=new M,this.body.velocity=new M,this.body.initVelocity=new M,this.body.force=new M,this.body.torque=new M,this.body.quaternion=new I1,this.body.initQuaternion=new I1,this.body.angularVelocity=new M,this.body.initAngularVelocity=new M,this.body.interpolatedPosition=new M,this.body.interpolatedQuaternion=new I1,this.body.inertia=new M,this.body.invInertia=new M,this.body.invInertiaWorld=new M2,this.body.invInertiaSolve=new M,this.body.invInertiaWorldSolve=new M2,this.body.wlambda=new M,this.body.updateMassProperties()}updateMaterialsForValue(e){}set(){this.geometry.position.set(this.body.position.x,this.body.position.y,this.body.position.z),this.geometry.quaternion.set(this.body.quaternion.x,this.body.quaternion.y,this.body.quaternion.z,this.body.quaternion.w)}create(){this.body.position.set(this.vector.pos.x,this.vector.pos.y,this.vector.pos.z),this.body.quaternion.setFromAxisAngle(new M(this.vector.axis.x,this.vector.axis.y,this.vector.axis.z),this.vector.axis.w*Math.PI*2),this.body.angularVelocity.set(this.vector.angular.x,this.vector.angular.y,this.vector.angular.z),this.body.velocity.set(this.vector.velocity.x,this.vector.velocity.y,this.vector.velocity.z),this.body.linearDamping=.1,this.body.angularDamping=.1}},O3=class extends p4{constructor(e,t,i,a){super(e,t,i);this.w=e;this.h=t;this.data=i;this.sides=20;this.inertia=6;a&&(this.vector=this.generateVector(a)),this.create()}},G3=class extends p4{constructor(e,t,i,a){super(e,t,i);this.w=e;this.h=t;this.data=i;this.sides=12;this.inertia=8;a&&(this.vector=this.generateVector(a)),this.create()}},m4=class extends p4{constructor(e,t,i,a,r=!1){super(e,t,i);this.w=e;this.h=t;this.data=i;this.isPercentile=r;this.sides=10;this.inertia=9;a&&(this.vector=this.generateVector(a)),this.create()}},q3=class extends p4{constructor(e,t,i,a){super(e,t,i);this.w=e;this.h=t;this.data=i;this.sides=8;this.inertia=10;a&&(this.vector=this.generateVector(a)),this.create()}},Qe=class extends p4{constructor(e,t,i,a){super(e,t,i);this.w=e;this.h=t;this.data=i;this.sides=6;this.inertia=13;a&&(this.vector=this.generateVector(a)),this.create()}},W3=class extends p4{constructor(e,t,i,a){super(e,t,i);this.w=e;this.h=t;this.data=i;this.sides=4;this.inertia=5;a&&(this.vector=this.generateVector(a)),this.create()}};var j3=new P,C9=new P,z9=new J1,j2=class{constructor(e=new P(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,a){return this.normal.set(e,t,i),this.constant=a,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let a=j3.subVectors(i,t).cross(C9.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(a,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){let i=e.delta(j3),a=this.normal.dot(i);if(a===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/a;return r<0||r>1?null:t.copy(i).multiplyScalar(r).add(e.start)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||z9.getNormalMatrix(e),a=this.coplanarPoint(j3).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-a.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};j2.prototype.isPlane=!0;var U4=new Se,D6=new P,v4=class{constructor(e=new j2,t=new j2,i=new j2,a=new j2,r=new j2,s=new j2){this.planes=[e,t,i,a,r,s]}set(e,t,i,a,r,s){let c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(i),c[3].copy(a),c[4].copy(r),c[5].copy(s),this}copy(e){let t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){let t=this.planes,i=e.elements,a=i[0],r=i[1],s=i[2],c=i[3],o=i[4],l=i[5],h=i[6],f=i[7],u=i[8],m=i[9],v=i[10],g=i[11],x=i[12],p=i[13],d=i[14],C=i[15];return t[0].setComponents(c-a,f-o,g-u,C-x).normalize(),t[1].setComponents(c+a,f+o,g+u,C+x).normalize(),t[2].setComponents(c+r,f+l,g+m,C+p).normalize(),t[3].setComponents(c-r,f-l,g-m,C-p).normalize(),t[4].setComponents(c-s,f-h,g-v,C-d).normalize(),t[5].setComponents(c+s,f+h,g+v,C+d).normalize(),this}intersectsObject(e){let t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),U4.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(U4)}intersectsSprite(e){return U4.center.set(0,0,0),U4.radius=.7071067811865476,U4.applyMatrix4(e.matrixWorld),this.intersectsSphere(U4)}intersectsSphere(e){let t=this.planes,i=e.center,a=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(i)<a)return!1;return!0}intersectsBox(e){let t=this.planes;for(let i=0;i<6;i++){let a=t[i];if(D6.x=a.normal.x>0?e.max.x:e.min.x,D6.y=a.normal.y>0?e.max.y:e.min.y,D6.z=a.normal.z>0?e.max.z:e.min.z,a.distanceToPoint(D6)<0)return!1}return!0}containsPoint(e){let t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function T6(){let n=null,e=!1,t=null,i=null;function a(r,s){t(r,s),i=n.requestAnimationFrame(a)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(a),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){n=r}}}function Xr(n,e){let t=e.isWebGL2,i=new WeakMap;function a(l,h){let f=l.array,u=l.usage,m=n.createBuffer();n.bindBuffer(h,m),n.bufferData(h,f,u),l.onUploadCallback();let v=n.FLOAT;return f instanceof Float32Array?v=n.FLOAT:f instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):f instanceof Uint16Array?l.isFloat16BufferAttribute?t?v=n.HALF_FLOAT:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):v=n.UNSIGNED_SHORT:f instanceof Int16Array?v=n.SHORT:f instanceof Uint32Array?v=n.UNSIGNED_INT:f instanceof Int32Array?v=n.INT:f instanceof Int8Array?v=n.BYTE:(f instanceof Uint8Array||f instanceof Uint8ClampedArray)&&(v=n.UNSIGNED_BYTE),{buffer:m,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:l.version}}function r(l,h,f){let u=h.array,m=h.updateRange;n.bindBuffer(f,l),m.count===-1?n.bufferSubData(f,0,u):(t?n.bufferSubData(f,m.offset*u.BYTES_PER_ELEMENT,u,m.offset,m.count):n.bufferSubData(f,m.offset*u.BYTES_PER_ELEMENT,u.subarray(m.offset,m.offset+m.count)),m.count=-1)}function s(l){return l.isInterleavedBufferAttribute&&(l=l.data),i.get(l)}function c(l){l.isInterleavedBufferAttribute&&(l=l.data);let h=i.get(l);h&&(n.deleteBuffer(h.buffer),i.delete(l))}function o(l,h){if(l.isGLBufferAttribute){let u=i.get(l);(!u||u.version<l.version)&&i.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);let f=i.get(l);f===void 0?i.set(l,a(l,h)):f.version<l.version&&(r(f.buffer,l,h),f.version=l.version)}return{get:s,remove:c,update:o}}var He=class extends c2{constructor(e=1,t=1,i=1,a=1,r=1,s=1){super();this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:a,heightSegments:r,depthSegments:s};let c=this;a=Math.floor(a),r=Math.floor(r),s=Math.floor(s);let o=[],l=[],h=[],f=[],u=0,m=0;v("z","y","x",-1,-1,i,t,e,s,r,0),v("z","y","x",1,-1,i,t,-e,s,r,1),v("x","z","y",1,1,e,i,t,a,s,2),v("x","z","y",1,-1,e,i,-t,a,s,3),v("x","y","z",1,-1,e,t,i,a,r,4),v("x","y","z",-1,-1,e,t,-i,a,r,5),this.setIndex(o),this.setAttribute("position",new g2(l,3)),this.setAttribute("normal",new g2(h,3)),this.setAttribute("uv",new g2(f,2));function v(g,x,p,d,C,b,A,L,y,z,B){let H=b/y,S=A/z,G=b/2,_=A/2,V=L/2,R=y+1,T=z+1,D=0,I=0,W=new P;for(let $=0;$<T;$++){let J=$*S-_;for(let Z=0;Z<R;Z++){let j=Z*H-G;W[g]=j*d,W[x]=J*C,W[p]=V,l.push(W.x,W.y,W.z),W[g]=0,W[x]=0,W[p]=L>0?1:-1,h.push(W.x,W.y,W.z),f.push(Z/y),f.push(1-$/z),D+=1}}for(let $=0;$<z;$++)for(let J=0;J<y;J++){let Z=u+J+R*$,j=u+J+R*($+1),Y=u+(J+1)+R*($+1),e1=u+(J+1)+R*$;o.push(Z,j,e1),o.push(j,Y,e1),I+=6}c.addGroup(m,I,B),m+=I,u+=D}}static fromJSON(e){return new He(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};var g4=class extends c2{constructor(e=1,t=1,i=1,a=1){super();this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:a};let r=e/2,s=t/2,c=Math.floor(i),o=Math.floor(a),l=c+1,h=o+1,f=e/c,u=t/o,m=[],v=[],g=[],x=[];for(let p=0;p<h;p++){let d=p*u-s;for(let C=0;C<l;C++){let b=C*f-r;v.push(b,-d,0),g.push(0,0,1),x.push(C/c),x.push(1-p/o)}}for(let p=0;p<o;p++)for(let d=0;d<c;d++){let C=d+l*p,b=d+l*(p+1),A=d+1+l*(p+1),L=d+1+l*p;m.push(C,b,L),m.push(b,A,L)}this.setIndex(m),this.setAttribute("position",new g2(v,3)),this.setAttribute("normal",new g2(g,3)),this.setAttribute("uv",new g2(x,2))}static fromJSON(e){return new g4(e.width,e.height,e.widthSegments,e.heightSegments)}};function Ve(n){let e={};for(let t in n){e[t]={};for(let i in n[t]){let a=n[t][i];a&&(a.isColor||a.isMatrix3||a.isMatrix4||a.isVector2||a.isVector3||a.isVector4||a.isTexture||a.isQuaternion)?e[t][i]=a.clone():Array.isArray(a)?e[t][i]=a.slice():e[t][i]=a}}return e}function o2(n){let e={};for(let t=0;t<n.length;t++){let i=Ve(n[t]);for(let a in i)e[a]=i[a]}return e}var Zr={clone:Ve,merge:o2};var Yr=`
void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}
`;var $r=`
void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}
`;var X2=class extends z2{constructor(e){super();this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Yr,this.fragmentShader=$r,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ve(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(let a in this.uniforms){let s=this.uniforms[a].value;s&&s.isTexture?t.uniforms[a]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[a]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[a]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[a]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[a]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[a]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[a]={type:"m4",value:s.toArray()}:t.uniforms[a]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;let i={};for(let a in this.extensions)this.extensions[a]===!0&&(i[a]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}};X2.prototype.isShaderMaterial=!0;var Kr=`
#ifdef USE_ALPHAMAP

	diffuseColor.a *= texture2D( alphaMap, vUv ).g;

#endif
`;var Jr=`
#ifdef USE_ALPHAMAP

	uniform sampler2D alphaMap;

#endif
`;var Qr=`
#ifdef USE_ALPHATEST

	if ( diffuseColor.a < alphaTest ) discard;

#endif
`;var en=`
#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif
`;var tn=`
#ifdef USE_AOMAP

	// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;

	reflectedLight.indirectDiffuse *= ambientOcclusion;

	#if defined( USE_ENVMAP ) && defined( STANDARD )

		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );

		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );

	#endif

#endif
`;var an=`
#ifdef USE_AOMAP

	uniform sampler2D aoMap;
	uniform float aoMapIntensity;

#endif
`;var rn=`
vec3 transformed = vec3( position );
`;var nn=`
vec3 objectNormal = vec3( normal );

#ifdef USE_TANGENT

	vec3 objectTangent = vec3( tangent.xyz );

#endif
`;var sn=`

vec3 BRDF_Lambert( const in vec3 diffuseColor ) {

	return RECIPROCAL_PI * diffuseColor;

} // validated

vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {

	// Original approximation by Christophe Schlick '94
	// float fresnel = pow( 1.0 - dotVH, 5.0 );

	// Optimized variant (presented by Epic at SIGGRAPH '13)
	// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );

	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );

} // validated

// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2
// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {

	float a2 = pow2( alpha );

	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );

	return 0.5 / max( gv + gl, EPSILON );

}

// Microfacet Models for Refraction through Rough Surfaces - equation (33)
// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html
// alpha is "roughness squared" in Disney\u2019s reparameterization
float D_GGX( const in float alpha, const in float dotNH ) {

	float a2 = pow2( alpha );

	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1

	return RECIPROCAL_PI * a2 / pow2( denom );

}

// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility
vec3 BRDF_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {

	float alpha = pow2( roughness ); // UE4's roughness

	vec3 halfDir = normalize( incidentLight.direction + viewDir );

	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );

	vec3 F = F_Schlick( f0, f90, dotVH );

	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );

	float D = D_GGX( alpha, dotNH );

	return F * ( V * D );

}

// Rect Area Light

// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines
// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt
// code: https://github.com/selfshadow/ltc_code/

vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {

	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;

	float dotNV = saturate( dot( N, V ) );

	// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );

	uv = uv * LUT_SCALE + LUT_BIAS;

	return uv;

}

float LTC_ClippedSphereFormFactor( const in vec3 f ) {

	// Real-Time Area Lighting: a Journey from Research to Production (p.102)
	// An approximation of the form factor of a horizon-clipped rectangle.

	float l = length( f );

	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );

}

vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {

	float x = dot( v1, v2 );

	float y = abs( x );

	// rational polynomial approximation to theta / sin( theta ) / 2PI
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;

	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;

	return cross( v1, v2 ) * theta_sintheta;

}

vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {

	// bail if point is on back side of plane of light
	// assumes ccw winding order of light vertices
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );

	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );

	// construct orthonormal basis around N
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system

	// compute transform
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );

	// transform rect
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );

	// project rect onto sphere
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );

	// calculate vector form factor
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );

	// adjust for horizon clipping
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );

/*
	// alternate method of adjusting for horizon clipping (see referece)
	// refactoring required
	float len = length( vectorFormFactor );
	float z = vectorFormFactor.z / len;

	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;

	// tabulated horizon-clipped sphere, apparently...
	vec2 uv = vec2( z * 0.5 + 0.5, len );
	uv = uv * LUT_SCALE + LUT_BIAS;

	float scale = texture2D( ltc_2, uv ).w;

	float result = len * scale;
*/

	return vec3( result );

}

// End Rect Area Light


float G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {

	// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)
	return 0.25;

}

float D_BlinnPhong( const in float shininess, const in float dotNH ) {

	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );

}

vec3 BRDF_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {

	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );

	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotVH = saturate( dot( geometry.viewDir, halfDir ) );

	vec3 F = F_Schlick( specularColor, 1.0, dotVH );

	float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );

	float D = D_BlinnPhong( shininess, dotNH );

	return F * ( G * D );

} // validated

#if defined( USE_SHEEN )

// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L94
float D_Charlie( float roughness, float NoH ) {

	// Estevez and Kulla 2017, "Production Friendly Microfacet Sheen BRDF"
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 ); // 2^(-14/2), so sin2h^2 > 0 in fp16

	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );

}

// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136
float V_Neubelt( float NoV, float NoL ) {

	// Neubelt and Pettineo 2013, "Crafting a Next-gen Material Pipeline for The Order: 1886"
	return saturate( 1.0 / ( 4.0 * ( NoL + NoV - NoL * NoV ) ) );

}

vec3 BRDF_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {

	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;

	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );

	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );

}

#endif
`;var cn=`
#ifdef USE_BUMPMAP

	uniform sampler2D bumpMap;
	uniform float bumpScale;

	// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen
	// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf

	// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)

	vec2 dHdxy_fwd() {

		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );

		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;

		return vec2( dBx, dBy );

	}

	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {

		// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988

		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;		// normalized

		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );

		float fDet = dot( vSigmaX, R1 ) * faceDirection;

		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );

	}

#endif
`;var on=`
#if NUM_CLIPPING_PLANES > 0

	vec4 plane;

	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {

		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;

	}
	#pragma unroll_loop_end

	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES

		bool clipped = true;

		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {

			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;

		}
		#pragma unroll_loop_end

		if ( clipped ) discard;

	#endif

#endif
`;var ln=`
#if NUM_CLIPPING_PLANES > 0

	varying vec3 vClipPosition;

	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];

#endif
`;var un=`
#if NUM_CLIPPING_PLANES > 0

	varying vec3 vClipPosition;

#endif
`;var hn=`
#if NUM_CLIPPING_PLANES > 0

	vClipPosition = - mvPosition.xyz;

#endif
`;var fn=`
#if defined( USE_COLOR_ALPHA )

	diffuseColor *= vColor;

#elif defined( USE_COLOR )

	diffuseColor.rgb *= vColor;

#endif
`;var dn=`
#if defined( USE_COLOR_ALPHA )

	varying vec4 vColor;

#elif defined( USE_COLOR )

	varying vec3 vColor;

#endif
`;var pn=`
#if defined( USE_COLOR_ALPHA )

	varying vec4 vColor;

#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )

	varying vec3 vColor;

#endif
`;var mn=`
#if defined( USE_COLOR_ALPHA )

	vColor = vec4( 1.0 );

#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )

	vColor = vec3( 1.0 );

#endif

#ifdef USE_COLOR

	vColor *= color;

#endif

#ifdef USE_INSTANCING_COLOR

	vColor.xyz *= instanceColor.xyz;

#endif
`;var vn=`
#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6

#ifndef saturate
// <tonemapping_pars_fragment> may have defined saturate() already
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )

float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }

// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.
// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/
highp float rand( const in vec2 uv ) {

	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );

	return fract( sin( sn ) * c );

}

#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif

struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};

struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};

struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};

vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

}

vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {

	// dir can be either a direction vector or a normal vector
	// upper-left 3x3 of matrix is assumed to be orthogonal

	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );

}

mat3 transposeMat3( const in mat3 m ) {

	mat3 tmp;

	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );

	return tmp;

}

// https://en.wikipedia.org/wiki/Relative_luminance
float linearToRelativeLuminance( const in vec3 color ) {

	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );

	return dot( weights, color.rgb );

}

bool isPerspectiveMatrix( mat4 m ) {

	return m[ 2 ][ 3 ] == - 1.0;

}

vec2 equirectUv( in vec3 dir ) {

	// dir is assumed to be unit length

	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;

	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;

	return vec2( u, v );

}
`;var gn=`
#ifdef ENVMAP_TYPE_CUBE_UV

	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0

	// These shader functions convert between the UV coordinates of a single face of
	// a cubemap, the 0-5 integer index of a cube face, and the direction vector for
	// sampling a textureCube (not generally normalized ).

	float getFace( vec3 direction ) {

		vec3 absDirection = abs( direction );

		float face = - 1.0;

		if ( absDirection.x > absDirection.z ) {

			if ( absDirection.x > absDirection.y )

				face = direction.x > 0.0 ? 0.0 : 3.0;

			else

				face = direction.y > 0.0 ? 1.0 : 4.0;

		} else {

			if ( absDirection.z > absDirection.y )

				face = direction.z > 0.0 ? 2.0 : 5.0;

			else

				face = direction.y > 0.0 ? 1.0 : 4.0;

		}

		return face;

	}

	// RH coordinate system; PMREM face-indexing convention
	vec2 getUV( vec3 direction, float face ) {

		vec2 uv;

		if ( face == 0.0 ) {

			uv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x

		} else if ( face == 1.0 ) {

			uv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y

		} else if ( face == 2.0 ) {

			uv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z

		} else if ( face == 3.0 ) {

			uv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x

		} else if ( face == 4.0 ) {

			uv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y

		} else {

			uv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z

		}

		return 0.5 * ( uv + 1.0 );

	}

	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {

		float face = getFace( direction );

		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );

		mipInt = max( mipInt, cubeUV_minMipLevel );

		float faceSize = exp2( mipInt );

		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );

		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );

		vec2 f = fract( uv );

		uv += 0.5 - f;

		if ( face > 2.0 ) {

			uv.y += faceSize;

			face -= 3.0;

		}

		uv.x += face * faceSize;

		if ( mipInt < cubeUV_maxMipLevel ) {

			uv.y += 2.0 * cubeUV_maxTileSize;

		}

		uv.y += filterInt * 2.0 * cubeUV_minTileSize;

		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );

		uv *= texelSize;

		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;

		uv.x += texelSize;

		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;

		uv.y += texelSize;

		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;

		uv.x -= texelSize;

		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;

		vec3 tm = mix( tl, tr, f.x );

		vec3 bm = mix( bl, br, f.x );

		return mix( tm, bm, f.y );

	}

	// These defines must match with PMREMGenerator

	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0

	float roughnessToMip( float roughness ) {

		float mip = 0.0;

		if ( roughness >= r1 ) {

			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;

		} else if ( roughness >= r4 ) {

			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;

		} else if ( roughness >= r5 ) {

			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;

		} else if ( roughness >= r6 ) {

			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;

		} else {

			mip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25
		}

		return mip;

	}

	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {

		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );

		float mipF = fract( mip );

		float mipInt = floor( mip );

		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );

		if ( mipF == 0.0 ) {

			return vec4( color0, 1.0 );

		} else {

			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );

			return vec4( mix( color0, color1, mipF ), 1.0 );

		}

	}

#endif
`;var xn=`
vec3 transformedNormal = objectNormal;

#ifdef USE_INSTANCING

	// this is in lieu of a per-instance normal-matrix
	// shear transforms in the instance matrix are not supported

	mat3 m = mat3( instanceMatrix );

	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );

	transformedNormal = m * transformedNormal;

#endif

transformedNormal = normalMatrix * transformedNormal;

#ifdef FLIP_SIDED

	transformedNormal = - transformedNormal;

#endif

#ifdef USE_TANGENT

	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;

	#ifdef FLIP_SIDED

		transformedTangent = - transformedTangent;

	#endif

#endif
`;var Mn=`
#ifdef USE_DISPLACEMENTMAP

	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;

#endif
`;var bn=`
#ifdef USE_DISPLACEMENTMAP

	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );

#endif
`;var yn=`
#ifdef USE_EMISSIVEMAP

	vec4 emissiveColor = texture2D( emissiveMap, vUv );

	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;

	totalEmissiveRadiance *= emissiveColor.rgb;

#endif
`;var Cn=`
#ifdef USE_EMISSIVEMAP

	uniform sampler2D emissiveMap;

#endif
`;var zn=`
gl_FragColor = linearToOutputTexel( gl_FragColor );
`;var An=`
// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/

vec4 LinearToLinear( in vec4 value ) {
	return value;
}

vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}

vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}

vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}

vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}

vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}

vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
	// return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );
}

// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}

vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}

// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}

vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	// NOTE: The implementation with min causes the shader to not compile on
	// a common Alcatel A502DL in Chrome 78/Android 8.1. Some research suggests 
	// that the chipset is Mediatek MT6739 w/ IMG PowerVR GE8100 GPU.
	// D = min( floor( D ) / 255.0, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}

// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html

// M matrix, for encoding
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}

// Inverse M matrix, for decoding
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}
`;var wn=`
#ifdef USE_ENVMAP

	#ifdef ENV_WORLDPOS

		vec3 cameraToFrag;

		if ( isOrthographic ) {

			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );

		} else {

			cameraToFrag = normalize( vWorldPosition - cameraPosition );

		}

		// Transforming Normal Vectors with the Inverse Transformation
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );

		#ifdef ENVMAP_MODE_REFLECTION

			vec3 reflectVec = reflect( cameraToFrag, worldNormal );

		#else

			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );

		#endif

	#else

		vec3 reflectVec = vReflect;

	#endif

	#ifdef ENVMAP_TYPE_CUBE

		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );

		envColor = envMapTexelToLinear( envColor );

	#elif defined( ENVMAP_TYPE_CUBE_UV )

		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );

	#else

		vec4 envColor = vec4( 0.0 );

	#endif

	#ifdef ENVMAP_BLENDING_MULTIPLY

		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );

	#elif defined( ENVMAP_BLENDING_MIX )

		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );

	#elif defined( ENVMAP_BLENDING_ADD )

		outgoingLight += envColor.xyz * specularStrength * reflectivity;

	#endif

#endif
`;var _n=`
#ifdef USE_ENVMAP

	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;

	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif
`;var Sn=`
#ifdef USE_ENVMAP

	uniform float reflectivity;

	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )

		#define ENV_WORLDPOS

	#endif

	#ifdef ENV_WORLDPOS

		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif

#endif
`;var Ln=`
#ifdef USE_ENVMAP

	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )

		#define ENV_WORLDPOS

	#endif

	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;

	#else

		varying vec3 vReflect;
		uniform float refractionRatio;

	#endif

#endif
`;var En=`
#ifdef USE_ENVMAP

	#ifdef ENV_WORLDPOS

		vWorldPosition = worldPosition.xyz;

	#else

		vec3 cameraToVertex;

		if ( isOrthographic ) {

			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );

		} else {

			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );

		}

		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );

		#ifdef ENVMAP_MODE_REFLECTION

			vReflect = reflect( cameraToVertex, worldNormal );

		#else

			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );

		#endif

	#endif

#endif
`;var Dn=`
#ifdef USE_FOG

	vFogDepth = - mvPosition.z;

#endif
`;var Tn=`
#ifdef USE_FOG

	varying float vFogDepth;

#endif
`;var Hn=`
#ifdef USE_FOG

	#ifdef FOG_EXP2

		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );

	#else

		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );

	#endif

	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );

#endif
`;var Vn=`
#ifdef USE_FOG

	uniform vec3 fogColor;
	varying float vFogDepth;

	#ifdef FOG_EXP2

		uniform float fogDensity;

	#else

		uniform float fogNear;
		uniform float fogFar;

	#endif

#endif
`;var Nn=`

#ifdef USE_GRADIENTMAP

	uniform sampler2D gradientMap;

#endif

vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {

	// dotNL will be from -1.0 to 1.0
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );

	#ifdef USE_GRADIENTMAP

		return texture2D( gradientMap, coord ).rgb;

	#else

		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );

	#endif

}
`;var Fn=`
#ifdef USE_LIGHTMAP

	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;

	#ifndef PHYSICALLY_CORRECT_LIGHTS

		lightMapIrradiance *= PI;

	#endif

	reflectedLight.indirectDiffuse += lightMapIrradiance;

#endif
`;var Rn=`
#ifdef USE_LIGHTMAP

	uniform sampler2D lightMap;
	uniform float lightMapIntensity;

#endif
`;var Bn=`
vec3 diffuse = vec3( 1.0 );

GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );

GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;

vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif

IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;

vIndirectFront += getAmbientLightIrradiance( ambientLightColor );

vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );

#ifdef DOUBLE_SIDED

	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );

	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );

#endif

#if NUM_POINT_LIGHTS > 0

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {

		getPointLightInfo( pointLights[ i ], geometry, directLight );

		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;

		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;

		#ifdef DOUBLE_SIDED

			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;

		#endif

	}
	#pragma unroll_loop_end

#endif

#if NUM_SPOT_LIGHTS > 0

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {

		getSpotLightInfo( spotLights[ i ], geometry, directLight );

		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;

		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;

		#ifdef DOUBLE_SIDED

			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;

		#endif
	}
	#pragma unroll_loop_end

#endif

#if NUM_DIR_LIGHTS > 0

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {

		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );

		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;

		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;

		#ifdef DOUBLE_SIDED

			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;

		#endif

	}
	#pragma unroll_loop_end

#endif

#if NUM_HEMI_LIGHTS > 0

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {

		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );

		#ifdef DOUBLE_SIDED

			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );

		#endif

	}
	#pragma unroll_loop_end

#endif
`;var Pn=`
uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];

// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere
// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {

	// normal is assumed to have unit length

	float x = normal.x, y = normal.y, z = normal.z;

	// band 0
	vec3 result = shCoefficients[ 0 ] * 0.886227;

	// band 1
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;

	// band 2
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );

	return result;

}

vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {

	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );

	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );

	return irradiance;

}

vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {

	vec3 irradiance = ambientLightColor;

	return irradiance;

}

float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {

	#if defined ( PHYSICALLY_CORRECT_LIGHTS )

		// based upon Frostbite 3 Moving to Physically-based Rendering
		// page 32, equation 26: E[window1]
		// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );

		if ( cutoffDistance > 0.0 ) {

			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );

		}

		return distanceFalloff;

	#else

		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {

			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );

		}

		return 1.0;

	#endif

}

float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {

	return smoothstep( coneCosine, penumbraCosine, angleCosine );

}

#if NUM_DIR_LIGHTS > 0

	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};

	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];

	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {

		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;

	}

#endif


#if NUM_POINT_LIGHTS > 0

	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};

	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];

	// light is an out parameter as having it as a return value caused compiler errors on some devices
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {

		vec3 lVector = pointLight.position - geometry.position;

		light.direction = normalize( lVector );

		float lightDistance = length( lVector );

		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );

	}

#endif


#if NUM_SPOT_LIGHTS > 0

	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};

	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];

	// light is an out parameter as having it as a return value caused compiler errors on some devices
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {

		vec3 lVector = spotLight.position - geometry.position;

		light.direction = normalize( lVector );

		float angleCos = dot( light.direction, spotLight.direction );

		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );

		if ( spotAttenuation > 0.0 ) {

			float lightDistance = length( lVector );

			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );

		} else {

			light.color = vec3( 0.0 );
			light.visible = false;

		}

	}

#endif


#if NUM_RECT_AREA_LIGHTS > 0

	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};

	// Pre-computed values of LinearTransformedCosine approximation of BRDF
	// BRDF approximation Texture is 64x64
	uniform sampler2D ltc_1; // RGBA Float
	uniform sampler2D ltc_2; // RGBA Float

	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];

#endif


#if NUM_HEMI_LIGHTS > 0

	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};

	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];

	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {

		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;

		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );

		return irradiance;

	}

#endif
`;var kn=`
#if defined( USE_ENVMAP )

	#ifdef ENVMAP_MODE_REFRACTION

		uniform float refractionRatio;

	#endif

	vec3 getIBLIrradiance( const in GeometricContext geometry ) {

		#if defined( ENVMAP_TYPE_CUBE_UV )

			vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );

			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );

			return PI * envMapColor.rgb * envMapIntensity;

		#else

			return vec3( 0.0 );

		#endif

	}

	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {

		#if defined( ENVMAP_TYPE_CUBE_UV )

			vec3 reflectVec;

			#ifdef ENVMAP_MODE_REFLECTION

				reflectVec = reflect( - viewDir, normal );

				// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );

			#else

				reflectVec = refract( - viewDir, normal, refractionRatio );

			#endif

			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );

			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );

			return envMapColor.rgb * envMapIntensity;

		#else

			return vec3( 0.0 );

		#endif

	}

#endif
`;var In=`
ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;
`;var Un=`
varying vec3 vViewPosition;

struct ToonMaterial {

	vec3 diffuseColor;

};

void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {

	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon

#define Material_LightProbeLOD( material )	(0)
`;var On=`
BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;
`;var Gn=`
varying vec3 vViewPosition;

struct BlinnPhongMaterial {

	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;

};

void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;

}

void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong

#define Material_LightProbeLOD( material )	(0)
`;var qn=`
PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );

vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );

material.roughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.
material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );

#ifdef IOR

	#ifdef SPECULAR

		float specularIntensityFactor = specularIntensity;
		vec3 specularTintFactor = specularTint;

		#ifdef USE_SPECULARINTENSITYMAP

			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;

		#endif

		#ifdef USE_SPECULARTINTMAP

			specularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;

		#endif

		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );

	#else

		float specularIntensityFactor = 1.0;
		vec3 specularTintFactor = vec3( 1.0 );
		material.specularF90 = 1.0;

	#endif

	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );

#else

	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;

#endif

#ifdef USE_CLEARCOAT

	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;

	#ifdef USE_CLEARCOATMAP

		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;

	#endif

	#ifdef USE_CLEARCOAT_ROUGHNESSMAP

		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;

	#endif

	material.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model
	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );

#endif

#ifdef USE_SHEEN

	material.sheenTint = sheenTint;

#endif
`;var Wn=`
struct PhysicalMaterial {

	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;

	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif

	#ifdef USE_SHEEN
		vec3 sheenTint;
	#endif

};

// temporary
vec3 clearcoatSpecular = vec3( 0.0 );

// Analytical approximation of the DFG LUT, one half of the
// split-sum approximation used in indirect specular lighting.
// via 'environmentBRDF' from "Physically Based Shading on Mobile"
// https://www.unrealengine.com/blog/physically-based-shading-on-mobile
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {

	float dotNV = saturate( dot( normal, viewDir ) );

	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );

	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );

	vec4 r = roughness * c0 + c1;

	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;

	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;

	return fab;

}

vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {

	vec2 fab = DFGApprox( normal, viewDir, roughness );

	return specularColor * fab.x + specularF90 * fab.y;

}

// Fdez-Ag\xFCera's "Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting"
// Approximates multiscattering in order to preserve energy.
// http://www.jcgt.org/published/0008/01/03/
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {

	vec2 fab = DFGApprox( normal, viewDir, roughness );

	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;

	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;

	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21
	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );

	singleScatter += FssEss;
	multiScatter += Fms * Ems;

}

#if NUM_RECT_AREA_LIGHTS > 0

	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {

		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;

		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction
		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;

		vec2 uv = LTC_Uv( normal, viewDir, roughness );

		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );

		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);

		// LTC Fresnel Approximation by Stephen Hill
		// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );

		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );

		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );

	}

#endif

void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {

	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );

	vec3 irradiance = dotNL * directLight.color;

	#ifdef USE_CLEARCOAT

		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );

		vec3 ccIrradiance = dotNLcc * directLight.color;

		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );

	#endif

	#ifdef USE_SHEEN

		reflectedLight.directSpecular += irradiance * BRDF_Sheen( material.roughness, directLight.direction, geometry, material.sheenTint );

	#else

		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );

	#endif

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}

void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {

	#ifdef USE_CLEARCOAT

		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );

	#endif

	// Both indirect specular and indirect diffuse light accumulate here

	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;

	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );

	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );

	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;

	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;

}

#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical

// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {

	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );

}
`;var jn=`
/**
 * This is a template that can be used to light a material, it uses pluggable
 * RenderEquations (RE)for specific lighting scenarios.
 *
 * Instructions for use:
 * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined
 * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???
 * - Create a material parameter that is to be passed as the third parameter to your lighting functions.
 *
 * TODO:
 * - Add area light support.
 * - Add sphere light support.
 * - Add diffuse light probe (irradiance cubemap) support.
 */

GeometricContext geometry;

geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );

#ifdef USE_CLEARCOAT

	geometry.clearcoatNormal = clearcoatNormal;

#endif

IncidentLight directLight;

#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )

	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {

		pointLight = pointLights[ i ];

		getPointLightInfo( pointLight, geometry, directLight );

		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif

		RE_Direct( directLight, geometry, material, reflectedLight );

	}
	#pragma unroll_loop_end

#endif

#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )

	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {

		spotLight = spotLights[ i ];

		getSpotLightInfo( spotLight, geometry, directLight );

		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif

		RE_Direct( directLight, geometry, material, reflectedLight );

	}
	#pragma unroll_loop_end

#endif

#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )

	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {

		directionalLight = directionalLights[ i ];

		getDirectionalLightInfo( directionalLight, geometry, directLight );

		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif

		RE_Direct( directLight, geometry, material, reflectedLight );

	}
	#pragma unroll_loop_end

#endif

#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )

	RectAreaLight rectAreaLight;

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {

		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );

	}
	#pragma unroll_loop_end

#endif

#if defined( RE_IndirectDiffuse )

	vec3 iblIrradiance = vec3( 0.0 );

	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );

	irradiance += getLightProbeIrradiance( lightProbe, geometry );

	#if ( NUM_HEMI_LIGHTS > 0 )

		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {

			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );

		}
		#pragma unroll_loop_end

	#endif

#endif

#if defined( RE_IndirectSpecular )

	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );

#endif
`;var Xn=`
#if defined( RE_IndirectDiffuse )

	#ifdef USE_LIGHTMAP

		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;

		#ifndef PHYSICALLY_CORRECT_LIGHTS

			lightMapIrradiance *= PI;

		#endif

		irradiance += lightMapIrradiance;

	#endif

	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )

		iblIrradiance += getIBLIrradiance( geometry );

	#endif

#endif

#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )

	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );

	#ifdef USE_CLEARCOAT

		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );

	#endif

#endif
`;var Zn=`
#if defined( RE_IndirectDiffuse )

	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );

#endif

#if defined( RE_IndirectSpecular )

	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );

#endif
`;var Yn=`
#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )

	// Doing a strict comparison with == 1.0 can cause noise artifacts
	// on some platforms. See issue #17623.
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;

#endif
`;var $n=`
#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )

	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;

#endif
`;var Kn=`
#ifdef USE_LOGDEPTHBUF

	#ifdef USE_LOGDEPTHBUF_EXT

		varying float vFragDepth;
		varying float vIsPerspective;

	#else

		uniform float logDepthBufFC;

	#endif

#endif
`;var Jn=`
#ifdef USE_LOGDEPTHBUF

	#ifdef USE_LOGDEPTHBUF_EXT

		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );

	#else

		if ( isPerspectiveMatrix( projectionMatrix ) ) {

			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;

			gl_Position.z *= gl_Position.w;

		}

	#endif

#endif
`;var Qn=`
#ifdef USE_MAP

	vec4 texelColor = texture2D( map, vUv );

	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;

#endif
`;var es=`
#ifdef USE_MAP

	uniform sampler2D map;

#endif
`;var ts=`
#if defined( USE_MAP ) || defined( USE_ALPHAMAP )

	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;

#endif

#ifdef USE_MAP

	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );

#endif

#ifdef USE_ALPHAMAP

	diffuseColor.a *= texture2D( alphaMap, uv ).g;

#endif
`;var is=`
#if defined( USE_MAP ) || defined( USE_ALPHAMAP )

	uniform mat3 uvTransform;

#endif

#ifdef USE_MAP

	uniform sampler2D map;

#endif

#ifdef USE_ALPHAMAP

	uniform sampler2D alphaMap;

#endif
`;var as=`
float metalnessFactor = metalness;

#ifdef USE_METALNESSMAP

	vec4 texelMetalness = texture2D( metalnessMap, vUv );

	// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture
	metalnessFactor *= texelMetalness.b;

#endif
`;var rs=`
#ifdef USE_METALNESSMAP

	uniform sampler2D metalnessMap;

#endif
`;var ns=`
#ifdef USE_MORPHNORMALS

	// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:
	// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)
	// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];

#endif
`;var ss=`
#ifdef USE_MORPHTARGETS

	uniform float morphTargetBaseInfluence;

	#ifndef USE_MORPHNORMALS

		uniform float morphTargetInfluences[ 8 ];

	#else

		uniform float morphTargetInfluences[ 4 ];

	#endif

#endif
`;var cs=`
#ifdef USE_MORPHTARGETS

	// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:
	// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)
	// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];

	#ifndef USE_MORPHNORMALS

		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];

	#endif

#endif
`;var os=`
float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;

#ifdef FLAT_SHADED

	// Workaround for Adreno GPUs not able to do dFdx( vViewPosition )

	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );

#else

	vec3 normal = normalize( vNormal );

	#ifdef DOUBLE_SIDED

		normal = normal * faceDirection;

	#endif

	#ifdef USE_TANGENT

		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );

		#ifdef DOUBLE_SIDED

			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;

		#endif

		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )

			mat3 vTBN = mat3( tangent, bitangent, normal );

		#endif

	#endif

#endif

// non perturbed normal for clearcoat among others

vec3 geometryNormal = normal;

`;var ls=`

#ifdef OBJECTSPACE_NORMALMAP

	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals

	#ifdef FLIP_SIDED

		normal = - normal;

	#endif

	#ifdef DOUBLE_SIDED

		normal = normal * faceDirection;

	#endif

	normal = normalize( normalMatrix * normal );

#elif defined( TANGENTSPACE_NORMALMAP )

	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;

	#ifdef USE_TANGENT

		normal = normalize( vTBN * mapN );

	#else

		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );

	#endif

#elif defined( USE_BUMPMAP )

	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );

#endif
`;var us=`
#ifndef FLAT_SHADED

	varying vec3 vNormal;

	#ifdef USE_TANGENT

		varying vec3 vTangent;
		varying vec3 vBitangent;

	#endif

#endif
`;var hs=`
#ifndef FLAT_SHADED

	varying vec3 vNormal;

	#ifdef USE_TANGENT

		varying vec3 vTangent;
		varying vec3 vBitangent;

	#endif

#endif
`;var fs=`
#ifndef FLAT_SHADED // normal is computed with derivatives when FLAT_SHADED

	vNormal = normalize( transformedNormal );

	#ifdef USE_TANGENT

		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );

	#endif

#endif
`;var ds=`
#ifdef USE_NORMALMAP

	uniform sampler2D normalMap;
	uniform vec2 normalScale;

#endif

#ifdef OBJECTSPACE_NORMALMAP

	uniform mat3 normalMatrix;

#endif

#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )

	// Normal Mapping Without Precomputed Tangents
	// http://www.thetenthplanet.de/archives/1180

	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {

		// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988

		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );

		vec3 N = surf_norm; // normalized

		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );

		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;

		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );

		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );

	}

#endif
`;var ps=`
#ifdef USE_CLEARCOAT

	vec3 clearcoatNormal = geometryNormal;

#endif
`;var ms=`
#ifdef USE_CLEARCOAT_NORMALMAP

	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;

	#ifdef USE_TANGENT

		clearcoatNormal = normalize( vTBN * clearcoatMapN );

	#else

		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );

	#endif

#endif
`;var vs=`

#ifdef USE_CLEARCOATMAP

	uniform sampler2D clearcoatMap;

#endif

#ifdef USE_CLEARCOAT_ROUGHNESSMAP

	uniform sampler2D clearcoatRoughnessMap;

#endif

#ifdef USE_CLEARCOAT_NORMALMAP

	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;

#endif
`;var gs=`
#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif

// https://github.com/mrdoob/three.js/pull/22425
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif

gl_FragColor = vec4( outgoingLight, diffuseColor.a );
`;var xs=`
vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}

vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}

const float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)
const float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)

const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );

const float ShiftRight8 = 1. / 256.;

vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8; // tidy overflow
	return r * PackUpscale;
}

float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}

vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}

vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}

// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions

float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}

// NOTE: https://twitter.com/gonnavis/status/1377183786949959682

float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}
`;var Ms=`
#ifdef PREMULTIPLIED_ALPHA

	// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.
	gl_FragColor.rgb *= gl_FragColor.a;

#endif
`;var bs=`
vec4 mvPosition = vec4( transformed, 1.0 );

#ifdef USE_INSTANCING

	mvPosition = instanceMatrix * mvPosition;

#endif

mvPosition = modelViewMatrix * mvPosition;

gl_Position = projectionMatrix * mvPosition;
`;var ys=`
#ifdef DITHERING

	gl_FragColor.rgb = dithering( gl_FragColor.rgb );

#endif
`;var Cs=`
#ifdef DITHERING

	// based on https://www.shadertoy.com/view/MslGR8
	vec3 dithering( vec3 color ) {
		//Calculate grid position
		float grid_position = rand( gl_FragCoord.xy );

		//Shift the individual colors differently, thus making it even harder to see the dithering pattern
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );

		//modify shift acording to grid position.
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );

		//shift the color by dither_shift
		return color + dither_shift_RGB;
	}

#endif
`;var zs=`
float roughnessFactor = roughness;

#ifdef USE_ROUGHNESSMAP

	vec4 texelRoughness = texture2D( roughnessMap, vUv );

	// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture
	roughnessFactor *= texelRoughness.g;

#endif
`;var As=`
#ifdef USE_ROUGHNESSMAP

	uniform sampler2D roughnessMap;

#endif
`;var ws=`
#ifdef USE_SHADOWMAP

	#if NUM_DIR_LIGHT_SHADOWS > 0

		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];

		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};

		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];

	#endif

	#if NUM_SPOT_LIGHT_SHADOWS > 0

		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];

		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};

		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];

	#endif

	#if NUM_POINT_LIGHT_SHADOWS > 0

		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];

		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};

		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];

	#endif

	/*
	#if NUM_RECT_AREA_LIGHTS > 0

		// TODO (abelnation): create uniforms for area light shadows

	#endif
	*/

	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {

		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );

	}

	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {

		return unpackRGBATo2Half( texture2D( shadow, uv ) );

	}

	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){

		float occlusion = 1.0;

		vec2 distribution = texture2DDistribution( shadow, uv );

		float hard_shadow = step( compare , distribution.x ); // Hard Shadow

		if (hard_shadow != 1.0 ) {

			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality
			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed
			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );

		}
		return occlusion;

	}

	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {

		float shadow = 1.0;

		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;

		// if ( something && something ) breaks ATI OpenGL shader compiler
		// if ( all( something, something ) ) using this instead

		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );

		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );

		bool frustumTest = all( frustumTestVec );

		if ( frustumTest ) {

		#if defined( SHADOWMAP_TYPE_PCF )

			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;

			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;

			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );

		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )

			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;

			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;

			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );

		#elif defined( SHADOWMAP_TYPE_VSM )

			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );

		#else // no percentage-closer filtering:

			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );

		#endif

		}

		return shadow;

	}

	// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D
	// vector suitable for 2D texture mapping. This code uses the following layout for the
	// 2D texture:
	//
	// xzXZ
	//  y Y
	//
	// Y - Positive y direction
	// y - Negative y direction
	// X - Positive x direction
	// x - Negative x direction
	// Z - Positive z direction
	// z - Negative z direction
	//
	// Source and test bed:
	// https://gist.github.com/tschw/da10c43c467ce8afd0c4

	vec2 cubeToUV( vec3 v, float texelSizeY ) {

		// Number of texels to avoid at the edge of each square

		vec3 absV = abs( v );

		// Intersect unit cube

		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;

		// Apply scale to avoid seams

		// two texels less per square (one texel will do for NEAREST)
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );

		// Unwrap

		// space: -1 ... 1 range for each square
		//
		// #X##		dim    := ( 4 , 2 )
		//  # #		center := ( 1 , 1 )

		vec2 planar = v.xy;

		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;

		if ( absV.z >= almostOne ) {

			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;

		} else if ( absV.x >= almostOne ) {

			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;

		} else if ( absV.y >= almostOne ) {

			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;

		}

		// Transform to UV space

		// scale := 0.5 / dim
		// translate := ( center + 0.5 ) / dim
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );

	}

	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {

		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );

		// for point lights, the uniform @vShadowCoord is re-purposed to hold
		// the vector from the light to the world-space position of the fragment.
		vec3 lightToPosition = shadowCoord.xyz;

		// dp = normalized distance from light to fragment position
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?
		dp += shadowBias;

		// bd3D = base direction 3D
		vec3 bd3D = normalize( lightToPosition );

		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )

			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;

			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );

		#else // no percentage-closer filtering

			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );

		#endif

	}

#endif
`;var _s=`
#ifdef USE_SHADOWMAP

	#if NUM_DIR_LIGHT_SHADOWS > 0

		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];

		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};

		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];

	#endif

	#if NUM_SPOT_LIGHT_SHADOWS > 0

		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];

		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};

		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];

	#endif

	#if NUM_POINT_LIGHT_SHADOWS > 0

		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];

		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};

		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];

	#endif

	/*
	#if NUM_RECT_AREA_LIGHTS > 0

		// TODO (abelnation): uniforms for area light shadows

	#endif
	*/

#endif
`;var Ss=`
#ifdef USE_SHADOWMAP

	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0

		// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;

	#endif

	#if NUM_DIR_LIGHT_SHADOWS > 0

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {

		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;

	}
	#pragma unroll_loop_end

	#endif

	#if NUM_SPOT_LIGHT_SHADOWS > 0

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {

		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;

	}
	#pragma unroll_loop_end

	#endif

	#if NUM_POINT_LIGHT_SHADOWS > 0

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {

		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;

	}
	#pragma unroll_loop_end

	#endif

	/*
	#if NUM_RECT_AREA_LIGHTS > 0

		// TODO (abelnation): update vAreaShadowCoord with area light info

	#endif
	*/

#endif
`;var Ls=`
float getShadowMask() {

	float shadow = 1.0;

	#ifdef USE_SHADOWMAP

	#if NUM_DIR_LIGHT_SHADOWS > 0

	DirectionalLightShadow directionalLight;

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {

		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;

	}
	#pragma unroll_loop_end

	#endif

	#if NUM_SPOT_LIGHT_SHADOWS > 0

	SpotLightShadow spotLight;

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {

		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;

	}
	#pragma unroll_loop_end

	#endif

	#if NUM_POINT_LIGHT_SHADOWS > 0

	PointLightShadow pointLight;

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {

		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;

	}
	#pragma unroll_loop_end

	#endif

	/*
	#if NUM_RECT_AREA_LIGHTS > 0

		// TODO (abelnation): update shadow for Area light

	#endif
	*/

	#endif

	return shadow;

}
`;var Es=`
#ifdef USE_SKINNING

	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );

#endif
`;var Ds=`
#ifdef USE_SKINNING

	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;

	#ifdef BONE_TEXTURE

		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;

		mat4 getBoneMatrix( const in float i ) {

			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );

			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );

			y = dy * ( y + 0.5 );

			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );

			mat4 bone = mat4( v1, v2, v3, v4 );

			return bone;

		}

	#else

		uniform mat4 boneMatrices[ MAX_BONES ];

		mat4 getBoneMatrix( const in float i ) {

			mat4 bone = boneMatrices[ int(i) ];
			return bone;

		}

	#endif

#endif
`;var Ts=`
#ifdef USE_SKINNING

	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );

	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;

	transformed = ( bindMatrixInverse * skinned ).xyz;

#endif
`;var Hs=`
#ifdef USE_SKINNING

	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;

	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;

	#ifdef USE_TANGENT

		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;

	#endif

#endif
`;var Vs=`
float specularStrength;

#ifdef USE_SPECULARMAP

	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;

#else

	specularStrength = 1.0;

#endif
`;var Ns=`
#ifdef USE_SPECULARMAP

	uniform sampler2D specularMap;

#endif
`;var Fs=`
#if defined( TONE_MAPPING )

	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );

#endif
`;var Rs=`
#ifndef saturate
// <common> may have defined saturate() already
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif

uniform float toneMappingExposure;

// exposure only
vec3 LinearToneMapping( vec3 color ) {

	return toneMappingExposure * color;

}

// source: https://www.cs.utah.edu/~reinhard/cdrom/
vec3 ReinhardToneMapping( vec3 color ) {

	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );

}

// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/
vec3 OptimizedCineonToneMapping( vec3 color ) {

	// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );

}

// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs
vec3 RRTAndODTFit( vec3 v ) {

	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;

}

// this implementation of ACES is modified to accommodate a brighter viewing environment.
// the scale factor of 1/0.6 is subjective. see discussion in #19621.

vec3 ACESFilmicToneMapping( vec3 color ) {

	// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ), // transposed from source
		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);

	// ODT_SAT => XYZ => D60_2_D65 => sRGB
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ), // transposed from source
		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);

	color *= toneMappingExposure / 0.6;

	color = ACESInputMat * color;

	// Apply RRT and ODT
	color = RRTAndODTFit( color );

	color = ACESOutputMat * color;

	// Clamp to [0, 1]
	return saturate( color );

}

vec3 CustomToneMapping( vec3 color ) { return color; }
`;var Bs=`
#ifdef USE_TRANSMISSION

	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;

	#ifdef USE_TRANSMISSIONMAP

		transmissionFactor *= texture2D( transmissionMap, vUv ).r;

	#endif

	#ifdef USE_THICKNESSMAP

		thicknessFactor *= texture2D( thicknessMap, vUv ).g;

	#endif

	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );

	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationTint, attenuationDistance );

	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = transmission.a;
#endif
`;var Ps=`
#ifdef USE_TRANSMISSION

	// Transmission code is based on glTF-Sampler-Viewer
	// https://github.com/KhronosGroup/glTF-Sample-Viewer

	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationTint;

	#ifdef USE_TRANSMISSIONMAP

		uniform sampler2D transmissionMap;

	#endif

	#ifdef USE_THICKNESSMAP

		uniform sampler2D thicknessMap;

	#endif

	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;

	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;

	varying vec3 vWorldPosition;

	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {

		// Direction of refracted light.
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );

		// Compute rotation-independant scaling of the model matrix.
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );

		// The thickness is specified in local space.
		return normalize( refractionVector ) * thickness * modelScale;

	}

	float applyIorToRoughness( float roughness, float ior ) {

		// Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and
		// an IOR of 1.5 results in the default amount of microfacet refraction.
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );

	}

	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {

		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );

		#ifdef TEXTURE_LOD_EXT

			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );

		#else

			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );

		#endif

	}

	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {

		if ( attenuationDistance == 0.0 ) {

			// Attenuation distance is +\u221E (which we indicate by zero), i.e. the transmitted color is not attenuated at all.
			return radiance;

		} else {

			// Compute light attenuation using Beer's law.
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law
			return transmittance * radiance;

		}

	}

	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {

		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;

		// Project refracted vector on the framebuffer, while mapping to normalized device coordinates.
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;

		// Sample framebuffer to get pixel the refracted ray hits.
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );

		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );

		// Get the specular component.
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );

		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );

	}
#endif
`;var ks=`
#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )

	varying vec2 vUv;

#endif
`;var Is=`
#ifdef USE_UV

	#ifdef UVS_VERTEX_ONLY

		vec2 vUv;

	#else

		varying vec2 vUv;

	#endif

	uniform mat3 uvTransform;

#endif
`;var Us=`
#ifdef USE_UV

	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;

#endif
`;var Os=`
#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )

	varying vec2 vUv2;

#endif
`;var Gs=`
#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )

	attribute vec2 uv2;
	varying vec2 vUv2;

	uniform mat3 uv2Transform;

#endif
`;var qs=`
#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )

	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;

#endif
`;var Ws=`
#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )

	vec4 worldPosition = vec4( transformed, 1.0 );

	#ifdef USE_INSTANCING

		worldPosition = instanceMatrix * worldPosition;

	#endif

	worldPosition = modelMatrix * worldPosition;

#endif
`;var js=`
uniform sampler2D t2D;

varying vec2 vUv;

void main() {

	vec4 texColor = texture2D( t2D, vUv );

	gl_FragColor = mapTexelToLinear( texColor );

	#include <tonemapping_fragment>
	#include <encodings_fragment>

}
`;var Xs=`
varying vec2 vUv;
uniform mat3 uvTransform;

void main() {

	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;

	gl_Position = vec4( position.xy, 1.0, 1.0 );

}
`;var Zs=`
#include <envmap_common_pars_fragment>
uniform float opacity;

varying vec3 vWorldDirection;

#include <cube_uv_reflection_fragment>

void main() {

	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>

	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;

	#include <tonemapping_fragment>
	#include <encodings_fragment>

}
`;var Ys=`
varying vec3 vWorldDirection;

#include <common>

void main() {

	vWorldDirection = transformDirection( position, modelMatrix );

	#include <begin_vertex>
	#include <project_vertex>

	gl_Position.z = gl_Position.w; // set z to camera.far

}
`;var $s=`
#if DEPTH_PACKING == 3200

	uniform float opacity;

#endif

#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

varying vec2 vHighPrecisionZW;

void main() {

	#include <clipping_planes_fragment>

	vec4 diffuseColor = vec4( 1.0 );

	#if DEPTH_PACKING == 3200

		diffuseColor.a = opacity;

	#endif

	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>

	#include <logdepthbuf_fragment>

	// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;

	#if DEPTH_PACKING == 3200

		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );

	#elif DEPTH_PACKING == 3201

		gl_FragColor = packDepthToRGBA( fragCoordZ );

	#endif

}
`;var Ks=`
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.
// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for
// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.
varying vec2 vHighPrecisionZW;

void main() {

	#include <uv_vertex>

	#include <skinbase_vertex>

	#ifdef USE_DISPLACEMENTMAP

		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>

	#endif

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	vHighPrecisionZW = gl_Position.zw;

}
`;var Js=`
#define DISTANCE

uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;

#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>

void main () {

	#include <clipping_planes_fragment>

	vec4 diffuseColor = vec4( 1.0 );

	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>

	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist ); // clamp to [ 0, 1 ]

	gl_FragColor = packDepthToRGBA( dist );

}
`;var Qs=`
#define DISTANCE

varying vec3 vWorldPosition;

#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>

	#include <skinbase_vertex>

	#ifdef USE_DISPLACEMENTMAP

		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>

	#endif

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>

	vWorldPosition = worldPosition.xyz;

}
`;var e5=`
uniform sampler2D tEquirect;

varying vec3 vWorldDirection;

#include <common>

void main() {

	vec3 direction = normalize( vWorldDirection );

	vec2 sampleUV = equirectUv( direction );

	vec4 texColor = texture2D( tEquirect, sampleUV );

	gl_FragColor = mapTexelToLinear( texColor );

	#include <tonemapping_fragment>
	#include <encodings_fragment>

}
`;var t5=`
varying vec3 vWorldDirection;

#include <common>

void main() {

	vWorldDirection = transformDirection( position, modelMatrix );

	#include <begin_vertex>
	#include <project_vertex>

}
`;var i5=`
uniform vec3 diffuse;
uniform float opacity;

uniform float dashSize;
uniform float totalSize;

varying float vLineDistance;

#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>

	if ( mod( vLineDistance, totalSize ) > dashSize ) {

		discard;

	}

	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );

	#include <logdepthbuf_fragment>
	#include <color_fragment>

	outgoingLight = diffuseColor.rgb; // simple shader

	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>

}
`;var a5=`
uniform float scale;
attribute float lineDistance;

varying float vLineDistance;

#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	vLineDistance = scale * lineDistance;

	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>

}
`;var r5=`
uniform vec3 diffuse;
uniform float opacity;

#ifndef FLAT_SHADED

	varying vec3 vNormal;

#endif

#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>

	vec4 diffuseColor = vec4( diffuse, opacity );

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>

	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );

	// accumulation (baked indirect lighting only)
	#ifdef USE_LIGHTMAP

		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;

	#else

		reflectedLight.indirectDiffuse += vec3( 1.0 );

	#endif

	// modulation
	#include <aomap_fragment>

	reflectedLight.indirectDiffuse *= diffuseColor.rgb;

	vec3 outgoingLight = reflectedLight.indirectDiffuse;

	#include <envmap_fragment>

	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`;var n5=`
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>

	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )

		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>

	#endif

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>

}
`;var s5=`
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;

varying vec3 vLightFront;
varying vec3 vIndirectFront;

#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif


#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>

	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>

	// accumulation

	#ifdef DOUBLE_SIDED

		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;

	#else

		reflectedLight.indirectDiffuse += vIndirectFront;

	#endif

	#include <lightmap_fragment>

	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );

	#ifdef DOUBLE_SIDED

		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;

	#else

		reflectedLight.directDiffuse = vLightFront;

	#endif

	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();

	// modulation

	#include <aomap_fragment>

	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;

	#include <envmap_fragment>

	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`;var c5=`
#define LAMBERT

varying vec3 vLightFront;
varying vec3 vIndirectFront;

#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif

#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`;var o5=`
#define MATCAP

uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;

varying vec3 vViewPosition;

#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>

	vec4 diffuseColor = vec4( diffuse, opacity );

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>

	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks

	#ifdef USE_MATCAP

		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );

	#else

		vec4 matcapColor = vec4( 1.0 );

	#endif

	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;

	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`;var l5=`
#define MATCAP

varying vec3 vViewPosition;

#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>

#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>

	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>

	vViewPosition = - mvPosition.xyz;

}
`;var u5=`
#define NORMAL

uniform float opacity;

#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )

	varying vec3 vViewPosition;

#endif

#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>

	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );

}
`;var h5=`
#define NORMAL

#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )

	varying vec3 vViewPosition;

#endif

#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )

	vViewPosition = - mvPosition.xyz;

#endif

}
`;var f5=`
#define PHONG

uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;

#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>

	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>

	// accumulation
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>

	// modulation
	#include <aomap_fragment>

	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;

	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`;var d5=`
#define PHONG

varying vec3 vViewPosition;

#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	vViewPosition = - mvPosition.xyz;

	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>

}
`;var p5=`
#define STANDARD

#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif

uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;

#ifdef IOR
	uniform float ior;
#endif

#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularTint;

	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif

	#ifdef USE_SPECULARTINTMAP
		uniform sampler2D specularTintMap;
	#endif
#endif

#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif

#ifdef USE_SHEEN
	uniform vec3 sheenTint;
#endif

varying vec3 vViewPosition;

#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>

	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>

	// accumulation
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>

	// modulation
	#include <aomap_fragment>

	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;

	#include <transmission_fragment>

	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;

	#ifdef USE_CLEARCOAT

		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );

		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );

		outgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;

	#endif

	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`;var m5=`
#define STANDARD

varying vec3 vViewPosition;

#ifdef USE_TRANSMISSION

	varying vec3 vWorldPosition;

#endif

#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	vViewPosition = - mvPosition.xyz;

	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>

#ifdef USE_TRANSMISSION

	vWorldPosition = worldPosition.xyz;

#endif
}
`;var v5=`
#define TOON

uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;

#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>

	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>

	// accumulation
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>

	// modulation
	#include <aomap_fragment>

	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;

	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`;var g5=`
#define TOON

varying vec3 vViewPosition;

#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	vViewPosition = - mvPosition.xyz;

	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>

}
`;var x5=`
uniform vec3 diffuse;
uniform float opacity;

#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>

	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );

	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>

	outgoingLight = diffuseColor.rgb;

	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>

}
`;var M5=`
uniform float size;
uniform float scale;

#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>

	gl_PointSize = size;

	#ifdef USE_SIZEATTENUATION

		bool isPerspective = isPerspectiveMatrix( projectionMatrix );

		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );

	#endif

	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>

}
`;var b5=`
uniform vec3 color;
uniform float opacity;

#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>

void main() {

	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );

	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>

}
`;var y5=`
#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>

void main() {

	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>

	#include <shadowmap_vertex>
	#include <fog_vertex>

}
`;var C5=`
uniform vec3 diffuse;
uniform float opacity;

#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	#include <clipping_planes_fragment>

	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>

	outgoingLight = diffuseColor.rgb;

	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>

}
`;var z5=`
uniform float rotation;
uniform vec2 center;

#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>

	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );

	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

	#ifndef USE_SIZEATTENUATION

		bool isPerspective = isPerspectiveMatrix( projectionMatrix );

		if ( isPerspective ) scale *= - mvPosition.z;

	#endif

	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;

	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;

	mvPosition.xy += rotatedPosition;

	gl_Position = projectionMatrix * mvPosition;

	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>

}
`;var w1={alphamap_fragment:Kr,alphamap_pars_fragment:Jr,alphatest_fragment:Qr,alphatest_pars_fragment:en,aomap_fragment:tn,aomap_pars_fragment:an,begin_vertex:rn,beginnormal_vertex:nn,bsdfs:sn,bumpmap_pars_fragment:cn,clipping_planes_fragment:on,clipping_planes_pars_fragment:ln,clipping_planes_pars_vertex:un,clipping_planes_vertex:hn,color_fragment:fn,color_pars_fragment:dn,color_pars_vertex:pn,color_vertex:mn,common:vn,cube_uv_reflection_fragment:gn,defaultnormal_vertex:xn,displacementmap_pars_vertex:Mn,displacementmap_vertex:bn,emissivemap_fragment:yn,emissivemap_pars_fragment:Cn,encodings_fragment:zn,encodings_pars_fragment:An,envmap_fragment:wn,envmap_common_pars_fragment:_n,envmap_pars_fragment:Sn,envmap_pars_vertex:Ln,envmap_physical_pars_fragment:kn,envmap_vertex:En,fog_vertex:Dn,fog_pars_vertex:Tn,fog_fragment:Hn,fog_pars_fragment:Vn,gradientmap_pars_fragment:Nn,lightmap_fragment:Fn,lightmap_pars_fragment:Rn,lights_lambert_vertex:Bn,lights_pars_begin:Pn,lights_toon_fragment:In,lights_toon_pars_fragment:Un,lights_phong_fragment:On,lights_phong_pars_fragment:Gn,lights_physical_fragment:qn,lights_physical_pars_fragment:Wn,lights_fragment_begin:jn,lights_fragment_maps:Xn,lights_fragment_end:Zn,logdepthbuf_fragment:Yn,logdepthbuf_pars_fragment:$n,logdepthbuf_pars_vertex:Kn,logdepthbuf_vertex:Jn,map_fragment:Qn,map_pars_fragment:es,map_particle_fragment:ts,map_particle_pars_fragment:is,metalnessmap_fragment:as,metalnessmap_pars_fragment:rs,morphnormal_vertex:ns,morphtarget_pars_vertex:ss,morphtarget_vertex:cs,normal_fragment_begin:os,normal_fragment_maps:ls,normal_pars_fragment:us,normal_pars_vertex:hs,normal_vertex:fs,normalmap_pars_fragment:ds,clearcoat_normal_fragment_begin:ps,clearcoat_normal_fragment_maps:ms,clearcoat_pars_fragment:vs,output_fragment:gs,packing:xs,premultiplied_alpha_fragment:Ms,project_vertex:bs,dithering_fragment:ys,dithering_pars_fragment:Cs,roughnessmap_fragment:zs,roughnessmap_pars_fragment:As,shadowmap_pars_fragment:ws,shadowmap_pars_vertex:_s,shadowmap_vertex:Ss,shadowmask_pars_fragment:Ls,skinbase_vertex:Es,skinning_pars_vertex:Ds,skinning_vertex:Ts,skinnormal_vertex:Hs,specularmap_fragment:Vs,specularmap_pars_fragment:Ns,tonemapping_fragment:Fs,tonemapping_pars_fragment:Rs,transmission_fragment:Bs,transmission_pars_fragment:Ps,uv_pars_fragment:ks,uv_pars_vertex:Is,uv_vertex:Us,uv2_pars_fragment:Os,uv2_pars_vertex:Gs,uv2_vertex:qs,worldpos_vertex:Ws,background_frag:js,background_vert:Xs,cube_frag:Zs,cube_vert:Ys,depth_frag:$s,depth_vert:Ks,distanceRGBA_frag:Js,distanceRGBA_vert:Qs,equirect_frag:e5,equirect_vert:t5,linedashed_frag:i5,linedashed_vert:a5,meshbasic_frag:r5,meshbasic_vert:n5,meshlambert_frag:s5,meshlambert_vert:c5,meshmatcap_frag:o5,meshmatcap_vert:l5,meshnormal_frag:u5,meshnormal_vert:h5,meshphong_frag:f5,meshphong_vert:d5,meshphysical_frag:p5,meshphysical_vert:m5,meshtoon_frag:v5,meshtoon_vert:g5,points_frag:x5,points_vert:M5,shadow_frag:b5,shadow_vert:y5,sprite_frag:C5,sprite_vert:z5};var i1={common:{diffuse:{value:new b1(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new J1},uv2Transform:{value:new J1},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new A1(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new b1(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new b1(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new J1}},sprite:{diffuse:{value:new b1(16777215)},opacity:{value:1},center:{value:new A1(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new J1}}};var N2={basic:{uniforms:o2([i1.common,i1.specularmap,i1.envmap,i1.aomap,i1.lightmap,i1.fog]),vertexShader:w1.meshbasic_vert,fragmentShader:w1.meshbasic_frag},lambert:{uniforms:o2([i1.common,i1.specularmap,i1.envmap,i1.aomap,i1.lightmap,i1.emissivemap,i1.fog,i1.lights,{emissive:{value:new b1(0)}}]),vertexShader:w1.meshlambert_vert,fragmentShader:w1.meshlambert_frag},phong:{uniforms:o2([i1.common,i1.specularmap,i1.envmap,i1.aomap,i1.lightmap,i1.emissivemap,i1.bumpmap,i1.normalmap,i1.displacementmap,i1.fog,i1.lights,{emissive:{value:new b1(0)},specular:{value:new b1(1118481)},shininess:{value:30}}]),vertexShader:w1.meshphong_vert,fragmentShader:w1.meshphong_frag},standard:{uniforms:o2([i1.common,i1.envmap,i1.aomap,i1.lightmap,i1.emissivemap,i1.bumpmap,i1.normalmap,i1.displacementmap,i1.roughnessmap,i1.metalnessmap,i1.fog,i1.lights,{emissive:{value:new b1(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:w1.meshphysical_vert,fragmentShader:w1.meshphysical_frag},toon:{uniforms:o2([i1.common,i1.aomap,i1.lightmap,i1.emissivemap,i1.bumpmap,i1.normalmap,i1.displacementmap,i1.gradientmap,i1.fog,i1.lights,{emissive:{value:new b1(0)}}]),vertexShader:w1.meshtoon_vert,fragmentShader:w1.meshtoon_frag},matcap:{uniforms:o2([i1.common,i1.bumpmap,i1.normalmap,i1.displacementmap,i1.fog,{matcap:{value:null}}]),vertexShader:w1.meshmatcap_vert,fragmentShader:w1.meshmatcap_frag},points:{uniforms:o2([i1.points,i1.fog]),vertexShader:w1.points_vert,fragmentShader:w1.points_frag},dashed:{uniforms:o2([i1.common,i1.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:w1.linedashed_vert,fragmentShader:w1.linedashed_frag},depth:{uniforms:o2([i1.common,i1.displacementmap]),vertexShader:w1.depth_vert,fragmentShader:w1.depth_frag},normal:{uniforms:o2([i1.common,i1.bumpmap,i1.normalmap,i1.displacementmap,{opacity:{value:1}}]),vertexShader:w1.meshnormal_vert,fragmentShader:w1.meshnormal_frag},sprite:{uniforms:o2([i1.sprite,i1.fog]),vertexShader:w1.sprite_vert,fragmentShader:w1.sprite_frag},background:{uniforms:{uvTransform:{value:new J1},t2D:{value:null}},vertexShader:w1.background_vert,fragmentShader:w1.background_frag},cube:{uniforms:o2([i1.envmap,{opacity:{value:1}}]),vertexShader:w1.cube_vert,fragmentShader:w1.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:w1.equirect_vert,fragmentShader:w1.equirect_frag},distanceRGBA:{uniforms:o2([i1.common,i1.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:w1.distanceRGBA_vert,fragmentShader:w1.distanceRGBA_frag},shadow:{uniforms:o2([i1.lights,i1.fog,{color:{value:new b1(0)},opacity:{value:1}}]),vertexShader:w1.shadow_vert,fragmentShader:w1.shadow_frag}};N2.physical={uniforms:o2([N2.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new A1(1,1)},clearcoatNormalMap:{value:null},sheenTint:{value:new b1(0)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new A1},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new b1(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new b1(1,1,1)},specularTintMap:{value:null}}]),vertexShader:w1.meshphysical_vert,fragmentShader:w1.meshphysical_frag};function A5(n,e,t,i,a){let r=new b1(0),s=0,c,o,l=null,h=0,f=null;function u(v,g){let x=!1,p=g.isScene===!0?g.background:null;p&&p.isTexture&&(p=e.get(p));let d=n.xr,C=d.getSession&&d.getSession();C&&C.environmentBlendMode==="additive"&&(p=null),p===null?m(r,s):p&&p.isColor&&(m(p,1),x=!0),(n.autoClear||x)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),p&&(p.isCubeTexture||p.mapping===Ge)?(o===void 0&&(o=new r2(new He(1,1,1),new X2({name:"BackgroundCubeMaterial",uniforms:Ve(N2.cube.uniforms),vertexShader:N2.cube.vertexShader,fragmentShader:N2.cube.fragmentShader,side:B1,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(b,A,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(o)),o.material.uniforms.envMap.value=p,o.material.uniforms.flipEnvMap.value=p.isCubeTexture&&p.isRenderTargetTexture===!1?-1:1,(l!==p||h!==p.version||f!==n.toneMapping)&&(o.material.needsUpdate=!0,l=p,h=p.version,f=n.toneMapping),v.unshift(o,o.geometry,o.material,0,0,null)):p&&p.isTexture&&(c===void 0&&(c=new r2(new g4(2,2),new X2({name:"BackgroundMaterial",uniforms:Ve(N2.background.uniforms),vertexShader:N2.background.vertexShader,fragmentShader:N2.background.fragmentShader,side:ze,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=p,p.matrixAutoUpdate===!0&&p.updateMatrix(),c.material.uniforms.uvTransform.value.copy(p.matrix),(l!==p||h!==p.version||f!==n.toneMapping)&&(c.material.needsUpdate=!0,l=p,h=p.version,f=n.toneMapping),v.unshift(c,c.geometry,c.material,0,0,null))}function m(v,g){t.buffers.color.setClear(v.r,v.g,v.b,g,a)}return{getClearColor:function(){return r},setClearColor:function(v,g=1){r.set(v),s=g,m(r,s)},getClearAlpha:function(){return s},setClearAlpha:function(v){s=v,m(r,s)},render:u}}function w5(n,e,t,i){let a=n.getParameter(n.MAX_VERTEX_ATTRIBS),r=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||r!==null,c={},o=g(null),l=o;function h(_,V,R,T,D){let I=!1;if(s){let W=v(T,R,V);l!==W&&(l=W,u(l.object)),I=x(T,D),I&&p(T,D)}else{let W=V.wireframe===!0;(l.geometry!==T.id||l.program!==R.id||l.wireframe!==W)&&(l.geometry=T.id,l.program=R.id,l.wireframe=W,I=!0)}_.isInstancedMesh===!0&&(I=!0),D!==null&&t.update(D,n.ELEMENT_ARRAY_BUFFER),I&&(y(_,V,R,T),D!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.get(D).buffer))}function f(){return i.isWebGL2?n.createVertexArray():r.createVertexArrayOES()}function u(_){return i.isWebGL2?n.bindVertexArray(_):r.bindVertexArrayOES(_)}function m(_){return i.isWebGL2?n.deleteVertexArray(_):r.deleteVertexArrayOES(_)}function v(_,V,R){let T=R.wireframe===!0,D=c[_.id];D===void 0&&(D={},c[_.id]=D);let I=D[V.id];I===void 0&&(I={},D[V.id]=I);let W=I[T];return W===void 0&&(W=g(f()),I[T]=W),W}function g(_){let V=[],R=[],T=[];for(let D=0;D<a;D++)V[D]=0,R[D]=0,T[D]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:V,enabledAttributes:R,attributeDivisors:T,object:_,attributes:{},index:null}}function x(_,V){let R=l.attributes,T=_.attributes,D=0;for(let I in T){let W=R[I],$=T[I];if(W===void 0||W.attribute!==$||W.data!==$.data)return!0;D++}return l.attributesNum!==D||l.index!==V}function p(_,V){let R={},T=_.attributes,D=0;for(let I in T){let W=T[I],$={};$.attribute=W,W.data&&($.data=W.data),R[I]=$,D++}l.attributes=R,l.attributesNum=D,l.index=V}function d(){let _=l.newAttributes;for(let V=0,R=_.length;V<R;V++)_[V]=0}function C(_){b(_,0)}function b(_,V){let R=l.newAttributes,T=l.enabledAttributes,D=l.attributeDivisors;R[_]=1,T[_]===0&&(n.enableVertexAttribArray(_),T[_]=1),D[_]!==V&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](_,V),D[_]=V)}function A(){let _=l.newAttributes,V=l.enabledAttributes;for(let R=0,T=V.length;R<T;R++)V[R]!==_[R]&&(n.disableVertexAttribArray(R),V[R]=0)}function L(_,V,R,T,D,I){i.isWebGL2===!0&&(R===n.INT||R===n.UNSIGNED_INT)?n.vertexAttribIPointer(_,V,R,D,I):n.vertexAttribPointer(_,V,R,T,D,I)}function y(_,V,R,T){if(i.isWebGL2===!1&&(_.isInstancedMesh||T.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;d();let D=T.attributes,I=R.getAttributes(),W=V.defaultAttributeValues;for(let $ in I){let J=I[$];if(J.location>=0){let Z=D[$];if(Z===void 0&&($==="instanceMatrix"&&_.instanceMatrix&&(Z=_.instanceMatrix),$==="instanceColor"&&_.instanceColor&&(Z=_.instanceColor)),Z!==void 0){let j=Z.normalized,Y=Z.itemSize,e1=t.get(Z);if(e1===void 0)continue;let N=e1.buffer,u1=e1.type,g1=e1.bytesPerElement;if(Z.isInterleavedBufferAttribute){let s1=Z.data,h1=s1.stride,L1=Z.offset;if(s1&&s1.isInstancedInterleavedBuffer){for(let v1=0;v1<J.locationSize;v1++)b(J.location+v1,s1.meshPerAttribute);_.isInstancedMesh!==!0&&T._maxInstanceCount===void 0&&(T._maxInstanceCount=s1.meshPerAttribute*s1.count)}else for(let v1=0;v1<J.locationSize;v1++)C(J.location+v1);n.bindBuffer(n.ARRAY_BUFFER,N);for(let v1=0;v1<J.locationSize;v1++)L(J.location+v1,Y/J.locationSize,u1,j,h1*g1,(L1+Y/J.locationSize*v1)*g1)}else{if(Z.isInstancedBufferAttribute){for(let s1=0;s1<J.locationSize;s1++)b(J.location+s1,Z.meshPerAttribute);_.isInstancedMesh!==!0&&T._maxInstanceCount===void 0&&(T._maxInstanceCount=Z.meshPerAttribute*Z.count)}else for(let s1=0;s1<J.locationSize;s1++)C(J.location+s1);n.bindBuffer(n.ARRAY_BUFFER,N);for(let s1=0;s1<J.locationSize;s1++)L(J.location+s1,Y/J.locationSize,u1,j,Y*g1,Y/J.locationSize*s1*g1)}}else if(W!==void 0){let j=W[$];if(j!==void 0)switch(j.length){case 2:n.vertexAttrib2fv(J.location,j);break;case 3:n.vertexAttrib3fv(J.location,j);break;case 4:n.vertexAttrib4fv(J.location,j);break;default:n.vertexAttrib1fv(J.location,j)}}}}A()}function z(){S();for(let _ in c){let V=c[_];for(let R in V){let T=V[R];for(let D in T)m(T[D].object),delete T[D];delete V[R]}delete c[_]}}function B(_){if(c[_.id]===void 0)return;let V=c[_.id];for(let R in V){let T=V[R];for(let D in T)m(T[D].object),delete T[D];delete V[R]}delete c[_.id]}function H(_){for(let V in c){let R=c[V];if(R[_.id]===void 0)continue;let T=R[_.id];for(let D in T)m(T[D].object),delete T[D];delete R[_.id]}}function S(){G(),l!==o&&(l=o,u(l.object))}function G(){o.geometry=null,o.program=null,o.wireframe=!1}return{setup:h,reset:S,resetDefaultState:G,dispose:z,releaseStatesOfGeometry:B,releaseStatesOfProgram:H,initAttributes:d,enableAttribute:C,disableUnusedAttributes:A}}function _5(n,e,t,i){let a=i.isWebGL2,r;function s(l){r=l}function c(l,h){n.drawArrays(r,l,h),t.update(h,r,1)}function o(l,h,f){if(f===0)return;let u,m;if(a)u=n,m="drawArraysInstanced";else if(u=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",u===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[m](r,l,h,f),t.update(h,r,f)}this.setMode=s,this.render=c,this.renderInstances=o}function S5(n,e,t){let i;function a(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){let y=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(y.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function r(y){if(y==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";y="mediump"}return y==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let s=typeof WebGL2RenderingContext!="undefined"&&n instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&n instanceof WebGL2ComputeRenderingContext,c=t.precision!==void 0?t.precision:"highp",o=r(c);o!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",o,"instead."),c=o);let l=s||e.has("WEBGL_draw_buffers"),h=t.logarithmicDepthBuffer===!0,f=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),u=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=n.getParameter(n.MAX_TEXTURE_SIZE),v=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),g=n.getParameter(n.MAX_VERTEX_ATTRIBS),x=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),p=n.getParameter(n.MAX_VARYING_VECTORS),d=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),C=u>0,b=s||e.has("OES_texture_float"),A=C&&b,L=s?n.getParameter(n.MAX_SAMPLES):0;return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:a,getMaxPrecision:r,precision:c,logarithmicDepthBuffer:h,maxTextures:f,maxVertexTextures:u,maxTextureSize:m,maxCubemapSize:v,maxAttributes:g,maxVertexUniforms:x,maxVaryings:p,maxFragmentUniforms:d,vertexTextures:C,floatFragmentTextures:b,floatVertexTextures:A,maxSamples:L}}function L5(n){let e=this,t=null,i=0,a=!1,r=!1,s=new j2,c=new J1,o={value:null,needsUpdate:!1};this.uniform=o,this.numPlanes=0,this.numIntersection=0,this.init=function(f,u,m){let v=f.length!==0||u||i!==0||a;return a=u,t=h(f,m,0),i=f.length,v},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1,l()},this.setState=function(f,u,m){let v=f.clippingPlanes,g=f.clipIntersection,x=f.clipShadows,p=n.get(f);if(!a||v===null||v.length===0||r&&!x)r?h(null):l();else{let d=r?0:i,C=d*4,b=p.clippingState||null;o.value=b,b=h(v,u,C,m);for(let A=0;A!==C;++A)b[A]=t[A];p.clippingState=b,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=d}};function l(){o.value!==t&&(o.value=t,o.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(f,u,m,v){let g=f!==null?f.length:0,x=null;if(g!==0){if(x=o.value,v!==!0||x===null){let p=m+g*4,d=u.matrixWorldInverse;c.getNormalMatrix(d),(x===null||x.length<p)&&(x=new Float32Array(p));for(let C=0,b=m;C!==g;++C,b+=4)s.copy(f[C]).applyMatrix4(d,c),s.normal.toArray(x,b),x[b+3]=s.constant}o.value=x,o.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,x}}var A2=class extends _2{constructor(e,t,i={}){super();this.width=e,this.height=t,this.depth=1,this.scissor=new O1(0,0,e,t),this.scissorTest=!1,this.viewport=new O1(0,0,e,t),this.texture=new Y1(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:v2,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}};A2.prototype.isWebGLRenderTarget=!0;var O4=class extends G1{constructor(){super();this.type="Camera",this.matrixWorldInverse=new P1,this.projectionMatrix=new P1,this.projectionMatrixInverse=new P1}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};O4.prototype.isCamera=!0;var $1=class extends O4{constructor(e=50,t=1,i=.1,a=2e3){super();this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=a,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=ot*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(t6*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ot*2*Math.atan(Math.tan(t6*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,a,r,s){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=a,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(t6*.5*this.fov)/this.zoom,i=2*t,a=this.aspect*i,r=-.5*a,s=this.view;if(this.view!==null&&this.view.enabled){let o=s.fullWidth,l=s.fullHeight;r+=s.offsetX*a/o,t-=s.offsetY*i/l,a*=s.width/o,i*=s.height/l}let c=this.filmOffset;c!==0&&(r+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+a,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};$1.prototype.isPerspectiveCamera=!0;var G4=90,q4=1,X3=class extends G1{constructor(e,t,i){super();if(this.type="CubeCamera",i.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;let a=new $1(G4,q4,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new P(1,0,0)),this.add(a);let r=new $1(G4,q4,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new P(-1,0,0)),this.add(r);let s=new $1(G4,q4,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new P(0,1,0)),this.add(s);let c=new $1(G4,q4,e,t);c.layers=this.layers,c.up.set(0,0,-1),c.lookAt(new P(0,-1,0)),this.add(c);let o=new $1(G4,q4,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new P(0,0,1)),this.add(o);let l=new $1(G4,q4,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new P(0,0,-1)),this.add(l)}update(e,t){this.parent===null&&this.updateMatrixWorld();let i=this.renderTarget,[a,r,s,c,o,l]=this.children,h=e.xr.enabled,f=e.getRenderTarget();e.xr.enabled=!1;let u=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,a),e.setRenderTarget(i,1),e.render(t,r),e.setRenderTarget(i,2),e.render(t,s),e.setRenderTarget(i,3),e.render(t,c),e.setRenderTarget(i,4),e.render(t,o),i.texture.generateMipmaps=u,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(f),e.xr.enabled=h}};var W4=class extends Y1{constructor(e,t,i,a,r,s,c,o,l,h){e=e!==void 0?e:[],t=t!==void 0?t:Oe,c=c!==void 0?c:re;super(e,t,i,a,r,s,c,o,l,h);this.flipY=!1}get images(){return this.image}set images(e){this.image=e}};W4.prototype.isCubeTexture=!0;var H6=class extends A2{constructor(e,t,i){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=i);super(e,e,t);t=t||{},this.texture=new W4(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:v2,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=K1,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},a=new He(5,5,5),r=new X2({name:"CubemapFromEquirect",uniforms:Ve(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:B1,blending:T2});r.uniforms.tEquirect.value=t;let s=new r2(a,r),c=t.minFilter;return t.minFilter===qe&&(t.minFilter=v2),new X3(1,10,this).update(e,s),t.minFilter=c,s.geometry.dispose(),s.material.dispose(),this}clear(e,t,i,a){let r=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,i,a);e.setRenderTarget(r)}};H6.prototype.isWebGLCubeRenderTarget=!0;function E5(n){let e=new WeakMap;function t(s,c){return c===ut?s.mapping=Oe:c===ht&&(s.mapping=h4),s}function i(s){if(s&&s.isTexture&&s.isRenderTargetTexture===!1){let c=s.mapping;if(c===ut||c===ht)if(e.has(s)){let o=e.get(s).texture;return t(o,s.mapping)}else{let o=s.image;if(o&&o.height>0){let l=n.getRenderTarget(),h=new H6(o.height/2);return h.fromEquirectangularTexture(n,s),e.set(s,h),n.setRenderTarget(l),s.addEventListener("dispose",a),t(h.texture,s.mapping)}else return null}}return s}function a(s){let c=s.target;c.removeEventListener("dispose",a);let o=e.get(c);o!==void 0&&(e.delete(c),o.dispose())}function r(){e=new WeakMap}return{get:i,dispose:r}}var V6=class extends O4{constructor(e=-1,t=1,i=1,a=-1,r=.1,s=2e3){super();this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=a,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,a,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=a,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,a=(this.top+this.bottom)/2,r=i-e,s=i+e,c=a+t,o=a-t;if(this.view!==null&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,s=r+l*this.view.width,c-=h*this.view.offsetY,o=c-h*this.view.height}this.projectionMatrix.makeOrthographic(r,s,c,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};V6.prototype.isOrthographicCamera=!0;var j4=class extends X2{constructor(e){super(e);this.type="RawShaderMaterial"}};j4.prototype.isRawShaderMaterial=!0;var X4=4,e4=8,ne=Math.pow(2,e4),D5=[.125,.215,.35,.446,.526,.582],T5=e4-X4+1+D5.length,Z4=20,se={[i2]:0,[xt]:1,[bt]:2,[o6]:3,[l6]:4,[u6]:5,[Mt]:6},Z3=new V6,{_lodPlanes:Lt,_sizeLods:H5,_sigmas:N6}=w9(),V5=new b1,Y3=null,x4=(1+Math.sqrt(5))/2,Y4=1/x4,N5=[new P(1,1,1),new P(-1,1,1),new P(1,1,-1),new P(-1,1,-1),new P(0,x4,Y4),new P(0,x4,-Y4),new P(Y4,0,x4),new P(-Y4,0,x4),new P(x4,Y4,0),new P(-x4,Y4,0)],$3=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=_9(Z4),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,a=100){Y3=this._renderer.getRenderTarget();let r=this._allocateTargets();return this._sceneToCubeUV(e,i,a,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=B5(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=R5(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<Lt.length;e++)Lt[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Y3),e.scissorTest=!1,F6(e,0,0,e.width,e.height)}_fromTexture(e){Y3=this._renderer.getRenderTarget();let t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){let t={magFilter:Z1,minFilter:Z1,generateMipmaps:!1,type:ie,format:X8,encoding:A9(e)?e.encoding:bt,depthBuffer:!1},i=F5(t);return i.depthBuffer=!e,this._pingPongRenderTarget=F5(t),i}_compileMaterial(e){let t=new r2(Lt[0],e);this._renderer.compile(t,Z3)}_sceneToCubeUV(e,t,i,a){let r=90,s=1,c=new $1(r,s,t,i),o=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],h=this._renderer,f=h.autoClear,u=h.outputEncoding,m=h.toneMapping;h.getClearColor(V5),h.toneMapping=U2,h.outputEncoding=i2,h.autoClear=!1;let v=new P4({name:"PMREM.Background",side:B1,depthWrite:!1,depthTest:!1}),g=new r2(new He,v),x=!1,p=e.background;p?p.isColor&&(v.color.copy(p),e.background=null,x=!0):(v.color.copy(V5),x=!0);for(let d=0;d<6;d++){let C=d%3;C==0?(c.up.set(0,o[d],0),c.lookAt(l[d],0,0)):C==1?(c.up.set(0,0,o[d]),c.lookAt(0,l[d],0)):(c.up.set(0,o[d],0),c.lookAt(0,0,l[d])),F6(a,C*ne,d>2?ne:0,ne,ne),h.setRenderTarget(a),x&&h.render(g,c),h.render(e,c)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=m,h.outputEncoding=u,h.autoClear=f,e.background=p}_textureToCubeUV(e,t){let i=this._renderer;e.isCubeTexture?this._cubemapShader==null&&(this._cubemapShader=B5()):this._equirectShader==null&&(this._equirectShader=R5());let a=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new r2(Lt[0],a),s=a.uniforms;s.envMap.value=e,e.isCubeTexture||s.texelSize.value.set(1/e.image.width,1/e.image.height),s.inputEncoding.value=se[e.encoding],s.outputEncoding.value=se[t.texture.encoding],F6(t,0,0,3*ne,2*ne),i.setRenderTarget(t),i.render(r,Z3)}_applyPMREM(e){let t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let a=1;a<T5;a++){let r=Math.sqrt(N6[a]*N6[a]-N6[a-1]*N6[a-1]),s=N5[(a-1)%N5.length];this._blur(e,a-1,a,r,s)}t.autoClear=i}_blur(e,t,i,a,r){let s=this._pingPongRenderTarget;this._halfBlur(e,s,t,i,a,"latitudinal",r),this._halfBlur(s,e,i,i,a,"longitudinal",r)}_halfBlur(e,t,i,a,r,s,c){let o=this._renderer,l=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");let h=3,f=new r2(Lt[a],l),u=l.uniforms,m=H5[i]-1,v=isFinite(r)?Math.PI/(2*m):2*Math.PI/(2*Z4-1),g=r/v,x=isFinite(r)?1+Math.floor(h*g):Z4;x>Z4&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${Z4}`);let p=[],d=0;for(let L=0;L<Z4;++L){let y=L/g,z=Math.exp(-y*y/2);p.push(z),L==0?d+=z:L<x&&(d+=2*z)}for(let L=0;L<p.length;L++)p[L]=p[L]/d;u.envMap.value=e.texture,u.samples.value=x,u.weights.value=p,u.latitudinal.value=s==="latitudinal",c&&(u.poleAxis.value=c),u.dTheta.value=v,u.mipInt.value=e4-i,u.inputEncoding.value=se[e.texture.encoding],u.outputEncoding.value=se[e.texture.encoding];let C=H5[a],b=3*Math.max(0,ne-2*C),A=(a===0?0:2*ne)+2*C*(a>e4-X4?a-e4+X4:0);F6(t,b,A,3*C,2*C),o.setRenderTarget(t),o.render(f,Z3)}};function A9(n){return n===void 0||n.type!==ie?!1:n.encoding===i2||n.encoding===xt||n.encoding===Mt}function w9(){let n=[],e=[],t=[],i=e4;for(let a=0;a<T5;a++){let r=Math.pow(2,i);e.push(r);let s=1/r;a>e4-X4?s=D5[a-e4+X4-1]:a==0&&(s=0),t.push(s);let c=1/(r-1),o=-c/2,l=1+c/2,h=[o,o,l,o,l,l,o,o,l,l,o,l],f=6,u=6,m=3,v=2,g=1,x=new Float32Array(m*u*f),p=new Float32Array(v*u*f),d=new Float32Array(g*u*f);for(let b=0;b<f;b++){let A=b%3*2/3-1,L=b>2?0:-1,y=[A,L,0,A+2/3,L,0,A+2/3,L+1,0,A,L,0,A+2/3,L+1,0,A,L+1,0];x.set(y,m*u*b),p.set(h,v*u*b);let z=[b,b,b,b,b,b];d.set(z,g*u*b)}let C=new c2;C.setAttribute("position",new d2(x,m)),C.setAttribute("uv",new d2(p,v)),C.setAttribute("faceIndex",new d2(d,g)),n.push(C),i>X4&&i--}return{_lodPlanes:n,_sizeLods:e,_sigmas:t}}function F5(n){let e=new A2(3*ne,3*ne,n);return e.texture.mapping=Ge,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function F6(n,e,t,i,a){n.viewport.set(e,t,i,a),n.scissor.set(e,t,i,a)}function _9(n){let e=new Float32Array(n),t=new P(0,1,0);return new j4({name:"SphericalGaussianBlur",defines:{n},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t},inputEncoding:{value:se[i2]},outputEncoding:{value:se[i2]}},vertexShader:K3(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${J3()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:T2,depthTest:!1,depthWrite:!1})}function R5(){let n=new A1(1,1);return new j4({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:n},inputEncoding:{value:se[i2]},outputEncoding:{value:se[i2]}},vertexShader:K3(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${J3()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:T2,depthTest:!1,depthWrite:!1})}function B5(){return new j4({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:se[i2]},outputEncoding:{value:se[i2]}},vertexShader:K3(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${J3()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:T2,depthTest:!1,depthWrite:!1})}function K3(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function J3(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function P5(n){let e=new WeakMap,t=null;function i(c){if(c&&c.isTexture&&c.isRenderTargetTexture===!1){let o=c.mapping,l=o===ut||o===ht,h=o===Oe||o===h4;if(l||h){if(e.has(c))return e.get(c).texture;{let f=c.image;if(l&&f&&f.height>0||h&&f&&a(f)){let u=n.getRenderTarget();t===null&&(t=new $3(n));let m=l?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),n.setRenderTarget(u),c.addEventListener("dispose",r),m.texture}else return null}}}return c}function a(c){let o=0,l=6;for(let h=0;h<l;h++)c[h]!==void 0&&o++;return o===l}function r(c){let o=c.target;o.removeEventListener("dispose",r);let l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:s}}function k5(n){let e={};function t(i){if(e[i]!==void 0)return e[i];let a;switch(i){case"WEBGL_depth_texture":a=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":a=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":a=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":a=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:a=n.getExtension(i)}return e[i]=a,a}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float")},get:function(i){let a=t(i);return a===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),a}}}function I5(n,e,t,i){let a={},r=new WeakMap;function s(f){let u=f.target;u.index!==null&&e.remove(u.index);for(let v in u.attributes)e.remove(u.attributes[v]);u.removeEventListener("dispose",s),delete a[u.id];let m=r.get(u);m&&(e.remove(m),r.delete(u)),i.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,t.memory.geometries--}function c(f,u){return a[u.id]===!0||(u.addEventListener("dispose",s),a[u.id]=!0,t.memory.geometries++),u}function o(f){let u=f.attributes;for(let v in u)e.update(u[v],n.ARRAY_BUFFER);let m=f.morphAttributes;for(let v in m){let g=m[v];for(let x=0,p=g.length;x<p;x++)e.update(g[x],n.ARRAY_BUFFER)}}function l(f){let u=[],m=f.index,v=f.attributes.position,g=0;if(m!==null){let d=m.array;g=m.version;for(let C=0,b=d.length;C<b;C+=3){let A=d[C+0],L=d[C+1],y=d[C+2];u.push(A,L,L,y,y,A)}}else{let d=v.array;g=v.version;for(let C=0,b=d.length/3-1;C<b;C+=3){let A=C+0,L=C+1,y=C+2;u.push(A,L,L,y,y,A)}}let x=new(x6(u)>65535?Ct:yt)(u,1);x.version=g;let p=r.get(f);p&&e.remove(p),r.set(f,x)}function h(f){let u=r.get(f);if(u){let m=f.index;m!==null&&u.version<m.version&&l(f)}else l(f);return r.get(f)}return{get:c,update:o,getWireframeAttribute:h}}function U5(n,e,t,i){let a=i.isWebGL2,r;function s(u){r=u}let c,o;function l(u){c=u.type,o=u.bytesPerElement}function h(u,m){n.drawElements(r,m,c,u*o),t.update(m,r,1)}function f(u,m,v){if(v===0)return;let g,x;if(a)g=n,x="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[x](r,m,c,u*o,v),t.update(m,r,v)}this.setMode=s,this.setIndex=l,this.render=h,this.renderInstances=f}function O5(n){let e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(r,s,c){switch(t.calls++,s){case n.TRIANGLES:t.triangles+=c*(r/3);break;case n.LINES:t.lines+=c*(r/2);break;case n.LINE_STRIP:t.lines+=c*(r-1);break;case n.LINE_LOOP:t.lines+=c*r;break;case n.POINTS:t.points+=c*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function a(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:a,update:i}}function S9(n,e){return n[0]-e[0]}function L9(n,e){return Math.abs(e[1])-Math.abs(n[1])}function G5(n){let e={},t=new Float32Array(8),i=[];for(let r=0;r<8;r++)i[r]=[r,0];function a(r,s,c,o){let l=r.morphTargetInfluences,h=l===void 0?0:l.length,f=e[s.id];if(f===void 0||f.length!==h){f=[];for(let x=0;x<h;x++)f[x]=[x,0];e[s.id]=f}for(let x=0;x<h;x++){let p=f[x];p[0]=x,p[1]=l[x]}f.sort(L9);for(let x=0;x<8;x++)x<h&&f[x][1]?(i[x][0]=f[x][0],i[x][1]=f[x][1]):(i[x][0]=Number.MAX_SAFE_INTEGER,i[x][1]=0);i.sort(S9);let u=s.morphAttributes.position,m=s.morphAttributes.normal,v=0;for(let x=0;x<8;x++){let p=i[x],d=p[0],C=p[1];d!==Number.MAX_SAFE_INTEGER&&C?(u&&s.getAttribute("morphTarget"+x)!==u[d]&&s.setAttribute("morphTarget"+x,u[d]),m&&s.getAttribute("morphNormal"+x)!==m[d]&&s.setAttribute("morphNormal"+x,m[d]),t[x]=C,v+=C):(u&&s.hasAttribute("morphTarget"+x)===!0&&s.deleteAttribute("morphTarget"+x),m&&s.hasAttribute("morphNormal"+x)===!0&&s.deleteAttribute("morphNormal"+x),t[x]=0)}let g=s.morphTargetsRelative?1:1-v;o.getUniforms().setValue(n,"morphTargetBaseInfluence",g),o.getUniforms().setValue(n,"morphTargetInfluences",t)}return{update:a}}var R6=class extends A2{constructor(e,t,i){super(e,t,i);this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}};R6.prototype.isWebGLMultisampleRenderTarget=!0;function q5(n,e,t,i){let a=new WeakMap;function r(o){let l=i.render.frame,h=o.geometry,f=e.get(o,h);return a.get(f)!==l&&(e.update(f),a.set(f,l)),o.isInstancedMesh&&(o.hasEventListener("dispose",c)===!1&&o.addEventListener("dispose",c),t.update(o.instanceMatrix,n.ARRAY_BUFFER),o.instanceColor!==null&&t.update(o.instanceColor,n.ARRAY_BUFFER)),f}function s(){a=new WeakMap}function c(o){let l=o.target;l.removeEventListener("dispose",c),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:s}}var B6=class extends Y1{constructor(e=null,t=1,i=1,a=1){super(null);this.image={data:e,width:t,height:i,depth:a},this.magFilter=Z1,this.minFilter=Z1,this.wrapR=t2,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}};B6.prototype.isDataTexture2DArray=!0;var P6=class extends Y1{constructor(e=null,t=1,i=1,a=1){super(null);this.image={data:e,width:t,height:i,depth:a},this.magFilter=Z1,this.minFilter=Z1,this.wrapR=t2,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}};P6.prototype.isDataTexture3D=!0;var W5=new Y1,E9=new B6,D9=new P6,j5=new W4,X5=[],Z5=[],Y5=new Float32Array(16),$5=new Float32Array(9),K5=new Float32Array(4);function $4(n,e,t){let i=n[0];if(i<=0||i>0)return n;let a=e*t,r=X5[a];if(r===void 0&&(r=new Float32Array(a),X5[a]=r),e!==0){i.toArray(r,0);for(let s=1,c=0;s!==e;++s)c+=t,n[s].toArray(r,c)}return r}function x2(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function p2(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function J5(n,e){let t=Z5[e];t===void 0&&(t=new Int32Array(e),Z5[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function T9(n,e){let t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function H9(n,e){let t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(x2(t,e))return;n.uniform2fv(this.addr,e),p2(t,e)}}function V9(n,e){let t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(x2(t,e))return;n.uniform3fv(this.addr,e),p2(t,e)}}function N9(n,e){let t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(x2(t,e))return;n.uniform4fv(this.addr,e),p2(t,e)}}function F9(n,e){let t=this.cache,i=e.elements;if(i===void 0){if(x2(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),p2(t,e)}else{if(x2(t,i))return;K5.set(i),n.uniformMatrix2fv(this.addr,!1,K5),p2(t,i)}}function R9(n,e){let t=this.cache,i=e.elements;if(i===void 0){if(x2(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),p2(t,e)}else{if(x2(t,i))return;$5.set(i),n.uniformMatrix3fv(this.addr,!1,$5),p2(t,i)}}function B9(n,e){let t=this.cache,i=e.elements;if(i===void 0){if(x2(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),p2(t,e)}else{if(x2(t,i))return;Y5.set(i),n.uniformMatrix4fv(this.addr,!1,Y5),p2(t,i)}}function P9(n,e){let t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function k9(n,e){let t=this.cache;x2(t,e)||(n.uniform2iv(this.addr,e),p2(t,e))}function I9(n,e){let t=this.cache;x2(t,e)||(n.uniform3iv(this.addr,e),p2(t,e))}function U9(n,e){let t=this.cache;x2(t,e)||(n.uniform4iv(this.addr,e),p2(t,e))}function O9(n,e){let t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function G9(n,e){let t=this.cache;x2(t,e)||(n.uniform2uiv(this.addr,e),p2(t,e))}function q9(n,e){let t=this.cache;x2(t,e)||(n.uniform3uiv(this.addr,e),p2(t,e))}function W9(n,e){let t=this.cache;x2(t,e)||(n.uniform4uiv(this.addr,e),p2(t,e))}function j9(n,e,t){let i=this.cache,a=t.allocateTextureUnit();i[0]!==a&&(n.uniform1i(this.addr,a),i[0]=a),t.safeSetTexture2D(e||W5,a)}function X9(n,e,t){let i=this.cache,a=t.allocateTextureUnit();i[0]!==a&&(n.uniform1i(this.addr,a),i[0]=a),t.setTexture3D(e||D9,a)}function Z9(n,e,t){let i=this.cache,a=t.allocateTextureUnit();i[0]!==a&&(n.uniform1i(this.addr,a),i[0]=a),t.safeSetTextureCube(e||j5,a)}function Y9(n,e,t){let i=this.cache,a=t.allocateTextureUnit();i[0]!==a&&(n.uniform1i(this.addr,a),i[0]=a),t.setTexture2DArray(e||E9,a)}function $9(n){switch(n){case 5126:return T9;case 35664:return H9;case 35665:return V9;case 35666:return N9;case 35674:return F9;case 35675:return R9;case 35676:return B9;case 5124:case 35670:return P9;case 35667:case 35671:return k9;case 35668:case 35672:return I9;case 35669:case 35673:return U9;case 5125:return O9;case 36294:return G9;case 36295:return q9;case 36296:return W9;case 35678:case 36198:case 36298:case 36306:case 35682:return j9;case 35679:case 36299:case 36307:return X9;case 35680:case 36300:case 36308:case 36293:return Z9;case 36289:case 36303:case 36311:case 36292:return Y9}}function K9(n,e){n.uniform1fv(this.addr,e)}function J9(n,e){let t=$4(e,this.size,2);n.uniform2fv(this.addr,t)}function Q9(n,e){let t=$4(e,this.size,3);n.uniform3fv(this.addr,t)}function eu(n,e){let t=$4(e,this.size,4);n.uniform4fv(this.addr,t)}function tu(n,e){let t=$4(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function iu(n,e){let t=$4(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function au(n,e){let t=$4(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function ru(n,e){n.uniform1iv(this.addr,e)}function nu(n,e){n.uniform2iv(this.addr,e)}function su(n,e){n.uniform3iv(this.addr,e)}function cu(n,e){n.uniform4iv(this.addr,e)}function ou(n,e){n.uniform1uiv(this.addr,e)}function lu(n,e){n.uniform2uiv(this.addr,e)}function uu(n,e){n.uniform3uiv(this.addr,e)}function hu(n,e){n.uniform4uiv(this.addr,e)}function fu(n,e,t){let i=e.length,a=J5(t,i);n.uniform1iv(this.addr,a);for(let r=0;r!==i;++r)t.safeSetTexture2D(e[r]||W5,a[r])}function du(n,e,t){let i=e.length,a=J5(t,i);n.uniform1iv(this.addr,a);for(let r=0;r!==i;++r)t.safeSetTextureCube(e[r]||j5,a[r])}function pu(n){switch(n){case 5126:return K9;case 35664:return J9;case 35665:return Q9;case 35666:return eu;case 35674:return tu;case 35675:return iu;case 35676:return au;case 5124:case 35670:return ru;case 35667:case 35671:return nu;case 35668:case 35672:return su;case 35669:case 35673:return cu;case 5125:return ou;case 36294:return lu;case 36295:return uu;case 36296:return hu;case 35678:case 36198:case 36298:case 36306:case 35682:return fu;case 35680:case 36300:case 36308:case 36293:return du}}function mu(n,e,t){this.id=n,this.addr=t,this.cache=[],this.setValue=$9(e.type)}function Q5(n,e,t){this.id=n,this.addr=t,this.cache=[],this.size=e.size,this.setValue=pu(e.type)}Q5.prototype.updateCache=function(n){let e=this.cache;n instanceof Float32Array&&e.length!==n.length&&(this.cache=new Float32Array(n.length)),p2(e,n)};function ec(n){this.id=n,this.seq=[],this.map={}}ec.prototype.setValue=function(n,e,t){let i=this.seq;for(let a=0,r=i.length;a!==r;++a){let s=i[a];s.setValue(n,e[s.id],t)}};var Q3=/(\w+)(\])?(\[|\.)?/g;function tc(n,e){n.seq.push(e),n.map[e.id]=e}function vu(n,e,t){let i=n.name,a=i.length;for(Q3.lastIndex=0;;){let r=Q3.exec(i),s=Q3.lastIndex,c=r[1],o=r[2]==="]",l=r[3];if(o&&(c=c|0),l===void 0||l==="["&&s+2===a){tc(t,l===void 0?new mu(c,n,e):new Q5(c,n,e));break}else{let f=t.map[c];f===void 0&&(f=new ec(c),tc(t,f)),t=f}}}function ce(n,e){this.seq=[],this.map={};let t=n.getProgramParameter(e,n.ACTIVE_UNIFORMS);for(let i=0;i<t;++i){let a=n.getActiveUniform(e,i),r=n.getUniformLocation(e,a.name);vu(a,r,this)}}ce.prototype.setValue=function(n,e,t,i){let a=this.map[e];a!==void 0&&a.setValue(n,t,i)};ce.prototype.setOptional=function(n,e,t){let i=e[t];i!==void 0&&this.setValue(n,t,i)};ce.upload=function(n,e,t,i){for(let a=0,r=e.length;a!==r;++a){let s=e[a],c=t[s.id];c.needsUpdate!==!1&&s.setValue(n,c.value,i)}};ce.seqWithValue=function(n,e){let t=[];for(let i=0,a=n.length;i!==a;++i){let r=n[i];r.id in e&&t.push(r)}return t};function ei(n,e,t){let i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}var gu=0;function xu(n){let e=n.split(`
`);for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join(`
`)}function ic(n){switch(n){case i2:return["Linear","( value )"];case xt:return["sRGB","( value )"];case bt:return["RGBE","( value )"];case o6:return["RGBM","( value, 7.0 )"];case l6:return["RGBM","( value, 16.0 )"];case u6:return["RGBD","( value, 256.0 )"];case Mt:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Dr:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function ac(n,e,t){let i=n.getShaderParameter(e,n.COMPILE_STATUS),a=n.getShaderInfoLog(e).trim();return i&&a===""?"":t.toUpperCase()+`

`+a+`

`+xu(n.getShaderSource(e))}function K4(n,e){let t=ic(e);return"vec4 "+n+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function Mu(n,e){let t=ic(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function bu(n,e){let t;switch(e){case H8:t="Linear";break;case V8:t="Reinhard";break;case N8:t="OptimizedCineon";break;case F8:t="ACESFilmic";break;case R8:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function yu(n){return[n.extensionDerivatives||n.envMapCubeUV||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Et).join(`
`)}function Cu(n){let e=[];for(let t in n){let i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function zu(n,e){let t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let a=0;a<i;a++){let r=n.getActiveAttrib(e,a),s=r.name,c=1;r.type===n.FLOAT_MAT2&&(c=2),r.type===n.FLOAT_MAT3&&(c=3),r.type===n.FLOAT_MAT4&&(c=4),t[s]={type:r.type,location:n.getAttribLocation(e,s),locationSize:c}}return t}function Et(n){return n!==""}function rc(n,e){return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function nc(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}var Au=/^[ \t]*#include +<([\w\d./]+)>/gm;function ti(n){return n.replace(Au,wu)}function wu(n,e){let t=w1[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return ti(t)}var _u=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Su=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sc(n){return n.replace(Su,cc).replace(_u,Lu)}function Lu(n,e,t,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),cc(n,e,t,i)}function cc(n,e,t,i){let a="";for(let r=parseInt(e);r<parseInt(t);r++)a+=i.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return a}function oc(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Eu(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===r6?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===n6?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===l4&&(e="SHADOWMAP_TYPE_VSM"),e}function Du(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case Oe:case h4:e="ENVMAP_TYPE_CUBE";break;case Ge:case ft:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Tu(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case h4:case ft:e="ENVMAP_MODE_REFRACTION";break}return e}function Hu(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case S4:e="ENVMAP_BLENDING_MULTIPLY";break;case D8:e="ENVMAP_BLENDING_MIX";break;case T8:e="ENVMAP_BLENDING_ADD";break}return e}function lc(n,e,t,i){let a=n.getContext(),r=t.defines,s=t.vertexShader,c=t.fragmentShader,o=Eu(t),l=Du(t),h=Tu(t),f=Hu(t),u=n.gammaFactor>0?n.gammaFactor:1,m=t.isWebGL2?"":yu(t),v=Cu(r),g=a.createProgram(),x,p,d=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=[v].filter(Et).join(`
`),x.length>0&&(x+=`
`),p=[m,v].filter(Et).join(`
`),p.length>0&&(p+=`
`)):(x=[oc(t),"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+u,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularTintMap?"#define USE_SPECULARTINTMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+o:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Et).join(`
`),p=[m,oc(t),"#define SHADER_NAME "+t.shaderName,v,"#define GAMMA_FACTOR "+u,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularTintMap?"#define USE_SPECULARTINTMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheenTint?"#define USE_SHEEN":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+o:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==U2?"#define TONE_MAPPING":"",t.toneMapping!==U2?w1.tonemapping_pars_fragment:"",t.toneMapping!==U2?bu("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.format===re?"#define OPAQUE":"",w1.encodings_pars_fragment,t.map?K4("mapTexelToLinear",t.mapEncoding):"",t.matcap?K4("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?K4("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?K4("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.specularTintMap?K4("specularTintMapTexelToLinear",t.specularTintMapEncoding):"",t.lightMap?K4("lightMapTexelToLinear",t.lightMapEncoding):"",Mu("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Et).join(`
`)),s=ti(s),s=rc(s,t),s=nc(s,t),c=ti(c),c=rc(c,t),c=nc(c,t),s=sc(s),c=sc(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(d=`#version 300 es
`,x=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,p=["#define varying in",t.glslVersion===a3?"":"out highp vec4 pc_fragColor;",t.glslVersion===a3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);let C=d+x+s,b=d+p+c,A=ei(a,a.VERTEX_SHADER,C),L=ei(a,a.FRAGMENT_SHADER,b);if(a.attachShader(g,A),a.attachShader(g,L),t.index0AttributeName!==void 0?a.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&a.bindAttribLocation(g,0,"position"),a.linkProgram(g),n.debug.checkShaderErrors){let B=a.getProgramInfoLog(g).trim(),H=a.getShaderInfoLog(A).trim(),S=a.getShaderInfoLog(L).trim(),G=!0,_=!0;if(a.getProgramParameter(g,a.LINK_STATUS)===!1){G=!1;let V=ac(a,A,"vertex"),R=ac(a,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+a.getError()+" - VALIDATE_STATUS "+a.getProgramParameter(g,a.VALIDATE_STATUS)+`

Program Info Log: `+B+`
`+V+`
`+R)}else B!==""?console.warn("THREE.WebGLProgram: Program Info Log:",B):(H===""||S==="")&&(_=!1);_&&(this.diagnostics={runnable:G,programLog:B,vertexShader:{log:H,prefix:x},fragmentShader:{log:S,prefix:p}})}a.deleteShader(A),a.deleteShader(L);let y;this.getUniforms=function(){return y===void 0&&(y=new ce(a,g)),y};let z;return this.getAttributes=function(){return z===void 0&&(z=zu(a,g)),z},this.destroy=function(){i.releaseStatesOfProgram(this),a.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=gu++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=A,this.fragmentShader=L,this}function uc(n,e,t,i,a,r,s){let c=[],o=a.isWebGL2,l=a.logarithmicDepthBuffer,h=a.floatVertexTextures,f=a.maxVertexUniforms,u=a.vertexTextures,m=a.precision,v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},g=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","specularIntensityMap","specularTintMap","specularTintMapEncoding","roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","sheenTint","transmission","transmissionMap","thicknessMap"];function x(y){let B=y.skeleton.bones;if(h)return 1024;{let S=Math.floor((f-20)/4),G=Math.min(S,B.length);return G<B.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+B.length+" bones. This GPU supports "+G+"."),0):G}}function p(y){let z;return y&&y.isTexture?z=y.encoding:y&&y.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),z=y.texture.encoding):z=i2,z}function d(y,z,B,H,S){let G=H.fog,_=y.isMeshStandardMaterial?H.environment:null,V=(y.isMeshStandardMaterial?t:e).get(y.envMap||_),R=v[y.type],T=S.isSkinnedMesh?x(S):0;y.precision!==null&&(m=a.getMaxPrecision(y.precision),m!==y.precision&&console.warn("THREE.WebGLProgram.getParameters:",y.precision,"not supported, using",m,"instead."));let D,I;if(R){let j=N2[R];D=j.vertexShader,I=j.fragmentShader}else D=y.vertexShader,I=y.fragmentShader;let W=n.getRenderTarget(),$=y.alphaTest>0,J=y.clearcoat>0;return{isWebGL2:o,shaderID:R,shaderName:y.type,vertexShader:D,fragmentShader:I,defines:y.defines,isRawShaderMaterial:y.isRawShaderMaterial===!0,glslVersion:y.glslVersion,precision:m,instancing:S.isInstancedMesh===!0,instancingColor:S.isInstancedMesh===!0&&S.instanceColor!==null,supportsVertexTextures:u,outputEncoding:W!==null?p(W.texture):n.outputEncoding,map:!!y.map,mapEncoding:p(y.map),matcap:!!y.matcap,matcapEncoding:p(y.matcap),envMap:!!V,envMapMode:V&&V.mapping,envMapEncoding:p(V),envMapCubeUV:!!V&&(V.mapping===Ge||V.mapping===ft),lightMap:!!y.lightMap,lightMapEncoding:p(y.lightMap),aoMap:!!y.aoMap,emissiveMap:!!y.emissiveMap,emissiveMapEncoding:p(y.emissiveMap),bumpMap:!!y.bumpMap,normalMap:!!y.normalMap,objectSpaceNormalMap:y.normalMapType===Vr,tangentSpaceNormalMap:y.normalMapType===h6,clearcoat:J,clearcoatMap:J&&!!y.clearcoatMap,clearcoatRoughnessMap:J&&!!y.clearcoatRoughnessMap,clearcoatNormalMap:J&&!!y.clearcoatNormalMap,displacementMap:!!y.displacementMap,roughnessMap:!!y.roughnessMap,metalnessMap:!!y.metalnessMap,specularMap:!!y.specularMap,specularIntensityMap:!!y.specularIntensityMap,specularTintMap:!!y.specularTintMap,specularTintMapEncoding:p(y.specularTintMap),alphaMap:!!y.alphaMap,alphaTest:$,gradientMap:!!y.gradientMap,sheenTint:!!y.sheenTint&&(y.sheenTint.r>0||y.sheenTint.g>0||y.sheenTint.b>0),transmission:y.transmission>0,transmissionMap:!!y.transmissionMap,thicknessMap:!!y.thicknessMap,combine:y.combine,vertexTangents:!!y.normalMap&&!!S.geometry&&!!S.geometry.attributes.tangent,vertexColors:y.vertexColors,vertexAlphas:y.vertexColors===!0&&!!S.geometry&&!!S.geometry.attributes.color&&S.geometry.attributes.color.itemSize===4,vertexUvs:!!y.map||!!y.bumpMap||!!y.normalMap||!!y.specularMap||!!y.alphaMap||!!y.emissiveMap||!!y.roughnessMap||!!y.metalnessMap||!!y.clearcoatMap||!!y.clearcoatRoughnessMap||!!y.clearcoatNormalMap||!!y.displacementMap||!!y.transmissionMap||!!y.thicknessMap||!!y.specularIntensityMap||!!y.specularTintMap,uvsVertexOnly:!(!!y.map||!!y.bumpMap||!!y.normalMap||!!y.specularMap||!!y.alphaMap||!!y.emissiveMap||!!y.roughnessMap||!!y.metalnessMap||!!y.clearcoatNormalMap||y.transmission>0||!!y.transmissionMap||!!y.thicknessMap||!!y.specularIntensityMap||!!y.specularTintMap)&&!!y.displacementMap,fog:!!G,useFog:y.fog,fogExp2:G&&G.isFogExp2,flatShading:!!y.flatShading,sizeAttenuation:y.sizeAttenuation,logarithmicDepthBuffer:l,skinning:S.isSkinnedMesh===!0&&T>0,maxBones:T,useVertexTexture:h,morphTargets:!!S.geometry&&!!S.geometry.morphAttributes.position,morphNormals:!!S.geometry&&!!S.geometry.morphAttributes.normal,numDirLights:z.directional.length,numPointLights:z.point.length,numSpotLights:z.spot.length,numRectAreaLights:z.rectArea.length,numHemiLights:z.hemi.length,numDirLightShadows:z.directionalShadowMap.length,numPointLightShadows:z.pointShadowMap.length,numSpotLightShadows:z.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,format:y.format,dithering:y.dithering,shadowMapEnabled:n.shadowMap.enabled&&B.length>0,shadowMapType:n.shadowMap.type,toneMapping:y.toneMapped?n.toneMapping:U2,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:y.premultipliedAlpha,doubleSided:y.side===I2,flipSided:y.side===B1,depthPacking:y.depthPacking!==void 0?y.depthPacking:!1,index0AttributeName:y.index0AttributeName,extensionDerivatives:y.extensions&&y.extensions.derivatives,extensionFragDepth:y.extensions&&y.extensions.fragDepth,extensionDrawBuffers:y.extensions&&y.extensions.drawBuffers,extensionShaderTextureLOD:y.extensions&&y.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||i.has("EXT_shader_texture_lod"),customProgramCacheKey:y.customProgramCacheKey()}}function C(y){let z=[];if(y.shaderID?z.push(y.shaderID):(z.push(y.fragmentShader),z.push(y.vertexShader)),y.defines!==void 0)for(let B in y.defines)z.push(B),z.push(y.defines[B]);if(y.isRawShaderMaterial===!1){for(let B=0;B<g.length;B++)z.push(y[g[B]]);z.push(n.outputEncoding),z.push(n.gammaFactor)}return z.push(y.customProgramCacheKey),z.join()}function b(y){let z=v[y.type],B;if(z){let H=N2[z];B=Zr.clone(H.uniforms)}else B=y.uniforms;return B}function A(y,z){let B;for(let H=0,S=c.length;H<S;H++){let G=c[H];if(G.cacheKey===z){B=G,++B.usedTimes;break}}return B===void 0&&(B=new lc(n,z,y,r),c.push(B)),B}function L(y){if(--y.usedTimes==0){let z=c.indexOf(y);c[z]=c[c.length-1],c.pop(),y.destroy()}}return{getParameters:d,getProgramCacheKey:C,getUniforms:b,acquireProgram:A,releaseProgram:L,programs:c}}function hc(){let n=new WeakMap;function e(r){let s=n.get(r);return s===void 0&&(s={},n.set(r,s)),s}function t(r){n.delete(r)}function i(r,s,c){n.get(r)[s]=c}function a(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:a}}function Vu(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.program!==e.program?n.program.id-e.program.id:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function fc(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function dc(n){let e=[],t=0,i=[],a=[],r=[],s={id:-1};function c(){t=0,i.length=0,a.length=0,r.length=0}function o(m,v,g,x,p,d){let C=e[t],b=n.get(g);return C===void 0?(C={id:m.id,object:m,geometry:v,material:g,program:b.program||s,groupOrder:x,renderOrder:m.renderOrder,z:p,group:d},e[t]=C):(C.id=m.id,C.object=m,C.geometry=v,C.material=g,C.program=b.program||s,C.groupOrder=x,C.renderOrder=m.renderOrder,C.z=p,C.group=d),t++,C}function l(m,v,g,x,p,d){let C=o(m,v,g,x,p,d);g.transmission>0?a.push(C):g.transparent===!0?r.push(C):i.push(C)}function h(m,v,g,x,p,d){let C=o(m,v,g,x,p,d);g.transmission>0?a.unshift(C):g.transparent===!0?r.unshift(C):i.unshift(C)}function f(m,v){i.length>1&&i.sort(m||Vu),a.length>1&&a.sort(v||fc),r.length>1&&r.sort(v||fc)}function u(){for(let m=t,v=e.length;m<v;m++){let g=e[m];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.program=null,g.group=null}}return{opaque:i,transmissive:a,transparent:r,init:c,push:l,unshift:h,finish:u,sort:f}}function pc(n){let e=new WeakMap;function t(a,r){let s;return e.has(a)===!1?(s=new dc(n),e.set(a,[s])):r>=e.get(a).length?(s=new dc(n),e.get(a).push(s)):s=e.get(a)[r],s}function i(){e=new WeakMap}return{get:t,dispose:i}}function Nu(){let n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new P,color:new b1};break;case"SpotLight":t={position:new P,direction:new P,color:new b1,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new P,color:new b1,distance:0,decay:0};break;case"HemisphereLight":t={direction:new P,skyColor:new b1,groundColor:new b1};break;case"RectAreaLight":t={color:new b1,position:new P,halfWidth:new P,halfHeight:new P};break}return n[e.id]=t,t}}}function Fu(){let n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new A1};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new A1};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new A1,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}var Ru=0;function Bu(n,e){return(e.castShadow?1:0)-(n.castShadow?1:0)}function mc(n,e){let t=new Nu,i=Fu(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let h=0;h<9;h++)a.probe.push(new P);let r=new P,s=new P1,c=new P1;function o(h,f){let u=0,m=0,v=0;for(let B=0;B<9;B++)a.probe[B].set(0,0,0);let g=0,x=0,p=0,d=0,C=0,b=0,A=0,L=0;h.sort(Bu);let y=f!==!0?Math.PI:1;for(let B=0,H=h.length;B<H;B++){let S=h[B],G=S.color,_=S.intensity,V=S.distance,R=S.shadow&&S.shadow.map?S.shadow.map.texture:null;if(S.isAmbientLight)u+=G.r*_*y,m+=G.g*_*y,v+=G.b*_*y;else if(S.isLightProbe)for(let T=0;T<9;T++)a.probe[T].addScaledVector(S.sh.coefficients[T],_);else if(S.isDirectionalLight){let T=t.get(S);if(T.color.copy(S.color).multiplyScalar(S.intensity*y),S.castShadow){let D=S.shadow,I=i.get(S);I.shadowBias=D.bias,I.shadowNormalBias=D.normalBias,I.shadowRadius=D.radius,I.shadowMapSize=D.mapSize,a.directionalShadow[g]=I,a.directionalShadowMap[g]=R,a.directionalShadowMatrix[g]=S.shadow.matrix,b++}a.directional[g]=T,g++}else if(S.isSpotLight){let T=t.get(S);if(T.position.setFromMatrixPosition(S.matrixWorld),T.color.copy(G).multiplyScalar(_*y),T.distance=V,T.coneCos=Math.cos(S.angle),T.penumbraCos=Math.cos(S.angle*(1-S.penumbra)),T.decay=S.decay,S.castShadow){let D=S.shadow,I=i.get(S);I.shadowBias=D.bias,I.shadowNormalBias=D.normalBias,I.shadowRadius=D.radius,I.shadowMapSize=D.mapSize,a.spotShadow[p]=I,a.spotShadowMap[p]=R,a.spotShadowMatrix[p]=S.shadow.matrix,L++}a.spot[p]=T,p++}else if(S.isRectAreaLight){let T=t.get(S);T.color.copy(G).multiplyScalar(_),T.halfWidth.set(S.width*.5,0,0),T.halfHeight.set(0,S.height*.5,0),a.rectArea[d]=T,d++}else if(S.isPointLight){let T=t.get(S);if(T.color.copy(S.color).multiplyScalar(S.intensity*y),T.distance=S.distance,T.decay=S.decay,S.castShadow){let D=S.shadow,I=i.get(S);I.shadowBias=D.bias,I.shadowNormalBias=D.normalBias,I.shadowRadius=D.radius,I.shadowMapSize=D.mapSize,I.shadowCameraNear=D.camera.near,I.shadowCameraFar=D.camera.far,a.pointShadow[x]=I,a.pointShadowMap[x]=R,a.pointShadowMatrix[x]=S.shadow.matrix,A++}a.point[x]=T,x++}else if(S.isHemisphereLight){let T=t.get(S);T.skyColor.copy(S.color).multiplyScalar(_*y),T.groundColor.copy(S.groundColor).multiplyScalar(_*y),a.hemi[C]=T,C++}}d>0&&(e.isWebGL2?(a.rectAreaLTC1=i1.LTC_FLOAT_1,a.rectAreaLTC2=i1.LTC_FLOAT_2):n.has("OES_texture_float_linear")===!0?(a.rectAreaLTC1=i1.LTC_FLOAT_1,a.rectAreaLTC2=i1.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(a.rectAreaLTC1=i1.LTC_HALF_1,a.rectAreaLTC2=i1.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),a.ambient[0]=u,a.ambient[1]=m,a.ambient[2]=v;let z=a.hash;(z.directionalLength!==g||z.pointLength!==x||z.spotLength!==p||z.rectAreaLength!==d||z.hemiLength!==C||z.numDirectionalShadows!==b||z.numPointShadows!==A||z.numSpotShadows!==L)&&(a.directional.length=g,a.spot.length=p,a.rectArea.length=d,a.point.length=x,a.hemi.length=C,a.directionalShadow.length=b,a.directionalShadowMap.length=b,a.pointShadow.length=A,a.pointShadowMap.length=A,a.spotShadow.length=L,a.spotShadowMap.length=L,a.directionalShadowMatrix.length=b,a.pointShadowMatrix.length=A,a.spotShadowMatrix.length=L,z.directionalLength=g,z.pointLength=x,z.spotLength=p,z.rectAreaLength=d,z.hemiLength=C,z.numDirectionalShadows=b,z.numPointShadows=A,z.numSpotShadows=L,a.version=Ru++)}function l(h,f){let u=0,m=0,v=0,g=0,x=0,p=f.matrixWorldInverse;for(let d=0,C=h.length;d<C;d++){let b=h[d];if(b.isDirectionalLight){let A=a.directional[u];A.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),A.direction.sub(r),A.direction.transformDirection(p),u++}else if(b.isSpotLight){let A=a.spot[v];A.position.setFromMatrixPosition(b.matrixWorld),A.position.applyMatrix4(p),A.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),A.direction.sub(r),A.direction.transformDirection(p),v++}else if(b.isRectAreaLight){let A=a.rectArea[g];A.position.setFromMatrixPosition(b.matrixWorld),A.position.applyMatrix4(p),c.identity(),s.copy(b.matrixWorld),s.premultiply(p),c.extractRotation(s),A.halfWidth.set(b.width*.5,0,0),A.halfHeight.set(0,b.height*.5,0),A.halfWidth.applyMatrix4(c),A.halfHeight.applyMatrix4(c),g++}else if(b.isPointLight){let A=a.point[m];A.position.setFromMatrixPosition(b.matrixWorld),A.position.applyMatrix4(p),m++}else if(b.isHemisphereLight){let A=a.hemi[x];A.direction.setFromMatrixPosition(b.matrixWorld),A.direction.transformDirection(p),A.direction.normalize(),x++}}}return{setup:o,setupView:l,state:a}}function vc(n,e){let t=new mc(n,e),i=[],a=[];function r(){i.length=0,a.length=0}function s(f){i.push(f)}function c(f){a.push(f)}function o(f){t.setup(i,f)}function l(f){t.setupView(i,f)}return{init:r,state:{lightsArray:i,shadowsArray:a,lights:t},setupLights:o,setupLightsView:l,pushLight:s,pushShadow:c}}function gc(n,e){let t=new WeakMap;function i(r,s=0){let c;return t.has(r)===!1?(c=new vc(n,e),t.set(r,[c])):s>=t.get(r).length?(c=new vc(n,e),t.get(r).push(c)):c=t.get(r)[s],c}function a(){t=new WeakMap}return{get:i,dispose:a}}var k6=class extends z2{constructor(e){super();this.type="MeshDepthMaterial",this.depthPacking=Tr,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}};k6.prototype.isMeshDepthMaterial=!0;var I6=class extends z2{constructor(e){super();this.type="MeshDistanceMaterial",this.referencePosition=new P,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};I6.prototype.isMeshDistanceMaterial=!0;var xc=`
uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
uniform float samples;

#include <packing>

void main() {

	float mean = 0.0;
	float squared_mean = 0.0;

	// This seems totally useless but it's a crazy work around for a Adreno compiler bug
	// float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );

	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {

		float uvOffset = uvStart + i * uvStride;

		#ifdef HORIZONTAL_PASS

			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;

		#else

			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;

		#endif

	}

	mean = mean / samples;
	squared_mean = squared_mean / samples;

	float std_dev = sqrt( squared_mean - mean * mean );

	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );

}
`;var Mc=`
void main() {

	gl_Position = vec4( position, 1.0 );

}
`;function bc(n,e,t){let i=new v4,a=new A1,r=new A1,s=new O1,c=new k6({depthPacking:Hr}),o=new I6,l={},h=t.maxTextureSize,f={0:B1,1:ze,2:I2},u=new X2({uniforms:{shadow_pass:{value:null},resolution:{value:new A1},radius:{value:4},samples:{value:8}},vertexShader:Mc,fragmentShader:xc}),m=u.clone();m.defines.HORIZONTAL_PASS=1;let v=new c2;v.setAttribute("position",new d2(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let g=new r2(v,u),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=r6,this.render=function(b,A,L){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||b.length===0)return;let y=n.getRenderTarget(),z=n.getActiveCubeFace(),B=n.getActiveMipmapLevel(),H=n.state;H.setBlending(T2),H.buffers.color.setClear(1,1,1,1),H.buffers.depth.setTest(!0),H.setScissorTest(!1);for(let S=0,G=b.length;S<G;S++){let _=b[S],V=_.shadow;if(V===void 0){console.warn("THREE.WebGLShadowMap:",_,"has no shadow.");continue}if(V.autoUpdate===!1&&V.needsUpdate===!1)continue;a.copy(V.mapSize);let R=V.getFrameExtents();if(a.multiply(R),r.copy(V.mapSize),(a.x>h||a.y>h)&&(a.x>h&&(r.x=Math.floor(h/R.x),a.x=r.x*R.x,V.mapSize.x=r.x),a.y>h&&(r.y=Math.floor(h/R.y),a.y=r.y*R.y,V.mapSize.y=r.y)),V.map===null&&!V.isPointLightShadow&&this.type===l4){let D={minFilter:v2,magFilter:v2,format:K1};V.map=new A2(a.x,a.y,D),V.map.texture.name=_.name+".shadowMap",V.mapPass=new A2(a.x,a.y,D),V.camera.updateProjectionMatrix()}if(V.map===null){let D={minFilter:Z1,magFilter:Z1,format:K1};V.map=new A2(a.x,a.y,D),V.map.texture.name=_.name+".shadowMap",V.camera.updateProjectionMatrix()}n.setRenderTarget(V.map),n.clear();let T=V.getViewportCount();for(let D=0;D<T;D++){let I=V.getViewport(D);s.set(r.x*I.x,r.y*I.y,r.x*I.z,r.y*I.w),H.viewport(s),V.updateMatrices(_,D),i=V.getFrustum(),C(A,L,V.camera,_,this.type)}!V.isPointLightShadow&&this.type===l4&&p(V,L),V.needsUpdate=!1}x.needsUpdate=!1,n.setRenderTarget(y,z,B)};function p(b,A){let L=e.update(g);u.uniforms.shadow_pass.value=b.map.texture,u.uniforms.resolution.value=b.mapSize,u.uniforms.radius.value=b.radius,u.uniforms.samples.value=b.blurSamples,n.setRenderTarget(b.mapPass),n.clear(),n.renderBufferDirect(A,null,L,u,g,null),m.uniforms.shadow_pass.value=b.mapPass.texture,m.uniforms.resolution.value=b.mapSize,m.uniforms.radius.value=b.radius,m.uniforms.samples.value=b.blurSamples,n.setRenderTarget(b.map),n.clear(),n.renderBufferDirect(A,null,L,m,g,null)}function d(b,A,L,y,z,B,H){let S=null,G=y.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(G!==void 0?S=G:S=y.isPointLight===!0?o:c,n.localClippingEnabled&&L.clipShadows===!0&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0){let _=S.uuid,V=L.uuid,R=l[_];R===void 0&&(R={},l[_]=R);let T=R[V];T===void 0&&(T=S.clone(),R[V]=T),S=T}return S.visible=L.visible,S.wireframe=L.wireframe,H===l4?S.side=L.shadowSide!==null?L.shadowSide:L.side:S.side=L.shadowSide!==null?L.shadowSide:f[L.side],S.alphaMap=L.alphaMap,S.alphaTest=L.alphaTest,S.clipShadows=L.clipShadows,S.clippingPlanes=L.clippingPlanes,S.clipIntersection=L.clipIntersection,S.displacementMap=L.displacementMap,S.displacementScale=L.displacementScale,S.displacementBias=L.displacementBias,S.wireframeLinewidth=L.wireframeLinewidth,S.linewidth=L.linewidth,y.isPointLight===!0&&S.isMeshDistanceMaterial===!0&&(S.referencePosition.setFromMatrixPosition(y.matrixWorld),S.nearDistance=z,S.farDistance=B),S}function C(b,A,L,y,z){if(b.visible===!1)return;if(b.layers.test(A.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&z===l4)&&(!b.frustumCulled||i.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,b.matrixWorld);let S=e.update(b),G=b.material;if(Array.isArray(G)){let _=S.groups;for(let V=0,R=_.length;V<R;V++){let T=_[V],D=G[T.materialIndex];if(D&&D.visible){let I=d(b,S,D,y,L.near,L.far,z);n.renderBufferDirect(L,null,S,I,b,T)}}}else if(G.visible){let _=d(b,S,G,y,L.near,L.far,z);n.renderBufferDirect(L,null,S,_,b,null)}}let H=b.children;for(let S=0,G=H.length;S<G;S++)C(H[S],A,L,y,z)}}function yc(n,e,t){let i=t.isWebGL2;function a(){let k=!1,r1=new O1,X=null,c1=new O1(0,0,0,0);return{setMask:function(l1){X!==l1&&!k&&(n.colorMask(l1,l1,l1,l1),X=l1)},setLocked:function(l1){k=l1},setClear:function(l1,E1,u2,h2,Ne){Ne===!0&&(l1*=h2,E1*=h2,u2*=h2),r1.set(l1,E1,u2,h2),c1.equals(r1)===!1&&(n.clearColor(l1,E1,u2,h2),c1.copy(r1))},reset:function(){k=!1,X=null,c1.set(-1,0,0,0)}}}function r(){let k=!1,r1=null,X=null,c1=null;return{setTest:function(l1){l1?Y(n.DEPTH_TEST):e1(n.DEPTH_TEST)},setMask:function(l1){r1!==l1&&!k&&(n.depthMask(l1),r1=l1)},setFunc:function(l1){if(X!==l1){if(l1)switch(l1){case z8:n.depthFunc(n.NEVER);break;case A8:n.depthFunc(n.ALWAYS);break;case w8:n.depthFunc(n.LESS);break;case lt:n.depthFunc(n.LEQUAL);break;case _8:n.depthFunc(n.EQUAL);break;case S8:n.depthFunc(n.GEQUAL);break;case L8:n.depthFunc(n.GREATER);break;case E8:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}else n.depthFunc(n.LEQUAL);X=l1}},setLocked:function(l1){k=l1},setClear:function(l1){c1!==l1&&(n.clearDepth(l1),c1=l1)},reset:function(){k=!1,r1=null,X=null,c1=null}}}function s(){let k=!1,r1=null,X=null,c1=null,l1=null,E1=null,u2=null,h2=null,Ne=null;return{setTest:function(q1){k||(q1?Y(n.STENCIL_TEST):e1(n.STENCIL_TEST))},setMask:function(q1){r1!==q1&&!k&&(n.stencilMask(q1),r1=q1)},setFunc:function(q1,oe,le){(X!==q1||c1!==oe||l1!==le)&&(n.stencilFunc(q1,oe,le),X=q1,c1=oe,l1=le)},setOp:function(q1,oe,le){(E1!==q1||u2!==oe||h2!==le)&&(n.stencilOp(q1,oe,le),E1=q1,u2=oe,h2=le)},setLocked:function(q1){k=q1},setClear:function(q1){Ne!==q1&&(n.clearStencil(q1),Ne=q1)},reset:function(){k=!1,r1=null,X=null,c1=null,l1=null,E1=null,u2=null,h2=null,Ne=null}}}let c=new a,o=new r,l=new s,h={},f=null,u={},m=null,v=!1,g=null,x=null,p=null,d=null,C=null,b=null,A=null,L=!1,y=null,z=null,B=null,H=null,S=null,G=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS),_=!1,V=0,R=n.getParameter(n.VERSION);R.indexOf("WebGL")!==-1?(V=parseFloat(/^WebGL (\d)/.exec(R)[1]),_=V>=1):R.indexOf("OpenGL ES")!==-1&&(V=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),_=V>=2);let T=null,D={},I=n.getParameter(n.SCISSOR_BOX),W=n.getParameter(n.VIEWPORT),$=new O1().fromArray(I),J=new O1().fromArray(W);function Z(k,r1,X){let c1=new Uint8Array(4),l1=n.createTexture();n.bindTexture(k,l1),n.texParameteri(k,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(k,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let E1=0;E1<X;E1++)n.texImage2D(r1+E1,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,c1);return l1}let j={};j[n.TEXTURE_2D]=Z(n.TEXTURE_2D,n.TEXTURE_2D,1),j[n.TEXTURE_CUBE_MAP]=Z(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),c.setClear(0,0,0,1),o.setClear(1),l.setClear(0),Y(n.DEPTH_TEST),o.setFunc(lt),N1(!1),j1(B0),Y(n.CULL_FACE),L1(T2);function Y(k){h[k]!==!0&&(n.enable(k),h[k]=!0)}function e1(k){h[k]!==!1&&(n.disable(k),h[k]=!1)}function N(k){k!==f&&(n.bindFramebuffer(n.FRAMEBUFFER,k),f=k)}function u1(k,r1){return r1===null&&f!==null&&(r1=f),u[k]!==r1?(n.bindFramebuffer(k,r1),u[k]=r1,i&&(k===n.DRAW_FRAMEBUFFER&&(u[n.FRAMEBUFFER]=r1),k===n.FRAMEBUFFER&&(u[n.DRAW_FRAMEBUFFER]=r1)),!0):!1}function g1(k){return m!==k?(n.useProgram(k),m=k,!0):!1}let s1={[Ue]:n.FUNC_ADD,[f8]:n.FUNC_SUBTRACT,[d8]:n.FUNC_REVERSE_SUBTRACT};if(i)s1[U0]=n.MIN,s1[O0]=n.MAX;else{let k=e.get("EXT_blend_minmax");k!==null&&(s1[U0]=k.MIN_EXT,s1[O0]=k.MAX_EXT)}let h1={[p8]:n.ZERO,[m8]:n.ONE,[v8]:n.SRC_COLOR,[s6]:n.SRC_ALPHA,[C8]:n.SRC_ALPHA_SATURATE,[b8]:n.DST_COLOR,[x8]:n.DST_ALPHA,[g8]:n.ONE_MINUS_SRC_COLOR,[c6]:n.ONE_MINUS_SRC_ALPHA,[y8]:n.ONE_MINUS_DST_COLOR,[M8]:n.ONE_MINUS_DST_ALPHA};function L1(k,r1,X,c1,l1,E1,u2,h2){if(k===T2){v===!0&&(e1(n.BLEND),v=!1);return}if(v===!1&&(Y(n.BLEND),v=!0),k!==h8){if(k!==g||h2!==L){if((x!==Ue||C!==Ue)&&(n.blendEquation(n.FUNC_ADD),x=Ue,C=Ue),h2)switch(k){case u4:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case P0:n.blendFunc(n.ONE,n.ONE);break;case k0:n.blendFuncSeparate(n.ZERO,n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ONE_MINUS_SRC_ALPHA);break;case I0:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case u4:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case P0:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case k0:n.blendFunc(n.ZERO,n.ONE_MINUS_SRC_COLOR);break;case I0:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}p=null,d=null,b=null,A=null,g=k,L=h2}return}l1=l1||r1,E1=E1||X,u2=u2||c1,(r1!==x||l1!==C)&&(n.blendEquationSeparate(s1[r1],s1[l1]),x=r1,C=l1),(X!==p||c1!==d||E1!==b||u2!==A)&&(n.blendFuncSeparate(h1[X],h1[c1],h1[E1],h1[u2]),p=X,d=c1,b=E1,A=u2),g=k,L=null}function v1(k,r1){k.side===I2?e1(n.CULL_FACE):Y(n.CULL_FACE);let X=k.side===B1;r1&&(X=!X),N1(X),k.blending===u4&&k.transparent===!1?L1(T2):L1(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.premultipliedAlpha),o.setFunc(k.depthFunc),o.setTest(k.depthTest),o.setMask(k.depthWrite),c.setMask(k.colorWrite);let c1=k.stencilWrite;l.setTest(c1),c1&&(l.setMask(k.stencilWriteMask),l.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),l.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),E2(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?Y(n.SAMPLE_ALPHA_TO_COVERAGE):e1(n.SAMPLE_ALPHA_TO_COVERAGE)}function N1(k){y!==k&&(k?n.frontFace(n.CW):n.frontFace(n.CCW),y=k)}function j1(k){k!==o8?(Y(n.CULL_FACE),k!==z&&(k===B0?n.cullFace(n.BACK):k===l8?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):e1(n.CULL_FACE),z=k}function F2(k){k!==B&&(_&&n.lineWidth(k),B=k)}function E2(k,r1,X){k?(Y(n.POLYGON_OFFSET_FILL),(H!==r1||S!==X)&&(n.polygonOffset(r1,X),H=r1,S=X)):e1(n.POLYGON_OFFSET_FILL)}function F(k){k?Y(n.SCISSOR_TEST):e1(n.SCISSOR_TEST)}function E(k){k===void 0&&(k=n.TEXTURE0+G-1),T!==k&&(n.activeTexture(k),T=k)}function K(k,r1){T===null&&E();let X=D[T];X===void 0&&(X={type:void 0,texture:void 0},D[T]=X),(X.type!==k||X.texture!==r1)&&(n.bindTexture(k,r1||j[k]),X.type=k,X.texture=r1)}function t1(){let k=D[T];k!==void 0&&k.type!==void 0&&(n.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function f1(){try{n.compressedTexImage2D.apply(n,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function o1(){try{n.texImage2D.apply(n,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function y1(){try{n.texImage3D.apply(n,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function M1(k){$.equals(k)===!1&&(n.scissor(k.x,k.y,k.z,k.w),$.copy(k))}function C1(k){J.equals(k)===!1&&(n.viewport(k.x,k.y,k.z,k.w),J.copy(k))}function d1(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),i===!0&&(n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),h={},T=null,D={},f=null,u={},m=null,v=!1,g=null,x=null,p=null,d=null,C=null,b=null,A=null,L=!1,y=null,z=null,B=null,H=null,S=null,$.set(0,0,n.canvas.width,n.canvas.height),J.set(0,0,n.canvas.width,n.canvas.height),c.reset(),o.reset(),l.reset()}return{buffers:{color:c,depth:o,stencil:l},enable:Y,disable:e1,bindFramebuffer:u1,bindXRFramebuffer:N,useProgram:g1,setBlending:L1,setMaterial:v1,setFlipSided:N1,setCullFace:j1,setLineWidth:F2,setPolygonOffset:E2,setScissorTest:F,activeTexture:E,bindTexture:K,unbindTexture:t1,compressedTexImage2D:f1,texImage2D:o1,texImage3D:y1,scissor:M1,viewport:C1,reset:d1}}function Cc(n,e,t,i,a,r,s){let c=a.isWebGL2,o=a.maxTextures,l=a.maxCubemapSize,h=a.maxTextureSize,f=a.maxSamples,u=new WeakMap,m,v=!1;try{v=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(F,E){return v?new OffscreenCanvas(F,E):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function x(F,E,K,t1){let f1=1;if((F.width>t1||F.height>t1)&&(f1=t1/Math.max(F.width,F.height)),f1<1||E===!0)if(typeof HTMLImageElement!="undefined"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&F instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&F instanceof ImageBitmap){let o1=E?n8:Math.floor,y1=o1(f1*F.width),M1=o1(f1*F.height);m===void 0&&(m=g(y1,M1));let C1=K?g(y1,M1):m;return C1.width=y1,C1.height=M1,C1.getContext("2d").drawImage(F,0,0,y1,M1),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+y1+"x"+M1+")."),C1}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function p(F){return H0(F.width)&&H0(F.height)}function d(F){return c?!1:F.wrapS!==t2||F.wrapT!==t2||F.minFilter!==Z1&&F.minFilter!==v2}function C(F,E){return F.generateMipmaps&&E&&F.minFilter!==Z1&&F.minFilter!==v2}function b(F,E,K,t1,f1=1){n.generateMipmap(F);let o1=i.get(E);o1.__maxMipLevel=Math.log2(Math.max(K,t1,f1))}function A(F,E,K){if(c===!1)return E;if(F!==null){if(n[F]!==void 0)return n[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let t1=E;return E===n.RED&&(K===n.FLOAT&&(t1=n.R32F),K===n.HALF_FLOAT&&(t1=n.R16F),K===n.UNSIGNED_BYTE&&(t1=n.R8)),E===n.RGB&&(K===n.FLOAT&&(t1=n.RGB32F),K===n.HALF_FLOAT&&(t1=n.RGB16F),K===n.UNSIGNED_BYTE&&(t1=n.RGB8)),E===n.RGBA&&(K===n.FLOAT&&(t1=n.RGBA32F),K===n.HALF_FLOAT&&(t1=n.RGBA16F),K===n.UNSIGNED_BYTE&&(t1=n.RGBA8)),(t1===n.R16F||t1===n.R32F||t1===n.RGBA16F||t1===n.RGBA32F)&&e.get("EXT_color_buffer_float"),t1}function L(F){return F===Z1||F===q0||F===W0?n.NEAREST:n.LINEAR}function y(F){let E=F.target;E.removeEventListener("dispose",y),B(E),E.isVideoTexture&&u.delete(E),s.memory.textures--}function z(F){let E=F.target;E.removeEventListener("dispose",z),H(E)}function B(F){let E=i.get(F);E.__webglInit!==void 0&&(n.deleteTexture(E.__webglTexture),i.remove(F))}function H(F){let E=F.texture,K=i.get(F),t1=i.get(E);if(!!F){if(t1.__webglTexture!==void 0&&(n.deleteTexture(t1.__webglTexture),s.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let f1=0;f1<6;f1++)n.deleteFramebuffer(K.__webglFramebuffer[f1]),K.__webglDepthbuffer&&n.deleteRenderbuffer(K.__webglDepthbuffer[f1]);else n.deleteFramebuffer(K.__webglFramebuffer),K.__webglDepthbuffer&&n.deleteRenderbuffer(K.__webglDepthbuffer),K.__webglMultisampledFramebuffer&&n.deleteFramebuffer(K.__webglMultisampledFramebuffer),K.__webglColorRenderbuffer&&n.deleteRenderbuffer(K.__webglColorRenderbuffer),K.__webglDepthRenderbuffer&&n.deleteRenderbuffer(K.__webglDepthRenderbuffer);if(F.isWebGLMultipleRenderTargets)for(let f1=0,o1=E.length;f1<o1;f1++){let y1=i.get(E[f1]);y1.__webglTexture&&(n.deleteTexture(y1.__webglTexture),s.memory.textures--),i.remove(E[f1])}i.remove(E),i.remove(F)}}let S=0;function G(){S=0}function _(){let F=S;return F>=o&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+o),S+=1,F}function V(F,E){let K=i.get(F);if(F.isVideoTexture&&v1(F),F.version>0&&K.__version!==F.version){let t1=F.image;if(t1===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(t1.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Z(K,F,E);return}}t.activeTexture(n.TEXTURE0+E),t.bindTexture(n.TEXTURE_2D,K.__webglTexture)}function R(F,E){let K=i.get(F);if(F.version>0&&K.__version!==F.version){Z(K,F,E);return}t.activeTexture(n.TEXTURE0+E),t.bindTexture(n.TEXTURE_2D_ARRAY,K.__webglTexture)}function T(F,E){let K=i.get(F);if(F.version>0&&K.__version!==F.version){Z(K,F,E);return}t.activeTexture(n.TEXTURE0+E),t.bindTexture(n.TEXTURE_3D,K.__webglTexture)}function D(F,E){let K=i.get(F);if(F.version>0&&K.__version!==F.version){j(K,F,E);return}t.activeTexture(n.TEXTURE0+E),t.bindTexture(n.TEXTURE_CUBE_MAP,K.__webglTexture)}let I={[dt]:n.REPEAT,[t2]:n.CLAMP_TO_EDGE,[pt]:n.MIRRORED_REPEAT},W={[Z1]:n.NEAREST,[q0]:n.NEAREST_MIPMAP_NEAREST,[W0]:n.NEAREST_MIPMAP_LINEAR,[v2]:n.LINEAR,[B8]:n.LINEAR_MIPMAP_NEAREST,[qe]:n.LINEAR_MIPMAP_LINEAR};function $(F,E,K){if(K?(n.texParameteri(F,n.TEXTURE_WRAP_S,I[E.wrapS]),n.texParameteri(F,n.TEXTURE_WRAP_T,I[E.wrapT]),(F===n.TEXTURE_3D||F===n.TEXTURE_2D_ARRAY)&&n.texParameteri(F,n.TEXTURE_WRAP_R,I[E.wrapR]),n.texParameteri(F,n.TEXTURE_MAG_FILTER,W[E.magFilter]),n.texParameteri(F,n.TEXTURE_MIN_FILTER,W[E.minFilter])):(n.texParameteri(F,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(F,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),(F===n.TEXTURE_3D||F===n.TEXTURE_2D_ARRAY)&&n.texParameteri(F,n.TEXTURE_WRAP_R,n.CLAMP_TO_EDGE),(E.wrapS!==t2||E.wrapT!==t2)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(F,n.TEXTURE_MAG_FILTER,L(E.magFilter)),n.texParameteri(F,n.TEXTURE_MIN_FILTER,L(E.minFilter)),E.minFilter!==Z1&&E.minFilter!==v2&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){let t1=e.get("EXT_texture_filter_anisotropic");if(E.type===ae&&e.has("OES_texture_float_linear")===!1||c===!1&&E.type===Ae&&e.has("OES_texture_half_float_linear")===!1)return;(E.anisotropy>1||i.get(E).__currentAnisotropy)&&(n.texParameterf(F,t1.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,a.getMaxAnisotropy())),i.get(E).__currentAnisotropy=E.anisotropy)}}function J(F,E){F.__webglInit===void 0&&(F.__webglInit=!0,E.addEventListener("dispose",y),F.__webglTexture=n.createTexture(),s.memory.textures++)}function Z(F,E,K){let t1=n.TEXTURE_2D;E.isDataTexture2DArray&&(t1=n.TEXTURE_2D_ARRAY),E.isDataTexture3D&&(t1=n.TEXTURE_3D),J(F,E),t.activeTexture(n.TEXTURE0+K),t.bindTexture(t1,F.__webglTexture),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,E.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,E.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);let f1=d(E)&&p(E.image)===!1,o1=x(E.image,f1,!1,h),y1=p(o1)||c,M1=r.convert(E.format),C1=r.convert(E.type),d1=A(E.internalFormat,M1,C1);$(t1,E,y1);let k,r1=E.mipmaps;if(E.isDepthTexture)d1=n.DEPTH_COMPONENT,c?E.type===ae?d1=n.DEPTH_COMPONENT32F:E.type===L4?d1=n.DEPTH_COMPONENT24:E.type===E4?d1=n.DEPTH24_STENCIL8:d1=n.DEPTH_COMPONENT16:E.type===ae&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),E.format===vt&&d1===n.DEPTH_COMPONENT&&E.type!==mt&&E.type!==L4&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),E.type=mt,C1=r.convert(E.type)),E.format===gt&&d1===n.DEPTH_COMPONENT&&(d1=n.DEPTH_STENCIL,E.type!==E4&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),E.type=E4,C1=r.convert(E.type))),t.texImage2D(n.TEXTURE_2D,0,d1,o1.width,o1.height,0,M1,C1,null);else if(E.isDataTexture)if(r1.length>0&&y1){for(let X=0,c1=r1.length;X<c1;X++)k=r1[X],t.texImage2D(n.TEXTURE_2D,X,d1,k.width,k.height,0,M1,C1,k.data);E.generateMipmaps=!1,F.__maxMipLevel=r1.length-1}else t.texImage2D(n.TEXTURE_2D,0,d1,o1.width,o1.height,0,M1,C1,o1.data),F.__maxMipLevel=0;else if(E.isCompressedTexture){for(let X=0,c1=r1.length;X<c1;X++)k=r1[X],E.format!==K1&&E.format!==re?M1!==null?t.compressedTexImage2D(n.TEXTURE_2D,X,d1,k.width,k.height,0,k.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texImage2D(n.TEXTURE_2D,X,d1,k.width,k.height,0,M1,C1,k.data);F.__maxMipLevel=r1.length-1}else if(E.isDataTexture2DArray)t.texImage3D(n.TEXTURE_2D_ARRAY,0,d1,o1.width,o1.height,o1.depth,0,M1,C1,o1.data),F.__maxMipLevel=0;else if(E.isDataTexture3D)t.texImage3D(n.TEXTURE_3D,0,d1,o1.width,o1.height,o1.depth,0,M1,C1,o1.data),F.__maxMipLevel=0;else if(r1.length>0&&y1){for(let X=0,c1=r1.length;X<c1;X++)k=r1[X],t.texImage2D(n.TEXTURE_2D,X,d1,M1,C1,k);E.generateMipmaps=!1,F.__maxMipLevel=r1.length-1}else t.texImage2D(n.TEXTURE_2D,0,d1,M1,C1,o1),F.__maxMipLevel=0;C(E,y1)&&b(t1,E,o1.width,o1.height),F.__version=E.version,E.onUpdate&&E.onUpdate(E)}function j(F,E,K){if(E.image.length!==6)return;J(F,E),t.activeTexture(n.TEXTURE0+K),t.bindTexture(n.TEXTURE_CUBE_MAP,F.__webglTexture),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,E.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,E.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);let t1=E&&(E.isCompressedTexture||E.image[0].isCompressedTexture),f1=E.image[0]&&E.image[0].isDataTexture,o1=[];for(let X=0;X<6;X++)!t1&&!f1?o1[X]=x(E.image[X],!1,!0,l):o1[X]=f1?E.image[X].image:E.image[X];let y1=o1[0],M1=p(y1)||c,C1=r.convert(E.format),d1=r.convert(E.type),k=A(E.internalFormat,C1,d1);$(n.TEXTURE_CUBE_MAP,E,M1);let r1;if(t1){for(let X=0;X<6;X++){r1=o1[X].mipmaps;for(let c1=0;c1<r1.length;c1++){let l1=r1[c1];E.format!==K1&&E.format!==re?C1!==null?t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+X,c1,k,l1.width,l1.height,0,l1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+X,c1,k,l1.width,l1.height,0,C1,d1,l1.data)}}F.__maxMipLevel=r1.length-1}else{r1=E.mipmaps;for(let X=0;X<6;X++)if(f1){t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+X,0,k,o1[X].width,o1[X].height,0,C1,d1,o1[X].data);for(let c1=0;c1<r1.length;c1++){let E1=r1[c1].image[X].image;t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+X,c1+1,k,E1.width,E1.height,0,C1,d1,E1.data)}}else{t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+X,0,k,C1,d1,o1[X]);for(let c1=0;c1<r1.length;c1++){let l1=r1[c1];t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+X,c1+1,k,C1,d1,l1.image[X])}}F.__maxMipLevel=r1.length}C(E,M1)&&b(n.TEXTURE_CUBE_MAP,E,y1.width,y1.height),F.__version=E.version,E.onUpdate&&E.onUpdate(E)}function Y(F,E,K,t1,f1){let o1=r.convert(K.format),y1=r.convert(K.type),M1=A(K.internalFormat,o1,y1);f1===n.TEXTURE_3D||f1===n.TEXTURE_2D_ARRAY?t.texImage3D(f1,0,M1,E.width,E.height,E.depth,0,o1,y1,null):t.texImage2D(f1,0,M1,E.width,E.height,0,o1,y1,null),t.bindFramebuffer(n.FRAMEBUFFER,F),n.framebufferTexture2D(n.FRAMEBUFFER,t1,f1,i.get(K).__webglTexture,0),t.bindFramebuffer(n.FRAMEBUFFER,null)}function e1(F,E,K){if(n.bindRenderbuffer(n.RENDERBUFFER,F),E.depthBuffer&&!E.stencilBuffer){let t1=n.DEPTH_COMPONENT16;if(K){let f1=E.depthTexture;f1&&f1.isDepthTexture&&(f1.type===ae?t1=n.DEPTH_COMPONENT32F:f1.type===L4&&(t1=n.DEPTH_COMPONENT24));let o1=L1(E);n.renderbufferStorageMultisample(n.RENDERBUFFER,o1,t1,E.width,E.height)}else n.renderbufferStorage(n.RENDERBUFFER,t1,E.width,E.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,F)}else if(E.depthBuffer&&E.stencilBuffer){if(K){let t1=L1(E);n.renderbufferStorageMultisample(n.RENDERBUFFER,t1,n.DEPTH24_STENCIL8,E.width,E.height)}else n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,E.width,E.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,F)}else{let t1=E.isWebGLMultipleRenderTargets===!0?E.texture[0]:E.texture,f1=r.convert(t1.format),o1=r.convert(t1.type),y1=A(t1.internalFormat,f1,o1);if(K){let M1=L1(E);n.renderbufferStorageMultisample(n.RENDERBUFFER,M1,y1,E.width,E.height)}else n.renderbufferStorage(n.RENDERBUFFER,y1,E.width,E.height)}n.bindRenderbuffer(n.RENDERBUFFER,null)}function N(F,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,F),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),V(E.depthTexture,0);let t1=i.get(E.depthTexture).__webglTexture;if(E.depthTexture.format===vt)n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,t1,0);else if(E.depthTexture.format===gt)n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,t1,0);else throw new Error("Unknown depthTexture format")}function u1(F){let E=i.get(F),K=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture){if(K)throw new Error("target.depthTexture not supported in Cube render targets");N(E.__webglFramebuffer,F)}else if(K){E.__webglDepthbuffer=[];for(let t1=0;t1<6;t1++)t.bindFramebuffer(n.FRAMEBUFFER,E.__webglFramebuffer[t1]),E.__webglDepthbuffer[t1]=n.createRenderbuffer(),e1(E.__webglDepthbuffer[t1],F,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,E.__webglFramebuffer),E.__webglDepthbuffer=n.createRenderbuffer(),e1(E.__webglDepthbuffer,F,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function g1(F){let E=F.texture,K=i.get(F),t1=i.get(E);F.addEventListener("dispose",z),F.isWebGLMultipleRenderTargets!==!0&&(t1.__webglTexture=n.createTexture(),t1.__version=E.version,s.memory.textures++);let f1=F.isWebGLCubeRenderTarget===!0,o1=F.isWebGLMultipleRenderTargets===!0,y1=F.isWebGLMultisampleRenderTarget===!0,M1=E.isDataTexture3D||E.isDataTexture2DArray,C1=p(F)||c;if(c&&E.format===re&&(E.type===ae||E.type===Ae)&&(E.format=K1,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),f1){K.__webglFramebuffer=[];for(let d1=0;d1<6;d1++)K.__webglFramebuffer[d1]=n.createFramebuffer()}else if(K.__webglFramebuffer=n.createFramebuffer(),o1)if(a.drawBuffers){let d1=F.texture;for(let k=0,r1=d1.length;k<r1;k++){let X=i.get(d1[k]);X.__webglTexture===void 0&&(X.__webglTexture=n.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(y1)if(c){K.__webglMultisampledFramebuffer=n.createFramebuffer(),K.__webglColorRenderbuffer=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,K.__webglColorRenderbuffer);let d1=r.convert(E.format),k=r.convert(E.type),r1=A(E.internalFormat,d1,k),X=L1(F);n.renderbufferStorageMultisample(n.RENDERBUFFER,X,r1,F.width,F.height),t.bindFramebuffer(n.FRAMEBUFFER,K.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,K.__webglColorRenderbuffer),n.bindRenderbuffer(n.RENDERBUFFER,null),F.depthBuffer&&(K.__webglDepthRenderbuffer=n.createRenderbuffer(),e1(K.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(f1){t.bindTexture(n.TEXTURE_CUBE_MAP,t1.__webglTexture),$(n.TEXTURE_CUBE_MAP,E,C1);for(let d1=0;d1<6;d1++)Y(K.__webglFramebuffer[d1],F,E,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+d1);C(E,C1)&&b(n.TEXTURE_CUBE_MAP,E,F.width,F.height),t.unbindTexture()}else if(o1){let d1=F.texture;for(let k=0,r1=d1.length;k<r1;k++){let X=d1[k],c1=i.get(X);t.bindTexture(n.TEXTURE_2D,c1.__webglTexture),$(n.TEXTURE_2D,X,C1),Y(K.__webglFramebuffer,F,X,n.COLOR_ATTACHMENT0+k,n.TEXTURE_2D),C(X,C1)&&b(n.TEXTURE_2D,X,F.width,F.height)}t.unbindTexture()}else{let d1=n.TEXTURE_2D;M1&&(c?d1=E.isDataTexture3D?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),t.bindTexture(d1,t1.__webglTexture),$(d1,E,C1),Y(K.__webglFramebuffer,F,E,n.COLOR_ATTACHMENT0,d1),C(E,C1)&&b(d1,E,F.width,F.height,F.depth),t.unbindTexture()}F.depthBuffer&&u1(F)}function s1(F){let E=p(F)||c,K=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let t1=0,f1=K.length;t1<f1;t1++){let o1=K[t1];if(C(o1,E)){let y1=F.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,M1=i.get(o1).__webglTexture;t.bindTexture(y1,M1),b(y1,o1,F.width,F.height),t.unbindTexture()}}}function h1(F){if(F.isWebGLMultisampleRenderTarget)if(c){let E=F.width,K=F.height,t1=n.COLOR_BUFFER_BIT;F.depthBuffer&&(t1|=n.DEPTH_BUFFER_BIT),F.stencilBuffer&&(t1|=n.STENCIL_BUFFER_BIT);let f1=i.get(F);t.bindFramebuffer(n.READ_FRAMEBUFFER,f1.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,f1.__webglFramebuffer),n.blitFramebuffer(0,0,E,K,0,0,E,K,t1,n.NEAREST),t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,f1.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function L1(F){return c&&F.isWebGLMultisampleRenderTarget?Math.min(f,F.samples):0}function v1(F){let E=s.render.frame;u.get(F)!==E&&(u.set(F,E),F.update())}let N1=!1,j1=!1;function F2(F,E){F&&F.isWebGLRenderTarget&&(N1===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),N1=!0),F=F.texture),V(F,E)}function E2(F,E){F&&F.isWebGLCubeRenderTarget&&(j1===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),j1=!0),F=F.texture),D(F,E)}this.allocateTextureUnit=_,this.resetTextureUnits=G,this.setTexture2D=V,this.setTexture2DArray=R,this.setTexture3D=T,this.setTextureCube=D,this.setupRenderTarget=g1,this.updateRenderTargetMipmap=s1,this.updateMultisampleRenderTarget=h1,this.safeSetTexture2D=F2,this.safeSetTextureCube=E2}function zc(n,e,t){let i=t.isWebGL2;function a(r){let s;if(r===ie)return n.UNSIGNED_BYTE;if(r===U8)return n.UNSIGNED_SHORT_4_4_4_4;if(r===O8)return n.UNSIGNED_SHORT_5_5_5_1;if(r===G8)return n.UNSIGNED_SHORT_5_6_5;if(r===P8)return n.BYTE;if(r===k8)return n.SHORT;if(r===mt)return n.UNSIGNED_SHORT;if(r===I8)return n.INT;if(r===L4)return n.UNSIGNED_INT;if(r===ae)return n.FLOAT;if(r===Ae)return i?n.HALF_FLOAT:(s=e.get("OES_texture_half_float"),s!==null?s.HALF_FLOAT_OES:null);if(r===q8)return n.ALPHA;if(r===re)return n.RGB;if(r===K1)return n.RGBA;if(r===W8)return n.LUMINANCE;if(r===j8)return n.LUMINANCE_ALPHA;if(r===vt)return n.DEPTH_COMPONENT;if(r===gt)return n.DEPTH_STENCIL;if(r===Z8)return n.RED;if(r===Y8)return n.RED_INTEGER;if(r===$8)return n.RG;if(r===K8)return n.RG_INTEGER;if(r===J8)return n.RGB_INTEGER;if(r===Q8)return n.RGBA_INTEGER;if(r===j0||r===X0||r===Z0||r===Y0)if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(r===j0)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===X0)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Z0)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Y0)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===$0||r===K0||r===J0||r===Q0)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(r===$0)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===K0)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===J0)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Q0)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===er)return s=e.get("WEBGL_compressed_texture_etc1"),s!==null?s.COMPRESSED_RGB_ETC1_WEBGL:null;if((r===e3||r===t3)&&(s=e.get("WEBGL_compressed_texture_etc"),s!==null)){if(r===e3)return s.COMPRESSED_RGB8_ETC2;if(r===t3)return s.COMPRESSED_RGBA8_ETC2_EAC}if(r===tr||r===ir||r===ar||r===rr||r===nr||r===sr||r===cr||r===or||r===lr||r===ur||r===hr||r===fr||r===dr||r===pr||r===vr||r===gr||r===xr||r===Mr||r===br||r===yr||r===Cr||r===zr||r===Ar||r===wr||r===_r||r===Sr||r===Lr||r===Er)return s=e.get("WEBGL_compressed_texture_astc"),s!==null?r:null;if(r===mr)return s=e.get("EXT_texture_compression_bptc"),s!==null?r:null;if(r===E4)return i?n.UNSIGNED_INT_24_8:(s=e.get("WEBGL_depth_texture"),s!==null?s.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:a}}var U6=class extends $1{constructor(e=[]){super();this.cameras=e}};U6.prototype.isArrayCamera=!0;var M4=class extends G1{constructor(){super();this.type="Group"}};M4.prototype.isGroup=!0;var Pu={type:"move"},Dt=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new M4,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new M4,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new P,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new P),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new M4,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new P,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new P),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let a=null,r=null,s=null,c=this._targetRay,o=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(c!==null&&(a=t.getPose(e.targetRaySpace,i),a!==null&&(c.matrix.fromArray(a.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),a.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(a.linearVelocity)):c.hasLinearVelocity=!1,a.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(a.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(Pu))),l&&e.hand){s=!0;for(let g of e.hand.values()){let x=t.getJointPose(g,i);if(l.joints[g.jointName]===void 0){let d=new M4;d.matrixAutoUpdate=!1,d.visible=!1,l.joints[g.jointName]=d,l.add(d)}let p=l.joints[g.jointName];x!==null&&(p.matrix.fromArray(x.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.jointRadius=x.radius),p.visible=x!==null}let h=l.joints["index-finger-tip"],f=l.joints["thumb-tip"],u=h.position.distanceTo(f.position),m=.02,v=.005;l.inputState.pinching&&u>m+v?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&u<=m-v&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else o!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,i),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));return c!==null&&(c.visible=a!==null),o!==null&&(o.visible=r!==null),l!==null&&(l.visible=s!==null),this}};var ii=class extends _2{constructor(e,t){super();let i=this,a=e.state,r=null,s=1,c=null,o="local-floor",l=null,h=null,f=null,u=null,m=null,v=!1,g=null,x=null,p=null,d=null,C=null,b=null,A=[],L=new Map,y=new $1;y.layers.enable(1),y.viewport=new O1;let z=new $1;z.layers.enable(2),z.viewport=new O1;let B=[y,z],H=new U6;H.layers.enable(1),H.layers.enable(2);let S=null,G=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let Y=A[j];return Y===void 0&&(Y=new Dt,A[j]=Y),Y.getTargetRaySpace()},this.getControllerGrip=function(j){let Y=A[j];return Y===void 0&&(Y=new Dt,A[j]=Y),Y.getGripSpace()},this.getHand=function(j){let Y=A[j];return Y===void 0&&(Y=new Dt,A[j]=Y),Y.getHandSpace()};function _(j){let Y=L.get(j.inputSource);Y&&Y.dispatchEvent({type:j.type,data:j.inputSource})}function V(){L.forEach(function(j,Y){j.disconnect(Y)}),L.clear(),S=null,G=null,a.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),f&&t.deleteFramebuffer(f),g&&t.deleteFramebuffer(g),x&&t.deleteRenderbuffer(x),p&&t.deleteRenderbuffer(p),f=null,g=null,x=null,p=null,m=null,u=null,h=null,r=null,Z.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){o=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c},this.getBaseLayer=function(){return u!==null?u:m},this.getBinding=function(){return h},this.getFrame=function(){return d},this.getSession=function(){return r},this.setSession=async function(j){if(r=j,r!==null){r.addEventListener("select",_),r.addEventListener("selectstart",_),r.addEventListener("selectend",_),r.addEventListener("squeeze",_),r.addEventListener("squeezestart",_),r.addEventListener("squeezeend",_),r.addEventListener("end",V),r.addEventListener("inputsourceschange",R);let Y=t.getContextAttributes();if(Y.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0){let e1={antialias:Y.antialias,alpha:Y.alpha,depth:Y.depth,stencil:Y.stencil,framebufferScaleFactor:s};m=new XRWebGLLayer(r,t,e1),r.updateRenderState({baseLayer:m})}else if(t instanceof WebGLRenderingContext){let e1={antialias:!0,alpha:Y.alpha,depth:Y.depth,stencil:Y.stencil,framebufferScaleFactor:s};m=new XRWebGLLayer(r,t,e1),r.updateRenderState({layers:[m]})}else{v=Y.antialias;let e1=null;Y.depth&&(b=t.DEPTH_BUFFER_BIT,Y.stencil&&(b|=t.STENCIL_BUFFER_BIT),C=Y.stencil?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,e1=Y.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24);let N={colorFormat:Y.alpha?t.RGBA8:t.RGB8,depthFormat:e1,scaleFactor:s};h=new XRWebGLBinding(r,t),u=h.createProjectionLayer(N),f=t.createFramebuffer(),r.updateRenderState({layers:[u]}),v&&(g=t.createFramebuffer(),x=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,x),t.renderbufferStorageMultisample(t.RENDERBUFFER,4,t.RGBA8,u.textureWidth,u.textureHeight),a.bindFramebuffer(t.FRAMEBUFFER,g),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,x),t.bindRenderbuffer(t.RENDERBUFFER,null),e1!==null&&(p=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,p),t.renderbufferStorageMultisample(t.RENDERBUFFER,4,e1,u.textureWidth,u.textureHeight),t.framebufferRenderbuffer(t.FRAMEBUFFER,C,t.RENDERBUFFER,p),t.bindRenderbuffer(t.RENDERBUFFER,null)),a.bindFramebuffer(t.FRAMEBUFFER,null))}c=await r.requestReferenceSpace(o),Z.setContext(r),Z.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function R(j){let Y=r.inputSources;for(let e1=0;e1<A.length;e1++)L.set(Y[e1],A[e1]);for(let e1=0;e1<j.removed.length;e1++){let N=j.removed[e1],u1=L.get(N);u1&&(u1.dispatchEvent({type:"disconnected",data:N}),L.delete(N))}for(let e1=0;e1<j.added.length;e1++){let N=j.added[e1],u1=L.get(N);u1&&u1.dispatchEvent({type:"connected",data:N})}}let T=new P,D=new P;function I(j,Y,e1){T.setFromMatrixPosition(Y.matrixWorld),D.setFromMatrixPosition(e1.matrixWorld);let N=T.distanceTo(D),u1=Y.projectionMatrix.elements,g1=e1.projectionMatrix.elements,s1=u1[14]/(u1[10]-1),h1=u1[14]/(u1[10]+1),L1=(u1[9]+1)/u1[5],v1=(u1[9]-1)/u1[5],N1=(u1[8]-1)/u1[0],j1=(g1[8]+1)/g1[0],F2=s1*N1,E2=s1*j1,F=N/(-N1+j1),E=F*-N1;Y.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(E),j.translateZ(F),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();let K=s1+F,t1=h1+F,f1=F2-E,o1=E2+(N-E),y1=L1*h1/t1*K,M1=v1*h1/t1*K;j.projectionMatrix.makePerspective(f1,o1,y1,M1,K,t1)}function W(j,Y){Y===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(Y.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(r===null)return;H.near=z.near=y.near=j.near,H.far=z.far=y.far=j.far,(S!==H.near||G!==H.far)&&(r.updateRenderState({depthNear:H.near,depthFar:H.far}),S=H.near,G=H.far);let Y=j.parent,e1=H.cameras;W(H,Y);for(let u1=0;u1<e1.length;u1++)W(e1[u1],Y);H.matrixWorld.decompose(H.position,H.quaternion,H.scale),j.position.copy(H.position),j.quaternion.copy(H.quaternion),j.scale.copy(H.scale),j.matrix.copy(H.matrix),j.matrixWorld.copy(H.matrixWorld);let N=j.children;for(let u1=0,g1=N.length;u1<g1;u1++)N[u1].updateMatrixWorld(!0);e1.length===2?I(H,y,z):H.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return H},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(m!==null)return m.fixedFoveation},this.setFoveation=function(j){u!==null&&(u.fixedFoveation=j),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=j)};let $=null;function J(j,Y){if(l=Y.getViewerPose(c),d=Y,l!==null){let N=l.views;m!==null&&a.bindXRFramebuffer(m.framebuffer);let u1=!1;N.length!==H.cameras.length&&(H.cameras.length=0,u1=!0);for(let g1=0;g1<N.length;g1++){let s1=N[g1],h1=null;if(m!==null)h1=m.getViewport(s1);else{let v1=h.getViewSubImage(u,s1);a.bindXRFramebuffer(f),v1.depthStencilTexture!==void 0&&t.framebufferTexture2D(t.FRAMEBUFFER,C,t.TEXTURE_2D,v1.depthStencilTexture,0),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,v1.colorTexture,0),h1=v1.viewport}let L1=B[g1];L1.matrix.fromArray(s1.transform.matrix),L1.projectionMatrix.fromArray(s1.projectionMatrix),L1.viewport.set(h1.x,h1.y,h1.width,h1.height),g1===0&&H.matrix.copy(L1.matrix),u1===!0&&H.cameras.push(L1)}v&&(a.bindXRFramebuffer(g),b!==null&&t.clear(b))}let e1=r.inputSources;for(let N=0;N<A.length;N++){let u1=A[N],g1=e1[N];u1.update(g1,Y,c)}if($&&$(j,Y),v){let N=u.textureWidth,u1=u.textureHeight;a.bindFramebuffer(t.READ_FRAMEBUFFER,g),a.bindFramebuffer(t.DRAW_FRAMEBUFFER,f),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,[C]),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[C]),t.blitFramebuffer(0,0,N,u1,0,0,N,u1,t.COLOR_BUFFER_BIT,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,[t.COLOR_ATTACHMENT0]),a.bindFramebuffer(t.READ_FRAMEBUFFER,null),a.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),a.bindFramebuffer(t.FRAMEBUFFER,g)}d=null}let Z=new T6;Z.setAnimationLoop(J),this.setAnimationLoop=function(j){$=j},this.dispose=function(){}}};function Ac(n){function e(p,d){p.fogColor.value.copy(d.color),d.isFog?(p.fogNear.value=d.near,p.fogFar.value=d.far):d.isFogExp2&&(p.fogDensity.value=d.density)}function t(p,d,C,b,A){d.isMeshBasicMaterial?i(p,d):d.isMeshLambertMaterial?(i(p,d),o(p,d)):d.isMeshToonMaterial?(i(p,d),h(p,d)):d.isMeshPhongMaterial?(i(p,d),l(p,d)):d.isMeshStandardMaterial?(i(p,d),d.isMeshPhysicalMaterial?u(p,d,A):f(p,d)):d.isMeshMatcapMaterial?(i(p,d),m(p,d)):d.isMeshDepthMaterial?(i(p,d),v(p,d)):d.isMeshDistanceMaterial?(i(p,d),g(p,d)):d.isMeshNormalMaterial?(i(p,d),x(p,d)):d.isLineBasicMaterial?(a(p,d),d.isLineDashedMaterial&&r(p,d)):d.isPointsMaterial?s(p,d,C,b):d.isSpriteMaterial?c(p,d):d.isShadowMaterial?(p.color.value.copy(d.color),p.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}function i(p,d){p.opacity.value=d.opacity,d.color&&p.diffuse.value.copy(d.color),d.emissive&&p.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(p.map.value=d.map),d.alphaMap&&(p.alphaMap.value=d.alphaMap),d.specularMap&&(p.specularMap.value=d.specularMap),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);let C=n.get(d).envMap;if(C){p.envMap.value=C,p.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=d.reflectivity,p.ior.value=d.ior,p.refractionRatio.value=d.refractionRatio;let L=n.get(C).__maxMipLevel;L!==void 0&&(p.maxMipLevel.value=L)}d.lightMap&&(p.lightMap.value=d.lightMap,p.lightMapIntensity.value=d.lightMapIntensity),d.aoMap&&(p.aoMap.value=d.aoMap,p.aoMapIntensity.value=d.aoMapIntensity);let b;d.map?b=d.map:d.specularMap?b=d.specularMap:d.displacementMap?b=d.displacementMap:d.normalMap?b=d.normalMap:d.bumpMap?b=d.bumpMap:d.roughnessMap?b=d.roughnessMap:d.metalnessMap?b=d.metalnessMap:d.alphaMap?b=d.alphaMap:d.emissiveMap?b=d.emissiveMap:d.clearcoatMap?b=d.clearcoatMap:d.clearcoatNormalMap?b=d.clearcoatNormalMap:d.clearcoatRoughnessMap?b=d.clearcoatRoughnessMap:d.specularIntensityMap?b=d.specularIntensityMap:d.specularTintMap?b=d.specularTintMap:d.transmissionMap?b=d.transmissionMap:d.thicknessMap&&(b=d.thicknessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),p.uvTransform.value.copy(b.matrix));let A;d.aoMap?A=d.aoMap:d.lightMap&&(A=d.lightMap),A!==void 0&&(A.isWebGLRenderTarget&&(A=A.texture),A.matrixAutoUpdate===!0&&A.updateMatrix(),p.uv2Transform.value.copy(A.matrix))}function a(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity}function r(p,d){p.dashSize.value=d.dashSize,p.totalSize.value=d.dashSize+d.gapSize,p.scale.value=d.scale}function s(p,d,C,b){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.size.value=d.size*C,p.scale.value=b*.5,d.map&&(p.map.value=d.map),d.alphaMap&&(p.alphaMap.value=d.alphaMap),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);let A;d.map?A=d.map:d.alphaMap&&(A=d.alphaMap),A!==void 0&&(A.matrixAutoUpdate===!0&&A.updateMatrix(),p.uvTransform.value.copy(A.matrix))}function c(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.rotation.value=d.rotation,d.map&&(p.map.value=d.map),d.alphaMap&&(p.alphaMap.value=d.alphaMap),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);let C;d.map?C=d.map:d.alphaMap&&(C=d.alphaMap),C!==void 0&&(C.matrixAutoUpdate===!0&&C.updateMatrix(),p.uvTransform.value.copy(C.matrix))}function o(p,d){d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap)}function l(p,d){p.specular.value.copy(d.specular),p.shininess.value=Math.max(d.shininess,1e-4),d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap),d.bumpMap&&(p.bumpMap.value=d.bumpMap,p.bumpScale.value=d.bumpScale,d.side===B1&&(p.bumpScale.value*=-1)),d.normalMap&&(p.normalMap.value=d.normalMap,p.normalScale.value.copy(d.normalScale),d.side===B1&&p.normalScale.value.negate()),d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias)}function h(p,d){d.gradientMap&&(p.gradientMap.value=d.gradientMap),d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap),d.bumpMap&&(p.bumpMap.value=d.bumpMap,p.bumpScale.value=d.bumpScale,d.side===B1&&(p.bumpScale.value*=-1)),d.normalMap&&(p.normalMap.value=d.normalMap,p.normalScale.value.copy(d.normalScale),d.side===B1&&p.normalScale.value.negate()),d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias)}function f(p,d){p.roughness.value=d.roughness,p.metalness.value=d.metalness,d.roughnessMap&&(p.roughnessMap.value=d.roughnessMap),d.metalnessMap&&(p.metalnessMap.value=d.metalnessMap),d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap),d.bumpMap&&(p.bumpMap.value=d.bumpMap,p.bumpScale.value=d.bumpScale,d.side===B1&&(p.bumpScale.value*=-1)),d.normalMap&&(p.normalMap.value=d.normalMap,p.normalScale.value.copy(d.normalScale),d.side===B1&&p.normalScale.value.negate()),d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias),n.get(d).envMap&&(p.envMapIntensity.value=d.envMapIntensity)}function u(p,d,C){f(p,d),p.ior.value=d.ior,d.sheenTint&&p.sheenTint.value.copy(d.sheenTint),d.clearcoat>0&&(p.clearcoat.value=d.clearcoat,p.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(p.clearcoatMap.value=d.clearcoatMap),d.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap),d.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),p.clearcoatNormalMap.value=d.clearcoatNormalMap,d.side===B1&&p.clearcoatNormalScale.value.negate())),d.transmission>0&&(p.transmission.value=d.transmission,p.transmissionSamplerMap.value=C.texture,p.transmissionSamplerSize.value.set(C.width,C.height),d.transmissionMap&&(p.transmissionMap.value=d.transmissionMap),p.thickness.value=d.thickness,d.thicknessMap&&(p.thicknessMap.value=d.thicknessMap),p.attenuationDistance.value=d.attenuationDistance,p.attenuationTint.value.copy(d.attenuationTint)),p.specularIntensity.value=d.specularIntensity,p.specularTint.value.copy(d.specularTint),d.specularIntensityMap&&(p.specularIntensityMap.value=d.specularIntensityMap),d.specularTintMap&&(p.specularTintMap.value=d.specularTintMap)}function m(p,d){d.matcap&&(p.matcap.value=d.matcap),d.bumpMap&&(p.bumpMap.value=d.bumpMap,p.bumpScale.value=d.bumpScale,d.side===B1&&(p.bumpScale.value*=-1)),d.normalMap&&(p.normalMap.value=d.normalMap,p.normalScale.value.copy(d.normalScale),d.side===B1&&p.normalScale.value.negate()),d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias)}function v(p,d){d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias)}function g(p,d){d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias),p.referencePosition.value.copy(d.referencePosition),p.nearDistance.value=d.nearDistance,p.farDistance.value=d.farDistance}function x(p,d){d.bumpMap&&(p.bumpMap.value=d.bumpMap,p.bumpScale.value=d.bumpScale,d.side===B1&&(p.bumpScale.value*=-1)),d.normalMap&&(p.normalMap.value=d.normalMap,p.normalScale.value.copy(d.normalScale),d.side===B1&&p.normalScale.value.negate()),d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function ku(){let n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return n.style.display="block",n}function wc(n={}){let e=n.canvas!==void 0?n.canvas:ku(),t=n.context!==void 0?n.context:null,i=n.alpha!==void 0?n.alpha:!1,a=n.depth!==void 0?n.depth:!0,r=n.stencil!==void 0?n.stencil:!0,s=n.antialias!==void 0?n.antialias:!1,c=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,o=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,l=n.powerPreference!==void 0?n.powerPreference:"default",h=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1,f=null,u=null,m=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=i2,this.physicallyCorrectLights=!1,this.toneMapping=U2,this.toneMappingExposure=1;let g=this,x=!1,p=0,d=0,C=null,b=-1,A=null,L=new O1,y=new O1,z=null,B=e.width,H=e.height,S=1,G=null,_=null,V=new O1(0,0,B,H),R=new O1(0,0,B,H),T=!1,D=[],I=new v4,W=!1,$=!1,J=null,Z=new P1,j=new P,Y={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function e1(){return C===null?S:1}let N=t;function u1(w,O){for(let U=0;U<w.length;U++){let q=w[U],Q=e.getContext(q,O);if(Q!==null)return Q}return null}try{let w={alpha:i,depth:a,stencil:r,antialias:s,premultipliedAlpha:c,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:h};if(e.addEventListener("webglcontextlost",u2,!1),e.addEventListener("webglcontextrestored",h2,!1),N===null){let O=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&O.shift(),N=u1(O,w),N===null)throw u1(O)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}N.getShaderPrecisionFormat===void 0&&(N.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(w){throw console.error("THREE.WebGLRenderer: "+w.message),w}let g1,s1,h1,L1,v1,N1,j1,F2,E2,F,E,K,t1,f1,o1,y1,M1,C1,d1,k,r1,X,c1;function l1(){g1=new k5(N),s1=new S5(N,g1,n),g1.init(s1),X=new zc(N,g1,s1),h1=new yc(N,g1,s1),D[0]=N.BACK,L1=new O5(N),v1=new hc,N1=new Cc(N,g1,h1,v1,s1,X,L1),j1=new E5(g),F2=new P5(g),E2=new Xr(N,s1),c1=new w5(N,g1,E2,s1),F=new I5(N,E2,L1,c1),E=new q5(N,F,E2,L1),d1=new G5(N),y1=new L5(v1),K=new uc(g,j1,F2,g1,s1,c1,y1),t1=new Ac(v1),f1=new pc(v1),o1=new gc(g1,s1),C1=new A5(g,j1,h1,E,c),M1=new bc(g,E,s1),k=new _5(N,g1,L1,s1),r1=new U5(N,g1,L1,s1),L1.programs=K.programs,g.capabilities=s1,g.extensions=g1,g.properties=v1,g.renderLists=f1,g.shadowMap=M1,g.state=h1,g.info=L1}l1();let E1=new ii(g,N);this.xr=E1,this.getContext=function(){return N},this.getContextAttributes=function(){return N.getContextAttributes()},this.forceContextLoss=function(){let w=g1.get("WEBGL_lose_context");w&&w.loseContext()},this.forceContextRestore=function(){let w=g1.get("WEBGL_lose_context");w&&w.restoreContext()},this.getPixelRatio=function(){return S},this.setPixelRatio=function(w){w!==void 0&&(S=w,this.setSize(B,H,!1))},this.getSize=function(w){return w.set(B,H)},this.setSize=function(w,O,U){if(E1.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}B=w,H=O,e.width=Math.floor(w*S),e.height=Math.floor(O*S),U!==!1&&(e.style.width=w+"px",e.style.height=O+"px"),this.setViewport(0,0,w,O)},this.getDrawingBufferSize=function(w){return w.set(B*S,H*S).floor()},this.setDrawingBufferSize=function(w,O,U){B=w,H=O,S=U,e.width=Math.floor(w*U),e.height=Math.floor(O*U),this.setViewport(0,0,w,O)},this.getCurrentViewport=function(w){return w.copy(L)},this.getViewport=function(w){return w.copy(V)},this.setViewport=function(w,O,U,q){w.isVector4?V.set(w.x,w.y,w.z,w.w):V.set(w,O,U,q),h1.viewport(L.copy(V).multiplyScalar(S).floor())},this.getScissor=function(w){return w.copy(R)},this.setScissor=function(w,O,U,q){w.isVector4?R.set(w.x,w.y,w.z,w.w):R.set(w,O,U,q),h1.scissor(y.copy(R).multiplyScalar(S).floor())},this.getScissorTest=function(){return T},this.setScissorTest=function(w){h1.setScissorTest(T=w)},this.setOpaqueSort=function(w){G=w},this.setTransparentSort=function(w){_=w},this.getClearColor=function(w){return w.copy(C1.getClearColor())},this.setClearColor=function(){C1.setClearColor.apply(C1,arguments)},this.getClearAlpha=function(){return C1.getClearAlpha()},this.setClearAlpha=function(){C1.setClearAlpha.apply(C1,arguments)},this.clear=function(w,O,U){let q=0;(w===void 0||w)&&(q|=N.COLOR_BUFFER_BIT),(O===void 0||O)&&(q|=N.DEPTH_BUFFER_BIT),(U===void 0||U)&&(q|=N.STENCIL_BUFFER_BIT),N.clear(q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",u2,!1),e.removeEventListener("webglcontextrestored",h2,!1),f1.dispose(),o1.dispose(),v1.dispose(),j1.dispose(),F2.dispose(),E.dispose(),c1.dispose(),E1.dispose(),E1.removeEventListener("sessionstart",si),E1.removeEventListener("sessionend",ci),J&&(J.dispose(),J=null),t4.stop()};function u2(w){w.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function h2(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;let w=L1.autoReset,O=M1.enabled,U=M1.autoUpdate,q=M1.needsUpdate,Q=M1.type;l1(),L1.autoReset=w,M1.enabled=O,M1.autoUpdate=U,M1.needsUpdate=q,M1.type=Q}function Ne(w){let O=w.target;O.removeEventListener("dispose",Ne),q1(O)}function q1(w){oe(w),v1.remove(w)}function oe(w){let O=v1.get(w).programs;O!==void 0&&O.forEach(function(U){K.releaseProgram(U)})}function le(w,O){w.render(function(U){g.renderBufferImmediate(U,O)})}this.renderBufferImmediate=function(w,O){c1.initAttributes();let U=v1.get(w);w.hasPositions&&!U.position&&(U.position=N.createBuffer()),w.hasNormals&&!U.normal&&(U.normal=N.createBuffer()),w.hasUvs&&!U.uv&&(U.uv=N.createBuffer()),w.hasColors&&!U.color&&(U.color=N.createBuffer());let q=O.getAttributes();w.hasPositions&&(N.bindBuffer(N.ARRAY_BUFFER,U.position),N.bufferData(N.ARRAY_BUFFER,w.positionArray,N.DYNAMIC_DRAW),c1.enableAttribute(q.position.location),N.vertexAttribPointer(q.position.location,3,N.FLOAT,!1,0,0)),w.hasNormals&&(N.bindBuffer(N.ARRAY_BUFFER,U.normal),N.bufferData(N.ARRAY_BUFFER,w.normalArray,N.DYNAMIC_DRAW),c1.enableAttribute(q.normal.location),N.vertexAttribPointer(q.normal.location,3,N.FLOAT,!1,0,0)),w.hasUvs&&(N.bindBuffer(N.ARRAY_BUFFER,U.uv),N.bufferData(N.ARRAY_BUFFER,w.uvArray,N.DYNAMIC_DRAW),c1.enableAttribute(q.uv.location),N.vertexAttribPointer(q.uv.location,2,N.FLOAT,!1,0,0)),w.hasColors&&(N.bindBuffer(N.ARRAY_BUFFER,U.color),N.bufferData(N.ARRAY_BUFFER,w.colorArray,N.DYNAMIC_DRAW),c1.enableAttribute(q.color.location),N.vertexAttribPointer(q.color.location,3,N.FLOAT,!1,0,0)),c1.disableUnusedAttributes(),N.drawArrays(N.TRIANGLES,0,w.count),w.count=0},this.renderBufferDirect=function(w,O,U,q,Q,z1){O===null&&(O=Y);let m1=Q.isMesh&&Q.matrixWorld.determinant()<0,p1=hi(w,O,q,Q);h1.setMaterial(q,m1);let S1=U.index,R1=U.attributes.position;if(S1===null){if(R1===void 0||R1.count===0)return}else if(S1.count===0)return;let D1=1;q.wireframe===!0&&(S1=F.getWireframeAttribute(U),D1=2),(U.morphAttributes.position!==void 0||U.morphAttributes.normal!==void 0)&&d1.update(Q,U,q,p1),c1.setup(Q,q,p1,U,S1);let T1,x1=k;S1!==null&&(T1=E2.get(S1),x1=r1,x1.setIndex(T1));let i4=S1!==null?S1.count:R1.count,X1=U.drawRange.start*D1,Fe=U.drawRange.count*D1,R2=z1!==null?z1.start*D1:0,a4=z1!==null?z1.count*D1:1/0,Re=Math.max(X1,R2),Q1=Math.min(i4,X1+Fe,R2+a4)-1,Z2=Math.max(0,Q1-Re+1);if(Z2!==0){if(Q.isMesh)q.wireframe===!0?(h1.setLineWidth(q.wireframeLinewidth*e1()),x1.setMode(N.LINES)):x1.setMode(N.TRIANGLES);else if(Q.isLine){let n2=q.linewidth;n2===void 0&&(n2=1),h1.setLineWidth(n2*e1()),Q.isLineSegments?x1.setMode(N.LINES):Q.isLineLoop?x1.setMode(N.LINE_LOOP):x1.setMode(N.LINE_STRIP)}else Q.isPoints?x1.setMode(N.POINTS):Q.isSprite&&x1.setMode(N.TRIANGLES);if(Q.isInstancedMesh)x1.renderInstances(Re,Z2,Q.count);else if(U.isInstancedBufferGeometry){let n2=Math.min(U.instanceCount,U._maxInstanceCount);x1.renderInstances(Re,Z2,n2)}else x1.render(Re,Z2)}},this.compile=function(w,O){u=o1.get(w),u.init(),v.push(u),w.traverseVisible(function(U){U.isLight&&U.layers.test(O.layers)&&(u.pushLight(U),U.castShadow&&u.pushShadow(U))}),u.setupLights(g.physicallyCorrectLights),w.traverse(function(U){let q=U.material;if(q)if(Array.isArray(q))for(let Q=0;Q<q.length;Q++){let z1=q[Q];K6(z1,w,U)}else K6(q,w,U)}),v.pop(),u=null};let $6=null;function Fc(w){$6&&$6(w)}function si(){t4.stop()}function ci(){t4.start()}let t4=new T6;t4.setAnimationLoop(Fc),typeof window!="undefined"&&t4.setContext(window),this.setAnimationLoop=function(w){$6=w,E1.setAnimationLoop(w),w===null?t4.stop():t4.start()},E1.addEventListener("sessionstart",si),E1.addEventListener("sessionend",ci),this.render=function(w,O){if(O!==void 0&&O.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;w.autoUpdate===!0&&w.updateMatrixWorld(),O.parent===null&&O.updateMatrixWorld(),E1.enabled===!0&&E1.isPresenting===!0&&(E1.cameraAutoUpdate===!0&&E1.updateCamera(O),O=E1.getCamera()),w.isScene===!0&&w.onBeforeRender(g,w,O,C),u=o1.get(w,v.length),u.init(),v.push(u),Z.multiplyMatrices(O.projectionMatrix,O.matrixWorldInverse),I.setFromProjectionMatrix(Z),$=this.localClippingEnabled,W=y1.init(this.clippingPlanes,$,O),f=f1.get(w,m.length),f.init(),m.push(f),oi(w,O,0,g.sortObjects),f.finish(),g.sortObjects===!0&&f.sort(G,_),W===!0&&y1.beginShadows();let U=u.state.shadowsArray;if(M1.render(U,w,O),W===!0&&y1.endShadows(),this.info.autoReset===!0&&this.info.reset(),C1.render(f,w),u.setupLights(g.physicallyCorrectLights),O.isArrayCamera){let q=O.cameras;for(let Q=0,z1=q.length;Q<z1;Q++){let m1=q[Q];li(f,w,m1,m1.viewport)}}else li(f,w,O);C!==null&&(N1.updateMultisampleRenderTarget(C),N1.updateRenderTargetMipmap(C)),w.isScene===!0&&w.onAfterRender(g,w,O),h1.buffers.depth.setTest(!0),h1.buffers.depth.setMask(!0),h1.buffers.color.setMask(!0),h1.setPolygonOffset(!1),c1.resetDefaultState(),b=-1,A=null,v.pop(),v.length>0?u=v[v.length-1]:u=null,m.pop(),m.length>0?f=m[m.length-1]:f=null};function oi(w,O,U,q){if(w.visible===!1)return;if(w.layers.test(O.layers)){if(w.isGroup)U=w.renderOrder;else if(w.isLOD)w.autoUpdate===!0&&w.update(O);else if(w.isLight)u.pushLight(w),w.castShadow&&u.pushShadow(w);else if(w.isSprite){if(!w.frustumCulled||I.intersectsSprite(w)){q&&j.setFromMatrixPosition(w.matrixWorld).applyMatrix4(Z);let m1=E.update(w),p1=w.material;p1.visible&&f.push(w,m1,p1,U,j.z,null)}}else if(w.isImmediateRenderObject)q&&j.setFromMatrixPosition(w.matrixWorld).applyMatrix4(Z),f.push(w,null,w.material,U,j.z,null);else if((w.isMesh||w.isLine||w.isPoints)&&(w.isSkinnedMesh&&w.skeleton.frame!==L1.render.frame&&(w.skeleton.update(),w.skeleton.frame=L1.render.frame),!w.frustumCulled||I.intersectsObject(w))){q&&j.setFromMatrixPosition(w.matrixWorld).applyMatrix4(Z);let m1=E.update(w),p1=w.material;if(Array.isArray(p1)){let S1=m1.groups;for(let R1=0,D1=S1.length;R1<D1;R1++){let T1=S1[R1],x1=p1[T1.materialIndex];x1&&x1.visible&&f.push(w,m1,x1,U,j.z,T1)}}else p1.visible&&f.push(w,m1,p1,U,j.z,null)}}let z1=w.children;for(let m1=0,p1=z1.length;m1<p1;m1++)oi(z1[m1],O,U,q)}function li(w,O,U,q){let Q=w.opaque,z1=w.transmissive,m1=w.transparent;u.setupLightsView(U),z1.length>0&&Rc(Q,O,U),q&&h1.viewport(L.copy(q)),Q.length>0&&Vt(Q,O,U),z1.length>0&&Vt(z1,O,U),m1.length>0&&Vt(m1,O,U)}function Rc(w,O,U){if(J===null){let m1=s===!0&&s1.isWebGL2===!0?R6:A2;J=new m1(1024,1024,{generateMipmaps:!0,type:X.convert(Ae)!==null?Ae:ie,minFilter:qe,magFilter:Z1,wrapS:t2,wrapT:t2})}let q=g.getRenderTarget();g.setRenderTarget(J),g.clear();let Q=g.toneMapping;g.toneMapping=U2,Vt(w,O,U),g.toneMapping=Q,N1.updateMultisampleRenderTarget(J),N1.updateRenderTargetMipmap(J),g.setRenderTarget(q)}function Vt(w,O,U){let q=O.isScene===!0?O.overrideMaterial:null;for(let Q=0,z1=w.length;Q<z1;Q++){let m1=w[Q],p1=m1.object,S1=m1.geometry,R1=q===null?m1.material:q,D1=m1.group;p1.layers.test(U.layers)&&Bc(p1,O,U,S1,R1,D1)}}function Bc(w,O,U,q,Q,z1){if(w.onBeforeRender(g,O,U,q,Q,z1),w.modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,w.matrixWorld),w.normalMatrix.getNormalMatrix(w.modelViewMatrix),w.isImmediateRenderObject){let m1=hi(U,O,Q,w);h1.setMaterial(Q),c1.reset(),le(w,m1)}else Q.transparent===!0&&Q.side===I2?(Q.side=B1,Q.needsUpdate=!0,g.renderBufferDirect(U,O,q,Q,w,z1),Q.side=ze,Q.needsUpdate=!0,g.renderBufferDirect(U,O,q,Q,w,z1),Q.side=I2):g.renderBufferDirect(U,O,q,Q,w,z1);w.onAfterRender(g,O,U,q,Q,z1)}function K6(w,O,U){O.isScene!==!0&&(O=Y);let q=v1.get(w),Q=u.state.lights,z1=u.state.shadowsArray,m1=Q.state.version,p1=K.getParameters(w,Q.state,z1,O,U),S1=K.getProgramCacheKey(p1),R1=q.programs;q.environment=w.isMeshStandardMaterial?O.environment:null,q.fog=O.fog,q.envMap=(w.isMeshStandardMaterial?F2:j1).get(w.envMap||q.environment),R1===void 0&&(w.addEventListener("dispose",Ne),R1=new Map,q.programs=R1);let D1=R1.get(S1);if(D1!==void 0){if(q.currentProgram===D1&&q.lightsStateVersion===m1)return ui(w,p1),D1}else p1.uniforms=K.getUniforms(w),w.onBuild(p1,g),w.onBeforeCompile(p1,g),D1=K.acquireProgram(p1,S1),R1.set(S1,D1),q.uniforms=p1.uniforms;let T1=q.uniforms;(!w.isShaderMaterial&&!w.isRawShaderMaterial||w.clipping===!0)&&(T1.clippingPlanes=y1.uniform),ui(w,p1),q.needsLights=kc(w),q.lightsStateVersion=m1,q.needsLights&&(T1.ambientLightColor.value=Q.state.ambient,T1.lightProbe.value=Q.state.probe,T1.directionalLights.value=Q.state.directional,T1.directionalLightShadows.value=Q.state.directionalShadow,T1.spotLights.value=Q.state.spot,T1.spotLightShadows.value=Q.state.spotShadow,T1.rectAreaLights.value=Q.state.rectArea,T1.ltc_1.value=Q.state.rectAreaLTC1,T1.ltc_2.value=Q.state.rectAreaLTC2,T1.pointLights.value=Q.state.point,T1.pointLightShadows.value=Q.state.pointShadow,T1.hemisphereLights.value=Q.state.hemi,T1.directionalShadowMap.value=Q.state.directionalShadowMap,T1.directionalShadowMatrix.value=Q.state.directionalShadowMatrix,T1.spotShadowMap.value=Q.state.spotShadowMap,T1.spotShadowMatrix.value=Q.state.spotShadowMatrix,T1.pointShadowMap.value=Q.state.pointShadowMap,T1.pointShadowMatrix.value=Q.state.pointShadowMatrix);let x1=D1.getUniforms(),i4=ce.seqWithValue(x1.seq,T1);return q.currentProgram=D1,q.uniformsList=i4,D1}function ui(w,O){let U=v1.get(w);U.outputEncoding=O.outputEncoding,U.instancing=O.instancing,U.skinning=O.skinning,U.morphTargets=O.morphTargets,U.morphNormals=O.morphNormals,U.numClippingPlanes=O.numClippingPlanes,U.numIntersection=O.numClipIntersection,U.vertexAlphas=O.vertexAlphas,U.vertexTangents=O.vertexTangents}function hi(w,O,U,q){O.isScene!==!0&&(O=Y),N1.resetTextureUnits();let Q=O.fog,z1=U.isMeshStandardMaterial?O.environment:null,m1=C===null?g.outputEncoding:C.texture.encoding,p1=(U.isMeshStandardMaterial?F2:j1).get(U.envMap||z1),S1=U.vertexColors===!0&&!!q.geometry&&!!q.geometry.attributes.color&&q.geometry.attributes.color.itemSize===4,R1=!!q.geometry&&!!q.geometry.attributes.tangent,D1=!!q.geometry&&!!q.geometry.morphAttributes.position,T1=!!q.geometry&&!!q.geometry.morphAttributes.normal,x1=v1.get(U),i4=u.state.lights;if(W===!0&&($===!0||w!==A)){let n2=w===A&&U.id===b;y1.setState(U,w,n2)}let X1=!1;U.version===x1.__version?(x1.needsLights&&x1.lightsStateVersion!==i4.state.version||x1.outputEncoding!==m1||q.isInstancedMesh&&x1.instancing===!1||!q.isInstancedMesh&&x1.instancing===!0||q.isSkinnedMesh&&x1.skinning===!1||!q.isSkinnedMesh&&x1.skinning===!0||x1.envMap!==p1||U.fog&&x1.fog!==Q||x1.numClippingPlanes!==void 0&&(x1.numClippingPlanes!==y1.numPlanes||x1.numIntersection!==y1.numIntersection)||x1.vertexAlphas!==S1||x1.vertexTangents!==R1||x1.morphTargets!==D1||x1.morphNormals!==T1)&&(X1=!0):(X1=!0,x1.__version=U.version);let Fe=x1.currentProgram;X1===!0&&(Fe=K6(U,O,q));let R2=!1,a4=!1,Re=!1,Q1=Fe.getUniforms(),Z2=x1.uniforms;if(h1.useProgram(Fe.program)&&(R2=!0,a4=!0,Re=!0),U.id!==b&&(b=U.id,a4=!0),R2||A!==w){if(Q1.setValue(N,"projectionMatrix",w.projectionMatrix),s1.logarithmicDepthBuffer&&Q1.setValue(N,"logDepthBufFC",2/(Math.log(w.far+1)/Math.LN2)),A!==w&&(A=w,a4=!0,Re=!0),U.isShaderMaterial||U.isMeshPhongMaterial||U.isMeshToonMaterial||U.isMeshStandardMaterial||U.envMap){let n2=Q1.map.cameraPosition;n2!==void 0&&n2.setValue(N,j.setFromMatrixPosition(w.matrixWorld))}(U.isMeshPhongMaterial||U.isMeshToonMaterial||U.isMeshLambertMaterial||U.isMeshBasicMaterial||U.isMeshStandardMaterial||U.isShaderMaterial)&&Q1.setValue(N,"isOrthographic",w.isOrthographicCamera===!0),(U.isMeshPhongMaterial||U.isMeshToonMaterial||U.isMeshLambertMaterial||U.isMeshBasicMaterial||U.isMeshStandardMaterial||U.isShaderMaterial||U.isShadowMaterial||q.isSkinnedMesh)&&Q1.setValue(N,"viewMatrix",w.matrixWorldInverse)}if(q.isSkinnedMesh){Q1.setOptional(N,q,"bindMatrix"),Q1.setOptional(N,q,"bindMatrixInverse");let n2=q.skeleton;n2&&(s1.floatVertexTextures?(n2.boneTexture===null&&n2.computeBoneTexture(),Q1.setValue(N,"boneTexture",n2.boneTexture,N1),Q1.setValue(N,"boneTextureSize",n2.boneTextureSize)):Q1.setOptional(N,n2,"boneMatrices"))}return(a4||x1.receiveShadow!==q.receiveShadow)&&(x1.receiveShadow=q.receiveShadow,Q1.setValue(N,"receiveShadow",q.receiveShadow)),a4&&(Q1.setValue(N,"toneMappingExposure",g.toneMappingExposure),x1.needsLights&&Pc(Z2,Re),Q&&U.fog&&t1.refreshFogUniforms(Z2,Q),t1.refreshMaterialUniforms(Z2,U,S,H,J),ce.upload(N,x1.uniformsList,Z2,N1)),U.isShaderMaterial&&U.uniformsNeedUpdate===!0&&(ce.upload(N,x1.uniformsList,Z2,N1),U.uniformsNeedUpdate=!1),U.isSpriteMaterial&&Q1.setValue(N,"center",q.center),Q1.setValue(N,"modelViewMatrix",q.modelViewMatrix),Q1.setValue(N,"normalMatrix",q.normalMatrix),Q1.setValue(N,"modelMatrix",q.matrixWorld),Fe}function Pc(w,O){w.ambientLightColor.needsUpdate=O,w.lightProbe.needsUpdate=O,w.directionalLights.needsUpdate=O,w.directionalLightShadows.needsUpdate=O,w.pointLights.needsUpdate=O,w.pointLightShadows.needsUpdate=O,w.spotLights.needsUpdate=O,w.spotLightShadows.needsUpdate=O,w.rectAreaLights.needsUpdate=O,w.hemisphereLights.needsUpdate=O}function kc(w){return w.isMeshLambertMaterial||w.isMeshToonMaterial||w.isMeshPhongMaterial||w.isMeshStandardMaterial||w.isShadowMaterial||w.isShaderMaterial&&w.lights===!0}this.getActiveCubeFace=function(){return p},this.getActiveMipmapLevel=function(){return d},this.getRenderTarget=function(){return C},this.setRenderTarget=function(w,O=0,U=0){C=w,p=O,d=U,w&&v1.get(w).__webglFramebuffer===void 0&&N1.setupRenderTarget(w);let q=null,Q=!1,z1=!1;if(w){let p1=w.texture;(p1.isDataTexture3D||p1.isDataTexture2DArray)&&(z1=!0);let S1=v1.get(w).__webglFramebuffer;w.isWebGLCubeRenderTarget?(q=S1[O],Q=!0):w.isWebGLMultisampleRenderTarget?q=v1.get(w).__webglMultisampledFramebuffer:q=S1,L.copy(w.viewport),y.copy(w.scissor),z=w.scissorTest}else L.copy(V).multiplyScalar(S).floor(),y.copy(R).multiplyScalar(S).floor(),z=T;if(h1.bindFramebuffer(N.FRAMEBUFFER,q)&&s1.drawBuffers){let p1=!1;if(w)if(w.isWebGLMultipleRenderTargets){let S1=w.texture;if(D.length!==S1.length||D[0]!==N.COLOR_ATTACHMENT0){for(let R1=0,D1=S1.length;R1<D1;R1++)D[R1]=N.COLOR_ATTACHMENT0+R1;D.length=S1.length,p1=!0}}else(D.length!==1||D[0]!==N.COLOR_ATTACHMENT0)&&(D[0]=N.COLOR_ATTACHMENT0,D.length=1,p1=!0);else(D.length!==1||D[0]!==N.BACK)&&(D[0]=N.BACK,D.length=1,p1=!0);p1&&(s1.isWebGL2?N.drawBuffers(D):g1.get("WEBGL_draw_buffers").drawBuffersWEBGL(D))}if(h1.viewport(L),h1.scissor(y),h1.setScissorTest(z),Q){let p1=v1.get(w.texture);N.framebufferTexture2D(N.FRAMEBUFFER,N.COLOR_ATTACHMENT0,N.TEXTURE_CUBE_MAP_POSITIVE_X+O,p1.__webglTexture,U)}else if(z1){let p1=v1.get(w.texture),S1=O||0;N.framebufferTextureLayer(N.FRAMEBUFFER,N.COLOR_ATTACHMENT0,p1.__webglTexture,U||0,S1)}b=-1},this.readRenderTargetPixels=function(w,O,U,q,Q,z1,m1){if(!(w&&w.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let p1=v1.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&m1!==void 0&&(p1=p1[m1]),p1){h1.bindFramebuffer(N.FRAMEBUFFER,p1);try{let S1=w.texture,R1=S1.format,D1=S1.type;if(R1!==K1&&X.convert(R1)!==N.getParameter(N.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let T1=D1===Ae&&(g1.has("EXT_color_buffer_half_float")||s1.isWebGL2&&g1.has("EXT_color_buffer_float"));if(D1!==ie&&X.convert(D1)!==N.getParameter(N.IMPLEMENTATION_COLOR_READ_TYPE)&&!(D1===ae&&(s1.isWebGL2||g1.has("OES_texture_float")||g1.has("WEBGL_color_buffer_float")))&&!T1){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}N.checkFramebufferStatus(N.FRAMEBUFFER)===N.FRAMEBUFFER_COMPLETE?O>=0&&O<=w.width-q&&U>=0&&U<=w.height-Q&&N.readPixels(O,U,q,Q,X.convert(R1),X.convert(D1),z1):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{let S1=C!==null?v1.get(C).__webglFramebuffer:null;h1.bindFramebuffer(N.FRAMEBUFFER,S1)}}},this.copyFramebufferToTexture=function(w,O,U=0){let q=Math.pow(2,-U),Q=Math.floor(O.image.width*q),z1=Math.floor(O.image.height*q),m1=X.convert(O.format);s1.isWebGL2&&(m1===N.RGB&&(m1=N.RGB8),m1===N.RGBA&&(m1=N.RGBA8)),N1.setTexture2D(O,0),N.copyTexImage2D(N.TEXTURE_2D,U,m1,w.x,w.y,Q,z1,0),h1.unbindTexture()},this.copyTextureToTexture=function(w,O,U,q=0){let Q=O.image.width,z1=O.image.height,m1=X.convert(U.format),p1=X.convert(U.type);N1.setTexture2D(U,0),N.pixelStorei(N.UNPACK_FLIP_Y_WEBGL,U.flipY),N.pixelStorei(N.UNPACK_PREMULTIPLY_ALPHA_WEBGL,U.premultiplyAlpha),N.pixelStorei(N.UNPACK_ALIGNMENT,U.unpackAlignment),O.isDataTexture?N.texSubImage2D(N.TEXTURE_2D,q,w.x,w.y,Q,z1,m1,p1,O.image.data):O.isCompressedTexture?N.compressedTexSubImage2D(N.TEXTURE_2D,q,w.x,w.y,O.mipmaps[0].width,O.mipmaps[0].height,m1,O.mipmaps[0].data):N.texSubImage2D(N.TEXTURE_2D,q,w.x,w.y,m1,p1,O.image),q===0&&U.generateMipmaps&&N.generateMipmap(N.TEXTURE_2D),h1.unbindTexture()},this.copyTextureToTexture3D=function(w,O,U,q,Q=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let z1=w.max.x-w.min.x+1,m1=w.max.y-w.min.y+1,p1=w.max.z-w.min.z+1,S1=X.convert(q.format),R1=X.convert(q.type),D1;if(q.isDataTexture3D)N1.setTexture3D(q,0),D1=N.TEXTURE_3D;else if(q.isDataTexture2DArray)N1.setTexture2DArray(q,0),D1=N.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}N.pixelStorei(N.UNPACK_FLIP_Y_WEBGL,q.flipY),N.pixelStorei(N.UNPACK_PREMULTIPLY_ALPHA_WEBGL,q.premultiplyAlpha),N.pixelStorei(N.UNPACK_ALIGNMENT,q.unpackAlignment);let T1=N.getParameter(N.UNPACK_ROW_LENGTH),x1=N.getParameter(N.UNPACK_IMAGE_HEIGHT),i4=N.getParameter(N.UNPACK_SKIP_PIXELS),X1=N.getParameter(N.UNPACK_SKIP_ROWS),Fe=N.getParameter(N.UNPACK_SKIP_IMAGES),R2=U.isCompressedTexture?U.mipmaps[0]:U.image;N.pixelStorei(N.UNPACK_ROW_LENGTH,R2.width),N.pixelStorei(N.UNPACK_IMAGE_HEIGHT,R2.height),N.pixelStorei(N.UNPACK_SKIP_PIXELS,w.min.x),N.pixelStorei(N.UNPACK_SKIP_ROWS,w.min.y),N.pixelStorei(N.UNPACK_SKIP_IMAGES,w.min.z),U.isDataTexture||U.isDataTexture3D?N.texSubImage3D(D1,Q,O.x,O.y,O.z,z1,m1,p1,S1,R1,R2.data):U.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),N.compressedTexSubImage3D(D1,Q,O.x,O.y,O.z,z1,m1,p1,S1,R2.data)):N.texSubImage3D(D1,Q,O.x,O.y,O.z,z1,m1,p1,S1,R1,R2),N.pixelStorei(N.UNPACK_ROW_LENGTH,T1),N.pixelStorei(N.UNPACK_IMAGE_HEIGHT,x1),N.pixelStorei(N.UNPACK_SKIP_PIXELS,i4),N.pixelStorei(N.UNPACK_SKIP_ROWS,X1),N.pixelStorei(N.UNPACK_SKIP_IMAGES,Fe),Q===0&&q.generateMipmaps&&N.generateMipmap(D1),h1.unbindTexture()},this.initTexture=function(w){N1.setTexture2D(w,0),h1.unbindTexture()},this.resetState=function(){p=0,d=0,C=null,h1.reset(),c1.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}var O6=class extends G1{constructor(){super();this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}};O6.prototype.isScene=!0;var J4=class extends G1{constructor(e,t=1){super();this.type="Light",this.color=new b1(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}};J4.prototype.isLight=!0;var G6=class extends J4{constructor(e,t){super(e,t);this.type="AmbientLight"}};G6.prototype.isAmbientLight=!0;var _c=new P1,Sc=new P,Lc=new P,ai=class{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new A1(512,512),this.map=null,this.mapPass=null,this.matrix=new P1,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new v4,this._frameExtents=new A1(1,1),this._viewportCount=1,this._viewports=[new O1(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,i=this.matrix;Sc.setFromMatrixPosition(e.matrixWorld),t.position.copy(Sc),Lc.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Lc),t.updateMatrixWorld(),_c.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_c),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}};var q6=class extends ai{constructor(){super(new $1(50,1,.5,500));this.focus=1}updateMatrices(e){let t=this.camera,i=ot*2*e.angle*this.focus,a=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(i!==t.fov||a!==t.aspect||r!==t.far)&&(t.fov=i,t.aspect=a,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}};q6.prototype.isSpotLightShadow=!0;var W6=class extends J4{constructor(e,t,i=0,a=Math.PI/3,r=0,s=1){super(e,t);this.type="SpotLight",this.position.copy(G1.DefaultUp),this.updateMatrix(),this.target=new G1,this.distance=i,this.angle=a,this.penumbra=r,this.decay=s,this.shadow=new q6}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}};W6.prototype.isSpotLight=!0;var j6=class extends z2{constructor(e){super();this.type="ShadowMaterial",this.color=new b1(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}};j6.prototype.isShadowMaterial=!0;var X6=class extends Tt.Component{constructor(e){super();this.plugin=e;this.event=new Tt.Events;this.container=createDiv("renderer-container");this.shadows=!0;this.iterations=0;this.frame_rate=1/60;this.animating=!1;this.factory=new Dc(this.WIDTH,this.HEIGHT,this.plugin);this.colors={ambient:16777215,spotlight:16777215};this.display={currentWidth:null,currentHeight:null,containerWidth:null,containerHeight:null,aspect:null,scale:null};this.cameraHeight={max:null,close:null,medium:null,far:null};this.extraFrames=X6.DEFAULT_EXTRA_FRAMES;this.renderer=new wc({alpha:!0,antialias:!0})}get WIDTH(){return this.container.clientWidth/2}get HEIGHT(){return this.container.clientHeight/2}get ASPECT(){return this.WIDTH/this.HEIGHT}get scale(){return(this.WIDTH*this.WIDTH+this.HEIGHT*this.HEIGHT)/13}get canvasEl(){return this.renderer?this.renderer.domElement:null}setDice(e){this.animating&&(this.unload(),this.load()),this.stack=e,this.current=this.factory.getDice(this.stack,{x:(Math.random()*2-1)*this.WIDTH,y:-(Math.random()*2-1)*this.HEIGHT}),this.scene.add(...[...this.current.values()].flat().map(t=>t.geometry)),this.world.add(...[...this.current.values()].flat())}onload(){this.addChild(this.factory),this.container.empty(),this.container.style.opacity="1",document.body.appendChild(this.container),this.renderer.shadowMap.enabled=this.shadows,this.renderer.shadowMap.type=n6,this.container.appendChild(this.renderer.domElement),this.renderer.setClearColor(0,0),this.scene=new O6,this.initScene(),this.registerDomEvent(window,"resize",()=>{this.initScene()}),this.initWorld()}async start(){return new Promise(async(e,t)=>{this.current.size||t(),this.event.on("throw-finished",i=>{e(i)}),this.event.on("error",i=>{t(i)}),this.animating=!0,this.extraFrames=X6.DEFAULT_EXTRA_FRAMES,this.render()})}enableShadows(){this.shadows=!0,this.renderer&&(this.renderer.shadowMap.enabled=this.shadows),this.light&&(this.light.castShadow=this.shadows),this.desk&&(this.desk.receiveShadow=this.shadows)}disableShadows(){this.shadows=!1,this.renderer&&(this.renderer.shadowMap.enabled=this.shadows),this.light&&(this.light.castShadow=this.shadows),this.desk&&(this.desk.receiveShadow=this.shadows)}get mw(){return Math.max(this.WIDTH,this.HEIGHT)}setDimensions(e){this.display.currentWidth=this.container.clientWidth/2,this.display.currentHeight=this.container.clientHeight/2,e?(this.display.containerWidth=e.w,this.display.containerHeight=e.h):(this.display.containerWidth=this.display.currentWidth,this.display.containerHeight=this.display.currentHeight),this.display.aspect=Math.min(this.display.currentWidth/this.display.containerWidth,this.display.currentHeight/this.display.containerHeight),this.display.scale=Math.sqrt(this.display.containerWidth*this.display.containerWidth+this.display.containerHeight*this.display.containerHeight)/13,this.renderer.setSize(this.display.currentWidth*2,this.display.currentHeight*2),this.cameraHeight.max=this.display.currentHeight/this.display.aspect/Math.tan(10*Math.PI/180),this.factory.width=this.display.currentWidth,this.factory.height=this.display.currentHeight,this.cameraHeight.medium=this.cameraHeight.max/1.5,this.cameraHeight.far=this.cameraHeight.max,this.cameraHeight.close=this.cameraHeight.max/2}initCamera(){this.camera&&this.scene.remove(this.camera),this.camera=new $1(20,this.display.currentWidth/this.display.currentHeight,1,this.cameraHeight.max*1.3),this.camera.position.z=this.cameraHeight.far,this.camera.lookAt(new P(0,0,0))}initLighting(){let e=Math.max(this.display.containerWidth,this.display.containerHeight);this.light&&this.scene.remove(this.light),this.ambientLight&&this.scene.remove(this.ambientLight),this.light=new W6(this.colors.spotlight,.25),this.light.position.set(-e/2,e/2,e*3),this.light.target.position.set(0,0,0),this.light.distance=e*5,this.light.angle=Math.PI/4,this.light.castShadow=this.shadows,this.light.shadow.camera.near=e/10,this.light.shadow.camera.far=e*5,this.light.shadow.camera.fov=50,this.light.shadow.bias=.001,this.light.shadow.mapSize.width=1024,this.light.shadow.mapSize.height=1024,this.scene.add(this.light),this.ambientLight=new G6(16777215,.9),this.scene.add(this.ambientLight)}initDesk(){this.desk&&this.scene.remove(this.desk);let e=new j6;e.opacity=.5,this.desk=new r2(new g4(this.display.containerWidth*6,this.display.containerHeight*6,1,1),e),this.desk.receiveShadow=this.shadows,this.scene.add(this.desk)}initScene(){this.setDimensions(),this.initCamera(),this.initLighting(),this.initDesk(),this.camera.updateProjectionMatrix(),this.renderer.render(this.scene,this.camera)}initWorld(){this.world=new Ec(this.WIDTH,this.HEIGHT),this.iterations=0}getResultsForRoller(e){let t=this.current.get(e),i=t.filter(s=>s instanceof m4&&s.isPercentile),a=[];for(let s=0;s<i.length;s+=2)a.push(i.slice(s,s+2));return[...t.filter(s=>!(s instanceof m4&&s.isPercentile)).map(s=>s.getUpsideValue()).filter(s=>s),...a.map(([s,c])=>{let o=s.getUpsideValue();if(!c)return o;let l=c.getUpsideValue();return o===10&&l==10?100:(l==10&&(l=0),o==10&&(o=0),o*10+l)}).filter(s=>s)]}returnResult(){for(let e of this.stack.dynamic){if(!this.current.has(e))continue;let t=this.getResultsForRoller(e);!t||e.setResults(t)}this.event.trigger("throw-finished",this.stack)}unrender(e=this){e.container.style.opacity="0",e.registerInterval(window.setTimeout(()=>{e.animating=!1,e.unload()},1e3))}render(){if(this.throwFinished())if(this.extraFrames>10)this.extraFrames--;else{try{for(let[e,t]of this.current)if(!(!e.modifiers.size||!this.getResultsForRoller(e))&&e.modifiers.has("r")){let a=t.filter(r=>(e.conditions.length||e.conditions.push({operator:"=",comparer:e.faces.min,value:""}),e.checkCondition(r.result,e.conditions)&&r.rerolled<e.modifiers.get("r").data));if(a.length){a.forEach(r=>{r.rerolled++;let s={x:(Math.random()*2-1)*this.WIDTH,y:-(Math.random()*2-1)*this.HEIGHT};r.vector=r.generateVector(s),r.create(),r.set(),r.stopped=!1}),this.animation=requestAnimationFrame(()=>this.render());return}}if(this.returnResult(),this.plugin.data.renderTime)this.registerInterval(window.setTimeout(()=>this.unrender(),this.plugin.data.renderTime));else{let t=function(){e.unrender(e),document.body.removeEventListener("click",t)},e=this;this.registerDomEvent(document.body,"click",t)}}catch(e){this.event.trigger("error",e)}return}this.animation=requestAnimationFrame(()=>this.render()),this.world.step(this.frame_rate),this.iterations++,this.current.forEach(e=>{e.map(t=>t.set())}),this.renderer.render(this.scene,this.camera)}dispose(...e){e.forEach(t=>{"dispose"in t&&t.dispose(),t.children&&this.dispose(...t.children)})}detach(){}onunload(){cancelAnimationFrame(this.animation),this.container.detach(),this.container.empty(),this.renderer.domElement.detach(),this.renderer.dispose(),this.factory.dispose(),this.ambientLight.dispose(),this.light.dispose(),this.scene.children.forEach(e=>this.dispose(e)),this.scene.remove(this.scene,...this.scene.children,...[...this.current.values()].flat().map(e=>e.geometry)),this.current.forEach(e=>{e.forEach(t=>{[...Array.isArray(t.geometry.material)?t.geometry.material:[t.geometry.material]].forEach(a=>a&&a.dispose()),this.world.world.removeBody(t.body)})}),this.current=new Map}onThrowFinished(){}throwFinished(){let e=!0,t=4;if(this.iterations<10/this.frame_rate)for(let i of this.current.values())for(let a of i){if(a.stopped===!0)continue;let r=a.body.angularVelocity,s=a.body.velocity;if(Math.abs(r.x)<t&&Math.abs(r.y)<t&&Math.abs(r.z)<t&&Math.abs(s.x)<t&&Math.abs(s.y)<t&&Math.abs(s.z)<t){if(a.stopped){if(this.iterations-a.stopped>3){a.stopped=!0;continue}}else a.stopped=this.iterations;e=!1}else a.stopped=void 0,e=!1}return e}},Ht=X6;Ht.DEFAULT_EXTRA_FRAMES=30;var Ec=class{constructor(e,t){this.WIDTH=e;this.HEIGHT=t;this.world=new D0({gravity:new M(0,0,-9.82*400)});this.ground=this.getPlane();this.diceMaterial=new ve;this.deskMaterial=new ve;this.barrierMaterial=new ve;this.world.broadphase=new Xt,this.world.allowSleep=!0,this.ground.position.set(0,0,0),this.world.addBody(this.ground),this.buildWalls()}add(...e){e.forEach(t=>{this.world.addBody(t.body)})}step(e=1/60){let t=performance.now()/1e3;if(!this.lastCallTime)this.world.step(e);else{let i=t-this.lastCallTime;this.world.step(e,i)}this.lastCallTime=t}buildWalls(){this.world.addContactMaterial(new me(this.deskMaterial,this.diceMaterial,{friction:.01,restitution:.5,contactEquationRelaxation:3,contactEquationStiffness:1e8})),this.world.addContactMaterial(new me(this.barrierMaterial,this.diceMaterial,{friction:.01,restitution:1,contactEquationRelaxation:3,contactEquationStiffness:1e8})),this.world.addContactMaterial(new me(this.diceMaterial,this.diceMaterial,{friction:.1,restitution:.5,contactEquationRelaxation:3,contactEquationStiffness:1e8})),this.world.addBody(new a1({allowSleep:!1,mass:0,shape:new Ie,material:this.deskMaterial}));let e=new a1({allowSleep:!1,mass:0,shape:new Ie,material:this.barrierMaterial});e.quaternion.setFromAxisAngle(new M(1,0,0),Math.PI/2),e.position.set(0,this.HEIGHT*.93,0),this.world.addBody(e),e=new a1({allowSleep:!1,mass:0,shape:new Ie,material:this.barrierMaterial}),e.quaternion.setFromAxisAngle(new M(1,0,0),-Math.PI/2),e.position.set(0,-this.HEIGHT*.93,0),this.world.addBody(e),e=new a1({allowSleep:!1,mass:0,shape:new Ie,material:this.barrierMaterial}),e.quaternion.setFromAxisAngle(new M(0,1,0),-Math.PI/2),e.position.set(this.WIDTH*.93,0,0),this.world.addBody(e),e=new a1({allowSleep:!1,mass:0,shape:new Ie,material:this.barrierMaterial}),e.quaternion.setFromAxisAngle(new M(0,1,0),Math.PI/2),e.position.set(-this.WIDTH*.93,0,0),this.world.addBody(e)}getPlane(){return new a1({type:a1.STATIC,shape:new Ie})}},Dc=class extends Tt.Component{constructor(e,t,i){super();this.width=e;this.height=t;this.plugin=i;this.dice={};this.buildDice()}get colors(){return{diceColor:this.plugin.data.diceColor,textColor:this.plugin.data.textColor}}updateColors(){this.dispose(),this.buildDice()}onunload(){this.dispose()}disposeChildren(...e){e.forEach(t=>{"dispose"in t&&t.dispose(),t.children&&this.disposeChildren(...t.children)})}dispose(){for(let e of Object.values(this.dice))this.disposeChildren(e.geometry.children)}getDiceForRoller(e,t){let i=[];switch(e.faces.max){case 4:{i.push(...new Array(e.rolls).fill(0).map(a=>new W3(this.width,this.height,this.clone("d4"),t)));break}case 1:case 6:{i.push(...new Array(e.rolls).fill(0).map(a=>new Qe(this.width,this.height,this.clone("ability"),t))),i.push(...new Array(e.rolls).fill(0).map(a=>new Qe(this.width,this.height,this.clone("boost"),t))),i.push(...new Array(e.rolls).fill(0).map(a=>new Qe(this.width,this.height,this.clone("setback"),t))),i.push(...new Array(e.rolls).fill(0).map(a=>new Qe(this.width,this.height,this.clone("challenge"),t))),i.push(...new Array(e.rolls).fill(0).map(a=>new Qe(this.width,this.height,this.clone("difficulty"),t))),i.push(...new Array(e.rolls).fill(0).map(a=>new Qe(this.width,this.height,this.clone("proficiency"),t)));break}case 8:{i.push(...new Array(e.rolls).fill(0).map(a=>new q3(this.width,this.height,this.clone("d8"),t)));break}case 10:{i.push(...new Array(e.rolls).fill(0).map(a=>new m4(this.width,this.height,this.clone("d10"),t)));break}case 12:{i.push(...new Array(e.rolls).fill(0).map(a=>new G3(this.width,this.height,this.clone("d12"),t)));break}case 20:{i.push(...new Array(e.rolls).fill(0).map(a=>new O3(this.width,this.height,this.clone("d20"),t)));break}case 100:{i.push(...new Array(e.rolls).fill(0).map(a=>[new m4(this.width,this.height,this.clone("d100"),t,!0),new m4(this.width,this.height,this.clone("d10"),t,!0)]).flat());break}}return i}getDice(e,t){let i=new Map;for(let a of e.dynamic){let r=this.getDiceForRoller(a,t);r.length&&i.set(a,r)}return i}clone(e){if(!(e in this.dice))throw new Error("That dice type does not exist!");return this.dice[e].clone()}buildDice(){this.dice.d100=new L3(this.width,this.height,this.colors).create(),this.dice.d20=new w3(this.width,this.height,this.colors).create(),this.dice.d12=new _3(this.width,this.height,this.colors).create(),this.dice.d10=new S3(this.width,this.height,this.colors).create(),this.dice.d8=new E3(this.width,this.height,this.colors).create(),this.dice.d6=new D3(this.width,this.height,this.colors).create(),this.dice.d4=new H3(this.width,this.height,this.colors).create(),this.dice.fudge=new T3(this.width,this.height,this.colors).create(),this.dice.boost=new I3(this.width,this.height,this.colors).create(),this.dice.ability=new B3(this.width,this.height,this.colors).create(),this.dice.difficulty=new P3(this.width,this.height,this.colors).create(),this.dice.challenge=new F3(this.width,this.height,this.colors).create(),this.dice.proficiency=new N3(this.width,this.height,this.colors).create(),this.dice.setback=new U3(this.width,this.height,this.colors).create()}};var Vc=Y2(Hc());var ri=class{constructor(e){this.table=e}parse(e){let t=e.length,i=this.table,a=[],r=[],s=0;for(;s<t;){let c=e[s++];switch(c.value){case"(":r.unshift(c);break;case")":for(e[s]&&e[s].type=="dice"&&/^d/.test(e[s].value)&&(e[s].parenedDice=!0);r.length&&(c=r.shift(),c.value!=="(");)a.push(c);if(c.value!=="(")throw new Error("Mismatched parentheses.");break;default:if(i.hasOwnProperty(c.value)){for(;r.length;){let o=r[0];if(o.value==="(")break;let l=i[c.value],h=l.precedence,f=i[o.value].precedence;if(h>f||h===f&&l.associativity==="right")break;a.push(r.shift())}r.unshift(c)}else a.push(c)}}for(;r.length;){let c=r.shift();if(c.value!=="(")a.push(c);else throw new Error("Mismatched parentheses.")}return a}};var Iu=/(?:\d+[Dd])?#(?:[\p{Letter}\p{Emoji_Presentation}\w/-]+)(?:\|(?:[+-]))?(?:\|(?:[^+-]+))?/u,Uu=/(?:\d+[Dd])?#(?:[\p{Letter}\p{Emoji_Presentation}\w/-]+)(?:\|(?:[+-]))?\|link/u;var Ou=/(?:\d+[Dd])?(?:\[.*\]\(|\[\[)(?:.+?)#?\^(?:.+?)(?:\)|\]\])\|?(?:.+)?/u,Gu=/(?:\d+[Dd])?(?:\[.*\]\(|\[\[)(?:.+)(?:\)|\]\])\|?(?:.+)?/u,qu=/(?:\d+[Dd])?(?:\[.*\]\(|\[\[)(?:.+)(?:\)|\]\])\|line/u,Wu=/[\(\^\+\-\*\/\)]/u,ju=/(?:\d+|\b)[Dd](?:\[?(?:-?\d+[ \t]?,)?[ \t]?(?:-?\d+|%|F)\]?|\b)/u,Xu=/(?:=|=!|<|>|<=|>=|=<|=>|-=|=-)\d+/u,Y6=class{constructor(e){this.plugin=e;this.lexer=Vc.compile({WS:[{match:/[ \t]+/u},{match:/[{}]+/u}],table:Ou,line:qu,section:Gu,link:Uu,tag:Iu,condition:Xu,kl:{match:/kl\d*/u,value:this.clampInfinite},kh:[{match:/kh\d*/u,value:this.clampInfinite},{match:/k\d*/u,value:this.clampInfinite}],dh:{match:/dh\d*/u,value:this.clampInfinite},dl:[{match:/dl\d*/u,value:this.clampInfinite}],"!!":{match:/!!(?:i|\d+)?/u,value:this.clampInfinite},"!":{match:/!(?:i|\d+)?/u,value:this.clampInfinite},r:{match:/r(?:i|\d+)?/u,value:this.clampInfinite},stunt:/1[Dd]S/u,"%":/\d+[Dd]\d+%/u,dice:[{match:ju,value:e=>{let{roll:t=this.plugin.data.defaultRoll,faces:i=this.plugin.data.defaultFace}=e.match(/(?<roll>\d+)?[Dd](?<faces>\[?(?:-?\d+[ \t]?,)?[ \t]?(?:-?\d+|%|F)\]?)?/).groups;return`${t}d${i}`}},{match:/\d+/u},{match:/\b[A-Za-z][A-Za-z0-9_]+\b/u,value:e=>this.plugin.inline.has(e)?`${this.plugin.inline.get(e)}`:e}],math:Wu});let t={precedence:3,associativity:"right"},i={precedence:2,associativity:"left"},a={precedence:1,associativity:"left"};this.parser=new ri({"+":a,"-":a,"*":i,"/":i,"^":t})}clampInfinite(e){return/i$/.test(e)?"100":e.replace(/^\D+/g,"")}parse(e){let t=Array.from(this.lexer.reset(e));return this.lexer.reset(),this.parser.parse(this.transform(t))}transform(e){e=e.filter(i=>i.type!="WS");let t=[];for(let i of e)if(i.type=="condition"&&t.length>0){let a=t[t.length-1];a.conditions||(a.conditions=[]);let[r,s,c]=i.value.match(/(?<operator>=|=!|<|>|<=|>=|=<|=>|\-=|=\-)(?<comparer>\d+)/)??[];a.conditions.push({operator:s,comparer:Number(c),value:i.value})}else t.push(i);return t}getTypeFromLexemes(e){return e.some(({type:t})=>t==="table")?"table":e.some(({type:t})=>t==="section")?"section":e.some(({type:t})=>t==="tag")?"tag":e.some(({type:t})=>t==="link")?"link":e.some(({type:t})=>t==="line")?"line":"dice"}};String.prototype.matchAll=String.prototype.matchAll||function*(e){let t=e.global?e.flags:e.flags+"g",i=new RegExp(e,t),a;for(;a=i.exec(this);)yield a};var Wt={returnAllTags:!0,rollLinksForTags:!1,copyContentButton:!0,customFormulas:[],displayFormulaForMod:!0,displayResultsInline:!1,displayLookupRoll:!0,formulas:{},persistResults:!1,results:{},defaultRoll:1,defaultFace:100,renderer:!1,renderAllDice:!1,renderTime:2e3,diceColor:"#202020",textColor:"#ffffff",showLeafOnStartup:!0,showDice:!0},ni=class extends l2.Plugin{constructor(){super(...arguments);this.fileMap=new Map;this.inline=new Map;this.operators={"+":(e,t)=>e+t,"-":(e,t)=>e-t,"*":(e,t)=>e*t,"/":(e,t)=>e/t,"^":(e,t)=>Math.pow(e,t)};this.parser=new Y6(this);this.persistingFiles=new Set}async onload(){console.log("DiceRoller plugin loaded"),this.data=Object.assign({},Wt,await this.loadData()),this.renderer=new Ht(this),this.addSettingTab(new qt(this.app,this)),this.registerView(s4,i=>new Be(this,i)),this.app.workspace.onLayoutReady(()=>this.addDiceView(!0)),this.registerEvent(this.app.workspace.on("dice-roller:update-colors",()=>{this.renderer.factory.updateColors()})),this.registerEvent(this.app.workspace.on("dice-roller:render-dice",async i=>{let a=await this.getRoller(i,"external");if(!(a instanceof pe)){new l2.Notice("The Dice View only supports dice rolls.");return}if(await a.roll(),!a.dice.length){new l2.Notice("Invalid formula.");return}try{this.renderRoll(a)}catch(r){new l2.Notice("There was an error rendering the roll."),console.error(r)}this.app.workspace.trigger("dice-roller:rendered-result",a.result)})),this.addCommand({id:"open-view",name:"Open Dice View",checkCallback:i=>{if(!this.view)return i||this.addDiceView(),!0}}),this.addCommand({id:"reroll",name:"Re-roll Dice",checkCallback:i=>{let a=this.app.workspace.getActiveViewOfType(l2.MarkdownView);if(a&&a.getMode()==="preview"&&this.fileMap.has(a.file))return i||this.fileMap.get(a.file).forEach(s=>{s.roll()}),!0}});let e=l0(pi).html[0];(0,l2.addIcon)(fe,e);let t=l0(mi).html[0];(0,l2.addIcon)(de,t),this.registerMarkdownPostProcessor(async(i,a)=>{let r=i.querySelectorAll("code");if(!r.length)return;let s=a.sourcePath,c=a.getSectionInfo(i),o=a.getSectionInfo(i)?.lineStart,l=this.app.vault.getAbstractFileByPath(a.sourcePath);if(!l||!(l instanceof l2.TFile))return;let h={};for(let f=0;f<r.length;f++){let u=r.item(f);if(/^dice\-mod:\s*([\s\S]+)\s*?/.test(u.innerText)&&c)try{let[m,v]=u.innerText.match(/^dice\-mod:\s*([\s\S]+)\s*?/),g=this.data.displayFormulaForMod;v.includes("|noform")&&(g=!1),v=v.replace("|noform","");let x=this.getRoller(v,a.sourcePath);x.on("new-result",async()=>{let p=(await this.app.vault.cachedRead(l)).split(`
`),d=p.slice(c.lineStart,c.lineEnd+1),C=x.replacer;if(!C){new l2.Notice("Dice Roller: There was an issue modifying the file.");return}let b=g?`${x.inlineText} **${C}**`:`${C}`;d=d.join(`
`).replace(`\`${m}\``,b).split(`
`),p.splice(c.lineStart,c.lineEnd-c.lineStart+1,...d),await this.app.vault.modify(l,p.join(`
`))}),await x.roll();continue}catch(m){console.error(m)}if(!!/^dice(?:\+|\-|\-mod)?:\s*([\s\S]+)\s*?/.test(u.innerText))try{let[,m]=u.innerText.match(/^dice(?:\+|\-|\-mod)?:\s*([\s\S]+)\s*?/),v=this.getRoller(m,a.sourcePath),g=this.data.results?.[s]?.[o]?.[f]??null;(this.data.persistResults&&!/dice\-/.test(u.innerText)||/dice\+/.test(u.innerText))&&(this.persistingFiles.add(a.sourcePath),h[f]=v,v.save=!0);let x=async()=>{await v.roll(),v.save&&g&&await v.applyResult(g),u.replaceWith(v.containerEl)};v.loaded?await x():v.on("loaded",async()=>{await x()}),this.fileMap.has(l)||this.fileMap.set(l,[]),this.fileMap.set(l,[...this.fileMap.get(l),v]);let p=this.app.workspace.getActiveViewOfType(l2.MarkdownView);if(p&&this.fileMap.has(l)&&this.fileMap.get(l).length===1){let d=this,C=u0(p,{onUnloadFile:function(b){return async function(A){return A==l&&(d.fileMap.delete(l),C()),await b.call(this,A)}}});p.register(C),p.register(()=>this.fileMap.delete(l))}}catch(m){console.error(m),new l2.Notice(`There was an error parsing the dice string: ${u.innerText}.

${m}`,5e3);continue}}if(s in this.data.results&&(this.data.results[s][o]={}),Object.entries(h).length){let f=this.app.workspace.getActiveViewOfType(l2.MarkdownView);if(f){let u=this,m=u0(f,{onUnloadFile:function(v){return async function(g){if(g=l){u.persistingFiles.has(s)&&(u.persistingFiles.delete(s),u.data.results[s]={});for(let x in h){let p=h[x],d=a.getSectionInfo(i)?.lineStart;if(d==null)continue;let C={[d]:{...u.data.results[s]?.[d]??{},[x]:p.toResult()}};u.data.results[s]={...u.data.results[s]??{},...C},await u.saveSettings()}}return m(),await v.call(this,g)}}});f.register(m),f.register(async()=>{this.persistingFiles.has(s)&&(this.persistingFiles.delete(s),this.data.results[s]={});for(let v in h){let g=h[v],x=a.getSectionInfo(i)?.lineStart;if(x==null)continue;let p={[x]:{...this.data.results[s]?.[x]??{},[v]:g.toResult()}};this.data.results[s]={...this.data.results[s]??{},...p},await this.saveSettings()}})}}}),this.app.workspace.onLayoutReady(async()=>{await this.registerDataviewInlineFields()})}get canUseDataview(){return this.app.plugins.getPlugin("dataview")!=null}get dataview(){return this.app.plugins.getPlugin("dataview")}async dataviewReady(){return new Promise(e=>{this.canUseDataview||e(!1),this.dataview.api&&e(!0),this.registerEvent(this.app.metadataCache.on("dataview:api-ready",()=>{e(!0)}))})}get view(){let e=this.app.workspace.getLeavesOfType(s4),t=e.length?e[0]:null;if(t&&t.view&&t.view instanceof Be)return t.view}async addDiceView(e=!1){e&&!this.data.showLeafOnStartup||this.app.workspace.getLeavesOfType(s4).length||await this.app.workspace.getRightLeaf(!1).setViewState({type:s4})}async registerDataviewInlineFields(){if(!this.canUseDataview)return;await this.dataviewReady(),this.dataview.index.pages.forEach(({fields:t})=>{for(let[i,a]of t)typeof a!="number"||Number.isNaN(a)||a==null||this.inline.set(i,a)}),this.registerEvent(this.app.metadataCache.on("dataview:metadata-change",(t,i)=>{if(t==="update"){let a=this.dataview.api.page(i.path);if(!a)return;for(let r in a){let s=a[r];typeof s!="number"||Number.isNaN(s)||s==null||this.inline.set(r,s)}}}))}async renderRoll(e){this.addChild(this.renderer),this.renderer.setDice(e),await this.renderer.start(),e.recalculate()}async parseDice(e,t){let i=this.getRoller(e,t);return{result:await i.roll(),roller:i}}clearEmpties(e){for(var t in e)!e[t]||typeof e[t]!="object"||(this.clearEmpties(e[t]),Object.keys(e[t]).length===0&&delete e[t])}async saveSettings(){this.clearEmpties(this.data.results),await this.saveData(this.data)}get dataview_regex(){let e=Array.from(this.inline.keys());return e.length?new RegExp(`(${e.join("|")})`,"g"):null}getRoller(e,t,i=this.data.showDice){let a=e.includes("|nodice")?!1:i;e=(0,Nc.decode)(e.replace("|nodice","").replace("\\|","|")),e in this.data.formulas&&(e=this.data.formulas[e]);let r=this.parse(e);switch(this.getTypeFromLexemes(r)){case"dice":return new pe(this,e,r,a);case"table":return new v0(this,e,r[0],t,a);case"section":return new Gt(this,e,r[0],t,a);case"tag":{if(!this.canUseDataview)throw new Error("Tags are only supported with the Dataview plugin installed.");return new d0(this,e,r[0],t,a)}case"link":return new p0(this,e,r[0],t,a);case"line":return new m0(this,e,r[0],t,a)}}getTypeFromLexemes(e){return e.some(({type:t})=>t==="table")?"table":e.some(({type:t})=>t==="section")?"section":e.some(({type:t})=>t==="tag")?"tag":e.some(({type:t})=>t==="link")?"link":e.some(({type:t})=>t==="line")?"line":"dice"}onunload(){console.log("DiceRoller unloaded"),this.app.workspace.getLeavesOfType(s4).forEach(e=>e.detach()),"__THREE__"in window&&delete window.__THREE__,this.renderer.unload(),this.app.workspace.trigger("dice-roller:unload")}parse(e){return this.parser.parse(e)}};
/*!
 * Font Awesome Free 5.15.3 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 */
/*!
 * Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 */
/*! https://mths.be/he v1.2.0 by @mathias | MIT license */
//# sourceMappingURL=main.js.map
